{"meta":{"version":1,"warehouse":"2.2.0"},"models":{"Asset":[{"_id":"themes/next/source/404.html","path":"404.html","modified":0,"renderable":1},{"_id":"source/img/2.jpg","path":"img/2.jpg","modified":0,"renderable":0},{"_id":"source/img/3.jpg","path":"img/3.jpg","modified":0,"renderable":0},{"_id":"source/img/6.png","path":"img/6.png","modified":0,"renderable":0},{"_id":"source/img/markdown-eg.jpeg","path":"img/markdown-eg.jpeg","modified":0,"renderable":0},{"_id":"source/img/me.jpg","path":"img/me.jpg","modified":0,"renderable":0},{"_id":"source/img/touxiang.jpg","path":"img/touxiang.jpg","modified":0,"renderable":0},{"_id":"source/img/vuex-state-1.png","path":"img/vuex-state-1.png","modified":0,"renderable":0},{"_id":"source/img/1.png","path":"img/1.png","modified":0,"renderable":0},{"_id":"source/img/5.png","path":"img/5.png","modified":0,"renderable":0},{"_id":"themes/next/source/css/main.styl","path":"css/main.styl","modified":0,"renderable":1},{"_id":"themes/next/source/images/algolia_logo.svg","path":"images/algolia_logo.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/avatar.gif","path":"images/avatar.gif","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","path":"images/cc-by-nc-nd.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","path":"images/cc-by-nc-sa.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc.svg","path":"images/cc-by-nc.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nd.svg","path":"images/cc-by-nd.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by.svg","path":"images/cc-by.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-sa.svg","path":"images/cc-by-sa.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-zero.svg","path":"images/cc-zero.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/favicon.png","path":"images/favicon.png","modified":0,"renderable":1},{"_id":"themes/next/source/images/loading.gif","path":"images/loading.gif","modified":0,"renderable":1},{"_id":"themes/next/source/images/placeholder.gif","path":"images/placeholder.gif","modified":0,"renderable":1},{"_id":"themes/next/source/images/quote-l.svg","path":"images/quote-l.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/quote-r.svg","path":"images/quote-r.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/searchicon.png","path":"images/searchicon.png","modified":0,"renderable":1},{"_id":"themes/next/source/images/touxiang.jpg","path":"images/touxiang.jpg","modified":0,"renderable":1},{"_id":"source/img/4.png","path":"img/4.png","modified":0,"renderable":0},{"_id":"source/img/vuex-state-2.png","path":"img/vuex-state-2.png","modified":0,"renderable":0},{"_id":"source/img/FiraCode.jpg","path":"img/FiraCode.jpg","modified":0,"renderable":0},{"_id":"source/img/vuex-state-3.png","path":"img/vuex-state-3.png","modified":0,"renderable":0},{"_id":"themes/next/source/js/src/DigitalRain.js","path":"js/src/DigitalRain.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/affix.js","path":"js/src/affix.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/algolia-search.js","path":"js/src/algolia-search.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/bootstrap.js","path":"js/src/bootstrap.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/clipboard-use.js","path":"js/src/clipboard-use.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/clipboard.min.js","path":"js/src/clipboard.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/exturl.js","path":"js/src/exturl.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/hook-duoshuo.js","path":"js/src/hook-duoshuo.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/js.cookie.js","path":"js/src/js.cookie.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/motion.js","path":"js/src/motion.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/post-details.js","path":"js/src/post-details.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/scroll-cookie.js","path":"js/src/scroll-cookie.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/scrollspy.js","path":"js/src/scrollspy.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/sidebar-clock.js","path":"js/src/sidebar-clock.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/utils.js","path":"js/src/utils.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.css","path":"lib/algolia-instant-search/instantsearch.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/canvas-nest/canvas-nest.min.js","path":"lib/canvas-nest/canvas-nest.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/canvas-ribbon/canvas-ribbon.js","path":"lib/canvas-ribbon/canvas-ribbon.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fastclick/LICENSE","path":"lib/fastclick/LICENSE","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fastclick/README.md","path":"lib/fastclick/README.md","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fastclick/bower.json","path":"lib/fastclick/bower.json","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/HELP-US-OUT.txt","path":"lib/font-awesome/HELP-US-OUT.txt","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/bower.json","path":"lib/font-awesome/bower.json","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/CONTRIBUTING.md","path":"lib/jquery_lazyload/CONTRIBUTING.md","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/README.md","path":"lib/jquery_lazyload/README.md","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/bower.json","path":"lib/jquery_lazyload/bower.json","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.lazyload.js","path":"lib/jquery_lazyload/jquery.lazyload.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.scrollstop.js","path":"lib/jquery_lazyload/jquery.scrollstop.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-barber-shop.min.css","path":"lib/pace/pace-theme-barber-shop.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-big-counter.min.css","path":"lib/pace/pace-theme-big-counter.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-bounce.min.css","path":"lib/pace/pace-theme-bounce.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-center-atom.min.css","path":"lib/pace/pace-theme-center-atom.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-center-circle.min.css","path":"lib/pace/pace-theme-center-circle.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-center-radar.min.css","path":"lib/pace/pace-theme-center-radar.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-center-simple.min.css","path":"lib/pace/pace-theme-center-simple.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-corner-indicator.min.css","path":"lib/pace/pace-theme-corner-indicator.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-flash.min.css","path":"lib/pace/pace-theme-flash.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-loading-bar.min.css","path":"lib/pace/pace-theme-loading-bar.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-mac-osx.min.css","path":"lib/pace/pace-theme-mac-osx.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-minimal.min.css","path":"lib/pace/pace-theme-minimal.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace.min.js","path":"lib/pace/pace.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/three/canvas_lines.min.js","path":"lib/three/canvas_lines.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/three/canvas_sphere.min.js","path":"lib/three/canvas_sphere.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/three/three-waves.min.js","path":"lib/three/three-waves.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/bower.json","path":"lib/velocity/bower.json","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-fill-left.min.css","path":"lib/pace/pace-theme-fill-left.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.min.js","path":"lib/velocity/velocity.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.ui.js","path":"lib/velocity/velocity.ui.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.ui.min.js","path":"lib/velocity/velocity.ui.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery/index.js","path":"lib/jquery/index.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/han.css","path":"lib/Han/dist/han.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/han.min.css","path":"lib/Han/dist/han.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/han.min.js","path":"lib/Han/dist/han.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/cursor/explosion.min.js","path":"js/src/cursor/explosion.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/cursor/fireworks.js","path":"js/src/cursor/fireworks.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/cursor/love.min.js","path":"js/src/cursor/love.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/cursor/text.js","path":"js/src/cursor/text.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/schemes/pisces.js","path":"js/src/schemes/pisces.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.css","path":"lib/fancybox/source/jquery.fancybox.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.js","path":"lib/fancybox/source/jquery.fancybox.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.pack.js","path":"lib/fancybox/source/jquery.fancybox.pack.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.js","path":"lib/fastclick/lib/fastclick.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.min.js","path":"lib/fastclick/lib/fastclick.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css.map","path":"lib/font-awesome/css/font-awesome.css.map","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.min.css","path":"lib/font-awesome/css/font-awesome.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.min.js","path":"lib/ua-parser-js/dist/ua-parser.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.pack.js","path":"lib/ua-parser-js/dist/ua-parser.pack.js","modified":0,"renderable":1},{"_id":"themes/next/source/images/qrCode.png","path":"images/qrCode.png","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff","path":"lib/font-awesome/fonts/fontawesome-webfont.woff","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff2","path":"lib/font-awesome/fonts/fontawesome-webfont.woff2","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.js","path":"lib/velocity/velocity.js","modified":0,"renderable":1},{"_id":"source/img/1.jpg","path":"img/1.jpg","modified":0,"renderable":0},{"_id":"themes/next/source/lib/Han/dist/font/han-space.otf","path":"lib/Han/dist/font/han-space.otf","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han.otf","path":"lib/Han/dist/font/han.otf","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han-space.woff","path":"lib/Han/dist/font/han-space.woff","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han.woff2","path":"lib/Han/dist/font/han.woff2","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han.woff","path":"lib/Han/dist/font/han.woff","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/FontAwesome.otf","path":"lib/font-awesome/fonts/FontAwesome.otf","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/han.js","path":"lib/Han/dist/han.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.eot","path":"lib/font-awesome/fonts/fontawesome-webfont.eot","modified":0,"renderable":1},{"_id":"source/img/comb.png","path":"img/comb.png","modified":0,"renderable":0},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.js","path":"lib/algolia-instant-search/instantsearch.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/three/three.min.js","path":"lib/three/three.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.svg","path":"lib/font-awesome/fonts/fontawesome-webfont.svg","modified":0,"renderable":1},{"_id":"source/img/alpha-bg.jpg","path":"img/alpha-bg.jpg","modified":0,"renderable":0}],"Cache":[{"_id":"themes/next/.bowerrc","hash":"334da94ca6f024d60d012cc26ea655681e724ad8","modified":1624619995483},{"_id":"themes/next/.editorconfig","hash":"211d2c92bfdddb3e81ea946f4ca7a539f150f4da","modified":1624619995483},{"_id":"themes/next/.gitattributes","hash":"8454b9313cb1a97b63fb87e2d29daee497ce6249","modified":1624619995484},{"_id":"themes/next/.gitignore","hash":"b935cc0e5b099ebd343ca1766e02f65138c13dd0","modified":1624619995485},{"_id":"themes/next/.hound.yml","hash":"289dcf5bfe92dbd680d54d6e0668f41c9c9c0c78","modified":1624619995485},{"_id":"themes/next/.jshintrc","hash":"b7d23f2ce8d99fa073f22f9960605f318acd7710","modified":1624619995486},{"_id":"themes/next/.stylintrc","hash":"3b7f9785e9ad0dab764e1c535b40df02f4ff5fd6","modified":1624619995486},{"_id":"themes/next/.travis.yml","hash":"6674fbdfe0d0c03b8a04527ffb8ab66a94253acd","modified":1624619995486},{"_id":"themes/next/.javascript_ignore","hash":"cd250ad74ca22bd2c054476456a73d9687f05f87","modified":1624619995486},{"_id":"themes/next/LICENSE","hash":"ec44503d7e617144909e54533754f0147845f0c5","modified":1624619995486},{"_id":"themes/next/README.cn.md","hash":"59e323ce21535d561507c9ecc984b7c4dcb61514","modified":1624619995487},{"_id":"themes/next/README.md","hash":"52bad95ac4c88371d3ae9d9ea6e0e14b8c723edf","modified":1624619995487},{"_id":"themes/next/_config.yml","hash":"469ecd91a1d6c842bbbf85ade3233d85dafab75b","modified":1624619995487},{"_id":"themes/next/bower.json","hash":"63c38f50fb54b25bf5101f566189f9e5b3a6ef0e","modified":1624619995488},{"_id":"themes/next/gulpfile.coffee","hash":"412defab3d93d404b7c26aaa0279e2e586e97454","modified":1624619995488},{"_id":"themes/next/package.json","hash":"b4778c51eed41e511acf34c22fe2f81aa4929aae","modified":1624619995514},{"_id":"themes/next/.github/browserstack_logo.png","hash":"a6c43887f64a7f48a2814e3714eaa1215e542037","modified":1624619995485},{"_id":"themes/next/languages/de.yml","hash":"fd02d9c2035798d5dc7c1a96b4c3e24b05b31a47","modified":1624619995488},{"_id":"themes/next/languages/default.yml","hash":"b3bcd8934327448a43d9bfada5dd11b1b8c1402e","modified":1624619995488},{"_id":"themes/next/languages/en.yml","hash":"b3bcd8934327448a43d9bfada5dd11b1b8c1402e","modified":1624619995489},{"_id":"themes/next/languages/fr-FR.yml","hash":"efeeb55d5c4add54ad59a612fc0630ee1300388c","modified":1624619995489},{"_id":"themes/next/languages/id.yml","hash":"dccae33e2a5b3c9f11c0e05ec4a7201af1b25745","modified":1624619995489},{"_id":"themes/next/languages/it.yml","hash":"a215d016146b1bd92cef046042081cbe0c7f976f","modified":1624619995489},{"_id":"themes/next/languages/ja.yml","hash":"37f954e47a3bc669620ca559e3edb3b0072a4be5","modified":1624619995490},{"_id":"themes/next/languages/ko.yml","hash":"dc8f3e8c64eb7c4bb2385025b3006b8efec8b31d","modified":1624619995490},{"_id":"themes/next/languages/pt-BR.yml","hash":"568d494a1f37726a5375b11452a45c71c3e2852d","modified":1624619995490},{"_id":"themes/next/languages/pt.yml","hash":"2efcd240c66ab1a122f061505ca0fb1e8819877b","modified":1624619995491},{"_id":"themes/next/languages/ru.yml","hash":"e33ee44e80f82e329900fc41eb0bb6823397a4d6","modified":1624619995491},{"_id":"themes/next/languages/zh-Hans.yml","hash":"ae9632032aeae59934659a7d47f5ade8ed70b76d","modified":1624619995491},{"_id":"themes/next/languages/zh-hk.yml","hash":"19fb3c159fa6f4d58237e5a1a3857048a6add9a6","modified":1624619995491},{"_id":"themes/next/languages/zh-tw.yml","hash":"64a16181fcc3779ea335792c22fda3b5202e3e9e","modified":1624619995491},{"_id":"themes/next/layout/_layout.swig","hash":"a7868b548a459dab7b296fd6d3e8593108352b77","modified":1624619995493},{"_id":"themes/next/layout/archive.swig","hash":"9a2c14874a75c7085d2bada5e39201d3fc4fd2b4","modified":1624619995512},{"_id":"themes/next/layout/category.swig","hash":"3cbb3f72429647411f9e85f2544bdf0e3ad2e6b2","modified":1624619995512},{"_id":"themes/next/layout/index.swig","hash":"555a357ecf17128db4e29346c92bb6298e66547a","modified":1624619995512},{"_id":"themes/next/layout/page.swig","hash":"dbff0302b4bfabb51556a197bf65190eb30361f0","modified":1624619995513},{"_id":"themes/next/layout/post.swig","hash":"dd24412a52311c85415054738e711c810653688d","modified":1624619995513},{"_id":"themes/next/layout/schedule.swig","hash":"87ad6055df01fa2e63e51887d34a2d8f0fbd2f5a","modified":1624619995513},{"_id":"themes/next/layout/tag.swig","hash":"34e1c016cbdf94a31f9c5d494854ff46b2a182e9","modified":1624619995513},{"_id":"themes/next/scripts/codeblock.js","hash":"307c07b4dc00f0cb37ba6b3f2dcbc564a5ed8efb","modified":1624619995514},{"_id":"themes/next/scripts/events.js","hash":"b2a3d142ab9aa54990c74057010cfaa6494655fc","modified":1624619995514},{"_id":"themes/next/scripts/merge-configs.js","hash":"5758f8f3f12d17bc80da65bb808a20b3a8aae186","modified":1624619995515},{"_id":"themes/next/scripts/merge.js","hash":"39b84b937b2a9608b94e5872349a47200e1800ff","modified":1624619995515},{"_id":"themes/next/source/404.html","hash":"9ce7edc47cd7f94f374ea3d93b31e1906e15d64f","modified":1624619995518},{"_id":"themes/next/test/.jshintrc","hash":"c9fca43ae0d99718e45a6f5ce736a18ba5fc8fb6","modified":1624619995601},{"_id":"themes/next/test/helpers.js","hash":"f25e7f3265eb5a6e1ccbb5e5012fa9bebf134105","modified":1624619995602},{"_id":"themes/next/test/intern.js","hash":"db90b1063356727d72be0d77054fdc32fa882a66","modified":1624619995602},{"_id":"source/_posts/HTML5原生拖放.md","hash":"8324d9591511381d5133b98eb5dc9933385b090d","modified":1624619995438},{"_id":"source/_posts/Mac本地服务器使用.md","hash":"d594bab952fb46c1125dac61ac3b17462b147e40","modified":1624619995438},{"_id":"source/_posts/Video小记.md","hash":"a598ca370138de373316f0e73ad0aa12bf920261","modified":1624619995438},{"_id":"source/_posts/Vue-Cli-3-使用感受.md","hash":"912cb3c541ae3ac75cbc9fb29cd1176c322ee573","modified":1624619995440},{"_id":"source/_posts/css伪元素.md","hash":"b4a09b798bb398d7149046e59a6709eefef6692a","modified":1624619995440},{"_id":"source/_posts/github和gitlab下fork后同步个人仓库和源仓库.md","hash":"1d52b8f3c3fd54e2fc786c2e9a6fa760f5663bf3","modified":1624619995440},{"_id":"source/_posts/git命令.md","hash":"dd1c83fa994b01d5f2f01d8f3ce57a2efac761aa","modified":1624619995441},{"_id":"source/_posts/grid.md","hash":"351baaa3d19fc813a465a6d810706ba96f5840a5","modified":1624619995441},{"_id":"source/_posts/hello-world.md","hash":"af6617d368ac2184c09efe6e2a151f9950e82336","modified":1624619995441},{"_id":"source/_posts/html清除缓存.md","hash":"ae89645ff1594d21a0fe1eec1acc511d2c63fd1f","modified":1624619995441},{"_id":"source/_posts/markdown语法.md","hash":"b9b4a826b03e98da7bdf525cd92b8226308ef298","modified":1624619995442},{"_id":"themes/next/.github/CONTRIBUTING.md","hash":"5adfad3ef1b870063e621bc0838268eb2c7c697a","modified":1624619995484},{"_id":"source/_posts/particlesJs开发手册.md","hash":"4d44882c8de685cc17a2d3b594f1c6c1bd423ecc","modified":1624619995442},{"_id":"source/_posts/promise.md","hash":"7a5221b45eabce49a512aff60da602c1a46b6b85","modified":1624619995442},{"_id":"source/_posts/swiper-animate的使用.md","hash":"584dccaee36083dd6d29dbf204bc736deed8c1c1","modified":1624619995442},{"_id":"source/_posts/vscode配置.md","hash":"216e66db969c417f43e89e1be6cd2e9ae4181826","modified":1624619995443},{"_id":"source/_posts/vue-cli3-x项目图片压缩.md","hash":"e2f6e92793f0b622cd6a3d3eb9fe79733db3c950","modified":1624619995443},{"_id":"themes/next/.github/ISSUE_TEMPLATE.md","hash":"81dbdf09454cb26f9fd2e3ed1bf3df5af8a528fd","modified":1624619995484},{"_id":"source/_posts/vuex4.md","hash":"c3dd91c50010308b69acf166414688090d93bd4b","modified":1624619995443},{"_id":"themes/next/.github/PULL_REQUEST_TEMPLATE.md","hash":"1228506a940114288d61812bfe60c045a0abeac1","modified":1624619995485},{"_id":"source/_posts/从0开始开发vue单文件项目.md","hash":"eb5181f3c8d6ce190b3568a03faf9ca529245f39","modified":1624619995444},{"_id":"source/_posts/从零搭建Vue UI组件库(一).md","hash":"da881e6113b4fafef89a640cbc604ee8024e4f73","modified":1624619995444},{"_id":"source/_posts/从零搭建Vue UI组件库(三).md","hash":"3e65e053764967bb7e90c6ed9ddf0d5170a9fd02","modified":1624619995444},{"_id":"source/_posts/从零搭建Vue UI组件库(二).md","hash":"a455ca1a4eb844e5864c6a74bba2dac0a4cae8ad","modified":1624619995444},{"_id":"source/_posts/从零搭建Vue UI组件库(六).md","hash":"1fa91fc2c0d790c42238a79f06922f9c8bde54c0","modified":1624619995445},{"_id":"source/_posts/从零搭建Vue UI组件库(五).md","hash":"8d5d37c0fd685e34a388bf1e6dac6c465ac9baa7","modified":1624619995445},{"_id":"source/_posts/从零搭建Vue UI组件库(四).md","hash":"0bf7fdaa67be786ad3ea9d963ad62e6025ec4ed0","modified":1624619995445},{"_id":"source/_posts/使用SASS.md","hash":"418aacda1ad8b4dbdbf0fe0dcdb3c21d9de76a7a","modified":1624619995446},{"_id":"source/_posts/使用webstrom.md","hash":"c7302b264e2a2b0c0ae83a50c60e819c4e8af885","modified":1624619995446},{"_id":"source/_posts/全局设置npm镜像.md","hash":"2e2b0f3a89d578a677d3379c82f87b9c58c959af","modified":1624619995447},{"_id":"source/_posts/关于sticky-footer兼容性最好的一种解决方案.md","hash":"9b6a6c34bb1ceaafc10c70a62ad7c1932feb0251","modified":1624619995447},{"_id":"source/_posts/关于vue-awesome-swiper以及vue-cli升级随笔.md","hash":"7e7243e8b137593e945ee04e71ac30029d8d853e","modified":1624619995447},{"_id":"source/_posts/关于vue（全家桶）的一些使用心得.md","hash":"e455df461cdbf98fbda9dd9103475ff73c473014","modified":1624619995448},{"_id":"source/_posts/关于webpack的那些事.md","hash":"ce5a3ba659101399618a2a3bb5c82a2d4d47871b","modified":1624619995448},{"_id":"source/_posts/关于蜂窝状图片的实现.md","hash":"231563d51be9f4cab536d196dbe6a49dacc16bdd","modified":1624619995448},{"_id":"source/_posts/前端配合微信授权.md","hash":"5ae25aeca12d6b66874c297fe232263b16bae11e","modified":1624619995449},{"_id":"source/_posts/建立前端开发规范.md","hash":"c19b4b63c739ff4112275ef34dd30b67c199dd3a","modified":1624619995449},{"_id":"source/_posts/微信浏览器播放音乐的坑.md","hash":"a50ea3f634d3900b45153c81c22f23e526459612","modified":1624619995449},{"_id":"source/_posts/模块.md","hash":"441e6b39b6769a773b19b2752da0f78fbec508f0","modified":1624619995449},{"_id":"source/_posts/监听vuex中state变化.md","hash":"b42e7ecf5708d4e375ca178125126a9fc899bb89","modified":1624619995450},{"_id":"source/_posts/管理团队代码.md","hash":"f5fb89c00e5a11a14eb047dd2c27eeca59df0dc9","modified":1624619995450},{"_id":"source/_posts/试图详解Array.reduce.md","hash":"6f59eb3c858932d805c3d5a06637dd0a2e6c7919","modified":1624619995450},{"_id":"source/_posts/详解vue-use的使用.md","hash":"9caeb84afc786ff4298472fb726e99608acccd72","modified":1624619995451},{"_id":"source/about/index.md","hash":"11fb90487591b3b81690f58ca16fdecde0682751","modified":1624619995451},{"_id":"source/categories/index.md","hash":"b576d78f17858ee135193f8d4828dbcf28707e93","modified":1624619995451},{"_id":"source/img/2.jpg","hash":"1fe54b5d5d3fb5f788a9cdbbcecc030139d57b37","modified":1624619995454},{"_id":"source/img/3.jpg","hash":"955df2a6fe9fc308c54317281005350582d4b279","modified":1624619995455},{"_id":"source/img/6.png","hash":"f9ec58c2153ad332f3e332bb669ada6b6860c20f","modified":1624619995457},{"_id":"source/img/markdown-eg.jpeg","hash":"a279a201c1c8432b5a8bd64e836099211d1d5103","modified":1624619995479},{"_id":"source/img/me.jpg","hash":"2357ae34b48e5d1804db02f40f462601d4ebfcfb","modified":1624619995479},{"_id":"source/img/touxiang.jpg","hash":"f9c908dcdcba2356c1631a239cd7e3a881a2d6af","modified":1624619995480},{"_id":"source/img/vuex-state-1.png","hash":"7aacddcf7e72b6e97ae3a0ec52a9f40a9b076263","modified":1624619995480},{"_id":"source/tags/index.md","hash":"d0a643362204921fff626185de5cc612d5dd0f17","modified":1624619995483},{"_id":"themes/next/layout/_custom/sidebar.swig","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1624619995493},{"_id":"themes/next/source/fonts/.gitkeep","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1624619995549},{"_id":"source/img/1.png","hash":"6ef01df6b75c16e281ca3ba7b4157bd35cad3fba","modified":1624619995454},{"_id":"source/img/5.png","hash":"10d793d9580aa963b167395fa7a51f4ab202aca6","modified":1624619995457},{"_id":"themes/next/layout/_custom/custom.swig","hash":"fc88095dd12ec89417030ae5b23a07f74b48f941","modified":1624619995492},{"_id":"themes/next/layout/_custom/header.swig","hash":"ba8ab5a0280b953aa97435ff8946cbcbb2755a27","modified":1624619995492},{"_id":"themes/next/layout/_custom/sidebar-clock.swig","hash":"12adf31ace9822536730d6ec7185296684880db6","modified":1624619995493},{"_id":"themes/next/layout/_macro/passage-end-tag.swig","hash":"0639b725f169c551ed3f233a03c6d8a3bb991779","modified":1624619995493},{"_id":"themes/next/layout/_macro/post-collapse.swig","hash":"8c56dd26157cbc580ae41d97ac34b90ab48ced3f","modified":1624619995494},{"_id":"themes/next/layout/_macro/post-copyright.swig","hash":"0f59a51b5cea3e8a7c078db486626cddc2978622","modified":1624619995494},{"_id":"themes/next/layout/_macro/post.swig","hash":"b5676a587380e48aa749f7e5e98b64ad34e66113","modified":1624619995494},{"_id":"themes/next/layout/_macro/reward.swig","hash":"357d86ec9586705bfbb2c40a8c7d247a407db21a","modified":1624619995495},{"_id":"themes/next/layout/_macro/sidebar.swig","hash":"7141419249df6765a330719a350e8585e1e22ee6","modified":1624619995495},{"_id":"themes/next/layout/_macro/wechat-subscriber.swig","hash":"e2e4eae391476da994045ed4c7faf5e05aca2cd7","modified":1624619995495},{"_id":"themes/next/layout/_partials/comments.swig","hash":"44353d90a679f9fa9132b8a04172604ff6ad18f5","modified":1624619995495},{"_id":"themes/next/layout/_partials/footer.swig","hash":"85d77f5b74d287c06558ea4cd075cfbaa5a89cb4","modified":1624619995496},{"_id":"themes/next/layout/_partials/head.swig","hash":"71040aa738c57c24f8b703875d58ab7a262fe075","modified":1624619995496},{"_id":"themes/next/layout/_partials/header.swig","hash":"c54b32263bc8d75918688fb21f795103b3f57f03","modified":1624619995497},{"_id":"themes/next/layout/_partials/page-header.swig","hash":"77c61e0baea3544df361b7338c3cd13dc84dde22","modified":1624619995497},{"_id":"themes/next/layout/_partials/pagination.swig","hash":"1634fb887842698e01ff6e632597fe03c75d2d01","modified":1624619995497},{"_id":"themes/next/layout/_partials/search.swig","hash":"b4ebe4a52a3b51efe549dd1cdee846103664f5eb","modified":1624619995497},{"_id":"themes/next/layout/_scripts/DigitalRain.swig","hash":"b68645a725872b47f5eccff645426e8291189ae5","modified":1624619995500},{"_id":"themes/next/layout/_scripts/boostrap.swig","hash":"c0f5a0955f69ca4ed9ee64a2d5f8aa75064935ad","modified":1624619995500},{"_id":"themes/next/layout/_scripts/commons.swig","hash":"13fd395f8da8f20e103a6ff9f763915dc06bc103","modified":1624619995501},{"_id":"themes/next/layout/_scripts/vendors.swig","hash":"53c894e6f3573c662dc4e4f7b5a6f1a32f1a8c94","modified":1624619995502},{"_id":"themes/next/layout/_third-party/duoshuo-hot-articles.swig","hash":"ba75672183d94f1de7c8bd0eeee497a58c70e889","modified":1624619995508},{"_id":"themes/next/layout/_third-party/exturl.swig","hash":"8301c9600bb3e47f7fb98b0e0332ef3c51bb1688","modified":1624619995508},{"_id":"themes/next/layout/_third-party/mathjax.swig","hash":"a0bd3388587fd943baae0d84ca779a707fbcad89","modified":1624619995509},{"_id":"themes/next/layout/_third-party/rating.swig","hash":"554ec568e9d2c71e4a624a8de3cb5929050811d6","modified":1624619995509},{"_id":"themes/next/layout/_third-party/schedule.swig","hash":"db15d7e1552aa2d2386a6b8a33b3b3a40bf9e43d","modified":1624619995509},{"_id":"themes/next/layout/_third-party/scroll-cookie.swig","hash":"9a188938d46931d5f3882a140aa1c48b3a893f0c","modified":1624619995509},{"_id":"themes/next/scripts/tags/button.js","hash":"aaf71be6b483fca7a65cd6296c2cf1c2271c26a6","modified":1624619995515},{"_id":"themes/next/scripts/tags/center-quote.js","hash":"99b66949f18398689b904907af23c013be1b978f","modified":1624619995516},{"_id":"themes/next/scripts/tags/exturl.js","hash":"5022c0ba9f1d13192677cf1fd66005c57c3d0f53","modified":1624619995516},{"_id":"themes/next/scripts/tags/full-image.js","hash":"c9f833158c66bd72f627a0559cf96550e867aa72","modified":1624619995516},{"_id":"themes/next/scripts/tags/group-pictures.js","hash":"ac681b0d0d8d39ba3817336c0270c6787c2b6b70","modified":1624619995517},{"_id":"themes/next/scripts/tags/label.js","hash":"6f00952d70aadece844ce7fd27adc52816cc7374","modified":1624619995517},{"_id":"themes/next/scripts/tags/lazy-image.js","hash":"bcba2ff25cd7850ce6da322d8bd85a8dd00b5ceb","modified":1624619995517},{"_id":"themes/next/scripts/tags/note.js","hash":"f7eae135f35cdab23728e9d0d88b76e00715faa0","modified":1624619995518},{"_id":"themes/next/scripts/tags/tabs.js","hash":"aa7fc94a5ec27737458d9fe1a75c0db7593352fd","modified":1624619995518},{"_id":"themes/next/source/css/main.styl","hash":"07dfe336684c4617263b2d41978b704a7844a15d","modified":1624619995549},{"_id":"themes/next/source/images/algolia_logo.svg","hash":"45eeea0b5fba833e21e38ea10ed5ab385ceb4f01","modified":1624619995549},{"_id":"themes/next/source/images/avatar.gif","hash":"264082bb3a1af70d5499c7d22b0902cb454b6d12","modified":1624619995549},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","hash":"bc3588c9b2d7c68830524783120ff6cf957cf668","modified":1624619995550},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","hash":"6f55543d1fb9cbc436c101d24f802dec7b41efc3","modified":1624619995551},{"_id":"themes/next/source/images/cc-by-nc.svg","hash":"6f076713fb9bf934aa2c1046bdf2cf2e37bc1eab","modified":1624619995551},{"_id":"themes/next/source/images/cc-by-nd.svg","hash":"42cd73da328077ccc92f859bb8f3cf621b3484f8","modified":1624619995551},{"_id":"themes/next/source/images/cc-by.svg","hash":"e92a33c32d1dac8ed94849b2b4e6456e887efe70","modified":1624619995552},{"_id":"themes/next/source/images/cc-by-sa.svg","hash":"70c1535f43e54e5ff35ca81419e77e4c0c301398","modified":1624619995552},{"_id":"themes/next/source/images/cc-zero.svg","hash":"9bfb52b2f63527a7049247bf00d44e6dc1170e7d","modified":1624619995552},{"_id":"themes/next/source/images/favicon.png","hash":"8c38acb491455afbe41badd8d30c0533c2fc6df2","modified":1624619995553},{"_id":"themes/next/source/images/loading.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1624619995553},{"_id":"themes/next/source/images/placeholder.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1624619995553},{"_id":"themes/next/source/images/quote-l.svg","hash":"cd108d6f44351cadf8e6742565217f88818a0458","modified":1624619995556},{"_id":"themes/next/source/images/quote-r.svg","hash":"2a2a250b32a87c69dcc1b1976c74b747bedbfb41","modified":1624619995557},{"_id":"themes/next/source/images/searchicon.png","hash":"67727a6a969be0b2659b908518fa6706eed307b8","modified":1624619995557},{"_id":"themes/next/source/images/touxiang.jpg","hash":"f9c908dcdcba2356c1631a239cd7e3a881a2d6af","modified":1624619995557},{"_id":"source/img/4.png","hash":"3fa31ba6f84e6ba33c980e1275ba55e844f0dbb6","modified":1624619995456},{"_id":"source/img/vuex-state-2.png","hash":"0e8bb1e9968ac0f10a0fd49bdc3c7fb329eae3ce","modified":1624619995481},{"_id":"themes/next/layout/_scripts/schemes/mist.swig","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1624619995501},{"_id":"themes/next/layout/_scripts/schemes/muse.swig","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1624619995502},{"_id":"themes/next/source/css/_mixins/Mist.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1624619995540},{"_id":"themes/next/source/css/_mixins/Muse.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1624619995540},{"_id":"themes/next/source/css/_mixins/custom.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1624619995541},{"_id":"themes/next/source/css/_variables/Muse.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1624619995547},{"_id":"themes/next/source/css/_variables/custom.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1624619995548},{"_id":"source/img/FiraCode.jpg","hash":"a9140680369a3aa504d96dd4e5a55bb4e438ba59","modified":1624619995457},{"_id":"source/img/vuex-state-3.png","hash":"a13ead7bb92a386fe68e8ea61d10a5d57cb93a76","modified":1624619995482},{"_id":"themes/next/layout/_partials/head/custom-head.swig","hash":"a223919d2e1bf17ca4d6abb2c86f2efca9883dc1","modified":1624619995496},{"_id":"themes/next/layout/_partials/head/external-fonts.swig","hash":"f5e487b0d213ca0bd94aa30bc23b240d65081627","modified":1624619995497},{"_id":"themes/next/layout/_partials/search/localsearch.swig","hash":"b2f0d247b213e4cf8de47af6a304d98070cc7256","modified":1624619995498},{"_id":"themes/next/layout/_partials/search/swiftype.swig","hash":"a8c7f9ca7c605d039a1f3bf4e4d3183700a3dd62","modified":1624619995498},{"_id":"themes/next/layout/_partials/search/tinysou.swig","hash":"b25002a83cbd2ca0c4a5df87ad5bff26477c0457","modified":1624619995498},{"_id":"themes/next/layout/_partials/share/add-this.swig","hash":"9e3d133ac5bcc6cb51702c83b2611a49811abad1","modified":1624619995499},{"_id":"themes/next/layout/_partials/share/baidushare.swig","hash":"d9e2d9282f9be6e04eae105964abb81e512bffed","modified":1624619995499},{"_id":"themes/next/layout/_partials/share/duoshuo_share.swig","hash":"d4fbffd7fa8f2090eb32a871872665d90a885fac","modified":1624619995499},{"_id":"themes/next/layout/_partials/share/jiathis.swig","hash":"0a9cdd6958395fcdffc80ab60f0c6301b63664a5","modified":1624619995499},{"_id":"themes/next/layout/_scripts/pages/post-details.swig","hash":"9b84ab576982b2c3bb0291da49143bc77fba3cc6","modified":1624619995501},{"_id":"themes/next/layout/_scripts/schemes/gemini.swig","hash":"a9a3995b9615adfb8d6b127c78c6771627bee19a","modified":1624619995501},{"_id":"themes/next/layout/_scripts/schemes/pisces.swig","hash":"a9a3995b9615adfb8d6b127c78c6771627bee19a","modified":1624619995502},{"_id":"themes/next/layout/_third-party/analytics/analytics-with-widget.swig","hash":"ff947f3561b229bc528cb1837d4ca19612219411","modified":1624619995503},{"_id":"themes/next/layout/_third-party/analytics/application-insights.swig","hash":"71397a5823e8ec8aad3b68aace13150623b3e19d","modified":1624619995503},{"_id":"themes/next/layout/_third-party/analytics/baidu-analytics.swig","hash":"753d262911c27baf663fcaf199267133528656af","modified":1624619995503},{"_id":"themes/next/layout/_third-party/analytics/busuanzi-counter.swig","hash":"7b11eac3a0685fa1ab2ab6ecff60afc4f15f0d16","modified":1624619995503},{"_id":"themes/next/layout/_third-party/analytics/cnzz-analytics.swig","hash":"a10b7f19d7b5725527514622899df413a34a89db","modified":1624619995504},{"_id":"themes/next/layout/_third-party/analytics/facebook-sdk.swig","hash":"7d94845f96197d9d84a405fa5d4ede75fb81b225","modified":1624619995504},{"_id":"themes/next/layout/_third-party/analytics/google-analytics.swig","hash":"b1e13df83fb2b1d5d513b30b7aa6158b0837daab","modified":1624619995504},{"_id":"themes/next/layout/_third-party/analytics/index.swig","hash":"45f3f629c2aacc381095750e1c8649041a71a84b","modified":1624619995504},{"_id":"themes/next/layout/_third-party/analytics/lean-analytics.swig","hash":"e6d10ee4fb70b3ae1cd37e9e36e000306734aa2e","modified":1624619995505},{"_id":"themes/next/layout/_third-party/analytics/tencent-analytics.swig","hash":"8a399df90dadba5ad4e781445b58f4765aeb701e","modified":1624619995505},{"_id":"themes/next/layout/_third-party/analytics/tencent-mta.swig","hash":"5a8027328f060f965b3014060bebec1d7cf149c1","modified":1624619995505},{"_id":"themes/next/layout/_third-party/analytics/vkontakte-api.swig","hash":"f9a1647a8f1866deeb94052d1f87a5df99cb1e70","modified":1624619995505},{"_id":"themes/next/layout/_third-party/comments/changyan.swig","hash":"4c501ea0b9c494181eb3c607c5526a5754e7fbd8","modified":1624619995506},{"_id":"themes/next/layout/_third-party/comments/disqus.swig","hash":"b83a51bbe0f1e2ded9819070840b0ea145f003a6","modified":1624619995506},{"_id":"themes/next/layout/_third-party/comments/duoshuo.swig","hash":"1600f340e0225361580c44890568dc07dbcf2c89","modified":1624619995506},{"_id":"themes/next/layout/_third-party/comments/gitalk.swig","hash":"9ed0c6ec1fb91af238d290fae9f2100eac379d55","modified":1624619995506},{"_id":"themes/next/layout/_third-party/comments/hypercomments.swig","hash":"af7f3e43cbdc4f88c13f101f0f341af96ace3383","modified":1624619995507},{"_id":"themes/next/layout/_third-party/comments/index.swig","hash":"8006acc36d1cc8e8f5f16fb3ac4868e611072b17","modified":1624619995507},{"_id":"themes/next/layout/_third-party/comments/livere.swig","hash":"9246162d4bc7e949ce1d12d135cbbaf5dc3024ec","modified":1624619995507},{"_id":"themes/next/layout/_third-party/comments/valine.swig","hash":"602104d7ac47f7888d97e810419e58593a79e8ba","modified":1624619995507},{"_id":"themes/next/layout/_third-party/comments/youyan.swig","hash":"7e65ff8fe586cd655b0e9d1ad2912663ff9bd36c","modified":1624619995508},{"_id":"themes/next/layout/_third-party/search/index.swig","hash":"34599633658f3b0ffb487728b7766e1c7b551f5a","modified":1624619995510},{"_id":"themes/next/layout/_third-party/search/localsearch.swig","hash":"93479642fd076a1257fecc25fcf5d20ccdefe509","modified":1624619995511},{"_id":"themes/next/layout/_third-party/search/tinysou.swig","hash":"fe95dd3d166634c466e19aa756e65ad6e8254d3e","modified":1624619995511},{"_id":"themes/next/layout/_third-party/seo/baidu-push.swig","hash":"d8c98938719284fa06492c114d99a1904652a555","modified":1624619995512},{"_id":"themes/next/source/css/_custom/custom.styl","hash":"28696a76012eb32cedaae63b124c0296143228e9","modified":1624619995539},{"_id":"themes/next/source/css/_mixins/Gemini.styl","hash":"07f7da320689f828f6e36a6123807964a45157a0","modified":1624619995539},{"_id":"themes/next/source/css/_mixins/Pisces.styl","hash":"7896c3ee107e1a8b9108b6019f1c070600a1e8cc","modified":1624619995540},{"_id":"themes/next/source/css/_mixins/base.styl","hash":"0e55cbd93852dc3f8ccb44df74d35d9918f847e0","modified":1624619995540},{"_id":"themes/next/source/css/_variables/Gemini.styl","hash":"38a9f43973704afe7e8ca50f35a25940ea96e3cf","modified":1624619995547},{"_id":"themes/next/source/css/_variables/Mist.styl","hash":"e55265c8a8a6ae0c3c08e3509de92ee62c3cb5f6","modified":1624619995547},{"_id":"themes/next/source/css/_variables/Pisces.styl","hash":"89f88b9c9a191dd980f799fc36b83b63290d3ac9","modified":1624619995548},{"_id":"themes/next/source/css/_variables/base.styl","hash":"68c87734324408ae6d4560da1082168ea83ba2c1","modified":1624619995548},{"_id":"themes/next/source/js/src/DigitalRain.js","hash":"0542ff9fd515b498ab15a921731a16e16128614c","modified":1624619995558},{"_id":"themes/next/source/js/src/affix.js","hash":"1b509c3b5b290a6f4607f0f06461a0c33acb69b1","modified":1624619995558},{"_id":"themes/next/source/js/src/algolia-search.js","hash":"cb431b54ba9c692165a1f5a12e4c564a560f8058","modified":1624619995559},{"_id":"themes/next/source/js/src/bootstrap.js","hash":"0289031200c3d4c2bdd801ee10fff13bb2c353e4","modified":1624619995559},{"_id":"themes/next/source/js/src/clipboard-use.js","hash":"2e2b22beec5cf9dd6126f53bd985b29f3a3b324d","modified":1624619995559},{"_id":"themes/next/source/js/src/clipboard.min.js","hash":"0142051137ea161c3f0c2a7869b14424b8fbdb7b","modified":1624619995559},{"_id":"themes/next/source/js/src/exturl.js","hash":"a2a0f0de07e46211f74942a468f42ee270aa555c","modified":1624619995561},{"_id":"themes/next/source/js/src/hook-duoshuo.js","hash":"b35a7dc47b634197b93487cea8671a40a9fdffce","modified":1624619995561},{"_id":"themes/next/source/js/src/js.cookie.js","hash":"1512c751d219577d338ac0780fb2bbd9075d5298","modified":1624619995562},{"_id":"themes/next/source/js/src/motion.js","hash":"6d34f2a6ea6d73f7715d00f8b175854cd02baa36","modified":1624619995562},{"_id":"themes/next/source/js/src/post-details.js","hash":"50fa390554f0fb467d8eb84ac8eff2cffb13fe67","modified":1624619995562},{"_id":"themes/next/source/js/src/scroll-cookie.js","hash":"02cf91514e41200bc9df5d8bdbeb58575ec06074","modified":1624619995563},{"_id":"themes/next/source/js/src/scrollspy.js","hash":"b7657be25fc52ec67c75ab5481bdcb483573338b","modified":1624619995563},{"_id":"themes/next/source/js/src/sidebar-clock.js","hash":"d4d243425b55cb2e2ce3c47336b394d23545e70c","modified":1624619995563},{"_id":"themes/next/source/js/src/utils.js","hash":"f90c7611dc665b5e321cb81c0bd689445bab438a","modified":1624619995563},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.css","hash":"90ef19edc982645b118b095615838d9c5eaba0de","modified":1624619995569},{"_id":"themes/next/source/lib/canvas-nest/canvas-nest.min.js","hash":"0387e75e23b1db108a755073fe52a0d03eb391a7","modified":1624619995572},{"_id":"themes/next/source/lib/canvas-ribbon/canvas-ribbon.js","hash":"82fee688910efc644d3d1c3305c6ae28ba3f38f9","modified":1624619995572},{"_id":"themes/next/source/lib/fastclick/.bower.json","hash":"bf3eef9d647cd7c9b62feda3bc708c6cdd7c0877","modified":1624619995574},{"_id":"themes/next/source/lib/fastclick/LICENSE","hash":"6f474ea75c42442da7bbcf2e9143ce98258efd8d","modified":1624619995574},{"_id":"themes/next/source/lib/fastclick/README.md","hash":"68a9b9d53126405b0fa5f3324f1fb96dbcc547aa","modified":1624619995575},{"_id":"themes/next/source/lib/fastclick/bower.json","hash":"a9b3ee1e4db71a0e4ea6d5bed292d176dd68b261","modified":1624619995575},{"_id":"themes/next/source/lib/font-awesome/.bower.json","hash":"b4aefc910578d76b267e86dfffdd5121c8db9aec","modified":1624619995576},{"_id":"themes/next/source/lib/font-awesome/.gitignore","hash":"03ddbf76c1dd1afb93eed0b670d2eee747472ef1","modified":1624619995576},{"_id":"themes/next/source/lib/font-awesome/.npmignore","hash":"c31ff06a740955e44edd4403902e653ccabfd4db","modified":1624619995577},{"_id":"themes/next/source/lib/font-awesome/HELP-US-OUT.txt","hash":"ee33b2798b1e714b904d663436c6b3521011d1fa","modified":1624619995577},{"_id":"themes/next/source/lib/font-awesome/bower.json","hash":"71e7183634dc1b9449f590f15ebd7201add22ca7","modified":1624619995577},{"_id":"themes/next/source/lib/jquery/.bower.json","hash":"865d6c1328ab209a4376b9d2b7a7824369565f28","modified":1624619995587},{"_id":"themes/next/source/lib/jquery_lazyload/CONTRIBUTING.md","hash":"4ded6fee668544778e97e38c2b211fc56c848e77","modified":1624619995588},{"_id":"themes/next/source/lib/jquery_lazyload/README.md","hash":"b930297cb98b8e1dbd5abe9bc1ed9d5935d18ce8","modified":1624619995588},{"_id":"themes/next/source/lib/jquery_lazyload/.bower.json","hash":"90fa628f156d8045357ff11eaf32e61abacf10e8","modified":1624619995588},{"_id":"themes/next/source/lib/jquery_lazyload/bower.json","hash":"e0acf1db27b0cc16128a59c46db1db406b5c4c58","modified":1624619995589},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.lazyload.js","hash":"f4a570908f6c89c6edfb1c74959e733eaadea4f2","modified":1624619995589},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.scrollstop.js","hash":"bf773ad48a0b9aa77681a89d7569eefc0f7b7b18","modified":1624619995589},{"_id":"themes/next/source/lib/pace/pace-theme-barber-shop.min.css","hash":"ee0d51446cb4ffe1bb96bd7bc8c8e046dddfcf46","modified":1624619995590},{"_id":"themes/next/source/lib/pace/pace-theme-big-counter.min.css","hash":"5b561dc328af4c4d512e20a76fe964d113a32ba8","modified":1624619995590},{"_id":"themes/next/source/lib/pace/pace-theme-bounce.min.css","hash":"f6bdb9a785b7979dd8ec5c60e278af955ef1e585","modified":1624619995590},{"_id":"themes/next/source/lib/pace/pace-theme-center-atom.min.css","hash":"dcf79c24fe5350fb73d8038573a104e73639e9d3","modified":1624619995590},{"_id":"themes/next/source/lib/pace/pace-theme-center-circle.min.css","hash":"a4066769c78affbfbc5e30a600e2c7862cd532e0","modified":1624619995591},{"_id":"themes/next/source/lib/pace/pace-theme-center-radar.min.css","hash":"ab7cba998bf4c03b13df342bf43647fa4f419783","modified":1624619995591},{"_id":"themes/next/source/lib/pace/pace-theme-center-simple.min.css","hash":"67f44c947548bd4d77e7590d3f59e236cbf9e98a","modified":1624619995591},{"_id":"themes/next/source/lib/pace/pace-theme-corner-indicator.min.css","hash":"b3c64c973f31884e3d8145989476707333406b9a","modified":1624619995591},{"_id":"themes/next/source/lib/pace/pace-theme-flash.min.css","hash":"13ace22c40312d7bbd8d9c1e50eff897a7a497d8","modified":1624619995592},{"_id":"themes/next/source/lib/pace/pace-theme-loading-bar.min.css","hash":"7ee28875dfc1230d76c537f6605766e8d4011e9f","modified":1624619995592},{"_id":"themes/next/source/lib/pace/pace-theme-mac-osx.min.css","hash":"9f2e7b51b084da407863826b25265b31150b3821","modified":1624619995592},{"_id":"themes/next/source/lib/pace/pace-theme-minimal.min.css","hash":"9cd783cceb8a191f3c8b5d81f7a430ecc3e489d3","modified":1624619995593},{"_id":"themes/next/source/lib/pace/pace.min.js","hash":"8aaa675f577d5501f5f22d5ccb07c2b76310b690","modified":1624619995593},{"_id":"themes/next/source/lib/three/canvas_lines.min.js","hash":"2d9a9f38c493fdf7c0b833bb9184b6a1645c11b2","modified":1624619995593},{"_id":"themes/next/source/lib/three/canvas_sphere.min.js","hash":"46a50b91c98b639c9a2b9265c5a1e66a5c656881","modified":1624619995594},{"_id":"themes/next/source/lib/three/three-waves.min.js","hash":"8148492dd49aa876d32bb7d5b728d3f5bf6f5074","modified":1624619995594},{"_id":"themes/next/source/lib/velocity/.bower.json","hash":"63da5e80ebb61bb66a2794d5936315ca44231f0c","modified":1624619995598},{"_id":"themes/next/source/lib/velocity/bower.json","hash":"92d92860418c4216aa59eb4cb4a556290a7ad9c3","modified":1624619995598},{"_id":"themes/next/source/lib/pace/pace-theme-fill-left.min.css","hash":"0bec1e235a4a2cccda3f993b205424e1441a44ae","modified":1624619995592},{"_id":"themes/next/source/lib/velocity/velocity.min.js","hash":"bf172816a9c57f9040e3d19c24e181a142daf92b","modified":1624619995600},{"_id":"themes/next/source/lib/velocity/velocity.ui.js","hash":"dbbfb50f6502f6b81dcc9fee7b31f1e812da3464","modified":1624619995600},{"_id":"themes/next/source/lib/velocity/velocity.ui.min.js","hash":"dde584994ac13dc601836e86f4cf490e418d9723","modified":1624619995601},{"_id":"themes/next/source/lib/jquery/index.js","hash":"17a740d68a1c330876c198b6a4d9319f379f3af2","modified":1624619995587},{"_id":"themes/next/layout/_third-party/search/algolia-search/assets.swig","hash":"218cc936ba3518a3591b2c9eda46bc701edf7710","modified":1624619995510},{"_id":"themes/next/layout/_third-party/search/algolia-search/dom.swig","hash":"2530de0f3125a912756f6c0e9090cd012134a4c5","modified":1624619995510},{"_id":"themes/next/source/css/_common/components/back-to-top-sidebar.styl","hash":"b0e2a0e27a32f72cb283fe4b33d010d485113379","modified":1624619995519},{"_id":"themes/next/source/css/_common/components/back-to-top.styl","hash":"237d185ac62ec9877e300947fa0109c44fb8db19","modified":1624619995519},{"_id":"themes/next/source/css/_common/components/buttons.styl","hash":"22828f5141c0cecb9ef25a110e194cdfa3a36423","modified":1624619995519},{"_id":"themes/next/source/css/_common/components/comments.styl","hash":"ff4489cd582f518bba6909a301ac1292a38b4e96","modified":1624619995520},{"_id":"themes/next/source/css/_common/components/components.styl","hash":"7ad4081466b397e2a6204141bb7768b7c01bd93c","modified":1624619995520},{"_id":"themes/next/source/css/_common/components/pagination.styl","hash":"4f2801fc4cf3f31bf2069f41db8c6ce0e3da9e39","modified":1624619995525},{"_id":"themes/next/source/css/_common/components/tag-cloud.styl","hash":"6eb4bcc3056bd279d000607e8b4dad50d368ca69","modified":1624619995531},{"_id":"themes/next/source/css/_common/outline/outline.styl","hash":"12662536c7a07fff548abe94171f34b768dd610f","modified":1624619995537},{"_id":"themes/next/source/css/_common/scaffolding/base.styl","hash":"24ee4b356ff55fc6e58f26a929fa07750002cf29","modified":1624619995537},{"_id":"themes/next/source/css/_common/scaffolding/helpers.styl","hash":"1da5c800d025345f212a3bf1be035060f4e5e6ed","modified":1624619995537},{"_id":"themes/next/source/css/_common/scaffolding/mobile.styl","hash":"9a45ed506274f655b11995c408cc566b16dada79","modified":1624619995538},{"_id":"themes/next/source/css/_common/scaffolding/normalize.styl","hash":"3f40e8a9fe8e7bd5cfc4cf4cbbbcb9539462e973","modified":1624619995538},{"_id":"themes/next/source/css/_common/scaffolding/scaffolding.styl","hash":"a17e2b871a335f290afb392a08f94fd35f59c715","modified":1624619995538},{"_id":"themes/next/source/css/_common/scaffolding/tables.styl","hash":"ea9069645696f86c5df64208490876fe150c8cae","modified":1624619995539},{"_id":"themes/next/source/css/_schemes/Gemini/index.styl","hash":"a509016ac0227a1903d7f0ca3a825cf9ac7fde33","modified":1624619995541},{"_id":"themes/next/source/css/_schemes/Mist/_base.styl","hash":"25d5e45a355ee2093f3b8b8eeac125ebf3905026","modified":1624619995541},{"_id":"themes/next/source/css/_schemes/Mist/_header.styl","hash":"d0bfd1bef988c76f7d7dd72d88af6f0908a8b0db","modified":1624619995542},{"_id":"themes/next/source/css/_schemes/Mist/_logo.styl","hash":"b1025c421406d2c24cc92a02ae28c1915b01e240","modified":1624619995542},{"_id":"themes/next/source/css/_schemes/Mist/_menu.styl","hash":"26666c1f472bf5f3fb9bc62081cca22b4de15ccb","modified":1624619995542},{"_id":"themes/next/source/css/_schemes/Mist/_posts-expanded.styl","hash":"643eb1ad5bef63e1f5eff13ed33fc7b21111189e","modified":1624619995542},{"_id":"themes/next/source/css/_schemes/Mist/_search.styl","hash":"09c965022c13b84ed8a661fee8ac2a6d550495ae","modified":1624619995543},{"_id":"themes/next/source/css/_schemes/Mist/index.styl","hash":"9b913b73d31d21f057f97115ffab93cfa578b884","modified":1624619995543},{"_id":"themes/next/source/css/_schemes/Muse/_layout.styl","hash":"31127dcbf4c7b4ada53ffbf1638b5fe325b7cbc0","modified":1624619995544},{"_id":"themes/next/source/css/_schemes/Muse/_logo.styl","hash":"748dbfbf9c08e719ddc775958003c64b00d39dab","modified":1624619995544},{"_id":"themes/next/source/css/_schemes/Muse/_menu.styl","hash":"f23ac53ab901c48859dd29eee6e386b60ff956ba","modified":1624619995544},{"_id":"themes/next/source/css/_schemes/Muse/_search.styl","hash":"09c965022c13b84ed8a661fee8ac2a6d550495ae","modified":1624619995544},{"_id":"themes/next/source/css/_schemes/Muse/index.styl","hash":"5dbc0d0c897e46760e5dbee416530d485c747bba","modified":1624619995545},{"_id":"themes/next/source/css/_schemes/Pisces/_layout.styl","hash":"416988dca389e6e2fdfa51fa7f4ee07eb53f82fb","modified":1624619995546},{"_id":"themes/next/source/css/_schemes/Pisces/_brand.styl","hash":"bce344d3a665b4c55230d2a91eac2ad16d6f32fd","modified":1624619995545},{"_id":"themes/next/source/css/_schemes/Pisces/_menu.styl","hash":"4642e30010af8b2b037f5b43146b10a934941958","modified":1624619995546},{"_id":"themes/next/source/css/_schemes/Pisces/_posts.styl","hash":"1f6e2ce674735269599acc6d77b3ea18d31967fc","modified":1624619995546},{"_id":"themes/next/source/css/_schemes/Pisces/_sidebar.styl","hash":"24617c40a0d9b5e516d9500a45bc47cb995f325e","modified":1624619995546},{"_id":"themes/next/source/css/_schemes/Pisces/index.styl","hash":"86197902dfd3bededba10ba62b8f9f22e0420bde","modified":1624619995547},{"_id":"themes/next/source/lib/Han/dist/han.css","hash":"6c26cdb36687d4f0a11dabf5290a909c3506be5c","modified":1624619995566},{"_id":"themes/next/source/lib/Han/dist/han.min.css","hash":"6d586bfcfb7ae48f1b12f76eec82d3ad31947501","modified":1624619995567},{"_id":"themes/next/source/lib/Han/dist/han.min.js","hash":"16b03db23a52623348f37c04544f2792032c1fb6","modified":1624619995568},{"_id":"themes/next/source/js/src/cursor/explosion.min.js","hash":"b64ae63811bbb103cc3075bd463285bf0d5e19e8","modified":1624619995560},{"_id":"themes/next/source/js/src/cursor/fireworks.js","hash":"e9c74f2dd3953d4d8dec44e9977574d00702e84d","modified":1624619995560},{"_id":"themes/next/source/js/src/cursor/love.min.js","hash":"6583037545c7edc355f76f29b3393e250b150032","modified":1624619995560},{"_id":"themes/next/source/js/src/cursor/text.js","hash":"1d63927457a526278ed10492f6e1007b4ac7d8cf","modified":1624619995561},{"_id":"themes/next/source/js/src/schemes/pisces.js","hash":"c4358416f0a116d7f4037542fa3b385947e80908","modified":1624619995562},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.css","hash":"82f33ad0842aa9c154d029e0dada2497d4eb1d57","modified":1624619995573},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.js","hash":"d71602cbca33b9ecdb7ab291b7f86a49530f3601","modified":1624619995573},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.pack.js","hash":"ae6318aeb62ad4ce7a7e9a4cdacd93ffb004f0fb","modified":1624619995574},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.js","hash":"1d6aeda0480d0e4cb6198edf7719d601d4ae2ccc","modified":1624619995575},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.min.js","hash":"2cae0f5a6c5d6f3cb993015e6863f9483fc4de18","modified":1624619995576},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css.map","hash":"1573904b82807abbb32c97a3632c6c6808eaac50","modified":1624619995577},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.min.css","hash":"88af80502c44cd52ca81ffe7dc7276b7eccb06cf","modified":1624619995578},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.min.js","hash":"41ea797c68dbcff2f6fb3aba1d1043a22e7cc0f6","modified":1624619995597},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.pack.js","hash":"a817b6c158cbc5bab3582713de9fe18a18a80552","modified":1624619995597},{"_id":"themes/next/source/images/qrCode.png","hash":"49da76c4f7f5fd1bd49e40c9892e7fca27e424f4","modified":1624619995556},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff","hash":"28b782240b3e76db824e12c02754a9731a167527","modified":1624619995585},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff2","hash":"d6f48cba7d076fb6f2fd6ba993a75b9dc1ecbf0c","modified":1624619995586},{"_id":"themes/next/source/lib/velocity/velocity.js","hash":"4237c6e9d59da349639de20e559e87c2c0218cfd","modified":1624619995599},{"_id":"source/img/1.jpg","hash":"1bcba3c6348e2190a42bff762800bf846cf9239c","modified":1624619995453},{"_id":"themes/next/source/css/_common/components/footer/footer.styl","hash":"9f73c4696f0907aa451a855444f88fc0698fa472","modified":1624619995520},{"_id":"themes/next/source/css/_common/components/header/headerband.styl","hash":"d63e0cacc53dd375fcc113465a4328c59ff5f2c1","modified":1624619995521},{"_id":"themes/next/source/css/_common/components/header/menu.styl","hash":"1a0d059799a298fe17c49a44298d32cebde93785","modified":1624619995521},{"_id":"themes/next/source/css/_common/components/header/site-meta.styl","hash":"0656e753f182c9f47fef7304c847b7587a85ef0d","modified":1624619995521},{"_id":"themes/next/source/css/_common/components/header/site-nav.styl","hash":"1727702eac5d326b5c81a667944a245016668231","modified":1624619995521},{"_id":"themes/next/source/css/_common/components/header/header.styl","hash":"53cde051e0337f4bf42fb8d6d7a79fa3fa6d4ef2","modified":1624619995520},{"_id":"themes/next/source/css/_common/components/highlight/diff.styl","hash":"167986d0f649516671ddf7193eebba7b421cd115","modified":1624619995522},{"_id":"themes/next/source/css/_common/components/highlight/highlight.styl","hash":"3bc930fc5c3a7c2d2e19f948009b01997c210a4f","modified":1624619995522},{"_id":"themes/next/source/css/_common/components/highlight/macPanel.styl","hash":"2f44b2ef0f678ead330321273aba5c85b745c4c0","modified":1624619995523},{"_id":"themes/next/source/css/_common/components/highlight/theme.styl","hash":"7fe4d4d656e86276c17cb4e48a560cb6a4def703","modified":1624619995523},{"_id":"themes/next/source/css/_common/components/pages/archive.styl","hash":"b6f3a06a94a6ee5470c956663164d58eda818a64","modified":1624619995523},{"_id":"themes/next/source/css/_common/components/pages/categories.styl","hash":"7fb593f90d74a99c21840679933b9ef6fdc16a61","modified":1624619995524},{"_id":"themes/next/source/css/_common/components/pages/pages.styl","hash":"f9760ecf186954cee3ba4a149be334e9ba296b89","modified":1624619995524},{"_id":"themes/next/source/css/_common/components/pages/post-detail.styl","hash":"4e3838d7ac81d9ad133960f0f7ed58a44a015285","modified":1624619995524},{"_id":"themes/next/source/css/_common/components/pages/schedule.styl","hash":"8cf318644acc8b4978537c263290363e21c7f5af","modified":1624619995525},{"_id":"themes/next/source/css/_common/components/post/post-collapse.styl","hash":"ca0291aa8e0fb7053a39ef6fb87e9d995437cb6f","modified":1624619995525},{"_id":"themes/next/source/css/_common/components/post/post-button.styl","hash":"4783f85872bc7e218c1522a5c1c68cd27a5922db","modified":1624619995525},{"_id":"themes/next/source/css/_common/components/post/post-copyright.styl","hash":"caf263d1928496688c0e1419801eafd7e6919ce5","modified":1624619995526},{"_id":"themes/next/source/css/_common/components/post/post-eof.styl","hash":"a200c0a1c5a895ac9dc41e0641a5dfcd766be99b","modified":1624619995526},{"_id":"themes/next/source/css/_common/components/post/post-gallery.styl","hash":"cd9e214e502697f2f2db84eb721bac57a49b0fce","modified":1624619995526},{"_id":"themes/next/source/css/_common/components/post/post-expand.styl","hash":"3801ecc5055171a9ff18465bce8b0eb5f7c6cc6c","modified":1624619995526},{"_id":"themes/next/source/css/_common/components/post/post-meta.styl","hash":"9841c07c51ffedb840951e798a20f498e518defa","modified":1624619995527},{"_id":"themes/next/source/css/_common/components/post/post-nav.styl","hash":"27deb3d3a243d30022055dac7dad851024099a8b","modified":1624619995527},{"_id":"themes/next/source/css/_common/components/post/post-reward.styl","hash":"ca6d5cda21908d2a09ce1c06931f44b6b2c26609","modified":1624619995527},{"_id":"themes/next/source/css/_common/components/post/post-rtl.styl","hash":"b2495ae5e04dcca610aacadc47881d9e716cd440","modified":1624619995527},{"_id":"themes/next/source/css/_common/components/post/post-tags.styl","hash":"619c5c5e7d91cc84fce5dd31a9738de884ece9c9","modified":1624619995528},{"_id":"themes/next/source/css/_common/components/post/post-title.styl","hash":"92fab0e4b6454a334284cb70facb6aa422b1e83f","modified":1624619995528},{"_id":"themes/next/source/css/_common/components/post/post-type.styl","hash":"f28f00b2acb0df0343e77400bcc8246b40ac046c","modified":1624619995528},{"_id":"themes/next/source/css/_common/components/post/post-widgets.styl","hash":"2cb09973d29a8e34e2a3425ac6e0938296970d8e","modified":1624619995528},{"_id":"themes/next/source/css/_common/components/post/post.styl","hash":"9190b46f5cd8bf2d622f657eb8f9b645a7685303","modified":1624619995529},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-author-links.styl","hash":"39f04c4c7237a4e10acd3002331992b79945d241","modified":1624619995529},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-author.styl","hash":"761eba9811b050b25d548cc0854de4824b41eb08","modified":1624619995529},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-blogroll.styl","hash":"8dd9a1c6f4f6baa00c2cf01837e7617120cf9660","modified":1624619995529},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-dimmer.styl","hash":"11c22f0fb3f6beb13e5a425ec064a4ff974c13b7","modified":1624619995530},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-feed-link.styl","hash":"61f8cea3c01acd600e90e1bc2a07def405503748","modified":1624619995530},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-nav.styl","hash":"1153bb71edf253765145559674390e16dd67c633","modified":1624619995530},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-toc.styl","hash":"28a8737c090fbffd188d73a00b42e90b9ee57df2","modified":1624619995530},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-toggle.styl","hash":"a1521d48bb06d8d703753f52a198baa197af7da2","modified":1624619995531},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar.styl","hash":"8e00d9a0bdf35ffc0a7fa387fa294b953c2d28fc","modified":1624619995531},{"_id":"themes/next/source/css/_common/components/sidebar/site-state.styl","hash":"e71652d3216e289c8548b1ea2357822c1476a425","modified":1624619995531},{"_id":"themes/next/source/css/_common/components/tags/blockquote-center.styl","hash":"2fe76476432b31993338cb45cdb3b29a518b6379","modified":1624619995532},{"_id":"themes/next/source/css/_common/components/tags/exturl.styl","hash":"a3bdd71237afc112b2aa255f278cab6baeb25351","modified":1624619995532},{"_id":"themes/next/source/css/_common/components/tags/full-image.styl","hash":"3159b55f35c40bd08e55b00148c523760a708c51","modified":1624619995532},{"_id":"themes/next/source/css/_common/components/tags/group-pictures.styl","hash":"2ad1a2a9bbf6742d1b0762c4c623b68113d1e0fe","modified":1624619995533},{"_id":"themes/next/source/css/_common/components/tags/label.styl","hash":"2ab1322fe52ab5aafd49e68f5bd890e8380ee927","modified":1624619995533},{"_id":"themes/next/source/css/_common/components/tags/note-modern.styl","hash":"962b654f8f7cbd18a298126a403d236ed4540516","modified":1624619995533},{"_id":"themes/next/source/css/_common/components/tags/note.styl","hash":"9a409b798decdefdaf7a23f0b11004a8c27e82f3","modified":1624619995533},{"_id":"themes/next/source/css/_common/components/tags/tabs.styl","hash":"154a87a32d2fead480d5e909c37f6c476671c5e6","modified":1624619995534},{"_id":"themes/next/source/css/_common/components/tags/tags.styl","hash":"b80604868e4f5cf20fccafd7ee415c20c804f700","modified":1624619995534},{"_id":"themes/next/source/css/_common/components/third-party/algolia-search.styl","hash":"bba4f3bdb7517cd85376df3e1209b570c0548c69","modified":1624619995534},{"_id":"themes/next/source/css/_common/components/third-party/baidushare.styl","hash":"5dbeed535d63a50265d96b396a5440f9bb31e4ba","modified":1624619995535},{"_id":"themes/next/source/css/_common/components/third-party/busuanzi-counter.styl","hash":"a6e7d698702c2e383dde3fde2abde27951679084","modified":1624619995535},{"_id":"themes/next/source/css/_common/components/third-party/duoshuo.styl","hash":"717cc7f82be9cc151e23a7678601ff2fd3a7fa1d","modified":1624619995535},{"_id":"themes/next/source/css/_common/components/third-party/han.styl","hash":"10599e16414a8b7a76c4e79e6617b5fe3d4d1adf","modified":1624619995536},{"_id":"themes/next/source/css/_common/components/third-party/jiathis.styl","hash":"15975ba7456b96916b1dbac448a1a0d2c38b8f3d","modified":1624619995536},{"_id":"themes/next/source/css/_common/components/third-party/localsearch.styl","hash":"16087276945fa038f199692e3eabb1c52b8ea633","modified":1624619995536},{"_id":"themes/next/source/css/_common/components/third-party/third-party.styl","hash":"37e406ec42b7a53c72395bdbaa434270019e7179","modified":1624619995536},{"_id":"themes/next/source/css/_schemes/Mist/outline/outline.styl","hash":"a07aa12cc36ac5c819670c2a3c17d07ed7a08986","modified":1624619995543},{"_id":"themes/next/source/css/_schemes/Mist/sidebar/sidebar-blogroll.styl","hash":"1f09be9bb38411f0629b58c3b23873589a6dbcaa","modified":1624619995543},{"_id":"themes/next/source/css/_schemes/Muse/sidebar/sidebar-blogroll.styl","hash":"1f09be9bb38411f0629b58c3b23873589a6dbcaa","modified":1624619995545},{"_id":"themes/next/source/lib/Han/dist/font/han-space.otf","hash":"07436f011b44051f61b8329c99de4bec64e86f4b","modified":1624619995564},{"_id":"themes/next/source/lib/Han/dist/font/han.otf","hash":"f1f6bb8f461f5672e000380195d3d2358a28494c","modified":1624619995565},{"_id":"themes/next/source/lib/Han/dist/font/han-space.woff","hash":"7a635062b10bf5662ae1d218ba0980171005d060","modified":1624619995565},{"_id":"themes/next/source/lib/Han/dist/font/han.woff2","hash":"623af3ed5423371ac136a4fe0e8cc7bb7396037a","modified":1624619995566},{"_id":"themes/next/source/lib/Han/dist/font/han.woff","hash":"f38ff9b2eecaa17b50b66aa2dae87e9e7436d195","modified":1624619995565},{"_id":"themes/next/source/lib/font-awesome/fonts/FontAwesome.otf","hash":"048707bc52ac4b6563aaa383bfe8660a0ddc908c","modified":1624619995579},{"_id":"themes/next/source/lib/Han/dist/han.js","hash":"c7ebe1f797e8ea5cdb0241adf4d0c3e832063988","modified":1624619995567},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.eot","hash":"d980c2ce873dc43af460d4d572d441304499f400","modified":1624619995581},{"_id":"source/img/comb.png","hash":"8c29fac099cb1d6a022e7d36617b3a4eec649e98","modified":1624619995478},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.js","hash":"90a1b22129efc172e2dfcceeeb76bff58bc3192f","modified":1624619995571},{"_id":"themes/next/source/lib/three/three.min.js","hash":"26273b1cb4914850a89529b48091dc584f2c57b8","modified":1624619995597},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.svg","hash":"b5483b11f8ba213e733b5b8af9927a04fec996f6","modified":1624619995584},{"_id":"source/img/alpha-bg.jpg","hash":"d6ab7b1bfb0f0f335be401334366db76b5e63c01","modified":1624619995474},{"_id":"public/search.xml","hash":"41ff07b97771d303ac820b3ffaaf89aaf55b6ae5","modified":1624620343031},{"_id":"public/about/index.html","hash":"7028c0a6968610b9a18108501dc6a2061062501e","modified":1624620344293},{"_id":"public/categories/index.html","hash":"54aa2d04028b6ae698edd68b47965d8f41e07921","modified":1624620344316},{"_id":"public/2021/06/03/grid/index.html","hash":"98137032a2ff1c67a58421135b98ed85a35c8c49","modified":1624620344317},{"_id":"public/tags/index.html","hash":"c39b5f4324887fbed39fa72848bc84040a131a71","modified":1624620344327},{"_id":"public/2021/05/07/Mac本地服务器使用/index.html","hash":"c12bf0aa36502889122478079114127120c3f977","modified":1624620344327},{"_id":"public/2021/05/18/建立前端开发规范/index.html","hash":"d5f6a5298c467c005ff54801473eb995f71b2754","modified":1624620344328},{"_id":"public/2021/04/26/从零搭建Vue UI组件库(六)/index.html","hash":"e1cc7c2db07ccf89e69ed0a745ed0784b85134b3","modified":1624620344328},{"_id":"public/2021/04/20/从零搭建Vue UI组件库(五)/index.html","hash":"66e69af0acd3a57f617ee87761be8f4305c9060d","modified":1624620344328},{"_id":"public/2021/04/16/从零搭建Vue UI组件库(四)/index.html","hash":"7121df4b8620a092f43cf105c7750439b2f00646","modified":1624620344328},{"_id":"public/2021/04/15/从零搭建Vue UI组件库(三)/index.html","hash":"db8d0c78d3e70a977874ee4dba9da723593941d8","modified":1624620344328},{"_id":"public/2021/04/15/从零搭建Vue UI组件库(二)/index.html","hash":"36551f2301e9302389d0733567d096fdd0bf0bd4","modified":1624620344328},{"_id":"public/2021/04/15/从零搭建Vue UI组件库(一)/index.html","hash":"3f2f61effd5fc87d13ca299b8a6d182e91789c4a","modified":1624620344328},{"_id":"public/2021/01/26/vuex4/index.html","hash":"06437a4e8532a4da41220f87b763561ed5c25e1e","modified":1624620344328},{"_id":"public/2021/03/09/监听vuex中state变化/index.html","hash":"4e22f2aad574097e307568894a78963be969b57f","modified":1624620344328},{"_id":"public/2020/04/09/promise/index.html","hash":"8a4b6961cc3bb556ab857b9b6609aed8e67765c2","modified":1624620344329},{"_id":"public/2019/12/12/vscode配置/index.html","hash":"0e1754b1817f62cd50779b1cba379287b952e461","modified":1624620344329},{"_id":"public/2020/01/15/试图详解Array.reduce/index.html","hash":"bc1e2fb01bd7a2a9dcd740b8666048dbe8c59ff5","modified":1624620344329},{"_id":"public/2019/11/29/markdown语法/index.html","hash":"1c94c9ecffb0d4a50ae328175d5f245125f6b72c","modified":1624620344329},{"_id":"public/2019/05/10/css伪元素/index.html","hash":"349bba7a68d91382e8d1a4c7e0981df8fe893a67","modified":1624620344329},{"_id":"public/2019/05/07/vue-cli3-x项目图片压缩/index.html","hash":"2464d60ccee65a892e42c0c610736991dcdf0161","modified":1624620344329},{"_id":"public/2019/04/02/从0开始开发vue单文件项目/index.html","hash":"a09294da28b290cf6babfaedeb2a82010c22b7ae","modified":1624620344329},{"_id":"public/2019/02/15/详解vue-use的使用/index.html","hash":"a521a6f14f339c1e6a626ca3f0c35de084e6263c","modified":1624620344329},{"_id":"public/2018/12/15/Vue-Cli-3-使用感受/index.html","hash":"81686dfd3db10d84a4689e8bd287b263e38fd365","modified":1624620344329},{"_id":"public/2018/10/16/管理团队代码/index.html","hash":"4682ec2bab101624b279862081ec01fad296c3be","modified":1624620344329},{"_id":"public/2018/07/15/关于vue（全家桶）的一些使用心得/index.html","hash":"739fe33c2ae3a11c0f81122730b1ad7ee739ca55","modified":1624620344329},{"_id":"public/2018/03/29/关于蜂窝状图片的实现/index.html","hash":"701124b4713ab32c586cab05e9899869d24db345","modified":1624620344329},{"_id":"public/2018/03/22/关于webpack的那些事/index.html","hash":"002b8748386b29bef5677f6ccf0b03c55ad8ef7d","modified":1624620344329},{"_id":"public/2018/02/03/swiper-animate的使用/index.html","hash":"04a5b56189f0b6fef7cdacdf1f45bd0a1aac8f51","modified":1624620344329},{"_id":"public/2018/01/24/Video小记/index.html","hash":"42e4a8deb51b64621c2d7d218c99e18b62bf2cf4","modified":1624620344330},{"_id":"public/2018/01/12/前端配合微信授权/index.html","hash":"8c5a189770016adadcca57b3604c4bd4ac672c52","modified":1624620344330},{"_id":"public/2017/12/10/关于vue-awesome-swiper以及vue-cli升级随笔/index.html","hash":"604d51b9f74590835d7a4e0d3760b5377bf5c0b9","modified":1624620344330},{"_id":"public/2017/11/25/html清除缓存/index.html","hash":"0159d0dc30ff1a4df087a68803606bc9dd2ab17e","modified":1624620344330},{"_id":"public/2017/11/15/全局设置npm镜像/index.html","hash":"b34ccfcc6462400ad66dde358463ffd21b5ef6ad","modified":1624620344330},{"_id":"public/2017/11/07/HTML5原生拖放/index.html","hash":"2c7eb3618c5d0a3181cca26f0ad85a6b608ce3c3","modified":1624620344330},{"_id":"public/2017/10/31/关于sticky-footer兼容性最好的一种解决方案/index.html","hash":"f9965339eb8a79292c583ba13b8a6e6568375101","modified":1624620344330},{"_id":"public/2017/10/30/微信浏览器播放音乐的坑/index.html","hash":"a501163ef1205fda4e00e85fd35cfae8d37bce31","modified":1624620344330},{"_id":"public/2017/10/20/使用SASS/index.html","hash":"8a3c7a9a5365ff23bbccc5f30db01d13adcbf017","modified":1624620344330},{"_id":"public/2017/10/20/模块/index.html","hash":"dc9feb910cc6bac5644b5477258383ab8da5bf04","modified":1624620344330},{"_id":"public/2017/10/19/github和gitlab下fork后同步个人仓库和源仓库/index.html","hash":"ed22188ba84028c78a6cbda4ea35040c41a169e2","modified":1624620344330},{"_id":"public/2017/10/10/particlesJs开发手册/index.html","hash":"2ad79550f931ec320fea148e939fbae15e671796","modified":1624620344330},{"_id":"public/2017/09/25/git命令/index.html","hash":"df4829e78220352da62940005ff4f559a9e8817d","modified":1624620344330},{"_id":"public/2017/08/28/使用webstrom/index.html","hash":"8e1088433a4e2ca35a681a8b4c5471b181651bee","modified":1624620344330},{"_id":"public/2017/08/24/hello-world/index.html","hash":"24886831893c714ad458b3eeef8732f40d6b1204","modified":1624620344330},{"_id":"public/archives/index.html","hash":"ae0072fe311b96338c78ab7f885944f04be0db9f","modified":1624620344330},{"_id":"public/archives/page/2/index.html","hash":"dad35b8a8afe2e6a04c4409b682c7f9dbdfd76b6","modified":1624620344330},{"_id":"public/archives/page/3/index.html","hash":"916baaeec2b0bf8e6cd1ee0b382ccc6f5106206a","modified":1624620344331},{"_id":"public/archives/page/4/index.html","hash":"3edfb839209c222e7c0007312a6c1421266215dd","modified":1624620344331},{"_id":"public/archives/2017/index.html","hash":"5636d28eb431b4ebf810aa48dcd9a901dd82acfc","modified":1624620344331},{"_id":"public/archives/2017/page/2/index.html","hash":"2e3963a71706b5fa29468553217c2c465cb78839","modified":1624620344331},{"_id":"public/archives/2017/08/index.html","hash":"014e992f43b16e3022249fccbcc9e67f4e9931c6","modified":1624620344331},{"_id":"public/archives/2017/09/index.html","hash":"b6995f941345536fa8705407f9fab546e4ce8532","modified":1624620344331},{"_id":"public/archives/2017/10/index.html","hash":"c71eb95b6fb79f2ec76aabc70b54062cfdf3546c","modified":1624620344331},{"_id":"public/archives/2017/11/index.html","hash":"4bcd28aefc9d33cdfefba1b5869b1ce68473f680","modified":1624620344331},{"_id":"public/archives/2017/12/index.html","hash":"cf742c18d0fb369515b156d67c531fa10b5e98ca","modified":1624620344331},{"_id":"public/archives/2018/index.html","hash":"4b764dfdf6344db41e0dd62ede071b271b52fdfc","modified":1624620344331},{"_id":"public/archives/2018/01/index.html","hash":"a9f5cab691da2d6337106ad91dac89e6fc85260b","modified":1624620344331},{"_id":"public/archives/2018/02/index.html","hash":"07132a5630adb31612061d895fe8f86089b6f71e","modified":1624620344331},{"_id":"public/archives/2018/03/index.html","hash":"abd1299e75599a0b8c72cb6dac0f12a2b0b2df89","modified":1624620344331},{"_id":"public/archives/2018/07/index.html","hash":"c3ea734e210a19259e3abdf93ca018909bc6f755","modified":1624620344331},{"_id":"public/archives/2018/10/index.html","hash":"ac2f8ab183aae12689abb11d8c94bf9324834d15","modified":1624620344331},{"_id":"public/archives/2018/12/index.html","hash":"8e7e815485aa25e700f63f1803644e81a545d473","modified":1624620344332},{"_id":"public/archives/2019/index.html","hash":"10a54fe0442188381c840baf522c0fde0c13b064","modified":1624620344332},{"_id":"public/archives/2019/02/index.html","hash":"09d01d09a005b62f39de07f642b8883d308c1efe","modified":1624620344332},{"_id":"public/archives/2019/04/index.html","hash":"bb6cef6ad55dc685e79ffe6dd09ef6c27108dccf","modified":1624620344332},{"_id":"public/archives/2019/05/index.html","hash":"ada860be153cd9a8650d28376906c4f31dc8c968","modified":1624620344332},{"_id":"public/archives/2019/11/index.html","hash":"014bb4c259c76bbcf11753d1acd635b9ed8b8e38","modified":1624620344332},{"_id":"public/archives/2019/12/index.html","hash":"8433634267b053b3a0fdeb558794f8cf459e9eba","modified":1624620344332},{"_id":"public/archives/2020/index.html","hash":"952dd84f22524abc0e5a3f68d08a1279fec3bcef","modified":1624620344332},{"_id":"public/archives/2020/01/index.html","hash":"e871765f201fdace52b340e245350ef89683361f","modified":1624620344332},{"_id":"public/archives/2020/04/index.html","hash":"6b11e2585671c6ff9f6ad403fe7762b78d3bf363","modified":1624620344332},{"_id":"public/archives/2021/index.html","hash":"0c6fb605dc5e1e509a4ed34daa2371a8de3ab02c","modified":1624620344332},{"_id":"public/archives/2021/page/2/index.html","hash":"f4f020c7fa4c91a79034638715adad35b1b3d041","modified":1624620344332},{"_id":"public/archives/2021/01/index.html","hash":"67a5c33ef32de4b0d852b70d18b4df1c1f20b034","modified":1624620344332},{"_id":"public/archives/2021/03/index.html","hash":"694bb5394355c62a053879f0ff001028431b3a72","modified":1624620344332},{"_id":"public/archives/2021/04/index.html","hash":"693c2ed93f47c0974574d3634135fd3b0e41d4ac","modified":1624620344332},{"_id":"public/archives/2021/05/index.html","hash":"41611183053b26c61413600c61a9a94f26fbe844","modified":1624620344332},{"_id":"public/archives/2021/06/index.html","hash":"01a53accc001af76634f2f7a047e84c6bb9e4b39","modified":1624620344332},{"_id":"public/categories/mac/index.html","hash":"e49cee07fac91fb7cd6196793ce6c1990cd6a379","modified":1624620344332},{"_id":"public/categories/html5/index.html","hash":"295d956eb11321297f676da70276cd9f1c904c28","modified":1624620344332},{"_id":"public/categories/video/index.html","hash":"c72b54de9916b64d7ff13a2f6715081f639f07fb","modified":1624620344332},{"_id":"public/categories/vue/index.html","hash":"ac05275231eb6b6671902295d0ed5d453006dfc4","modified":1624620344332},{"_id":"public/categories/css3/index.html","hash":"98c510e108fd2e30036cc41374e487c5bfdd798f","modified":1624620344332},{"_id":"public/categories/git/index.html","hash":"f19d86418b1c191abe17dc86a2bdc75aec4b032a","modified":1624620344332},{"_id":"public/categories/css/index.html","hash":"4b7cd0cb1ae133e5e8ba9101dac11bb97d7c45b2","modified":1624620344332},{"_id":"public/categories/markdown/index.html","hash":"0938c58e133f00b92f2a20c0624ed687be01d295","modified":1624620344332},{"_id":"public/categories/JavaScript/index.html","hash":"fa10158c58bac64a452c040508ea52f146a68655","modified":1624620344333},{"_id":"public/categories/swiper/index.html","hash":"4d0152015d83a1f6d203ea0f30df816d356096fc","modified":1624620344333},{"_id":"public/categories/vscode/index.html","hash":"b7cb07c9827fb252df4e8b747bcdbdbab8d3aca3","modified":1624620344343},{"_id":"public/categories/webpack/index.html","hash":"db887161d1fc63a1d3f22b5f5c440b39ae75ced5","modified":1624620344343},{"_id":"public/categories/vue/vue3/index.html","hash":"190b522c49152596e096d1e74e1a4aa01c42b765","modified":1624620344343},{"_id":"public/categories/adminUI/index.html","hash":"0c9811b5f056a5eb38651e19d66e8fc339c9bd51","modified":1624620344343},{"_id":"public/categories/NodeJs/index.html","hash":"637367b407bf6c34f8e22b1790d8ebfcf9c9a9bc","modified":1624620344343},{"_id":"public/categories/editor/index.html","hash":"d2f65d7a3d15fa4acfb35139e990c8b487f33afc","modified":1624620344343},{"_id":"public/categories/WeChat/index.html","hash":"231f87ee5d49cd80ff936b346340d26d89b95dc9","modified":1624620344343},{"_id":"public/categories/webpack/vue/index.html","hash":"82b89866ae1c948da56430205b21ddb2262aa8e7","modified":1624620344343},{"_id":"public/categories/Eslint/index.html","hash":"1f3dca6efdc8d1f9e34fbfc4ccc5a62089b7ef23","modified":1624620344343},{"_id":"public/categories/Vue/index.html","hash":"54544114aaaac73cc88b44ca9ddece5756bb355f","modified":1624620344343},{"_id":"public/categories/javascript/index.html","hash":"a8c0d1af6adb7f4073d8127b277839e1b0c6614e","modified":1624620344343},{"_id":"public/categories/webpack/vue/compress/index.html","hash":"89e451bb02f72c1dba33f75fe81e91e47bce20ea","modified":1624620344343},{"_id":"public/index.html","hash":"68cfb50f1aae3988e11245eb130141fecf43b965","modified":1624620344344},{"_id":"public/categories/Vue/Vuex/index.html","hash":"bf09ba39970840a082933e166d32bee7d41252cc","modified":1624620344344},{"_id":"public/page/2/index.html","hash":"b064b6e7e967b9597febbeb9edd2d5ac7f11fddd","modified":1624620344344},{"_id":"public/page/3/index.html","hash":"7d947b559e9952ef0a9eb1bf950b596515a09464","modified":1624620344344},{"_id":"public/tags/mac/index.html","hash":"db6cbc2d4241aff6ef46bef201a44624ee6a1995","modified":1624620344344},{"_id":"public/page/4/index.html","hash":"5baff354ee5cd0529a48156fa2d48e9f48b7dd9d","modified":1624620344344},{"_id":"public/tags/draggable/index.html","hash":"e909716cc95d90a84699297bf3a617c3e86c9729","modified":1624620344344},{"_id":"public/tags/html5/index.html","hash":"96fd6fe6cea179b5d1a979d92f819a7f3ecec58b","modified":1624620344344},{"_id":"public/tags/video/index.html","hash":"87358f6ff15273ced34e8b61f539a5d7736ff779","modified":1624620344344},{"_id":"public/tags/vue/index.html","hash":"7a30cb2c4940d737a9105deb8509bb7fe1abc9ce","modified":1624620344344},{"_id":"public/tags/css3/index.html","hash":"a278bab67591a06cb4ffb9242d510954e5e3d7e7","modified":1624620344344},{"_id":"public/tags/git/index.html","hash":"a57f78055676a361310996c2c98d19b5893c884c","modified":1624620344344},{"_id":"public/tags/css/index.html","hash":"32fa1374bf8a8583a96794738b7ae6e056d8ef0d","modified":1624620344344},{"_id":"public/tags/GitHub/index.html","hash":"b9ae620c9a3e5019cc4549faaefd4ecf443e680a","modified":1624620344344},{"_id":"public/tags/cache/index.html","hash":"1a8d7d6143d28e42be26faf2670c07b9717ff30f","modified":1624620344344},{"_id":"public/tags/markdown/index.html","hash":"b082912123eb6409b14f2a1ee61cb10abe27c2f8","modified":1624620344344},{"_id":"public/tags/blog/index.html","hash":"d24024183173aed679cd1f404e33656468708f47","modified":1624620344344},{"_id":"public/tags/canvas/index.html","hash":"34eb3e5cc54b04909305eae6179829c4730f3743","modified":1624620344344},{"_id":"public/tags/粒子动画/index.html","hash":"0bc0c2807095c0d87df8a2ab62afd034113b9a60","modified":1624620344345},{"_id":"public/tags/es6/index.html","hash":"817108379e0b2a3d5115869b0d21e0981a3bb2a6","modified":1624620344345},{"_id":"public/tags/promise/index.html","hash":"46e5d8b2687d49425ff221c1496e21e50e2769dd","modified":1624620344345},{"_id":"public/tags/carousel/index.html","hash":"f11c0f7b1ca79536c57501146d54eda6e4349f33","modified":1624620344345},{"_id":"public/tags/animate/index.html","hash":"2f5022350414fb15c74a7473d4866c9e5aeb0e28","modified":1624620344345},{"_id":"public/tags/vscode/index.html","hash":"bf758b69f7a6d74312ca267f8f26463f44e6d66d","modified":1624620344345},{"_id":"public/tags/webpack/index.html","hash":"d97fd40701d2a5eee8202c0552ed2a31227d0dc9","modified":1624620344345},{"_id":"public/tags/compress/index.html","hash":"00aa8150ab1e36570d1d3b54a0000acff3eddbbc","modified":1624620344345},{"_id":"public/tags/vue3/index.html","hash":"c8a42789466a4cb11d6abf60ec4ffb9bf4f5c975","modified":1624620344345},{"_id":"public/tags/Vue/index.html","hash":"bc665a41e1b1c6bee09e6a64395e91f34535f318","modified":1624620344345},{"_id":"public/tags/adminUI/index.html","hash":"9a5d9f17d06841da21a9a729bded781af3285ce4","modified":1624620344345},{"_id":"public/tags/sass/index.html","hash":"63337c1cf8af18851b7939f8024fb7de40d02ceb","modified":1624620344345},{"_id":"public/tags/webstorm/index.html","hash":"9c399216b6f9ca50646ad1d50461a57615c1bc00","modified":1624620344345},{"_id":"public/tags/NodeJs/index.html","hash":"f5421186f7e64cfa9eaefd91a91dec19a6b58679","modified":1624620344345},{"_id":"public/tags/vuex/index.html","hash":"6d8187e74255dc88b70a33518d25100281216ffa","modified":1624620344345},{"_id":"public/tags/axios/index.html","hash":"5ee177c285912daf97b331caaa56816bfa644f32","modified":1624620344345},{"_id":"public/tags/WeChat/index.html","hash":"31f6f5af5ce8d851167f1dc2203f086b9fd9dcb9","modified":1624620344345},{"_id":"public/tags/audio/index.html","hash":"963e7b1a4179db98550eaa7305795a325aaff46f","modified":1624620344345},{"_id":"public/tags/nodeJs/index.html","hash":"41ac74277d1bb68d1b7e4d9bc5e760069ad56954","modified":1624620344345},{"_id":"public/tags/fs模块/index.html","hash":"17cc8376759044db4cba7d689fd3f05ee45acac8","modified":1624620344345},{"_id":"public/tags/Eslint/index.html","hash":"e7147230c13a2e304c329b5503081cf5d13d2d95","modified":1624620344345},{"_id":"public/tags/Prettier/index.html","hash":"b22864922c97a256b0a293acd0e3e2f0239de585","modified":1624620344345},{"_id":"public/tags/Vuex/index.html","hash":"739b2a9e306560cd460ed0e0f2d0b0045b4fd402","modified":1624620344346},{"_id":"public/tags/javascript/index.html","hash":"02f0525251c110f8e8e7b3310c5baf4b87e6a98c","modified":1624620344346},{"_id":"public/img/2.jpg","hash":"1fe54b5d5d3fb5f788a9cdbbcecc030139d57b37","modified":1624620344346},{"_id":"public/img/6.png","hash":"f9ec58c2153ad332f3e332bb669ada6b6860c20f","modified":1624620344346},{"_id":"public/img/3.jpg","hash":"955df2a6fe9fc308c54317281005350582d4b279","modified":1624620344346},{"_id":"public/img/markdown-eg.jpeg","hash":"a279a201c1c8432b5a8bd64e836099211d1d5103","modified":1624620344346},{"_id":"public/img/touxiang.jpg","hash":"f9c908dcdcba2356c1631a239cd7e3a881a2d6af","modified":1624620344346},{"_id":"public/img/me.jpg","hash":"2357ae34b48e5d1804db02f40f462601d4ebfcfb","modified":1624620344346},{"_id":"public/img/vuex-state-1.png","hash":"7aacddcf7e72b6e97ae3a0ec52a9f40a9b076263","modified":1624620344346},{"_id":"public/images/algolia_logo.svg","hash":"45eeea0b5fba833e21e38ea10ed5ab385ceb4f01","modified":1624620344346},{"_id":"public/images/avatar.gif","hash":"264082bb3a1af70d5499c7d22b0902cb454b6d12","modified":1624620344346},{"_id":"public/images/cc-by-nc-nd.svg","hash":"bc3588c9b2d7c68830524783120ff6cf957cf668","modified":1624620344346},{"_id":"public/images/cc-by-nc.svg","hash":"6f076713fb9bf934aa2c1046bdf2cf2e37bc1eab","modified":1624620344346},{"_id":"public/images/cc-by-nc-sa.svg","hash":"6f55543d1fb9cbc436c101d24f802dec7b41efc3","modified":1624620344346},{"_id":"public/images/cc-by-nd.svg","hash":"42cd73da328077ccc92f859bb8f3cf621b3484f8","modified":1624620344346},{"_id":"public/images/cc-by.svg","hash":"e92a33c32d1dac8ed94849b2b4e6456e887efe70","modified":1624620344346},{"_id":"public/images/cc-by-sa.svg","hash":"70c1535f43e54e5ff35ca81419e77e4c0c301398","modified":1624620344346},{"_id":"public/images/cc-zero.svg","hash":"9bfb52b2f63527a7049247bf00d44e6dc1170e7d","modified":1624620344346},{"_id":"public/images/favicon.png","hash":"8c38acb491455afbe41badd8d30c0533c2fc6df2","modified":1624620344346},{"_id":"public/images/loading.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1624620344346},{"_id":"public/images/placeholder.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1624620344346},{"_id":"public/images/quote-r.svg","hash":"2a2a250b32a87c69dcc1b1976c74b747bedbfb41","modified":1624620344346},{"_id":"public/images/searchicon.png","hash":"67727a6a969be0b2659b908518fa6706eed307b8","modified":1624620344346},{"_id":"public/images/quote-l.svg","hash":"cd108d6f44351cadf8e6742565217f88818a0458","modified":1624620344346},{"_id":"public/images/touxiang.jpg","hash":"f9c908dcdcba2356c1631a239cd7e3a881a2d6af","modified":1624620344346},{"_id":"public/lib/fastclick/LICENSE","hash":"6f474ea75c42442da7bbcf2e9143ce98258efd8d","modified":1624620344346},{"_id":"public/lib/font-awesome/HELP-US-OUT.txt","hash":"ee33b2798b1e714b904d663436c6b3521011d1fa","modified":1624620344346},{"_id":"public/lib/font-awesome/css/font-awesome.css.map","hash":"1573904b82807abbb32c97a3632c6c6808eaac50","modified":1624620344346},{"_id":"public/lib/Han/dist/font/han-space.otf","hash":"07436f011b44051f61b8329c99de4bec64e86f4b","modified":1624620344346},{"_id":"public/lib/Han/dist/font/han.otf","hash":"f1f6bb8f461f5672e000380195d3d2358a28494c","modified":1624620344346},{"_id":"public/lib/Han/dist/font/han-space.woff","hash":"7a635062b10bf5662ae1d218ba0980171005d060","modified":1624620344347},{"_id":"public/lib/Han/dist/font/han.woff2","hash":"623af3ed5423371ac136a4fe0e8cc7bb7396037a","modified":1624620344347},{"_id":"public/lib/Han/dist/font/han.woff","hash":"f38ff9b2eecaa17b50b66aa2dae87e9e7436d195","modified":1624620344347},{"_id":"public/live2dw/assets/exp/f00.exp.json","hash":"84073a497ddb6e56c6cfc244a0fb217ba473abf9","modified":1624620344347},{"_id":"public/live2dw/assets/moc/z16.256/texture_00.png","hash":"19f22619c246067d519aa1e6e477497cc4342414","modified":1624620344347},{"_id":"public/live2dw/assets/moc/z16.512/texture_00.png","hash":"251b9f944fb1575c01a62b8a9d7522fe76954b3b","modified":1624620344347},{"_id":"public/live2dw/assets/z16.model.json","hash":"e69f3d2ecc9bf51b3972ad9df8f6aaa31956910c","modified":1624620344347},{"_id":"public/live2dw/assets/mtn/idle.mtn","hash":"f6b879d9f1d096509a7edbc971b8fdd9697932e9","modified":1624620344347},{"_id":"public/live2dw/assets/z16.physics.json","hash":"67f13f60030d7e4c7f824c001ab5254ce4b9bafd","modified":1624620344347},{"_id":"public/live2dw/lib/L2Dwidget.min.js","hash":"5f1a807437cc723bcadc3791d37add5ceed566a2","modified":1624620344347},{"_id":"public/img/5.png","hash":"10d793d9580aa963b167395fa7a51f4ab202aca6","modified":1624620344805},{"_id":"public/img/1.png","hash":"6ef01df6b75c16e281ca3ba7b4157bd35cad3fba","modified":1624620344807},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.woff","hash":"28b782240b3e76db824e12c02754a9731a167527","modified":1624620344812},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.woff2","hash":"d6f48cba7d076fb6f2fd6ba993a75b9dc1ecbf0c","modified":1624620344812},{"_id":"public/live2dw/assets/moc/z16.moc","hash":"6b0241e80e94664d694b43ad05333960de2550c1","modified":1624620344812},{"_id":"public/live2dw/lib/L2Dwidget.min.js.map","hash":"3290fe2df45f065b51a1cd7b24ec325cbf9bb5ce","modified":1624620344812},{"_id":"public/js/src/DigitalRain.js","hash":"61306698d330c3c559414b2145e4520b31ae0fd2","modified":1624620344819},{"_id":"public/js/src/affix.js","hash":"978e0422b5bf1b560236d8d10ebc1adcf66392e3","modified":1624620344819},{"_id":"public/js/src/algolia-search.js","hash":"b172f697ed339a24b1e80261075232978d164c35","modified":1624620344819},{"_id":"public/js/src/clipboard-use.js","hash":"39c0152284151707efe5516e46bc6f82a64572f9","modified":1624620344819},{"_id":"public/js/src/bootstrap.js","hash":"034bc8113e0966fe2096ba5b56061bbf10ef0512","modified":1624620344819},{"_id":"public/js/src/exturl.js","hash":"e42e2aaab7bf4c19a0c8e779140e079c6aa5c0b1","modified":1624620344819},{"_id":"public/js/src/hook-duoshuo.js","hash":"a6119070c0119f33e08b29da7d2cce2635eb40a0","modified":1624620344819},{"_id":"public/js/src/clipboard.min.js","hash":"97e5ff350b8f55ed4c7afe8e6e1fa0f21a4ba275","modified":1624620344819},{"_id":"public/js/src/js.cookie.js","hash":"9b37973a90fd50e71ea91682265715e45ae82c75","modified":1624620344819},{"_id":"public/js/src/motion.js","hash":"da146caf488078a634d961debf2a71ce4106018c","modified":1624620344820},{"_id":"public/js/src/post-details.js","hash":"0693695a9512641daff63d99da772625a058ab18","modified":1624620344820},{"_id":"public/js/src/scroll-cookie.js","hash":"09dc828cbf5f31158ff6250d2bf7c3cde6365c67","modified":1624620344820},{"_id":"public/js/src/sidebar-clock.js","hash":"4e35a5dd951bd92af079acbff203b070e7391f1c","modified":1624620344820},{"_id":"public/lib/algolia-instant-search/instantsearch.min.css","hash":"90ef19edc982645b118b095615838d9c5eaba0de","modified":1624620344820},{"_id":"public/js/src/utils.js","hash":"2917c39c75b14b6dab7e1c46ab4d87b4df9fcd5d","modified":1624620344820},{"_id":"public/js/src/scrollspy.js","hash":"fe4da1b9fe73518226446f5f27d2831e4426fc35","modified":1624620344820},{"_id":"public/lib/canvas-nest/canvas-nest.min.js","hash":"0387e75e23b1db108a755073fe52a0d03eb391a7","modified":1624620344820},{"_id":"public/lib/canvas-ribbon/canvas-ribbon.js","hash":"7fd2f3e2773555392ef40df40cae3bedb884f17a","modified":1624620344820},{"_id":"public/lib/fastclick/bower.json","hash":"4dcecf83afddba148464d5339c93f6d0aa9f42e9","modified":1624620344820},{"_id":"public/lib/font-awesome/bower.json","hash":"64394a2a9aa00f8e321d8daa5e51a420f0e96dad","modified":1624620344820},{"_id":"public/lib/jquery_lazyload/bower.json","hash":"ae3c3b61e6e7f9e1d7e3585ad854380ecc04cf53","modified":1624620344820},{"_id":"public/lib/pace/pace-theme-barber-shop.min.css","hash":"ee0d51446cb4ffe1bb96bd7bc8c8e046dddfcf46","modified":1624620344820},{"_id":"public/lib/jquery_lazyload/jquery.lazyload.js","hash":"481fd478650e12b67c201a0ea41e92743f8b45a3","modified":1624620344820},{"_id":"public/lib/pace/pace-theme-big-counter.min.css","hash":"5b561dc328af4c4d512e20a76fe964d113a32ba8","modified":1624620344820},{"_id":"public/lib/jquery_lazyload/jquery.scrollstop.js","hash":"0e9a81785a011c98be5ea821a8ed7d411818cfd1","modified":1624620344820},{"_id":"public/lib/pace/pace-theme-bounce.min.css","hash":"f6bdb9a785b7979dd8ec5c60e278af955ef1e585","modified":1624620344820},{"_id":"public/lib/pace/pace-theme-center-atom.min.css","hash":"dcf79c24fe5350fb73d8038573a104e73639e9d3","modified":1624620344820},{"_id":"public/lib/pace/pace-theme-center-circle.min.css","hash":"a4066769c78affbfbc5e30a600e2c7862cd532e0","modified":1624620344820},{"_id":"public/lib/pace/pace-theme-center-radar.min.css","hash":"ab7cba998bf4c03b13df342bf43647fa4f419783","modified":1624620344820},{"_id":"public/lib/pace/pace-theme-corner-indicator.min.css","hash":"b3c64c973f31884e3d8145989476707333406b9a","modified":1624620344820},{"_id":"public/lib/pace/pace-theme-center-simple.min.css","hash":"67f44c947548bd4d77e7590d3f59e236cbf9e98a","modified":1624620344820},{"_id":"public/lib/pace/pace-theme-flash.min.css","hash":"13ace22c40312d7bbd8d9c1e50eff897a7a497d8","modified":1624620344820},{"_id":"public/lib/pace/pace-theme-loading-bar.min.css","hash":"7ee28875dfc1230d76c537f6605766e8d4011e9f","modified":1624620344820},{"_id":"public/lib/pace/pace-theme-mac-osx.min.css","hash":"9f2e7b51b084da407863826b25265b31150b3821","modified":1624620344820},{"_id":"public/lib/pace/pace-theme-minimal.min.css","hash":"9cd783cceb8a191f3c8b5d81f7a430ecc3e489d3","modified":1624620344820},{"_id":"public/lib/pace/pace.min.js","hash":"9944dfb7814b911090e96446cea4d36e2b487234","modified":1624620344820},{"_id":"public/lib/pace/pace-theme-fill-left.min.css","hash":"0bec1e235a4a2cccda3f993b205424e1441a44ae","modified":1624620344820},{"_id":"public/lib/velocity/velocity.ui.min.js","hash":"ed5e534cd680a25d8d14429af824f38a2c7d9908","modified":1624620344820},{"_id":"public/js/src/cursor/explosion.min.js","hash":"b64ae63811bbb103cc3075bd463285bf0d5e19e8","modified":1624620344820},{"_id":"public/js/src/cursor/text.js","hash":"7cc5e3bc9b0b7ec90890ab884cfbc5584c221398","modified":1624620344821},{"_id":"public/js/src/cursor/fireworks.js","hash":"53981959bc6def4a85bbbb41b07e4b1474a2124d","modified":1624620344821},{"_id":"public/js/src/schemes/pisces.js","hash":"79da92119bc246fe05d1626ac98426a83ec90a94","modified":1624620344821},{"_id":"public/js/src/cursor/love.min.js","hash":"effa770d8085f7e7fb903de217ce521dff163780","modified":1624620344821},{"_id":"public/lib/velocity/bower.json","hash":"0ef14e7ccdfba5db6eb3f8fc6aa3b47282c36409","modified":1624620344821},{"_id":"public/lib/fancybox/source/jquery.fancybox.css","hash":"5f163444617b6cf267342f06ac166a237bb62df9","modified":1624620344821},{"_id":"public/lib/fastclick/lib/fastclick.min.js","hash":"2cae0f5a6c5d6f3cb993015e6863f9483fc4de18","modified":1624620344821},{"_id":"public/lib/ua-parser-js/dist/ua-parser.pack.js","hash":"214dad442a92d36af77ed0ca1d9092b16687f02f","modified":1624620344821},{"_id":"public/lib/ua-parser-js/dist/ua-parser.min.js","hash":"38628e75e4412cc6f11074e03e1c6d257aae495b","modified":1624620344821},{"_id":"public/404.html","hash":"6259f3405e5bf1c9b2eb282027b62019f8b667a5","modified":1624620344821},{"_id":"public/lib/fastclick/README.html","hash":"287b2e24cae1f7d01877dda79b76c24f81123895","modified":1624620344821},{"_id":"public/lib/jquery_lazyload/CONTRIBUTING.html","hash":"a6358170d346af13b1452ac157b60505bec7015c","modified":1624620344821},{"_id":"public/lib/jquery_lazyload/README.html","hash":"bfb6e229fc36e493d45499b4ac30a7c298786ab4","modified":1624620344821},{"_id":"public/css/main.css","hash":"3afc08946b0b9871552831c6d11a17f2ba14d8fb","modified":1624620344821},{"_id":"public/lib/three/canvas_lines.min.js","hash":"dce4a3b65f8bf958f973690caa7ec4952f353b0c","modified":1624620344821},{"_id":"public/lib/three/three-waves.min.js","hash":"d968cba6b3a50b3626a02d67b544f349d83b147c","modified":1624620344821},{"_id":"public/lib/three/canvas_sphere.min.js","hash":"d8ea241a53c135a650f7335d2b6982b899fd58a9","modified":1624620344821},{"_id":"public/lib/jquery/index.js","hash":"41b4bfbaa96be6d1440db6e78004ade1c134e276","modified":1624620344821},{"_id":"public/lib/Han/dist/han.css","hash":"bd40da3fba8735df5850956814e312bd7b3193d7","modified":1624620344821},{"_id":"public/lib/velocity/velocity.ui.js","hash":"6a1d101eab3de87527bb54fcc8c7b36b79d8f0df","modified":1624620344821},{"_id":"public/lib/Han/dist/han.min.css","hash":"a0c9e32549a8b8cf327ab9227b037f323cdb60ee","modified":1624620344821},{"_id":"public/lib/Han/dist/han.min.js","hash":"f559c68a25065a14f47da954a7617d87263e409d","modified":1624620344821},{"_id":"public/lib/fancybox/source/jquery.fancybox.pack.js","hash":"53360764b429c212f424399384417ccc233bb3be","modified":1624620344821},{"_id":"public/lib/fancybox/source/jquery.fancybox.js","hash":"1cf3d47b5ccb7cb6e9019c64f2a88d03a64853e4","modified":1624620344821},{"_id":"public/lib/fastclick/lib/fastclick.js","hash":"06cef196733a710e77ad7e386ced6963f092dc55","modified":1624620344821},{"_id":"public/lib/font-awesome/css/font-awesome.min.css","hash":"512c7d79033e3028a9be61b540cf1a6870c896f8","modified":1624620344821},{"_id":"public/lib/velocity/velocity.min.js","hash":"2f1afadc12e4cf59ef3b405308d21baa97e739c6","modified":1624620344821},{"_id":"public/lib/velocity/velocity.js","hash":"9f08181baea0cc0e906703b7e5df9111b9ef3373","modified":1624620344821},{"_id":"public/lib/Han/dist/han.js","hash":"dff404f0a0597e84e74e0982ff3461c6b72d3882","modified":1624620344821},{"_id":"public/lib/three/three.min.js","hash":"73f4cdc17e51a72b9bf5b9291f65386d615c483b","modified":1624620344821},{"_id":"public/lib/algolia-instant-search/instantsearch.min.js","hash":"9ccc6f8144f54e86df9a3fd33a18368d81cf3a4f","modified":1624620344822},{"_id":"public/img/4.png","hash":"3fa31ba6f84e6ba33c980e1275ba55e844f0dbb6","modified":1624620344822},{"_id":"public/img/vuex-state-2.png","hash":"0e8bb1e9968ac0f10a0fd49bdc3c7fb329eae3ce","modified":1624620344822},{"_id":"public/img/vuex-state-3.png","hash":"a13ead7bb92a386fe68e8ea61d10a5d57cb93a76","modified":1624620344822},{"_id":"public/lib/font-awesome/fonts/FontAwesome.otf","hash":"048707bc52ac4b6563aaa383bfe8660a0ddc908c","modified":1624620344822},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.eot","hash":"d980c2ce873dc43af460d4d572d441304499f400","modified":1624620344822},{"_id":"public/live2dw/assets/moc/z16.1024/texture_00.png","hash":"c4f7c067d7d37601490554438ab801fce1feb92d","modified":1624620344822},{"_id":"public/live2dw/lib/L2Dwidget.0.min.js","hash":"35bb5b588b6de25c9be2dd51d3fd331feafac02d","modified":1624620344822},{"_id":"public/img/FiraCode.jpg","hash":"a9140680369a3aa504d96dd4e5a55bb4e438ba59","modified":1624620344837},{"_id":"public/images/qrCode.png","hash":"49da76c4f7f5fd1bd49e40c9892e7fca27e424f4","modified":1624620345162},{"_id":"public/img/1.jpg","hash":"1bcba3c6348e2190a42bff762800bf846cf9239c","modified":1624620345219},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.svg","hash":"b5483b11f8ba213e733b5b8af9927a04fec996f6","modified":1624620345219},{"_id":"public/live2dw/lib/L2Dwidget.0.min.js.map","hash":"35e71cc2a130199efb167b9a06939576602f0d75","modified":1624620345243},{"_id":"public/img/comb.png","hash":"8c29fac099cb1d6a022e7d36617b3a4eec649e98","modified":1624620345430},{"_id":"public/img/alpha-bg.jpg","hash":"d6ab7b1bfb0f0f335be401334366db76b5e63c01","modified":1624620345440}],"Category":[{"name":"mac","_id":"ckqc904oc0004wotvhtea9f5k"},{"name":"html5","_id":"ckqc904oi000awotvefr7huf6"},{"name":"video","_id":"ckqc904ol000gwotv70l1oqgn"},{"name":"vue","_id":"ckqc904on000lwotvoq4mswjd"},{"name":"css3","_id":"ckqc904oq000swotvscz8n4cm"},{"name":"git","_id":"ckqc904ot0010wotv7gd2p21s"},{"name":"css","_id":"ckqc904p0001bwotv7enmyzbv"},{"name":"markdown","_id":"ckqc904p5001mwotv9xj2rqr1"},{"name":"JavaScript","_id":"ckqc904p8001uwotv8wt58l1e"},{"name":"swiper","_id":"ckqc904pf0026wotvyb4bq97n"},{"name":"vscode","_id":"ckqc904pi002ewotvcn581w8n"},{"name":"webpack","_id":"ckqc904pk002lwotv7k9q60gg"},{"name":"vue3","parent":"ckqc904on000lwotvoq4mswjd","_id":"ckqc904pn002uwotvk0sxieod"},{"name":"adminUI","_id":"ckqc904pq0030wotvpmo34b9o"},{"name":"NodeJs","_id":"ckqc904py003rwotv26y238mr"},{"name":"editor","_id":"ckqc904q1003ywotvu8pdvm2l"},{"name":"WeChat","_id":"ckqc904qb004gwotvvpk9aop6"},{"name":"vue","parent":"ckqc904pk002lwotv7k9q60gg","_id":"ckqc904qe004pwotvrzelzxyc"},{"name":"Eslint","_id":"ckqc904qg004xwotvkt9ivehb"},{"name":"Vue","_id":"ckqc904qi0052wotviq4hx2wn"},{"name":"javascript","_id":"ckqc904qj0056wotvf3t2h9x8"},{"name":"compress","parent":"ckqc904qe004pwotvrzelzxyc","_id":"ckqc904qk0059wotv77d9oa9u"},{"name":"Vuex","parent":"ckqc904qi0052wotviq4hx2wn","_id":"ckqc904ql005dwotvikl1ncnk"}],"Data":[],"Page":[{"title":"了解作者","date":"2017-09-26T05:58:51.000Z","type":"about","_content":"姓名：赵晨敏\n性别：男\n年龄：不详\n性格：冷静、不爱交流\n爱好：动漫、音乐、科幻电影\n姓名：赵晨敏\n<img src=\"/blog/img/touxiang.jpg\" width=\"350\" height=\"350\" align=\"center\">\n2012年，我第二次经历了高考失利。疲惫于复读的重压和无趣，心灰意冷的我做出了人生中第一个重大的错误决定：随便选一所大学，随便选一门专业，拿到大学毕业证再做打算。大学前两年，大学生活似乎有无穷的魔力充实着我的生活，然而平静下来之后更多的却是失落和彷徨。我依然清楚的记得那一年毕业季，学长们走出大学校园的时候，他们表情凝重，眼神中透露出对未来的迷茫。从他们的眼中我似乎看到了自己不远的将来。我告诉自己绝对不能这样下去。如果做点什么，俩年后我也还是这幅模样。    \n我个人性格比较孤僻，不擅长和人交流。本身又是理科出生。很久以前就有朋友半开玩笑的说，像你这样的，不去做程序员屈才了。对他们来说可能是在开玩笑，而我觉得，这条路倒也不失为一条坦途。从那以后，我就不时的在想，不如自学编程吧！        \n大三第一学期，我开始自学编程，虽然有之前的理科基础，但荒废了俩年之后，不得不承认理解起来还是非常艰难。我曾经试图自学类似c++之类的语言，但晦涩难通，于是转而研究入门简单的语言，于是，html + css + js成为了我的首选。我承认在选择的时候是草率了一些，但不久之后我就被这三种语言迷住了。他们简单明快，各有分工却能相辅相成，对当时的我来说震撼不小。我也越来越被js的逻辑以及css的表现吸引，无法自拔。         \n再对前端有了初步的了解之后，我希望能有更多的机会接触，于是我在大三后半学期的时候向校领导提出申请：我想去找工作，不愿意在学校里继续消磨时光。当中经历了一些困难，但终于还是同意了，然后，我就暂时离开了校园，开始了我的前端路。          \n不得不说，工作还是完全不好找的。当时不是毕业季，加上专业不对还没有毕业，俩个月的时间里，我吃尽了苦头。父母提议我去参加培训，但我当时对培训是反对的，几个月的时间从零基础到月入俩万，这种事情从某种程度上和传销一样不靠谱。就在这时候，我收到了一家小公司的面试邀请，同时还有3个竞争者。山西是煤炭大省，但由于煤行业不景气，很多公司选择转型，这一家公司就是这样的情况，他们处于转型初期，要求的技术水平不高，我大致是可以胜任的，但毕竟底子比不过其他三位竞争者，无奈之下，咬咬牙：我要工资700块，算实习。       \n我有了人生的第一份工作，虽然工资不高。但我家在太原，除去中午要吃饭，其余并没有开销，倒也可以接受。好的是，我终于有更多时间来学习和提高。那一年是我接触前端第一年，纯正的前端小白，对任何功能和效果都充满了好奇。也找了很多的视频和书籍，现在想来，可能最充实的还是那段时间。         \n就这样，我度过了大学最后一年，这一年对我来说意义非凡。我真正从一个新手菜鸟变成了老资格的前段开发工程师。自学使我能更快的接受新鲜的事物，包括逐渐流行起来的各种框架、组件和工具。我也经常会和别人开玩笑，你们做开发花钱去学，还学的不得要领；我，拿着工资学开发，事半功倍。你要问我工资多少？我才不会告诉你。       \n前端的方向越来越远，生态系统也越来越完善，尤其NodeJs的横空出世，更是改变了前端开发多少年的开发模式。这一切仿佛有着一种神奇的魔力吸引着我前进。我也相信自己可以在这条路上越走越远。    ","source":"about/index.md","raw":"title: 了解作者\ndate: 2017-09-26 13:58:51\ntype: \"about\"\n---\n姓名：赵晨敏\n性别：男\n年龄：不详\n性格：冷静、不爱交流\n爱好：动漫、音乐、科幻电影\n姓名：赵晨敏\n<img src=\"/blog/img/touxiang.jpg\" width=\"350\" height=\"350\" align=\"center\">\n2012年，我第二次经历了高考失利。疲惫于复读的重压和无趣，心灰意冷的我做出了人生中第一个重大的错误决定：随便选一所大学，随便选一门专业，拿到大学毕业证再做打算。大学前两年，大学生活似乎有无穷的魔力充实着我的生活，然而平静下来之后更多的却是失落和彷徨。我依然清楚的记得那一年毕业季，学长们走出大学校园的时候，他们表情凝重，眼神中透露出对未来的迷茫。从他们的眼中我似乎看到了自己不远的将来。我告诉自己绝对不能这样下去。如果做点什么，俩年后我也还是这幅模样。    \n我个人性格比较孤僻，不擅长和人交流。本身又是理科出生。很久以前就有朋友半开玩笑的说，像你这样的，不去做程序员屈才了。对他们来说可能是在开玩笑，而我觉得，这条路倒也不失为一条坦途。从那以后，我就不时的在想，不如自学编程吧！        \n大三第一学期，我开始自学编程，虽然有之前的理科基础，但荒废了俩年之后，不得不承认理解起来还是非常艰难。我曾经试图自学类似c++之类的语言，但晦涩难通，于是转而研究入门简单的语言，于是，html + css + js成为了我的首选。我承认在选择的时候是草率了一些，但不久之后我就被这三种语言迷住了。他们简单明快，各有分工却能相辅相成，对当时的我来说震撼不小。我也越来越被js的逻辑以及css的表现吸引，无法自拔。         \n再对前端有了初步的了解之后，我希望能有更多的机会接触，于是我在大三后半学期的时候向校领导提出申请：我想去找工作，不愿意在学校里继续消磨时光。当中经历了一些困难，但终于还是同意了，然后，我就暂时离开了校园，开始了我的前端路。          \n不得不说，工作还是完全不好找的。当时不是毕业季，加上专业不对还没有毕业，俩个月的时间里，我吃尽了苦头。父母提议我去参加培训，但我当时对培训是反对的，几个月的时间从零基础到月入俩万，这种事情从某种程度上和传销一样不靠谱。就在这时候，我收到了一家小公司的面试邀请，同时还有3个竞争者。山西是煤炭大省，但由于煤行业不景气，很多公司选择转型，这一家公司就是这样的情况，他们处于转型初期，要求的技术水平不高，我大致是可以胜任的，但毕竟底子比不过其他三位竞争者，无奈之下，咬咬牙：我要工资700块，算实习。       \n我有了人生的第一份工作，虽然工资不高。但我家在太原，除去中午要吃饭，其余并没有开销，倒也可以接受。好的是，我终于有更多时间来学习和提高。那一年是我接触前端第一年，纯正的前端小白，对任何功能和效果都充满了好奇。也找了很多的视频和书籍，现在想来，可能最充实的还是那段时间。         \n就这样，我度过了大学最后一年，这一年对我来说意义非凡。我真正从一个新手菜鸟变成了老资格的前段开发工程师。自学使我能更快的接受新鲜的事物，包括逐渐流行起来的各种框架、组件和工具。我也经常会和别人开玩笑，你们做开发花钱去学，还学的不得要领；我，拿着工资学开发，事半功倍。你要问我工资多少？我才不会告诉你。       \n前端的方向越来越远，生态系统也越来越完善，尤其NodeJs的横空出世，更是改变了前端开发多少年的开发模式。这一切仿佛有着一种神奇的魔力吸引着我前进。我也相信自己可以在这条路上越走越远。    ","updated":"2021-06-25T11:19:55.451Z","path":"about/index.html","comments":1,"layout":"page","_id":"ckqc904o80001wotvk6z9d8p1","content":"<p>姓名：赵晨敏<br>性别：男<br>年龄：不详<br>性格：冷静、不爱交流<br>爱好：动漫、音乐、科幻电影<br>姓名：赵晨敏<br><img src=\"/blog/img/touxiang.jpg\" width=\"350\" height=\"350\" align=\"center\"><br>2012年，我第二次经历了高考失利。疲惫于复读的重压和无趣，心灰意冷的我做出了人生中第一个重大的错误决定：随便选一所大学，随便选一门专业，拿到大学毕业证再做打算。大学前两年，大学生活似乎有无穷的魔力充实着我的生活，然而平静下来之后更多的却是失落和彷徨。我依然清楚的记得那一年毕业季，学长们走出大学校园的时候，他们表情凝重，眼神中透露出对未来的迷茫。从他们的眼中我似乎看到了自己不远的将来。我告诉自己绝对不能这样下去。如果做点什么，俩年后我也还是这幅模样。<br>我个人性格比较孤僻，不擅长和人交流。本身又是理科出生。很久以前就有朋友半开玩笑的说，像你这样的，不去做程序员屈才了。对他们来说可能是在开玩笑，而我觉得，这条路倒也不失为一条坦途。从那以后，我就不时的在想，不如自学编程吧！<br>大三第一学期，我开始自学编程，虽然有之前的理科基础，但荒废了俩年之后，不得不承认理解起来还是非常艰难。我曾经试图自学类似c++之类的语言，但晦涩难通，于是转而研究入门简单的语言，于是，html + css + js成为了我的首选。我承认在选择的时候是草率了一些，但不久之后我就被这三种语言迷住了。他们简单明快，各有分工却能相辅相成，对当时的我来说震撼不小。我也越来越被js的逻辑以及css的表现吸引，无法自拔。<br>再对前端有了初步的了解之后，我希望能有更多的机会接触，于是我在大三后半学期的时候向校领导提出申请：我想去找工作，不愿意在学校里继续消磨时光。当中经历了一些困难，但终于还是同意了，然后，我就暂时离开了校园，开始了我的前端路。<br>不得不说，工作还是完全不好找的。当时不是毕业季，加上专业不对还没有毕业，俩个月的时间里，我吃尽了苦头。父母提议我去参加培训，但我当时对培训是反对的，几个月的时间从零基础到月入俩万，这种事情从某种程度上和传销一样不靠谱。就在这时候，我收到了一家小公司的面试邀请，同时还有3个竞争者。山西是煤炭大省，但由于煤行业不景气，很多公司选择转型，这一家公司就是这样的情况，他们处于转型初期，要求的技术水平不高，我大致是可以胜任的，但毕竟底子比不过其他三位竞争者，无奈之下，咬咬牙：我要工资700块，算实习。<br>我有了人生的第一份工作，虽然工资不高。但我家在太原，除去中午要吃饭，其余并没有开销，倒也可以接受。好的是，我终于有更多时间来学习和提高。那一年是我接触前端第一年，纯正的前端小白，对任何功能和效果都充满了好奇。也找了很多的视频和书籍，现在想来，可能最充实的还是那段时间。<br>就这样，我度过了大学最后一年，这一年对我来说意义非凡。我真正从一个新手菜鸟变成了老资格的前段开发工程师。自学使我能更快的接受新鲜的事物，包括逐渐流行起来的各种框架、组件和工具。我也经常会和别人开玩笑，你们做开发花钱去学，还学的不得要领；我，拿着工资学开发，事半功倍。你要问我工资多少？我才不会告诉你。<br>前端的方向越来越远，生态系统也越来越完善，尤其NodeJs的横空出世，更是改变了前端开发多少年的开发模式。这一切仿佛有着一种神奇的魔力吸引着我前进。我也相信自己可以在这条路上越走越远。    </p>\n","site":{"data":{}},"excerpt":"","more":"<p>姓名：赵晨敏<br>性别：男<br>年龄：不详<br>性格：冷静、不爱交流<br>爱好：动漫、音乐、科幻电影<br>姓名：赵晨敏<br><img src=\"/blog/img/touxiang.jpg\" width=\"350\" height=\"350\" align=\"center\"><br>2012年，我第二次经历了高考失利。疲惫于复读的重压和无趣，心灰意冷的我做出了人生中第一个重大的错误决定：随便选一所大学，随便选一门专业，拿到大学毕业证再做打算。大学前两年，大学生活似乎有无穷的魔力充实着我的生活，然而平静下来之后更多的却是失落和彷徨。我依然清楚的记得那一年毕业季，学长们走出大学校园的时候，他们表情凝重，眼神中透露出对未来的迷茫。从他们的眼中我似乎看到了自己不远的将来。我告诉自己绝对不能这样下去。如果做点什么，俩年后我也还是这幅模样。<br>我个人性格比较孤僻，不擅长和人交流。本身又是理科出生。很久以前就有朋友半开玩笑的说，像你这样的，不去做程序员屈才了。对他们来说可能是在开玩笑，而我觉得，这条路倒也不失为一条坦途。从那以后，我就不时的在想，不如自学编程吧！<br>大三第一学期，我开始自学编程，虽然有之前的理科基础，但荒废了俩年之后，不得不承认理解起来还是非常艰难。我曾经试图自学类似c++之类的语言，但晦涩难通，于是转而研究入门简单的语言，于是，html + css + js成为了我的首选。我承认在选择的时候是草率了一些，但不久之后我就被这三种语言迷住了。他们简单明快，各有分工却能相辅相成，对当时的我来说震撼不小。我也越来越被js的逻辑以及css的表现吸引，无法自拔。<br>再对前端有了初步的了解之后，我希望能有更多的机会接触，于是我在大三后半学期的时候向校领导提出申请：我想去找工作，不愿意在学校里继续消磨时光。当中经历了一些困难，但终于还是同意了，然后，我就暂时离开了校园，开始了我的前端路。<br>不得不说，工作还是完全不好找的。当时不是毕业季，加上专业不对还没有毕业，俩个月的时间里，我吃尽了苦头。父母提议我去参加培训，但我当时对培训是反对的，几个月的时间从零基础到月入俩万，这种事情从某种程度上和传销一样不靠谱。就在这时候，我收到了一家小公司的面试邀请，同时还有3个竞争者。山西是煤炭大省，但由于煤行业不景气，很多公司选择转型，这一家公司就是这样的情况，他们处于转型初期，要求的技术水平不高，我大致是可以胜任的，但毕竟底子比不过其他三位竞争者，无奈之下，咬咬牙：我要工资700块，算实习。<br>我有了人生的第一份工作，虽然工资不高。但我家在太原，除去中午要吃饭，其余并没有开销，倒也可以接受。好的是，我终于有更多时间来学习和提高。那一年是我接触前端第一年，纯正的前端小白，对任何功能和效果都充满了好奇。也找了很多的视频和书籍，现在想来，可能最充实的还是那段时间。<br>就这样，我度过了大学最后一年，这一年对我来说意义非凡。我真正从一个新手菜鸟变成了老资格的前段开发工程师。自学使我能更快的接受新鲜的事物，包括逐渐流行起来的各种框架、组件和工具。我也经常会和别人开玩笑，你们做开发花钱去学，还学的不得要领；我，拿着工资学开发，事半功倍。你要问我工资多少？我才不会告诉你。<br>前端的方向越来越远，生态系统也越来越完善，尤其NodeJs的横空出世，更是改变了前端开发多少年的开发模式。这一切仿佛有着一种神奇的魔力吸引着我前进。我也相信自己可以在这条路上越走越远。    </p>\n"},{"title":"文章分类","date":"2017-11-15T00:37:10.000Z","type":"categories","_content":"","source":"categories/index.md","raw":"title: 文章分类\ndate: 2017-11-15 08:37:10\ntype: \"categories\"\n---\n","updated":"2021-06-25T11:19:55.451Z","path":"categories/index.html","comments":1,"layout":"page","_id":"ckqc904ob0003wotvy70yg25w","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"标签","date":"2017-11-06T06:45:37.000Z","type":"tags","_content":"","source":"tags/index.md","raw":"title: 标签\ndate: 2017-11-06 14:45:37\ntype: \"tags\"\n---\n","updated":"2021-06-25T11:19:55.483Z","path":"tags/index.html","comments":1,"layout":"page","_id":"ckqc904oe0007wotveqntylkp","content":"","site":{"data":{}},"excerpt":"","more":""}],"Post":[{"title":"Mac本地服务器使用","date":"2021-05-07T08:53:46.000Z","description":"使用Mac自带的Apache服务","_content":"\n+ Apache命令\n\n  ```shell\n  # 开启 Apache\n  sudo apachectl start\n\n  # 重启 Apache\n  sudo apachectl restart\n\n  # 关闭 Apache\n  sudo apachectl stop\n  ```\n\n+ 开启 Apache, 服务已经运行在`http://127.0.0.1/`\n+ 开启 Finder, `Command + Shift + G`, 前往文件夹 `/Library/WebServer/Documents`, 这里存放本地服务文件，初始打开的是本路径下的`index.html.en`\n\n> 使用过后，记得关闭服务器，避免不必要的内存消耗\n","source":"_posts/Mac本地服务器使用.md","raw":"---\ntitle: Mac本地服务器使用\ndate: 2021-05-07 16:53:46\ntags: [mac]\ncategories: [mac]\ndescription: 使用Mac自带的Apache服务\n---\n\n+ Apache命令\n\n  ```shell\n  # 开启 Apache\n  sudo apachectl start\n\n  # 重启 Apache\n  sudo apachectl restart\n\n  # 关闭 Apache\n  sudo apachectl stop\n  ```\n\n+ 开启 Apache, 服务已经运行在`http://127.0.0.1/`\n+ 开启 Finder, `Command + Shift + G`, 前往文件夹 `/Library/WebServer/Documents`, 这里存放本地服务文件，初始打开的是本路径下的`index.html.en`\n\n> 使用过后，记得关闭服务器，避免不必要的内存消耗\n","slug":"Mac本地服务器使用","published":1,"updated":"2021-06-25T11:19:55.438Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckqc904o50000wotvf8akud0t","content":"<ul>\n<li><p>Apache命令</p>\n<div class=\"code-panel__wrapper\" autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\"><header class=\"mac-panel\"><span class=\"doc-path\"></span><span class=\"mac-panel__language\">SHELL</span></header><figure class=\"iseeu highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span> 开启 Apache</span><br><span class=\"line\">sudo apachectl start</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#</span> 重启 Apache</span><br><span class=\"line\">sudo apachectl restart</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#</span> 关闭 Apache</span><br><span class=\"line\">sudo apachectl stop</span><br></pre></td></tr></table></figure></div>\n</li>\n<li><p>开启 Apache, 服务已经运行在<code>http://127.0.0.1/</code></p>\n</li>\n<li>开启 Finder, <code>Command + Shift + G</code>, 前往文件夹 <code>/Library/WebServer/Documents</code>, 这里存放本地服务文件，初始打开的是本路径下的<code>index.html.en</code></li>\n</ul>\n<blockquote>\n<p>使用过后，记得关闭服务器，避免不必要的内存消耗</p>\n</blockquote>\n","site":{"data":{}},"excerpt":"","more":"<ul>\n<li><p>Apache命令</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span> 开启 Apache</span><br><span class=\"line\">sudo apachectl start</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#</span> 重启 Apache</span><br><span class=\"line\">sudo apachectl restart</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#</span> 关闭 Apache</span><br><span class=\"line\">sudo apachectl stop</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>开启 Apache, 服务已经运行在<code>http://127.0.0.1/</code></p>\n</li>\n<li>开启 Finder, <code>Command + Shift + G</code>, 前往文件夹 <code>/Library/WebServer/Documents</code>, 这里存放本地服务文件，初始打开的是本路径下的<code>index.html.en</code></li>\n</ul>\n<blockquote>\n<p>使用过后，记得关闭服务器，避免不必要的内存消耗</p>\n</blockquote>\n"},{"title":"HTML5原生拖放","date":"2017-11-07T06:59:28.000Z","description":"HTML5拖放API及示例","_content":"## 拖放（Drag 和 drop）是HTML5标准的组成部分\n### 拖放\n拖放是一种常见的特性，即抓取对象以后拖放到其他位置。在 HTML5 中，拖放是标准的一部分，任何元素都可以被拖放。\n### 浏览器支持\nInternet Explorer 9 + 、Firefox、Opera 12 + 、Chrome 以及 Safari 5 +  支持拖放。\n## 拖放API\n### draggable属性\n如果希望一个网页元素可以被拖动，只需要将他的draggable属性设置为true，这个元素就可以拖动了。\n```\n<div draggable=\"true\">拖动我试试</div>\n```\n### 事件\n拖动的过程会触发许多事件，主要有下面这些：\n* `dragstart`：网页元素开始拖动时触发。\n* `drag`：被拖动的元素在拖动过程中持续触发。\n* `dragenter`：被拖动的元素进入目标元素时触发，应在目标元素监听该事件。\n* `dragleave`：被拖动的元素离开目标元素时触发，应在目标元素监听该事件。\n* `dragover`：被拖动元素停留在目标元素之中时持续触发，应在目标元素监听该事件。\n* `drop`：被拖动元素或从文件系统选中的文件，拖放落下时触发。\n* `dragend`：网页元素拖动结束时触发。\n\n以上函数均可以指定回调函数：\n```\ndraggableElement.addEventListener('dragstart', function(e) {\n    alert('拖放开始！')\n    console.log(e);\n});\n```\n>拖动过程中，鼠标移动事件将不会被触发。\n\n### dataTransfer对象\n拖动过程中，回调函数接受的事件参数，有一个`dataTransfer`属性。它指向一个对象，包含了与拖动相关的各种信息。\ndataTransfer对象的属性：\n* dropEffect：拖放的操作类型，决定了浏览器如何显示鼠标形状，可能的值为copy、move、link和none。\n* effectAllowed：指定所允许的操作，可能的值为copy、move、link、copyLink、copyMove、linkMove、all、none和uninitialized（默认值，等同于all，即允许一切操作）。\n* files：包含一个FileList对象，表示拖放所涉及的文件，主要用于处理从文件系统拖入浏览器的文件。\n* types：储存在DataTransfer对象的数据的类型。\n\ndataTransfer对象的方法：\n* setData(format, data)：在dataTransfer对象上储存数据。第一个参数format用来指定储存的数据类型，比如text、url、text/html等。\n* getData(format)：从dataTransfer对象取出数据。\n* clearData(format)：清除dataTransfer对象所储存的数据。如果指定了format参数，则只清除该格式的数据，否则清除所有数据。\n* setDragImage(imgElement, x, y)：指定拖动过程中显示的图像。默认情况下，许多浏览器显示一个被拖动元素的半透明版本。参数imgElement必须是一个图像元素，而不是指向图像的路径，参数x和y表示图像相对于鼠标的位置。\n\n```\ndraggableElement.addEventListener('dragstart', function(event) {\n    event.dataTransfer.setData('text', 'Hello World!');\n});\n```\n上面代码在拖动开始时，在dataTransfer对象上储存一条文本信息，内容为“Hello World！”。当拖放结束时，可以用getData方法取出这条信息。                \n>dataTransfer对象允许在其上存储数据，这使得在被拖动元素与目标元素之间传送信息成为可能。\n\n## 实例 \n### 简单拖放\n```\n/* html */\n<ul id=\"drag-elements\">\n  <li id=\"A\" draggable=\"true\"><img src=\"1.jpg\" alt=\"\" /></li>\n  <li id=\"B\" draggable=\"true\"><img src=\"2.jpg\" alt=\"\" /></li>\n  <li id=\"C\" draggable=\"true\"><img src=\"3.jpg\" alt=\"\" /></li>\n  <li id=\"D\" draggable=\"true\"><img src=\"4.jpg\" alt=\"\" /></li>\n  <li id=\"E\" draggable=\"true\"><img src=\"5.jpg\" alt=\"\" /></li>\n  <li id=\"F\" draggable=\"true\"><img src=\"6.jpg\" alt=\"\" /></li>\n  <li id=\"G\" draggable=\"true\"><img src=\"7.jpg\" alt=\"\" /></li>\n  <li id=\"H\" draggable=\"true\"><img src=\"8.jpg\" alt=\"\" /></li>\n</ul>\n\n/* css */\nul {\n  margin:0 auto;\n  width:800px;\n}\nul:after{\n  content:\"\";\n  display:block;\n  clear:both;\n}\nli {\n  width:200px;\n  height:125px;\n  float:left;\n  background-color:#CCC;\n  text-align:center;\n  line-height:120px;\n  font-size:50px;\n  color:#F60;\n}\n.dragStart img {\n  width:200px;\n  height:125px;\n}\n/* js */\nvar dragElements = document.querySelectorAll('#drag-elements li');\nvar elementDragged = null;\nfor (var i = 0; i < dragElements.length; i++) {\n  dragElements[i].addEventListener('dragstart', function (e) {\n    e.dataTransfer.setData('text', this.id);\n    elementDragged = this;\n  });\n  dragElements[i].addEventListener('dragover', function (e) {\n    e.preventDefault();\n    e.dataTransfer.dropEffect = 'move';\n    elementDragged.setAttribute('class', 'dragStart');\n    return false;\n  });\n  dragElements[i].addEventListener('dragenter', function(e) {\n    e.preventDefault();\n    e.stopPropagation();\n    if (this.id != elementDragged.id) {\n      var tempInnerHtml = this.innerHTML;\n      this.innerHTML = elementDragged.innerHTML;\n      elementDragged.innerHTML = tempInnerHtml;\n      elementDragged.removeAttribute('class');\n      elementDragged = this;\n    }\n  });\n  dragElements[i].addEventListener('dragleave', function(e) {\n    e.preventDefault();\n    e.stopPropagation();\n    if (this.id != elementDragged.id) {\n      this.removeAttribute('class');\n    }\n  });\n  dragElements[i].addEventListener('drop', function (e) {\n    e.preventDefault();\n    e.stopPropagation();  \n    var targetId = e.dataTransfer.getData('text');\n    elementDragged.removeAttribute('class');\n    return false;\n  });\n  dragElements[i].addEventListener('dragend', function (e) {\n    elementDragged = null;\n  });\n};\n```\n### 拖放网元素\n```\n/* html */\n<ul id=\"drag-elements\">\n    <li draggable=\"true\">A</li>\n    <li draggable=\"true\">B</li>\n    <li draggable=\"true\">C</li>\n</ul>\n<ul id=\"drop-target\"></ul>\n\n/* css */\nul{\n    min-height:100px;\n    background-color:#EEE;\n    margin:20px;\n    padding: 0;\n}\nul li{\n    background-color:#CCC;\n    padding:10px;\n    margin-bottom:10px;\n    list-style: none;\n}\n\n/* js */\n// 获取dom元素\nvar target = document.querySelector('#drop-target');\nvar dragElements = document.querySelectorAll('#drag-elements li');\n\n// 定义变量跟踪被拖动的元素\nvar elementDragged = null;\n\n// 对可以拖放的元素绑定 dragstart 和 dragend 事件\nfor (var i = 0; i < dragElements.length; i++) {\n  dragElements[i].addEventListener('dragstart', function(e) {\n    e.dataTransfer.setData('text', this.innerHTML);\n    elementDragged = this;\n  });\n  dragElements[i].addEventListener('dragend', function(e) {\n    elementDragged = null;\n  });\n}\n\n// 向目标元素绑定 dragover 事件,来处理元素拖动进入目标元素之后的事情\ntarget.addEventListener('dragover', function(e) {\n  e.preventDefault();\n  e.dataTransfer.dropEffect = 'move';\n  return false;\n});\n\n// 最后定义目标元素的 drop事件,将被拖动元素从原来的位置删除\ntarget.addEventListener('drop', function(e) {\n  e.preventDefault();\n  e.stopPropagation();\n  this.innerHTML = 'Dropped ' + e.dataTransfer.getData('text');\n  document.querySelector('#drag-elements').removeChild(elementDragged);\n  return false;\n});\n```\n### 拖放文件\n```\n/* html */\n<div id=\"target\" title=\"拖动文件到这里\">\n  <div id=\"content\"></div>\n</div>\n\n/* css */\n#target{\n  margin:10px;\n  min-height:100px;\n  max-height:600px;\n  background-color:#EEE;\n  border-radius:5px;\n  overflow:auto;\n}\n#content{\n  padding:10px;\n  font-size:18px;\n  line-height:25px;\n}\n\n/* js */\n// 首先获取拖动的目标元素和内容展示区域\nvar target = document.querySelector('#target');\nvar contentDiv = document.querySelector('#content');\n\n// 然后定义目标元素的dragover事件,定义了当文件进入目标元素后要做的事情\ntarget.addEventListener('dragover', function(e) {\n  e.preventDefault();\n  e.stopPropagation();\n  e.dataTransfer.dropEffect = 'copy';\n  return false;\n});\n\n// 最后定义目标元素的drop事件,展示文件内容\ntarget.addEventListener('drop', function(e) {\n  e.preventDefault(); \n  e.stopPropagation();\n  var fileList = e.dataTransfer.files;\n  if (fileList.length > 0) {\n    var file = fileList[0];\n    var reader = new FileReader();\n    reader.onloadend = function(e) {\n      if (e.target.readyState == FileReader.DONE) {\n        var content = reader.result;\n        contentDiv.innerHTML = \"File: \" + file.name + \"\\n\\n\" + content;\n      }\n    }\n    reader.readAsBinaryString(file);\n  }\n});\n```\n### 最后附一份最近完成的基于Vue的完整的拖放实例\n```\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <meta http-equiv=\"X-UA-Compatible\" content=\"ie=edge\">\n    <title>Document</title>\n    <!-- jquery -->\n    <script src=\"https://cdn.bootcss.com/jquery/3.2.1/jquery.min.js\"></script>\n    <!-- vue -->\n    <script src=\"https://cdn.bootcss.com/vue/2.5.3/vue.js\"></script>\n    <!-- element-ui -->\n    <link rel=\"stylesheet\" href=\"https://unpkg.com/element-ui/lib/theme-chalk/index.css\">\n    <script src=\"https://unpkg.com/element-ui/lib/index.js\"></script>\n</head>\n\n<body>\n<div id=\"app\">\n    <el-table :data=\"tableData\" style=\"width: 100%\">\n        <el-table-column prop=\"date\" label=\"日期\" width=\"180\">\n        </el-table-column>\n        <el-table-column prop=\"name\" label=\"姓名\" width=\"180\">\n        </el-table-column>\n        <el-table-column prop=\"address\" label=\"地址\">\n        </el-table-column>\n    </el-table>\n</div>\n\n<script>\n    function dragStart(e) {\n        var el = e.target;\n        el = this;\n        start = this.id;\n    }\n\n    function dragOver(ev) {\n        var el = ev.target;\n        ev.preventDefault();\n        ev.dataTransfer.dropEffect = 'move';\n        $(el).addClass('dragStart');\n        return false;\n    }\n\n    function dragEnter(ev) {\n        var el = ev.target;\n        ev.preventDefault();\n        ev.stopPropagation();\n        if (this.id !== el.id) {\n            $(el).addClass('dragstart');\n            el = this;\n        }\n    }\n\n    function dragLeave(ev) {\n        var el = ev.target;\n        ev.preventDefault();\n        ev.stopPropagation();\n        if (this.id !== el.id) {\n            $(this).removeClass('dragstart');\n        }\n        $('td').css(\"borderBottomColor\", \"\")\n        $(this).find('td').css(\"borderBottomColor\", \"#f66e04\")\n    }\n\n    function drop(e) {\n        var el = e.target;\n        e.preventDefault();\n        e.stopPropagation();\n        if (this.id !== el.id) {\n            $(this).removeClass('dragstart');\n        }\n        end = this.id;\n    }\n\n    function dragEnd(e) {\n        var el = e.target;\n        $('td').css(\"borderBottomColor\", \"\")\n        var lists = app.$data.tableData;\n        el = null;\n        var flag;\n        flag = lists[start];\n        lists[start] = lists[end];\n        lists[end] = flag;\n        app.$data.tableData = lists.concat([]);\n        console.log(\"从索引\" + start + \"移动到索引\" + end)\n    }\n\n    var app = new Vue({\n        el: \"#app\",\n        data: function () {\n            return {\n                tableData: []\n            }\n        },\n        mounted: function () {\n            this.tableData = [{\n                date: '2016-05-02',\n                name: '王小虎1',\n                address: '上海市普陀区金沙江路 1518 弄'\n            }, {\n                date: '2016-05-04',\n                name: '王小虎2',\n                address: '上海市普陀区金沙江路 1517 弄'\n            }, {\n                date: '2016-05-01',\n                name: '王小虎3',\n                address: '上海市普陀区金沙江路 1519 弄'\n            }, {\n                date: '2016-05-03',\n                name: '王小虎4',\n                address: '上海市普陀区金沙江路 1516 弄'\n            }];\n        },\n        watch: {\n            tableData: function () {\n                this.$nextTick(() => {\n                    this.StartDrag()\n                })\n            }\n        },\n        methods: {\n            StartDrag: function () {\n                var start, end;\n                var dragElements = document.getElementsByClassName('el-table__row');\n                for (var i = 0; i < dragElements.length; i++) {\n                    dragElements[i].setAttribute('draggable', 'true');\n                    dragElements[i].setAttribute('id', i)\n                }\n                for (var i = 0; i < dragElements.length; i++) {\n                    /*\n                    *因为涉及到翻页和全局搜索之类的功能\n                    *会大量的树新数据导致dom变化\n                    *因此在绑定时间之前重新渲染页面\n                    *移除之前的事件重新绑定\n                    */\n                    // removeEventListener\n                    dragElements[i].removeEventListener('dragstart', dragStart);\n                    dragElements[i].removeEventListener('dragover', dragOver);\n                    dragElements[i].removeEventListener('dragenter', dragEnter);\n                    dragElements[i].removeEventListener('dragleave', dragLeave);\n                    dragElements[i].removeEventListener('drop', drop);\n                    dragElements[i].removeEventListener('dragend', dragEnd);\n                    // addEventListener\n                    dragElements[i].addEventListener('dragstart', dragStart);\n                    dragElements[i].addEventListener('dragover', dragOver);\n                    dragElements[i].addEventListener('dragenter', dragEnter);\n                    dragElements[i].addEventListener('dragleave', dragLeave);\n                    dragElements[i].addEventListener('drop', drop);\n                    dragElements[i].addEventListener('dragend', dragEnd);\n                }\n            }\n        }\n    })\n</script>\n</body>\n\n</html>\n\n```","source":"_posts/HTML5原生拖放.md","raw":"title: HTML5原生拖放\ntags: [draggable, html5]\ndate: 2017-11-07 14:59:28\ncategories: [html5]\ndescription: HTML5拖放API及示例\n---\n## 拖放（Drag 和 drop）是HTML5标准的组成部分\n### 拖放\n拖放是一种常见的特性，即抓取对象以后拖放到其他位置。在 HTML5 中，拖放是标准的一部分，任何元素都可以被拖放。\n### 浏览器支持\nInternet Explorer 9 + 、Firefox、Opera 12 + 、Chrome 以及 Safari 5 +  支持拖放。\n## 拖放API\n### draggable属性\n如果希望一个网页元素可以被拖动，只需要将他的draggable属性设置为true，这个元素就可以拖动了。\n```\n<div draggable=\"true\">拖动我试试</div>\n```\n### 事件\n拖动的过程会触发许多事件，主要有下面这些：\n* `dragstart`：网页元素开始拖动时触发。\n* `drag`：被拖动的元素在拖动过程中持续触发。\n* `dragenter`：被拖动的元素进入目标元素时触发，应在目标元素监听该事件。\n* `dragleave`：被拖动的元素离开目标元素时触发，应在目标元素监听该事件。\n* `dragover`：被拖动元素停留在目标元素之中时持续触发，应在目标元素监听该事件。\n* `drop`：被拖动元素或从文件系统选中的文件，拖放落下时触发。\n* `dragend`：网页元素拖动结束时触发。\n\n以上函数均可以指定回调函数：\n```\ndraggableElement.addEventListener('dragstart', function(e) {\n    alert('拖放开始！')\n    console.log(e);\n});\n```\n>拖动过程中，鼠标移动事件将不会被触发。\n\n### dataTransfer对象\n拖动过程中，回调函数接受的事件参数，有一个`dataTransfer`属性。它指向一个对象，包含了与拖动相关的各种信息。\ndataTransfer对象的属性：\n* dropEffect：拖放的操作类型，决定了浏览器如何显示鼠标形状，可能的值为copy、move、link和none。\n* effectAllowed：指定所允许的操作，可能的值为copy、move、link、copyLink、copyMove、linkMove、all、none和uninitialized（默认值，等同于all，即允许一切操作）。\n* files：包含一个FileList对象，表示拖放所涉及的文件，主要用于处理从文件系统拖入浏览器的文件。\n* types：储存在DataTransfer对象的数据的类型。\n\ndataTransfer对象的方法：\n* setData(format, data)：在dataTransfer对象上储存数据。第一个参数format用来指定储存的数据类型，比如text、url、text/html等。\n* getData(format)：从dataTransfer对象取出数据。\n* clearData(format)：清除dataTransfer对象所储存的数据。如果指定了format参数，则只清除该格式的数据，否则清除所有数据。\n* setDragImage(imgElement, x, y)：指定拖动过程中显示的图像。默认情况下，许多浏览器显示一个被拖动元素的半透明版本。参数imgElement必须是一个图像元素，而不是指向图像的路径，参数x和y表示图像相对于鼠标的位置。\n\n```\ndraggableElement.addEventListener('dragstart', function(event) {\n    event.dataTransfer.setData('text', 'Hello World!');\n});\n```\n上面代码在拖动开始时，在dataTransfer对象上储存一条文本信息，内容为“Hello World！”。当拖放结束时，可以用getData方法取出这条信息。                \n>dataTransfer对象允许在其上存储数据，这使得在被拖动元素与目标元素之间传送信息成为可能。\n\n## 实例 \n### 简单拖放\n```\n/* html */\n<ul id=\"drag-elements\">\n  <li id=\"A\" draggable=\"true\"><img src=\"1.jpg\" alt=\"\" /></li>\n  <li id=\"B\" draggable=\"true\"><img src=\"2.jpg\" alt=\"\" /></li>\n  <li id=\"C\" draggable=\"true\"><img src=\"3.jpg\" alt=\"\" /></li>\n  <li id=\"D\" draggable=\"true\"><img src=\"4.jpg\" alt=\"\" /></li>\n  <li id=\"E\" draggable=\"true\"><img src=\"5.jpg\" alt=\"\" /></li>\n  <li id=\"F\" draggable=\"true\"><img src=\"6.jpg\" alt=\"\" /></li>\n  <li id=\"G\" draggable=\"true\"><img src=\"7.jpg\" alt=\"\" /></li>\n  <li id=\"H\" draggable=\"true\"><img src=\"8.jpg\" alt=\"\" /></li>\n</ul>\n\n/* css */\nul {\n  margin:0 auto;\n  width:800px;\n}\nul:after{\n  content:\"\";\n  display:block;\n  clear:both;\n}\nli {\n  width:200px;\n  height:125px;\n  float:left;\n  background-color:#CCC;\n  text-align:center;\n  line-height:120px;\n  font-size:50px;\n  color:#F60;\n}\n.dragStart img {\n  width:200px;\n  height:125px;\n}\n/* js */\nvar dragElements = document.querySelectorAll('#drag-elements li');\nvar elementDragged = null;\nfor (var i = 0; i < dragElements.length; i++) {\n  dragElements[i].addEventListener('dragstart', function (e) {\n    e.dataTransfer.setData('text', this.id);\n    elementDragged = this;\n  });\n  dragElements[i].addEventListener('dragover', function (e) {\n    e.preventDefault();\n    e.dataTransfer.dropEffect = 'move';\n    elementDragged.setAttribute('class', 'dragStart');\n    return false;\n  });\n  dragElements[i].addEventListener('dragenter', function(e) {\n    e.preventDefault();\n    e.stopPropagation();\n    if (this.id != elementDragged.id) {\n      var tempInnerHtml = this.innerHTML;\n      this.innerHTML = elementDragged.innerHTML;\n      elementDragged.innerHTML = tempInnerHtml;\n      elementDragged.removeAttribute('class');\n      elementDragged = this;\n    }\n  });\n  dragElements[i].addEventListener('dragleave', function(e) {\n    e.preventDefault();\n    e.stopPropagation();\n    if (this.id != elementDragged.id) {\n      this.removeAttribute('class');\n    }\n  });\n  dragElements[i].addEventListener('drop', function (e) {\n    e.preventDefault();\n    e.stopPropagation();  \n    var targetId = e.dataTransfer.getData('text');\n    elementDragged.removeAttribute('class');\n    return false;\n  });\n  dragElements[i].addEventListener('dragend', function (e) {\n    elementDragged = null;\n  });\n};\n```\n### 拖放网元素\n```\n/* html */\n<ul id=\"drag-elements\">\n    <li draggable=\"true\">A</li>\n    <li draggable=\"true\">B</li>\n    <li draggable=\"true\">C</li>\n</ul>\n<ul id=\"drop-target\"></ul>\n\n/* css */\nul{\n    min-height:100px;\n    background-color:#EEE;\n    margin:20px;\n    padding: 0;\n}\nul li{\n    background-color:#CCC;\n    padding:10px;\n    margin-bottom:10px;\n    list-style: none;\n}\n\n/* js */\n// 获取dom元素\nvar target = document.querySelector('#drop-target');\nvar dragElements = document.querySelectorAll('#drag-elements li');\n\n// 定义变量跟踪被拖动的元素\nvar elementDragged = null;\n\n// 对可以拖放的元素绑定 dragstart 和 dragend 事件\nfor (var i = 0; i < dragElements.length; i++) {\n  dragElements[i].addEventListener('dragstart', function(e) {\n    e.dataTransfer.setData('text', this.innerHTML);\n    elementDragged = this;\n  });\n  dragElements[i].addEventListener('dragend', function(e) {\n    elementDragged = null;\n  });\n}\n\n// 向目标元素绑定 dragover 事件,来处理元素拖动进入目标元素之后的事情\ntarget.addEventListener('dragover', function(e) {\n  e.preventDefault();\n  e.dataTransfer.dropEffect = 'move';\n  return false;\n});\n\n// 最后定义目标元素的 drop事件,将被拖动元素从原来的位置删除\ntarget.addEventListener('drop', function(e) {\n  e.preventDefault();\n  e.stopPropagation();\n  this.innerHTML = 'Dropped ' + e.dataTransfer.getData('text');\n  document.querySelector('#drag-elements').removeChild(elementDragged);\n  return false;\n});\n```\n### 拖放文件\n```\n/* html */\n<div id=\"target\" title=\"拖动文件到这里\">\n  <div id=\"content\"></div>\n</div>\n\n/* css */\n#target{\n  margin:10px;\n  min-height:100px;\n  max-height:600px;\n  background-color:#EEE;\n  border-radius:5px;\n  overflow:auto;\n}\n#content{\n  padding:10px;\n  font-size:18px;\n  line-height:25px;\n}\n\n/* js */\n// 首先获取拖动的目标元素和内容展示区域\nvar target = document.querySelector('#target');\nvar contentDiv = document.querySelector('#content');\n\n// 然后定义目标元素的dragover事件,定义了当文件进入目标元素后要做的事情\ntarget.addEventListener('dragover', function(e) {\n  e.preventDefault();\n  e.stopPropagation();\n  e.dataTransfer.dropEffect = 'copy';\n  return false;\n});\n\n// 最后定义目标元素的drop事件,展示文件内容\ntarget.addEventListener('drop', function(e) {\n  e.preventDefault(); \n  e.stopPropagation();\n  var fileList = e.dataTransfer.files;\n  if (fileList.length > 0) {\n    var file = fileList[0];\n    var reader = new FileReader();\n    reader.onloadend = function(e) {\n      if (e.target.readyState == FileReader.DONE) {\n        var content = reader.result;\n        contentDiv.innerHTML = \"File: \" + file.name + \"\\n\\n\" + content;\n      }\n    }\n    reader.readAsBinaryString(file);\n  }\n});\n```\n### 最后附一份最近完成的基于Vue的完整的拖放实例\n```\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <meta http-equiv=\"X-UA-Compatible\" content=\"ie=edge\">\n    <title>Document</title>\n    <!-- jquery -->\n    <script src=\"https://cdn.bootcss.com/jquery/3.2.1/jquery.min.js\"></script>\n    <!-- vue -->\n    <script src=\"https://cdn.bootcss.com/vue/2.5.3/vue.js\"></script>\n    <!-- element-ui -->\n    <link rel=\"stylesheet\" href=\"https://unpkg.com/element-ui/lib/theme-chalk/index.css\">\n    <script src=\"https://unpkg.com/element-ui/lib/index.js\"></script>\n</head>\n\n<body>\n<div id=\"app\">\n    <el-table :data=\"tableData\" style=\"width: 100%\">\n        <el-table-column prop=\"date\" label=\"日期\" width=\"180\">\n        </el-table-column>\n        <el-table-column prop=\"name\" label=\"姓名\" width=\"180\">\n        </el-table-column>\n        <el-table-column prop=\"address\" label=\"地址\">\n        </el-table-column>\n    </el-table>\n</div>\n\n<script>\n    function dragStart(e) {\n        var el = e.target;\n        el = this;\n        start = this.id;\n    }\n\n    function dragOver(ev) {\n        var el = ev.target;\n        ev.preventDefault();\n        ev.dataTransfer.dropEffect = 'move';\n        $(el).addClass('dragStart');\n        return false;\n    }\n\n    function dragEnter(ev) {\n        var el = ev.target;\n        ev.preventDefault();\n        ev.stopPropagation();\n        if (this.id !== el.id) {\n            $(el).addClass('dragstart');\n            el = this;\n        }\n    }\n\n    function dragLeave(ev) {\n        var el = ev.target;\n        ev.preventDefault();\n        ev.stopPropagation();\n        if (this.id !== el.id) {\n            $(this).removeClass('dragstart');\n        }\n        $('td').css(\"borderBottomColor\", \"\")\n        $(this).find('td').css(\"borderBottomColor\", \"#f66e04\")\n    }\n\n    function drop(e) {\n        var el = e.target;\n        e.preventDefault();\n        e.stopPropagation();\n        if (this.id !== el.id) {\n            $(this).removeClass('dragstart');\n        }\n        end = this.id;\n    }\n\n    function dragEnd(e) {\n        var el = e.target;\n        $('td').css(\"borderBottomColor\", \"\")\n        var lists = app.$data.tableData;\n        el = null;\n        var flag;\n        flag = lists[start];\n        lists[start] = lists[end];\n        lists[end] = flag;\n        app.$data.tableData = lists.concat([]);\n        console.log(\"从索引\" + start + \"移动到索引\" + end)\n    }\n\n    var app = new Vue({\n        el: \"#app\",\n        data: function () {\n            return {\n                tableData: []\n            }\n        },\n        mounted: function () {\n            this.tableData = [{\n                date: '2016-05-02',\n                name: '王小虎1',\n                address: '上海市普陀区金沙江路 1518 弄'\n            }, {\n                date: '2016-05-04',\n                name: '王小虎2',\n                address: '上海市普陀区金沙江路 1517 弄'\n            }, {\n                date: '2016-05-01',\n                name: '王小虎3',\n                address: '上海市普陀区金沙江路 1519 弄'\n            }, {\n                date: '2016-05-03',\n                name: '王小虎4',\n                address: '上海市普陀区金沙江路 1516 弄'\n            }];\n        },\n        watch: {\n            tableData: function () {\n                this.$nextTick(() => {\n                    this.StartDrag()\n                })\n            }\n        },\n        methods: {\n            StartDrag: function () {\n                var start, end;\n                var dragElements = document.getElementsByClassName('el-table__row');\n                for (var i = 0; i < dragElements.length; i++) {\n                    dragElements[i].setAttribute('draggable', 'true');\n                    dragElements[i].setAttribute('id', i)\n                }\n                for (var i = 0; i < dragElements.length; i++) {\n                    /*\n                    *因为涉及到翻页和全局搜索之类的功能\n                    *会大量的树新数据导致dom变化\n                    *因此在绑定时间之前重新渲染页面\n                    *移除之前的事件重新绑定\n                    */\n                    // removeEventListener\n                    dragElements[i].removeEventListener('dragstart', dragStart);\n                    dragElements[i].removeEventListener('dragover', dragOver);\n                    dragElements[i].removeEventListener('dragenter', dragEnter);\n                    dragElements[i].removeEventListener('dragleave', dragLeave);\n                    dragElements[i].removeEventListener('drop', drop);\n                    dragElements[i].removeEventListener('dragend', dragEnd);\n                    // addEventListener\n                    dragElements[i].addEventListener('dragstart', dragStart);\n                    dragElements[i].addEventListener('dragover', dragOver);\n                    dragElements[i].addEventListener('dragenter', dragEnter);\n                    dragElements[i].addEventListener('dragleave', dragLeave);\n                    dragElements[i].addEventListener('drop', drop);\n                    dragElements[i].addEventListener('dragend', dragEnd);\n                }\n            }\n        }\n    })\n</script>\n</body>\n\n</html>\n\n```","slug":"HTML5原生拖放","published":1,"updated":"2021-06-25T11:19:55.438Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckqc904o90002wotvsy0q0yqo","content":"<h2 id=\"拖放（Drag-和-drop）是HTML5标准的组成部分\"><a href=\"#拖放（Drag-和-drop）是HTML5标准的组成部分\" class=\"headerlink\" title=\"拖放（Drag 和 drop）是HTML5标准的组成部分\"></a>拖放（Drag 和 drop）是HTML5标准的组成部分</h2><h3 id=\"拖放\"><a href=\"#拖放\" class=\"headerlink\" title=\"拖放\"></a>拖放</h3><p>拖放是一种常见的特性，即抓取对象以后拖放到其他位置。在 HTML5 中，拖放是标准的一部分，任何元素都可以被拖放。</p>\n<h3 id=\"浏览器支持\"><a href=\"#浏览器支持\" class=\"headerlink\" title=\"浏览器支持\"></a>浏览器支持</h3><p>Internet Explorer 9 + 、Firefox、Opera 12 + 、Chrome 以及 Safari 5 +  支持拖放。</p>\n<h2 id=\"拖放API\"><a href=\"#拖放API\" class=\"headerlink\" title=\"拖放API\"></a>拖放API</h2><h3 id=\"draggable属性\"><a href=\"#draggable属性\" class=\"headerlink\" title=\"draggable属性\"></a>draggable属性</h3><p>如果希望一个网页元素可以被拖动，只需要将他的draggable属性设置为true，这个元素就可以拖动了。<br><div class=\"code-panel__wrapper\" autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\"><header class=\"mac-panel\"><span class=\"doc-path\"></span><span class=\"mac-panel__language\">PLAIN</span></header><figure class=\"iseeu highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;div draggable=&quot;true&quot;&gt;拖动我试试&lt;/div&gt;</span><br></pre></td></tr></table></figure></div></p>\n<h3 id=\"事件\"><a href=\"#事件\" class=\"headerlink\" title=\"事件\"></a>事件</h3><p>拖动的过程会触发许多事件，主要有下面这些：</p>\n<ul>\n<li><code>dragstart</code>：网页元素开始拖动时触发。</li>\n<li><code>drag</code>：被拖动的元素在拖动过程中持续触发。</li>\n<li><code>dragenter</code>：被拖动的元素进入目标元素时触发，应在目标元素监听该事件。</li>\n<li><code>dragleave</code>：被拖动的元素离开目标元素时触发，应在目标元素监听该事件。</li>\n<li><code>dragover</code>：被拖动元素停留在目标元素之中时持续触发，应在目标元素监听该事件。</li>\n<li><code>drop</code>：被拖动元素或从文件系统选中的文件，拖放落下时触发。</li>\n<li><code>dragend</code>：网页元素拖动结束时触发。</li>\n</ul>\n<p>以上函数均可以指定回调函数：<br><div class=\"code-panel__wrapper\" autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\"><header class=\"mac-panel\"><span class=\"doc-path\"></span><span class=\"mac-panel__language\">PLAIN</span></header><figure class=\"iseeu highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">draggableElement.addEventListener(&apos;dragstart&apos;, function(e) &#123;</span><br><span class=\"line\">    alert(&apos;拖放开始！&apos;)</span><br><span class=\"line\">    console.log(e);</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure></div></p>\n<blockquote>\n<p>拖动过程中，鼠标移动事件将不会被触发。</p>\n</blockquote>\n<h3 id=\"dataTransfer对象\"><a href=\"#dataTransfer对象\" class=\"headerlink\" title=\"dataTransfer对象\"></a>dataTransfer对象</h3><p>拖动过程中，回调函数接受的事件参数，有一个<code>dataTransfer</code>属性。它指向一个对象，包含了与拖动相关的各种信息。<br>dataTransfer对象的属性：</p>\n<ul>\n<li>dropEffect：拖放的操作类型，决定了浏览器如何显示鼠标形状，可能的值为copy、move、link和none。</li>\n<li>effectAllowed：指定所允许的操作，可能的值为copy、move、link、copyLink、copyMove、linkMove、all、none和uninitialized（默认值，等同于all，即允许一切操作）。</li>\n<li>files：包含一个FileList对象，表示拖放所涉及的文件，主要用于处理从文件系统拖入浏览器的文件。</li>\n<li>types：储存在DataTransfer对象的数据的类型。</li>\n</ul>\n<p>dataTransfer对象的方法：</p>\n<ul>\n<li>setData(format, data)：在dataTransfer对象上储存数据。第一个参数format用来指定储存的数据类型，比如text、url、text/html等。</li>\n<li>getData(format)：从dataTransfer对象取出数据。</li>\n<li>clearData(format)：清除dataTransfer对象所储存的数据。如果指定了format参数，则只清除该格式的数据，否则清除所有数据。</li>\n<li>setDragImage(imgElement, x, y)：指定拖动过程中显示的图像。默认情况下，许多浏览器显示一个被拖动元素的半透明版本。参数imgElement必须是一个图像元素，而不是指向图像的路径，参数x和y表示图像相对于鼠标的位置。</li>\n</ul>\n<div class=\"code-panel__wrapper\" autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\"><header class=\"mac-panel\"><span class=\"doc-path\"></span><span class=\"mac-panel__language\">PLAIN</span></header><figure class=\"iseeu highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">draggableElement.addEventListener(&apos;dragstart&apos;, function(event) &#123;</span><br><span class=\"line\">    event.dataTransfer.setData(&apos;text&apos;, &apos;Hello World!&apos;);</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure></div>\n<p>上面代码在拖动开始时，在dataTransfer对象上储存一条文本信息，内容为“Hello World！”。当拖放结束时，可以用getData方法取出这条信息。                </p>\n<blockquote>\n<p>dataTransfer对象允许在其上存储数据，这使得在被拖动元素与目标元素之间传送信息成为可能。</p>\n</blockquote>\n<h2 id=\"实例\"><a href=\"#实例\" class=\"headerlink\" title=\"实例\"></a>实例</h2><h3 id=\"简单拖放\"><a href=\"#简单拖放\" class=\"headerlink\" title=\"简单拖放\"></a>简单拖放</h3><div class=\"code-panel__wrapper\" autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\"><header class=\"mac-panel\"><span class=\"doc-path\"></span><span class=\"mac-panel__language\">PLAIN</span></header><figure class=\"iseeu highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/* html */</span><br><span class=\"line\">&lt;ul id=&quot;drag-elements&quot;&gt;</span><br><span class=\"line\">  &lt;li id=&quot;A&quot; draggable=&quot;true&quot;&gt;&lt;img src=&quot;1.jpg&quot; alt=&quot;&quot; /&gt;&lt;/li&gt;</span><br><span class=\"line\">  &lt;li id=&quot;B&quot; draggable=&quot;true&quot;&gt;&lt;img src=&quot;2.jpg&quot; alt=&quot;&quot; /&gt;&lt;/li&gt;</span><br><span class=\"line\">  &lt;li id=&quot;C&quot; draggable=&quot;true&quot;&gt;&lt;img src=&quot;3.jpg&quot; alt=&quot;&quot; /&gt;&lt;/li&gt;</span><br><span class=\"line\">  &lt;li id=&quot;D&quot; draggable=&quot;true&quot;&gt;&lt;img src=&quot;4.jpg&quot; alt=&quot;&quot; /&gt;&lt;/li&gt;</span><br><span class=\"line\">  &lt;li id=&quot;E&quot; draggable=&quot;true&quot;&gt;&lt;img src=&quot;5.jpg&quot; alt=&quot;&quot; /&gt;&lt;/li&gt;</span><br><span class=\"line\">  &lt;li id=&quot;F&quot; draggable=&quot;true&quot;&gt;&lt;img src=&quot;6.jpg&quot; alt=&quot;&quot; /&gt;&lt;/li&gt;</span><br><span class=\"line\">  &lt;li id=&quot;G&quot; draggable=&quot;true&quot;&gt;&lt;img src=&quot;7.jpg&quot; alt=&quot;&quot; /&gt;&lt;/li&gt;</span><br><span class=\"line\">  &lt;li id=&quot;H&quot; draggable=&quot;true&quot;&gt;&lt;img src=&quot;8.jpg&quot; alt=&quot;&quot; /&gt;&lt;/li&gt;</span><br><span class=\"line\">&lt;/ul&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">/* css */</span><br><span class=\"line\">ul &#123;</span><br><span class=\"line\">  margin:0 auto;</span><br><span class=\"line\">  width:800px;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">ul:after&#123;</span><br><span class=\"line\">  content:&quot;&quot;;</span><br><span class=\"line\">  display:block;</span><br><span class=\"line\">  clear:both;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">li &#123;</span><br><span class=\"line\">  width:200px;</span><br><span class=\"line\">  height:125px;</span><br><span class=\"line\">  float:left;</span><br><span class=\"line\">  background-color:#CCC;</span><br><span class=\"line\">  text-align:center;</span><br><span class=\"line\">  line-height:120px;</span><br><span class=\"line\">  font-size:50px;</span><br><span class=\"line\">  color:#F60;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">.dragStart img &#123;</span><br><span class=\"line\">  width:200px;</span><br><span class=\"line\">  height:125px;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">/* js */</span><br><span class=\"line\">var dragElements = document.querySelectorAll(&apos;#drag-elements li&apos;);</span><br><span class=\"line\">var elementDragged = null;</span><br><span class=\"line\">for (var i = 0; i &lt; dragElements.length; i++) &#123;</span><br><span class=\"line\">  dragElements[i].addEventListener(&apos;dragstart&apos;, function (e) &#123;</span><br><span class=\"line\">    e.dataTransfer.setData(&apos;text&apos;, this.id);</span><br><span class=\"line\">    elementDragged = this;</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\">  dragElements[i].addEventListener(&apos;dragover&apos;, function (e) &#123;</span><br><span class=\"line\">    e.preventDefault();</span><br><span class=\"line\">    e.dataTransfer.dropEffect = &apos;move&apos;;</span><br><span class=\"line\">    elementDragged.setAttribute(&apos;class&apos;, &apos;dragStart&apos;);</span><br><span class=\"line\">    return false;</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\">  dragElements[i].addEventListener(&apos;dragenter&apos;, function(e) &#123;</span><br><span class=\"line\">    e.preventDefault();</span><br><span class=\"line\">    e.stopPropagation();</span><br><span class=\"line\">    if (this.id != elementDragged.id) &#123;</span><br><span class=\"line\">      var tempInnerHtml = this.innerHTML;</span><br><span class=\"line\">      this.innerHTML = elementDragged.innerHTML;</span><br><span class=\"line\">      elementDragged.innerHTML = tempInnerHtml;</span><br><span class=\"line\">      elementDragged.removeAttribute(&apos;class&apos;);</span><br><span class=\"line\">      elementDragged = this;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\">  dragElements[i].addEventListener(&apos;dragleave&apos;, function(e) &#123;</span><br><span class=\"line\">    e.preventDefault();</span><br><span class=\"line\">    e.stopPropagation();</span><br><span class=\"line\">    if (this.id != elementDragged.id) &#123;</span><br><span class=\"line\">      this.removeAttribute(&apos;class&apos;);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\">  dragElements[i].addEventListener(&apos;drop&apos;, function (e) &#123;</span><br><span class=\"line\">    e.preventDefault();</span><br><span class=\"line\">    e.stopPropagation();  </span><br><span class=\"line\">    var targetId = e.dataTransfer.getData(&apos;text&apos;);</span><br><span class=\"line\">    elementDragged.removeAttribute(&apos;class&apos;);</span><br><span class=\"line\">    return false;</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\">  dragElements[i].addEventListener(&apos;dragend&apos;, function (e) &#123;</span><br><span class=\"line\">    elementDragged = null;</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure></div>\n<h3 id=\"拖放网元素\"><a href=\"#拖放网元素\" class=\"headerlink\" title=\"拖放网元素\"></a>拖放网元素</h3><div class=\"code-panel__wrapper\" autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\"><header class=\"mac-panel\"><span class=\"doc-path\"></span><span class=\"mac-panel__language\">PLAIN</span></header><figure class=\"iseeu highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/* html */</span><br><span class=\"line\">&lt;ul id=&quot;drag-elements&quot;&gt;</span><br><span class=\"line\">    &lt;li draggable=&quot;true&quot;&gt;A&lt;/li&gt;</span><br><span class=\"line\">    &lt;li draggable=&quot;true&quot;&gt;B&lt;/li&gt;</span><br><span class=\"line\">    &lt;li draggable=&quot;true&quot;&gt;C&lt;/li&gt;</span><br><span class=\"line\">&lt;/ul&gt;</span><br><span class=\"line\">&lt;ul id=&quot;drop-target&quot;&gt;&lt;/ul&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">/* css */</span><br><span class=\"line\">ul&#123;</span><br><span class=\"line\">    min-height:100px;</span><br><span class=\"line\">    background-color:#EEE;</span><br><span class=\"line\">    margin:20px;</span><br><span class=\"line\">    padding: 0;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">ul li&#123;</span><br><span class=\"line\">    background-color:#CCC;</span><br><span class=\"line\">    padding:10px;</span><br><span class=\"line\">    margin-bottom:10px;</span><br><span class=\"line\">    list-style: none;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">/* js */</span><br><span class=\"line\">// 获取dom元素</span><br><span class=\"line\">var target = document.querySelector(&apos;#drop-target&apos;);</span><br><span class=\"line\">var dragElements = document.querySelectorAll(&apos;#drag-elements li&apos;);</span><br><span class=\"line\"></span><br><span class=\"line\">// 定义变量跟踪被拖动的元素</span><br><span class=\"line\">var elementDragged = null;</span><br><span class=\"line\"></span><br><span class=\"line\">// 对可以拖放的元素绑定 dragstart 和 dragend 事件</span><br><span class=\"line\">for (var i = 0; i &lt; dragElements.length; i++) &#123;</span><br><span class=\"line\">  dragElements[i].addEventListener(&apos;dragstart&apos;, function(e) &#123;</span><br><span class=\"line\">    e.dataTransfer.setData(&apos;text&apos;, this.innerHTML);</span><br><span class=\"line\">    elementDragged = this;</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\">  dragElements[i].addEventListener(&apos;dragend&apos;, function(e) &#123;</span><br><span class=\"line\">    elementDragged = null;</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">// 向目标元素绑定 dragover 事件,来处理元素拖动进入目标元素之后的事情</span><br><span class=\"line\">target.addEventListener(&apos;dragover&apos;, function(e) &#123;</span><br><span class=\"line\">  e.preventDefault();</span><br><span class=\"line\">  e.dataTransfer.dropEffect = &apos;move&apos;;</span><br><span class=\"line\">  return false;</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">// 最后定义目标元素的 drop事件,将被拖动元素从原来的位置删除</span><br><span class=\"line\">target.addEventListener(&apos;drop&apos;, function(e) &#123;</span><br><span class=\"line\">  e.preventDefault();</span><br><span class=\"line\">  e.stopPropagation();</span><br><span class=\"line\">  this.innerHTML = &apos;Dropped &apos; + e.dataTransfer.getData(&apos;text&apos;);</span><br><span class=\"line\">  document.querySelector(&apos;#drag-elements&apos;).removeChild(elementDragged);</span><br><span class=\"line\">  return false;</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure></div>\n<h3 id=\"拖放文件\"><a href=\"#拖放文件\" class=\"headerlink\" title=\"拖放文件\"></a>拖放文件</h3><div class=\"code-panel__wrapper\" autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\"><header class=\"mac-panel\"><span class=\"doc-path\"></span><span class=\"mac-panel__language\">PLAIN</span></header><figure class=\"iseeu highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/* html */</span><br><span class=\"line\">&lt;div id=&quot;target&quot; title=&quot;拖动文件到这里&quot;&gt;</span><br><span class=\"line\">  &lt;div id=&quot;content&quot;&gt;&lt;/div&gt;</span><br><span class=\"line\">&lt;/div&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">/* css */</span><br><span class=\"line\">#target&#123;</span><br><span class=\"line\">  margin:10px;</span><br><span class=\"line\">  min-height:100px;</span><br><span class=\"line\">  max-height:600px;</span><br><span class=\"line\">  background-color:#EEE;</span><br><span class=\"line\">  border-radius:5px;</span><br><span class=\"line\">  overflow:auto;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">#content&#123;</span><br><span class=\"line\">  padding:10px;</span><br><span class=\"line\">  font-size:18px;</span><br><span class=\"line\">  line-height:25px;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">/* js */</span><br><span class=\"line\">// 首先获取拖动的目标元素和内容展示区域</span><br><span class=\"line\">var target = document.querySelector(&apos;#target&apos;);</span><br><span class=\"line\">var contentDiv = document.querySelector(&apos;#content&apos;);</span><br><span class=\"line\"></span><br><span class=\"line\">// 然后定义目标元素的dragover事件,定义了当文件进入目标元素后要做的事情</span><br><span class=\"line\">target.addEventListener(&apos;dragover&apos;, function(e) &#123;</span><br><span class=\"line\">  e.preventDefault();</span><br><span class=\"line\">  e.stopPropagation();</span><br><span class=\"line\">  e.dataTransfer.dropEffect = &apos;copy&apos;;</span><br><span class=\"line\">  return false;</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">// 最后定义目标元素的drop事件,展示文件内容</span><br><span class=\"line\">target.addEventListener(&apos;drop&apos;, function(e) &#123;</span><br><span class=\"line\">  e.preventDefault(); </span><br><span class=\"line\">  e.stopPropagation();</span><br><span class=\"line\">  var fileList = e.dataTransfer.files;</span><br><span class=\"line\">  if (fileList.length &gt; 0) &#123;</span><br><span class=\"line\">    var file = fileList[0];</span><br><span class=\"line\">    var reader = new FileReader();</span><br><span class=\"line\">    reader.onloadend = function(e) &#123;</span><br><span class=\"line\">      if (e.target.readyState == FileReader.DONE) &#123;</span><br><span class=\"line\">        var content = reader.result;</span><br><span class=\"line\">        contentDiv.innerHTML = &quot;File: &quot; + file.name + &quot;\\n\\n&quot; + content;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    reader.readAsBinaryString(file);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure></div>\n<h3 id=\"最后附一份最近完成的基于Vue的完整的拖放实例\"><a href=\"#最后附一份最近完成的基于Vue的完整的拖放实例\" class=\"headerlink\" title=\"最后附一份最近完成的基于Vue的完整的拖放实例\"></a>最后附一份最近完成的基于Vue的完整的拖放实例</h3><div class=\"code-panel__wrapper\" autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\"><header class=\"mac-panel\"><span class=\"doc-path\"></span><span class=\"mac-panel__language\">PLAIN</span></header><figure class=\"iseeu highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;!DOCTYPE html&gt;</span><br><span class=\"line\">&lt;html lang=&quot;en&quot;&gt;</span><br><span class=\"line\">&lt;head&gt;</span><br><span class=\"line\">    &lt;meta charset=&quot;UTF-8&quot;&gt;</span><br><span class=\"line\">    &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt;</span><br><span class=\"line\">    &lt;meta http-equiv=&quot;X-UA-Compatible&quot; content=&quot;ie=edge&quot;&gt;</span><br><span class=\"line\">    &lt;title&gt;Document&lt;/title&gt;</span><br><span class=\"line\">    &lt;!-- jquery --&gt;</span><br><span class=\"line\">    &lt;script src=&quot;https://cdn.bootcss.com/jquery/3.2.1/jquery.min.js&quot;&gt;&lt;/script&gt;</span><br><span class=\"line\">    &lt;!-- vue --&gt;</span><br><span class=\"line\">    &lt;script src=&quot;https://cdn.bootcss.com/vue/2.5.3/vue.js&quot;&gt;&lt;/script&gt;</span><br><span class=\"line\">    &lt;!-- element-ui --&gt;</span><br><span class=\"line\">    &lt;link rel=&quot;stylesheet&quot; href=&quot;https://unpkg.com/element-ui/lib/theme-chalk/index.css&quot;&gt;</span><br><span class=\"line\">    &lt;script src=&quot;https://unpkg.com/element-ui/lib/index.js&quot;&gt;&lt;/script&gt;</span><br><span class=\"line\">&lt;/head&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;body&gt;</span><br><span class=\"line\">&lt;div id=&quot;app&quot;&gt;</span><br><span class=\"line\">    &lt;el-table :data=&quot;tableData&quot; style=&quot;width: 100%&quot;&gt;</span><br><span class=\"line\">        &lt;el-table-column prop=&quot;date&quot; label=&quot;日期&quot; width=&quot;180&quot;&gt;</span><br><span class=\"line\">        &lt;/el-table-column&gt;</span><br><span class=\"line\">        &lt;el-table-column prop=&quot;name&quot; label=&quot;姓名&quot; width=&quot;180&quot;&gt;</span><br><span class=\"line\">        &lt;/el-table-column&gt;</span><br><span class=\"line\">        &lt;el-table-column prop=&quot;address&quot; label=&quot;地址&quot;&gt;</span><br><span class=\"line\">        &lt;/el-table-column&gt;</span><br><span class=\"line\">    &lt;/el-table&gt;</span><br><span class=\"line\">&lt;/div&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;script&gt;</span><br><span class=\"line\">    function dragStart(e) &#123;</span><br><span class=\"line\">        var el = e.target;</span><br><span class=\"line\">        el = this;</span><br><span class=\"line\">        start = this.id;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    function dragOver(ev) &#123;</span><br><span class=\"line\">        var el = ev.target;</span><br><span class=\"line\">        ev.preventDefault();</span><br><span class=\"line\">        ev.dataTransfer.dropEffect = &apos;move&apos;;</span><br><span class=\"line\">        $(el).addClass(&apos;dragStart&apos;);</span><br><span class=\"line\">        return false;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    function dragEnter(ev) &#123;</span><br><span class=\"line\">        var el = ev.target;</span><br><span class=\"line\">        ev.preventDefault();</span><br><span class=\"line\">        ev.stopPropagation();</span><br><span class=\"line\">        if (this.id !== el.id) &#123;</span><br><span class=\"line\">            $(el).addClass(&apos;dragstart&apos;);</span><br><span class=\"line\">            el = this;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    function dragLeave(ev) &#123;</span><br><span class=\"line\">        var el = ev.target;</span><br><span class=\"line\">        ev.preventDefault();</span><br><span class=\"line\">        ev.stopPropagation();</span><br><span class=\"line\">        if (this.id !== el.id) &#123;</span><br><span class=\"line\">            $(this).removeClass(&apos;dragstart&apos;);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        $(&apos;td&apos;).css(&quot;borderBottomColor&quot;, &quot;&quot;)</span><br><span class=\"line\">        $(this).find(&apos;td&apos;).css(&quot;borderBottomColor&quot;, &quot;#f66e04&quot;)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    function drop(e) &#123;</span><br><span class=\"line\">        var el = e.target;</span><br><span class=\"line\">        e.preventDefault();</span><br><span class=\"line\">        e.stopPropagation();</span><br><span class=\"line\">        if (this.id !== el.id) &#123;</span><br><span class=\"line\">            $(this).removeClass(&apos;dragstart&apos;);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        end = this.id;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    function dragEnd(e) &#123;</span><br><span class=\"line\">        var el = e.target;</span><br><span class=\"line\">        $(&apos;td&apos;).css(&quot;borderBottomColor&quot;, &quot;&quot;)</span><br><span class=\"line\">        var lists = app.$data.tableData;</span><br><span class=\"line\">        el = null;</span><br><span class=\"line\">        var flag;</span><br><span class=\"line\">        flag = lists[start];</span><br><span class=\"line\">        lists[start] = lists[end];</span><br><span class=\"line\">        lists[end] = flag;</span><br><span class=\"line\">        app.$data.tableData = lists.concat([]);</span><br><span class=\"line\">        console.log(&quot;从索引&quot; + start + &quot;移动到索引&quot; + end)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    var app = new Vue(&#123;</span><br><span class=\"line\">        el: &quot;#app&quot;,</span><br><span class=\"line\">        data: function () &#123;</span><br><span class=\"line\">            return &#123;</span><br><span class=\"line\">                tableData: []</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;,</span><br><span class=\"line\">        mounted: function () &#123;</span><br><span class=\"line\">            this.tableData = [&#123;</span><br><span class=\"line\">                date: &apos;2016-05-02&apos;,</span><br><span class=\"line\">                name: &apos;王小虎1&apos;,</span><br><span class=\"line\">                address: &apos;上海市普陀区金沙江路 1518 弄&apos;</span><br><span class=\"line\">            &#125;, &#123;</span><br><span class=\"line\">                date: &apos;2016-05-04&apos;,</span><br><span class=\"line\">                name: &apos;王小虎2&apos;,</span><br><span class=\"line\">                address: &apos;上海市普陀区金沙江路 1517 弄&apos;</span><br><span class=\"line\">            &#125;, &#123;</span><br><span class=\"line\">                date: &apos;2016-05-01&apos;,</span><br><span class=\"line\">                name: &apos;王小虎3&apos;,</span><br><span class=\"line\">                address: &apos;上海市普陀区金沙江路 1519 弄&apos;</span><br><span class=\"line\">            &#125;, &#123;</span><br><span class=\"line\">                date: &apos;2016-05-03&apos;,</span><br><span class=\"line\">                name: &apos;王小虎4&apos;,</span><br><span class=\"line\">                address: &apos;上海市普陀区金沙江路 1516 弄&apos;</span><br><span class=\"line\">            &#125;];</span><br><span class=\"line\">        &#125;,</span><br><span class=\"line\">        watch: &#123;</span><br><span class=\"line\">            tableData: function () &#123;</span><br><span class=\"line\">                this.$nextTick(() =&gt; &#123;</span><br><span class=\"line\">                    this.StartDrag()</span><br><span class=\"line\">                &#125;)</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;,</span><br><span class=\"line\">        methods: &#123;</span><br><span class=\"line\">            StartDrag: function () &#123;</span><br><span class=\"line\">                var start, end;</span><br><span class=\"line\">                var dragElements = document.getElementsByClassName(&apos;el-table__row&apos;);</span><br><span class=\"line\">                for (var i = 0; i &lt; dragElements.length; i++) &#123;</span><br><span class=\"line\">                    dragElements[i].setAttribute(&apos;draggable&apos;, &apos;true&apos;);</span><br><span class=\"line\">                    dragElements[i].setAttribute(&apos;id&apos;, i)</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">                for (var i = 0; i &lt; dragElements.length; i++) &#123;</span><br><span class=\"line\">                    /*</span><br><span class=\"line\">                    *因为涉及到翻页和全局搜索之类的功能</span><br><span class=\"line\">                    *会大量的树新数据导致dom变化</span><br><span class=\"line\">                    *因此在绑定时间之前重新渲染页面</span><br><span class=\"line\">                    *移除之前的事件重新绑定</span><br><span class=\"line\">                    */</span><br><span class=\"line\">                    // removeEventListener</span><br><span class=\"line\">                    dragElements[i].removeEventListener(&apos;dragstart&apos;, dragStart);</span><br><span class=\"line\">                    dragElements[i].removeEventListener(&apos;dragover&apos;, dragOver);</span><br><span class=\"line\">                    dragElements[i].removeEventListener(&apos;dragenter&apos;, dragEnter);</span><br><span class=\"line\">                    dragElements[i].removeEventListener(&apos;dragleave&apos;, dragLeave);</span><br><span class=\"line\">                    dragElements[i].removeEventListener(&apos;drop&apos;, drop);</span><br><span class=\"line\">                    dragElements[i].removeEventListener(&apos;dragend&apos;, dragEnd);</span><br><span class=\"line\">                    // addEventListener</span><br><span class=\"line\">                    dragElements[i].addEventListener(&apos;dragstart&apos;, dragStart);</span><br><span class=\"line\">                    dragElements[i].addEventListener(&apos;dragover&apos;, dragOver);</span><br><span class=\"line\">                    dragElements[i].addEventListener(&apos;dragenter&apos;, dragEnter);</span><br><span class=\"line\">                    dragElements[i].addEventListener(&apos;dragleave&apos;, dragLeave);</span><br><span class=\"line\">                    dragElements[i].addEventListener(&apos;drop&apos;, drop);</span><br><span class=\"line\">                    dragElements[i].addEventListener(&apos;dragend&apos;, dragEnd);</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">&lt;/script&gt;</span><br><span class=\"line\">&lt;/body&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;/html&gt;</span><br></pre></td></tr></table></figure></div>","site":{"data":{}},"excerpt":"","more":"<h2 id=\"拖放（Drag-和-drop）是HTML5标准的组成部分\"><a href=\"#拖放（Drag-和-drop）是HTML5标准的组成部分\" class=\"headerlink\" title=\"拖放（Drag 和 drop）是HTML5标准的组成部分\"></a>拖放（Drag 和 drop）是HTML5标准的组成部分</h2><h3 id=\"拖放\"><a href=\"#拖放\" class=\"headerlink\" title=\"拖放\"></a>拖放</h3><p>拖放是一种常见的特性，即抓取对象以后拖放到其他位置。在 HTML5 中，拖放是标准的一部分，任何元素都可以被拖放。</p>\n<h3 id=\"浏览器支持\"><a href=\"#浏览器支持\" class=\"headerlink\" title=\"浏览器支持\"></a>浏览器支持</h3><p>Internet Explorer 9 + 、Firefox、Opera 12 + 、Chrome 以及 Safari 5 +  支持拖放。</p>\n<h2 id=\"拖放API\"><a href=\"#拖放API\" class=\"headerlink\" title=\"拖放API\"></a>拖放API</h2><h3 id=\"draggable属性\"><a href=\"#draggable属性\" class=\"headerlink\" title=\"draggable属性\"></a>draggable属性</h3><p>如果希望一个网页元素可以被拖动，只需要将他的draggable属性设置为true，这个元素就可以拖动了。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;div draggable=&quot;true&quot;&gt;拖动我试试&lt;/div&gt;</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"事件\"><a href=\"#事件\" class=\"headerlink\" title=\"事件\"></a>事件</h3><p>拖动的过程会触发许多事件，主要有下面这些：</p>\n<ul>\n<li><code>dragstart</code>：网页元素开始拖动时触发。</li>\n<li><code>drag</code>：被拖动的元素在拖动过程中持续触发。</li>\n<li><code>dragenter</code>：被拖动的元素进入目标元素时触发，应在目标元素监听该事件。</li>\n<li><code>dragleave</code>：被拖动的元素离开目标元素时触发，应在目标元素监听该事件。</li>\n<li><code>dragover</code>：被拖动元素停留在目标元素之中时持续触发，应在目标元素监听该事件。</li>\n<li><code>drop</code>：被拖动元素或从文件系统选中的文件，拖放落下时触发。</li>\n<li><code>dragend</code>：网页元素拖动结束时触发。</li>\n</ul>\n<p>以上函数均可以指定回调函数：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">draggableElement.addEventListener(&apos;dragstart&apos;, function(e) &#123;</span><br><span class=\"line\">    alert(&apos;拖放开始！&apos;)</span><br><span class=\"line\">    console.log(e);</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure></p>\n<blockquote>\n<p>拖动过程中，鼠标移动事件将不会被触发。</p>\n</blockquote>\n<h3 id=\"dataTransfer对象\"><a href=\"#dataTransfer对象\" class=\"headerlink\" title=\"dataTransfer对象\"></a>dataTransfer对象</h3><p>拖动过程中，回调函数接受的事件参数，有一个<code>dataTransfer</code>属性。它指向一个对象，包含了与拖动相关的各种信息。<br>dataTransfer对象的属性：</p>\n<ul>\n<li>dropEffect：拖放的操作类型，决定了浏览器如何显示鼠标形状，可能的值为copy、move、link和none。</li>\n<li>effectAllowed：指定所允许的操作，可能的值为copy、move、link、copyLink、copyMove、linkMove、all、none和uninitialized（默认值，等同于all，即允许一切操作）。</li>\n<li>files：包含一个FileList对象，表示拖放所涉及的文件，主要用于处理从文件系统拖入浏览器的文件。</li>\n<li>types：储存在DataTransfer对象的数据的类型。</li>\n</ul>\n<p>dataTransfer对象的方法：</p>\n<ul>\n<li>setData(format, data)：在dataTransfer对象上储存数据。第一个参数format用来指定储存的数据类型，比如text、url、text/html等。</li>\n<li>getData(format)：从dataTransfer对象取出数据。</li>\n<li>clearData(format)：清除dataTransfer对象所储存的数据。如果指定了format参数，则只清除该格式的数据，否则清除所有数据。</li>\n<li>setDragImage(imgElement, x, y)：指定拖动过程中显示的图像。默认情况下，许多浏览器显示一个被拖动元素的半透明版本。参数imgElement必须是一个图像元素，而不是指向图像的路径，参数x和y表示图像相对于鼠标的位置。</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">draggableElement.addEventListener(&apos;dragstart&apos;, function(event) &#123;</span><br><span class=\"line\">    event.dataTransfer.setData(&apos;text&apos;, &apos;Hello World!&apos;);</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<p>上面代码在拖动开始时，在dataTransfer对象上储存一条文本信息，内容为“Hello World！”。当拖放结束时，可以用getData方法取出这条信息。                </p>\n<blockquote>\n<p>dataTransfer对象允许在其上存储数据，这使得在被拖动元素与目标元素之间传送信息成为可能。</p>\n</blockquote>\n<h2 id=\"实例\"><a href=\"#实例\" class=\"headerlink\" title=\"实例\"></a>实例</h2><h3 id=\"简单拖放\"><a href=\"#简单拖放\" class=\"headerlink\" title=\"简单拖放\"></a>简单拖放</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/* html */</span><br><span class=\"line\">&lt;ul id=&quot;drag-elements&quot;&gt;</span><br><span class=\"line\">  &lt;li id=&quot;A&quot; draggable=&quot;true&quot;&gt;&lt;img src=&quot;1.jpg&quot; alt=&quot;&quot; /&gt;&lt;/li&gt;</span><br><span class=\"line\">  &lt;li id=&quot;B&quot; draggable=&quot;true&quot;&gt;&lt;img src=&quot;2.jpg&quot; alt=&quot;&quot; /&gt;&lt;/li&gt;</span><br><span class=\"line\">  &lt;li id=&quot;C&quot; draggable=&quot;true&quot;&gt;&lt;img src=&quot;3.jpg&quot; alt=&quot;&quot; /&gt;&lt;/li&gt;</span><br><span class=\"line\">  &lt;li id=&quot;D&quot; draggable=&quot;true&quot;&gt;&lt;img src=&quot;4.jpg&quot; alt=&quot;&quot; /&gt;&lt;/li&gt;</span><br><span class=\"line\">  &lt;li id=&quot;E&quot; draggable=&quot;true&quot;&gt;&lt;img src=&quot;5.jpg&quot; alt=&quot;&quot; /&gt;&lt;/li&gt;</span><br><span class=\"line\">  &lt;li id=&quot;F&quot; draggable=&quot;true&quot;&gt;&lt;img src=&quot;6.jpg&quot; alt=&quot;&quot; /&gt;&lt;/li&gt;</span><br><span class=\"line\">  &lt;li id=&quot;G&quot; draggable=&quot;true&quot;&gt;&lt;img src=&quot;7.jpg&quot; alt=&quot;&quot; /&gt;&lt;/li&gt;</span><br><span class=\"line\">  &lt;li id=&quot;H&quot; draggable=&quot;true&quot;&gt;&lt;img src=&quot;8.jpg&quot; alt=&quot;&quot; /&gt;&lt;/li&gt;</span><br><span class=\"line\">&lt;/ul&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">/* css */</span><br><span class=\"line\">ul &#123;</span><br><span class=\"line\">  margin:0 auto;</span><br><span class=\"line\">  width:800px;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">ul:after&#123;</span><br><span class=\"line\">  content:&quot;&quot;;</span><br><span class=\"line\">  display:block;</span><br><span class=\"line\">  clear:both;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">li &#123;</span><br><span class=\"line\">  width:200px;</span><br><span class=\"line\">  height:125px;</span><br><span class=\"line\">  float:left;</span><br><span class=\"line\">  background-color:#CCC;</span><br><span class=\"line\">  text-align:center;</span><br><span class=\"line\">  line-height:120px;</span><br><span class=\"line\">  font-size:50px;</span><br><span class=\"line\">  color:#F60;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">.dragStart img &#123;</span><br><span class=\"line\">  width:200px;</span><br><span class=\"line\">  height:125px;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">/* js */</span><br><span class=\"line\">var dragElements = document.querySelectorAll(&apos;#drag-elements li&apos;);</span><br><span class=\"line\">var elementDragged = null;</span><br><span class=\"line\">for (var i = 0; i &lt; dragElements.length; i++) &#123;</span><br><span class=\"line\">  dragElements[i].addEventListener(&apos;dragstart&apos;, function (e) &#123;</span><br><span class=\"line\">    e.dataTransfer.setData(&apos;text&apos;, this.id);</span><br><span class=\"line\">    elementDragged = this;</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\">  dragElements[i].addEventListener(&apos;dragover&apos;, function (e) &#123;</span><br><span class=\"line\">    e.preventDefault();</span><br><span class=\"line\">    e.dataTransfer.dropEffect = &apos;move&apos;;</span><br><span class=\"line\">    elementDragged.setAttribute(&apos;class&apos;, &apos;dragStart&apos;);</span><br><span class=\"line\">    return false;</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\">  dragElements[i].addEventListener(&apos;dragenter&apos;, function(e) &#123;</span><br><span class=\"line\">    e.preventDefault();</span><br><span class=\"line\">    e.stopPropagation();</span><br><span class=\"line\">    if (this.id != elementDragged.id) &#123;</span><br><span class=\"line\">      var tempInnerHtml = this.innerHTML;</span><br><span class=\"line\">      this.innerHTML = elementDragged.innerHTML;</span><br><span class=\"line\">      elementDragged.innerHTML = tempInnerHtml;</span><br><span class=\"line\">      elementDragged.removeAttribute(&apos;class&apos;);</span><br><span class=\"line\">      elementDragged = this;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\">  dragElements[i].addEventListener(&apos;dragleave&apos;, function(e) &#123;</span><br><span class=\"line\">    e.preventDefault();</span><br><span class=\"line\">    e.stopPropagation();</span><br><span class=\"line\">    if (this.id != elementDragged.id) &#123;</span><br><span class=\"line\">      this.removeAttribute(&apos;class&apos;);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\">  dragElements[i].addEventListener(&apos;drop&apos;, function (e) &#123;</span><br><span class=\"line\">    e.preventDefault();</span><br><span class=\"line\">    e.stopPropagation();  </span><br><span class=\"line\">    var targetId = e.dataTransfer.getData(&apos;text&apos;);</span><br><span class=\"line\">    elementDragged.removeAttribute(&apos;class&apos;);</span><br><span class=\"line\">    return false;</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\">  dragElements[i].addEventListener(&apos;dragend&apos;, function (e) &#123;</span><br><span class=\"line\">    elementDragged = null;</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n<h3 id=\"拖放网元素\"><a href=\"#拖放网元素\" class=\"headerlink\" title=\"拖放网元素\"></a>拖放网元素</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/* html */</span><br><span class=\"line\">&lt;ul id=&quot;drag-elements&quot;&gt;</span><br><span class=\"line\">    &lt;li draggable=&quot;true&quot;&gt;A&lt;/li&gt;</span><br><span class=\"line\">    &lt;li draggable=&quot;true&quot;&gt;B&lt;/li&gt;</span><br><span class=\"line\">    &lt;li draggable=&quot;true&quot;&gt;C&lt;/li&gt;</span><br><span class=\"line\">&lt;/ul&gt;</span><br><span class=\"line\">&lt;ul id=&quot;drop-target&quot;&gt;&lt;/ul&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">/* css */</span><br><span class=\"line\">ul&#123;</span><br><span class=\"line\">    min-height:100px;</span><br><span class=\"line\">    background-color:#EEE;</span><br><span class=\"line\">    margin:20px;</span><br><span class=\"line\">    padding: 0;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">ul li&#123;</span><br><span class=\"line\">    background-color:#CCC;</span><br><span class=\"line\">    padding:10px;</span><br><span class=\"line\">    margin-bottom:10px;</span><br><span class=\"line\">    list-style: none;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">/* js */</span><br><span class=\"line\">// 获取dom元素</span><br><span class=\"line\">var target = document.querySelector(&apos;#drop-target&apos;);</span><br><span class=\"line\">var dragElements = document.querySelectorAll(&apos;#drag-elements li&apos;);</span><br><span class=\"line\"></span><br><span class=\"line\">// 定义变量跟踪被拖动的元素</span><br><span class=\"line\">var elementDragged = null;</span><br><span class=\"line\"></span><br><span class=\"line\">// 对可以拖放的元素绑定 dragstart 和 dragend 事件</span><br><span class=\"line\">for (var i = 0; i &lt; dragElements.length; i++) &#123;</span><br><span class=\"line\">  dragElements[i].addEventListener(&apos;dragstart&apos;, function(e) &#123;</span><br><span class=\"line\">    e.dataTransfer.setData(&apos;text&apos;, this.innerHTML);</span><br><span class=\"line\">    elementDragged = this;</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\">  dragElements[i].addEventListener(&apos;dragend&apos;, function(e) &#123;</span><br><span class=\"line\">    elementDragged = null;</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">// 向目标元素绑定 dragover 事件,来处理元素拖动进入目标元素之后的事情</span><br><span class=\"line\">target.addEventListener(&apos;dragover&apos;, function(e) &#123;</span><br><span class=\"line\">  e.preventDefault();</span><br><span class=\"line\">  e.dataTransfer.dropEffect = &apos;move&apos;;</span><br><span class=\"line\">  return false;</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">// 最后定义目标元素的 drop事件,将被拖动元素从原来的位置删除</span><br><span class=\"line\">target.addEventListener(&apos;drop&apos;, function(e) &#123;</span><br><span class=\"line\">  e.preventDefault();</span><br><span class=\"line\">  e.stopPropagation();</span><br><span class=\"line\">  this.innerHTML = &apos;Dropped &apos; + e.dataTransfer.getData(&apos;text&apos;);</span><br><span class=\"line\">  document.querySelector(&apos;#drag-elements&apos;).removeChild(elementDragged);</span><br><span class=\"line\">  return false;</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<h3 id=\"拖放文件\"><a href=\"#拖放文件\" class=\"headerlink\" title=\"拖放文件\"></a>拖放文件</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/* html */</span><br><span class=\"line\">&lt;div id=&quot;target&quot; title=&quot;拖动文件到这里&quot;&gt;</span><br><span class=\"line\">  &lt;div id=&quot;content&quot;&gt;&lt;/div&gt;</span><br><span class=\"line\">&lt;/div&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">/* css */</span><br><span class=\"line\">#target&#123;</span><br><span class=\"line\">  margin:10px;</span><br><span class=\"line\">  min-height:100px;</span><br><span class=\"line\">  max-height:600px;</span><br><span class=\"line\">  background-color:#EEE;</span><br><span class=\"line\">  border-radius:5px;</span><br><span class=\"line\">  overflow:auto;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">#content&#123;</span><br><span class=\"line\">  padding:10px;</span><br><span class=\"line\">  font-size:18px;</span><br><span class=\"line\">  line-height:25px;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">/* js */</span><br><span class=\"line\">// 首先获取拖动的目标元素和内容展示区域</span><br><span class=\"line\">var target = document.querySelector(&apos;#target&apos;);</span><br><span class=\"line\">var contentDiv = document.querySelector(&apos;#content&apos;);</span><br><span class=\"line\"></span><br><span class=\"line\">// 然后定义目标元素的dragover事件,定义了当文件进入目标元素后要做的事情</span><br><span class=\"line\">target.addEventListener(&apos;dragover&apos;, function(e) &#123;</span><br><span class=\"line\">  e.preventDefault();</span><br><span class=\"line\">  e.stopPropagation();</span><br><span class=\"line\">  e.dataTransfer.dropEffect = &apos;copy&apos;;</span><br><span class=\"line\">  return false;</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">// 最后定义目标元素的drop事件,展示文件内容</span><br><span class=\"line\">target.addEventListener(&apos;drop&apos;, function(e) &#123;</span><br><span class=\"line\">  e.preventDefault(); </span><br><span class=\"line\">  e.stopPropagation();</span><br><span class=\"line\">  var fileList = e.dataTransfer.files;</span><br><span class=\"line\">  if (fileList.length &gt; 0) &#123;</span><br><span class=\"line\">    var file = fileList[0];</span><br><span class=\"line\">    var reader = new FileReader();</span><br><span class=\"line\">    reader.onloadend = function(e) &#123;</span><br><span class=\"line\">      if (e.target.readyState == FileReader.DONE) &#123;</span><br><span class=\"line\">        var content = reader.result;</span><br><span class=\"line\">        contentDiv.innerHTML = &quot;File: &quot; + file.name + &quot;\\n\\n&quot; + content;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    reader.readAsBinaryString(file);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<h3 id=\"最后附一份最近完成的基于Vue的完整的拖放实例\"><a href=\"#最后附一份最近完成的基于Vue的完整的拖放实例\" class=\"headerlink\" title=\"最后附一份最近完成的基于Vue的完整的拖放实例\"></a>最后附一份最近完成的基于Vue的完整的拖放实例</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;!DOCTYPE html&gt;</span><br><span class=\"line\">&lt;html lang=&quot;en&quot;&gt;</span><br><span class=\"line\">&lt;head&gt;</span><br><span class=\"line\">    &lt;meta charset=&quot;UTF-8&quot;&gt;</span><br><span class=\"line\">    &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt;</span><br><span class=\"line\">    &lt;meta http-equiv=&quot;X-UA-Compatible&quot; content=&quot;ie=edge&quot;&gt;</span><br><span class=\"line\">    &lt;title&gt;Document&lt;/title&gt;</span><br><span class=\"line\">    &lt;!-- jquery --&gt;</span><br><span class=\"line\">    &lt;script src=&quot;https://cdn.bootcss.com/jquery/3.2.1/jquery.min.js&quot;&gt;&lt;/script&gt;</span><br><span class=\"line\">    &lt;!-- vue --&gt;</span><br><span class=\"line\">    &lt;script src=&quot;https://cdn.bootcss.com/vue/2.5.3/vue.js&quot;&gt;&lt;/script&gt;</span><br><span class=\"line\">    &lt;!-- element-ui --&gt;</span><br><span class=\"line\">    &lt;link rel=&quot;stylesheet&quot; href=&quot;https://unpkg.com/element-ui/lib/theme-chalk/index.css&quot;&gt;</span><br><span class=\"line\">    &lt;script src=&quot;https://unpkg.com/element-ui/lib/index.js&quot;&gt;&lt;/script&gt;</span><br><span class=\"line\">&lt;/head&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;body&gt;</span><br><span class=\"line\">&lt;div id=&quot;app&quot;&gt;</span><br><span class=\"line\">    &lt;el-table :data=&quot;tableData&quot; style=&quot;width: 100%&quot;&gt;</span><br><span class=\"line\">        &lt;el-table-column prop=&quot;date&quot; label=&quot;日期&quot; width=&quot;180&quot;&gt;</span><br><span class=\"line\">        &lt;/el-table-column&gt;</span><br><span class=\"line\">        &lt;el-table-column prop=&quot;name&quot; label=&quot;姓名&quot; width=&quot;180&quot;&gt;</span><br><span class=\"line\">        &lt;/el-table-column&gt;</span><br><span class=\"line\">        &lt;el-table-column prop=&quot;address&quot; label=&quot;地址&quot;&gt;</span><br><span class=\"line\">        &lt;/el-table-column&gt;</span><br><span class=\"line\">    &lt;/el-table&gt;</span><br><span class=\"line\">&lt;/div&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;script&gt;</span><br><span class=\"line\">    function dragStart(e) &#123;</span><br><span class=\"line\">        var el = e.target;</span><br><span class=\"line\">        el = this;</span><br><span class=\"line\">        start = this.id;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    function dragOver(ev) &#123;</span><br><span class=\"line\">        var el = ev.target;</span><br><span class=\"line\">        ev.preventDefault();</span><br><span class=\"line\">        ev.dataTransfer.dropEffect = &apos;move&apos;;</span><br><span class=\"line\">        $(el).addClass(&apos;dragStart&apos;);</span><br><span class=\"line\">        return false;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    function dragEnter(ev) &#123;</span><br><span class=\"line\">        var el = ev.target;</span><br><span class=\"line\">        ev.preventDefault();</span><br><span class=\"line\">        ev.stopPropagation();</span><br><span class=\"line\">        if (this.id !== el.id) &#123;</span><br><span class=\"line\">            $(el).addClass(&apos;dragstart&apos;);</span><br><span class=\"line\">            el = this;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    function dragLeave(ev) &#123;</span><br><span class=\"line\">        var el = ev.target;</span><br><span class=\"line\">        ev.preventDefault();</span><br><span class=\"line\">        ev.stopPropagation();</span><br><span class=\"line\">        if (this.id !== el.id) &#123;</span><br><span class=\"line\">            $(this).removeClass(&apos;dragstart&apos;);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        $(&apos;td&apos;).css(&quot;borderBottomColor&quot;, &quot;&quot;)</span><br><span class=\"line\">        $(this).find(&apos;td&apos;).css(&quot;borderBottomColor&quot;, &quot;#f66e04&quot;)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    function drop(e) &#123;</span><br><span class=\"line\">        var el = e.target;</span><br><span class=\"line\">        e.preventDefault();</span><br><span class=\"line\">        e.stopPropagation();</span><br><span class=\"line\">        if (this.id !== el.id) &#123;</span><br><span class=\"line\">            $(this).removeClass(&apos;dragstart&apos;);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        end = this.id;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    function dragEnd(e) &#123;</span><br><span class=\"line\">        var el = e.target;</span><br><span class=\"line\">        $(&apos;td&apos;).css(&quot;borderBottomColor&quot;, &quot;&quot;)</span><br><span class=\"line\">        var lists = app.$data.tableData;</span><br><span class=\"line\">        el = null;</span><br><span class=\"line\">        var flag;</span><br><span class=\"line\">        flag = lists[start];</span><br><span class=\"line\">        lists[start] = lists[end];</span><br><span class=\"line\">        lists[end] = flag;</span><br><span class=\"line\">        app.$data.tableData = lists.concat([]);</span><br><span class=\"line\">        console.log(&quot;从索引&quot; + start + &quot;移动到索引&quot; + end)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    var app = new Vue(&#123;</span><br><span class=\"line\">        el: &quot;#app&quot;,</span><br><span class=\"line\">        data: function () &#123;</span><br><span class=\"line\">            return &#123;</span><br><span class=\"line\">                tableData: []</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;,</span><br><span class=\"line\">        mounted: function () &#123;</span><br><span class=\"line\">            this.tableData = [&#123;</span><br><span class=\"line\">                date: &apos;2016-05-02&apos;,</span><br><span class=\"line\">                name: &apos;王小虎1&apos;,</span><br><span class=\"line\">                address: &apos;上海市普陀区金沙江路 1518 弄&apos;</span><br><span class=\"line\">            &#125;, &#123;</span><br><span class=\"line\">                date: &apos;2016-05-04&apos;,</span><br><span class=\"line\">                name: &apos;王小虎2&apos;,</span><br><span class=\"line\">                address: &apos;上海市普陀区金沙江路 1517 弄&apos;</span><br><span class=\"line\">            &#125;, &#123;</span><br><span class=\"line\">                date: &apos;2016-05-01&apos;,</span><br><span class=\"line\">                name: &apos;王小虎3&apos;,</span><br><span class=\"line\">                address: &apos;上海市普陀区金沙江路 1519 弄&apos;</span><br><span class=\"line\">            &#125;, &#123;</span><br><span class=\"line\">                date: &apos;2016-05-03&apos;,</span><br><span class=\"line\">                name: &apos;王小虎4&apos;,</span><br><span class=\"line\">                address: &apos;上海市普陀区金沙江路 1516 弄&apos;</span><br><span class=\"line\">            &#125;];</span><br><span class=\"line\">        &#125;,</span><br><span class=\"line\">        watch: &#123;</span><br><span class=\"line\">            tableData: function () &#123;</span><br><span class=\"line\">                this.$nextTick(() =&gt; &#123;</span><br><span class=\"line\">                    this.StartDrag()</span><br><span class=\"line\">                &#125;)</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;,</span><br><span class=\"line\">        methods: &#123;</span><br><span class=\"line\">            StartDrag: function () &#123;</span><br><span class=\"line\">                var start, end;</span><br><span class=\"line\">                var dragElements = document.getElementsByClassName(&apos;el-table__row&apos;);</span><br><span class=\"line\">                for (var i = 0; i &lt; dragElements.length; i++) &#123;</span><br><span class=\"line\">                    dragElements[i].setAttribute(&apos;draggable&apos;, &apos;true&apos;);</span><br><span class=\"line\">                    dragElements[i].setAttribute(&apos;id&apos;, i)</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">                for (var i = 0; i &lt; dragElements.length; i++) &#123;</span><br><span class=\"line\">                    /*</span><br><span class=\"line\">                    *因为涉及到翻页和全局搜索之类的功能</span><br><span class=\"line\">                    *会大量的树新数据导致dom变化</span><br><span class=\"line\">                    *因此在绑定时间之前重新渲染页面</span><br><span class=\"line\">                    *移除之前的事件重新绑定</span><br><span class=\"line\">                    */</span><br><span class=\"line\">                    // removeEventListener</span><br><span class=\"line\">                    dragElements[i].removeEventListener(&apos;dragstart&apos;, dragStart);</span><br><span class=\"line\">                    dragElements[i].removeEventListener(&apos;dragover&apos;, dragOver);</span><br><span class=\"line\">                    dragElements[i].removeEventListener(&apos;dragenter&apos;, dragEnter);</span><br><span class=\"line\">                    dragElements[i].removeEventListener(&apos;dragleave&apos;, dragLeave);</span><br><span class=\"line\">                    dragElements[i].removeEventListener(&apos;drop&apos;, drop);</span><br><span class=\"line\">                    dragElements[i].removeEventListener(&apos;dragend&apos;, dragEnd);</span><br><span class=\"line\">                    // addEventListener</span><br><span class=\"line\">                    dragElements[i].addEventListener(&apos;dragstart&apos;, dragStart);</span><br><span class=\"line\">                    dragElements[i].addEventListener(&apos;dragover&apos;, dragOver);</span><br><span class=\"line\">                    dragElements[i].addEventListener(&apos;dragenter&apos;, dragEnter);</span><br><span class=\"line\">                    dragElements[i].addEventListener(&apos;dragleave&apos;, dragLeave);</span><br><span class=\"line\">                    dragElements[i].addEventListener(&apos;drop&apos;, drop);</span><br><span class=\"line\">                    dragElements[i].addEventListener(&apos;dragend&apos;, dragEnd);</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">&lt;/script&gt;</span><br><span class=\"line\">&lt;/body&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;/html&gt;</span><br></pre></td></tr></table></figure>"},{"title":"video小记","date":"2018-01-24T07:43:53.000Z","description":"video标签的属性和方法","_content":"\n> html5新增的audio和video有很多的相同之处，本节中的绝大部分属性和方法在audio同样适用。\n\n## video标签的使用\n\n如果你想使用视频，最简单的方法:\n\n```html\n <video id=\"video\" src=\"movie.mp4\"></video>\n```\n\n但在大多数情况下不建议这样使用，因为视频格式可能不支持。所以你要写成这样:\n\n```html\n <video id=\"video\">\n    <source src=\"movie.mp4\" type=\"video/mp4\">\n    <source src=\"movie.ogg\" type=\"video/ogg\">\n    <source src=\"movie.webm\" type=\"video/webm\">\n    ...\n  </video>\n```\n\n这样你可以使用多种视频格式，如果不支持会尝试下一种格式。**目前，video元素支持三种视频格式：MP4、WebM、Ogg。**\n\n## video标签的属性\n\n本质上，video对象也是一个普通的DOM对象，你可以像选取普通的DOM对象一样选中它:\n\n```js\n//  javascript\nvar video = document.getElementById('cideo');\n\n//  jquery\nvar video =  $('#video').get(0);\n```\n\nvideo标签有以下属性:\n\n+ autoplay: 如果出现该属性，则视频在就绪后马上播放\n+ controls: 如果出现该属性，则向用户显示控件\n+ width: 视频宽度\n+ height: 视频高度\n+ src: 视频的路径(video标签定义的路径)\n+ poster: 视频封面，没有播放时显示的图片\n+ preload: 如果出现该属性，则视频在页面加载时进行加载，并预备播放。如果使用 \"autoplay\"，则忽略该属性\n+ muted: 如果出现该属性，视频的音频输出为静音。\n+ loop: 如果出现该属性，则当媒介文件完成播放后再次开始播放\n\n## video对象的属性\n\n+ audioTracks: 返回表示可用音频轨道的 AudioTrackList 对象。\n+ autoplay: 设置或返回是否在就绪（加载完成）后随即播放视频。\n+ buffered: 返回表示视频已缓冲部分的 TimeRanges 对象。\n+ controller: 返回表示视频当前媒体控制器的 MediaController 对象。\n+ controls: 设置或返回视频是否应该显示控件（比如播放/暂停等）。\n+ crossOrigin: 设置或返回视频的 CORS 设置。\n+ currentSrc: 返回当前视频的 URL。\n+ currentTime: 设置或返回视频中的当前播放位置（以秒计）。\n+ defaultMuted: 设置或返回视频默认是否静音。\n+ defaultPlaybackRate: 设置或返回视频的默认播放速度。\n+ duration: 返回视频的长度（以秒计）。\n+ ended: 返回视频的播放是否已结束。\n+ error: 返回表示视频错误状态的 MediaError 对象。\n+ height: 设置或返回视频的 height 属性的值。\n+ loop: 设置或返回视频是否应在结束时再次播放。\n+ mediaGroup: 设置或返回视频所属媒介组合的名称。\n+ muted: 设置或返回是否关闭声音。\n+ networkState: 返回视频的当前网络状态。\n+ paused: 设置或返回视频是否暂停。\n+ playbackRate: 设置或返回视频播放的速度。\n+ played: 返回表示视频已播放部分的 TimeRanges 对象。\n+ poster: 设置或返回视频的 poster 属性的值。\n+ preload: 设置或返回视频的 preload 属性的值。\n+ readyState: 返回视频当前的就绪状态。\n+ seekable: 返回表示视频可寻址部分的 TimeRanges 对象。\n+ seeking: 返回用户当前是否正在视频中进行查找。\n+ src: 设置或返回视频的 src 属性的值。\n+ startDate: 返回表示当前时间偏移的 Date 对象。\n+ textTracks: 返回表示可用文本轨道的 TextTrackList 对象。\n+ videoTracks: 返回表示可用视频轨道的 VideoTrackList 对象。\n+ volume: 设置或返回视频的音量。\n+ width: 设置或返回视频的 width 属性的值。\n\n## video对象的方法\n\n+ video.play(): 开始播放\n+ video.pause(): 暂停播放\n\n## video对象的事件\n\n+ video.onloadstart = fn(): 客户端开始请求数据时触发\n+ video.onprogress = fn(): 客户端正在请求数据时触发\n+ video.onsuspend = fn(): 延迟下载时触发\n+ video.onabort = fn(): 客户端主动终止下载时触发（不是因为错误引起）\n+ video.onerror = fn(): 请求数据时遇到错误时触发\n+ video.onstalled = fn(): 网速失速时触发\n+ video.onplay = fn(): 开始播放时触发\n+ video.onpause = fn(): 暂停时触发\n+ video.onloadedmetadata = fn(): 成功获取资源长度\n+ video.onloadeddata = fn(): 当前帧的数据已加载，但没有足够的数据来播放指定视频的下一帧时触发\n+ video.onwaiting = fn(): 等待数据，并非错误\n+ video.onplaying = fn(): 开始回放时触发\n+ video.oncanplay = fn(): 可以播放，但中途可能因为加载而暂停\n+ video.oncanplaythrough = fn(): 可以播放，视屏全部加载完毕\n+ video.onseeking = fn(): 寻找资源中不断触发\n+ video.onseeked = fn(): 寻找资源完毕时触发\n+ video.ontimeupdate = fn(): 播放时间改变时触发\n+ video.onended = fn(): 播放结束时触发\n+ video.onratechange = fn(): 播放速率改变时触发\n+ video.ondurationchange = fn(): 资源长度改变时触发\n+ video.onvolumechange = fn(): 音量改变时触发\n\n当视频处于加载过程中时，会依次触发以下事件:\n+ video.onloadstart\n+ video.ondurationchange\n+ video.onloadedmetadata\n+ video.onloadeddata\n+ video.onprogress\n+ video.oncanplay\n+ video.oncanplaythrough\n","source":"_posts/Video小记.md","raw":"---\ntitle: video小记\ntags: [video]\ndate: 2018-01-24 15:43:53\ncategories: [video]\ndescription: video标签的属性和方法\n---\n\n> html5新增的audio和video有很多的相同之处，本节中的绝大部分属性和方法在audio同样适用。\n\n## video标签的使用\n\n如果你想使用视频，最简单的方法:\n\n```html\n <video id=\"video\" src=\"movie.mp4\"></video>\n```\n\n但在大多数情况下不建议这样使用，因为视频格式可能不支持。所以你要写成这样:\n\n```html\n <video id=\"video\">\n    <source src=\"movie.mp4\" type=\"video/mp4\">\n    <source src=\"movie.ogg\" type=\"video/ogg\">\n    <source src=\"movie.webm\" type=\"video/webm\">\n    ...\n  </video>\n```\n\n这样你可以使用多种视频格式，如果不支持会尝试下一种格式。**目前，video元素支持三种视频格式：MP4、WebM、Ogg。**\n\n## video标签的属性\n\n本质上，video对象也是一个普通的DOM对象，你可以像选取普通的DOM对象一样选中它:\n\n```js\n//  javascript\nvar video = document.getElementById('cideo');\n\n//  jquery\nvar video =  $('#video').get(0);\n```\n\nvideo标签有以下属性:\n\n+ autoplay: 如果出现该属性，则视频在就绪后马上播放\n+ controls: 如果出现该属性，则向用户显示控件\n+ width: 视频宽度\n+ height: 视频高度\n+ src: 视频的路径(video标签定义的路径)\n+ poster: 视频封面，没有播放时显示的图片\n+ preload: 如果出现该属性，则视频在页面加载时进行加载，并预备播放。如果使用 \"autoplay\"，则忽略该属性\n+ muted: 如果出现该属性，视频的音频输出为静音。\n+ loop: 如果出现该属性，则当媒介文件完成播放后再次开始播放\n\n## video对象的属性\n\n+ audioTracks: 返回表示可用音频轨道的 AudioTrackList 对象。\n+ autoplay: 设置或返回是否在就绪（加载完成）后随即播放视频。\n+ buffered: 返回表示视频已缓冲部分的 TimeRanges 对象。\n+ controller: 返回表示视频当前媒体控制器的 MediaController 对象。\n+ controls: 设置或返回视频是否应该显示控件（比如播放/暂停等）。\n+ crossOrigin: 设置或返回视频的 CORS 设置。\n+ currentSrc: 返回当前视频的 URL。\n+ currentTime: 设置或返回视频中的当前播放位置（以秒计）。\n+ defaultMuted: 设置或返回视频默认是否静音。\n+ defaultPlaybackRate: 设置或返回视频的默认播放速度。\n+ duration: 返回视频的长度（以秒计）。\n+ ended: 返回视频的播放是否已结束。\n+ error: 返回表示视频错误状态的 MediaError 对象。\n+ height: 设置或返回视频的 height 属性的值。\n+ loop: 设置或返回视频是否应在结束时再次播放。\n+ mediaGroup: 设置或返回视频所属媒介组合的名称。\n+ muted: 设置或返回是否关闭声音。\n+ networkState: 返回视频的当前网络状态。\n+ paused: 设置或返回视频是否暂停。\n+ playbackRate: 设置或返回视频播放的速度。\n+ played: 返回表示视频已播放部分的 TimeRanges 对象。\n+ poster: 设置或返回视频的 poster 属性的值。\n+ preload: 设置或返回视频的 preload 属性的值。\n+ readyState: 返回视频当前的就绪状态。\n+ seekable: 返回表示视频可寻址部分的 TimeRanges 对象。\n+ seeking: 返回用户当前是否正在视频中进行查找。\n+ src: 设置或返回视频的 src 属性的值。\n+ startDate: 返回表示当前时间偏移的 Date 对象。\n+ textTracks: 返回表示可用文本轨道的 TextTrackList 对象。\n+ videoTracks: 返回表示可用视频轨道的 VideoTrackList 对象。\n+ volume: 设置或返回视频的音量。\n+ width: 设置或返回视频的 width 属性的值。\n\n## video对象的方法\n\n+ video.play(): 开始播放\n+ video.pause(): 暂停播放\n\n## video对象的事件\n\n+ video.onloadstart = fn(): 客户端开始请求数据时触发\n+ video.onprogress = fn(): 客户端正在请求数据时触发\n+ video.onsuspend = fn(): 延迟下载时触发\n+ video.onabort = fn(): 客户端主动终止下载时触发（不是因为错误引起）\n+ video.onerror = fn(): 请求数据时遇到错误时触发\n+ video.onstalled = fn(): 网速失速时触发\n+ video.onplay = fn(): 开始播放时触发\n+ video.onpause = fn(): 暂停时触发\n+ video.onloadedmetadata = fn(): 成功获取资源长度\n+ video.onloadeddata = fn(): 当前帧的数据已加载，但没有足够的数据来播放指定视频的下一帧时触发\n+ video.onwaiting = fn(): 等待数据，并非错误\n+ video.onplaying = fn(): 开始回放时触发\n+ video.oncanplay = fn(): 可以播放，但中途可能因为加载而暂停\n+ video.oncanplaythrough = fn(): 可以播放，视屏全部加载完毕\n+ video.onseeking = fn(): 寻找资源中不断触发\n+ video.onseeked = fn(): 寻找资源完毕时触发\n+ video.ontimeupdate = fn(): 播放时间改变时触发\n+ video.onended = fn(): 播放结束时触发\n+ video.onratechange = fn(): 播放速率改变时触发\n+ video.ondurationchange = fn(): 资源长度改变时触发\n+ video.onvolumechange = fn(): 音量改变时触发\n\n当视频处于加载过程中时，会依次触发以下事件:\n+ video.onloadstart\n+ video.ondurationchange\n+ video.onloadedmetadata\n+ video.onloadeddata\n+ video.onprogress\n+ video.oncanplay\n+ video.oncanplaythrough\n","slug":"Video小记","published":1,"updated":"2021-06-25T11:19:55.438Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckqc904od0006wotvx8gnvdx7","content":"<blockquote>\n<p>html5新增的audio和video有很多的相同之处，本节中的绝大部分属性和方法在audio同样适用。</p>\n</blockquote>\n<h2 id=\"video标签的使用\"><a href=\"#video标签的使用\" class=\"headerlink\" title=\"video标签的使用\"></a>video标签的使用</h2><p>如果你想使用视频，最简单的方法:</p>\n<div class=\"code-panel__wrapper\" autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\"><header class=\"mac-panel\"><span class=\"doc-path\"></span><span class=\"mac-panel__language\">HTML</span></header><figure class=\"iseeu highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">video</span> <span class=\"attr\">id</span>=<span class=\"string\">\"video\"</span> <span class=\"attr\">src</span>=<span class=\"string\">\"movie.mp4\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">video</span>&gt;</span></span><br></pre></td></tr></table></figure></div>\n<p>但在大多数情况下不建议这样使用，因为视频格式可能不支持。所以你要写成这样:</p>\n<div class=\"code-panel__wrapper\" autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\"><header class=\"mac-panel\"><span class=\"doc-path\"></span><span class=\"mac-panel__language\">HTML</span></header><figure class=\"iseeu highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">video</span> <span class=\"attr\">id</span>=<span class=\"string\">\"video\"</span>&gt;</span></span><br><span class=\"line\">   <span class=\"tag\">&lt;<span class=\"name\">source</span> <span class=\"attr\">src</span>=<span class=\"string\">\"movie.mp4\"</span> <span class=\"attr\">type</span>=<span class=\"string\">\"video/mp4\"</span>&gt;</span></span><br><span class=\"line\">   <span class=\"tag\">&lt;<span class=\"name\">source</span> <span class=\"attr\">src</span>=<span class=\"string\">\"movie.ogg\"</span> <span class=\"attr\">type</span>=<span class=\"string\">\"video/ogg\"</span>&gt;</span></span><br><span class=\"line\">   <span class=\"tag\">&lt;<span class=\"name\">source</span> <span class=\"attr\">src</span>=<span class=\"string\">\"movie.webm\"</span> <span class=\"attr\">type</span>=<span class=\"string\">\"video/webm\"</span>&gt;</span></span><br><span class=\"line\">   ...</span><br><span class=\"line\"> <span class=\"tag\">&lt;/<span class=\"name\">video</span>&gt;</span></span><br></pre></td></tr></table></figure></div>\n<p>这样你可以使用多种视频格式，如果不支持会尝试下一种格式。<strong>目前，video元素支持三种视频格式：MP4、WebM、Ogg。</strong></p>\n<h2 id=\"video标签的属性\"><a href=\"#video标签的属性\" class=\"headerlink\" title=\"video标签的属性\"></a>video标签的属性</h2><p>本质上，video对象也是一个普通的DOM对象，你可以像选取普通的DOM对象一样选中它:</p>\n<div class=\"code-panel__wrapper\" autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\"><header class=\"mac-panel\"><span class=\"doc-path\"></span><span class=\"mac-panel__language\">JS</span></header><figure class=\"iseeu highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//  javascript</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> video = <span class=\"built_in\">document</span>.getElementById(<span class=\"string\">'cideo'</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//  jquery</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> video =  $(<span class=\"string\">'#video'</span>).get(<span class=\"number\">0</span>);</span><br></pre></td></tr></table></figure></div>\n<p>video标签有以下属性:</p>\n<ul>\n<li>autoplay: 如果出现该属性，则视频在就绪后马上播放</li>\n<li>controls: 如果出现该属性，则向用户显示控件</li>\n<li>width: 视频宽度</li>\n<li>height: 视频高度</li>\n<li>src: 视频的路径(video标签定义的路径)</li>\n<li>poster: 视频封面，没有播放时显示的图片</li>\n<li>preload: 如果出现该属性，则视频在页面加载时进行加载，并预备播放。如果使用 “autoplay”，则忽略该属性</li>\n<li>muted: 如果出现该属性，视频的音频输出为静音。</li>\n<li>loop: 如果出现该属性，则当媒介文件完成播放后再次开始播放</li>\n</ul>\n<h2 id=\"video对象的属性\"><a href=\"#video对象的属性\" class=\"headerlink\" title=\"video对象的属性\"></a>video对象的属性</h2><ul>\n<li>audioTracks: 返回表示可用音频轨道的 AudioTrackList 对象。</li>\n<li>autoplay: 设置或返回是否在就绪（加载完成）后随即播放视频。</li>\n<li>buffered: 返回表示视频已缓冲部分的 TimeRanges 对象。</li>\n<li>controller: 返回表示视频当前媒体控制器的 MediaController 对象。</li>\n<li>controls: 设置或返回视频是否应该显示控件（比如播放/暂停等）。</li>\n<li>crossOrigin: 设置或返回视频的 CORS 设置。</li>\n<li>currentSrc: 返回当前视频的 URL。</li>\n<li>currentTime: 设置或返回视频中的当前播放位置（以秒计）。</li>\n<li>defaultMuted: 设置或返回视频默认是否静音。</li>\n<li>defaultPlaybackRate: 设置或返回视频的默认播放速度。</li>\n<li>duration: 返回视频的长度（以秒计）。</li>\n<li>ended: 返回视频的播放是否已结束。</li>\n<li>error: 返回表示视频错误状态的 MediaError 对象。</li>\n<li>height: 设置或返回视频的 height 属性的值。</li>\n<li>loop: 设置或返回视频是否应在结束时再次播放。</li>\n<li>mediaGroup: 设置或返回视频所属媒介组合的名称。</li>\n<li>muted: 设置或返回是否关闭声音。</li>\n<li>networkState: 返回视频的当前网络状态。</li>\n<li>paused: 设置或返回视频是否暂停。</li>\n<li>playbackRate: 设置或返回视频播放的速度。</li>\n<li>played: 返回表示视频已播放部分的 TimeRanges 对象。</li>\n<li>poster: 设置或返回视频的 poster 属性的值。</li>\n<li>preload: 设置或返回视频的 preload 属性的值。</li>\n<li>readyState: 返回视频当前的就绪状态。</li>\n<li>seekable: 返回表示视频可寻址部分的 TimeRanges 对象。</li>\n<li>seeking: 返回用户当前是否正在视频中进行查找。</li>\n<li>src: 设置或返回视频的 src 属性的值。</li>\n<li>startDate: 返回表示当前时间偏移的 Date 对象。</li>\n<li>textTracks: 返回表示可用文本轨道的 TextTrackList 对象。</li>\n<li>videoTracks: 返回表示可用视频轨道的 VideoTrackList 对象。</li>\n<li>volume: 设置或返回视频的音量。</li>\n<li>width: 设置或返回视频的 width 属性的值。</li>\n</ul>\n<h2 id=\"video对象的方法\"><a href=\"#video对象的方法\" class=\"headerlink\" title=\"video对象的方法\"></a>video对象的方法</h2><ul>\n<li>video.play(): 开始播放</li>\n<li>video.pause(): 暂停播放</li>\n</ul>\n<h2 id=\"video对象的事件\"><a href=\"#video对象的事件\" class=\"headerlink\" title=\"video对象的事件\"></a>video对象的事件</h2><ul>\n<li>video.onloadstart = fn(): 客户端开始请求数据时触发</li>\n<li>video.onprogress = fn(): 客户端正在请求数据时触发</li>\n<li>video.onsuspend = fn(): 延迟下载时触发</li>\n<li>video.onabort = fn(): 客户端主动终止下载时触发（不是因为错误引起）</li>\n<li>video.onerror = fn(): 请求数据时遇到错误时触发</li>\n<li>video.onstalled = fn(): 网速失速时触发</li>\n<li>video.onplay = fn(): 开始播放时触发</li>\n<li>video.onpause = fn(): 暂停时触发</li>\n<li>video.onloadedmetadata = fn(): 成功获取资源长度</li>\n<li>video.onloadeddata = fn(): 当前帧的数据已加载，但没有足够的数据来播放指定视频的下一帧时触发</li>\n<li>video.onwaiting = fn(): 等待数据，并非错误</li>\n<li>video.onplaying = fn(): 开始回放时触发</li>\n<li>video.oncanplay = fn(): 可以播放，但中途可能因为加载而暂停</li>\n<li>video.oncanplaythrough = fn(): 可以播放，视屏全部加载完毕</li>\n<li>video.onseeking = fn(): 寻找资源中不断触发</li>\n<li>video.onseeked = fn(): 寻找资源完毕时触发</li>\n<li>video.ontimeupdate = fn(): 播放时间改变时触发</li>\n<li>video.onended = fn(): 播放结束时触发</li>\n<li>video.onratechange = fn(): 播放速率改变时触发</li>\n<li>video.ondurationchange = fn(): 资源长度改变时触发</li>\n<li>video.onvolumechange = fn(): 音量改变时触发</li>\n</ul>\n<p>当视频处于加载过程中时，会依次触发以下事件:</p>\n<ul>\n<li>video.onloadstart</li>\n<li>video.ondurationchange</li>\n<li>video.onloadedmetadata</li>\n<li>video.onloadeddata</li>\n<li>video.onprogress</li>\n<li>video.oncanplay</li>\n<li>video.oncanplaythrough</li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<blockquote>\n<p>html5新增的audio和video有很多的相同之处，本节中的绝大部分属性和方法在audio同样适用。</p>\n</blockquote>\n<h2 id=\"video标签的使用\"><a href=\"#video标签的使用\" class=\"headerlink\" title=\"video标签的使用\"></a>video标签的使用</h2><p>如果你想使用视频，最简单的方法:</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">video</span> <span class=\"attr\">id</span>=<span class=\"string\">\"video\"</span> <span class=\"attr\">src</span>=<span class=\"string\">\"movie.mp4\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">video</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>但在大多数情况下不建议这样使用，因为视频格式可能不支持。所以你要写成这样:</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">video</span> <span class=\"attr\">id</span>=<span class=\"string\">\"video\"</span>&gt;</span></span><br><span class=\"line\">   <span class=\"tag\">&lt;<span class=\"name\">source</span> <span class=\"attr\">src</span>=<span class=\"string\">\"movie.mp4\"</span> <span class=\"attr\">type</span>=<span class=\"string\">\"video/mp4\"</span>&gt;</span></span><br><span class=\"line\">   <span class=\"tag\">&lt;<span class=\"name\">source</span> <span class=\"attr\">src</span>=<span class=\"string\">\"movie.ogg\"</span> <span class=\"attr\">type</span>=<span class=\"string\">\"video/ogg\"</span>&gt;</span></span><br><span class=\"line\">   <span class=\"tag\">&lt;<span class=\"name\">source</span> <span class=\"attr\">src</span>=<span class=\"string\">\"movie.webm\"</span> <span class=\"attr\">type</span>=<span class=\"string\">\"video/webm\"</span>&gt;</span></span><br><span class=\"line\">   ...</span><br><span class=\"line\"> <span class=\"tag\">&lt;/<span class=\"name\">video</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>这样你可以使用多种视频格式，如果不支持会尝试下一种格式。<strong>目前，video元素支持三种视频格式：MP4、WebM、Ogg。</strong></p>\n<h2 id=\"video标签的属性\"><a href=\"#video标签的属性\" class=\"headerlink\" title=\"video标签的属性\"></a>video标签的属性</h2><p>本质上，video对象也是一个普通的DOM对象，你可以像选取普通的DOM对象一样选中它:</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//  javascript</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> video = <span class=\"built_in\">document</span>.getElementById(<span class=\"string\">'cideo'</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//  jquery</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> video =  $(<span class=\"string\">'#video'</span>).get(<span class=\"number\">0</span>);</span><br></pre></td></tr></table></figure>\n<p>video标签有以下属性:</p>\n<ul>\n<li>autoplay: 如果出现该属性，则视频在就绪后马上播放</li>\n<li>controls: 如果出现该属性，则向用户显示控件</li>\n<li>width: 视频宽度</li>\n<li>height: 视频高度</li>\n<li>src: 视频的路径(video标签定义的路径)</li>\n<li>poster: 视频封面，没有播放时显示的图片</li>\n<li>preload: 如果出现该属性，则视频在页面加载时进行加载，并预备播放。如果使用 “autoplay”，则忽略该属性</li>\n<li>muted: 如果出现该属性，视频的音频输出为静音。</li>\n<li>loop: 如果出现该属性，则当媒介文件完成播放后再次开始播放</li>\n</ul>\n<h2 id=\"video对象的属性\"><a href=\"#video对象的属性\" class=\"headerlink\" title=\"video对象的属性\"></a>video对象的属性</h2><ul>\n<li>audioTracks: 返回表示可用音频轨道的 AudioTrackList 对象。</li>\n<li>autoplay: 设置或返回是否在就绪（加载完成）后随即播放视频。</li>\n<li>buffered: 返回表示视频已缓冲部分的 TimeRanges 对象。</li>\n<li>controller: 返回表示视频当前媒体控制器的 MediaController 对象。</li>\n<li>controls: 设置或返回视频是否应该显示控件（比如播放/暂停等）。</li>\n<li>crossOrigin: 设置或返回视频的 CORS 设置。</li>\n<li>currentSrc: 返回当前视频的 URL。</li>\n<li>currentTime: 设置或返回视频中的当前播放位置（以秒计）。</li>\n<li>defaultMuted: 设置或返回视频默认是否静音。</li>\n<li>defaultPlaybackRate: 设置或返回视频的默认播放速度。</li>\n<li>duration: 返回视频的长度（以秒计）。</li>\n<li>ended: 返回视频的播放是否已结束。</li>\n<li>error: 返回表示视频错误状态的 MediaError 对象。</li>\n<li>height: 设置或返回视频的 height 属性的值。</li>\n<li>loop: 设置或返回视频是否应在结束时再次播放。</li>\n<li>mediaGroup: 设置或返回视频所属媒介组合的名称。</li>\n<li>muted: 设置或返回是否关闭声音。</li>\n<li>networkState: 返回视频的当前网络状态。</li>\n<li>paused: 设置或返回视频是否暂停。</li>\n<li>playbackRate: 设置或返回视频播放的速度。</li>\n<li>played: 返回表示视频已播放部分的 TimeRanges 对象。</li>\n<li>poster: 设置或返回视频的 poster 属性的值。</li>\n<li>preload: 设置或返回视频的 preload 属性的值。</li>\n<li>readyState: 返回视频当前的就绪状态。</li>\n<li>seekable: 返回表示视频可寻址部分的 TimeRanges 对象。</li>\n<li>seeking: 返回用户当前是否正在视频中进行查找。</li>\n<li>src: 设置或返回视频的 src 属性的值。</li>\n<li>startDate: 返回表示当前时间偏移的 Date 对象。</li>\n<li>textTracks: 返回表示可用文本轨道的 TextTrackList 对象。</li>\n<li>videoTracks: 返回表示可用视频轨道的 VideoTrackList 对象。</li>\n<li>volume: 设置或返回视频的音量。</li>\n<li>width: 设置或返回视频的 width 属性的值。</li>\n</ul>\n<h2 id=\"video对象的方法\"><a href=\"#video对象的方法\" class=\"headerlink\" title=\"video对象的方法\"></a>video对象的方法</h2><ul>\n<li>video.play(): 开始播放</li>\n<li>video.pause(): 暂停播放</li>\n</ul>\n<h2 id=\"video对象的事件\"><a href=\"#video对象的事件\" class=\"headerlink\" title=\"video对象的事件\"></a>video对象的事件</h2><ul>\n<li>video.onloadstart = fn(): 客户端开始请求数据时触发</li>\n<li>video.onprogress = fn(): 客户端正在请求数据时触发</li>\n<li>video.onsuspend = fn(): 延迟下载时触发</li>\n<li>video.onabort = fn(): 客户端主动终止下载时触发（不是因为错误引起）</li>\n<li>video.onerror = fn(): 请求数据时遇到错误时触发</li>\n<li>video.onstalled = fn(): 网速失速时触发</li>\n<li>video.onplay = fn(): 开始播放时触发</li>\n<li>video.onpause = fn(): 暂停时触发</li>\n<li>video.onloadedmetadata = fn(): 成功获取资源长度</li>\n<li>video.onloadeddata = fn(): 当前帧的数据已加载，但没有足够的数据来播放指定视频的下一帧时触发</li>\n<li>video.onwaiting = fn(): 等待数据，并非错误</li>\n<li>video.onplaying = fn(): 开始回放时触发</li>\n<li>video.oncanplay = fn(): 可以播放，但中途可能因为加载而暂停</li>\n<li>video.oncanplaythrough = fn(): 可以播放，视屏全部加载完毕</li>\n<li>video.onseeking = fn(): 寻找资源中不断触发</li>\n<li>video.onseeked = fn(): 寻找资源完毕时触发</li>\n<li>video.ontimeupdate = fn(): 播放时间改变时触发</li>\n<li>video.onended = fn(): 播放结束时触发</li>\n<li>video.onratechange = fn(): 播放速率改变时触发</li>\n<li>video.ondurationchange = fn(): 资源长度改变时触发</li>\n<li>video.onvolumechange = fn(): 音量改变时触发</li>\n</ul>\n<p>当视频处于加载过程中时，会依次触发以下事件:</p>\n<ul>\n<li>video.onloadstart</li>\n<li>video.ondurationchange</li>\n<li>video.onloadedmetadata</li>\n<li>video.onloadeddata</li>\n<li>video.onprogress</li>\n<li>video.oncanplay</li>\n<li>video.oncanplaythrough</li>\n</ul>\n"},{"title":"Vue Cli 3 使用感受","date":"2018-12-15T06:44:23.000Z","description":"Vue Cli 3 使用心得","_content":"\n早就听说 vue-cli 有了 3.x 版本，但一直没机会实践。一直到双十一有一个小活动，尝试了一下。感觉到了极度的舒适。新的脚手架做了非常大的修改，具体为删除了 config 和 build 文件夹，改为使用配置文件 vue.config.js，并同时支持**分模式**、**分环境**、**分项目**进行配置，简单的说就是之前脚手架中需要配置在 config 和 build 中的配置，都靠着一个文件来配置，省去了我们在 build 和 config 文件中找配置的地方。下面总结一下主要的变化。**我这里只是做一个总结，并没有（也没必要）添加详细的讲解（反正也不可能比官网讲的清楚）**\n\n## 使用图形化界面\n\nvue-cli3 新增了基于 MUI 的可视化工具，开发者可以更加直观方便（傻瓜式）的创建、管理 vue 项目，输入`vue ui`就可以打开可视化窗口。\n\n## 分模式 && 分环境\n\nvue-cli3 增加了 .env 文件用来直观方便的区分环境，每个环境文件包含对应环境的模式和对应环境下特有的环境变量。这些环境变量会在相对环境打包中被载入。具体的方法参考[官网教程](https://cli.vuejs.org/zh/guide/mode-and-env.html#%E6%A8%A1%E5%BC%8F)。\n\n## 分项目\n\nvue-cli3 支持直接创建多页面应用（multi-page-app），只需要在vue.config.js中配置pages参数。\n具体的配置方法参见[官网教程](https://cli.vuejs.org/zh/config/#pages)。\n\n## 插件\n\nvue-cli3 使用了一套基于插件的架构。如果你查阅一个新创建项目的 package.json，就会发现依赖都是以 @vue/cli-plugin- 开头的。插件可以修改 webpack 的内部配置，也可以向 vue-cli-service 注入命令。在项目创建的过程中，绝大部分列出的特性都是通过插件来实现的。基于插件的架构使得 Vue CLI 灵活且可扩展。如果你对开发一个插件感兴趣，请翻阅插件[开发指南](https://cli.vuejs.org/zh/dev-guide/plugin-dev.html#%E6%A0%B8%E5%BF%83%E6%A6%82%E5%BF%B5)。\n","source":"_posts/Vue-Cli-3-使用感受.md","raw":"---\ntitle: Vue Cli 3 使用感受\ntags: [vue]\ndate: 2018-12-15 14:44:23\ncategories: [vue]\ndescription: Vue Cli 3 使用心得\n---\n\n早就听说 vue-cli 有了 3.x 版本，但一直没机会实践。一直到双十一有一个小活动，尝试了一下。感觉到了极度的舒适。新的脚手架做了非常大的修改，具体为删除了 config 和 build 文件夹，改为使用配置文件 vue.config.js，并同时支持**分模式**、**分环境**、**分项目**进行配置，简单的说就是之前脚手架中需要配置在 config 和 build 中的配置，都靠着一个文件来配置，省去了我们在 build 和 config 文件中找配置的地方。下面总结一下主要的变化。**我这里只是做一个总结，并没有（也没必要）添加详细的讲解（反正也不可能比官网讲的清楚）**\n\n## 使用图形化界面\n\nvue-cli3 新增了基于 MUI 的可视化工具，开发者可以更加直观方便（傻瓜式）的创建、管理 vue 项目，输入`vue ui`就可以打开可视化窗口。\n\n## 分模式 && 分环境\n\nvue-cli3 增加了 .env 文件用来直观方便的区分环境，每个环境文件包含对应环境的模式和对应环境下特有的环境变量。这些环境变量会在相对环境打包中被载入。具体的方法参考[官网教程](https://cli.vuejs.org/zh/guide/mode-and-env.html#%E6%A8%A1%E5%BC%8F)。\n\n## 分项目\n\nvue-cli3 支持直接创建多页面应用（multi-page-app），只需要在vue.config.js中配置pages参数。\n具体的配置方法参见[官网教程](https://cli.vuejs.org/zh/config/#pages)。\n\n## 插件\n\nvue-cli3 使用了一套基于插件的架构。如果你查阅一个新创建项目的 package.json，就会发现依赖都是以 @vue/cli-plugin- 开头的。插件可以修改 webpack 的内部配置，也可以向 vue-cli-service 注入命令。在项目创建的过程中，绝大部分列出的特性都是通过插件来实现的。基于插件的架构使得 Vue CLI 灵活且可扩展。如果你对开发一个插件感兴趣，请翻阅插件[开发指南](https://cli.vuejs.org/zh/dev-guide/plugin-dev.html#%E6%A0%B8%E5%BF%83%E6%A6%82%E5%BF%B5)。\n","slug":"Vue-Cli-3-使用感受","published":1,"updated":"2021-06-25T11:19:55.440Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckqc904of0008wotvphp2r4bs","content":"<p>早就听说 vue-cli 有了 3.x 版本，但一直没机会实践。一直到双十一有一个小活动，尝试了一下。感觉到了极度的舒适。新的脚手架做了非常大的修改，具体为删除了 config 和 build 文件夹，改为使用配置文件 vue.config.js，并同时支持<strong>分模式</strong>、<strong>分环境</strong>、<strong>分项目</strong>进行配置，简单的说就是之前脚手架中需要配置在 config 和 build 中的配置，都靠着一个文件来配置，省去了我们在 build 和 config 文件中找配置的地方。下面总结一下主要的变化。<strong>我这里只是做一个总结，并没有（也没必要）添加详细的讲解（反正也不可能比官网讲的清楚）</strong></p>\n<h2 id=\"使用图形化界面\"><a href=\"#使用图形化界面\" class=\"headerlink\" title=\"使用图形化界面\"></a>使用图形化界面</h2><p>vue-cli3 新增了基于 MUI 的可视化工具，开发者可以更加直观方便（傻瓜式）的创建、管理 vue 项目，输入<code>vue ui</code>就可以打开可视化窗口。</p>\n<h2 id=\"分模式-amp-amp-分环境\"><a href=\"#分模式-amp-amp-分环境\" class=\"headerlink\" title=\"分模式 &amp;&amp; 分环境\"></a>分模式 &amp;&amp; 分环境</h2><p>vue-cli3 增加了 .env 文件用来直观方便的区分环境，每个环境文件包含对应环境的模式和对应环境下特有的环境变量。这些环境变量会在相对环境打包中被载入。具体的方法参考<a href=\"https://cli.vuejs.org/zh/guide/mode-and-env.html#%E6%A8%A1%E5%BC%8F\" target=\"_blank\" rel=\"noopener\">官网教程</a>。</p>\n<h2 id=\"分项目\"><a href=\"#分项目\" class=\"headerlink\" title=\"分项目\"></a>分项目</h2><p>vue-cli3 支持直接创建多页面应用（multi-page-app），只需要在vue.config.js中配置pages参数。<br>具体的配置方法参见<a href=\"https://cli.vuejs.org/zh/config/#pages\" target=\"_blank\" rel=\"noopener\">官网教程</a>。</p>\n<h2 id=\"插件\"><a href=\"#插件\" class=\"headerlink\" title=\"插件\"></a>插件</h2><p>vue-cli3 使用了一套基于插件的架构。如果你查阅一个新创建项目的 package.json，就会发现依赖都是以 @vue/cli-plugin- 开头的。插件可以修改 webpack 的内部配置，也可以向 vue-cli-service 注入命令。在项目创建的过程中，绝大部分列出的特性都是通过插件来实现的。基于插件的架构使得 Vue CLI 灵活且可扩展。如果你对开发一个插件感兴趣，请翻阅插件<a href=\"https://cli.vuejs.org/zh/dev-guide/plugin-dev.html#%E6%A0%B8%E5%BF%83%E6%A6%82%E5%BF%B5\" target=\"_blank\" rel=\"noopener\">开发指南</a>。</p>\n","site":{"data":{}},"excerpt":"","more":"<p>早就听说 vue-cli 有了 3.x 版本，但一直没机会实践。一直到双十一有一个小活动，尝试了一下。感觉到了极度的舒适。新的脚手架做了非常大的修改，具体为删除了 config 和 build 文件夹，改为使用配置文件 vue.config.js，并同时支持<strong>分模式</strong>、<strong>分环境</strong>、<strong>分项目</strong>进行配置，简单的说就是之前脚手架中需要配置在 config 和 build 中的配置，都靠着一个文件来配置，省去了我们在 build 和 config 文件中找配置的地方。下面总结一下主要的变化。<strong>我这里只是做一个总结，并没有（也没必要）添加详细的讲解（反正也不可能比官网讲的清楚）</strong></p>\n<h2 id=\"使用图形化界面\"><a href=\"#使用图形化界面\" class=\"headerlink\" title=\"使用图形化界面\"></a>使用图形化界面</h2><p>vue-cli3 新增了基于 MUI 的可视化工具，开发者可以更加直观方便（傻瓜式）的创建、管理 vue 项目，输入<code>vue ui</code>就可以打开可视化窗口。</p>\n<h2 id=\"分模式-amp-amp-分环境\"><a href=\"#分模式-amp-amp-分环境\" class=\"headerlink\" title=\"分模式 &amp;&amp; 分环境\"></a>分模式 &amp;&amp; 分环境</h2><p>vue-cli3 增加了 .env 文件用来直观方便的区分环境，每个环境文件包含对应环境的模式和对应环境下特有的环境变量。这些环境变量会在相对环境打包中被载入。具体的方法参考<a href=\"https://cli.vuejs.org/zh/guide/mode-and-env.html#%E6%A8%A1%E5%BC%8F\" target=\"_blank\" rel=\"noopener\">官网教程</a>。</p>\n<h2 id=\"分项目\"><a href=\"#分项目\" class=\"headerlink\" title=\"分项目\"></a>分项目</h2><p>vue-cli3 支持直接创建多页面应用（multi-page-app），只需要在vue.config.js中配置pages参数。<br>具体的配置方法参见<a href=\"https://cli.vuejs.org/zh/config/#pages\" target=\"_blank\" rel=\"noopener\">官网教程</a>。</p>\n<h2 id=\"插件\"><a href=\"#插件\" class=\"headerlink\" title=\"插件\"></a>插件</h2><p>vue-cli3 使用了一套基于插件的架构。如果你查阅一个新创建项目的 package.json，就会发现依赖都是以 @vue/cli-plugin- 开头的。插件可以修改 webpack 的内部配置，也可以向 vue-cli-service 注入命令。在项目创建的过程中，绝大部分列出的特性都是通过插件来实现的。基于插件的架构使得 Vue CLI 灵活且可扩展。如果你对开发一个插件感兴趣，请翻阅插件<a href=\"https://cli.vuejs.org/zh/dev-guide/plugin-dev.html#%E6%A0%B8%E5%BF%83%E6%A6%82%E5%BF%B5\" target=\"_blank\" rel=\"noopener\">开发指南</a>。</p>\n"},{"title":"css伪元素","date":"2019-05-10T07:41:04.000Z","description":"css3关于伪元素那些你可能不知道的事","_content":"## 因为一个背景图引发的思考\n\n在最近的项目开发中我遇到了一个并不算麻烦的需求。需求大致是这样的\n> 想要一个有特殊边框的卡片，里面展示几行文本。\n\n当时的场景有些复杂，但还原之后基本就是这样的：\n\n```vue\n<template>\n  <div class=\"eg1\"></div>\n</template>\n\n<style scoped>\n.eg1 {\n  width: 200px;\n  height: 200px;\n  background: deepskyblue;\n  border: 20px dashed #333;\n}\n</style>\n```\n\n然后使用伪元素创建一个白色的背景，放到卡片正中心就完成了。\n\n```vue\n<template>\n  <div class=\"eg1\"></div>\n</template>\n\n<style lang=\"scss\" scoped>\n.eg1 {\n  box-sizing: border-box;\n  position: relative;\n  width: 200px;\n  height: 200px;\n  background: deepskyblue;\n  border: 20px dashed #333;\n  &:after {\n    content: '13123';\n    background: #fff;\n    padding: 10px;\n    position: absolute;\n    top: 0;\n    right: 0;\n    bottom: 0;\n    left: 0;\n  }\n}\n</style>\n```\n\n<iframe width=\"100%\" height=\"300\" src=\"//jsrun.net/FKyKp/embedded/all/light/\" allowfullscreen=\"allowfullscreen\" frameborder=\"0\"></iframe>\n\n本以为已经结束了，只要把返回的消息放在伪元素的`content`就可以了。但是消息是后端返回的呀，要怎么才能做到把文本填充进去呢？因此才去找了伪元素相关的资料。继而发现了伪元素非常多的用法。在这里总结一下。\n\n## 除了content=''之外的其他高级用法\n\n### 插入符号\n\n使用css的quotes可以在字符串两端添加自定义的字符\n\n```vue\n<template>\n  <h1>一段文字</h1>\n  <h2>另一段文字</h2>\n  <h3>第三段文字</h3>\n</template>\n\n<style scoped lang=\"scss\">\n  h1 {\n    quotes: \"(\"\")\";\n    &:before {\n      content: open-quote;\n    }\n    &:after {\n      content: close-quote;\n    }\n  }\n  h2 {\n    quotes: \"\\♂\"\"\\♀\";\n    &:before {\n      content: open-quote;\n    }\n    &:after {\n      content: close-quote;\n    }\n  }\n  h3 {\n    quotes:\"\\\"\" \"\\\"\";\n    &:before {\n      content: open-quote;\n    }\n    &:after {\n      content: close-quote;\n    }\n  }\n</style>\n```\n\n<iframe width=\"100%\" height=\"300\" src=\"//jsrun.net/jKyKp/embedded/all/light/\" allowfullscreen=\"allowfullscreen\" frameborder=\"0\"></iframe>\n\n### 插入属性\n\ncontent属性可以直接获取元素的属性，包括自有属性和自定义属性。本文中出现的问题也是通过这个方法解决的。\n\n```vue\n<template>\n  <div text=\"哈哈哈哈哈\"></div>\n</template>\n\n<style scoped lang=\"scss\">\n  div {\n    box-sizing: border-box;\n    position: relative;\n    width: 200px;\n    height: 200px;\n    background: #ace;\n    border: 20px dashed #adc;\n    &:after {\n      word-break: break-all;\n      background: #fff;\n      padding: 10px;\n      content: attr(text);\n      position: absolute;\n      top: 0;\n      right: 0;\n      bottom: 0;\n      left: 0;\n    }\n  }\n</style>\n```\n\n<iframe width=\"100%\" height=\"300\" src=\"//jsrun.net/BKyKp/embedded/all/light/\" allowfullscreen=\"allowfullscreen\" frameborder=\"0\"></iframe>\n\n### 插入图片\n\n没什么好解释的，和css引用图片类似\n\n```html\n  <div>这是h3</div>\n  <style>\n    div::after{\n      content:url(http://img3.imgtn.bdimg.com/it/u=169436546,622776601&fm=26&gp=0.jpg)\n    }\n  </style>\n```\n\n### 插入编号\n\n利用css的counter属性产生自增的编号，并且可以自定义和生成更复杂的编号。\n\n#### 插入基本的编号\n\n```html\n<h1>这是一个标题</h1>\n<h1>这是一个标题</h1>\n<h1>这是一个标题</h1>\n<h1>这是一个标题</h1>\n<style lang=\"scss\">\n  h1 {\n    counter-increment: list;\n    &:before {\n      content:counter(list);\n    }\n  }\n</style>\n```\n\n<iframe width=\"100%\" height=\"300\" src=\"//jsrun.net/uKyKp/embedded/all/light/\" allowfullscreen=\"allowfullscreen\" frameborder=\"0\"></iframe>\n\n#### 自定义编号\n\n```html\n<h1>这是一个标题</h1>\n<h1>这是一个标题</h1>\n<h1>这是一个标题</h1>\n<h1>这是一个标题</h1>\n<style lang=\"scss\">\n  h1 {\n    counter-increment: list;\n    &:before {\n      color:deeppink;\n      content:'第'counter(list)'章';\n    }\n  }\n</style>\n```\n\n<iframe width=\"100%\" height=\"300\" src=\"//jsrun.net/SKyKp/embedded/all/light/\" allowfullscreen=\"allowfullscreen\" frameborder=\"0\"></iframe>\n\n### 修改编号种类\n\n> 编号的种类 === ul的list-style-type属性值。\n\n```html\n<h1>这是一个标题</h1>\n<h1>这是一个标题</h1>\n<h1>这是一个标题</h1>\n<h1>这是一个标题</h1>\n<style lang=\"scss\">\n  h1 {\n    counter-increment: list;\n    &:before {\n      color:deeppink;\n      content:counter(list, upper-alpha);\n    }\n  }\n</style>\n```\n\n<iframe width=\"100%\" height=\"300\" src=\"//jsrun.net/KpyKp/embedded/all/light/\" allowfullscreen=\"allowfullscreen\" frameborder=\"0\"></iframe>\n\n#### 更复杂的多层嵌套编号\n\n> 大编号嵌套中编号嵌套小编号……\n\n```html\n<h1>大标题</h1>\n<h2>中标题</h2>\n<h3>小标题</h3>\n<h3>小标题</h3>\n<h2>中标题</h2>\n<h3>小标题</h3>\n<h3>小标题</h3>\n<h1>大标题</h1>\n<h2>中标题</h2>\n<h3>小标题</h3>\n<h3>小标题</h3>\n<h2>中标题</h2>\n<h3>小标题</h3>\n<h3>小标题</h3>\n<style lang=\"scss\">\n  h1{\n    counter-increment:h1;\n    counter-reset:h2;\n    &:before{\n      content:counter(h1)'.';\n    }\n  }\n  h2{\n    counter-increment:h2;\n    counter-reset:h3;\n    margin-left:40px;\n    &:before{\n      content:counter(h1) '-' counter(h2);\n    }\n  }\n\n  h3{\n    counter-increment:h3;\n    margin-left:80px;\n    &:before{\n      content:counter(h1) '-' counter(h2) '-' counter(h3);\n    }\n  }\n</style>\n```\n\n<iframe width=\"100%\" height=\"300\" src=\"//jsrun.net/kpyKp/embedded/all/light/\" allowfullscreen=\"allowfullscreen\" frameborder=\"0\"></iframe>\n\n## 结语\n\n最后附上张鑫旭的一篇文章： [小tip:CSS计数器+伪类实现数值动态计算与呈现](https://www.zhangxinxu.com/wordpress/2014/12/css-counters-pseudo-class-checked-numbers/)\n","source":"_posts/css伪元素.md","raw":"---\ntitle: css伪元素\ntags: [css3]\ndate: 2019-05-10 15:41:04\ncategories: [css3]\ndescription: css3关于伪元素那些你可能不知道的事\n---\n## 因为一个背景图引发的思考\n\n在最近的项目开发中我遇到了一个并不算麻烦的需求。需求大致是这样的\n> 想要一个有特殊边框的卡片，里面展示几行文本。\n\n当时的场景有些复杂，但还原之后基本就是这样的：\n\n```vue\n<template>\n  <div class=\"eg1\"></div>\n</template>\n\n<style scoped>\n.eg1 {\n  width: 200px;\n  height: 200px;\n  background: deepskyblue;\n  border: 20px dashed #333;\n}\n</style>\n```\n\n然后使用伪元素创建一个白色的背景，放到卡片正中心就完成了。\n\n```vue\n<template>\n  <div class=\"eg1\"></div>\n</template>\n\n<style lang=\"scss\" scoped>\n.eg1 {\n  box-sizing: border-box;\n  position: relative;\n  width: 200px;\n  height: 200px;\n  background: deepskyblue;\n  border: 20px dashed #333;\n  &:after {\n    content: '13123';\n    background: #fff;\n    padding: 10px;\n    position: absolute;\n    top: 0;\n    right: 0;\n    bottom: 0;\n    left: 0;\n  }\n}\n</style>\n```\n\n<iframe width=\"100%\" height=\"300\" src=\"//jsrun.net/FKyKp/embedded/all/light/\" allowfullscreen=\"allowfullscreen\" frameborder=\"0\"></iframe>\n\n本以为已经结束了，只要把返回的消息放在伪元素的`content`就可以了。但是消息是后端返回的呀，要怎么才能做到把文本填充进去呢？因此才去找了伪元素相关的资料。继而发现了伪元素非常多的用法。在这里总结一下。\n\n## 除了content=''之外的其他高级用法\n\n### 插入符号\n\n使用css的quotes可以在字符串两端添加自定义的字符\n\n```vue\n<template>\n  <h1>一段文字</h1>\n  <h2>另一段文字</h2>\n  <h3>第三段文字</h3>\n</template>\n\n<style scoped lang=\"scss\">\n  h1 {\n    quotes: \"(\"\")\";\n    &:before {\n      content: open-quote;\n    }\n    &:after {\n      content: close-quote;\n    }\n  }\n  h2 {\n    quotes: \"\\♂\"\"\\♀\";\n    &:before {\n      content: open-quote;\n    }\n    &:after {\n      content: close-quote;\n    }\n  }\n  h3 {\n    quotes:\"\\\"\" \"\\\"\";\n    &:before {\n      content: open-quote;\n    }\n    &:after {\n      content: close-quote;\n    }\n  }\n</style>\n```\n\n<iframe width=\"100%\" height=\"300\" src=\"//jsrun.net/jKyKp/embedded/all/light/\" allowfullscreen=\"allowfullscreen\" frameborder=\"0\"></iframe>\n\n### 插入属性\n\ncontent属性可以直接获取元素的属性，包括自有属性和自定义属性。本文中出现的问题也是通过这个方法解决的。\n\n```vue\n<template>\n  <div text=\"哈哈哈哈哈\"></div>\n</template>\n\n<style scoped lang=\"scss\">\n  div {\n    box-sizing: border-box;\n    position: relative;\n    width: 200px;\n    height: 200px;\n    background: #ace;\n    border: 20px dashed #adc;\n    &:after {\n      word-break: break-all;\n      background: #fff;\n      padding: 10px;\n      content: attr(text);\n      position: absolute;\n      top: 0;\n      right: 0;\n      bottom: 0;\n      left: 0;\n    }\n  }\n</style>\n```\n\n<iframe width=\"100%\" height=\"300\" src=\"//jsrun.net/BKyKp/embedded/all/light/\" allowfullscreen=\"allowfullscreen\" frameborder=\"0\"></iframe>\n\n### 插入图片\n\n没什么好解释的，和css引用图片类似\n\n```html\n  <div>这是h3</div>\n  <style>\n    div::after{\n      content:url(http://img3.imgtn.bdimg.com/it/u=169436546,622776601&fm=26&gp=0.jpg)\n    }\n  </style>\n```\n\n### 插入编号\n\n利用css的counter属性产生自增的编号，并且可以自定义和生成更复杂的编号。\n\n#### 插入基本的编号\n\n```html\n<h1>这是一个标题</h1>\n<h1>这是一个标题</h1>\n<h1>这是一个标题</h1>\n<h1>这是一个标题</h1>\n<style lang=\"scss\">\n  h1 {\n    counter-increment: list;\n    &:before {\n      content:counter(list);\n    }\n  }\n</style>\n```\n\n<iframe width=\"100%\" height=\"300\" src=\"//jsrun.net/uKyKp/embedded/all/light/\" allowfullscreen=\"allowfullscreen\" frameborder=\"0\"></iframe>\n\n#### 自定义编号\n\n```html\n<h1>这是一个标题</h1>\n<h1>这是一个标题</h1>\n<h1>这是一个标题</h1>\n<h1>这是一个标题</h1>\n<style lang=\"scss\">\n  h1 {\n    counter-increment: list;\n    &:before {\n      color:deeppink;\n      content:'第'counter(list)'章';\n    }\n  }\n</style>\n```\n\n<iframe width=\"100%\" height=\"300\" src=\"//jsrun.net/SKyKp/embedded/all/light/\" allowfullscreen=\"allowfullscreen\" frameborder=\"0\"></iframe>\n\n### 修改编号种类\n\n> 编号的种类 === ul的list-style-type属性值。\n\n```html\n<h1>这是一个标题</h1>\n<h1>这是一个标题</h1>\n<h1>这是一个标题</h1>\n<h1>这是一个标题</h1>\n<style lang=\"scss\">\n  h1 {\n    counter-increment: list;\n    &:before {\n      color:deeppink;\n      content:counter(list, upper-alpha);\n    }\n  }\n</style>\n```\n\n<iframe width=\"100%\" height=\"300\" src=\"//jsrun.net/KpyKp/embedded/all/light/\" allowfullscreen=\"allowfullscreen\" frameborder=\"0\"></iframe>\n\n#### 更复杂的多层嵌套编号\n\n> 大编号嵌套中编号嵌套小编号……\n\n```html\n<h1>大标题</h1>\n<h2>中标题</h2>\n<h3>小标题</h3>\n<h3>小标题</h3>\n<h2>中标题</h2>\n<h3>小标题</h3>\n<h3>小标题</h3>\n<h1>大标题</h1>\n<h2>中标题</h2>\n<h3>小标题</h3>\n<h3>小标题</h3>\n<h2>中标题</h2>\n<h3>小标题</h3>\n<h3>小标题</h3>\n<style lang=\"scss\">\n  h1{\n    counter-increment:h1;\n    counter-reset:h2;\n    &:before{\n      content:counter(h1)'.';\n    }\n  }\n  h2{\n    counter-increment:h2;\n    counter-reset:h3;\n    margin-left:40px;\n    &:before{\n      content:counter(h1) '-' counter(h2);\n    }\n  }\n\n  h3{\n    counter-increment:h3;\n    margin-left:80px;\n    &:before{\n      content:counter(h1) '-' counter(h2) '-' counter(h3);\n    }\n  }\n</style>\n```\n\n<iframe width=\"100%\" height=\"300\" src=\"//jsrun.net/kpyKp/embedded/all/light/\" allowfullscreen=\"allowfullscreen\" frameborder=\"0\"></iframe>\n\n## 结语\n\n最后附上张鑫旭的一篇文章： [小tip:CSS计数器+伪类实现数值动态计算与呈现](https://www.zhangxinxu.com/wordpress/2014/12/css-counters-pseudo-class-checked-numbers/)\n","slug":"css伪元素","published":1,"updated":"2021-06-25T11:19:55.440Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckqc904og0009wotvy2t5hglr","content":"<h2 id=\"因为一个背景图引发的思考\"><a href=\"#因为一个背景图引发的思考\" class=\"headerlink\" title=\"因为一个背景图引发的思考\"></a>因为一个背景图引发的思考</h2><p>在最近的项目开发中我遇到了一个并不算麻烦的需求。需求大致是这样的</p>\n<blockquote>\n<p>想要一个有特殊边框的卡片，里面展示几行文本。</p>\n</blockquote>\n<p>当时的场景有些复杂，但还原之后基本就是这样的：</p>\n<div class=\"code-panel__wrapper\" autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\"><header class=\"mac-panel\"><span class=\"doc-path\"></span><span class=\"mac-panel__language\">PLAIN</span></header><figure class=\"iseeu highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;template&gt;</span><br><span class=\"line\">  &lt;div class=&quot;eg1&quot;&gt;&lt;/div&gt;</span><br><span class=\"line\">&lt;/template&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;style scoped&gt;</span><br><span class=\"line\">.eg1 &#123;</span><br><span class=\"line\">  width: 200px;</span><br><span class=\"line\">  height: 200px;</span><br><span class=\"line\">  background: deepskyblue;</span><br><span class=\"line\">  border: 20px dashed #333;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">&lt;/style&gt;</span><br></pre></td></tr></table></figure></div>\n<p>然后使用伪元素创建一个白色的背景，放到卡片正中心就完成了。</p>\n<div class=\"code-panel__wrapper\" autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\"><header class=\"mac-panel\"><span class=\"doc-path\"></span><span class=\"mac-panel__language\">PLAIN</span></header><figure class=\"iseeu highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;template&gt;</span><br><span class=\"line\">  &lt;div class=&quot;eg1&quot;&gt;&lt;/div&gt;</span><br><span class=\"line\">&lt;/template&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;style lang=&quot;scss&quot; scoped&gt;</span><br><span class=\"line\">.eg1 &#123;</span><br><span class=\"line\">  box-sizing: border-box;</span><br><span class=\"line\">  position: relative;</span><br><span class=\"line\">  width: 200px;</span><br><span class=\"line\">  height: 200px;</span><br><span class=\"line\">  background: deepskyblue;</span><br><span class=\"line\">  border: 20px dashed #333;</span><br><span class=\"line\">  &amp;:after &#123;</span><br><span class=\"line\">    content: &apos;13123&apos;;</span><br><span class=\"line\">    background: #fff;</span><br><span class=\"line\">    padding: 10px;</span><br><span class=\"line\">    position: absolute;</span><br><span class=\"line\">    top: 0;</span><br><span class=\"line\">    right: 0;</span><br><span class=\"line\">    bottom: 0;</span><br><span class=\"line\">    left: 0;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">&lt;/style&gt;</span><br></pre></td></tr></table></figure></div>\n<iframe width=\"100%\" height=\"300\" src=\"//jsrun.net/FKyKp/embedded/all/light/\" allowfullscreen=\"allowfullscreen\" frameborder=\"0\"></iframe>\n\n<p>本以为已经结束了，只要把返回的消息放在伪元素的<code>content</code>就可以了。但是消息是后端返回的呀，要怎么才能做到把文本填充进去呢？因此才去找了伪元素相关的资料。继而发现了伪元素非常多的用法。在这里总结一下。</p>\n<h2 id=\"除了content-’’之外的其他高级用法\"><a href=\"#除了content-’’之外的其他高级用法\" class=\"headerlink\" title=\"除了content=’’之外的其他高级用法\"></a>除了content=’’之外的其他高级用法</h2><h3 id=\"插入符号\"><a href=\"#插入符号\" class=\"headerlink\" title=\"插入符号\"></a>插入符号</h3><p>使用css的quotes可以在字符串两端添加自定义的字符</p>\n<div class=\"code-panel__wrapper\" autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\"><header class=\"mac-panel\"><span class=\"doc-path\"></span><span class=\"mac-panel__language\">PLAIN</span></header><figure class=\"iseeu highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;template&gt;</span><br><span class=\"line\">  &lt;h1&gt;一段文字&lt;/h1&gt;</span><br><span class=\"line\">  &lt;h2&gt;另一段文字&lt;/h2&gt;</span><br><span class=\"line\">  &lt;h3&gt;第三段文字&lt;/h3&gt;</span><br><span class=\"line\">&lt;/template&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;style scoped lang=&quot;scss&quot;&gt;</span><br><span class=\"line\">  h1 &#123;</span><br><span class=\"line\">    quotes: &quot;(&quot;&quot;)&quot;;</span><br><span class=\"line\">    &amp;:before &#123;</span><br><span class=\"line\">      content: open-quote;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    &amp;:after &#123;</span><br><span class=\"line\">      content: close-quote;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  h2 &#123;</span><br><span class=\"line\">    quotes: &quot;\\♂&quot;&quot;\\♀&quot;;</span><br><span class=\"line\">    &amp;:before &#123;</span><br><span class=\"line\">      content: open-quote;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    &amp;:after &#123;</span><br><span class=\"line\">      content: close-quote;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  h3 &#123;</span><br><span class=\"line\">    quotes:&quot;\\&quot;&quot; &quot;\\&quot;&quot;;</span><br><span class=\"line\">    &amp;:before &#123;</span><br><span class=\"line\">      content: open-quote;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    &amp;:after &#123;</span><br><span class=\"line\">      content: close-quote;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&lt;/style&gt;</span><br></pre></td></tr></table></figure></div>\n<iframe width=\"100%\" height=\"300\" src=\"//jsrun.net/jKyKp/embedded/all/light/\" allowfullscreen=\"allowfullscreen\" frameborder=\"0\"></iframe>\n\n<h3 id=\"插入属性\"><a href=\"#插入属性\" class=\"headerlink\" title=\"插入属性\"></a>插入属性</h3><p>content属性可以直接获取元素的属性，包括自有属性和自定义属性。本文中出现的问题也是通过这个方法解决的。</p>\n<div class=\"code-panel__wrapper\" autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\"><header class=\"mac-panel\"><span class=\"doc-path\"></span><span class=\"mac-panel__language\">PLAIN</span></header><figure class=\"iseeu highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;template&gt;</span><br><span class=\"line\">  &lt;div text=&quot;哈哈哈哈哈&quot;&gt;&lt;/div&gt;</span><br><span class=\"line\">&lt;/template&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;style scoped lang=&quot;scss&quot;&gt;</span><br><span class=\"line\">  div &#123;</span><br><span class=\"line\">    box-sizing: border-box;</span><br><span class=\"line\">    position: relative;</span><br><span class=\"line\">    width: 200px;</span><br><span class=\"line\">    height: 200px;</span><br><span class=\"line\">    background: #ace;</span><br><span class=\"line\">    border: 20px dashed #adc;</span><br><span class=\"line\">    &amp;:after &#123;</span><br><span class=\"line\">      word-break: break-all;</span><br><span class=\"line\">      background: #fff;</span><br><span class=\"line\">      padding: 10px;</span><br><span class=\"line\">      content: attr(text);</span><br><span class=\"line\">      position: absolute;</span><br><span class=\"line\">      top: 0;</span><br><span class=\"line\">      right: 0;</span><br><span class=\"line\">      bottom: 0;</span><br><span class=\"line\">      left: 0;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&lt;/style&gt;</span><br></pre></td></tr></table></figure></div>\n<iframe width=\"100%\" height=\"300\" src=\"//jsrun.net/BKyKp/embedded/all/light/\" allowfullscreen=\"allowfullscreen\" frameborder=\"0\"></iframe>\n\n<h3 id=\"插入图片\"><a href=\"#插入图片\" class=\"headerlink\" title=\"插入图片\"></a>插入图片</h3><p>没什么好解释的，和css引用图片类似</p>\n<div class=\"code-panel__wrapper\" autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\"><header class=\"mac-panel\"><span class=\"doc-path\"></span><span class=\"mac-panel__language\">HTML</span></header><figure class=\"iseeu highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span>这是h3<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">style</span>&gt;</span></span><br><span class=\"line\">  div::after&#123;</span><br><span class=\"line\">    content:url(http://img3.imgtn.bdimg.com/it/u=169436546,622776601&amp;fm=26&amp;gp=0.jpg)</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span><br></pre></td></tr></table></figure></div>\n<h3 id=\"插入编号\"><a href=\"#插入编号\" class=\"headerlink\" title=\"插入编号\"></a>插入编号</h3><p>利用css的counter属性产生自增的编号，并且可以自定义和生成更复杂的编号。</p>\n<h4 id=\"插入基本的编号\"><a href=\"#插入基本的编号\" class=\"headerlink\" title=\"插入基本的编号\"></a>插入基本的编号</h4><div class=\"code-panel__wrapper\" autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\"><header class=\"mac-panel\"><span class=\"doc-path\"></span><span class=\"mac-panel__language\">HTML</span></header><figure class=\"iseeu highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">h1</span>&gt;</span>这是一个标题<span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">h1</span>&gt;</span>这是一个标题<span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">h1</span>&gt;</span>这是一个标题<span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">h1</span>&gt;</span>这是一个标题<span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">style</span> <span class=\"attr\">lang</span>=<span class=\"string\">\"scss\"</span>&gt;</span></span><br><span class=\"line\">  h1 &#123;</span><br><span class=\"line\">    counter-increment: list;</span><br><span class=\"line\">    &amp;:before &#123;</span><br><span class=\"line\">      content:counter(list);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span><br></pre></td></tr></table></figure></div>\n<iframe width=\"100%\" height=\"300\" src=\"//jsrun.net/uKyKp/embedded/all/light/\" allowfullscreen=\"allowfullscreen\" frameborder=\"0\"></iframe>\n\n<h4 id=\"自定义编号\"><a href=\"#自定义编号\" class=\"headerlink\" title=\"自定义编号\"></a>自定义编号</h4><div class=\"code-panel__wrapper\" autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\"><header class=\"mac-panel\"><span class=\"doc-path\"></span><span class=\"mac-panel__language\">HTML</span></header><figure class=\"iseeu highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">h1</span>&gt;</span>这是一个标题<span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">h1</span>&gt;</span>这是一个标题<span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">h1</span>&gt;</span>这是一个标题<span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">h1</span>&gt;</span>这是一个标题<span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">style</span> <span class=\"attr\">lang</span>=<span class=\"string\">\"scss\"</span>&gt;</span></span><br><span class=\"line\">  h1 &#123;</span><br><span class=\"line\">    counter-increment: list;</span><br><span class=\"line\">    &amp;:before &#123;</span><br><span class=\"line\">      color:deeppink;</span><br><span class=\"line\">      content:'第'counter(list)'章';</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span><br></pre></td></tr></table></figure></div>\n<iframe width=\"100%\" height=\"300\" src=\"//jsrun.net/SKyKp/embedded/all/light/\" allowfullscreen=\"allowfullscreen\" frameborder=\"0\"></iframe>\n\n<h3 id=\"修改编号种类\"><a href=\"#修改编号种类\" class=\"headerlink\" title=\"修改编号种类\"></a>修改编号种类</h3><blockquote>\n<p>编号的种类 === ul的list-style-type属性值。</p>\n</blockquote>\n<div class=\"code-panel__wrapper\" autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\"><header class=\"mac-panel\"><span class=\"doc-path\"></span><span class=\"mac-panel__language\">HTML</span></header><figure class=\"iseeu highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">h1</span>&gt;</span>这是一个标题<span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">h1</span>&gt;</span>这是一个标题<span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">h1</span>&gt;</span>这是一个标题<span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">h1</span>&gt;</span>这是一个标题<span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">style</span> <span class=\"attr\">lang</span>=<span class=\"string\">\"scss\"</span>&gt;</span></span><br><span class=\"line\">  h1 &#123;</span><br><span class=\"line\">    counter-increment: list;</span><br><span class=\"line\">    &amp;:before &#123;</span><br><span class=\"line\">      color:deeppink;</span><br><span class=\"line\">      content:counter(list, upper-alpha);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span><br></pre></td></tr></table></figure></div>\n<iframe width=\"100%\" height=\"300\" src=\"//jsrun.net/KpyKp/embedded/all/light/\" allowfullscreen=\"allowfullscreen\" frameborder=\"0\"></iframe>\n\n<h4 id=\"更复杂的多层嵌套编号\"><a href=\"#更复杂的多层嵌套编号\" class=\"headerlink\" title=\"更复杂的多层嵌套编号\"></a>更复杂的多层嵌套编号</h4><blockquote>\n<p>大编号嵌套中编号嵌套小编号……</p>\n</blockquote>\n<div class=\"code-panel__wrapper\" autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\"><header class=\"mac-panel\"><span class=\"doc-path\"></span><span class=\"mac-panel__language\">HTML</span></header><figure class=\"iseeu highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">h1</span>&gt;</span>大标题<span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">h2</span>&gt;</span>中标题<span class=\"tag\">&lt;/<span class=\"name\">h2</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">h3</span>&gt;</span>小标题<span class=\"tag\">&lt;/<span class=\"name\">h3</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">h3</span>&gt;</span>小标题<span class=\"tag\">&lt;/<span class=\"name\">h3</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">h2</span>&gt;</span>中标题<span class=\"tag\">&lt;/<span class=\"name\">h2</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">h3</span>&gt;</span>小标题<span class=\"tag\">&lt;/<span class=\"name\">h3</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">h3</span>&gt;</span>小标题<span class=\"tag\">&lt;/<span class=\"name\">h3</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">h1</span>&gt;</span>大标题<span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">h2</span>&gt;</span>中标题<span class=\"tag\">&lt;/<span class=\"name\">h2</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">h3</span>&gt;</span>小标题<span class=\"tag\">&lt;/<span class=\"name\">h3</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">h3</span>&gt;</span>小标题<span class=\"tag\">&lt;/<span class=\"name\">h3</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">h2</span>&gt;</span>中标题<span class=\"tag\">&lt;/<span class=\"name\">h2</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">h3</span>&gt;</span>小标题<span class=\"tag\">&lt;/<span class=\"name\">h3</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">h3</span>&gt;</span>小标题<span class=\"tag\">&lt;/<span class=\"name\">h3</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">style</span> <span class=\"attr\">lang</span>=<span class=\"string\">\"scss\"</span>&gt;</span></span><br><span class=\"line\">  h1&#123;</span><br><span class=\"line\">    counter-increment:h1;</span><br><span class=\"line\">    counter-reset:h2;</span><br><span class=\"line\">    &amp;:before&#123;</span><br><span class=\"line\">      content:counter(h1)'.';</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  h2&#123;</span><br><span class=\"line\">    counter-increment:h2;</span><br><span class=\"line\">    counter-reset:h3;</span><br><span class=\"line\">    margin-left:40px;</span><br><span class=\"line\">    &amp;:before&#123;</span><br><span class=\"line\">      content:counter(h1) '-' counter(h2);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  h3&#123;</span><br><span class=\"line\">    counter-increment:h3;</span><br><span class=\"line\">    margin-left:80px;</span><br><span class=\"line\">    &amp;:before&#123;</span><br><span class=\"line\">      content:counter(h1) '-' counter(h2) '-' counter(h3);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span><br></pre></td></tr></table></figure></div>\n<iframe width=\"100%\" height=\"300\" src=\"//jsrun.net/kpyKp/embedded/all/light/\" allowfullscreen=\"allowfullscreen\" frameborder=\"0\"></iframe>\n\n<h2 id=\"结语\"><a href=\"#结语\" class=\"headerlink\" title=\"结语\"></a>结语</h2><p>最后附上张鑫旭的一篇文章： <a href=\"https://www.zhangxinxu.com/wordpress/2014/12/css-counters-pseudo-class-checked-numbers/\" target=\"_blank\" rel=\"noopener\">小tip:CSS计数器+伪类实现数值动态计算与呈现</a></p>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"因为一个背景图引发的思考\"><a href=\"#因为一个背景图引发的思考\" class=\"headerlink\" title=\"因为一个背景图引发的思考\"></a>因为一个背景图引发的思考</h2><p>在最近的项目开发中我遇到了一个并不算麻烦的需求。需求大致是这样的</p>\n<blockquote>\n<p>想要一个有特殊边框的卡片，里面展示几行文本。</p>\n</blockquote>\n<p>当时的场景有些复杂，但还原之后基本就是这样的：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;template&gt;</span><br><span class=\"line\">  &lt;div class=&quot;eg1&quot;&gt;&lt;/div&gt;</span><br><span class=\"line\">&lt;/template&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;style scoped&gt;</span><br><span class=\"line\">.eg1 &#123;</span><br><span class=\"line\">  width: 200px;</span><br><span class=\"line\">  height: 200px;</span><br><span class=\"line\">  background: deepskyblue;</span><br><span class=\"line\">  border: 20px dashed #333;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">&lt;/style&gt;</span><br></pre></td></tr></table></figure>\n<p>然后使用伪元素创建一个白色的背景，放到卡片正中心就完成了。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;template&gt;</span><br><span class=\"line\">  &lt;div class=&quot;eg1&quot;&gt;&lt;/div&gt;</span><br><span class=\"line\">&lt;/template&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;style lang=&quot;scss&quot; scoped&gt;</span><br><span class=\"line\">.eg1 &#123;</span><br><span class=\"line\">  box-sizing: border-box;</span><br><span class=\"line\">  position: relative;</span><br><span class=\"line\">  width: 200px;</span><br><span class=\"line\">  height: 200px;</span><br><span class=\"line\">  background: deepskyblue;</span><br><span class=\"line\">  border: 20px dashed #333;</span><br><span class=\"line\">  &amp;:after &#123;</span><br><span class=\"line\">    content: &apos;13123&apos;;</span><br><span class=\"line\">    background: #fff;</span><br><span class=\"line\">    padding: 10px;</span><br><span class=\"line\">    position: absolute;</span><br><span class=\"line\">    top: 0;</span><br><span class=\"line\">    right: 0;</span><br><span class=\"line\">    bottom: 0;</span><br><span class=\"line\">    left: 0;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">&lt;/style&gt;</span><br></pre></td></tr></table></figure>\n<iframe width=\"100%\" height=\"300\" src=\"//jsrun.net/FKyKp/embedded/all/light/\" allowfullscreen=\"allowfullscreen\" frameborder=\"0\"></iframe>\n\n<p>本以为已经结束了，只要把返回的消息放在伪元素的<code>content</code>就可以了。但是消息是后端返回的呀，要怎么才能做到把文本填充进去呢？因此才去找了伪元素相关的资料。继而发现了伪元素非常多的用法。在这里总结一下。</p>\n<h2 id=\"除了content-’’之外的其他高级用法\"><a href=\"#除了content-’’之外的其他高级用法\" class=\"headerlink\" title=\"除了content=’’之外的其他高级用法\"></a>除了content=’’之外的其他高级用法</h2><h3 id=\"插入符号\"><a href=\"#插入符号\" class=\"headerlink\" title=\"插入符号\"></a>插入符号</h3><p>使用css的quotes可以在字符串两端添加自定义的字符</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;template&gt;</span><br><span class=\"line\">  &lt;h1&gt;一段文字&lt;/h1&gt;</span><br><span class=\"line\">  &lt;h2&gt;另一段文字&lt;/h2&gt;</span><br><span class=\"line\">  &lt;h3&gt;第三段文字&lt;/h3&gt;</span><br><span class=\"line\">&lt;/template&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;style scoped lang=&quot;scss&quot;&gt;</span><br><span class=\"line\">  h1 &#123;</span><br><span class=\"line\">    quotes: &quot;(&quot;&quot;)&quot;;</span><br><span class=\"line\">    &amp;:before &#123;</span><br><span class=\"line\">      content: open-quote;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    &amp;:after &#123;</span><br><span class=\"line\">      content: close-quote;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  h2 &#123;</span><br><span class=\"line\">    quotes: &quot;\\♂&quot;&quot;\\♀&quot;;</span><br><span class=\"line\">    &amp;:before &#123;</span><br><span class=\"line\">      content: open-quote;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    &amp;:after &#123;</span><br><span class=\"line\">      content: close-quote;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  h3 &#123;</span><br><span class=\"line\">    quotes:&quot;\\&quot;&quot; &quot;\\&quot;&quot;;</span><br><span class=\"line\">    &amp;:before &#123;</span><br><span class=\"line\">      content: open-quote;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    &amp;:after &#123;</span><br><span class=\"line\">      content: close-quote;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&lt;/style&gt;</span><br></pre></td></tr></table></figure>\n<iframe width=\"100%\" height=\"300\" src=\"//jsrun.net/jKyKp/embedded/all/light/\" allowfullscreen=\"allowfullscreen\" frameborder=\"0\"></iframe>\n\n<h3 id=\"插入属性\"><a href=\"#插入属性\" class=\"headerlink\" title=\"插入属性\"></a>插入属性</h3><p>content属性可以直接获取元素的属性，包括自有属性和自定义属性。本文中出现的问题也是通过这个方法解决的。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;template&gt;</span><br><span class=\"line\">  &lt;div text=&quot;哈哈哈哈哈&quot;&gt;&lt;/div&gt;</span><br><span class=\"line\">&lt;/template&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;style scoped lang=&quot;scss&quot;&gt;</span><br><span class=\"line\">  div &#123;</span><br><span class=\"line\">    box-sizing: border-box;</span><br><span class=\"line\">    position: relative;</span><br><span class=\"line\">    width: 200px;</span><br><span class=\"line\">    height: 200px;</span><br><span class=\"line\">    background: #ace;</span><br><span class=\"line\">    border: 20px dashed #adc;</span><br><span class=\"line\">    &amp;:after &#123;</span><br><span class=\"line\">      word-break: break-all;</span><br><span class=\"line\">      background: #fff;</span><br><span class=\"line\">      padding: 10px;</span><br><span class=\"line\">      content: attr(text);</span><br><span class=\"line\">      position: absolute;</span><br><span class=\"line\">      top: 0;</span><br><span class=\"line\">      right: 0;</span><br><span class=\"line\">      bottom: 0;</span><br><span class=\"line\">      left: 0;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&lt;/style&gt;</span><br></pre></td></tr></table></figure>\n<iframe width=\"100%\" height=\"300\" src=\"//jsrun.net/BKyKp/embedded/all/light/\" allowfullscreen=\"allowfullscreen\" frameborder=\"0\"></iframe>\n\n<h3 id=\"插入图片\"><a href=\"#插入图片\" class=\"headerlink\" title=\"插入图片\"></a>插入图片</h3><p>没什么好解释的，和css引用图片类似</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span>这是h3<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">style</span>&gt;</span></span><br><span class=\"line\">  div::after&#123;</span><br><span class=\"line\">    content:url(http://img3.imgtn.bdimg.com/it/u=169436546,622776601&amp;fm=26&amp;gp=0.jpg)</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"插入编号\"><a href=\"#插入编号\" class=\"headerlink\" title=\"插入编号\"></a>插入编号</h3><p>利用css的counter属性产生自增的编号，并且可以自定义和生成更复杂的编号。</p>\n<h4 id=\"插入基本的编号\"><a href=\"#插入基本的编号\" class=\"headerlink\" title=\"插入基本的编号\"></a>插入基本的编号</h4><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">h1</span>&gt;</span>这是一个标题<span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">h1</span>&gt;</span>这是一个标题<span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">h1</span>&gt;</span>这是一个标题<span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">h1</span>&gt;</span>这是一个标题<span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">style</span> <span class=\"attr\">lang</span>=<span class=\"string\">\"scss\"</span>&gt;</span></span><br><span class=\"line\">  h1 &#123;</span><br><span class=\"line\">    counter-increment: list;</span><br><span class=\"line\">    &amp;:before &#123;</span><br><span class=\"line\">      content:counter(list);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<iframe width=\"100%\" height=\"300\" src=\"//jsrun.net/uKyKp/embedded/all/light/\" allowfullscreen=\"allowfullscreen\" frameborder=\"0\"></iframe>\n\n<h4 id=\"自定义编号\"><a href=\"#自定义编号\" class=\"headerlink\" title=\"自定义编号\"></a>自定义编号</h4><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">h1</span>&gt;</span>这是一个标题<span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">h1</span>&gt;</span>这是一个标题<span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">h1</span>&gt;</span>这是一个标题<span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">h1</span>&gt;</span>这是一个标题<span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">style</span> <span class=\"attr\">lang</span>=<span class=\"string\">\"scss\"</span>&gt;</span></span><br><span class=\"line\">  h1 &#123;</span><br><span class=\"line\">    counter-increment: list;</span><br><span class=\"line\">    &amp;:before &#123;</span><br><span class=\"line\">      color:deeppink;</span><br><span class=\"line\">      content:'第'counter(list)'章';</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<iframe width=\"100%\" height=\"300\" src=\"//jsrun.net/SKyKp/embedded/all/light/\" allowfullscreen=\"allowfullscreen\" frameborder=\"0\"></iframe>\n\n<h3 id=\"修改编号种类\"><a href=\"#修改编号种类\" class=\"headerlink\" title=\"修改编号种类\"></a>修改编号种类</h3><blockquote>\n<p>编号的种类 === ul的list-style-type属性值。</p>\n</blockquote>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">h1</span>&gt;</span>这是一个标题<span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">h1</span>&gt;</span>这是一个标题<span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">h1</span>&gt;</span>这是一个标题<span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">h1</span>&gt;</span>这是一个标题<span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">style</span> <span class=\"attr\">lang</span>=<span class=\"string\">\"scss\"</span>&gt;</span></span><br><span class=\"line\">  h1 &#123;</span><br><span class=\"line\">    counter-increment: list;</span><br><span class=\"line\">    &amp;:before &#123;</span><br><span class=\"line\">      color:deeppink;</span><br><span class=\"line\">      content:counter(list, upper-alpha);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<iframe width=\"100%\" height=\"300\" src=\"//jsrun.net/KpyKp/embedded/all/light/\" allowfullscreen=\"allowfullscreen\" frameborder=\"0\"></iframe>\n\n<h4 id=\"更复杂的多层嵌套编号\"><a href=\"#更复杂的多层嵌套编号\" class=\"headerlink\" title=\"更复杂的多层嵌套编号\"></a>更复杂的多层嵌套编号</h4><blockquote>\n<p>大编号嵌套中编号嵌套小编号……</p>\n</blockquote>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">h1</span>&gt;</span>大标题<span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">h2</span>&gt;</span>中标题<span class=\"tag\">&lt;/<span class=\"name\">h2</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">h3</span>&gt;</span>小标题<span class=\"tag\">&lt;/<span class=\"name\">h3</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">h3</span>&gt;</span>小标题<span class=\"tag\">&lt;/<span class=\"name\">h3</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">h2</span>&gt;</span>中标题<span class=\"tag\">&lt;/<span class=\"name\">h2</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">h3</span>&gt;</span>小标题<span class=\"tag\">&lt;/<span class=\"name\">h3</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">h3</span>&gt;</span>小标题<span class=\"tag\">&lt;/<span class=\"name\">h3</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">h1</span>&gt;</span>大标题<span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">h2</span>&gt;</span>中标题<span class=\"tag\">&lt;/<span class=\"name\">h2</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">h3</span>&gt;</span>小标题<span class=\"tag\">&lt;/<span class=\"name\">h3</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">h3</span>&gt;</span>小标题<span class=\"tag\">&lt;/<span class=\"name\">h3</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">h2</span>&gt;</span>中标题<span class=\"tag\">&lt;/<span class=\"name\">h2</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">h3</span>&gt;</span>小标题<span class=\"tag\">&lt;/<span class=\"name\">h3</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">h3</span>&gt;</span>小标题<span class=\"tag\">&lt;/<span class=\"name\">h3</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">style</span> <span class=\"attr\">lang</span>=<span class=\"string\">\"scss\"</span>&gt;</span></span><br><span class=\"line\">  h1&#123;</span><br><span class=\"line\">    counter-increment:h1;</span><br><span class=\"line\">    counter-reset:h2;</span><br><span class=\"line\">    &amp;:before&#123;</span><br><span class=\"line\">      content:counter(h1)'.';</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  h2&#123;</span><br><span class=\"line\">    counter-increment:h2;</span><br><span class=\"line\">    counter-reset:h3;</span><br><span class=\"line\">    margin-left:40px;</span><br><span class=\"line\">    &amp;:before&#123;</span><br><span class=\"line\">      content:counter(h1) '-' counter(h2);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  h3&#123;</span><br><span class=\"line\">    counter-increment:h3;</span><br><span class=\"line\">    margin-left:80px;</span><br><span class=\"line\">    &amp;:before&#123;</span><br><span class=\"line\">      content:counter(h1) '-' counter(h2) '-' counter(h3);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<iframe width=\"100%\" height=\"300\" src=\"//jsrun.net/kpyKp/embedded/all/light/\" allowfullscreen=\"allowfullscreen\" frameborder=\"0\"></iframe>\n\n<h2 id=\"结语\"><a href=\"#结语\" class=\"headerlink\" title=\"结语\"></a>结语</h2><p>最后附上张鑫旭的一篇文章： <a href=\"https://www.zhangxinxu.com/wordpress/2014/12/css-counters-pseudo-class-checked-numbers/\" target=\"_blank\" rel=\"noopener\">小tip:CSS计数器+伪类实现数值动态计算与呈现</a></p>\n"},{"title":"github下fork后同步个人仓库和源仓库","date":"2017-10-19T03:16:52.000Z","description":"github下fork后同步个人仓库和源仓库","_content":"### 首先要先确定一下是否建立了主repo的远程源\n\n```shell\ngit remote -v\n```\n\n### 如果里面只能看到你自己的两个源(fetch 和 push)，那就需要添加主repo的源\n\n```shell\ngit remote add upstream URL\ngit remote -v\n```\n\n然后你就能看到upstream了\n\n### 如果想与主repo合并\n\n```shell\ngit fetch upstream\ngit merge upstream/master\n```\n","source":"_posts/github和gitlab下fork后同步个人仓库和源仓库.md","raw":"---\ntitle: github下fork后同步个人仓库和源仓库\ntags: [git,GitHub]\ndate: 2017-10-19 11:16:52\ncategories: [git]\ndescription: github下fork后同步个人仓库和源仓库\n---\n### 首先要先确定一下是否建立了主repo的远程源\n\n```shell\ngit remote -v\n```\n\n### 如果里面只能看到你自己的两个源(fetch 和 push)，那就需要添加主repo的源\n\n```shell\ngit remote add upstream URL\ngit remote -v\n```\n\n然后你就能看到upstream了\n\n### 如果想与主repo合并\n\n```shell\ngit fetch upstream\ngit merge upstream/master\n```\n","slug":"github和gitlab下fork后同步个人仓库和源仓库","published":1,"updated":"2021-06-25T11:19:55.440Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckqc904oj000dwotvbw6tgf5i","content":"<h3 id=\"首先要先确定一下是否建立了主repo的远程源\"><a href=\"#首先要先确定一下是否建立了主repo的远程源\" class=\"headerlink\" title=\"首先要先确定一下是否建立了主repo的远程源\"></a>首先要先确定一下是否建立了主repo的远程源</h3><div class=\"code-panel__wrapper\" autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\"><header class=\"mac-panel\"><span class=\"doc-path\"></span><span class=\"mac-panel__language\">SHELL</span></header><figure class=\"iseeu highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git remote -v</span><br></pre></td></tr></table></figure></div>\n<h3 id=\"如果里面只能看到你自己的两个源-fetch-和-push-，那就需要添加主repo的源\"><a href=\"#如果里面只能看到你自己的两个源-fetch-和-push-，那就需要添加主repo的源\" class=\"headerlink\" title=\"如果里面只能看到你自己的两个源(fetch 和 push)，那就需要添加主repo的源\"></a>如果里面只能看到你自己的两个源(fetch 和 push)，那就需要添加主repo的源</h3><div class=\"code-panel__wrapper\" autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\"><header class=\"mac-panel\"><span class=\"doc-path\"></span><span class=\"mac-panel__language\">SHELL</span></header><figure class=\"iseeu highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git remote add upstream URL</span><br><span class=\"line\">git remote -v</span><br></pre></td></tr></table></figure></div>\n<p>然后你就能看到upstream了</p>\n<h3 id=\"如果想与主repo合并\"><a href=\"#如果想与主repo合并\" class=\"headerlink\" title=\"如果想与主repo合并\"></a>如果想与主repo合并</h3><div class=\"code-panel__wrapper\" autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\"><header class=\"mac-panel\"><span class=\"doc-path\"></span><span class=\"mac-panel__language\">SHELL</span></header><figure class=\"iseeu highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git fetch upstream</span><br><span class=\"line\">git merge upstream/master</span><br></pre></td></tr></table></figure></div>\n","site":{"data":{}},"excerpt":"","more":"<h3 id=\"首先要先确定一下是否建立了主repo的远程源\"><a href=\"#首先要先确定一下是否建立了主repo的远程源\" class=\"headerlink\" title=\"首先要先确定一下是否建立了主repo的远程源\"></a>首先要先确定一下是否建立了主repo的远程源</h3><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git remote -v</span><br></pre></td></tr></table></figure>\n<h3 id=\"如果里面只能看到你自己的两个源-fetch-和-push-，那就需要添加主repo的源\"><a href=\"#如果里面只能看到你自己的两个源-fetch-和-push-，那就需要添加主repo的源\" class=\"headerlink\" title=\"如果里面只能看到你自己的两个源(fetch 和 push)，那就需要添加主repo的源\"></a>如果里面只能看到你自己的两个源(fetch 和 push)，那就需要添加主repo的源</h3><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git remote add upstream URL</span><br><span class=\"line\">git remote -v</span><br></pre></td></tr></table></figure>\n<p>然后你就能看到upstream了</p>\n<h3 id=\"如果想与主repo合并\"><a href=\"#如果想与主repo合并\" class=\"headerlink\" title=\"如果想与主repo合并\"></a>如果想与主repo合并</h3><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git fetch upstream</span><br><span class=\"line\">git merge upstream/master</span><br></pre></td></tr></table></figure>\n"},{"title":"git命令","date":"2017-09-25T02:10:23.000Z","description":"git常用命令大全","_content":"git常用命令大全  \n---   \n>本博客旨在记录常用git命令。如果希望得到更多关于git的知识，请移步到[廖雪峰的git教程](https://www.liaoxuefeng.com/wiki/0013739516305929606dd18361248578c67b8067c8c017b000)，有非常详细的教程资料。\n#### 添加文件、查看状态、删除文件、提交文件、找回文件，重置修改文件\n>git help &lt;command&gt; &nbsp;&nbsp;&nbsp;&nbsp; 显示command的帮助文档     \ngit show (commitID) &nbsp;&nbsp;&nbsp;&nbsp; 显示最近一次（某一次）提交的内容详情    \ngit co -- <file> &nbsp;&nbsp;&nbsp;&nbsp; 抛弃工作区某一文件的修改    \ngit co . &nbsp;&nbsp;&nbsp;&nbsp; 抛弃工作区修改     \ngit add <file> &nbsp;&nbsp;&nbsp;&nbsp; 将工作文件修改提交到本地暂存区      \ngit add . &nbsp;&nbsp;&nbsp;&nbsp; 将所有修改过的工作文件提交暂存区      \ngit rm <file> &nbsp;&nbsp;&nbsp;&nbsp; 从版本库中删除文件       \ngit rm <file> --cached &nbsp;&nbsp;&nbsp;&nbsp; 从版本库中删除文件，但不删除本地文件          \ngit reset <file> &nbsp;&nbsp;&nbsp;&nbsp; 从暂存区恢复到工作文件    \ngit reset -- . &nbsp;&nbsp;&nbsp;&nbsp; 从暂存区恢复到工作文件    \ngit reset --hard &nbsp;&nbsp;&nbsp;&nbsp; 恢复最近一次提交过的状态，即放弃上次提交后的所有本次修改      \ngit ci <file> git ci . git ci -a &nbsp;&nbsp;&nbsp;&nbsp; 将git add, git rm和git ci等操作都合并在一起做git ci -am \"some comments\"    \ngit ci --amend &nbsp;&nbsp;&nbsp;&nbsp; 修改最后一次提交记录        \ngit revert <commitID> &nbsp;&nbsp;&nbsp;&nbsp; 恢复某次提交的状态，恢复动作本身也创建次提交对象      \ngit revert HEAD &nbsp;&nbsp;&nbsp;&nbsp; 恢复最后一次提交的状态    \n#### 查看文件diff\n\n>git diff <file> &nbsp;&nbsp;&nbsp;&nbsp; 比较当前文件和暂存区文件差异 git diff       \ngit diff <id1><id2> &nbsp;&nbsp;&nbsp;&nbsp; 比较两次提交之间的差异        \ngit diff <branch1>..<branch2> &nbsp;&nbsp;&nbsp;&nbsp; 在两个分支之间比较     \ngit diff --staged &nbsp;&nbsp;&nbsp;&nbsp; 比较暂存区和版本库差异    \ngit diff --cached &nbsp;&nbsp;&nbsp;&nbsp; 比较暂存区和版本库差异     \ngit diff --stat &nbsp;&nbsp;&nbsp;&nbsp; 仅仅比较统计信息     \n#### 查看提交记录\n>git log git log <file> &nbsp;&nbsp;&nbsp;&nbsp; 查看该文件每次提交记录     \ngit log -p <file> &nbsp;&nbsp;&nbsp;&nbsp; 查看每次详细修改内容的diff      \ngit log -p -2 &nbsp;&nbsp;&nbsp;&nbsp; 查看最近两次详细修改内容的diff       \ngit log --stat &nbsp;&nbsp;&nbsp;&nbsp;查看提交统计信息     \n#### Git 本地分支管理\n##### 查看、切换、创建和删除分支\n>git branch -r &nbsp;&nbsp;&nbsp;&nbsp; 查看远程分支    \ngit branch <new_branch> &nbsp;&nbsp;&nbsp;&nbsp; 创建新的分支    \ngit branch -v &nbsp;&nbsp;&nbsp;&nbsp; 查看各个分支最后提交信息    \ngit branch --merged &nbsp;&nbsp;&nbsp;&nbsp; 查看已经被合并到当前分支的分支    \ngit branch --no-merged &nbsp;&nbsp;&nbsp;&nbsp; 查看尚未被合并到当前分支的分支     \ngit checkout <branch> &nbsp;&nbsp;&nbsp;&nbsp; 切换到某个分支     \ngit checkout -b <new_branch> &nbsp;&nbsp;&nbsp;&nbsp; 创建新的分支，并且切换过去     \ngit checkout -b <new_branch> <branch> &nbsp;&nbsp;&nbsp;&nbsp; 基于branch创建新的new_branch      \ngit checkout commitID &nbsp;&nbsp;&nbsp;&nbsp; 把某次历史提交记录checkout出来，但无分支信息，切换到其他分支会自动删除     \ngit checkout commitID -b <new_branch> &nbsp;&nbsp;&nbsp;&nbsp; 把某次历史提交记录checkout出来，创建成一个分支     \ngit branch -d <branch> &nbsp;&nbsp;&nbsp;&nbsp; 删除某个分支     \ngit branch -D <branch> &nbsp;&nbsp;&nbsp;&nbsp; 强制删除某个分支 (未被合并的分支被删除的时候需要强制)      \n#### 分支合并和rebase\n>git merge <branch> &nbsp;&nbsp;&nbsp;&nbsp; 将branch分支合并到当前分支        \ngit merge origin/master --no-ff &nbsp;&nbsp;&nbsp;&nbsp; 不要Fast-Foward合并，这样可以生成merge提交      \ngit rebase master <branch> &nbsp;&nbsp;&nbsp;&nbsp; 将master rebase到branch，相当于： git co <branch> && git rebase master && git co master && git merge <branch>     \n#### Git补丁管理(方便在多台机器上开发同步时用)\n>git diff > ../sync.patch &nbsp;&nbsp;&nbsp;&nbsp; 生成补丁    \ngit apply ../sync.patch &nbsp;&nbsp;&nbsp;&nbsp; 打补丁     \ngit apply --check ../sync.patch &nbsp;&nbsp;&nbsp;&nbsp;测试补丁能否成功     \n#### Git暂存管理\n>git stash &nbsp;&nbsp;&nbsp;&nbsp; 暂存      \ngit stash list &nbsp;&nbsp;&nbsp;&nbsp; 列出所有stash     \ngit stash apply &nbsp;&nbsp;&nbsp;&nbsp; 恢复暂存的内容     \ngit stash drop &nbsp;&nbsp;&nbsp;&nbsp; 删除暂存区      \n#### Git远程分支管理\n>git pull &nbsp;&nbsp;&nbsp;&nbsp; 抓取远程仓库所有分支更新并合并到本地        \ngit pull --no-ff &nbsp;&nbsp;&nbsp;&nbsp; 抓取远程仓库所有分支更新并合并到本地，不要快进合并       \ngit fetch origin &nbsp;&nbsp;&nbsp;&nbsp; 抓取远程仓库更新        \ngit merge origin/master &nbsp;&nbsp;&nbsp;&nbsp; 将远程主分支合并到本地当前分支          \ngit co --track origin/branch &nbsp;&nbsp;&nbsp;&nbsp; 跟踪某个远程分支创建相应的本地分支         \ngit co -b <local_branch> origin/<remote_branch> &nbsp;&nbsp;&nbsp;&nbsp; 基于远程分支创建本地分支，功能同上        \ngit push &nbsp;&nbsp;&nbsp;&nbsp; push所有分支            \ngit push origin master &nbsp;&nbsp;&nbsp;&nbsp; 将本地主分支推到远程主分支           \ngit push -u origin master &nbsp;&nbsp;&nbsp;&nbsp; 将本地主分支推到远程(如无远程主分支则创建，用于初始化远程仓库)    \ngit push origin <local_branch> &nbsp;&nbsp;&nbsp;&nbsp; 创建远程分支， origin是远程仓库名    \ngit push origin <local_branch>:<remote_branch> &nbsp;&nbsp;&nbsp;&nbsp; 创建远程分支       \ngit push origin :<remote_branch> &nbsp;&nbsp;&nbsp;&nbsp;先删除本地分支(git br -d <branch>)，然后再push删除远程分支\n#### Git远程仓库管理\n##### GitHub\n>git remote -v &nbsp;&nbsp;&nbsp;&nbsp; 查看远程服务器地址和仓库名称       \ngit remote show origin &nbsp;&nbsp;&nbsp;&nbsp; 查看远程服务器仓库状态      \ngit remote add origin git@ github:####/####.git &nbsp;&nbsp;&nbsp;&nbsp; 添加远程仓库地址              \ngit remote set-url origin git@ github.com:####/####.git &nbsp;&nbsp;&nbsp;&nbsp; 设置远程仓库地址(用于修改远程仓库地址)     \ngit remote rm <repository> &nbsp;&nbsp;&nbsp;&nbsp; 删除远程仓库\n\n#### 创建远程仓库\n>git clone --bare robbin_site robbin_site.git &nbsp;&nbsp;&nbsp;&nbsp; 用带版本的项目创建纯版本仓库       \nscp -r my_project.git git@ git.csdn.net:~ &nbsp;&nbsp;&nbsp;&nbsp; 将纯仓库上传到服务器上       \nmkdir robbin_site.git && cd robbin_site.git && git --bare init &nbsp;&nbsp;&nbsp;&nbsp; 在服务器创建纯仓库        \ngit remote add origin git@ github.com:robbin/robbin_site.git &nbsp;&nbsp;&nbsp;&nbsp; 设置远程仓库地址        \ngit push -u origin master &nbsp;&nbsp;&nbsp;&nbsp; 客户端首次提交      \ngit push -u origin develop &nbsp;&nbsp;&nbsp;&nbsp; 首次将本地develop分支提交到远程develop分支，并且track         \ngit remote set-head origin master &nbsp;&nbsp;&nbsp;&nbsp; 设置远程仓库的HEAD指向master分支        \n#### 设置跟踪远程库和本地库\n>git branch --set-upstream master origin/master      \ngit branch --set-upstream develop origin/develop","source":"_posts/git命令.md","raw":"title: git命令\ndate: 2017-09-25 10:10:23\ntags: [git]\ncategories: [git]\ndescription: git常用命令大全\n---\ngit常用命令大全  \n---   \n>本博客旨在记录常用git命令。如果希望得到更多关于git的知识，请移步到[廖雪峰的git教程](https://www.liaoxuefeng.com/wiki/0013739516305929606dd18361248578c67b8067c8c017b000)，有非常详细的教程资料。\n#### 添加文件、查看状态、删除文件、提交文件、找回文件，重置修改文件\n>git help &lt;command&gt; &nbsp;&nbsp;&nbsp;&nbsp; 显示command的帮助文档     \ngit show (commitID) &nbsp;&nbsp;&nbsp;&nbsp; 显示最近一次（某一次）提交的内容详情    \ngit co -- <file> &nbsp;&nbsp;&nbsp;&nbsp; 抛弃工作区某一文件的修改    \ngit co . &nbsp;&nbsp;&nbsp;&nbsp; 抛弃工作区修改     \ngit add <file> &nbsp;&nbsp;&nbsp;&nbsp; 将工作文件修改提交到本地暂存区      \ngit add . &nbsp;&nbsp;&nbsp;&nbsp; 将所有修改过的工作文件提交暂存区      \ngit rm <file> &nbsp;&nbsp;&nbsp;&nbsp; 从版本库中删除文件       \ngit rm <file> --cached &nbsp;&nbsp;&nbsp;&nbsp; 从版本库中删除文件，但不删除本地文件          \ngit reset <file> &nbsp;&nbsp;&nbsp;&nbsp; 从暂存区恢复到工作文件    \ngit reset -- . &nbsp;&nbsp;&nbsp;&nbsp; 从暂存区恢复到工作文件    \ngit reset --hard &nbsp;&nbsp;&nbsp;&nbsp; 恢复最近一次提交过的状态，即放弃上次提交后的所有本次修改      \ngit ci <file> git ci . git ci -a &nbsp;&nbsp;&nbsp;&nbsp; 将git add, git rm和git ci等操作都合并在一起做git ci -am \"some comments\"    \ngit ci --amend &nbsp;&nbsp;&nbsp;&nbsp; 修改最后一次提交记录        \ngit revert <commitID> &nbsp;&nbsp;&nbsp;&nbsp; 恢复某次提交的状态，恢复动作本身也创建次提交对象      \ngit revert HEAD &nbsp;&nbsp;&nbsp;&nbsp; 恢复最后一次提交的状态    \n#### 查看文件diff\n\n>git diff <file> &nbsp;&nbsp;&nbsp;&nbsp; 比较当前文件和暂存区文件差异 git diff       \ngit diff <id1><id2> &nbsp;&nbsp;&nbsp;&nbsp; 比较两次提交之间的差异        \ngit diff <branch1>..<branch2> &nbsp;&nbsp;&nbsp;&nbsp; 在两个分支之间比较     \ngit diff --staged &nbsp;&nbsp;&nbsp;&nbsp; 比较暂存区和版本库差异    \ngit diff --cached &nbsp;&nbsp;&nbsp;&nbsp; 比较暂存区和版本库差异     \ngit diff --stat &nbsp;&nbsp;&nbsp;&nbsp; 仅仅比较统计信息     \n#### 查看提交记录\n>git log git log <file> &nbsp;&nbsp;&nbsp;&nbsp; 查看该文件每次提交记录     \ngit log -p <file> &nbsp;&nbsp;&nbsp;&nbsp; 查看每次详细修改内容的diff      \ngit log -p -2 &nbsp;&nbsp;&nbsp;&nbsp; 查看最近两次详细修改内容的diff       \ngit log --stat &nbsp;&nbsp;&nbsp;&nbsp;查看提交统计信息     \n#### Git 本地分支管理\n##### 查看、切换、创建和删除分支\n>git branch -r &nbsp;&nbsp;&nbsp;&nbsp; 查看远程分支    \ngit branch <new_branch> &nbsp;&nbsp;&nbsp;&nbsp; 创建新的分支    \ngit branch -v &nbsp;&nbsp;&nbsp;&nbsp; 查看各个分支最后提交信息    \ngit branch --merged &nbsp;&nbsp;&nbsp;&nbsp; 查看已经被合并到当前分支的分支    \ngit branch --no-merged &nbsp;&nbsp;&nbsp;&nbsp; 查看尚未被合并到当前分支的分支     \ngit checkout <branch> &nbsp;&nbsp;&nbsp;&nbsp; 切换到某个分支     \ngit checkout -b <new_branch> &nbsp;&nbsp;&nbsp;&nbsp; 创建新的分支，并且切换过去     \ngit checkout -b <new_branch> <branch> &nbsp;&nbsp;&nbsp;&nbsp; 基于branch创建新的new_branch      \ngit checkout commitID &nbsp;&nbsp;&nbsp;&nbsp; 把某次历史提交记录checkout出来，但无分支信息，切换到其他分支会自动删除     \ngit checkout commitID -b <new_branch> &nbsp;&nbsp;&nbsp;&nbsp; 把某次历史提交记录checkout出来，创建成一个分支     \ngit branch -d <branch> &nbsp;&nbsp;&nbsp;&nbsp; 删除某个分支     \ngit branch -D <branch> &nbsp;&nbsp;&nbsp;&nbsp; 强制删除某个分支 (未被合并的分支被删除的时候需要强制)      \n#### 分支合并和rebase\n>git merge <branch> &nbsp;&nbsp;&nbsp;&nbsp; 将branch分支合并到当前分支        \ngit merge origin/master --no-ff &nbsp;&nbsp;&nbsp;&nbsp; 不要Fast-Foward合并，这样可以生成merge提交      \ngit rebase master <branch> &nbsp;&nbsp;&nbsp;&nbsp; 将master rebase到branch，相当于： git co <branch> && git rebase master && git co master && git merge <branch>     \n#### Git补丁管理(方便在多台机器上开发同步时用)\n>git diff > ../sync.patch &nbsp;&nbsp;&nbsp;&nbsp; 生成补丁    \ngit apply ../sync.patch &nbsp;&nbsp;&nbsp;&nbsp; 打补丁     \ngit apply --check ../sync.patch &nbsp;&nbsp;&nbsp;&nbsp;测试补丁能否成功     \n#### Git暂存管理\n>git stash &nbsp;&nbsp;&nbsp;&nbsp; 暂存      \ngit stash list &nbsp;&nbsp;&nbsp;&nbsp; 列出所有stash     \ngit stash apply &nbsp;&nbsp;&nbsp;&nbsp; 恢复暂存的内容     \ngit stash drop &nbsp;&nbsp;&nbsp;&nbsp; 删除暂存区      \n#### Git远程分支管理\n>git pull &nbsp;&nbsp;&nbsp;&nbsp; 抓取远程仓库所有分支更新并合并到本地        \ngit pull --no-ff &nbsp;&nbsp;&nbsp;&nbsp; 抓取远程仓库所有分支更新并合并到本地，不要快进合并       \ngit fetch origin &nbsp;&nbsp;&nbsp;&nbsp; 抓取远程仓库更新        \ngit merge origin/master &nbsp;&nbsp;&nbsp;&nbsp; 将远程主分支合并到本地当前分支          \ngit co --track origin/branch &nbsp;&nbsp;&nbsp;&nbsp; 跟踪某个远程分支创建相应的本地分支         \ngit co -b <local_branch> origin/<remote_branch> &nbsp;&nbsp;&nbsp;&nbsp; 基于远程分支创建本地分支，功能同上        \ngit push &nbsp;&nbsp;&nbsp;&nbsp; push所有分支            \ngit push origin master &nbsp;&nbsp;&nbsp;&nbsp; 将本地主分支推到远程主分支           \ngit push -u origin master &nbsp;&nbsp;&nbsp;&nbsp; 将本地主分支推到远程(如无远程主分支则创建，用于初始化远程仓库)    \ngit push origin <local_branch> &nbsp;&nbsp;&nbsp;&nbsp; 创建远程分支， origin是远程仓库名    \ngit push origin <local_branch>:<remote_branch> &nbsp;&nbsp;&nbsp;&nbsp; 创建远程分支       \ngit push origin :<remote_branch> &nbsp;&nbsp;&nbsp;&nbsp;先删除本地分支(git br -d <branch>)，然后再push删除远程分支\n#### Git远程仓库管理\n##### GitHub\n>git remote -v &nbsp;&nbsp;&nbsp;&nbsp; 查看远程服务器地址和仓库名称       \ngit remote show origin &nbsp;&nbsp;&nbsp;&nbsp; 查看远程服务器仓库状态      \ngit remote add origin git@ github:####/####.git &nbsp;&nbsp;&nbsp;&nbsp; 添加远程仓库地址              \ngit remote set-url origin git@ github.com:####/####.git &nbsp;&nbsp;&nbsp;&nbsp; 设置远程仓库地址(用于修改远程仓库地址)     \ngit remote rm <repository> &nbsp;&nbsp;&nbsp;&nbsp; 删除远程仓库\n\n#### 创建远程仓库\n>git clone --bare robbin_site robbin_site.git &nbsp;&nbsp;&nbsp;&nbsp; 用带版本的项目创建纯版本仓库       \nscp -r my_project.git git@ git.csdn.net:~ &nbsp;&nbsp;&nbsp;&nbsp; 将纯仓库上传到服务器上       \nmkdir robbin_site.git && cd robbin_site.git && git --bare init &nbsp;&nbsp;&nbsp;&nbsp; 在服务器创建纯仓库        \ngit remote add origin git@ github.com:robbin/robbin_site.git &nbsp;&nbsp;&nbsp;&nbsp; 设置远程仓库地址        \ngit push -u origin master &nbsp;&nbsp;&nbsp;&nbsp; 客户端首次提交      \ngit push -u origin develop &nbsp;&nbsp;&nbsp;&nbsp; 首次将本地develop分支提交到远程develop分支，并且track         \ngit remote set-head origin master &nbsp;&nbsp;&nbsp;&nbsp; 设置远程仓库的HEAD指向master分支        \n#### 设置跟踪远程库和本地库\n>git branch --set-upstream master origin/master      \ngit branch --set-upstream develop origin/develop","slug":"git命令","published":1,"updated":"2021-06-25T11:19:55.441Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckqc904ok000ewotvr3akbr8x","content":"<h2 id=\"git常用命令大全\"><a href=\"#git常用命令大全\" class=\"headerlink\" title=\"git常用命令大全  \"></a>git常用命令大全  </h2><blockquote>\n<p>本博客旨在记录常用git命令。如果希望得到更多关于git的知识，请移步到<a href=\"https://www.liaoxuefeng.com/wiki/0013739516305929606dd18361248578c67b8067c8c017b000\" target=\"_blank\" rel=\"noopener\">廖雪峰的git教程</a>，有非常详细的教程资料。</p>\n</blockquote>\n<h4 id=\"添加文件、查看状态、删除文件、提交文件、找回文件，重置修改文件\"><a href=\"#添加文件、查看状态、删除文件、提交文件、找回文件，重置修改文件\" class=\"headerlink\" title=\"添加文件、查看状态、删除文件、提交文件、找回文件，重置修改文件\"></a>添加文件、查看状态、删除文件、提交文件、找回文件，重置修改文件</h4><blockquote>\n<p>git help &lt;command&gt; &nbsp;&nbsp;&nbsp;&nbsp; 显示command的帮助文档<br>git show (commitID) &nbsp;&nbsp;&nbsp;&nbsp; 显示最近一次（某一次）提交的内容详情<br>git co – <file> &nbsp;&nbsp;&nbsp;&nbsp; 抛弃工作区某一文件的修改<br>git co . &nbsp;&nbsp;&nbsp;&nbsp; 抛弃工作区修改<br>git add <file> &nbsp;&nbsp;&nbsp;&nbsp; 将工作文件修改提交到本地暂存区<br>git add . &nbsp;&nbsp;&nbsp;&nbsp; 将所有修改过的工作文件提交暂存区<br>git rm <file> &nbsp;&nbsp;&nbsp;&nbsp; 从版本库中删除文件<br>git rm <file> –cached &nbsp;&nbsp;&nbsp;&nbsp; 从版本库中删除文件，但不删除本地文件<br>git reset <file> &nbsp;&nbsp;&nbsp;&nbsp; 从暂存区恢复到工作文件<br>git reset – . &nbsp;&nbsp;&nbsp;&nbsp; 从暂存区恢复到工作文件<br>git reset –hard &nbsp;&nbsp;&nbsp;&nbsp; 恢复最近一次提交过的状态，即放弃上次提交后的所有本次修改<br>git ci <file> git ci . git ci -a &nbsp;&nbsp;&nbsp;&nbsp; 将git add, git rm和git ci等操作都合并在一起做git ci -am “some comments”<br>git ci –amend &nbsp;&nbsp;&nbsp;&nbsp; 修改最后一次提交记录<br>git revert <commitid> &nbsp;&nbsp;&nbsp;&nbsp; 恢复某次提交的状态，恢复动作本身也创建次提交对象<br>git revert HEAD &nbsp;&nbsp;&nbsp;&nbsp; 恢复最后一次提交的状态    </commitid></file></file></file></file></file></file></p>\n</blockquote>\n<h4 id=\"查看文件diff\"><a href=\"#查看文件diff\" class=\"headerlink\" title=\"查看文件diff\"></a>查看文件diff</h4><blockquote>\n<p>git diff <file> &nbsp;&nbsp;&nbsp;&nbsp; 比较当前文件和暂存区文件差异 git diff<br>git diff <id1><id2> &nbsp;&nbsp;&nbsp;&nbsp; 比较两次提交之间的差异<br>git diff <branch1>..<branch2> &nbsp;&nbsp;&nbsp;&nbsp; 在两个分支之间比较<br>git diff –staged &nbsp;&nbsp;&nbsp;&nbsp; 比较暂存区和版本库差异<br>git diff –cached &nbsp;&nbsp;&nbsp;&nbsp; 比较暂存区和版本库差异<br>git diff –stat &nbsp;&nbsp;&nbsp;&nbsp; 仅仅比较统计信息     </branch2></branch1></id2></id1></file></p>\n</blockquote>\n<h4 id=\"查看提交记录\"><a href=\"#查看提交记录\" class=\"headerlink\" title=\"查看提交记录\"></a>查看提交记录</h4><blockquote>\n<p>git log git log <file> &nbsp;&nbsp;&nbsp;&nbsp; 查看该文件每次提交记录<br>git log -p <file> &nbsp;&nbsp;&nbsp;&nbsp; 查看每次详细修改内容的diff<br>git log -p -2 &nbsp;&nbsp;&nbsp;&nbsp; 查看最近两次详细修改内容的diff<br>git log –stat &nbsp;&nbsp;&nbsp;&nbsp;查看提交统计信息     </file></file></p>\n</blockquote>\n<h4 id=\"Git-本地分支管理\"><a href=\"#Git-本地分支管理\" class=\"headerlink\" title=\"Git 本地分支管理\"></a>Git 本地分支管理</h4><h5 id=\"查看、切换、创建和删除分支\"><a href=\"#查看、切换、创建和删除分支\" class=\"headerlink\" title=\"查看、切换、创建和删除分支\"></a>查看、切换、创建和删除分支</h5><blockquote>\n<p>git branch -r &nbsp;&nbsp;&nbsp;&nbsp; 查看远程分支<br>git branch &lt;new_branch&gt; &nbsp;&nbsp;&nbsp;&nbsp; 创建新的分支<br>git branch -v &nbsp;&nbsp;&nbsp;&nbsp; 查看各个分支最后提交信息<br>git branch –merged &nbsp;&nbsp;&nbsp;&nbsp; 查看已经被合并到当前分支的分支<br>git branch –no-merged &nbsp;&nbsp;&nbsp;&nbsp; 查看尚未被合并到当前分支的分支<br>git checkout <branch> &nbsp;&nbsp;&nbsp;&nbsp; 切换到某个分支<br>git checkout -b &lt;new_branch&gt; &nbsp;&nbsp;&nbsp;&nbsp; 创建新的分支，并且切换过去<br>git checkout -b &lt;new_branch&gt; <branch> &nbsp;&nbsp;&nbsp;&nbsp; 基于branch创建新的new_branch<br>git checkout commitID &nbsp;&nbsp;&nbsp;&nbsp; 把某次历史提交记录checkout出来，但无分支信息，切换到其他分支会自动删除<br>git checkout commitID -b &lt;new_branch&gt; &nbsp;&nbsp;&nbsp;&nbsp; 把某次历史提交记录checkout出来，创建成一个分支<br>git branch -d <branch> &nbsp;&nbsp;&nbsp;&nbsp; 删除某个分支<br>git branch -D <branch> &nbsp;&nbsp;&nbsp;&nbsp; 强制删除某个分支 (未被合并的分支被删除的时候需要强制)      </branch></branch></branch></branch></p>\n</blockquote>\n<h4 id=\"分支合并和rebase\"><a href=\"#分支合并和rebase\" class=\"headerlink\" title=\"分支合并和rebase\"></a>分支合并和rebase</h4><blockquote>\n<p>git merge <branch> &nbsp;&nbsp;&nbsp;&nbsp; 将branch分支合并到当前分支<br>git merge origin/master –no-ff &nbsp;&nbsp;&nbsp;&nbsp; 不要Fast-Foward合并，这样可以生成merge提交<br>git rebase master <branch> &nbsp;&nbsp;&nbsp;&nbsp; 将master rebase到branch，相当于： git co <branch> &amp;&amp; git rebase master &amp;&amp; git co master &amp;&amp; git merge <branch>     </branch></branch></branch></branch></p>\n</blockquote>\n<h4 id=\"Git补丁管理-方便在多台机器上开发同步时用\"><a href=\"#Git补丁管理-方便在多台机器上开发同步时用\" class=\"headerlink\" title=\"Git补丁管理(方便在多台机器上开发同步时用)\"></a>Git补丁管理(方便在多台机器上开发同步时用)</h4><blockquote>\n<p>git diff &gt; ../sync.patch &nbsp;&nbsp;&nbsp;&nbsp; 生成补丁<br>git apply ../sync.patch &nbsp;&nbsp;&nbsp;&nbsp; 打补丁<br>git apply –check ../sync.patch &nbsp;&nbsp;&nbsp;&nbsp;测试补丁能否成功     </p>\n</blockquote>\n<h4 id=\"Git暂存管理\"><a href=\"#Git暂存管理\" class=\"headerlink\" title=\"Git暂存管理\"></a>Git暂存管理</h4><blockquote>\n<p>git stash &nbsp;&nbsp;&nbsp;&nbsp; 暂存<br>git stash list &nbsp;&nbsp;&nbsp;&nbsp; 列出所有stash<br>git stash apply &nbsp;&nbsp;&nbsp;&nbsp; 恢复暂存的内容<br>git stash drop &nbsp;&nbsp;&nbsp;&nbsp; 删除暂存区      </p>\n</blockquote>\n<h4 id=\"Git远程分支管理\"><a href=\"#Git远程分支管理\" class=\"headerlink\" title=\"Git远程分支管理\"></a>Git远程分支管理</h4><blockquote>\n<p>git pull &nbsp;&nbsp;&nbsp;&nbsp; 抓取远程仓库所有分支更新并合并到本地<br>git pull –no-ff &nbsp;&nbsp;&nbsp;&nbsp; 抓取远程仓库所有分支更新并合并到本地，不要快进合并<br>git fetch origin &nbsp;&nbsp;&nbsp;&nbsp; 抓取远程仓库更新<br>git merge origin/master &nbsp;&nbsp;&nbsp;&nbsp; 将远程主分支合并到本地当前分支<br>git co –track origin/branch &nbsp;&nbsp;&nbsp;&nbsp; 跟踪某个远程分支创建相应的本地分支<br>git co -b &lt;local_branch&gt; origin/&lt;remote_branch&gt; &nbsp;&nbsp;&nbsp;&nbsp; 基于远程分支创建本地分支，功能同上<br>git push &nbsp;&nbsp;&nbsp;&nbsp; push所有分支<br>git push origin master &nbsp;&nbsp;&nbsp;&nbsp; 将本地主分支推到远程主分支<br>git push -u origin master &nbsp;&nbsp;&nbsp;&nbsp; 将本地主分支推到远程(如无远程主分支则创建，用于初始化远程仓库)<br>git push origin &lt;local_branch&gt; &nbsp;&nbsp;&nbsp;&nbsp; 创建远程分支， origin是远程仓库名<br>git push origin &lt;local_branch&gt;:&lt;remote_branch&gt; &nbsp;&nbsp;&nbsp;&nbsp; 创建远程分支<br>git push origin :&lt;remote_branch&gt; &nbsp;&nbsp;&nbsp;&nbsp;先删除本地分支(git br -d <branch>)，然后再push删除远程分支</branch></p>\n</blockquote>\n<h4 id=\"Git远程仓库管理\"><a href=\"#Git远程仓库管理\" class=\"headerlink\" title=\"Git远程仓库管理\"></a>Git远程仓库管理</h4><h5 id=\"GitHub\"><a href=\"#GitHub\" class=\"headerlink\" title=\"GitHub\"></a>GitHub</h5><blockquote>\n<p>git remote -v &nbsp;&nbsp;&nbsp;&nbsp; 查看远程服务器地址和仓库名称<br>git remote show origin &nbsp;&nbsp;&nbsp;&nbsp; 查看远程服务器仓库状态<br>git remote add origin git@ github:####/####.git &nbsp;&nbsp;&nbsp;&nbsp; 添加远程仓库地址<br>git remote set-url origin git@ github.com:####/####.git &nbsp;&nbsp;&nbsp;&nbsp; 设置远程仓库地址(用于修改远程仓库地址)<br>git remote rm <repository> &nbsp;&nbsp;&nbsp;&nbsp; 删除远程仓库</repository></p>\n</blockquote>\n<h4 id=\"创建远程仓库\"><a href=\"#创建远程仓库\" class=\"headerlink\" title=\"创建远程仓库\"></a>创建远程仓库</h4><blockquote>\n<p>git clone –bare robbin_site robbin_site.git &nbsp;&nbsp;&nbsp;&nbsp; 用带版本的项目创建纯版本仓库<br>scp -r my_project.git git@ git.csdn.net:~ &nbsp;&nbsp;&nbsp;&nbsp; 将纯仓库上传到服务器上<br>mkdir robbin_site.git &amp;&amp; cd robbin_site.git &amp;&amp; git –bare init &nbsp;&nbsp;&nbsp;&nbsp; 在服务器创建纯仓库<br>git remote add origin git@ github.com:robbin/robbin_site.git &nbsp;&nbsp;&nbsp;&nbsp; 设置远程仓库地址<br>git push -u origin master &nbsp;&nbsp;&nbsp;&nbsp; 客户端首次提交<br>git push -u origin develop &nbsp;&nbsp;&nbsp;&nbsp; 首次将本地develop分支提交到远程develop分支，并且track<br>git remote set-head origin master &nbsp;&nbsp;&nbsp;&nbsp; 设置远程仓库的HEAD指向master分支        </p>\n</blockquote>\n<h4 id=\"设置跟踪远程库和本地库\"><a href=\"#设置跟踪远程库和本地库\" class=\"headerlink\" title=\"设置跟踪远程库和本地库\"></a>设置跟踪远程库和本地库</h4><blockquote>\n<p>git branch –set-upstream master origin/master<br>git branch –set-upstream develop origin/develop</p>\n</blockquote>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"git常用命令大全\"><a href=\"#git常用命令大全\" class=\"headerlink\" title=\"git常用命令大全  \"></a>git常用命令大全  </h2><blockquote>\n<p>本博客旨在记录常用git命令。如果希望得到更多关于git的知识，请移步到<a href=\"https://www.liaoxuefeng.com/wiki/0013739516305929606dd18361248578c67b8067c8c017b000\" target=\"_blank\" rel=\"noopener\">廖雪峰的git教程</a>，有非常详细的教程资料。</p>\n</blockquote>\n<h4 id=\"添加文件、查看状态、删除文件、提交文件、找回文件，重置修改文件\"><a href=\"#添加文件、查看状态、删除文件、提交文件、找回文件，重置修改文件\" class=\"headerlink\" title=\"添加文件、查看状态、删除文件、提交文件、找回文件，重置修改文件\"></a>添加文件、查看状态、删除文件、提交文件、找回文件，重置修改文件</h4><blockquote>\n<p>git help &lt;command&gt; &nbsp;&nbsp;&nbsp;&nbsp; 显示command的帮助文档<br>git show (commitID) &nbsp;&nbsp;&nbsp;&nbsp; 显示最近一次（某一次）提交的内容详情<br>git co – <file> &nbsp;&nbsp;&nbsp;&nbsp; 抛弃工作区某一文件的修改<br>git co . &nbsp;&nbsp;&nbsp;&nbsp; 抛弃工作区修改<br>git add <file> &nbsp;&nbsp;&nbsp;&nbsp; 将工作文件修改提交到本地暂存区<br>git add . &nbsp;&nbsp;&nbsp;&nbsp; 将所有修改过的工作文件提交暂存区<br>git rm <file> &nbsp;&nbsp;&nbsp;&nbsp; 从版本库中删除文件<br>git rm <file> –cached &nbsp;&nbsp;&nbsp;&nbsp; 从版本库中删除文件，但不删除本地文件<br>git reset <file> &nbsp;&nbsp;&nbsp;&nbsp; 从暂存区恢复到工作文件<br>git reset – . &nbsp;&nbsp;&nbsp;&nbsp; 从暂存区恢复到工作文件<br>git reset –hard &nbsp;&nbsp;&nbsp;&nbsp; 恢复最近一次提交过的状态，即放弃上次提交后的所有本次修改<br>git ci <file> git ci . git ci -a &nbsp;&nbsp;&nbsp;&nbsp; 将git add, git rm和git ci等操作都合并在一起做git ci -am “some comments”<br>git ci –amend &nbsp;&nbsp;&nbsp;&nbsp; 修改最后一次提交记录<br>git revert <commitid> &nbsp;&nbsp;&nbsp;&nbsp; 恢复某次提交的状态，恢复动作本身也创建次提交对象<br>git revert HEAD &nbsp;&nbsp;&nbsp;&nbsp; 恢复最后一次提交的状态    </commitid></file></file></file></file></file></file></p>\n</blockquote>\n<h4 id=\"查看文件diff\"><a href=\"#查看文件diff\" class=\"headerlink\" title=\"查看文件diff\"></a>查看文件diff</h4><blockquote>\n<p>git diff <file> &nbsp;&nbsp;&nbsp;&nbsp; 比较当前文件和暂存区文件差异 git diff<br>git diff <id1><id2> &nbsp;&nbsp;&nbsp;&nbsp; 比较两次提交之间的差异<br>git diff <branch1>..<branch2> &nbsp;&nbsp;&nbsp;&nbsp; 在两个分支之间比较<br>git diff –staged &nbsp;&nbsp;&nbsp;&nbsp; 比较暂存区和版本库差异<br>git diff –cached &nbsp;&nbsp;&nbsp;&nbsp; 比较暂存区和版本库差异<br>git diff –stat &nbsp;&nbsp;&nbsp;&nbsp; 仅仅比较统计信息     </branch2></branch1></id2></id1></file></p>\n</blockquote>\n<h4 id=\"查看提交记录\"><a href=\"#查看提交记录\" class=\"headerlink\" title=\"查看提交记录\"></a>查看提交记录</h4><blockquote>\n<p>git log git log <file> &nbsp;&nbsp;&nbsp;&nbsp; 查看该文件每次提交记录<br>git log -p <file> &nbsp;&nbsp;&nbsp;&nbsp; 查看每次详细修改内容的diff<br>git log -p -2 &nbsp;&nbsp;&nbsp;&nbsp; 查看最近两次详细修改内容的diff<br>git log –stat &nbsp;&nbsp;&nbsp;&nbsp;查看提交统计信息     </file></file></p>\n</blockquote>\n<h4 id=\"Git-本地分支管理\"><a href=\"#Git-本地分支管理\" class=\"headerlink\" title=\"Git 本地分支管理\"></a>Git 本地分支管理</h4><h5 id=\"查看、切换、创建和删除分支\"><a href=\"#查看、切换、创建和删除分支\" class=\"headerlink\" title=\"查看、切换、创建和删除分支\"></a>查看、切换、创建和删除分支</h5><blockquote>\n<p>git branch -r &nbsp;&nbsp;&nbsp;&nbsp; 查看远程分支<br>git branch &lt;new_branch&gt; &nbsp;&nbsp;&nbsp;&nbsp; 创建新的分支<br>git branch -v &nbsp;&nbsp;&nbsp;&nbsp; 查看各个分支最后提交信息<br>git branch –merged &nbsp;&nbsp;&nbsp;&nbsp; 查看已经被合并到当前分支的分支<br>git branch –no-merged &nbsp;&nbsp;&nbsp;&nbsp; 查看尚未被合并到当前分支的分支<br>git checkout <branch> &nbsp;&nbsp;&nbsp;&nbsp; 切换到某个分支<br>git checkout -b &lt;new_branch&gt; &nbsp;&nbsp;&nbsp;&nbsp; 创建新的分支，并且切换过去<br>git checkout -b &lt;new_branch&gt; <branch> &nbsp;&nbsp;&nbsp;&nbsp; 基于branch创建新的new_branch<br>git checkout commitID &nbsp;&nbsp;&nbsp;&nbsp; 把某次历史提交记录checkout出来，但无分支信息，切换到其他分支会自动删除<br>git checkout commitID -b &lt;new_branch&gt; &nbsp;&nbsp;&nbsp;&nbsp; 把某次历史提交记录checkout出来，创建成一个分支<br>git branch -d <branch> &nbsp;&nbsp;&nbsp;&nbsp; 删除某个分支<br>git branch -D <branch> &nbsp;&nbsp;&nbsp;&nbsp; 强制删除某个分支 (未被合并的分支被删除的时候需要强制)      </branch></branch></branch></branch></p>\n</blockquote>\n<h4 id=\"分支合并和rebase\"><a href=\"#分支合并和rebase\" class=\"headerlink\" title=\"分支合并和rebase\"></a>分支合并和rebase</h4><blockquote>\n<p>git merge <branch> &nbsp;&nbsp;&nbsp;&nbsp; 将branch分支合并到当前分支<br>git merge origin/master –no-ff &nbsp;&nbsp;&nbsp;&nbsp; 不要Fast-Foward合并，这样可以生成merge提交<br>git rebase master <branch> &nbsp;&nbsp;&nbsp;&nbsp; 将master rebase到branch，相当于： git co <branch> &amp;&amp; git rebase master &amp;&amp; git co master &amp;&amp; git merge <branch>     </branch></branch></branch></branch></p>\n</blockquote>\n<h4 id=\"Git补丁管理-方便在多台机器上开发同步时用\"><a href=\"#Git补丁管理-方便在多台机器上开发同步时用\" class=\"headerlink\" title=\"Git补丁管理(方便在多台机器上开发同步时用)\"></a>Git补丁管理(方便在多台机器上开发同步时用)</h4><blockquote>\n<p>git diff &gt; ../sync.patch &nbsp;&nbsp;&nbsp;&nbsp; 生成补丁<br>git apply ../sync.patch &nbsp;&nbsp;&nbsp;&nbsp; 打补丁<br>git apply –check ../sync.patch &nbsp;&nbsp;&nbsp;&nbsp;测试补丁能否成功     </p>\n</blockquote>\n<h4 id=\"Git暂存管理\"><a href=\"#Git暂存管理\" class=\"headerlink\" title=\"Git暂存管理\"></a>Git暂存管理</h4><blockquote>\n<p>git stash &nbsp;&nbsp;&nbsp;&nbsp; 暂存<br>git stash list &nbsp;&nbsp;&nbsp;&nbsp; 列出所有stash<br>git stash apply &nbsp;&nbsp;&nbsp;&nbsp; 恢复暂存的内容<br>git stash drop &nbsp;&nbsp;&nbsp;&nbsp; 删除暂存区      </p>\n</blockquote>\n<h4 id=\"Git远程分支管理\"><a href=\"#Git远程分支管理\" class=\"headerlink\" title=\"Git远程分支管理\"></a>Git远程分支管理</h4><blockquote>\n<p>git pull &nbsp;&nbsp;&nbsp;&nbsp; 抓取远程仓库所有分支更新并合并到本地<br>git pull –no-ff &nbsp;&nbsp;&nbsp;&nbsp; 抓取远程仓库所有分支更新并合并到本地，不要快进合并<br>git fetch origin &nbsp;&nbsp;&nbsp;&nbsp; 抓取远程仓库更新<br>git merge origin/master &nbsp;&nbsp;&nbsp;&nbsp; 将远程主分支合并到本地当前分支<br>git co –track origin/branch &nbsp;&nbsp;&nbsp;&nbsp; 跟踪某个远程分支创建相应的本地分支<br>git co -b &lt;local_branch&gt; origin/&lt;remote_branch&gt; &nbsp;&nbsp;&nbsp;&nbsp; 基于远程分支创建本地分支，功能同上<br>git push &nbsp;&nbsp;&nbsp;&nbsp; push所有分支<br>git push origin master &nbsp;&nbsp;&nbsp;&nbsp; 将本地主分支推到远程主分支<br>git push -u origin master &nbsp;&nbsp;&nbsp;&nbsp; 将本地主分支推到远程(如无远程主分支则创建，用于初始化远程仓库)<br>git push origin &lt;local_branch&gt; &nbsp;&nbsp;&nbsp;&nbsp; 创建远程分支， origin是远程仓库名<br>git push origin &lt;local_branch&gt;:&lt;remote_branch&gt; &nbsp;&nbsp;&nbsp;&nbsp; 创建远程分支<br>git push origin :&lt;remote_branch&gt; &nbsp;&nbsp;&nbsp;&nbsp;先删除本地分支(git br -d <branch>)，然后再push删除远程分支</branch></p>\n</blockquote>\n<h4 id=\"Git远程仓库管理\"><a href=\"#Git远程仓库管理\" class=\"headerlink\" title=\"Git远程仓库管理\"></a>Git远程仓库管理</h4><h5 id=\"GitHub\"><a href=\"#GitHub\" class=\"headerlink\" title=\"GitHub\"></a>GitHub</h5><blockquote>\n<p>git remote -v &nbsp;&nbsp;&nbsp;&nbsp; 查看远程服务器地址和仓库名称<br>git remote show origin &nbsp;&nbsp;&nbsp;&nbsp; 查看远程服务器仓库状态<br>git remote add origin git@ github:####/####.git &nbsp;&nbsp;&nbsp;&nbsp; 添加远程仓库地址<br>git remote set-url origin git@ github.com:####/####.git &nbsp;&nbsp;&nbsp;&nbsp; 设置远程仓库地址(用于修改远程仓库地址)<br>git remote rm <repository> &nbsp;&nbsp;&nbsp;&nbsp; 删除远程仓库</repository></p>\n</blockquote>\n<h4 id=\"创建远程仓库\"><a href=\"#创建远程仓库\" class=\"headerlink\" title=\"创建远程仓库\"></a>创建远程仓库</h4><blockquote>\n<p>git clone –bare robbin_site robbin_site.git &nbsp;&nbsp;&nbsp;&nbsp; 用带版本的项目创建纯版本仓库<br>scp -r my_project.git git@ git.csdn.net:~ &nbsp;&nbsp;&nbsp;&nbsp; 将纯仓库上传到服务器上<br>mkdir robbin_site.git &amp;&amp; cd robbin_site.git &amp;&amp; git –bare init &nbsp;&nbsp;&nbsp;&nbsp; 在服务器创建纯仓库<br>git remote add origin git@ github.com:robbin/robbin_site.git &nbsp;&nbsp;&nbsp;&nbsp; 设置远程仓库地址<br>git push -u origin master &nbsp;&nbsp;&nbsp;&nbsp; 客户端首次提交<br>git push -u origin develop &nbsp;&nbsp;&nbsp;&nbsp; 首次将本地develop分支提交到远程develop分支，并且track<br>git remote set-head origin master &nbsp;&nbsp;&nbsp;&nbsp; 设置远程仓库的HEAD指向master分支        </p>\n</blockquote>\n<h4 id=\"设置跟踪远程库和本地库\"><a href=\"#设置跟踪远程库和本地库\" class=\"headerlink\" title=\"设置跟踪远程库和本地库\"></a>设置跟踪远程库和本地库</h4><blockquote>\n<p>git branch –set-upstream master origin/master<br>git branch –set-upstream develop origin/develop</p>\n</blockquote>\n"},{"title":"Css Grid 语法总结","date":"2021-06-03T08:05:29.000Z","description":"Grid 网格教程语法总结","_content":"\n## 写在前面\n\nGrid布局是目前css 中最强大的布局方案，它的原理是将网页划分为一个个网格，使用网格系统来呈现各种各样的布局效果。因此，使用它可以实现所有形式的布局，尤其在做一些不规则的布局时，grid 的强大更显得尤为出众。\n\n> 为什么 grid 布局不如 flex 使用广泛？\n> flex 布局方式为轴线布局，他通过指定基准线的位置来划分网页的区块，可以看做一维布局，而 grid 布局则是将容器划分成\"行\"和\"列\"，产生单元格，然后操作划分出的单元格，可以看作是二维布局。因此 flex 布局语法本身要较 grid 简单清晰，而且大部分布局需求都有规整的结构，使用 flex 就可以轻松实现。最后，grid 的兼容性相对 flex 较差，并且没有很好地兼容方式。\n\n**grid 布局于 flex 布局有一定的相似性，下面的教程会对照写法，加深印象**\n\n## 基本概念\n\n### 项目和容器\n\n采用网格布局的区域，称为\"容器\"（container）。容器内部采用网格定位的直接子元素，称为\"项目\"（item）。\n\n```html\n<div id=\"container\">\n  <div class=\"item\"><p>1</p></div>\n  <div class=\"item\"><p>2</p></div>\n  <div class=\"item\"><p>3</p></div>\n</div>\n```\n\n上面代码中，`.container`为容器，3 个`.item`为项目。\n**注意：项目只能是容器的直接子元素，比如上面代码的`<p>`就不是项目。Grid 布局只对`.item`生效。**\n\n### 行、列、单元格\n\n容器中水平的区域为行（row），垂直的区域为列（column），行和列交叉产生的区域称为单元格（cell）。\n正常情况下，`m`行`n`列会产生`m * n`个单元格。\n\n## css 属性\n\nGrid 布局的属性分成两类。一类定义在容器上面，称为容器属性；另一类定义在项目上面，称为项目属性。\n\n### 容器属性\n\n#### display\n\n使用`display: grid`可以指定一个容器采用网格布局。\n\n```css\ndiv {\n  display: grid;\n}\n```\n\n也可以使用`display: inline-grid`，设置为行内元素，效果类似于`inline-flex`。\n\n> 同 flex，设置为网格布局后，项目的`float`、`display: inline-block`等属性均失效\n\n#### grid-template-columns / grid-template-rows\n\n指定了网格布局后，就开始划分行和列。 `grid-template-columns` 用来定义每一列， `grid-template-rows`用来定义每一行。\n\n```css\n.container {\n  display: grid;\n  grid-template-columns: 100px 100px 100px;\n  grid-template-rows: 100px 100px 100px;\n}\n```\n\n上面代码指定了一个三行三列的网格，宽高均为`100px`\n\n<iframe width=\"100%\" height=\"370\" src=\"//jsrun.net/AbVKp/embedded/all/light\" allowfullscreen=\"allowfullscreen\" frameborder=\"0\"></iframe>\n\n也可以使用百分比\n\n```css\n.container {\n  display: grid;\n  grid-template-columns: 33.33% 33.33% 33.33%;\n  grid-template-rows: 33.33% 33.33% 33.33%;\n}\n```\n\n<iframe width=\"100%\" height=\"370\" src=\"//jsrun.net/jbVKp/embedded/all/light\" allowfullscreen=\"allowfullscreen\" frameborder=\"0\"></iframe>\n\n##### repeat()\n\n相信我们都发现了，当网格系统足够复杂时，需要我们写很多重复的值。这时可以使用`repeat()`函数简化重复的值，简化代码如下\n\n```css\n.container {\n  display: grid;\n  grid-template-columns: repeat(3, 33.33%);\n  grid-template-rows: repeat(3, 33.33%);\n}\n```\n\n`repeat()`接受两个参数，第一个是重复的次数，第二个是需要重复的值。**而且这里的值不必非得是固定的值，我们可以给定一组值，同样可以重复执行。**\n\n```css\n.container {\n  display: grid;\n  grid-template-columns: repeat(2, 100px 80px 60px);\n  grid-template-rows: repeat(9, 100px);\n}\n```\n\n上面代码表示每列按照`100px 80px 60px`的规则，重复两次。因此共得到了 6 列，表现为第一列和第四列的宽度为100px，第二列和第五列为80px，第三列和第六列为60px。又定义了 9 行，每行高度固定为`100px`\n\n<iframe width=\"100%\" height=\"370\" src=\"//jsrun.net/BbVKp/embedded/all/light\" allowfullscreen=\"allowfullscreen\" frameborder=\"0\"></iframe>\n\n##### auto-fill\n\n有时，单元格的大小是固定的，但是容器的大小不确定。如果希望每一行（或每一列）容纳尽可能多的单元格，这时可以使用`auto-fill`关键字表示自动填充。\n\n```css\n.container {\n  display: grid;\n  grid-template-columns: repeat(auto-fill, 100px);\n}\n```\n\n上面代码容器宽`550px`，每列宽度`100px`，然后自动填充，因此从第六行开始折行显示。\n\n<iframe width=\"100%\" height=\"370\" src=\"//jsrun.net/RbVKp/embedded/all/light\" allowfullscreen=\"allowfullscreen\" frameborder=\"0\"></iframe>\n\n##### fr\n\n网格布局提供了`fr`关键字（fraction 的缩写，意为\"片段\"）。如果两列的宽度分别为1fr和2fr，就表示后者是前者的两倍。类似于 flex 中的项目的`flex-grow`属性。\n\n```css\n.container {\n  display: grid;\n  grid-template-columns: 1fr 1fr 1fr;\n}\n```\n\n上面代码创建三个相同宽度的列。\n\n<iframe width=\"100%\" height=\"370\" src=\"//jsrun.net/MbVKp/embedded/all/light\" allowfullscreen=\"allowfullscreen\" frameborder=\"0\"></iframe>\n\n`fr`在与绝对长度的单位结合使用，会产生非常神奇的效果。\n\n```css\n.container {\n  display: grid;\n  grid-template-columns: 150px 1fr 2fr;\n}\n```\n\n上面代码表示，第一列的宽度为150像素，第二列的宽度是第三列的一半。\n\n<iframe width=\"100%\" height=\"370\" src=\"//jsrun.net/SbVKp/embedded/all/light\" allowfullscreen=\"allowfullscreen\" frameborder=\"0\"></iframe>\n\n##### minmax()\n\n`minmax()`函数产生一个长度范围，表示长度就在这个范围之中。它接受两个参数，分别为最小值和最大值。\n\n```css\n.container {\n  display: grid;\n  grid-template-columns: 1fr 1fr minmax(100px, 1fr);\n}\n```\n\n上面代码中，minmax(100px, 1fr)表示列宽不小于100px，不大于1fr。\n\n##### auto\n\n`auto`关键字表示由浏览器自己决定长度。\n\n```css\n.container {\n  display: grid;\n  grid-template-columns: 100px auto 100px;\n}\n```\n\n上面代码中，第二列的宽度，基本上等于该列单元格的最大宽度，除非单元格内容设置了`min-width`，且这个值大于最大宽度。\n\n##### 网格线命名\n\n`grid-template-columns`属性和`grid-template-rows`属性里面，还可以使用方括号，指定每一根网格线的名字，方便以后的引用。\n\n```css\n.container {\n  display: grid;\n  grid-template-columns: [c1] 100px [c2] 100px [c3] auto [c4];\n  grid-template-rows: [r1] 100px [r2] 100px [r3] auto [r4];\n}\n```\n\n上面代码指定网格布局为`3行 x 3列`，因此有`4`根垂直网格线和`4`根水平网格线。方括号里面依次是这八根线的名字。\n\n#### row-gap / column-gap / gap\n\ngrid-row-gap属性设置行与行的间隔（行间距），grid-column-gap属性设置列与列的间隔（列间距）。\n\n```css\n.container {\n  display: grid;\n  row-gap: 20px;\n  column-gap: 20px;\n}\n```\n\n上面代码中，行间距和列间距均为`20px`。\n\n<iframe width=\"100%\" height=\"370\" src=\"//jsrun.net/4bVKp/embedded/all/light\" allowfullscreen=\"allowfullscreen\" frameborder=\"0\"></iframe>\n\n`gap`属性是`column-gap`和`row-gap`的合并简写形式，语法如下。\n\n```css\n.container {\n  gap: <row-gap> <column-gap>;\n}\n```\n\n因此，上面一段 CSS 代码等同于下面的代码。\n\n```css\n.container {\n  gap: 20px 20px;\n}\n```\n\n如果`gap`省略了第二个值，浏览器认为第二个值等于第一个值。\n\n#### grid-template-areas\n\n网格布局允许指定\"区域\"（area），一个区域由单个或多个单元格组成。`grid-template-areas`属性用于定义区域。\n\n```css\n.container {\n  display: grid;\n  grid-template-columns: 100px 100px 100px;\n  grid-template-rows: 100px 100px 100px;\n  grid-template-areas: 'a b c'\n                       'd e f'\n                       'g h i';\n}\n```\n\n上面代码先划分出9个单元格，然后将其定名为`a`到`i`的九个区域，分别对应这九个单元格。\n\n多个单元格合并成一个区域的写法如下。\n\n```css\n.container {\n  grid-template-areas: 'a a a'\n                       'b b b'\n                       'c c c';\n}\n```\n\n上面代码将9个单元格分成`a`、`b`、`c`三个区域。\n\n下面是一个布局实例。\n\n```css\n.container {\n  grid-template-areas: \"header header header\"\n                       \"main main sidebar\"\n                       \"footer footer footer\";\n}\n```\n\n上面代码中，顶部是`header`区域，底部是`footer`区域，中间部分左边为`main`区域，右边为`sidebar`区域。\n\n如果某些区域不需要利用，则使用`.`表示。\n\n```css\n.container {\n  grid-template-areas: 'a . c'\n                       'd . f'\n                       'g . i';\n}\n```\n\n上面代码中，中间一列为点，表示没有用到该单元格，或者该单元格不属于任何区域。\n\n> 注意，区域的命名会影响到网格线。每个区域的起始网格线，会自动命名为`区域名-start`，终止网格线自动命名为`区域名-end`。\n> 比如，区域名为header，则起始位置的水平网格线和垂直网格线叫做`header-start`，终止位置的水平网格线和垂直网格线叫做`header-end`。\n\n#### grid-auto-flow\n\n划分网格以后，容器的子元素会默认\"先行后列\"排序，即先填满第一行，再开始放入第二行，依次执行。\n\n通过`grid-auto-flow`属性可以改变网格的排序，默认为`row`,及“先行后列”，可以设置为`column`，变为“先列后行”。\n\n<iframe width=\"100%\" height=\"370\" src=\"//jsrun.net/gWVKp/embedded/all/light\" allowfullscreen=\"allowfullscreen\" frameborder=\"0\"></iframe>\n\n除了`row`和`column`，还可以设置为`row dense`和`column dense`。这两个值主要用于，某些项目指定位置以后，剩下的项目怎么自动放置。\n\n下面的例子中让1号项目和2号项目各占据两个单元格，然后在默认的`grid-auto-flow: row`情况下，会产生下面这样的布局。\n\n<iframe width=\"100%\" height=\"370\" src=\"//jsrun.net/yWVKp/embedded/all/light\" allowfullscreen=\"allowfullscreen\" frameborder=\"0\"></iframe>\n\n因为 3 号项目默认跟在 2 号项目之后，而第一行又无法容纳 2 号项目，所以第一行只能出现了空白。只要修改`grid-auto-flow: row dense`，就会在“先行后列”的基础上，尽可能紧密填满，不出现空格。\n\n<iframe width=\"100%\" height=\"370\" src=\"//jsrun.net/bWVKp/embedded/all/light\" allowfullscreen=\"allowfullscreen\" frameborder=\"0\"></iframe>\n\n如果将设置改为`column dense`，也是同样的意思，不过会遵循\"先列后行\"，并且尽量填满空格。\n\n#### justify-items / align-items / place-items\n\n`justify-items`属性设置单元格内容的水平位置，`align-items`属性设置单元格内容的垂直位置。\n\n```css\n.container {\n  justify-items: start | end | center | stretch;\n  align-items: start | end | center | stretch;\n}\n```\n\n这两个属性的写法完全相同，都可以取下面这些值：\n\n+ start：对齐单元格的起始边缘。\n+ end：对齐单元格的结束边缘。\n+ center：单元格内部居中。\n+ stretch：拉伸，占满单元格的整个宽度（默认值）。\n\n`place-items`属性是`align-items`属性和`justify-items`属性的合并简写形式。\n\n```css\n.container {\n  place-items: <align-items> <justify-items>;\n}\n```\n\n如果省略第二个值，则浏览器认为与第一个值相等。\n\n#### justify-content / align-content / place-content\n\n`justify-content`属性是整个内容区域在容器里面的水平位置，`align-content`属性是整个内容区域的垂直位置。\n\n```css\n.container {\n  justify-content: start | end | center | stretch | space-around | space-between | space-evenly;\n  align-content: start | end | center | stretch | space-around | space-between | space-evenly;\n}\n```\n\n这两个属性的写法完全相同，都可以取下面这些值:\n\n+ start: 对齐容器的起始边框。\n+ end: 对齐容器的结束边框。\n+ center: 容器内部居中。\n+ stretch: 项目大小没有指定时，拉伸占据整个网格容器。\n+ space-around: 每个项目两侧的间隔相等。所以，项目之间的间隔比项目与容器边框的间隔大一倍。\n+ space-between: 项目与项目的间隔相等，项目与容器边框之间没有间隔。\n+ space-evenly: 项目与项目的间隔相等，项目与容器边框之间也是同样长度的间隔。\n\n`place-content`属性是`align-content`属性和`justify-content`属性的合并简写形式。\n\n```css\n.container {\n  place-content: <align-content> <justify-content>\n}\n```\n\n如果省略第二个值，浏览器就会假定第二个值等于第一个值。\n\n#### grid-auto-columns / grid-auto-rows\n\n有时候，一些项目的指定位置，在现有网格的外部。比如网格只有3列，但是某一个项目指定在第5行。这时，浏览器会自动生成多余的网格，以便放置项目。\n\n`grid-auto-columns`属性和`grid-auto-rows`属性用来设置，浏览器自动创建的多余网格的列宽和行高。它们的写法与`grid-template-columns`和`grid-template-rows`完全相同。如果不指定这两个属性，浏览器完全根据单元格内容的大小，决定新增网格的列宽和行高。\n\n下面的例子里面，划分好的网格是3行 x 3列，但是，8号项目指定在第4行，9号项目指定在第5行,并指定新增的行高统一为50px（原始的行高为100px）。\n\n```css\n.container {\n  display: grid;\n  grid-template-columns: 100px 100px 100px;\n  grid-template-rows: 100px 100px 100px;\n  grid-auto-rows: 50px;\n}\n```\n\n<iframe width=\"100%\" height=\"370\" src=\"//jsrun.net/wWVKp/embedded/all/light\" allowfullscreen=\"allowfullscreen\" frameborder=\"0\"></iframe>\n\n### 项目属性\n\n#### grid-column-start / grid-column-end / grid-row-start / grid-row-end / grid-column / grid-row\n\n项目的位置是可以指定的，具体方法就是指定项目的四个边框，分别定位在哪根网格线。\n\n+ `grid-column-start`表示左边框贴紧的垂直网格线\n+ `grid-column-end`表示右边框贴紧的垂直网格线\n+ `grid-row-start`表示上边框贴紧的水平网格线\n+ `grid-row-end`表示下边框贴紧的水平网格线\n\n```css\n.item-1 {\n  grid-column-start: 2;\n  grid-column-end: 4;\n}\n```\n\n上面代码指定，1号项目的左边框是第二根垂直网格线，右边框是第四根垂直网格线。但并没有指定上下边框，所以会采用默认位置。而除了1号项目以外，其他项目都没有指定位置，将由浏览器自动布局，这时它们的位置由容器的`grid-auto-flow`属性决定，参考上面的教程，不再赘述。\n\n<iframe width=\"100%\" height=\"370\" src=\"//jsrun.net/TWVKp/embedded/all/light\" allowfullscreen=\"allowfullscreen\" frameborder=\"0\"></iframe>\n\n下面的例子是指定四个边框位置的效果。\n\n<iframe width=\"100%\" height=\"370\" src=\"//jsrun.net/UWVKp/embedded/all/light\" allowfullscreen=\"allowfullscreen\" frameborder=\"0\"></iframe>\n\n这四个属性的值，除了指定为第几个网格线，还可以指定为网格线的名字。\n\n```css\n.item-1 {\n  grid-column-start: header-start;\n  grid-column-end: header-end;\n}\n```\n\n上面代码中，左边框和右边框的位置，都指定为网格线的名字。\n这四个属性的值还可以使用span关键字，表示\"跨越\"，即左右边框（上下边框）之间跨越多少个网格。\n\n```css\n.item-1 {\n  grid-column-start: span 2;\n}\n```\n\n上面代码表示，1号项目的左边框距离右边框跨越2个网格。\n使用这四个属性，如果产生了项目的重叠，则使用z-index属性指定项目的重叠顺序。\n\n`grid-column`属性是`grid-column-start`和`grid-column-end`的合并简写形式，`grid-row`属性是`grid-row-start`属性和`grid-row-end`的合并简写形式。\n\n```css\n.item {\n  grid-column: <grid-column-start> / <grid-column-end>;\n  grid-row: <grid-row-start> / <grid-row-end>;\n}\n```\n\n下面是一个例子。\n\n```css\n.item-1 {\n  grid-column: 1 / 3;\n  grid-row: 1 / 2;\n}\n/* 等同于 */\n.item-1 {\n  grid-column-start: 1;\n  grid-column-end: 3;\n  grid-row-start: 1;\n  grid-row-end: 2;\n}\n```\n\n上面代码中，项目item-1占据第一行，从第一根列线到第三根列线。\n\n这两个属性之中，也可以使用span关键字，表示跨越多少个网格。\n\n```css\n.item-1 {\n  background: #b03532;\n  grid-column: 1 / 3;\n  grid-row: 1 / 3;\n}\n/* 等同于 */\n.item-1 {\n  background: #b03532;\n  grid-column: 1 / span 2;\n  grid-row: 1 / span 2;\n}\n```\n\n上面代码中，项目item-1占据的区域，包括第一行 + 第二行、第一列 + 第二列。\n斜杠以及后面的部分可以省略，默认跨越一个网格。\n\n```css\n.item-1 {\n  grid-column: 1;\n  grid-row: 1;\n}\n```\n\n上面代码中，项目item-1占据左上角第一个网格。\n\n#### grid-area\n\n`grid-area`属性指定项目放在哪一个区域。\n\n```css\n.item-1 {\n  grid-area: e;\n}\n```\n\n上面代码中，1号项目位于e区域。\n\n<iframe width=\"100%\" height=\"370\" src=\"//jsrun.net/dWVKp/embedded/all/light\" allowfullscreen=\"allowfullscreen\" frameborder=\"0\"></iframe>\n\ngrid-area属性还可用作grid-row-start、grid-column-start、grid-row-end、grid-column-end的合并简写形式，直接指定项目的位置。\n\n```css\n.item {\n  grid-area: <row-start> / <column-start> / <row-end> / <column-end>;\n}\n```\n\n下面是一个例子。\n\n```css\n/* 表示从第一个行第一列开始，到第三行第三列为止，因此是 2 * 2 个单元格 */\n.item-1 {\n  grid-area: 1 / 1 / 3 / 3;\n}\n```\n\n<iframe width=\"100%\" height=\"370\" src=\"//jsrun.net/JWVKp/embedded/all/light\" allowfullscreen=\"allowfullscreen\" frameborder=\"0\"></iframe>\n\n#### justify-self / align-self / place-self\n\n`justify-self`属性设置单元格内容的水平位置，跟justify-items属性的用法完全一致，但只作用于单个项目。\n`align-self`属性设置单元格内容的垂直位置，跟align-items属性的用法完全一致，也是只作用于单个项目。\n\n这两个属性都可以取下面四个值：\n\n+ start：对齐单元格的起始边缘。\n+ end：对齐单元格的结束边缘。\n+ center：单元格内部居中。\n+ stretch：拉伸，占满单元格的整个宽度（默认值）。\n\n```css\n.item {\n  justify-self: start | end | center | stretch;\n  align-self: start | end | center | stretch;\n}\n```\n\n`place-self`属性是`align-self`属性和`justify-self`属性的合并简写形式。\n\n```css\n.item {\n  place-self: <align-self> <justify-self>;\n}\n```\n\n如果省略第二个值，`place-self`属性会认为这两个值相等。\n","source":"_posts/grid.md","raw":"---\ntitle: Css Grid 语法总结\ntags: [css]\ndate: 2021-06-03 16:05:29\ncategories: [css]\ndescription: Grid 网格教程语法总结\n---\n\n## 写在前面\n\nGrid布局是目前css 中最强大的布局方案，它的原理是将网页划分为一个个网格，使用网格系统来呈现各种各样的布局效果。因此，使用它可以实现所有形式的布局，尤其在做一些不规则的布局时，grid 的强大更显得尤为出众。\n\n> 为什么 grid 布局不如 flex 使用广泛？\n> flex 布局方式为轴线布局，他通过指定基准线的位置来划分网页的区块，可以看做一维布局，而 grid 布局则是将容器划分成\"行\"和\"列\"，产生单元格，然后操作划分出的单元格，可以看作是二维布局。因此 flex 布局语法本身要较 grid 简单清晰，而且大部分布局需求都有规整的结构，使用 flex 就可以轻松实现。最后，grid 的兼容性相对 flex 较差，并且没有很好地兼容方式。\n\n**grid 布局于 flex 布局有一定的相似性，下面的教程会对照写法，加深印象**\n\n## 基本概念\n\n### 项目和容器\n\n采用网格布局的区域，称为\"容器\"（container）。容器内部采用网格定位的直接子元素，称为\"项目\"（item）。\n\n```html\n<div id=\"container\">\n  <div class=\"item\"><p>1</p></div>\n  <div class=\"item\"><p>2</p></div>\n  <div class=\"item\"><p>3</p></div>\n</div>\n```\n\n上面代码中，`.container`为容器，3 个`.item`为项目。\n**注意：项目只能是容器的直接子元素，比如上面代码的`<p>`就不是项目。Grid 布局只对`.item`生效。**\n\n### 行、列、单元格\n\n容器中水平的区域为行（row），垂直的区域为列（column），行和列交叉产生的区域称为单元格（cell）。\n正常情况下，`m`行`n`列会产生`m * n`个单元格。\n\n## css 属性\n\nGrid 布局的属性分成两类。一类定义在容器上面，称为容器属性；另一类定义在项目上面，称为项目属性。\n\n### 容器属性\n\n#### display\n\n使用`display: grid`可以指定一个容器采用网格布局。\n\n```css\ndiv {\n  display: grid;\n}\n```\n\n也可以使用`display: inline-grid`，设置为行内元素，效果类似于`inline-flex`。\n\n> 同 flex，设置为网格布局后，项目的`float`、`display: inline-block`等属性均失效\n\n#### grid-template-columns / grid-template-rows\n\n指定了网格布局后，就开始划分行和列。 `grid-template-columns` 用来定义每一列， `grid-template-rows`用来定义每一行。\n\n```css\n.container {\n  display: grid;\n  grid-template-columns: 100px 100px 100px;\n  grid-template-rows: 100px 100px 100px;\n}\n```\n\n上面代码指定了一个三行三列的网格，宽高均为`100px`\n\n<iframe width=\"100%\" height=\"370\" src=\"//jsrun.net/AbVKp/embedded/all/light\" allowfullscreen=\"allowfullscreen\" frameborder=\"0\"></iframe>\n\n也可以使用百分比\n\n```css\n.container {\n  display: grid;\n  grid-template-columns: 33.33% 33.33% 33.33%;\n  grid-template-rows: 33.33% 33.33% 33.33%;\n}\n```\n\n<iframe width=\"100%\" height=\"370\" src=\"//jsrun.net/jbVKp/embedded/all/light\" allowfullscreen=\"allowfullscreen\" frameborder=\"0\"></iframe>\n\n##### repeat()\n\n相信我们都发现了，当网格系统足够复杂时，需要我们写很多重复的值。这时可以使用`repeat()`函数简化重复的值，简化代码如下\n\n```css\n.container {\n  display: grid;\n  grid-template-columns: repeat(3, 33.33%);\n  grid-template-rows: repeat(3, 33.33%);\n}\n```\n\n`repeat()`接受两个参数，第一个是重复的次数，第二个是需要重复的值。**而且这里的值不必非得是固定的值，我们可以给定一组值，同样可以重复执行。**\n\n```css\n.container {\n  display: grid;\n  grid-template-columns: repeat(2, 100px 80px 60px);\n  grid-template-rows: repeat(9, 100px);\n}\n```\n\n上面代码表示每列按照`100px 80px 60px`的规则，重复两次。因此共得到了 6 列，表现为第一列和第四列的宽度为100px，第二列和第五列为80px，第三列和第六列为60px。又定义了 9 行，每行高度固定为`100px`\n\n<iframe width=\"100%\" height=\"370\" src=\"//jsrun.net/BbVKp/embedded/all/light\" allowfullscreen=\"allowfullscreen\" frameborder=\"0\"></iframe>\n\n##### auto-fill\n\n有时，单元格的大小是固定的，但是容器的大小不确定。如果希望每一行（或每一列）容纳尽可能多的单元格，这时可以使用`auto-fill`关键字表示自动填充。\n\n```css\n.container {\n  display: grid;\n  grid-template-columns: repeat(auto-fill, 100px);\n}\n```\n\n上面代码容器宽`550px`，每列宽度`100px`，然后自动填充，因此从第六行开始折行显示。\n\n<iframe width=\"100%\" height=\"370\" src=\"//jsrun.net/RbVKp/embedded/all/light\" allowfullscreen=\"allowfullscreen\" frameborder=\"0\"></iframe>\n\n##### fr\n\n网格布局提供了`fr`关键字（fraction 的缩写，意为\"片段\"）。如果两列的宽度分别为1fr和2fr，就表示后者是前者的两倍。类似于 flex 中的项目的`flex-grow`属性。\n\n```css\n.container {\n  display: grid;\n  grid-template-columns: 1fr 1fr 1fr;\n}\n```\n\n上面代码创建三个相同宽度的列。\n\n<iframe width=\"100%\" height=\"370\" src=\"//jsrun.net/MbVKp/embedded/all/light\" allowfullscreen=\"allowfullscreen\" frameborder=\"0\"></iframe>\n\n`fr`在与绝对长度的单位结合使用，会产生非常神奇的效果。\n\n```css\n.container {\n  display: grid;\n  grid-template-columns: 150px 1fr 2fr;\n}\n```\n\n上面代码表示，第一列的宽度为150像素，第二列的宽度是第三列的一半。\n\n<iframe width=\"100%\" height=\"370\" src=\"//jsrun.net/SbVKp/embedded/all/light\" allowfullscreen=\"allowfullscreen\" frameborder=\"0\"></iframe>\n\n##### minmax()\n\n`minmax()`函数产生一个长度范围，表示长度就在这个范围之中。它接受两个参数，分别为最小值和最大值。\n\n```css\n.container {\n  display: grid;\n  grid-template-columns: 1fr 1fr minmax(100px, 1fr);\n}\n```\n\n上面代码中，minmax(100px, 1fr)表示列宽不小于100px，不大于1fr。\n\n##### auto\n\n`auto`关键字表示由浏览器自己决定长度。\n\n```css\n.container {\n  display: grid;\n  grid-template-columns: 100px auto 100px;\n}\n```\n\n上面代码中，第二列的宽度，基本上等于该列单元格的最大宽度，除非单元格内容设置了`min-width`，且这个值大于最大宽度。\n\n##### 网格线命名\n\n`grid-template-columns`属性和`grid-template-rows`属性里面，还可以使用方括号，指定每一根网格线的名字，方便以后的引用。\n\n```css\n.container {\n  display: grid;\n  grid-template-columns: [c1] 100px [c2] 100px [c3] auto [c4];\n  grid-template-rows: [r1] 100px [r2] 100px [r3] auto [r4];\n}\n```\n\n上面代码指定网格布局为`3行 x 3列`，因此有`4`根垂直网格线和`4`根水平网格线。方括号里面依次是这八根线的名字。\n\n#### row-gap / column-gap / gap\n\ngrid-row-gap属性设置行与行的间隔（行间距），grid-column-gap属性设置列与列的间隔（列间距）。\n\n```css\n.container {\n  display: grid;\n  row-gap: 20px;\n  column-gap: 20px;\n}\n```\n\n上面代码中，行间距和列间距均为`20px`。\n\n<iframe width=\"100%\" height=\"370\" src=\"//jsrun.net/4bVKp/embedded/all/light\" allowfullscreen=\"allowfullscreen\" frameborder=\"0\"></iframe>\n\n`gap`属性是`column-gap`和`row-gap`的合并简写形式，语法如下。\n\n```css\n.container {\n  gap: <row-gap> <column-gap>;\n}\n```\n\n因此，上面一段 CSS 代码等同于下面的代码。\n\n```css\n.container {\n  gap: 20px 20px;\n}\n```\n\n如果`gap`省略了第二个值，浏览器认为第二个值等于第一个值。\n\n#### grid-template-areas\n\n网格布局允许指定\"区域\"（area），一个区域由单个或多个单元格组成。`grid-template-areas`属性用于定义区域。\n\n```css\n.container {\n  display: grid;\n  grid-template-columns: 100px 100px 100px;\n  grid-template-rows: 100px 100px 100px;\n  grid-template-areas: 'a b c'\n                       'd e f'\n                       'g h i';\n}\n```\n\n上面代码先划分出9个单元格，然后将其定名为`a`到`i`的九个区域，分别对应这九个单元格。\n\n多个单元格合并成一个区域的写法如下。\n\n```css\n.container {\n  grid-template-areas: 'a a a'\n                       'b b b'\n                       'c c c';\n}\n```\n\n上面代码将9个单元格分成`a`、`b`、`c`三个区域。\n\n下面是一个布局实例。\n\n```css\n.container {\n  grid-template-areas: \"header header header\"\n                       \"main main sidebar\"\n                       \"footer footer footer\";\n}\n```\n\n上面代码中，顶部是`header`区域，底部是`footer`区域，中间部分左边为`main`区域，右边为`sidebar`区域。\n\n如果某些区域不需要利用，则使用`.`表示。\n\n```css\n.container {\n  grid-template-areas: 'a . c'\n                       'd . f'\n                       'g . i';\n}\n```\n\n上面代码中，中间一列为点，表示没有用到该单元格，或者该单元格不属于任何区域。\n\n> 注意，区域的命名会影响到网格线。每个区域的起始网格线，会自动命名为`区域名-start`，终止网格线自动命名为`区域名-end`。\n> 比如，区域名为header，则起始位置的水平网格线和垂直网格线叫做`header-start`，终止位置的水平网格线和垂直网格线叫做`header-end`。\n\n#### grid-auto-flow\n\n划分网格以后，容器的子元素会默认\"先行后列\"排序，即先填满第一行，再开始放入第二行，依次执行。\n\n通过`grid-auto-flow`属性可以改变网格的排序，默认为`row`,及“先行后列”，可以设置为`column`，变为“先列后行”。\n\n<iframe width=\"100%\" height=\"370\" src=\"//jsrun.net/gWVKp/embedded/all/light\" allowfullscreen=\"allowfullscreen\" frameborder=\"0\"></iframe>\n\n除了`row`和`column`，还可以设置为`row dense`和`column dense`。这两个值主要用于，某些项目指定位置以后，剩下的项目怎么自动放置。\n\n下面的例子中让1号项目和2号项目各占据两个单元格，然后在默认的`grid-auto-flow: row`情况下，会产生下面这样的布局。\n\n<iframe width=\"100%\" height=\"370\" src=\"//jsrun.net/yWVKp/embedded/all/light\" allowfullscreen=\"allowfullscreen\" frameborder=\"0\"></iframe>\n\n因为 3 号项目默认跟在 2 号项目之后，而第一行又无法容纳 2 号项目，所以第一行只能出现了空白。只要修改`grid-auto-flow: row dense`，就会在“先行后列”的基础上，尽可能紧密填满，不出现空格。\n\n<iframe width=\"100%\" height=\"370\" src=\"//jsrun.net/bWVKp/embedded/all/light\" allowfullscreen=\"allowfullscreen\" frameborder=\"0\"></iframe>\n\n如果将设置改为`column dense`，也是同样的意思，不过会遵循\"先列后行\"，并且尽量填满空格。\n\n#### justify-items / align-items / place-items\n\n`justify-items`属性设置单元格内容的水平位置，`align-items`属性设置单元格内容的垂直位置。\n\n```css\n.container {\n  justify-items: start | end | center | stretch;\n  align-items: start | end | center | stretch;\n}\n```\n\n这两个属性的写法完全相同，都可以取下面这些值：\n\n+ start：对齐单元格的起始边缘。\n+ end：对齐单元格的结束边缘。\n+ center：单元格内部居中。\n+ stretch：拉伸，占满单元格的整个宽度（默认值）。\n\n`place-items`属性是`align-items`属性和`justify-items`属性的合并简写形式。\n\n```css\n.container {\n  place-items: <align-items> <justify-items>;\n}\n```\n\n如果省略第二个值，则浏览器认为与第一个值相等。\n\n#### justify-content / align-content / place-content\n\n`justify-content`属性是整个内容区域在容器里面的水平位置，`align-content`属性是整个内容区域的垂直位置。\n\n```css\n.container {\n  justify-content: start | end | center | stretch | space-around | space-between | space-evenly;\n  align-content: start | end | center | stretch | space-around | space-between | space-evenly;\n}\n```\n\n这两个属性的写法完全相同，都可以取下面这些值:\n\n+ start: 对齐容器的起始边框。\n+ end: 对齐容器的结束边框。\n+ center: 容器内部居中。\n+ stretch: 项目大小没有指定时，拉伸占据整个网格容器。\n+ space-around: 每个项目两侧的间隔相等。所以，项目之间的间隔比项目与容器边框的间隔大一倍。\n+ space-between: 项目与项目的间隔相等，项目与容器边框之间没有间隔。\n+ space-evenly: 项目与项目的间隔相等，项目与容器边框之间也是同样长度的间隔。\n\n`place-content`属性是`align-content`属性和`justify-content`属性的合并简写形式。\n\n```css\n.container {\n  place-content: <align-content> <justify-content>\n}\n```\n\n如果省略第二个值，浏览器就会假定第二个值等于第一个值。\n\n#### grid-auto-columns / grid-auto-rows\n\n有时候，一些项目的指定位置，在现有网格的外部。比如网格只有3列，但是某一个项目指定在第5行。这时，浏览器会自动生成多余的网格，以便放置项目。\n\n`grid-auto-columns`属性和`grid-auto-rows`属性用来设置，浏览器自动创建的多余网格的列宽和行高。它们的写法与`grid-template-columns`和`grid-template-rows`完全相同。如果不指定这两个属性，浏览器完全根据单元格内容的大小，决定新增网格的列宽和行高。\n\n下面的例子里面，划分好的网格是3行 x 3列，但是，8号项目指定在第4行，9号项目指定在第5行,并指定新增的行高统一为50px（原始的行高为100px）。\n\n```css\n.container {\n  display: grid;\n  grid-template-columns: 100px 100px 100px;\n  grid-template-rows: 100px 100px 100px;\n  grid-auto-rows: 50px;\n}\n```\n\n<iframe width=\"100%\" height=\"370\" src=\"//jsrun.net/wWVKp/embedded/all/light\" allowfullscreen=\"allowfullscreen\" frameborder=\"0\"></iframe>\n\n### 项目属性\n\n#### grid-column-start / grid-column-end / grid-row-start / grid-row-end / grid-column / grid-row\n\n项目的位置是可以指定的，具体方法就是指定项目的四个边框，分别定位在哪根网格线。\n\n+ `grid-column-start`表示左边框贴紧的垂直网格线\n+ `grid-column-end`表示右边框贴紧的垂直网格线\n+ `grid-row-start`表示上边框贴紧的水平网格线\n+ `grid-row-end`表示下边框贴紧的水平网格线\n\n```css\n.item-1 {\n  grid-column-start: 2;\n  grid-column-end: 4;\n}\n```\n\n上面代码指定，1号项目的左边框是第二根垂直网格线，右边框是第四根垂直网格线。但并没有指定上下边框，所以会采用默认位置。而除了1号项目以外，其他项目都没有指定位置，将由浏览器自动布局，这时它们的位置由容器的`grid-auto-flow`属性决定，参考上面的教程，不再赘述。\n\n<iframe width=\"100%\" height=\"370\" src=\"//jsrun.net/TWVKp/embedded/all/light\" allowfullscreen=\"allowfullscreen\" frameborder=\"0\"></iframe>\n\n下面的例子是指定四个边框位置的效果。\n\n<iframe width=\"100%\" height=\"370\" src=\"//jsrun.net/UWVKp/embedded/all/light\" allowfullscreen=\"allowfullscreen\" frameborder=\"0\"></iframe>\n\n这四个属性的值，除了指定为第几个网格线，还可以指定为网格线的名字。\n\n```css\n.item-1 {\n  grid-column-start: header-start;\n  grid-column-end: header-end;\n}\n```\n\n上面代码中，左边框和右边框的位置，都指定为网格线的名字。\n这四个属性的值还可以使用span关键字，表示\"跨越\"，即左右边框（上下边框）之间跨越多少个网格。\n\n```css\n.item-1 {\n  grid-column-start: span 2;\n}\n```\n\n上面代码表示，1号项目的左边框距离右边框跨越2个网格。\n使用这四个属性，如果产生了项目的重叠，则使用z-index属性指定项目的重叠顺序。\n\n`grid-column`属性是`grid-column-start`和`grid-column-end`的合并简写形式，`grid-row`属性是`grid-row-start`属性和`grid-row-end`的合并简写形式。\n\n```css\n.item {\n  grid-column: <grid-column-start> / <grid-column-end>;\n  grid-row: <grid-row-start> / <grid-row-end>;\n}\n```\n\n下面是一个例子。\n\n```css\n.item-1 {\n  grid-column: 1 / 3;\n  grid-row: 1 / 2;\n}\n/* 等同于 */\n.item-1 {\n  grid-column-start: 1;\n  grid-column-end: 3;\n  grid-row-start: 1;\n  grid-row-end: 2;\n}\n```\n\n上面代码中，项目item-1占据第一行，从第一根列线到第三根列线。\n\n这两个属性之中，也可以使用span关键字，表示跨越多少个网格。\n\n```css\n.item-1 {\n  background: #b03532;\n  grid-column: 1 / 3;\n  grid-row: 1 / 3;\n}\n/* 等同于 */\n.item-1 {\n  background: #b03532;\n  grid-column: 1 / span 2;\n  grid-row: 1 / span 2;\n}\n```\n\n上面代码中，项目item-1占据的区域，包括第一行 + 第二行、第一列 + 第二列。\n斜杠以及后面的部分可以省略，默认跨越一个网格。\n\n```css\n.item-1 {\n  grid-column: 1;\n  grid-row: 1;\n}\n```\n\n上面代码中，项目item-1占据左上角第一个网格。\n\n#### grid-area\n\n`grid-area`属性指定项目放在哪一个区域。\n\n```css\n.item-1 {\n  grid-area: e;\n}\n```\n\n上面代码中，1号项目位于e区域。\n\n<iframe width=\"100%\" height=\"370\" src=\"//jsrun.net/dWVKp/embedded/all/light\" allowfullscreen=\"allowfullscreen\" frameborder=\"0\"></iframe>\n\ngrid-area属性还可用作grid-row-start、grid-column-start、grid-row-end、grid-column-end的合并简写形式，直接指定项目的位置。\n\n```css\n.item {\n  grid-area: <row-start> / <column-start> / <row-end> / <column-end>;\n}\n```\n\n下面是一个例子。\n\n```css\n/* 表示从第一个行第一列开始，到第三行第三列为止，因此是 2 * 2 个单元格 */\n.item-1 {\n  grid-area: 1 / 1 / 3 / 3;\n}\n```\n\n<iframe width=\"100%\" height=\"370\" src=\"//jsrun.net/JWVKp/embedded/all/light\" allowfullscreen=\"allowfullscreen\" frameborder=\"0\"></iframe>\n\n#### justify-self / align-self / place-self\n\n`justify-self`属性设置单元格内容的水平位置，跟justify-items属性的用法完全一致，但只作用于单个项目。\n`align-self`属性设置单元格内容的垂直位置，跟align-items属性的用法完全一致，也是只作用于单个项目。\n\n这两个属性都可以取下面四个值：\n\n+ start：对齐单元格的起始边缘。\n+ end：对齐单元格的结束边缘。\n+ center：单元格内部居中。\n+ stretch：拉伸，占满单元格的整个宽度（默认值）。\n\n```css\n.item {\n  justify-self: start | end | center | stretch;\n  align-self: start | end | center | stretch;\n}\n```\n\n`place-self`属性是`align-self`属性和`justify-self`属性的合并简写形式。\n\n```css\n.item {\n  place-self: <align-self> <justify-self>;\n}\n```\n\n如果省略第二个值，`place-self`属性会认为这两个值相等。\n","slug":"grid","published":1,"updated":"2021-06-25T11:19:55.441Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckqc904ol000iwotvqeg6lmhr","content":"<h2 id=\"写在前面\"><a href=\"#写在前面\" class=\"headerlink\" title=\"写在前面\"></a>写在前面</h2><p>Grid布局是目前css 中最强大的布局方案，它的原理是将网页划分为一个个网格，使用网格系统来呈现各种各样的布局效果。因此，使用它可以实现所有形式的布局，尤其在做一些不规则的布局时，grid 的强大更显得尤为出众。</p>\n<blockquote>\n<p>为什么 grid 布局不如 flex 使用广泛？<br>flex 布局方式为轴线布局，他通过指定基准线的位置来划分网页的区块，可以看做一维布局，而 grid 布局则是将容器划分成”行”和”列”，产生单元格，然后操作划分出的单元格，可以看作是二维布局。因此 flex 布局语法本身要较 grid 简单清晰，而且大部分布局需求都有规整的结构，使用 flex 就可以轻松实现。最后，grid 的兼容性相对 flex 较差，并且没有很好地兼容方式。</p>\n</blockquote>\n<p><strong>grid 布局于 flex 布局有一定的相似性，下面的教程会对照写法，加深印象</strong></p>\n<h2 id=\"基本概念\"><a href=\"#基本概念\" class=\"headerlink\" title=\"基本概念\"></a>基本概念</h2><h3 id=\"项目和容器\"><a href=\"#项目和容器\" class=\"headerlink\" title=\"项目和容器\"></a>项目和容器</h3><p>采用网格布局的区域，称为”容器”（container）。容器内部采用网格定位的直接子元素，称为”项目”（item）。</p>\n<div class=\"code-panel__wrapper\" autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\"><header class=\"mac-panel\"><span class=\"doc-path\"></span><span class=\"mac-panel__language\">HTML</span></header><figure class=\"iseeu highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">\"container\"</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"item\"</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>1<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"item\"</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>2<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"item\"</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>3<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure></div>\n<p>上面代码中，<code>.container</code>为容器，3 个<code>.item</code>为项目。<br><strong>注意：项目只能是容器的直接子元素，比如上面代码的<code>&lt;p&gt;</code>就不是项目。Grid 布局只对<code>.item</code>生效。</strong></p>\n<h3 id=\"行、列、单元格\"><a href=\"#行、列、单元格\" class=\"headerlink\" title=\"行、列、单元格\"></a>行、列、单元格</h3><p>容器中水平的区域为行（row），垂直的区域为列（column），行和列交叉产生的区域称为单元格（cell）。<br>正常情况下，<code>m</code>行<code>n</code>列会产生<code>m * n</code>个单元格。</p>\n<h2 id=\"css-属性\"><a href=\"#css-属性\" class=\"headerlink\" title=\"css 属性\"></a>css 属性</h2><p>Grid 布局的属性分成两类。一类定义在容器上面，称为容器属性；另一类定义在项目上面，称为项目属性。</p>\n<h3 id=\"容器属性\"><a href=\"#容器属性\" class=\"headerlink\" title=\"容器属性\"></a>容器属性</h3><h4 id=\"display\"><a href=\"#display\" class=\"headerlink\" title=\"display\"></a>display</h4><p>使用<code>display: grid</code>可以指定一个容器采用网格布局。</p>\n<div class=\"code-panel__wrapper\" autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\"><header class=\"mac-panel\"><span class=\"doc-path\"></span><span class=\"mac-panel__language\">CSS</span></header><figure class=\"iseeu highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">div</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">display</span>: grid;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></div>\n<p>也可以使用<code>display: inline-grid</code>，设置为行内元素，效果类似于<code>inline-flex</code>。</p>\n<blockquote>\n<p>同 flex，设置为网格布局后，项目的<code>float</code>、<code>display: inline-block</code>等属性均失效</p>\n</blockquote>\n<h4 id=\"grid-template-columns-grid-template-rows\"><a href=\"#grid-template-columns-grid-template-rows\" class=\"headerlink\" title=\"grid-template-columns / grid-template-rows\"></a>grid-template-columns / grid-template-rows</h4><p>指定了网格布局后，就开始划分行和列。 <code>grid-template-columns</code> 用来定义每一列， <code>grid-template-rows</code>用来定义每一行。</p>\n<div class=\"code-panel__wrapper\" autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\"><header class=\"mac-panel\"><span class=\"doc-path\"></span><span class=\"mac-panel__language\">CSS</span></header><figure class=\"iseeu highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.container</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">display</span>: grid;</span><br><span class=\"line\">  <span class=\"attribute\">grid-template-columns</span>: <span class=\"number\">100px</span> <span class=\"number\">100px</span> <span class=\"number\">100px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">grid-template-rows</span>: <span class=\"number\">100px</span> <span class=\"number\">100px</span> <span class=\"number\">100px</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></div>\n<p>上面代码指定了一个三行三列的网格，宽高均为<code>100px</code></p>\n<iframe width=\"100%\" height=\"370\" src=\"//jsrun.net/AbVKp/embedded/all/light\" allowfullscreen=\"allowfullscreen\" frameborder=\"0\"></iframe>\n\n<p>也可以使用百分比</p>\n<div class=\"code-panel__wrapper\" autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\"><header class=\"mac-panel\"><span class=\"doc-path\"></span><span class=\"mac-panel__language\">CSS</span></header><figure class=\"iseeu highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.container</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">display</span>: grid;</span><br><span class=\"line\">  <span class=\"attribute\">grid-template-columns</span>: <span class=\"number\">33.33%</span> <span class=\"number\">33.33%</span> <span class=\"number\">33.33%</span>;</span><br><span class=\"line\">  <span class=\"attribute\">grid-template-rows</span>: <span class=\"number\">33.33%</span> <span class=\"number\">33.33%</span> <span class=\"number\">33.33%</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></div>\n<iframe width=\"100%\" height=\"370\" src=\"//jsrun.net/jbVKp/embedded/all/light\" allowfullscreen=\"allowfullscreen\" frameborder=\"0\"></iframe>\n\n<h5 id=\"repeat\"><a href=\"#repeat\" class=\"headerlink\" title=\"repeat()\"></a>repeat()</h5><p>相信我们都发现了，当网格系统足够复杂时，需要我们写很多重复的值。这时可以使用<code>repeat()</code>函数简化重复的值，简化代码如下</p>\n<div class=\"code-panel__wrapper\" autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\"><header class=\"mac-panel\"><span class=\"doc-path\"></span><span class=\"mac-panel__language\">CSS</span></header><figure class=\"iseeu highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.container</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">display</span>: grid;</span><br><span class=\"line\">  <span class=\"attribute\">grid-template-columns</span>: <span class=\"built_in\">repeat</span>(<span class=\"number\">3</span>, <span class=\"number\">33.33%</span>);</span><br><span class=\"line\">  <span class=\"attribute\">grid-template-rows</span>: <span class=\"built_in\">repeat</span>(<span class=\"number\">3</span>, <span class=\"number\">33.33%</span>);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></div>\n<p><code>repeat()</code>接受两个参数，第一个是重复的次数，第二个是需要重复的值。<strong>而且这里的值不必非得是固定的值，我们可以给定一组值，同样可以重复执行。</strong></p>\n<div class=\"code-panel__wrapper\" autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\"><header class=\"mac-panel\"><span class=\"doc-path\"></span><span class=\"mac-panel__language\">CSS</span></header><figure class=\"iseeu highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.container</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">display</span>: grid;</span><br><span class=\"line\">  <span class=\"attribute\">grid-template-columns</span>: <span class=\"built_in\">repeat</span>(<span class=\"number\">2</span>, <span class=\"number\">100px</span> <span class=\"number\">80px</span> <span class=\"number\">60px</span>);</span><br><span class=\"line\">  <span class=\"attribute\">grid-template-rows</span>: <span class=\"built_in\">repeat</span>(<span class=\"number\">9</span>, <span class=\"number\">100px</span>);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></div>\n<p>上面代码表示每列按照<code>100px 80px 60px</code>的规则，重复两次。因此共得到了 6 列，表现为第一列和第四列的宽度为100px，第二列和第五列为80px，第三列和第六列为60px。又定义了 9 行，每行高度固定为<code>100px</code></p>\n<iframe width=\"100%\" height=\"370\" src=\"//jsrun.net/BbVKp/embedded/all/light\" allowfullscreen=\"allowfullscreen\" frameborder=\"0\"></iframe>\n\n<h5 id=\"auto-fill\"><a href=\"#auto-fill\" class=\"headerlink\" title=\"auto-fill\"></a>auto-fill</h5><p>有时，单元格的大小是固定的，但是容器的大小不确定。如果希望每一行（或每一列）容纳尽可能多的单元格，这时可以使用<code>auto-fill</code>关键字表示自动填充。</p>\n<div class=\"code-panel__wrapper\" autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\"><header class=\"mac-panel\"><span class=\"doc-path\"></span><span class=\"mac-panel__language\">CSS</span></header><figure class=\"iseeu highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.container</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">display</span>: grid;</span><br><span class=\"line\">  <span class=\"attribute\">grid-template-columns</span>: <span class=\"built_in\">repeat</span>(auto-fill, <span class=\"number\">100px</span>);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></div>\n<p>上面代码容器宽<code>550px</code>，每列宽度<code>100px</code>，然后自动填充，因此从第六行开始折行显示。</p>\n<iframe width=\"100%\" height=\"370\" src=\"//jsrun.net/RbVKp/embedded/all/light\" allowfullscreen=\"allowfullscreen\" frameborder=\"0\"></iframe>\n\n<h5 id=\"fr\"><a href=\"#fr\" class=\"headerlink\" title=\"fr\"></a>fr</h5><p>网格布局提供了<code>fr</code>关键字（fraction 的缩写，意为”片段”）。如果两列的宽度分别为1fr和2fr，就表示后者是前者的两倍。类似于 flex 中的项目的<code>flex-grow</code>属性。</p>\n<div class=\"code-panel__wrapper\" autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\"><header class=\"mac-panel\"><span class=\"doc-path\"></span><span class=\"mac-panel__language\">CSS</span></header><figure class=\"iseeu highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.container</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">display</span>: grid;</span><br><span class=\"line\">  <span class=\"attribute\">grid-template-columns</span>: <span class=\"number\">1</span>fr <span class=\"number\">1</span>fr <span class=\"number\">1</span>fr;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></div>\n<p>上面代码创建三个相同宽度的列。</p>\n<iframe width=\"100%\" height=\"370\" src=\"//jsrun.net/MbVKp/embedded/all/light\" allowfullscreen=\"allowfullscreen\" frameborder=\"0\"></iframe>\n\n<p><code>fr</code>在与绝对长度的单位结合使用，会产生非常神奇的效果。</p>\n<div class=\"code-panel__wrapper\" autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\"><header class=\"mac-panel\"><span class=\"doc-path\"></span><span class=\"mac-panel__language\">CSS</span></header><figure class=\"iseeu highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.container</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">display</span>: grid;</span><br><span class=\"line\">  <span class=\"attribute\">grid-template-columns</span>: <span class=\"number\">150px</span> <span class=\"number\">1</span>fr <span class=\"number\">2</span>fr;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></div>\n<p>上面代码表示，第一列的宽度为150像素，第二列的宽度是第三列的一半。</p>\n<iframe width=\"100%\" height=\"370\" src=\"//jsrun.net/SbVKp/embedded/all/light\" allowfullscreen=\"allowfullscreen\" frameborder=\"0\"></iframe>\n\n<h5 id=\"minmax\"><a href=\"#minmax\" class=\"headerlink\" title=\"minmax()\"></a>minmax()</h5><p><code>minmax()</code>函数产生一个长度范围，表示长度就在这个范围之中。它接受两个参数，分别为最小值和最大值。</p>\n<div class=\"code-panel__wrapper\" autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\"><header class=\"mac-panel\"><span class=\"doc-path\"></span><span class=\"mac-panel__language\">CSS</span></header><figure class=\"iseeu highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.container</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">display</span>: grid;</span><br><span class=\"line\">  <span class=\"attribute\">grid-template-columns</span>: <span class=\"number\">1</span>fr <span class=\"number\">1</span>fr <span class=\"built_in\">minmax</span>(<span class=\"number\">100px</span>, <span class=\"number\">1</span>fr);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></div>\n<p>上面代码中，minmax(100px, 1fr)表示列宽不小于100px，不大于1fr。</p>\n<h5 id=\"auto\"><a href=\"#auto\" class=\"headerlink\" title=\"auto\"></a>auto</h5><p><code>auto</code>关键字表示由浏览器自己决定长度。</p>\n<div class=\"code-panel__wrapper\" autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\"><header class=\"mac-panel\"><span class=\"doc-path\"></span><span class=\"mac-panel__language\">CSS</span></header><figure class=\"iseeu highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.container</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">display</span>: grid;</span><br><span class=\"line\">  <span class=\"attribute\">grid-template-columns</span>: <span class=\"number\">100px</span> auto <span class=\"number\">100px</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></div>\n<p>上面代码中，第二列的宽度，基本上等于该列单元格的最大宽度，除非单元格内容设置了<code>min-width</code>，且这个值大于最大宽度。</p>\n<h5 id=\"网格线命名\"><a href=\"#网格线命名\" class=\"headerlink\" title=\"网格线命名\"></a>网格线命名</h5><p><code>grid-template-columns</code>属性和<code>grid-template-rows</code>属性里面，还可以使用方括号，指定每一根网格线的名字，方便以后的引用。</p>\n<div class=\"code-panel__wrapper\" autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\"><header class=\"mac-panel\"><span class=\"doc-path\"></span><span class=\"mac-panel__language\">CSS</span></header><figure class=\"iseeu highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.container</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">display</span>: grid;</span><br><span class=\"line\">  <span class=\"attribute\">grid-template-columns</span>: [c1] <span class=\"number\">100px</span> [c2] <span class=\"number\">100px</span> [c3] auto [c4];</span><br><span class=\"line\">  <span class=\"attribute\">grid-template-rows</span>: [r1] <span class=\"number\">100px</span> [r2] <span class=\"number\">100px</span> [r3] auto [r4];</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></div>\n<p>上面代码指定网格布局为<code>3行 x 3列</code>，因此有<code>4</code>根垂直网格线和<code>4</code>根水平网格线。方括号里面依次是这八根线的名字。</p>\n<h4 id=\"row-gap-column-gap-gap\"><a href=\"#row-gap-column-gap-gap\" class=\"headerlink\" title=\"row-gap / column-gap / gap\"></a>row-gap / column-gap / gap</h4><p>grid-row-gap属性设置行与行的间隔（行间距），grid-column-gap属性设置列与列的间隔（列间距）。</p>\n<div class=\"code-panel__wrapper\" autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\"><header class=\"mac-panel\"><span class=\"doc-path\"></span><span class=\"mac-panel__language\">CSS</span></header><figure class=\"iseeu highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.container</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">display</span>: grid;</span><br><span class=\"line\">  <span class=\"attribute\">row-gap</span>: <span class=\"number\">20px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">column-gap</span>: <span class=\"number\">20px</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></div>\n<p>上面代码中，行间距和列间距均为<code>20px</code>。</p>\n<iframe width=\"100%\" height=\"370\" src=\"//jsrun.net/4bVKp/embedded/all/light\" allowfullscreen=\"allowfullscreen\" frameborder=\"0\"></iframe>\n\n<p><code>gap</code>属性是<code>column-gap</code>和<code>row-gap</code>的合并简写形式，语法如下。</p>\n<div class=\"code-panel__wrapper\" autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\"><header class=\"mac-panel\"><span class=\"doc-path\"></span><span class=\"mac-panel__language\">CSS</span></header><figure class=\"iseeu highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.container</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">gap</span>: &lt;row-gap&gt; &lt;column-gap&gt;;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></div>\n<p>因此，上面一段 CSS 代码等同于下面的代码。</p>\n<div class=\"code-panel__wrapper\" autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\"><header class=\"mac-panel\"><span class=\"doc-path\"></span><span class=\"mac-panel__language\">CSS</span></header><figure class=\"iseeu highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.container</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">gap</span>: <span class=\"number\">20px</span> <span class=\"number\">20px</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></div>\n<p>如果<code>gap</code>省略了第二个值，浏览器认为第二个值等于第一个值。</p>\n<h4 id=\"grid-template-areas\"><a href=\"#grid-template-areas\" class=\"headerlink\" title=\"grid-template-areas\"></a>grid-template-areas</h4><p>网格布局允许指定”区域”（area），一个区域由单个或多个单元格组成。<code>grid-template-areas</code>属性用于定义区域。</p>\n<div class=\"code-panel__wrapper\" autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\"><header class=\"mac-panel\"><span class=\"doc-path\"></span><span class=\"mac-panel__language\">CSS</span></header><figure class=\"iseeu highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.container</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">display</span>: grid;</span><br><span class=\"line\">  <span class=\"attribute\">grid-template-columns</span>: <span class=\"number\">100px</span> <span class=\"number\">100px</span> <span class=\"number\">100px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">grid-template-rows</span>: <span class=\"number\">100px</span> <span class=\"number\">100px</span> <span class=\"number\">100px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">grid-template-areas</span>: <span class=\"string\">'a b c'</span></span><br><span class=\"line\">                       <span class=\"string\">'d e f'</span></span><br><span class=\"line\">                       <span class=\"string\">'g h i'</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></div>\n<p>上面代码先划分出9个单元格，然后将其定名为<code>a</code>到<code>i</code>的九个区域，分别对应这九个单元格。</p>\n<p>多个单元格合并成一个区域的写法如下。</p>\n<div class=\"code-panel__wrapper\" autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\"><header class=\"mac-panel\"><span class=\"doc-path\"></span><span class=\"mac-panel__language\">CSS</span></header><figure class=\"iseeu highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.container</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">grid-template-areas</span>: <span class=\"string\">'a a a'</span></span><br><span class=\"line\">                       <span class=\"string\">'b b b'</span></span><br><span class=\"line\">                       <span class=\"string\">'c c c'</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></div>\n<p>上面代码将9个单元格分成<code>a</code>、<code>b</code>、<code>c</code>三个区域。</p>\n<p>下面是一个布局实例。</p>\n<div class=\"code-panel__wrapper\" autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\"><header class=\"mac-panel\"><span class=\"doc-path\"></span><span class=\"mac-panel__language\">CSS</span></header><figure class=\"iseeu highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.container</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">grid-template-areas</span>: <span class=\"string\">\"header header header\"</span></span><br><span class=\"line\">                       <span class=\"string\">\"main main sidebar\"</span></span><br><span class=\"line\">                       <span class=\"string\">\"footer footer footer\"</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></div>\n<p>上面代码中，顶部是<code>header</code>区域，底部是<code>footer</code>区域，中间部分左边为<code>main</code>区域，右边为<code>sidebar</code>区域。</p>\n<p>如果某些区域不需要利用，则使用<code>.</code>表示。</p>\n<div class=\"code-panel__wrapper\" autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\"><header class=\"mac-panel\"><span class=\"doc-path\"></span><span class=\"mac-panel__language\">CSS</span></header><figure class=\"iseeu highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.container</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">grid-template-areas</span>: <span class=\"string\">'a . c'</span></span><br><span class=\"line\">                       <span class=\"string\">'d . f'</span></span><br><span class=\"line\">                       <span class=\"string\">'g . i'</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></div>\n<p>上面代码中，中间一列为点，表示没有用到该单元格，或者该单元格不属于任何区域。</p>\n<blockquote>\n<p>注意，区域的命名会影响到网格线。每个区域的起始网格线，会自动命名为<code>区域名-start</code>，终止网格线自动命名为<code>区域名-end</code>。<br>比如，区域名为header，则起始位置的水平网格线和垂直网格线叫做<code>header-start</code>，终止位置的水平网格线和垂直网格线叫做<code>header-end</code>。</p>\n</blockquote>\n<h4 id=\"grid-auto-flow\"><a href=\"#grid-auto-flow\" class=\"headerlink\" title=\"grid-auto-flow\"></a>grid-auto-flow</h4><p>划分网格以后，容器的子元素会默认”先行后列”排序，即先填满第一行，再开始放入第二行，依次执行。</p>\n<p>通过<code>grid-auto-flow</code>属性可以改变网格的排序，默认为<code>row</code>,及“先行后列”，可以设置为<code>column</code>，变为“先列后行”。</p>\n<iframe width=\"100%\" height=\"370\" src=\"//jsrun.net/gWVKp/embedded/all/light\" allowfullscreen=\"allowfullscreen\" frameborder=\"0\"></iframe>\n\n<p>除了<code>row</code>和<code>column</code>，还可以设置为<code>row dense</code>和<code>column dense</code>。这两个值主要用于，某些项目指定位置以后，剩下的项目怎么自动放置。</p>\n<p>下面的例子中让1号项目和2号项目各占据两个单元格，然后在默认的<code>grid-auto-flow: row</code>情况下，会产生下面这样的布局。</p>\n<iframe width=\"100%\" height=\"370\" src=\"//jsrun.net/yWVKp/embedded/all/light\" allowfullscreen=\"allowfullscreen\" frameborder=\"0\"></iframe>\n\n<p>因为 3 号项目默认跟在 2 号项目之后，而第一行又无法容纳 2 号项目，所以第一行只能出现了空白。只要修改<code>grid-auto-flow: row dense</code>，就会在“先行后列”的基础上，尽可能紧密填满，不出现空格。</p>\n<iframe width=\"100%\" height=\"370\" src=\"//jsrun.net/bWVKp/embedded/all/light\" allowfullscreen=\"allowfullscreen\" frameborder=\"0\"></iframe>\n\n<p>如果将设置改为<code>column dense</code>，也是同样的意思，不过会遵循”先列后行”，并且尽量填满空格。</p>\n<h4 id=\"justify-items-align-items-place-items\"><a href=\"#justify-items-align-items-place-items\" class=\"headerlink\" title=\"justify-items / align-items / place-items\"></a>justify-items / align-items / place-items</h4><p><code>justify-items</code>属性设置单元格内容的水平位置，<code>align-items</code>属性设置单元格内容的垂直位置。</p>\n<div class=\"code-panel__wrapper\" autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\"><header class=\"mac-panel\"><span class=\"doc-path\"></span><span class=\"mac-panel__language\">CSS</span></header><figure class=\"iseeu highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.container</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">justify-items</span>: start | end | center | stretch;</span><br><span class=\"line\">  <span class=\"attribute\">align-items</span>: start | end | center | stretch;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></div>\n<p>这两个属性的写法完全相同，都可以取下面这些值：</p>\n<ul>\n<li>start：对齐单元格的起始边缘。</li>\n<li>end：对齐单元格的结束边缘。</li>\n<li>center：单元格内部居中。</li>\n<li>stretch：拉伸，占满单元格的整个宽度（默认值）。</li>\n</ul>\n<p><code>place-items</code>属性是<code>align-items</code>属性和<code>justify-items</code>属性的合并简写形式。</p>\n<div class=\"code-panel__wrapper\" autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\"><header class=\"mac-panel\"><span class=\"doc-path\"></span><span class=\"mac-panel__language\">CSS</span></header><figure class=\"iseeu highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.container</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">place-items</span>: &lt;align-items&gt; &lt;justify-items&gt;;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></div>\n<p>如果省略第二个值，则浏览器认为与第一个值相等。</p>\n<h4 id=\"justify-content-align-content-place-content\"><a href=\"#justify-content-align-content-place-content\" class=\"headerlink\" title=\"justify-content / align-content / place-content\"></a>justify-content / align-content / place-content</h4><p><code>justify-content</code>属性是整个内容区域在容器里面的水平位置，<code>align-content</code>属性是整个内容区域的垂直位置。</p>\n<div class=\"code-panel__wrapper\" autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\"><header class=\"mac-panel\"><span class=\"doc-path\"></span><span class=\"mac-panel__language\">CSS</span></header><figure class=\"iseeu highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.container</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">justify-content</span>: start | end | center | stretch | space-around | space-between | space-evenly;</span><br><span class=\"line\">  <span class=\"attribute\">align-content</span>: start | end | center | stretch | space-around | space-between | space-evenly;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></div>\n<p>这两个属性的写法完全相同，都可以取下面这些值:</p>\n<ul>\n<li>start: 对齐容器的起始边框。</li>\n<li>end: 对齐容器的结束边框。</li>\n<li>center: 容器内部居中。</li>\n<li>stretch: 项目大小没有指定时，拉伸占据整个网格容器。</li>\n<li>space-around: 每个项目两侧的间隔相等。所以，项目之间的间隔比项目与容器边框的间隔大一倍。</li>\n<li>space-between: 项目与项目的间隔相等，项目与容器边框之间没有间隔。</li>\n<li>space-evenly: 项目与项目的间隔相等，项目与容器边框之间也是同样长度的间隔。</li>\n</ul>\n<p><code>place-content</code>属性是<code>align-content</code>属性和<code>justify-content</code>属性的合并简写形式。</p>\n<div class=\"code-panel__wrapper\" autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\"><header class=\"mac-panel\"><span class=\"doc-path\"></span><span class=\"mac-panel__language\">CSS</span></header><figure class=\"iseeu highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.container</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">place-content</span>: &lt;align-content&gt; &lt;justify-content&gt;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></div>\n<p>如果省略第二个值，浏览器就会假定第二个值等于第一个值。</p>\n<h4 id=\"grid-auto-columns-grid-auto-rows\"><a href=\"#grid-auto-columns-grid-auto-rows\" class=\"headerlink\" title=\"grid-auto-columns / grid-auto-rows\"></a>grid-auto-columns / grid-auto-rows</h4><p>有时候，一些项目的指定位置，在现有网格的外部。比如网格只有3列，但是某一个项目指定在第5行。这时，浏览器会自动生成多余的网格，以便放置项目。</p>\n<p><code>grid-auto-columns</code>属性和<code>grid-auto-rows</code>属性用来设置，浏览器自动创建的多余网格的列宽和行高。它们的写法与<code>grid-template-columns</code>和<code>grid-template-rows</code>完全相同。如果不指定这两个属性，浏览器完全根据单元格内容的大小，决定新增网格的列宽和行高。</p>\n<p>下面的例子里面，划分好的网格是3行 x 3列，但是，8号项目指定在第4行，9号项目指定在第5行,并指定新增的行高统一为50px（原始的行高为100px）。</p>\n<div class=\"code-panel__wrapper\" autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\"><header class=\"mac-panel\"><span class=\"doc-path\"></span><span class=\"mac-panel__language\">CSS</span></header><figure class=\"iseeu highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.container</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">display</span>: grid;</span><br><span class=\"line\">  <span class=\"attribute\">grid-template-columns</span>: <span class=\"number\">100px</span> <span class=\"number\">100px</span> <span class=\"number\">100px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">grid-template-rows</span>: <span class=\"number\">100px</span> <span class=\"number\">100px</span> <span class=\"number\">100px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">grid-auto-rows</span>: <span class=\"number\">50px</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></div>\n<iframe width=\"100%\" height=\"370\" src=\"//jsrun.net/wWVKp/embedded/all/light\" allowfullscreen=\"allowfullscreen\" frameborder=\"0\"></iframe>\n\n<h3 id=\"项目属性\"><a href=\"#项目属性\" class=\"headerlink\" title=\"项目属性\"></a>项目属性</h3><h4 id=\"grid-column-start-grid-column-end-grid-row-start-grid-row-end-grid-column-grid-row\"><a href=\"#grid-column-start-grid-column-end-grid-row-start-grid-row-end-grid-column-grid-row\" class=\"headerlink\" title=\"grid-column-start / grid-column-end / grid-row-start / grid-row-end / grid-column / grid-row\"></a>grid-column-start / grid-column-end / grid-row-start / grid-row-end / grid-column / grid-row</h4><p>项目的位置是可以指定的，具体方法就是指定项目的四个边框，分别定位在哪根网格线。</p>\n<ul>\n<li><code>grid-column-start</code>表示左边框贴紧的垂直网格线</li>\n<li><code>grid-column-end</code>表示右边框贴紧的垂直网格线</li>\n<li><code>grid-row-start</code>表示上边框贴紧的水平网格线</li>\n<li><code>grid-row-end</code>表示下边框贴紧的水平网格线</li>\n</ul>\n<div class=\"code-panel__wrapper\" autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\"><header class=\"mac-panel\"><span class=\"doc-path\"></span><span class=\"mac-panel__language\">CSS</span></header><figure class=\"iseeu highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.item-1</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">grid-column-start</span>: <span class=\"number\">2</span>;</span><br><span class=\"line\">  <span class=\"attribute\">grid-column-end</span>: <span class=\"number\">4</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></div>\n<p>上面代码指定，1号项目的左边框是第二根垂直网格线，右边框是第四根垂直网格线。但并没有指定上下边框，所以会采用默认位置。而除了1号项目以外，其他项目都没有指定位置，将由浏览器自动布局，这时它们的位置由容器的<code>grid-auto-flow</code>属性决定，参考上面的教程，不再赘述。</p>\n<iframe width=\"100%\" height=\"370\" src=\"//jsrun.net/TWVKp/embedded/all/light\" allowfullscreen=\"allowfullscreen\" frameborder=\"0\"></iframe>\n\n<p>下面的例子是指定四个边框位置的效果。</p>\n<iframe width=\"100%\" height=\"370\" src=\"//jsrun.net/UWVKp/embedded/all/light\" allowfullscreen=\"allowfullscreen\" frameborder=\"0\"></iframe>\n\n<p>这四个属性的值，除了指定为第几个网格线，还可以指定为网格线的名字。</p>\n<div class=\"code-panel__wrapper\" autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\"><header class=\"mac-panel\"><span class=\"doc-path\"></span><span class=\"mac-panel__language\">CSS</span></header><figure class=\"iseeu highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.item-1</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">grid-column-start</span>: header-start;</span><br><span class=\"line\">  <span class=\"attribute\">grid-column-end</span>: header-end;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></div>\n<p>上面代码中，左边框和右边框的位置，都指定为网格线的名字。<br>这四个属性的值还可以使用span关键字，表示”跨越”，即左右边框（上下边框）之间跨越多少个网格。</p>\n<div class=\"code-panel__wrapper\" autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\"><header class=\"mac-panel\"><span class=\"doc-path\"></span><span class=\"mac-panel__language\">CSS</span></header><figure class=\"iseeu highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.item-1</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">grid-column-start</span>: span <span class=\"number\">2</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></div>\n<p>上面代码表示，1号项目的左边框距离右边框跨越2个网格。<br>使用这四个属性，如果产生了项目的重叠，则使用z-index属性指定项目的重叠顺序。</p>\n<p><code>grid-column</code>属性是<code>grid-column-start</code>和<code>grid-column-end</code>的合并简写形式，<code>grid-row</code>属性是<code>grid-row-start</code>属性和<code>grid-row-end</code>的合并简写形式。</p>\n<div class=\"code-panel__wrapper\" autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\"><header class=\"mac-panel\"><span class=\"doc-path\"></span><span class=\"mac-panel__language\">CSS</span></header><figure class=\"iseeu highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.item</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">grid-column</span>: &lt;grid-column-start&gt; / &lt;grid-column-end&gt;;</span><br><span class=\"line\">  <span class=\"attribute\">grid-row</span>: &lt;grid-row-start&gt; / &lt;grid-row-end&gt;;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></div>\n<p>下面是一个例子。</p>\n<div class=\"code-panel__wrapper\" autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\"><header class=\"mac-panel\"><span class=\"doc-path\"></span><span class=\"mac-panel__language\">CSS</span></header><figure class=\"iseeu highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.item-1</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">grid-column</span>: <span class=\"number\">1</span> / <span class=\"number\">3</span>;</span><br><span class=\"line\">  <span class=\"attribute\">grid-row</span>: <span class=\"number\">1</span> / <span class=\"number\">2</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">/* 等同于 */</span></span><br><span class=\"line\"><span class=\"selector-class\">.item-1</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">grid-column-start</span>: <span class=\"number\">1</span>;</span><br><span class=\"line\">  <span class=\"attribute\">grid-column-end</span>: <span class=\"number\">3</span>;</span><br><span class=\"line\">  <span class=\"attribute\">grid-row-start</span>: <span class=\"number\">1</span>;</span><br><span class=\"line\">  <span class=\"attribute\">grid-row-end</span>: <span class=\"number\">2</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></div>\n<p>上面代码中，项目item-1占据第一行，从第一根列线到第三根列线。</p>\n<p>这两个属性之中，也可以使用span关键字，表示跨越多少个网格。</p>\n<div class=\"code-panel__wrapper\" autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\"><header class=\"mac-panel\"><span class=\"doc-path\"></span><span class=\"mac-panel__language\">CSS</span></header><figure class=\"iseeu highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.item-1</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">background</span>: <span class=\"number\">#b03532</span>;</span><br><span class=\"line\">  <span class=\"attribute\">grid-column</span>: <span class=\"number\">1</span> / <span class=\"number\">3</span>;</span><br><span class=\"line\">  <span class=\"attribute\">grid-row</span>: <span class=\"number\">1</span> / <span class=\"number\">3</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">/* 等同于 */</span></span><br><span class=\"line\"><span class=\"selector-class\">.item-1</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">background</span>: <span class=\"number\">#b03532</span>;</span><br><span class=\"line\">  <span class=\"attribute\">grid-column</span>: <span class=\"number\">1</span> / span <span class=\"number\">2</span>;</span><br><span class=\"line\">  <span class=\"attribute\">grid-row</span>: <span class=\"number\">1</span> / span <span class=\"number\">2</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></div>\n<p>上面代码中，项目item-1占据的区域，包括第一行 + 第二行、第一列 + 第二列。<br>斜杠以及后面的部分可以省略，默认跨越一个网格。</p>\n<div class=\"code-panel__wrapper\" autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\"><header class=\"mac-panel\"><span class=\"doc-path\"></span><span class=\"mac-panel__language\">CSS</span></header><figure class=\"iseeu highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.item-1</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">grid-column</span>: <span class=\"number\">1</span>;</span><br><span class=\"line\">  <span class=\"attribute\">grid-row</span>: <span class=\"number\">1</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></div>\n<p>上面代码中，项目item-1占据左上角第一个网格。</p>\n<h4 id=\"grid-area\"><a href=\"#grid-area\" class=\"headerlink\" title=\"grid-area\"></a>grid-area</h4><p><code>grid-area</code>属性指定项目放在哪一个区域。</p>\n<div class=\"code-panel__wrapper\" autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\"><header class=\"mac-panel\"><span class=\"doc-path\"></span><span class=\"mac-panel__language\">CSS</span></header><figure class=\"iseeu highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.item-1</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">grid-area</span>: e;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></div>\n<p>上面代码中，1号项目位于e区域。</p>\n<iframe width=\"100%\" height=\"370\" src=\"//jsrun.net/dWVKp/embedded/all/light\" allowfullscreen=\"allowfullscreen\" frameborder=\"0\"></iframe>\n\n<p>grid-area属性还可用作grid-row-start、grid-column-start、grid-row-end、grid-column-end的合并简写形式，直接指定项目的位置。</p>\n<div class=\"code-panel__wrapper\" autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\"><header class=\"mac-panel\"><span class=\"doc-path\"></span><span class=\"mac-panel__language\">CSS</span></header><figure class=\"iseeu highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.item</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">grid-area</span>: &lt;row-start&gt; / &lt;column-start&gt; / &lt;row-end&gt; / &lt;column-end&gt;;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></div>\n<p>下面是一个例子。</p>\n<div class=\"code-panel__wrapper\" autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\"><header class=\"mac-panel\"><span class=\"doc-path\"></span><span class=\"mac-panel__language\">CSS</span></header><figure class=\"iseeu highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/* 表示从第一个行第一列开始，到第三行第三列为止，因此是 2 * 2 个单元格 */</span></span><br><span class=\"line\"><span class=\"selector-class\">.item-1</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">grid-area</span>: <span class=\"number\">1</span> / <span class=\"number\">1</span> / <span class=\"number\">3</span> / <span class=\"number\">3</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></div>\n<iframe width=\"100%\" height=\"370\" src=\"//jsrun.net/JWVKp/embedded/all/light\" allowfullscreen=\"allowfullscreen\" frameborder=\"0\"></iframe>\n\n<h4 id=\"justify-self-align-self-place-self\"><a href=\"#justify-self-align-self-place-self\" class=\"headerlink\" title=\"justify-self / align-self / place-self\"></a>justify-self / align-self / place-self</h4><p><code>justify-self</code>属性设置单元格内容的水平位置，跟justify-items属性的用法完全一致，但只作用于单个项目。<br><code>align-self</code>属性设置单元格内容的垂直位置，跟align-items属性的用法完全一致，也是只作用于单个项目。</p>\n<p>这两个属性都可以取下面四个值：</p>\n<ul>\n<li>start：对齐单元格的起始边缘。</li>\n<li>end：对齐单元格的结束边缘。</li>\n<li>center：单元格内部居中。</li>\n<li>stretch：拉伸，占满单元格的整个宽度（默认值）。</li>\n</ul>\n<div class=\"code-panel__wrapper\" autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\"><header class=\"mac-panel\"><span class=\"doc-path\"></span><span class=\"mac-panel__language\">CSS</span></header><figure class=\"iseeu highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.item</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">justify-self</span>: start | end | center | stretch;</span><br><span class=\"line\">  <span class=\"attribute\">align-self</span>: start | end | center | stretch;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></div>\n<p><code>place-self</code>属性是<code>align-self</code>属性和<code>justify-self</code>属性的合并简写形式。</p>\n<div class=\"code-panel__wrapper\" autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\"><header class=\"mac-panel\"><span class=\"doc-path\"></span><span class=\"mac-panel__language\">CSS</span></header><figure class=\"iseeu highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.item</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">place-self</span>: &lt;align-self&gt; &lt;justify-self&gt;;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></div>\n<p>如果省略第二个值，<code>place-self</code>属性会认为这两个值相等。</p>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"写在前面\"><a href=\"#写在前面\" class=\"headerlink\" title=\"写在前面\"></a>写在前面</h2><p>Grid布局是目前css 中最强大的布局方案，它的原理是将网页划分为一个个网格，使用网格系统来呈现各种各样的布局效果。因此，使用它可以实现所有形式的布局，尤其在做一些不规则的布局时，grid 的强大更显得尤为出众。</p>\n<blockquote>\n<p>为什么 grid 布局不如 flex 使用广泛？<br>flex 布局方式为轴线布局，他通过指定基准线的位置来划分网页的区块，可以看做一维布局，而 grid 布局则是将容器划分成”行”和”列”，产生单元格，然后操作划分出的单元格，可以看作是二维布局。因此 flex 布局语法本身要较 grid 简单清晰，而且大部分布局需求都有规整的结构，使用 flex 就可以轻松实现。最后，grid 的兼容性相对 flex 较差，并且没有很好地兼容方式。</p>\n</blockquote>\n<p><strong>grid 布局于 flex 布局有一定的相似性，下面的教程会对照写法，加深印象</strong></p>\n<h2 id=\"基本概念\"><a href=\"#基本概念\" class=\"headerlink\" title=\"基本概念\"></a>基本概念</h2><h3 id=\"项目和容器\"><a href=\"#项目和容器\" class=\"headerlink\" title=\"项目和容器\"></a>项目和容器</h3><p>采用网格布局的区域，称为”容器”（container）。容器内部采用网格定位的直接子元素，称为”项目”（item）。</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">\"container\"</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"item\"</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>1<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"item\"</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>2<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"item\"</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>3<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>上面代码中，<code>.container</code>为容器，3 个<code>.item</code>为项目。<br><strong>注意：项目只能是容器的直接子元素，比如上面代码的<code>&lt;p&gt;</code>就不是项目。Grid 布局只对<code>.item</code>生效。</strong></p>\n<h3 id=\"行、列、单元格\"><a href=\"#行、列、单元格\" class=\"headerlink\" title=\"行、列、单元格\"></a>行、列、单元格</h3><p>容器中水平的区域为行（row），垂直的区域为列（column），行和列交叉产生的区域称为单元格（cell）。<br>正常情况下，<code>m</code>行<code>n</code>列会产生<code>m * n</code>个单元格。</p>\n<h2 id=\"css-属性\"><a href=\"#css-属性\" class=\"headerlink\" title=\"css 属性\"></a>css 属性</h2><p>Grid 布局的属性分成两类。一类定义在容器上面，称为容器属性；另一类定义在项目上面，称为项目属性。</p>\n<h3 id=\"容器属性\"><a href=\"#容器属性\" class=\"headerlink\" title=\"容器属性\"></a>容器属性</h3><h4 id=\"display\"><a href=\"#display\" class=\"headerlink\" title=\"display\"></a>display</h4><p>使用<code>display: grid</code>可以指定一个容器采用网格布局。</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">div</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">display</span>: grid;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>也可以使用<code>display: inline-grid</code>，设置为行内元素，效果类似于<code>inline-flex</code>。</p>\n<blockquote>\n<p>同 flex，设置为网格布局后，项目的<code>float</code>、<code>display: inline-block</code>等属性均失效</p>\n</blockquote>\n<h4 id=\"grid-template-columns-grid-template-rows\"><a href=\"#grid-template-columns-grid-template-rows\" class=\"headerlink\" title=\"grid-template-columns / grid-template-rows\"></a>grid-template-columns / grid-template-rows</h4><p>指定了网格布局后，就开始划分行和列。 <code>grid-template-columns</code> 用来定义每一列， <code>grid-template-rows</code>用来定义每一行。</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.container</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">display</span>: grid;</span><br><span class=\"line\">  <span class=\"attribute\">grid-template-columns</span>: <span class=\"number\">100px</span> <span class=\"number\">100px</span> <span class=\"number\">100px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">grid-template-rows</span>: <span class=\"number\">100px</span> <span class=\"number\">100px</span> <span class=\"number\">100px</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>上面代码指定了一个三行三列的网格，宽高均为<code>100px</code></p>\n<iframe width=\"100%\" height=\"370\" src=\"//jsrun.net/AbVKp/embedded/all/light\" allowfullscreen=\"allowfullscreen\" frameborder=\"0\"></iframe>\n\n<p>也可以使用百分比</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.container</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">display</span>: grid;</span><br><span class=\"line\">  <span class=\"attribute\">grid-template-columns</span>: <span class=\"number\">33.33%</span> <span class=\"number\">33.33%</span> <span class=\"number\">33.33%</span>;</span><br><span class=\"line\">  <span class=\"attribute\">grid-template-rows</span>: <span class=\"number\">33.33%</span> <span class=\"number\">33.33%</span> <span class=\"number\">33.33%</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<iframe width=\"100%\" height=\"370\" src=\"//jsrun.net/jbVKp/embedded/all/light\" allowfullscreen=\"allowfullscreen\" frameborder=\"0\"></iframe>\n\n<h5 id=\"repeat\"><a href=\"#repeat\" class=\"headerlink\" title=\"repeat()\"></a>repeat()</h5><p>相信我们都发现了，当网格系统足够复杂时，需要我们写很多重复的值。这时可以使用<code>repeat()</code>函数简化重复的值，简化代码如下</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.container</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">display</span>: grid;</span><br><span class=\"line\">  <span class=\"attribute\">grid-template-columns</span>: <span class=\"built_in\">repeat</span>(<span class=\"number\">3</span>, <span class=\"number\">33.33%</span>);</span><br><span class=\"line\">  <span class=\"attribute\">grid-template-rows</span>: <span class=\"built_in\">repeat</span>(<span class=\"number\">3</span>, <span class=\"number\">33.33%</span>);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p><code>repeat()</code>接受两个参数，第一个是重复的次数，第二个是需要重复的值。<strong>而且这里的值不必非得是固定的值，我们可以给定一组值，同样可以重复执行。</strong></p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.container</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">display</span>: grid;</span><br><span class=\"line\">  <span class=\"attribute\">grid-template-columns</span>: <span class=\"built_in\">repeat</span>(<span class=\"number\">2</span>, <span class=\"number\">100px</span> <span class=\"number\">80px</span> <span class=\"number\">60px</span>);</span><br><span class=\"line\">  <span class=\"attribute\">grid-template-rows</span>: <span class=\"built_in\">repeat</span>(<span class=\"number\">9</span>, <span class=\"number\">100px</span>);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>上面代码表示每列按照<code>100px 80px 60px</code>的规则，重复两次。因此共得到了 6 列，表现为第一列和第四列的宽度为100px，第二列和第五列为80px，第三列和第六列为60px。又定义了 9 行，每行高度固定为<code>100px</code></p>\n<iframe width=\"100%\" height=\"370\" src=\"//jsrun.net/BbVKp/embedded/all/light\" allowfullscreen=\"allowfullscreen\" frameborder=\"0\"></iframe>\n\n<h5 id=\"auto-fill\"><a href=\"#auto-fill\" class=\"headerlink\" title=\"auto-fill\"></a>auto-fill</h5><p>有时，单元格的大小是固定的，但是容器的大小不确定。如果希望每一行（或每一列）容纳尽可能多的单元格，这时可以使用<code>auto-fill</code>关键字表示自动填充。</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.container</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">display</span>: grid;</span><br><span class=\"line\">  <span class=\"attribute\">grid-template-columns</span>: <span class=\"built_in\">repeat</span>(auto-fill, <span class=\"number\">100px</span>);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>上面代码容器宽<code>550px</code>，每列宽度<code>100px</code>，然后自动填充，因此从第六行开始折行显示。</p>\n<iframe width=\"100%\" height=\"370\" src=\"//jsrun.net/RbVKp/embedded/all/light\" allowfullscreen=\"allowfullscreen\" frameborder=\"0\"></iframe>\n\n<h5 id=\"fr\"><a href=\"#fr\" class=\"headerlink\" title=\"fr\"></a>fr</h5><p>网格布局提供了<code>fr</code>关键字（fraction 的缩写，意为”片段”）。如果两列的宽度分别为1fr和2fr，就表示后者是前者的两倍。类似于 flex 中的项目的<code>flex-grow</code>属性。</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.container</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">display</span>: grid;</span><br><span class=\"line\">  <span class=\"attribute\">grid-template-columns</span>: <span class=\"number\">1</span>fr <span class=\"number\">1</span>fr <span class=\"number\">1</span>fr;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>上面代码创建三个相同宽度的列。</p>\n<iframe width=\"100%\" height=\"370\" src=\"//jsrun.net/MbVKp/embedded/all/light\" allowfullscreen=\"allowfullscreen\" frameborder=\"0\"></iframe>\n\n<p><code>fr</code>在与绝对长度的单位结合使用，会产生非常神奇的效果。</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.container</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">display</span>: grid;</span><br><span class=\"line\">  <span class=\"attribute\">grid-template-columns</span>: <span class=\"number\">150px</span> <span class=\"number\">1</span>fr <span class=\"number\">2</span>fr;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>上面代码表示，第一列的宽度为150像素，第二列的宽度是第三列的一半。</p>\n<iframe width=\"100%\" height=\"370\" src=\"//jsrun.net/SbVKp/embedded/all/light\" allowfullscreen=\"allowfullscreen\" frameborder=\"0\"></iframe>\n\n<h5 id=\"minmax\"><a href=\"#minmax\" class=\"headerlink\" title=\"minmax()\"></a>minmax()</h5><p><code>minmax()</code>函数产生一个长度范围，表示长度就在这个范围之中。它接受两个参数，分别为最小值和最大值。</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.container</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">display</span>: grid;</span><br><span class=\"line\">  <span class=\"attribute\">grid-template-columns</span>: <span class=\"number\">1</span>fr <span class=\"number\">1</span>fr <span class=\"built_in\">minmax</span>(<span class=\"number\">100px</span>, <span class=\"number\">1</span>fr);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>上面代码中，minmax(100px, 1fr)表示列宽不小于100px，不大于1fr。</p>\n<h5 id=\"auto\"><a href=\"#auto\" class=\"headerlink\" title=\"auto\"></a>auto</h5><p><code>auto</code>关键字表示由浏览器自己决定长度。</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.container</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">display</span>: grid;</span><br><span class=\"line\">  <span class=\"attribute\">grid-template-columns</span>: <span class=\"number\">100px</span> auto <span class=\"number\">100px</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>上面代码中，第二列的宽度，基本上等于该列单元格的最大宽度，除非单元格内容设置了<code>min-width</code>，且这个值大于最大宽度。</p>\n<h5 id=\"网格线命名\"><a href=\"#网格线命名\" class=\"headerlink\" title=\"网格线命名\"></a>网格线命名</h5><p><code>grid-template-columns</code>属性和<code>grid-template-rows</code>属性里面，还可以使用方括号，指定每一根网格线的名字，方便以后的引用。</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.container</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">display</span>: grid;</span><br><span class=\"line\">  <span class=\"attribute\">grid-template-columns</span>: [c1] <span class=\"number\">100px</span> [c2] <span class=\"number\">100px</span> [c3] auto [c4];</span><br><span class=\"line\">  <span class=\"attribute\">grid-template-rows</span>: [r1] <span class=\"number\">100px</span> [r2] <span class=\"number\">100px</span> [r3] auto [r4];</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>上面代码指定网格布局为<code>3行 x 3列</code>，因此有<code>4</code>根垂直网格线和<code>4</code>根水平网格线。方括号里面依次是这八根线的名字。</p>\n<h4 id=\"row-gap-column-gap-gap\"><a href=\"#row-gap-column-gap-gap\" class=\"headerlink\" title=\"row-gap / column-gap / gap\"></a>row-gap / column-gap / gap</h4><p>grid-row-gap属性设置行与行的间隔（行间距），grid-column-gap属性设置列与列的间隔（列间距）。</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.container</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">display</span>: grid;</span><br><span class=\"line\">  <span class=\"attribute\">row-gap</span>: <span class=\"number\">20px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">column-gap</span>: <span class=\"number\">20px</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>上面代码中，行间距和列间距均为<code>20px</code>。</p>\n<iframe width=\"100%\" height=\"370\" src=\"//jsrun.net/4bVKp/embedded/all/light\" allowfullscreen=\"allowfullscreen\" frameborder=\"0\"></iframe>\n\n<p><code>gap</code>属性是<code>column-gap</code>和<code>row-gap</code>的合并简写形式，语法如下。</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.container</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">gap</span>: &lt;row-gap&gt; &lt;column-gap&gt;;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>因此，上面一段 CSS 代码等同于下面的代码。</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.container</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">gap</span>: <span class=\"number\">20px</span> <span class=\"number\">20px</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>如果<code>gap</code>省略了第二个值，浏览器认为第二个值等于第一个值。</p>\n<h4 id=\"grid-template-areas\"><a href=\"#grid-template-areas\" class=\"headerlink\" title=\"grid-template-areas\"></a>grid-template-areas</h4><p>网格布局允许指定”区域”（area），一个区域由单个或多个单元格组成。<code>grid-template-areas</code>属性用于定义区域。</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.container</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">display</span>: grid;</span><br><span class=\"line\">  <span class=\"attribute\">grid-template-columns</span>: <span class=\"number\">100px</span> <span class=\"number\">100px</span> <span class=\"number\">100px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">grid-template-rows</span>: <span class=\"number\">100px</span> <span class=\"number\">100px</span> <span class=\"number\">100px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">grid-template-areas</span>: <span class=\"string\">'a b c'</span></span><br><span class=\"line\">                       <span class=\"string\">'d e f'</span></span><br><span class=\"line\">                       <span class=\"string\">'g h i'</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>上面代码先划分出9个单元格，然后将其定名为<code>a</code>到<code>i</code>的九个区域，分别对应这九个单元格。</p>\n<p>多个单元格合并成一个区域的写法如下。</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.container</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">grid-template-areas</span>: <span class=\"string\">'a a a'</span></span><br><span class=\"line\">                       <span class=\"string\">'b b b'</span></span><br><span class=\"line\">                       <span class=\"string\">'c c c'</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>上面代码将9个单元格分成<code>a</code>、<code>b</code>、<code>c</code>三个区域。</p>\n<p>下面是一个布局实例。</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.container</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">grid-template-areas</span>: <span class=\"string\">\"header header header\"</span></span><br><span class=\"line\">                       <span class=\"string\">\"main main sidebar\"</span></span><br><span class=\"line\">                       <span class=\"string\">\"footer footer footer\"</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>上面代码中，顶部是<code>header</code>区域，底部是<code>footer</code>区域，中间部分左边为<code>main</code>区域，右边为<code>sidebar</code>区域。</p>\n<p>如果某些区域不需要利用，则使用<code>.</code>表示。</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.container</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">grid-template-areas</span>: <span class=\"string\">'a . c'</span></span><br><span class=\"line\">                       <span class=\"string\">'d . f'</span></span><br><span class=\"line\">                       <span class=\"string\">'g . i'</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>上面代码中，中间一列为点，表示没有用到该单元格，或者该单元格不属于任何区域。</p>\n<blockquote>\n<p>注意，区域的命名会影响到网格线。每个区域的起始网格线，会自动命名为<code>区域名-start</code>，终止网格线自动命名为<code>区域名-end</code>。<br>比如，区域名为header，则起始位置的水平网格线和垂直网格线叫做<code>header-start</code>，终止位置的水平网格线和垂直网格线叫做<code>header-end</code>。</p>\n</blockquote>\n<h4 id=\"grid-auto-flow\"><a href=\"#grid-auto-flow\" class=\"headerlink\" title=\"grid-auto-flow\"></a>grid-auto-flow</h4><p>划分网格以后，容器的子元素会默认”先行后列”排序，即先填满第一行，再开始放入第二行，依次执行。</p>\n<p>通过<code>grid-auto-flow</code>属性可以改变网格的排序，默认为<code>row</code>,及“先行后列”，可以设置为<code>column</code>，变为“先列后行”。</p>\n<iframe width=\"100%\" height=\"370\" src=\"//jsrun.net/gWVKp/embedded/all/light\" allowfullscreen=\"allowfullscreen\" frameborder=\"0\"></iframe>\n\n<p>除了<code>row</code>和<code>column</code>，还可以设置为<code>row dense</code>和<code>column dense</code>。这两个值主要用于，某些项目指定位置以后，剩下的项目怎么自动放置。</p>\n<p>下面的例子中让1号项目和2号项目各占据两个单元格，然后在默认的<code>grid-auto-flow: row</code>情况下，会产生下面这样的布局。</p>\n<iframe width=\"100%\" height=\"370\" src=\"//jsrun.net/yWVKp/embedded/all/light\" allowfullscreen=\"allowfullscreen\" frameborder=\"0\"></iframe>\n\n<p>因为 3 号项目默认跟在 2 号项目之后，而第一行又无法容纳 2 号项目，所以第一行只能出现了空白。只要修改<code>grid-auto-flow: row dense</code>，就会在“先行后列”的基础上，尽可能紧密填满，不出现空格。</p>\n<iframe width=\"100%\" height=\"370\" src=\"//jsrun.net/bWVKp/embedded/all/light\" allowfullscreen=\"allowfullscreen\" frameborder=\"0\"></iframe>\n\n<p>如果将设置改为<code>column dense</code>，也是同样的意思，不过会遵循”先列后行”，并且尽量填满空格。</p>\n<h4 id=\"justify-items-align-items-place-items\"><a href=\"#justify-items-align-items-place-items\" class=\"headerlink\" title=\"justify-items / align-items / place-items\"></a>justify-items / align-items / place-items</h4><p><code>justify-items</code>属性设置单元格内容的水平位置，<code>align-items</code>属性设置单元格内容的垂直位置。</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.container</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">justify-items</span>: start | end | center | stretch;</span><br><span class=\"line\">  <span class=\"attribute\">align-items</span>: start | end | center | stretch;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>这两个属性的写法完全相同，都可以取下面这些值：</p>\n<ul>\n<li>start：对齐单元格的起始边缘。</li>\n<li>end：对齐单元格的结束边缘。</li>\n<li>center：单元格内部居中。</li>\n<li>stretch：拉伸，占满单元格的整个宽度（默认值）。</li>\n</ul>\n<p><code>place-items</code>属性是<code>align-items</code>属性和<code>justify-items</code>属性的合并简写形式。</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.container</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">place-items</span>: &lt;align-items&gt; &lt;justify-items&gt;;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>如果省略第二个值，则浏览器认为与第一个值相等。</p>\n<h4 id=\"justify-content-align-content-place-content\"><a href=\"#justify-content-align-content-place-content\" class=\"headerlink\" title=\"justify-content / align-content / place-content\"></a>justify-content / align-content / place-content</h4><p><code>justify-content</code>属性是整个内容区域在容器里面的水平位置，<code>align-content</code>属性是整个内容区域的垂直位置。</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.container</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">justify-content</span>: start | end | center | stretch | space-around | space-between | space-evenly;</span><br><span class=\"line\">  <span class=\"attribute\">align-content</span>: start | end | center | stretch | space-around | space-between | space-evenly;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>这两个属性的写法完全相同，都可以取下面这些值:</p>\n<ul>\n<li>start: 对齐容器的起始边框。</li>\n<li>end: 对齐容器的结束边框。</li>\n<li>center: 容器内部居中。</li>\n<li>stretch: 项目大小没有指定时，拉伸占据整个网格容器。</li>\n<li>space-around: 每个项目两侧的间隔相等。所以，项目之间的间隔比项目与容器边框的间隔大一倍。</li>\n<li>space-between: 项目与项目的间隔相等，项目与容器边框之间没有间隔。</li>\n<li>space-evenly: 项目与项目的间隔相等，项目与容器边框之间也是同样长度的间隔。</li>\n</ul>\n<p><code>place-content</code>属性是<code>align-content</code>属性和<code>justify-content</code>属性的合并简写形式。</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.container</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">place-content</span>: &lt;align-content&gt; &lt;justify-content&gt;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>如果省略第二个值，浏览器就会假定第二个值等于第一个值。</p>\n<h4 id=\"grid-auto-columns-grid-auto-rows\"><a href=\"#grid-auto-columns-grid-auto-rows\" class=\"headerlink\" title=\"grid-auto-columns / grid-auto-rows\"></a>grid-auto-columns / grid-auto-rows</h4><p>有时候，一些项目的指定位置，在现有网格的外部。比如网格只有3列，但是某一个项目指定在第5行。这时，浏览器会自动生成多余的网格，以便放置项目。</p>\n<p><code>grid-auto-columns</code>属性和<code>grid-auto-rows</code>属性用来设置，浏览器自动创建的多余网格的列宽和行高。它们的写法与<code>grid-template-columns</code>和<code>grid-template-rows</code>完全相同。如果不指定这两个属性，浏览器完全根据单元格内容的大小，决定新增网格的列宽和行高。</p>\n<p>下面的例子里面，划分好的网格是3行 x 3列，但是，8号项目指定在第4行，9号项目指定在第5行,并指定新增的行高统一为50px（原始的行高为100px）。</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.container</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">display</span>: grid;</span><br><span class=\"line\">  <span class=\"attribute\">grid-template-columns</span>: <span class=\"number\">100px</span> <span class=\"number\">100px</span> <span class=\"number\">100px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">grid-template-rows</span>: <span class=\"number\">100px</span> <span class=\"number\">100px</span> <span class=\"number\">100px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">grid-auto-rows</span>: <span class=\"number\">50px</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<iframe width=\"100%\" height=\"370\" src=\"//jsrun.net/wWVKp/embedded/all/light\" allowfullscreen=\"allowfullscreen\" frameborder=\"0\"></iframe>\n\n<h3 id=\"项目属性\"><a href=\"#项目属性\" class=\"headerlink\" title=\"项目属性\"></a>项目属性</h3><h4 id=\"grid-column-start-grid-column-end-grid-row-start-grid-row-end-grid-column-grid-row\"><a href=\"#grid-column-start-grid-column-end-grid-row-start-grid-row-end-grid-column-grid-row\" class=\"headerlink\" title=\"grid-column-start / grid-column-end / grid-row-start / grid-row-end / grid-column / grid-row\"></a>grid-column-start / grid-column-end / grid-row-start / grid-row-end / grid-column / grid-row</h4><p>项目的位置是可以指定的，具体方法就是指定项目的四个边框，分别定位在哪根网格线。</p>\n<ul>\n<li><code>grid-column-start</code>表示左边框贴紧的垂直网格线</li>\n<li><code>grid-column-end</code>表示右边框贴紧的垂直网格线</li>\n<li><code>grid-row-start</code>表示上边框贴紧的水平网格线</li>\n<li><code>grid-row-end</code>表示下边框贴紧的水平网格线</li>\n</ul>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.item-1</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">grid-column-start</span>: <span class=\"number\">2</span>;</span><br><span class=\"line\">  <span class=\"attribute\">grid-column-end</span>: <span class=\"number\">4</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>上面代码指定，1号项目的左边框是第二根垂直网格线，右边框是第四根垂直网格线。但并没有指定上下边框，所以会采用默认位置。而除了1号项目以外，其他项目都没有指定位置，将由浏览器自动布局，这时它们的位置由容器的<code>grid-auto-flow</code>属性决定，参考上面的教程，不再赘述。</p>\n<iframe width=\"100%\" height=\"370\" src=\"//jsrun.net/TWVKp/embedded/all/light\" allowfullscreen=\"allowfullscreen\" frameborder=\"0\"></iframe>\n\n<p>下面的例子是指定四个边框位置的效果。</p>\n<iframe width=\"100%\" height=\"370\" src=\"//jsrun.net/UWVKp/embedded/all/light\" allowfullscreen=\"allowfullscreen\" frameborder=\"0\"></iframe>\n\n<p>这四个属性的值，除了指定为第几个网格线，还可以指定为网格线的名字。</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.item-1</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">grid-column-start</span>: header-start;</span><br><span class=\"line\">  <span class=\"attribute\">grid-column-end</span>: header-end;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>上面代码中，左边框和右边框的位置，都指定为网格线的名字。<br>这四个属性的值还可以使用span关键字，表示”跨越”，即左右边框（上下边框）之间跨越多少个网格。</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.item-1</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">grid-column-start</span>: span <span class=\"number\">2</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>上面代码表示，1号项目的左边框距离右边框跨越2个网格。<br>使用这四个属性，如果产生了项目的重叠，则使用z-index属性指定项目的重叠顺序。</p>\n<p><code>grid-column</code>属性是<code>grid-column-start</code>和<code>grid-column-end</code>的合并简写形式，<code>grid-row</code>属性是<code>grid-row-start</code>属性和<code>grid-row-end</code>的合并简写形式。</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.item</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">grid-column</span>: &lt;grid-column-start&gt; / &lt;grid-column-end&gt;;</span><br><span class=\"line\">  <span class=\"attribute\">grid-row</span>: &lt;grid-row-start&gt; / &lt;grid-row-end&gt;;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>下面是一个例子。</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.item-1</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">grid-column</span>: <span class=\"number\">1</span> / <span class=\"number\">3</span>;</span><br><span class=\"line\">  <span class=\"attribute\">grid-row</span>: <span class=\"number\">1</span> / <span class=\"number\">2</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">/* 等同于 */</span></span><br><span class=\"line\"><span class=\"selector-class\">.item-1</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">grid-column-start</span>: <span class=\"number\">1</span>;</span><br><span class=\"line\">  <span class=\"attribute\">grid-column-end</span>: <span class=\"number\">3</span>;</span><br><span class=\"line\">  <span class=\"attribute\">grid-row-start</span>: <span class=\"number\">1</span>;</span><br><span class=\"line\">  <span class=\"attribute\">grid-row-end</span>: <span class=\"number\">2</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>上面代码中，项目item-1占据第一行，从第一根列线到第三根列线。</p>\n<p>这两个属性之中，也可以使用span关键字，表示跨越多少个网格。</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.item-1</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">background</span>: <span class=\"number\">#b03532</span>;</span><br><span class=\"line\">  <span class=\"attribute\">grid-column</span>: <span class=\"number\">1</span> / <span class=\"number\">3</span>;</span><br><span class=\"line\">  <span class=\"attribute\">grid-row</span>: <span class=\"number\">1</span> / <span class=\"number\">3</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">/* 等同于 */</span></span><br><span class=\"line\"><span class=\"selector-class\">.item-1</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">background</span>: <span class=\"number\">#b03532</span>;</span><br><span class=\"line\">  <span class=\"attribute\">grid-column</span>: <span class=\"number\">1</span> / span <span class=\"number\">2</span>;</span><br><span class=\"line\">  <span class=\"attribute\">grid-row</span>: <span class=\"number\">1</span> / span <span class=\"number\">2</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>上面代码中，项目item-1占据的区域，包括第一行 + 第二行、第一列 + 第二列。<br>斜杠以及后面的部分可以省略，默认跨越一个网格。</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.item-1</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">grid-column</span>: <span class=\"number\">1</span>;</span><br><span class=\"line\">  <span class=\"attribute\">grid-row</span>: <span class=\"number\">1</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>上面代码中，项目item-1占据左上角第一个网格。</p>\n<h4 id=\"grid-area\"><a href=\"#grid-area\" class=\"headerlink\" title=\"grid-area\"></a>grid-area</h4><p><code>grid-area</code>属性指定项目放在哪一个区域。</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.item-1</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">grid-area</span>: e;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>上面代码中，1号项目位于e区域。</p>\n<iframe width=\"100%\" height=\"370\" src=\"//jsrun.net/dWVKp/embedded/all/light\" allowfullscreen=\"allowfullscreen\" frameborder=\"0\"></iframe>\n\n<p>grid-area属性还可用作grid-row-start、grid-column-start、grid-row-end、grid-column-end的合并简写形式，直接指定项目的位置。</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.item</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">grid-area</span>: &lt;row-start&gt; / &lt;column-start&gt; / &lt;row-end&gt; / &lt;column-end&gt;;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>下面是一个例子。</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/* 表示从第一个行第一列开始，到第三行第三列为止，因此是 2 * 2 个单元格 */</span></span><br><span class=\"line\"><span class=\"selector-class\">.item-1</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">grid-area</span>: <span class=\"number\">1</span> / <span class=\"number\">1</span> / <span class=\"number\">3</span> / <span class=\"number\">3</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<iframe width=\"100%\" height=\"370\" src=\"//jsrun.net/JWVKp/embedded/all/light\" allowfullscreen=\"allowfullscreen\" frameborder=\"0\"></iframe>\n\n<h4 id=\"justify-self-align-self-place-self\"><a href=\"#justify-self-align-self-place-self\" class=\"headerlink\" title=\"justify-self / align-self / place-self\"></a>justify-self / align-self / place-self</h4><p><code>justify-self</code>属性设置单元格内容的水平位置，跟justify-items属性的用法完全一致，但只作用于单个项目。<br><code>align-self</code>属性设置单元格内容的垂直位置，跟align-items属性的用法完全一致，也是只作用于单个项目。</p>\n<p>这两个属性都可以取下面四个值：</p>\n<ul>\n<li>start：对齐单元格的起始边缘。</li>\n<li>end：对齐单元格的结束边缘。</li>\n<li>center：单元格内部居中。</li>\n<li>stretch：拉伸，占满单元格的整个宽度（默认值）。</li>\n</ul>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.item</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">justify-self</span>: start | end | center | stretch;</span><br><span class=\"line\">  <span class=\"attribute\">align-self</span>: start | end | center | stretch;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p><code>place-self</code>属性是<code>align-self</code>属性和<code>justify-self</code>属性的合并简写形式。</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.item</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">place-self</span>: &lt;align-self&gt; &lt;justify-self&gt;;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>如果省略第二个值，<code>place-self</code>属性会认为这两个值相等。</p>\n"},{"title":"css3选择器简介","date":"2017-08-24T11:06:28.000Z","description":"css3新加入的选择器简单介绍","_content":"作为前端开发人员，css样式永远是我们讨论的重点，毕竟在高速发展的现在，颜值的重要性不言而喻。作为网页样式的首选，一张网页的美观程度可以说完全由css来决定，其中选择器是css中的一大重点。在css3之前，对于选中正确的标签是让人头疼的工作，尤其是层次越来越深。对此，css3的新增加了很多选择器，减轻了开发者的不少负担。   \ncss3新增加的选择器大致可以分为几类\n+ 属性选择器；    \n+ 伪类选择器；    \n+ 伪元素选择器；\n\n## 属性选择器 \n顾名思义，属性选择器是通过标签的属性来捕获目标标签。属性可以是标签自己本身的属性（src、title等），也可以是自己定义的标签。具体使用方式: E[attr]:匹配含有属性attr的元素。\n```\ndiv[id]     可以匹配到<div id=\"one\"></div>以及<div id=\"two\"></div>\n```\nE[attr=value]:匹配含有属性attr,并且attr属性的值为value的元素。\n```\ndiv[id=one]     可以匹配到<div id=\"one\"></div>\n```\nE[attr~=value]:标签元素可以有多个自定义的属性，这就像可以同时拥有很多类名一样。这个选择器可以选中一条属性中具有多个空格分隔开的其中一个值为value的元素。\n```\ndiv[me~=man]    可以匹配到<div me=\" 14 man chinese\"></div> 或者 <div me=\" man chinese tianjin\"></div>\n```\nE[attr|=value]:这个选择器可以选中一条属性中有“-”分隔符并且分隔符开头是value的元素。\n```\ndiv[me|=a]   可以匹配到<div me=\" a-man\"></div>以及<div me=\"a-chinese tianjin\"></div>    \n```\nE[attr^=value]:这个选择器可以选中具有attr并且值以value开头的元素。\n```\ndiv[me^=a]   可以匹配到<div me=\" aman\"></div>以及<div me=\"achinese tianjin\"></div>    \n```\nE[attr$=value]:这个选择器可以选中具有attr并且值以value结尾的元素。\n```\ndiv[me$=a]   可以匹配到<div me=\" amana\"></div>以及<div me=\"achinesa tianjina\"></div>    \n```\nE[attr*=value]:这个选择器可以选中具有attr并且值包含value的元素，无论value在什么位置。\n```\ndiv[me*=a]   可以匹配到<div me=\" amana\"></div>以及<div me=\"chineas tian\"></div>    \n```\n## 伪类选择器\n通过操作伪类来选中目标元素也是css常用的一种手段。    \n作为经验丰富的前端开发者，你对这些伪元素已经烂熟于心：   \n+ E:first-child\t匹配元素E的第一个子元素  \n+ E:link\t匹配所有未被点击的链接      \n+ E:visited\t匹配所有已被点击的链接        \n+ E:active\t匹配鼠标已经其上按下、还没有释放的E元素    \n+ E:hover\t匹配鼠标悬停其上的E元素      \n+ E:focus\t匹配获得当前焦点的E元素    \n+ E:lang(c)\t匹配lang属性等于c的E元素      \n+ E:enabled\t匹配表单中可用的元素    \n+ E:disabled\t匹配表单中禁用的元素    \n+ E:checked\t匹配表单中被选中的radio或checkbox元素    \n+ E::selection\t匹配用户当前选中的元素    \n+ E:root\t匹配文档的根元素，对于HTML文档，就是HTML元素       \n\n在css3中提供了全新的伪类选择器，可以更方便的选取目标元素。    \n+ E:nth-child(n)匹配其父元素的第n个子元素，**第一个编号为1**    \n+ E:nth-last-child(n)匹配其父元素的倒数第n个子元素，**最后一个编号为1**    \n+ E:nth-of-type(n)与:nth-child()作用类似，但是仅匹配使用同种标签的元素       \n+ E:nth-last-of-type(n)\t与:nth-last-child() 作用类似，但是仅匹配使用同种标签的元素    \n+ E:last-child\t匹配父元素的最后一个子元素，等同于:nth-last-child(1)     \n+ E:first-of-type\t匹配父元素下使用同种标签的第一个子元素，等同于:nth-of-type(1)     \n+ E:last-of-type\t匹配父元素下使用同种标签的最后一个子元素，等同于:nth-last-of-type(1)     \n+ E:only-child\t匹配父元素下仅有的一个子元素，等同于:first-child:last-child或 :nth-child(1):nth-last-child(1)    \n+ E:only-of-type\t匹配父元素下使用同种标签的唯一一个子元素，等同于:first-of-type:last-of-type或 :nth-of-type(1):nth-last-of-type(1)    \n+ E:empty\t匹配一个不包含任何子元素的元素，文本节点也被看作子元素    \n+ E:not(selector)\t匹配不符合当前选择器的任何元素\n\n## 伪元素选择器\ncss允许我们向文档内部添加一个额外的元素而不扰乱文档本身，具体表现为在元素内部插入一个元素，并且可以通过选择器控制这个元素的行为。    \n+ E:first-line\t匹配E元素内容的第一行    \n+ E:first-letter\t匹配E元素内容的第一个字母     \n+ E:before\t在E元素之前插入生成的内容     \n+ E:after\t在E元素之后插入生成的内容     ","source":"_posts/hello-world.md","raw":"title: css3选择器简介\ndate: 2017-08-24 19:06:28\ntags: [css]\ncategories: [css]\ndescription: css3新加入的选择器简单介绍\n---\n作为前端开发人员，css样式永远是我们讨论的重点，毕竟在高速发展的现在，颜值的重要性不言而喻。作为网页样式的首选，一张网页的美观程度可以说完全由css来决定，其中选择器是css中的一大重点。在css3之前，对于选中正确的标签是让人头疼的工作，尤其是层次越来越深。对此，css3的新增加了很多选择器，减轻了开发者的不少负担。   \ncss3新增加的选择器大致可以分为几类\n+ 属性选择器；    \n+ 伪类选择器；    \n+ 伪元素选择器；\n\n## 属性选择器 \n顾名思义，属性选择器是通过标签的属性来捕获目标标签。属性可以是标签自己本身的属性（src、title等），也可以是自己定义的标签。具体使用方式: E[attr]:匹配含有属性attr的元素。\n```\ndiv[id]     可以匹配到<div id=\"one\"></div>以及<div id=\"two\"></div>\n```\nE[attr=value]:匹配含有属性attr,并且attr属性的值为value的元素。\n```\ndiv[id=one]     可以匹配到<div id=\"one\"></div>\n```\nE[attr~=value]:标签元素可以有多个自定义的属性，这就像可以同时拥有很多类名一样。这个选择器可以选中一条属性中具有多个空格分隔开的其中一个值为value的元素。\n```\ndiv[me~=man]    可以匹配到<div me=\" 14 man chinese\"></div> 或者 <div me=\" man chinese tianjin\"></div>\n```\nE[attr|=value]:这个选择器可以选中一条属性中有“-”分隔符并且分隔符开头是value的元素。\n```\ndiv[me|=a]   可以匹配到<div me=\" a-man\"></div>以及<div me=\"a-chinese tianjin\"></div>    \n```\nE[attr^=value]:这个选择器可以选中具有attr并且值以value开头的元素。\n```\ndiv[me^=a]   可以匹配到<div me=\" aman\"></div>以及<div me=\"achinese tianjin\"></div>    \n```\nE[attr$=value]:这个选择器可以选中具有attr并且值以value结尾的元素。\n```\ndiv[me$=a]   可以匹配到<div me=\" amana\"></div>以及<div me=\"achinesa tianjina\"></div>    \n```\nE[attr*=value]:这个选择器可以选中具有attr并且值包含value的元素，无论value在什么位置。\n```\ndiv[me*=a]   可以匹配到<div me=\" amana\"></div>以及<div me=\"chineas tian\"></div>    \n```\n## 伪类选择器\n通过操作伪类来选中目标元素也是css常用的一种手段。    \n作为经验丰富的前端开发者，你对这些伪元素已经烂熟于心：   \n+ E:first-child\t匹配元素E的第一个子元素  \n+ E:link\t匹配所有未被点击的链接      \n+ E:visited\t匹配所有已被点击的链接        \n+ E:active\t匹配鼠标已经其上按下、还没有释放的E元素    \n+ E:hover\t匹配鼠标悬停其上的E元素      \n+ E:focus\t匹配获得当前焦点的E元素    \n+ E:lang(c)\t匹配lang属性等于c的E元素      \n+ E:enabled\t匹配表单中可用的元素    \n+ E:disabled\t匹配表单中禁用的元素    \n+ E:checked\t匹配表单中被选中的radio或checkbox元素    \n+ E::selection\t匹配用户当前选中的元素    \n+ E:root\t匹配文档的根元素，对于HTML文档，就是HTML元素       \n\n在css3中提供了全新的伪类选择器，可以更方便的选取目标元素。    \n+ E:nth-child(n)匹配其父元素的第n个子元素，**第一个编号为1**    \n+ E:nth-last-child(n)匹配其父元素的倒数第n个子元素，**最后一个编号为1**    \n+ E:nth-of-type(n)与:nth-child()作用类似，但是仅匹配使用同种标签的元素       \n+ E:nth-last-of-type(n)\t与:nth-last-child() 作用类似，但是仅匹配使用同种标签的元素    \n+ E:last-child\t匹配父元素的最后一个子元素，等同于:nth-last-child(1)     \n+ E:first-of-type\t匹配父元素下使用同种标签的第一个子元素，等同于:nth-of-type(1)     \n+ E:last-of-type\t匹配父元素下使用同种标签的最后一个子元素，等同于:nth-last-of-type(1)     \n+ E:only-child\t匹配父元素下仅有的一个子元素，等同于:first-child:last-child或 :nth-child(1):nth-last-child(1)    \n+ E:only-of-type\t匹配父元素下使用同种标签的唯一一个子元素，等同于:first-of-type:last-of-type或 :nth-of-type(1):nth-last-of-type(1)    \n+ E:empty\t匹配一个不包含任何子元素的元素，文本节点也被看作子元素    \n+ E:not(selector)\t匹配不符合当前选择器的任何元素\n\n## 伪元素选择器\ncss允许我们向文档内部添加一个额外的元素而不扰乱文档本身，具体表现为在元素内部插入一个元素，并且可以通过选择器控制这个元素的行为。    \n+ E:first-line\t匹配E元素内容的第一行    \n+ E:first-letter\t匹配E元素内容的第一个字母     \n+ E:before\t在E元素之前插入生成的内容     \n+ E:after\t在E元素之后插入生成的内容     ","slug":"hello-world","published":1,"updated":"2021-06-25T11:19:55.441Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckqc904om000jwotvgaikvhdt","content":"<p>作为前端开发人员，css样式永远是我们讨论的重点，毕竟在高速发展的现在，颜值的重要性不言而喻。作为网页样式的首选，一张网页的美观程度可以说完全由css来决定，其中选择器是css中的一大重点。在css3之前，对于选中正确的标签是让人头疼的工作，尤其是层次越来越深。对此，css3的新增加了很多选择器，减轻了开发者的不少负担。<br>css3新增加的选择器大致可以分为几类</p>\n<ul>\n<li>属性选择器；    </li>\n<li>伪类选择器；    </li>\n<li>伪元素选择器；</li>\n</ul>\n<h2 id=\"属性选择器\"><a href=\"#属性选择器\" class=\"headerlink\" title=\"属性选择器\"></a>属性选择器</h2><p>顾名思义，属性选择器是通过标签的属性来捕获目标标签。属性可以是标签自己本身的属性（src、title等），也可以是自己定义的标签。具体使用方式: E[attr]:匹配含有属性attr的元素。<br><div class=\"code-panel__wrapper\" autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\"><header class=\"mac-panel\"><span class=\"doc-path\"></span><span class=\"mac-panel__language\">PLAIN</span></header><figure class=\"iseeu highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">div[id]     可以匹配到&lt;div id=&quot;one&quot;&gt;&lt;/div&gt;以及&lt;div id=&quot;two&quot;&gt;&lt;/div&gt;</span><br></pre></td></tr></table></figure></div></p>\n<p>E[attr=value]:匹配含有属性attr,并且attr属性的值为value的元素。<br><div class=\"code-panel__wrapper\" autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\"><header class=\"mac-panel\"><span class=\"doc-path\"></span><span class=\"mac-panel__language\">PLAIN</span></header><figure class=\"iseeu highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">div[id=one]     可以匹配到&lt;div id=&quot;one&quot;&gt;&lt;/div&gt;</span><br></pre></td></tr></table></figure></div></p>\n<p>E[attr~=value]:标签元素可以有多个自定义的属性，这就像可以同时拥有很多类名一样。这个选择器可以选中一条属性中具有多个空格分隔开的其中一个值为value的元素。<br><div class=\"code-panel__wrapper\" autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\"><header class=\"mac-panel\"><span class=\"doc-path\"></span><span class=\"mac-panel__language\">PLAIN</span></header><figure class=\"iseeu highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">div[me~=man]    可以匹配到&lt;div me=&quot; 14 man chinese&quot;&gt;&lt;/div&gt; 或者 &lt;div me=&quot; man chinese tianjin&quot;&gt;&lt;/div&gt;</span><br></pre></td></tr></table></figure></div></p>\n<p>E[attr|=value]:这个选择器可以选中一条属性中有“-”分隔符并且分隔符开头是value的元素。<br><div class=\"code-panel__wrapper\" autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\"><header class=\"mac-panel\"><span class=\"doc-path\"></span><span class=\"mac-panel__language\">PLAIN</span></header><figure class=\"iseeu highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">div[me|=a]   可以匹配到&lt;div me=&quot; a-man&quot;&gt;&lt;/div&gt;以及&lt;div me=&quot;a-chinese tianjin&quot;&gt;&lt;/div&gt;</span><br></pre></td></tr></table></figure></div></p>\n<p>E[attr^=value]:这个选择器可以选中具有attr并且值以value开头的元素。<br><div class=\"code-panel__wrapper\" autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\"><header class=\"mac-panel\"><span class=\"doc-path\"></span><span class=\"mac-panel__language\">PLAIN</span></header><figure class=\"iseeu highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">div[me^=a]   可以匹配到&lt;div me=&quot; aman&quot;&gt;&lt;/div&gt;以及&lt;div me=&quot;achinese tianjin&quot;&gt;&lt;/div&gt;</span><br></pre></td></tr></table></figure></div></p>\n<p>E[attr$=value]:这个选择器可以选中具有attr并且值以value结尾的元素。<br><div class=\"code-panel__wrapper\" autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\"><header class=\"mac-panel\"><span class=\"doc-path\"></span><span class=\"mac-panel__language\">PLAIN</span></header><figure class=\"iseeu highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">div[me$=a]   可以匹配到&lt;div me=&quot; amana&quot;&gt;&lt;/div&gt;以及&lt;div me=&quot;achinesa tianjina&quot;&gt;&lt;/div&gt;</span><br></pre></td></tr></table></figure></div></p>\n<p>E[attr*=value]:这个选择器可以选中具有attr并且值包含value的元素，无论value在什么位置。<br><div class=\"code-panel__wrapper\" autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\"><header class=\"mac-panel\"><span class=\"doc-path\"></span><span class=\"mac-panel__language\">PLAIN</span></header><figure class=\"iseeu highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">div[me*=a]   可以匹配到&lt;div me=&quot; amana&quot;&gt;&lt;/div&gt;以及&lt;div me=&quot;chineas tian&quot;&gt;&lt;/div&gt;</span><br></pre></td></tr></table></figure></div></p>\n<h2 id=\"伪类选择器\"><a href=\"#伪类选择器\" class=\"headerlink\" title=\"伪类选择器\"></a>伪类选择器</h2><p>通过操作伪类来选中目标元素也是css常用的一种手段。<br>作为经验丰富的前端开发者，你对这些伪元素已经烂熟于心：   </p>\n<ul>\n<li>E:first-child    匹配元素E的第一个子元素  </li>\n<li>E:link    匹配所有未被点击的链接      </li>\n<li>E:visited    匹配所有已被点击的链接        </li>\n<li>E:active    匹配鼠标已经其上按下、还没有释放的E元素    </li>\n<li>E:hover    匹配鼠标悬停其上的E元素      </li>\n<li>E:focus    匹配获得当前焦点的E元素    </li>\n<li>E:lang(c)    匹配lang属性等于c的E元素      </li>\n<li>E:enabled    匹配表单中可用的元素    </li>\n<li>E:disabled    匹配表单中禁用的元素    </li>\n<li>E:checked    匹配表单中被选中的radio或checkbox元素    </li>\n<li>E::selection    匹配用户当前选中的元素    </li>\n<li>E:root    匹配文档的根元素，对于HTML文档，就是HTML元素       </li>\n</ul>\n<p>在css3中提供了全新的伪类选择器，可以更方便的选取目标元素。    </p>\n<ul>\n<li>E:nth-child(n)匹配其父元素的第n个子元素，<strong>第一个编号为1</strong>    </li>\n<li>E:nth-last-child(n)匹配其父元素的倒数第n个子元素，<strong>最后一个编号为1</strong>    </li>\n<li>E:nth-of-type(n)与:nth-child()作用类似，但是仅匹配使用同种标签的元素       </li>\n<li>E:nth-last-of-type(n)    与:nth-last-child() 作用类似，但是仅匹配使用同种标签的元素    </li>\n<li>E:last-child    匹配父元素的最后一个子元素，等同于:nth-last-child(1)     </li>\n<li>E:first-of-type    匹配父元素下使用同种标签的第一个子元素，等同于:nth-of-type(1)     </li>\n<li>E:last-of-type    匹配父元素下使用同种标签的最后一个子元素，等同于:nth-last-of-type(1)     </li>\n<li>E:only-child    匹配父元素下仅有的一个子元素，等同于:first-child:last-child或 :nth-child(1):nth-last-child(1)    </li>\n<li>E:only-of-type    匹配父元素下使用同种标签的唯一一个子元素，等同于:first-of-type:last-of-type或 :nth-of-type(1):nth-last-of-type(1)    </li>\n<li>E:empty    匹配一个不包含任何子元素的元素，文本节点也被看作子元素    </li>\n<li>E:not(selector)    匹配不符合当前选择器的任何元素</li>\n</ul>\n<h2 id=\"伪元素选择器\"><a href=\"#伪元素选择器\" class=\"headerlink\" title=\"伪元素选择器\"></a>伪元素选择器</h2><p>css允许我们向文档内部添加一个额外的元素而不扰乱文档本身，具体表现为在元素内部插入一个元素，并且可以通过选择器控制这个元素的行为。    </p>\n<ul>\n<li>E:first-line    匹配E元素内容的第一行    </li>\n<li>E:first-letter    匹配E元素内容的第一个字母     </li>\n<li>E:before    在E元素之前插入生成的内容     </li>\n<li>E:after    在E元素之后插入生成的内容     </li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<p>作为前端开发人员，css样式永远是我们讨论的重点，毕竟在高速发展的现在，颜值的重要性不言而喻。作为网页样式的首选，一张网页的美观程度可以说完全由css来决定，其中选择器是css中的一大重点。在css3之前，对于选中正确的标签是让人头疼的工作，尤其是层次越来越深。对此，css3的新增加了很多选择器，减轻了开发者的不少负担。<br>css3新增加的选择器大致可以分为几类</p>\n<ul>\n<li>属性选择器；    </li>\n<li>伪类选择器；    </li>\n<li>伪元素选择器；</li>\n</ul>\n<h2 id=\"属性选择器\"><a href=\"#属性选择器\" class=\"headerlink\" title=\"属性选择器\"></a>属性选择器</h2><p>顾名思义，属性选择器是通过标签的属性来捕获目标标签。属性可以是标签自己本身的属性（src、title等），也可以是自己定义的标签。具体使用方式: E[attr]:匹配含有属性attr的元素。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">div[id]     可以匹配到&lt;div id=&quot;one&quot;&gt;&lt;/div&gt;以及&lt;div id=&quot;two&quot;&gt;&lt;/div&gt;</span><br></pre></td></tr></table></figure></p>\n<p>E[attr=value]:匹配含有属性attr,并且attr属性的值为value的元素。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">div[id=one]     可以匹配到&lt;div id=&quot;one&quot;&gt;&lt;/div&gt;</span><br></pre></td></tr></table></figure></p>\n<p>E[attr~=value]:标签元素可以有多个自定义的属性，这就像可以同时拥有很多类名一样。这个选择器可以选中一条属性中具有多个空格分隔开的其中一个值为value的元素。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">div[me~=man]    可以匹配到&lt;div me=&quot; 14 man chinese&quot;&gt;&lt;/div&gt; 或者 &lt;div me=&quot; man chinese tianjin&quot;&gt;&lt;/div&gt;</span><br></pre></td></tr></table></figure></p>\n<p>E[attr|=value]:这个选择器可以选中一条属性中有“-”分隔符并且分隔符开头是value的元素。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">div[me|=a]   可以匹配到&lt;div me=&quot; a-man&quot;&gt;&lt;/div&gt;以及&lt;div me=&quot;a-chinese tianjin&quot;&gt;&lt;/div&gt;</span><br></pre></td></tr></table></figure></p>\n<p>E[attr^=value]:这个选择器可以选中具有attr并且值以value开头的元素。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">div[me^=a]   可以匹配到&lt;div me=&quot; aman&quot;&gt;&lt;/div&gt;以及&lt;div me=&quot;achinese tianjin&quot;&gt;&lt;/div&gt;</span><br></pre></td></tr></table></figure></p>\n<p>E[attr$=value]:这个选择器可以选中具有attr并且值以value结尾的元素。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">div[me$=a]   可以匹配到&lt;div me=&quot; amana&quot;&gt;&lt;/div&gt;以及&lt;div me=&quot;achinesa tianjina&quot;&gt;&lt;/div&gt;</span><br></pre></td></tr></table></figure></p>\n<p>E[attr*=value]:这个选择器可以选中具有attr并且值包含value的元素，无论value在什么位置。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">div[me*=a]   可以匹配到&lt;div me=&quot; amana&quot;&gt;&lt;/div&gt;以及&lt;div me=&quot;chineas tian&quot;&gt;&lt;/div&gt;</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"伪类选择器\"><a href=\"#伪类选择器\" class=\"headerlink\" title=\"伪类选择器\"></a>伪类选择器</h2><p>通过操作伪类来选中目标元素也是css常用的一种手段。<br>作为经验丰富的前端开发者，你对这些伪元素已经烂熟于心：   </p>\n<ul>\n<li>E:first-child    匹配元素E的第一个子元素  </li>\n<li>E:link    匹配所有未被点击的链接      </li>\n<li>E:visited    匹配所有已被点击的链接        </li>\n<li>E:active    匹配鼠标已经其上按下、还没有释放的E元素    </li>\n<li>E:hover    匹配鼠标悬停其上的E元素      </li>\n<li>E:focus    匹配获得当前焦点的E元素    </li>\n<li>E:lang(c)    匹配lang属性等于c的E元素      </li>\n<li>E:enabled    匹配表单中可用的元素    </li>\n<li>E:disabled    匹配表单中禁用的元素    </li>\n<li>E:checked    匹配表单中被选中的radio或checkbox元素    </li>\n<li>E::selection    匹配用户当前选中的元素    </li>\n<li>E:root    匹配文档的根元素，对于HTML文档，就是HTML元素       </li>\n</ul>\n<p>在css3中提供了全新的伪类选择器，可以更方便的选取目标元素。    </p>\n<ul>\n<li>E:nth-child(n)匹配其父元素的第n个子元素，<strong>第一个编号为1</strong>    </li>\n<li>E:nth-last-child(n)匹配其父元素的倒数第n个子元素，<strong>最后一个编号为1</strong>    </li>\n<li>E:nth-of-type(n)与:nth-child()作用类似，但是仅匹配使用同种标签的元素       </li>\n<li>E:nth-last-of-type(n)    与:nth-last-child() 作用类似，但是仅匹配使用同种标签的元素    </li>\n<li>E:last-child    匹配父元素的最后一个子元素，等同于:nth-last-child(1)     </li>\n<li>E:first-of-type    匹配父元素下使用同种标签的第一个子元素，等同于:nth-of-type(1)     </li>\n<li>E:last-of-type    匹配父元素下使用同种标签的最后一个子元素，等同于:nth-last-of-type(1)     </li>\n<li>E:only-child    匹配父元素下仅有的一个子元素，等同于:first-child:last-child或 :nth-child(1):nth-last-child(1)    </li>\n<li>E:only-of-type    匹配父元素下使用同种标签的唯一一个子元素，等同于:first-of-type:last-of-type或 :nth-of-type(1):nth-last-of-type(1)    </li>\n<li>E:empty    匹配一个不包含任何子元素的元素，文本节点也被看作子元素    </li>\n<li>E:not(selector)    匹配不符合当前选择器的任何元素</li>\n</ul>\n<h2 id=\"伪元素选择器\"><a href=\"#伪元素选择器\" class=\"headerlink\" title=\"伪元素选择器\"></a>伪元素选择器</h2><p>css允许我们向文档内部添加一个额外的元素而不扰乱文档本身，具体表现为在元素内部插入一个元素，并且可以通过选择器控制这个元素的行为。    </p>\n<ul>\n<li>E:first-line    匹配E元素内容的第一行    </li>\n<li>E:first-letter    匹配E元素内容的第一个字母     </li>\n<li>E:before    在E元素之前插入生成的内容     </li>\n<li>E:after    在E元素之后插入生成的内容     </li>\n</ul>\n"},{"title":"html 清除缓存","date":"2017-11-25T00:25:15.000Z","description":"通过前端的方法清除浏览器缓存","_content":"\n## 通过设置 meta 标签清除页面缓存\n\n通过向 header 中添加以下代码可以清除页面缓存\n\n```html\n<meta http-equiv=\"Cache-Control\" content=\"no-cache, no-store, must-revalidate\" />\n<meta http-equiv=\"Pragma\" content=\"no-cache\" />\n<meta http-equiv=\"Expires\" content=\"0\" />\n```\n\n### Cache-Control 头域\n\nCache-Control 指定请求和响应遵循的缓存机制。在请求消息或响应消息中设置 Cache-Control 并不会修改另一个消息处理过程中的缓存处理过程。请求时的缓存指令包括 **no-cache**、**no-store**、**max-age**、**max-stale**、**min-fresh**、**only-if-cached**，响应消息中的指令包括 **public**、**private**、**no-cache**、**no-store**、**no-transform**、**must-revalidate**、**proxy-revalidate**、**max-age**。各个消息中的指令含义如下\n\n- Public 指示响应可被任何缓存区缓存\n- Private 指示对于单个用户的整个或部分响应消息，不能被共享缓存处理。这允许服务器仅仅描述当用户的部分响应消息，此响应消息对于其他用户的请求无效\n- no-cache 指示请求或响应消息不能缓存\n- no-store 用于防止重要的信息被无意的发布。在请求消息中发送将使得请求和响应消息都不使用缓存。\n- must-revalidation/proxy-revalidation 如果缓存的内容失效，请求必须发送到服务器/代理以进行重新验证\n- max-age 指示客户机可以接收生存期不大于指定时间（以秒为单位）的响应\n- min-fresh 指示客户机可以接收响应时间小于当前时间加上指定时间的响应\n- max-stale 指示客户机可以接收超出超时期间的响应消息。如果指定 max-stale 消息的值，那么客户机可以接收超出超时期指定值之内的响应消息。\n\n更多具体信息可以移步[百度百科](https://baike.baidu.com/item/Cache-control/1885913?fr=aladdin)查看\n\n### pragma 与 no-cache 用于定义页面缓存,不缓存页面\n\n### Expires 可以用于设定网页的到期时间。一旦网页过期，必须到服务器上重新调阅。可以把该值设置为一个早已过去的时间，那么访问此网时若重复在地址栏按回车，那么每次都会重复访问。注意：必须使用 GMT 的时间格式\n\n### 如果这些还不够，就必须从代码中做文章。可以给每个文件加一个后缀，告诉浏览器这是一个新文件。这一效果通常选择在打包自动生成\n\n## 通过异步请求更新数据\n\n### 使用 ajax 请求文件时加上请求头 **If-Modified-Since** 和 **Cache-Control**\n\n```javascript\n$.ajax({\n  url:'/',\n  dataType:'json',\n  beforeSend :function(xmlHttp){\n    xmlHttp.setRequestHeader(\"If-Modified-Since\",\"0\");\n    xmlHttp.setRequestHeader(\"Cache-Control\",\"no-cache\");\n  },\n  async:false,\n  success:function(response){\n    ...\n  }\n});\n```\n\n### 你也可以试试直接使用 **cache:false**\n\n```js\n$.ajax({\n  url:'/',\n  dataType:'json',\n  data:{},\n  cache:false,\n  ifModified :true,\n  async:false,\n  success:function(response){\n    ...\n  }\n});\n```\n","source":"_posts/html清除缓存.md","raw":"---\ntitle: html 清除缓存\ntags: [html5, cache]\ndate: 2017-11-25 08:25:15\ncategories: [html5]\ndescription: 通过前端的方法清除浏览器缓存\n---\n\n## 通过设置 meta 标签清除页面缓存\n\n通过向 header 中添加以下代码可以清除页面缓存\n\n```html\n<meta http-equiv=\"Cache-Control\" content=\"no-cache, no-store, must-revalidate\" />\n<meta http-equiv=\"Pragma\" content=\"no-cache\" />\n<meta http-equiv=\"Expires\" content=\"0\" />\n```\n\n### Cache-Control 头域\n\nCache-Control 指定请求和响应遵循的缓存机制。在请求消息或响应消息中设置 Cache-Control 并不会修改另一个消息处理过程中的缓存处理过程。请求时的缓存指令包括 **no-cache**、**no-store**、**max-age**、**max-stale**、**min-fresh**、**only-if-cached**，响应消息中的指令包括 **public**、**private**、**no-cache**、**no-store**、**no-transform**、**must-revalidate**、**proxy-revalidate**、**max-age**。各个消息中的指令含义如下\n\n- Public 指示响应可被任何缓存区缓存\n- Private 指示对于单个用户的整个或部分响应消息，不能被共享缓存处理。这允许服务器仅仅描述当用户的部分响应消息，此响应消息对于其他用户的请求无效\n- no-cache 指示请求或响应消息不能缓存\n- no-store 用于防止重要的信息被无意的发布。在请求消息中发送将使得请求和响应消息都不使用缓存。\n- must-revalidation/proxy-revalidation 如果缓存的内容失效，请求必须发送到服务器/代理以进行重新验证\n- max-age 指示客户机可以接收生存期不大于指定时间（以秒为单位）的响应\n- min-fresh 指示客户机可以接收响应时间小于当前时间加上指定时间的响应\n- max-stale 指示客户机可以接收超出超时期间的响应消息。如果指定 max-stale 消息的值，那么客户机可以接收超出超时期指定值之内的响应消息。\n\n更多具体信息可以移步[百度百科](https://baike.baidu.com/item/Cache-control/1885913?fr=aladdin)查看\n\n### pragma 与 no-cache 用于定义页面缓存,不缓存页面\n\n### Expires 可以用于设定网页的到期时间。一旦网页过期，必须到服务器上重新调阅。可以把该值设置为一个早已过去的时间，那么访问此网时若重复在地址栏按回车，那么每次都会重复访问。注意：必须使用 GMT 的时间格式\n\n### 如果这些还不够，就必须从代码中做文章。可以给每个文件加一个后缀，告诉浏览器这是一个新文件。这一效果通常选择在打包自动生成\n\n## 通过异步请求更新数据\n\n### 使用 ajax 请求文件时加上请求头 **If-Modified-Since** 和 **Cache-Control**\n\n```javascript\n$.ajax({\n  url:'/',\n  dataType:'json',\n  beforeSend :function(xmlHttp){\n    xmlHttp.setRequestHeader(\"If-Modified-Since\",\"0\");\n    xmlHttp.setRequestHeader(\"Cache-Control\",\"no-cache\");\n  },\n  async:false,\n  success:function(response){\n    ...\n  }\n});\n```\n\n### 你也可以试试直接使用 **cache:false**\n\n```js\n$.ajax({\n  url:'/',\n  dataType:'json',\n  data:{},\n  cache:false,\n  ifModified :true,\n  async:false,\n  success:function(response){\n    ...\n  }\n});\n```\n","slug":"html清除缓存","published":1,"updated":"2021-06-25T11:19:55.441Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckqc904oo000nwotv2h3sez04","content":"<h2 id=\"通过设置-meta-标签清除页面缓存\"><a href=\"#通过设置-meta-标签清除页面缓存\" class=\"headerlink\" title=\"通过设置 meta 标签清除页面缓存\"></a>通过设置 meta 标签清除页面缓存</h2><p>通过向 header 中添加以下代码可以清除页面缓存</p>\n<div class=\"code-panel__wrapper\" autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\"><header class=\"mac-panel\"><span class=\"doc-path\"></span><span class=\"mac-panel__language\">HTML</span></header><figure class=\"iseeu highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">http-equiv</span>=<span class=\"string\">\"Cache-Control\"</span> <span class=\"attr\">content</span>=<span class=\"string\">\"no-cache, no-store, must-revalidate\"</span> /&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">http-equiv</span>=<span class=\"string\">\"Pragma\"</span> <span class=\"attr\">content</span>=<span class=\"string\">\"no-cache\"</span> /&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">http-equiv</span>=<span class=\"string\">\"Expires\"</span> <span class=\"attr\">content</span>=<span class=\"string\">\"0\"</span> /&gt;</span></span><br></pre></td></tr></table></figure></div>\n<h3 id=\"Cache-Control-头域\"><a href=\"#Cache-Control-头域\" class=\"headerlink\" title=\"Cache-Control 头域\"></a>Cache-Control 头域</h3><p>Cache-Control 指定请求和响应遵循的缓存机制。在请求消息或响应消息中设置 Cache-Control 并不会修改另一个消息处理过程中的缓存处理过程。请求时的缓存指令包括 <strong>no-cache</strong>、<strong>no-store</strong>、<strong>max-age</strong>、<strong>max-stale</strong>、<strong>min-fresh</strong>、<strong>only-if-cached</strong>，响应消息中的指令包括 <strong>public</strong>、<strong>private</strong>、<strong>no-cache</strong>、<strong>no-store</strong>、<strong>no-transform</strong>、<strong>must-revalidate</strong>、<strong>proxy-revalidate</strong>、<strong>max-age</strong>。各个消息中的指令含义如下</p>\n<ul>\n<li>Public 指示响应可被任何缓存区缓存</li>\n<li>Private 指示对于单个用户的整个或部分响应消息，不能被共享缓存处理。这允许服务器仅仅描述当用户的部分响应消息，此响应消息对于其他用户的请求无效</li>\n<li>no-cache 指示请求或响应消息不能缓存</li>\n<li>no-store 用于防止重要的信息被无意的发布。在请求消息中发送将使得请求和响应消息都不使用缓存。</li>\n<li>must-revalidation/proxy-revalidation 如果缓存的内容失效，请求必须发送到服务器/代理以进行重新验证</li>\n<li>max-age 指示客户机可以接收生存期不大于指定时间（以秒为单位）的响应</li>\n<li>min-fresh 指示客户机可以接收响应时间小于当前时间加上指定时间的响应</li>\n<li>max-stale 指示客户机可以接收超出超时期间的响应消息。如果指定 max-stale 消息的值，那么客户机可以接收超出超时期指定值之内的响应消息。</li>\n</ul>\n<p>更多具体信息可以移步<a href=\"https://baike.baidu.com/item/Cache-control/1885913?fr=aladdin\" target=\"_blank\" rel=\"noopener\">百度百科</a>查看</p>\n<h3 id=\"pragma-与-no-cache-用于定义页面缓存-不缓存页面\"><a href=\"#pragma-与-no-cache-用于定义页面缓存-不缓存页面\" class=\"headerlink\" title=\"pragma 与 no-cache 用于定义页面缓存,不缓存页面\"></a>pragma 与 no-cache 用于定义页面缓存,不缓存页面</h3><h3 id=\"Expires-可以用于设定网页的到期时间。一旦网页过期，必须到服务器上重新调阅。可以把该值设置为一个早已过去的时间，那么访问此网时若重复在地址栏按回车，那么每次都会重复访问。注意：必须使用-GMT-的时间格式\"><a href=\"#Expires-可以用于设定网页的到期时间。一旦网页过期，必须到服务器上重新调阅。可以把该值设置为一个早已过去的时间，那么访问此网时若重复在地址栏按回车，那么每次都会重复访问。注意：必须使用-GMT-的时间格式\" class=\"headerlink\" title=\"Expires 可以用于设定网页的到期时间。一旦网页过期，必须到服务器上重新调阅。可以把该值设置为一个早已过去的时间，那么访问此网时若重复在地址栏按回车，那么每次都会重复访问。注意：必须使用 GMT 的时间格式\"></a>Expires 可以用于设定网页的到期时间。一旦网页过期，必须到服务器上重新调阅。可以把该值设置为一个早已过去的时间，那么访问此网时若重复在地址栏按回车，那么每次都会重复访问。注意：必须使用 GMT 的时间格式</h3><h3 id=\"如果这些还不够，就必须从代码中做文章。可以给每个文件加一个后缀，告诉浏览器这是一个新文件。这一效果通常选择在打包自动生成\"><a href=\"#如果这些还不够，就必须从代码中做文章。可以给每个文件加一个后缀，告诉浏览器这是一个新文件。这一效果通常选择在打包自动生成\" class=\"headerlink\" title=\"如果这些还不够，就必须从代码中做文章。可以给每个文件加一个后缀，告诉浏览器这是一个新文件。这一效果通常选择在打包自动生成\"></a>如果这些还不够，就必须从代码中做文章。可以给每个文件加一个后缀，告诉浏览器这是一个新文件。这一效果通常选择在打包自动生成</h3><h2 id=\"通过异步请求更新数据\"><a href=\"#通过异步请求更新数据\" class=\"headerlink\" title=\"通过异步请求更新数据\"></a>通过异步请求更新数据</h2><h3 id=\"使用-ajax-请求文件时加上请求头-If-Modified-Since-和-Cache-Control\"><a href=\"#使用-ajax-请求文件时加上请求头-If-Modified-Since-和-Cache-Control\" class=\"headerlink\" title=\"使用 ajax 请求文件时加上请求头 If-Modified-Since 和 Cache-Control\"></a>使用 ajax 请求文件时加上请求头 <strong>If-Modified-Since</strong> 和 <strong>Cache-Control</strong></h3><div class=\"code-panel__wrapper\" autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\"><header class=\"mac-panel\"><span class=\"doc-path\"></span><span class=\"mac-panel__language\">JAVASCRIPT</span></header><figure class=\"iseeu highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$.ajax(&#123;</span><br><span class=\"line\">  url:<span class=\"string\">'/'</span>,</span><br><span class=\"line\">  dataType:<span class=\"string\">'json'</span>,</span><br><span class=\"line\">  beforeSend :<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">xmlHttp</span>)</span>&#123;</span><br><span class=\"line\">    xmlHttp.setRequestHeader(<span class=\"string\">\"If-Modified-Since\"</span>,<span class=\"string\">\"0\"</span>);</span><br><span class=\"line\">    xmlHttp.setRequestHeader(<span class=\"string\">\"Cache-Control\"</span>,<span class=\"string\">\"no-cache\"</span>);</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  <span class=\"keyword\">async</span>:<span class=\"literal\">false</span>,</span><br><span class=\"line\">  success:<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">response</span>)</span>&#123;</span><br><span class=\"line\">    ...</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure></div>\n<h3 id=\"你也可以试试直接使用-cache-false\"><a href=\"#你也可以试试直接使用-cache-false\" class=\"headerlink\" title=\"你也可以试试直接使用 cache:false\"></a>你也可以试试直接使用 <strong>cache:false</strong></h3><div class=\"code-panel__wrapper\" autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\"><header class=\"mac-panel\"><span class=\"doc-path\"></span><span class=\"mac-panel__language\">JS</span></header><figure class=\"iseeu highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$.ajax(&#123;</span><br><span class=\"line\">  url:<span class=\"string\">'/'</span>,</span><br><span class=\"line\">  dataType:<span class=\"string\">'json'</span>,</span><br><span class=\"line\">  data:&#123;&#125;,</span><br><span class=\"line\">  cache:<span class=\"literal\">false</span>,</span><br><span class=\"line\">  ifModified :<span class=\"literal\">true</span>,</span><br><span class=\"line\">  <span class=\"keyword\">async</span>:<span class=\"literal\">false</span>,</span><br><span class=\"line\">  success:<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">response</span>)</span>&#123;</span><br><span class=\"line\">    ...</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure></div>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"通过设置-meta-标签清除页面缓存\"><a href=\"#通过设置-meta-标签清除页面缓存\" class=\"headerlink\" title=\"通过设置 meta 标签清除页面缓存\"></a>通过设置 meta 标签清除页面缓存</h2><p>通过向 header 中添加以下代码可以清除页面缓存</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">http-equiv</span>=<span class=\"string\">\"Cache-Control\"</span> <span class=\"attr\">content</span>=<span class=\"string\">\"no-cache, no-store, must-revalidate\"</span> /&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">http-equiv</span>=<span class=\"string\">\"Pragma\"</span> <span class=\"attr\">content</span>=<span class=\"string\">\"no-cache\"</span> /&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">http-equiv</span>=<span class=\"string\">\"Expires\"</span> <span class=\"attr\">content</span>=<span class=\"string\">\"0\"</span> /&gt;</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"Cache-Control-头域\"><a href=\"#Cache-Control-头域\" class=\"headerlink\" title=\"Cache-Control 头域\"></a>Cache-Control 头域</h3><p>Cache-Control 指定请求和响应遵循的缓存机制。在请求消息或响应消息中设置 Cache-Control 并不会修改另一个消息处理过程中的缓存处理过程。请求时的缓存指令包括 <strong>no-cache</strong>、<strong>no-store</strong>、<strong>max-age</strong>、<strong>max-stale</strong>、<strong>min-fresh</strong>、<strong>only-if-cached</strong>，响应消息中的指令包括 <strong>public</strong>、<strong>private</strong>、<strong>no-cache</strong>、<strong>no-store</strong>、<strong>no-transform</strong>、<strong>must-revalidate</strong>、<strong>proxy-revalidate</strong>、<strong>max-age</strong>。各个消息中的指令含义如下</p>\n<ul>\n<li>Public 指示响应可被任何缓存区缓存</li>\n<li>Private 指示对于单个用户的整个或部分响应消息，不能被共享缓存处理。这允许服务器仅仅描述当用户的部分响应消息，此响应消息对于其他用户的请求无效</li>\n<li>no-cache 指示请求或响应消息不能缓存</li>\n<li>no-store 用于防止重要的信息被无意的发布。在请求消息中发送将使得请求和响应消息都不使用缓存。</li>\n<li>must-revalidation/proxy-revalidation 如果缓存的内容失效，请求必须发送到服务器/代理以进行重新验证</li>\n<li>max-age 指示客户机可以接收生存期不大于指定时间（以秒为单位）的响应</li>\n<li>min-fresh 指示客户机可以接收响应时间小于当前时间加上指定时间的响应</li>\n<li>max-stale 指示客户机可以接收超出超时期间的响应消息。如果指定 max-stale 消息的值，那么客户机可以接收超出超时期指定值之内的响应消息。</li>\n</ul>\n<p>更多具体信息可以移步<a href=\"https://baike.baidu.com/item/Cache-control/1885913?fr=aladdin\" target=\"_blank\" rel=\"noopener\">百度百科</a>查看</p>\n<h3 id=\"pragma-与-no-cache-用于定义页面缓存-不缓存页面\"><a href=\"#pragma-与-no-cache-用于定义页面缓存-不缓存页面\" class=\"headerlink\" title=\"pragma 与 no-cache 用于定义页面缓存,不缓存页面\"></a>pragma 与 no-cache 用于定义页面缓存,不缓存页面</h3><h3 id=\"Expires-可以用于设定网页的到期时间。一旦网页过期，必须到服务器上重新调阅。可以把该值设置为一个早已过去的时间，那么访问此网时若重复在地址栏按回车，那么每次都会重复访问。注意：必须使用-GMT-的时间格式\"><a href=\"#Expires-可以用于设定网页的到期时间。一旦网页过期，必须到服务器上重新调阅。可以把该值设置为一个早已过去的时间，那么访问此网时若重复在地址栏按回车，那么每次都会重复访问。注意：必须使用-GMT-的时间格式\" class=\"headerlink\" title=\"Expires 可以用于设定网页的到期时间。一旦网页过期，必须到服务器上重新调阅。可以把该值设置为一个早已过去的时间，那么访问此网时若重复在地址栏按回车，那么每次都会重复访问。注意：必须使用 GMT 的时间格式\"></a>Expires 可以用于设定网页的到期时间。一旦网页过期，必须到服务器上重新调阅。可以把该值设置为一个早已过去的时间，那么访问此网时若重复在地址栏按回车，那么每次都会重复访问。注意：必须使用 GMT 的时间格式</h3><h3 id=\"如果这些还不够，就必须从代码中做文章。可以给每个文件加一个后缀，告诉浏览器这是一个新文件。这一效果通常选择在打包自动生成\"><a href=\"#如果这些还不够，就必须从代码中做文章。可以给每个文件加一个后缀，告诉浏览器这是一个新文件。这一效果通常选择在打包自动生成\" class=\"headerlink\" title=\"如果这些还不够，就必须从代码中做文章。可以给每个文件加一个后缀，告诉浏览器这是一个新文件。这一效果通常选择在打包自动生成\"></a>如果这些还不够，就必须从代码中做文章。可以给每个文件加一个后缀，告诉浏览器这是一个新文件。这一效果通常选择在打包自动生成</h3><h2 id=\"通过异步请求更新数据\"><a href=\"#通过异步请求更新数据\" class=\"headerlink\" title=\"通过异步请求更新数据\"></a>通过异步请求更新数据</h2><h3 id=\"使用-ajax-请求文件时加上请求头-If-Modified-Since-和-Cache-Control\"><a href=\"#使用-ajax-请求文件时加上请求头-If-Modified-Since-和-Cache-Control\" class=\"headerlink\" title=\"使用 ajax 请求文件时加上请求头 If-Modified-Since 和 Cache-Control\"></a>使用 ajax 请求文件时加上请求头 <strong>If-Modified-Since</strong> 和 <strong>Cache-Control</strong></h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$.ajax(&#123;</span><br><span class=\"line\">  url:<span class=\"string\">'/'</span>,</span><br><span class=\"line\">  dataType:<span class=\"string\">'json'</span>,</span><br><span class=\"line\">  beforeSend :<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">xmlHttp</span>)</span>&#123;</span><br><span class=\"line\">    xmlHttp.setRequestHeader(<span class=\"string\">\"If-Modified-Since\"</span>,<span class=\"string\">\"0\"</span>);</span><br><span class=\"line\">    xmlHttp.setRequestHeader(<span class=\"string\">\"Cache-Control\"</span>,<span class=\"string\">\"no-cache\"</span>);</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  <span class=\"keyword\">async</span>:<span class=\"literal\">false</span>,</span><br><span class=\"line\">  success:<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">response</span>)</span>&#123;</span><br><span class=\"line\">    ...</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<h3 id=\"你也可以试试直接使用-cache-false\"><a href=\"#你也可以试试直接使用-cache-false\" class=\"headerlink\" title=\"你也可以试试直接使用 cache:false\"></a>你也可以试试直接使用 <strong>cache:false</strong></h3><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$.ajax(&#123;</span><br><span class=\"line\">  url:<span class=\"string\">'/'</span>,</span><br><span class=\"line\">  dataType:<span class=\"string\">'json'</span>,</span><br><span class=\"line\">  data:&#123;&#125;,</span><br><span class=\"line\">  cache:<span class=\"literal\">false</span>,</span><br><span class=\"line\">  ifModified :<span class=\"literal\">true</span>,</span><br><span class=\"line\">  <span class=\"keyword\">async</span>:<span class=\"literal\">false</span>,</span><br><span class=\"line\">  success:<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">response</span>)</span>&#123;</span><br><span class=\"line\">    ...</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n"},{"title":"markdown语法大全","date":"2019-11-29T01:22:15.000Z","description":"竟然还有开发不懂markdown？","_content":"## 引言\n\n最近新入职一家公司，目前尚没有自己的项目架构和开发规范。于是我把这块负责起来，搭建了初始的开发脚手架和一些开发规范。可是当我发布之后，让大家跟我一起修改，竟然没有一个人能懂我写的是什么！！what？？还有比markdown更简单易懂的语言吗？还能有开发人员不会markdown语法？那大家平时是怎么交流的，上传一张word文档到git仓库，大家一起改吗？这篇文章主要讲述markdown的语法，其实并不复杂，网上这类教程也挺多的，主要是写给公司开发的，同时也为了巩固markdown语法，众所周知，因为一些事情，我已经半年没有写过博客了....\n\n> 因为语法是直接生效的，导致有些地方不方便做比对。建议[拷贝源代码](https://github.com/lost-dream/blog/blob/src/source/_posts/markdown%E8%AF%AD%E6%B3%95.md)，然后放在解析工具里对比查看，学习效果翻倍。\n>> 常见的解析工具有 简书、github、MarkDownPad、有道云笔记，如果开发者使用IDE有安装markdown预览的插件也可以直接在编辑器查看。\n![1.png](/blog/img/markdown-eg.jpeg)\n\n## 基本语法\n\n### 设置字体样式\n\n```markdown\n*这是切斜文字*\n**这是加粗文字**\n***这是加粗过的斜体字***\n~~这是添加删除线的文字~~\n```\n\n*这是切斜文字*\n**这是加粗文字**\n***这是加粗过的斜体字***\n~~这是添加删除线的文字~~\n\n### 添加标题\n\n```markdown\n# 这是一级标题\n## 这是二级标题\n### 这是三级标题\n#### 这是四级标题\n##### 这是五级标题\n###### 这是六级标题\n```\n\n### 插入链接\n\n```markdown\n[百度](https://www.baidu.com)\n```\n\n[百度](https://www.baidu.com)\n\n### 插入图片\n\n```markdown\n![图片加载失败时显示的文字，等同于img标签的alt属性](1.png)\n```\n\n插入的图片地址是本地图片，也可以是网络资源。而且图片加载失败是现实的文字可以为空`![](1.png)`，就和img标签的alt属性不是必填的一样。\n\n### 插入代码\n\n`使用一个反引号标记的是一个行内的代码`\n\n```markdown\n  使用三个反引号包起来的是一大段代码块，记得在开始位置添加代码段的语法\n```\n\n### 插入分割线\n\n在单独的一行中使用至少三个星号(*)、减号(-)、下划线(_)，都可以插入一条分割线\n\n```markdown\n***\n---\n___\n```\n\n***\n---\n___\n\n### 插入引用\n\n```markdown\n> 在被引用的文本前面加入一个>就可以引用一段文本了\n\n> 引用也是可以嵌套的\n>> 用打包的大小评判代码的质量，就像用飞机的重量评判飞机的质量\n>>> 上一段是我瞎编的，其实应该是代码行数\n\n> **引用**里也可以使用*任何*`markdown`的语法\n```\n\n> 在被引用的文本前面加入一个>就可以引用一段文本了\n> 引用也是可以嵌套的\n>> 用打包的大小评判代码的质量，就像用飞机的重量评判飞机的质量\n>>> 上一段是我瞎编的，其实应该是代码行数\n\n**引用**里也可以使用*任何*`markdown`的语法\n\n### 插入列表\n\n#### 有序列表\n\n使用数字和一个英文句点表示有序列表。<font color=\"red\">英文句点后面一定要有空格。</font>\n\n```markdown\n1. list1\n2. list2\n3. list3\n```\n\n1. list1\n2. list2\n3. list3\n\n#### 无序列表\n\n使用 *，+，- 表示无序列表。<font color=\"red\">符号后面一定要有空格。</font>\n\n```markdown\n+ list1\n+ list2\n+ list3\n\n- list1\n- list2\n- list3\n\n* list1\n* list2\n* list3\n```\n\n+ list1\n+ list2\n+ list3\n\n- list1\n- list2\n- list3\n\n* list1\n* list2\n* list3\n\n无序列表是可以和无序列表、有序列表嵌套使用的\n\n* 目录\n* 第一章\n  + 第一节\n    1. 第一讲\n    2. 第二讲\n  + 第二节\n  + 第三节\n* 第二章\n* 第三章\n\n需要注意的是和html标签一样，每一层级的标识符必须是相同的，否则会有问题\n\n另外， 列表也可以包含任意markdown元素，但是要注意：\n1. 加粗效果不能直接用于列表标题里面，但是可以嵌套在列表里面混合使用。\n2. 列表中包含代码块（前面加2个tab或者8个空格，并且需要空一行，否则不显示）。\n\n### 插入表格\n\n表格的写法十分简单 {&#35;table}\n\n```markdown\n|姓名|年龄|性别|\n|---|---|---|\n|张三|1|男|\n|李四|2|女|\n```\n\n我们可以指定表格单元格的对齐方式，在表格第二行添加冒号，在左边表示左对齐，右边表示有对齐，两边都有表示居中。\n\n```markdown\n|姓名(左对齐)|年龄(居中)|性别(右对齐)|\n|:---|:---:|---:|\n|张三|1|男|\n|李四|2|女|\n```\n\n|姓名(左对齐)|年龄(居中)|性别(右对齐)|\n|:---|:---:|---:|\n|张三|1|男|\n|李四|2|女|\n\n### 插入字体、颜色和字号\n\nmarkdown本身不支持修改字体、颜色、字号等功能，但允许通过内嵌html标签来实现\n\n```markdown\n<font face=\"黑体\">黑体字</font>\n<font face=\"黑体\" color=red>黑体字，并且颜色是红色的</font>\n<font face=\"黑体\" color=red size=7>黑体字，并且颜色是红色的，并且尺寸为7</font>\n\n```\n\n<font face=\"黑体\">黑体字</font>\n<font face=\"黑体\" color=red>黑体字，并且颜色是红色的</font>\n<font face=\"黑体\" color=red size=7>黑体字，并且颜色是红色的，并且尺寸为7</font>\n\nface可以是任何可以识别的字体，color可以是任何已知的颜色名、16进制颜色值，size可以是1-7之间的数字，默认为3\n\n## 高级用法\n\n### 锚点\n\n一个成熟的前端应该不需要解释什么是锚点，[跳转到表格](#table)\n\n```markdown\n需要跳转的位置{#index}\n[点击跳转](#index)\n```\n\n### 注脚\n\n注脚可以放在文档的任意位置，但一般我们把它放在文档最后。而且关于注脚[^1]每个编辑器解析的方式都有所不同。\n\n```markdown\n使用markdown[^1]可以提升开发效率\n\n[^1]: markdown是一种纯文本标记语言\n```\n\n### todo-list\n\n使用带有 [ ] 或 [x] （未完成或已完成）项的列表语法撰写一个待办事宜列表。\n\n```markdown\n+ [ ] 唱\n+ [ ] 跳\n+ [ ] rap\n+ [x] 篮球\n```\n\n***\n\n+ [ ] 唱\n+ [ ] 跳\n+ [ ] rap\n+ [x] 篮球\n+ [ ] music\n\n### 流程图\n\n```flow\nst=>start: 开始\nop1=>operation: my operation\nc=>condition: Yes or No?\ne=>end: 结束\n```\n\nst->op1->c\nc(yes)->e\nc(no)->op1\n\n### 时序图\n\n```seq\nAlice->Bob: Hello, Bob, how are you?\nNote right of Bob: Bob thinks\nBob->Alice: I am fine, and you?\n```\n\n### 数学公式\n\n#### 行内公式\n\n使用两个`$`符号引用公式\n\n```markdown\n质能守恒方程：$E=mc^2$\n```\n\n质能守恒方程：$E=mc^2$\n\n#### 整行公式\n\n使用两个`$$`符号引用整行公式\n\n```markdown\n$$\\sum_{i=1}^n a_i=0$$\n\n$$f(x_1,x_x,\\ldots,x_n) = x_1^2 + x_2^2 + \\cdots + x_n^2$$\n\n$$\\sum^{j-1}_{k=0}{\\widehat{\\gamma}_{kj}z_k}$$\n```\n\n$$\\sum_{i=1}^n a_i=0$$\n\n$$f(x_1,x_x,\\ldots,x_n) = x_1^2 + x_2^2 + \\cdots + x_n^2$$\n\n$$\\sum^{j-1}_{k=0}{\\widehat{\\gamma}_{kj}z_k}$$\n\n## 写在最后\n\n高级用法中的例子有的解析器是可以解析的，有的完全解析不了，有的解析的规则不尽相同。因此在本博客中无法正确展示，这并不是因为写的不对导致的，看到这里的人，依然建议你下载源代码，放到对应的解析器里可以看到完整的效果。事实上，我们平时使用markdown，大部分还是在用基本语法，高级语法的使用场景是很少的。\n\n[^1]: 这里应该是对注脚这个名词的解释，但我完全懒得解释他。\n","source":"_posts/markdown语法.md","raw":"---\ntitle: markdown语法大全\ntags: [markdown, blog]\ndate: 2019-11-29 09:22:15\ncategories: [markdown]\ndescription: 竟然还有开发不懂markdown？\n---\n## 引言\n\n最近新入职一家公司，目前尚没有自己的项目架构和开发规范。于是我把这块负责起来，搭建了初始的开发脚手架和一些开发规范。可是当我发布之后，让大家跟我一起修改，竟然没有一个人能懂我写的是什么！！what？？还有比markdown更简单易懂的语言吗？还能有开发人员不会markdown语法？那大家平时是怎么交流的，上传一张word文档到git仓库，大家一起改吗？这篇文章主要讲述markdown的语法，其实并不复杂，网上这类教程也挺多的，主要是写给公司开发的，同时也为了巩固markdown语法，众所周知，因为一些事情，我已经半年没有写过博客了....\n\n> 因为语法是直接生效的，导致有些地方不方便做比对。建议[拷贝源代码](https://github.com/lost-dream/blog/blob/src/source/_posts/markdown%E8%AF%AD%E6%B3%95.md)，然后放在解析工具里对比查看，学习效果翻倍。\n>> 常见的解析工具有 简书、github、MarkDownPad、有道云笔记，如果开发者使用IDE有安装markdown预览的插件也可以直接在编辑器查看。\n![1.png](/blog/img/markdown-eg.jpeg)\n\n## 基本语法\n\n### 设置字体样式\n\n```markdown\n*这是切斜文字*\n**这是加粗文字**\n***这是加粗过的斜体字***\n~~这是添加删除线的文字~~\n```\n\n*这是切斜文字*\n**这是加粗文字**\n***这是加粗过的斜体字***\n~~这是添加删除线的文字~~\n\n### 添加标题\n\n```markdown\n# 这是一级标题\n## 这是二级标题\n### 这是三级标题\n#### 这是四级标题\n##### 这是五级标题\n###### 这是六级标题\n```\n\n### 插入链接\n\n```markdown\n[百度](https://www.baidu.com)\n```\n\n[百度](https://www.baidu.com)\n\n### 插入图片\n\n```markdown\n![图片加载失败时显示的文字，等同于img标签的alt属性](1.png)\n```\n\n插入的图片地址是本地图片，也可以是网络资源。而且图片加载失败是现实的文字可以为空`![](1.png)`，就和img标签的alt属性不是必填的一样。\n\n### 插入代码\n\n`使用一个反引号标记的是一个行内的代码`\n\n```markdown\n  使用三个反引号包起来的是一大段代码块，记得在开始位置添加代码段的语法\n```\n\n### 插入分割线\n\n在单独的一行中使用至少三个星号(*)、减号(-)、下划线(_)，都可以插入一条分割线\n\n```markdown\n***\n---\n___\n```\n\n***\n---\n___\n\n### 插入引用\n\n```markdown\n> 在被引用的文本前面加入一个>就可以引用一段文本了\n\n> 引用也是可以嵌套的\n>> 用打包的大小评判代码的质量，就像用飞机的重量评判飞机的质量\n>>> 上一段是我瞎编的，其实应该是代码行数\n\n> **引用**里也可以使用*任何*`markdown`的语法\n```\n\n> 在被引用的文本前面加入一个>就可以引用一段文本了\n> 引用也是可以嵌套的\n>> 用打包的大小评判代码的质量，就像用飞机的重量评判飞机的质量\n>>> 上一段是我瞎编的，其实应该是代码行数\n\n**引用**里也可以使用*任何*`markdown`的语法\n\n### 插入列表\n\n#### 有序列表\n\n使用数字和一个英文句点表示有序列表。<font color=\"red\">英文句点后面一定要有空格。</font>\n\n```markdown\n1. list1\n2. list2\n3. list3\n```\n\n1. list1\n2. list2\n3. list3\n\n#### 无序列表\n\n使用 *，+，- 表示无序列表。<font color=\"red\">符号后面一定要有空格。</font>\n\n```markdown\n+ list1\n+ list2\n+ list3\n\n- list1\n- list2\n- list3\n\n* list1\n* list2\n* list3\n```\n\n+ list1\n+ list2\n+ list3\n\n- list1\n- list2\n- list3\n\n* list1\n* list2\n* list3\n\n无序列表是可以和无序列表、有序列表嵌套使用的\n\n* 目录\n* 第一章\n  + 第一节\n    1. 第一讲\n    2. 第二讲\n  + 第二节\n  + 第三节\n* 第二章\n* 第三章\n\n需要注意的是和html标签一样，每一层级的标识符必须是相同的，否则会有问题\n\n另外， 列表也可以包含任意markdown元素，但是要注意：\n1. 加粗效果不能直接用于列表标题里面，但是可以嵌套在列表里面混合使用。\n2. 列表中包含代码块（前面加2个tab或者8个空格，并且需要空一行，否则不显示）。\n\n### 插入表格\n\n表格的写法十分简单 {&#35;table}\n\n```markdown\n|姓名|年龄|性别|\n|---|---|---|\n|张三|1|男|\n|李四|2|女|\n```\n\n我们可以指定表格单元格的对齐方式，在表格第二行添加冒号，在左边表示左对齐，右边表示有对齐，两边都有表示居中。\n\n```markdown\n|姓名(左对齐)|年龄(居中)|性别(右对齐)|\n|:---|:---:|---:|\n|张三|1|男|\n|李四|2|女|\n```\n\n|姓名(左对齐)|年龄(居中)|性别(右对齐)|\n|:---|:---:|---:|\n|张三|1|男|\n|李四|2|女|\n\n### 插入字体、颜色和字号\n\nmarkdown本身不支持修改字体、颜色、字号等功能，但允许通过内嵌html标签来实现\n\n```markdown\n<font face=\"黑体\">黑体字</font>\n<font face=\"黑体\" color=red>黑体字，并且颜色是红色的</font>\n<font face=\"黑体\" color=red size=7>黑体字，并且颜色是红色的，并且尺寸为7</font>\n\n```\n\n<font face=\"黑体\">黑体字</font>\n<font face=\"黑体\" color=red>黑体字，并且颜色是红色的</font>\n<font face=\"黑体\" color=red size=7>黑体字，并且颜色是红色的，并且尺寸为7</font>\n\nface可以是任何可以识别的字体，color可以是任何已知的颜色名、16进制颜色值，size可以是1-7之间的数字，默认为3\n\n## 高级用法\n\n### 锚点\n\n一个成熟的前端应该不需要解释什么是锚点，[跳转到表格](#table)\n\n```markdown\n需要跳转的位置{#index}\n[点击跳转](#index)\n```\n\n### 注脚\n\n注脚可以放在文档的任意位置，但一般我们把它放在文档最后。而且关于注脚[^1]每个编辑器解析的方式都有所不同。\n\n```markdown\n使用markdown[^1]可以提升开发效率\n\n[^1]: markdown是一种纯文本标记语言\n```\n\n### todo-list\n\n使用带有 [ ] 或 [x] （未完成或已完成）项的列表语法撰写一个待办事宜列表。\n\n```markdown\n+ [ ] 唱\n+ [ ] 跳\n+ [ ] rap\n+ [x] 篮球\n```\n\n***\n\n+ [ ] 唱\n+ [ ] 跳\n+ [ ] rap\n+ [x] 篮球\n+ [ ] music\n\n### 流程图\n\n```flow\nst=>start: 开始\nop1=>operation: my operation\nc=>condition: Yes or No?\ne=>end: 结束\n```\n\nst->op1->c\nc(yes)->e\nc(no)->op1\n\n### 时序图\n\n```seq\nAlice->Bob: Hello, Bob, how are you?\nNote right of Bob: Bob thinks\nBob->Alice: I am fine, and you?\n```\n\n### 数学公式\n\n#### 行内公式\n\n使用两个`$`符号引用公式\n\n```markdown\n质能守恒方程：$E=mc^2$\n```\n\n质能守恒方程：$E=mc^2$\n\n#### 整行公式\n\n使用两个`$$`符号引用整行公式\n\n```markdown\n$$\\sum_{i=1}^n a_i=0$$\n\n$$f(x_1,x_x,\\ldots,x_n) = x_1^2 + x_2^2 + \\cdots + x_n^2$$\n\n$$\\sum^{j-1}_{k=0}{\\widehat{\\gamma}_{kj}z_k}$$\n```\n\n$$\\sum_{i=1}^n a_i=0$$\n\n$$f(x_1,x_x,\\ldots,x_n) = x_1^2 + x_2^2 + \\cdots + x_n^2$$\n\n$$\\sum^{j-1}_{k=0}{\\widehat{\\gamma}_{kj}z_k}$$\n\n## 写在最后\n\n高级用法中的例子有的解析器是可以解析的，有的完全解析不了，有的解析的规则不尽相同。因此在本博客中无法正确展示，这并不是因为写的不对导致的，看到这里的人，依然建议你下载源代码，放到对应的解析器里可以看到完整的效果。事实上，我们平时使用markdown，大部分还是在用基本语法，高级语法的使用场景是很少的。\n\n[^1]: 这里应该是对注脚这个名词的解释，但我完全懒得解释他。\n","slug":"markdown语法","published":1,"updated":"2021-06-25T11:19:55.442Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckqc904oo000pwotv1rab80db","content":"<h2 id=\"引言\"><a href=\"#引言\" class=\"headerlink\" title=\"引言\"></a>引言</h2><p>最近新入职一家公司，目前尚没有自己的项目架构和开发规范。于是我把这块负责起来，搭建了初始的开发脚手架和一些开发规范。可是当我发布之后，让大家跟我一起修改，竟然没有一个人能懂我写的是什么！！what？？还有比markdown更简单易懂的语言吗？还能有开发人员不会markdown语法？那大家平时是怎么交流的，上传一张word文档到git仓库，大家一起改吗？这篇文章主要讲述markdown的语法，其实并不复杂，网上这类教程也挺多的，主要是写给公司开发的，同时也为了巩固markdown语法，众所周知，因为一些事情，我已经半年没有写过博客了….</p>\n<blockquote>\n<p>因为语法是直接生效的，导致有些地方不方便做比对。建议<a href=\"https://github.com/lost-dream/blog/blob/src/source/_posts/markdown%E8%AF%AD%E6%B3%95.md\" target=\"_blank\" rel=\"noopener\">拷贝源代码</a>，然后放在解析工具里对比查看，学习效果翻倍。</p>\n<blockquote>\n<p>常见的解析工具有 简书、github、MarkDownPad、有道云笔记，如果开发者使用IDE有安装markdown预览的插件也可以直接在编辑器查看。<br><img src=\"/blog/img/markdown-eg.jpeg\" alt=\"1.png\"></p>\n</blockquote>\n</blockquote>\n<h2 id=\"基本语法\"><a href=\"#基本语法\" class=\"headerlink\" title=\"基本语法\"></a>基本语法</h2><h3 id=\"设置字体样式\"><a href=\"#设置字体样式\" class=\"headerlink\" title=\"设置字体样式\"></a>设置字体样式</h3><div class=\"code-panel__wrapper\" autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\"><header class=\"mac-panel\"><span class=\"doc-path\"></span><span class=\"mac-panel__language\">MARKDOWN</span></header><figure class=\"iseeu highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"emphasis\">*这是切斜文字*</span></span><br><span class=\"line\"><span class=\"strong\">**这是加粗文字**</span></span><br><span class=\"line\"><span class=\"strong\">***这是加粗过的斜体字**</span>*</span><br><span class=\"line\">~~这是添加删除线的文字~~</span><br></pre></td></tr></table></figure></div>\n<p><em>这是切斜文字</em><br><strong>这是加粗文字</strong><br><strong><em>这是加粗过的斜体字</em></strong><br><del>这是添加删除线的文字</del></p>\n<h3 id=\"添加标题\"><a href=\"#添加标题\" class=\"headerlink\" title=\"添加标题\"></a>添加标题</h3><div class=\"code-panel__wrapper\" autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\"><header class=\"mac-panel\"><span class=\"doc-path\"></span><span class=\"mac-panel__language\">MARKDOWN</span></header><figure class=\"iseeu highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"section\"># 这是一级标题</span></span><br><span class=\"line\"><span class=\"section\">## 这是二级标题</span></span><br><span class=\"line\"><span class=\"section\">### 这是三级标题</span></span><br><span class=\"line\"><span class=\"section\">#### 这是四级标题</span></span><br><span class=\"line\"><span class=\"section\">##### 这是五级标题</span></span><br><span class=\"line\"><span class=\"section\">###### 这是六级标题</span></span><br></pre></td></tr></table></figure></div>\n<h3 id=\"插入链接\"><a href=\"#插入链接\" class=\"headerlink\" title=\"插入链接\"></a>插入链接</h3><div class=\"code-panel__wrapper\" autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\"><header class=\"mac-panel\"><span class=\"doc-path\"></span><span class=\"mac-panel__language\">MARKDOWN</span></header><figure class=\"iseeu highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[<span class=\"string\">百度</span>](<span class=\"link\">https://www.baidu.com</span>)</span><br></pre></td></tr></table></figure></div>\n<p><a href=\"https://www.baidu.com\" target=\"_blank\" rel=\"noopener\">百度</a></p>\n<h3 id=\"插入图片\"><a href=\"#插入图片\" class=\"headerlink\" title=\"插入图片\"></a>插入图片</h3><div class=\"code-panel__wrapper\" autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\"><header class=\"mac-panel\"><span class=\"doc-path\"></span><span class=\"mac-panel__language\">MARKDOWN</span></header><figure class=\"iseeu highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">![<span class=\"string\">图片加载失败时显示的文字，等同于img标签的alt属性</span>](<span class=\"link\">1.png</span>)</span><br></pre></td></tr></table></figure></div>\n<p>插入的图片地址是本地图片，也可以是网络资源。而且图片加载失败是现实的文字可以为空<code>![](1.png)</code>，就和img标签的alt属性不是必填的一样。</p>\n<h3 id=\"插入代码\"><a href=\"#插入代码\" class=\"headerlink\" title=\"插入代码\"></a>插入代码</h3><p><code>使用一个反引号标记的是一个行内的代码</code></p>\n<div class=\"code-panel__wrapper\" autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\"><header class=\"mac-panel\"><span class=\"doc-path\"></span><span class=\"mac-panel__language\">MARKDOWN</span></header><figure class=\"iseeu highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">使用三个反引号包起来的是一大段代码块，记得在开始位置添加代码段的语法</span><br></pre></td></tr></table></figure></div>\n<h3 id=\"插入分割线\"><a href=\"#插入分割线\" class=\"headerlink\" title=\"插入分割线\"></a>插入分割线</h3><p>在单独的一行中使用至少三个星号(*)、减号(-)、下划线(_)，都可以插入一条分割线</p>\n<div class=\"code-panel__wrapper\" autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\"><header class=\"mac-panel\"><span class=\"doc-path\"></span><span class=\"mac-panel__language\">MARKDOWN</span></header><figure class=\"iseeu highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"emphasis\">***</span></span><br><span class=\"line\">---</span><br><span class=\"line\"><span class=\"emphasis\">___</span></span><br></pre></td></tr></table></figure></div>\n<hr>\n<hr>\n<hr>\n<h3 id=\"插入引用\"><a href=\"#插入引用\" class=\"headerlink\" title=\"插入引用\"></a>插入引用</h3><div class=\"code-panel__wrapper\" autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\"><header class=\"mac-panel\"><span class=\"doc-path\"></span><span class=\"mac-panel__language\">MARKDOWN</span></header><figure class=\"iseeu highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"quote\">&gt; 在被引用的文本前面加入一个&gt;就可以引用一段文本了</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"quote\">&gt; 引用也是可以嵌套的</span></span><br><span class=\"line\">&gt;&gt; 用打包的大小评判代码的质量，就像用飞机的重量评判飞机的质量</span><br><span class=\"line\">&gt;&gt;&gt; 上一段是我瞎编的，其实应该是代码行数</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"quote\">&gt; **引用**里也可以使用*任何*`markdown`的语法</span></span><br></pre></td></tr></table></figure></div>\n<blockquote>\n<p>在被引用的文本前面加入一个&gt;就可以引用一段文本了<br>引用也是可以嵌套的</p>\n<blockquote>\n<p>用打包的大小评判代码的质量，就像用飞机的重量评判飞机的质量</p>\n<blockquote>\n<p>上一段是我瞎编的，其实应该是代码行数</p>\n</blockquote>\n</blockquote>\n</blockquote>\n<p><strong>引用</strong>里也可以使用<em>任何</em><code>markdown</code>的语法</p>\n<h3 id=\"插入列表\"><a href=\"#插入列表\" class=\"headerlink\" title=\"插入列表\"></a>插入列表</h3><h4 id=\"有序列表\"><a href=\"#有序列表\" class=\"headerlink\" title=\"有序列表\"></a>有序列表</h4><p>使用数字和一个英文句点表示有序列表。<font color=\"red\">英文句点后面一定要有空格。</font></p>\n<div class=\"code-panel__wrapper\" autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\"><header class=\"mac-panel\"><span class=\"doc-path\"></span><span class=\"mac-panel__language\">MARKDOWN</span></header><figure class=\"iseeu highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"bullet\">1. </span>list1</span><br><span class=\"line\"><span class=\"bullet\">2. </span>list2</span><br><span class=\"line\"><span class=\"bullet\">3. </span>list3</span><br></pre></td></tr></table></figure></div>\n<ol>\n<li>list1</li>\n<li>list2</li>\n<li>list3</li>\n</ol>\n<h4 id=\"无序列表\"><a href=\"#无序列表\" class=\"headerlink\" title=\"无序列表\"></a>无序列表</h4><p>使用 *，+，- 表示无序列表。<font color=\"red\">符号后面一定要有空格。</font></p>\n<div class=\"code-panel__wrapper\" autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\"><header class=\"mac-panel\"><span class=\"doc-path\"></span><span class=\"mac-panel__language\">MARKDOWN</span></header><figure class=\"iseeu highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"bullet\">+ </span>list1</span><br><span class=\"line\"><span class=\"bullet\">+ </span>list2</span><br><span class=\"line\"><span class=\"bullet\">+ </span>list3</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"bullet\">- </span>list1</span><br><span class=\"line\"><span class=\"bullet\">- </span>list2</span><br><span class=\"line\"><span class=\"bullet\">- </span>list3</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"bullet\">* </span>list1</span><br><span class=\"line\"><span class=\"bullet\">* </span>list2</span><br><span class=\"line\"><span class=\"bullet\">* </span>list3</span><br></pre></td></tr></table></figure></div>\n<ul>\n<li>list1</li>\n<li>list2</li>\n<li>list3</li>\n</ul>\n<ul>\n<li>list1</li>\n<li>list2</li>\n<li>list3</li>\n</ul>\n<ul>\n<li>list1</li>\n<li>list2</li>\n<li>list3</li>\n</ul>\n<p>无序列表是可以和无序列表、有序列表嵌套使用的</p>\n<ul>\n<li>目录</li>\n<li>第一章<ul>\n<li>第一节<ol>\n<li>第一讲</li>\n<li>第二讲</li>\n</ol>\n</li>\n<li>第二节</li>\n<li>第三节</li>\n</ul>\n</li>\n<li>第二章</li>\n<li>第三章</li>\n</ul>\n<p>需要注意的是和html标签一样，每一层级的标识符必须是相同的，否则会有问题</p>\n<p>另外， 列表也可以包含任意markdown元素，但是要注意：</p>\n<ol>\n<li>加粗效果不能直接用于列表标题里面，但是可以嵌套在列表里面混合使用。</li>\n<li>列表中包含代码块（前面加2个tab或者8个空格，并且需要空一行，否则不显示）。</li>\n</ol>\n<h3 id=\"插入表格\"><a href=\"#插入表格\" class=\"headerlink\" title=\"插入表格\"></a>插入表格</h3><p>表格的写法十分简单 {&#35;table}</p>\n<div class=\"code-panel__wrapper\" autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\"><header class=\"mac-panel\"><span class=\"doc-path\"></span><span class=\"mac-panel__language\">MARKDOWN</span></header><figure class=\"iseeu highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">|姓名|年龄|性别|</span><br><span class=\"line\">|---|---|---|</span><br><span class=\"line\">|张三|1|男|</span><br><span class=\"line\">|李四|2|女|</span><br></pre></td></tr></table></figure></div>\n<p>我们可以指定表格单元格的对齐方式，在表格第二行添加冒号，在左边表示左对齐，右边表示有对齐，两边都有表示居中。</p>\n<div class=\"code-panel__wrapper\" autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\"><header class=\"mac-panel\"><span class=\"doc-path\"></span><span class=\"mac-panel__language\">MARKDOWN</span></header><figure class=\"iseeu highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">|姓名(左对齐)|年龄(居中)|性别(右对齐)|</span><br><span class=\"line\">|:---|:---:|---:|</span><br><span class=\"line\">|张三|1|男|</span><br><span class=\"line\">|李四|2|女|</span><br></pre></td></tr></table></figure></div>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">姓名(左对齐)</th>\n<th style=\"text-align:center\">年龄(居中)</th>\n<th style=\"text-align:right\">性别(右对齐)</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">张三</td>\n<td style=\"text-align:center\">1</td>\n<td style=\"text-align:right\">男</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">李四</td>\n<td style=\"text-align:center\">2</td>\n<td style=\"text-align:right\">女</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"插入字体、颜色和字号\"><a href=\"#插入字体、颜色和字号\" class=\"headerlink\" title=\"插入字体、颜色和字号\"></a>插入字体、颜色和字号</h3><p>markdown本身不支持修改字体、颜色、字号等功能，但允许通过内嵌html标签来实现</p>\n<div class=\"code-panel__wrapper\" autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\"><header class=\"mac-panel\"><span class=\"doc-path\"></span><span class=\"mac-panel__language\">MARKDOWN</span></header><figure class=\"iseeu highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">font</span> <span class=\"attr\">face</span>=<span class=\"string\">\"黑体\"</span>&gt;</span></span>黑体字<span class=\"xml\"><span class=\"tag\">&lt;/<span class=\"name\">font</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">font</span> <span class=\"attr\">face</span>=<span class=\"string\">\"黑体\"</span> <span class=\"attr\">color</span>=<span class=\"string\">red</span>&gt;</span></span>黑体字，并且颜色是红色的<span class=\"xml\"><span class=\"tag\">&lt;/<span class=\"name\">font</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">font</span> <span class=\"attr\">face</span>=<span class=\"string\">\"黑体\"</span> <span class=\"attr\">color</span>=<span class=\"string\">red</span> <span class=\"attr\">size</span>=<span class=\"string\">7</span>&gt;</span></span>黑体字，并且颜色是红色的，并且尺寸为7<span class=\"xml\"><span class=\"tag\">&lt;/<span class=\"name\">font</span>&gt;</span></span></span><br></pre></td></tr></table></figure></div>\n<font face=\"黑体\">黑体字</font><br><font face=\"黑体\" color=\"red\">黑体字，并且颜色是红色的</font><br><font face=\"黑体\" color=\"red\" size=\"7\">黑体字，并且颜色是红色的，并且尺寸为7</font>\n\n<p>face可以是任何可以识别的字体，color可以是任何已知的颜色名、16进制颜色值，size可以是1-7之间的数字，默认为3</p>\n<h2 id=\"高级用法\"><a href=\"#高级用法\" class=\"headerlink\" title=\"高级用法\"></a>高级用法</h2><h3 id=\"锚点\"><a href=\"#锚点\" class=\"headerlink\" title=\"锚点\"></a>锚点</h3><p>一个成熟的前端应该不需要解释什么是锚点，<a href=\"#table\">跳转到表格</a></p>\n<div class=\"code-panel__wrapper\" autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\"><header class=\"mac-panel\"><span class=\"doc-path\"></span><span class=\"mac-panel__language\">MARKDOWN</span></header><figure class=\"iseeu highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">需要跳转的位置&#123;#index&#125;</span><br><span class=\"line\">[<span class=\"string\">点击跳转</span>](<span class=\"link\">#index</span>)</span><br></pre></td></tr></table></figure></div>\n<h3 id=\"注脚\"><a href=\"#注脚\" class=\"headerlink\" title=\"注脚\"></a>注脚</h3><p>注脚可以放在文档的任意位置，但一般我们把它放在文档最后。而且关于注脚<a href=\"这里应该是对注脚这个名词的解释，但我完全懒得解释他。\">^1</a>每个编辑器解析的方式都有所不同。</p>\n<div class=\"code-panel__wrapper\" autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\"><header class=\"mac-panel\"><span class=\"doc-path\"></span><span class=\"mac-panel__language\">MARKDOWN</span></header><figure class=\"iseeu highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">使用markdown[^1]可以提升开发效率</span><br><span class=\"line\"></span><br><span class=\"line\">[<span class=\"symbol\">^1</span>]: <span class=\"link\">markdown是一种纯文本标记语言</span></span><br></pre></td></tr></table></figure></div>\n<h3 id=\"todo-list\"><a href=\"#todo-list\" class=\"headerlink\" title=\"todo-list\"></a>todo-list</h3><p>使用带有 [ ] 或 [x] （未完成或已完成）项的列表语法撰写一个待办事宜列表。</p>\n<div class=\"code-panel__wrapper\" autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\"><header class=\"mac-panel\"><span class=\"doc-path\"></span><span class=\"mac-panel__language\">MARKDOWN</span></header><figure class=\"iseeu highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"bullet\">+ </span>[ ] 唱</span><br><span class=\"line\"><span class=\"bullet\">+ </span>[ ] 跳</span><br><span class=\"line\"><span class=\"bullet\">+ </span>[ ] rap</span><br><span class=\"line\"><span class=\"bullet\">+ </span>[x] 篮球</span><br></pre></td></tr></table></figure></div>\n<hr>\n<ul>\n<li style=\"list-style: none\"><input type=\"checkbox\"> 唱</li>\n<li style=\"list-style: none\"><input type=\"checkbox\"> 跳</li>\n<li style=\"list-style: none\"><input type=\"checkbox\"> rap</li>\n<li style=\"list-style: none\"><input type=\"checkbox\" checked> 篮球</li>\n<li style=\"list-style: none\"><input type=\"checkbox\"> music</li>\n</ul>\n<h3 id=\"流程图\"><a href=\"#流程图\" class=\"headerlink\" title=\"流程图\"></a>流程图</h3><div class=\"code-panel__wrapper\" autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\"><header class=\"mac-panel\"><span class=\"doc-path\"></span><span class=\"mac-panel__language\">PLAIN</span></header><figure class=\"iseeu highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">st=&gt;start: 开始</span><br><span class=\"line\">op1=&gt;operation: my operation</span><br><span class=\"line\">c=&gt;condition: Yes or No?</span><br><span class=\"line\">e=&gt;end: 结束</span><br></pre></td></tr></table></figure></div>\n<p>st-&gt;op1-&gt;c<br>c(yes)-&gt;e<br>c(no)-&gt;op1</p>\n<h3 id=\"时序图\"><a href=\"#时序图\" class=\"headerlink\" title=\"时序图\"></a>时序图</h3><div class=\"code-panel__wrapper\" autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\"><header class=\"mac-panel\"><span class=\"doc-path\"></span><span class=\"mac-panel__language\">PLAIN</span></header><figure class=\"iseeu highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Alice-&gt;Bob: Hello, Bob, how are you?</span><br><span class=\"line\">Note right of Bob: Bob thinks</span><br><span class=\"line\">Bob-&gt;Alice: I am fine, and you?</span><br></pre></td></tr></table></figure></div>\n<h3 id=\"数学公式\"><a href=\"#数学公式\" class=\"headerlink\" title=\"数学公式\"></a>数学公式</h3><h4 id=\"行内公式\"><a href=\"#行内公式\" class=\"headerlink\" title=\"行内公式\"></a>行内公式</h4><p>使用两个<code>$</code>符号引用公式</p>\n<div class=\"code-panel__wrapper\" autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\"><header class=\"mac-panel\"><span class=\"doc-path\"></span><span class=\"mac-panel__language\">MARKDOWN</span></header><figure class=\"iseeu highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">质能守恒方程：$E=mc^2$</span><br></pre></td></tr></table></figure></div>\n<p>质能守恒方程：$E=mc^2$</p>\n<h4 id=\"整行公式\"><a href=\"#整行公式\" class=\"headerlink\" title=\"整行公式\"></a>整行公式</h4><p>使用两个<code>$$</code>符号引用整行公式</p>\n<div class=\"code-panel__wrapper\" autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\"><header class=\"mac-panel\"><span class=\"doc-path\"></span><span class=\"mac-panel__language\">MARKDOWN</span></header><figure class=\"iseeu highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$$\\sum<span class=\"emphasis\">_&#123;i=1&#125;^n a_</span>i=0$$</span><br><span class=\"line\"></span><br><span class=\"line\">$$f(x<span class=\"emphasis\">_1,x_</span>x,\\ldots,x<span class=\"emphasis\">_n) = x_</span>1^2 + x<span class=\"emphasis\">_2^2 + \\cdots + x_</span>n^2$$</span><br><span class=\"line\"></span><br><span class=\"line\">$$\\sum^&#123;j-1&#125;<span class=\"emphasis\">_&#123;k=0&#125;&#123;\\widehat&#123;\\gamma&#125;_</span>&#123;kj&#125;z_k&#125;$$</span><br></pre></td></tr></table></figure></div>\n<p>$$\\sum_{i=1}^n a_i=0$$</p>\n<p>$$f(x_1,x_x,\\ldots,x_n) = x_1^2 + x_2^2 + \\cdots + x_n^2$$</p>\n<p>$$\\sum^{j-1}<em>{k=0}{\\widehat{\\gamma}</em>{kj}z_k}$$</p>\n<h2 id=\"写在最后\"><a href=\"#写在最后\" class=\"headerlink\" title=\"写在最后\"></a>写在最后</h2><p>高级用法中的例子有的解析器是可以解析的，有的完全解析不了，有的解析的规则不尽相同。因此在本博客中无法正确展示，这并不是因为写的不对导致的，看到这里的人，依然建议你下载源代码，放到对应的解析器里可以看到完整的效果。事实上，我们平时使用markdown，大部分还是在用基本语法，高级语法的使用场景是很少的。</p>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"引言\"><a href=\"#引言\" class=\"headerlink\" title=\"引言\"></a>引言</h2><p>最近新入职一家公司，目前尚没有自己的项目架构和开发规范。于是我把这块负责起来，搭建了初始的开发脚手架和一些开发规范。可是当我发布之后，让大家跟我一起修改，竟然没有一个人能懂我写的是什么！！what？？还有比markdown更简单易懂的语言吗？还能有开发人员不会markdown语法？那大家平时是怎么交流的，上传一张word文档到git仓库，大家一起改吗？这篇文章主要讲述markdown的语法，其实并不复杂，网上这类教程也挺多的，主要是写给公司开发的，同时也为了巩固markdown语法，众所周知，因为一些事情，我已经半年没有写过博客了….</p>\n<blockquote>\n<p>因为语法是直接生效的，导致有些地方不方便做比对。建议<a href=\"https://github.com/lost-dream/blog/blob/src/source/_posts/markdown%E8%AF%AD%E6%B3%95.md\" target=\"_blank\" rel=\"noopener\">拷贝源代码</a>，然后放在解析工具里对比查看，学习效果翻倍。</p>\n<blockquote>\n<p>常见的解析工具有 简书、github、MarkDownPad、有道云笔记，如果开发者使用IDE有安装markdown预览的插件也可以直接在编辑器查看。<br><img src=\"/blog/img/markdown-eg.jpeg\" alt=\"1.png\"></p>\n</blockquote>\n</blockquote>\n<h2 id=\"基本语法\"><a href=\"#基本语法\" class=\"headerlink\" title=\"基本语法\"></a>基本语法</h2><h3 id=\"设置字体样式\"><a href=\"#设置字体样式\" class=\"headerlink\" title=\"设置字体样式\"></a>设置字体样式</h3><figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"emphasis\">*这是切斜文字*</span></span><br><span class=\"line\"><span class=\"strong\">**这是加粗文字**</span></span><br><span class=\"line\"><span class=\"strong\">***这是加粗过的斜体字**</span>*</span><br><span class=\"line\">~~这是添加删除线的文字~~</span><br></pre></td></tr></table></figure>\n<p><em>这是切斜文字</em><br><strong>这是加粗文字</strong><br><strong><em>这是加粗过的斜体字</em></strong><br><del>这是添加删除线的文字</del></p>\n<h3 id=\"添加标题\"><a href=\"#添加标题\" class=\"headerlink\" title=\"添加标题\"></a>添加标题</h3><figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"section\"># 这是一级标题</span></span><br><span class=\"line\"><span class=\"section\">## 这是二级标题</span></span><br><span class=\"line\"><span class=\"section\">### 这是三级标题</span></span><br><span class=\"line\"><span class=\"section\">#### 这是四级标题</span></span><br><span class=\"line\"><span class=\"section\">##### 这是五级标题</span></span><br><span class=\"line\"><span class=\"section\">###### 这是六级标题</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"插入链接\"><a href=\"#插入链接\" class=\"headerlink\" title=\"插入链接\"></a>插入链接</h3><figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[<span class=\"string\">百度</span>](<span class=\"link\">https://www.baidu.com</span>)</span><br></pre></td></tr></table></figure>\n<p><a href=\"https://www.baidu.com\" target=\"_blank\" rel=\"noopener\">百度</a></p>\n<h3 id=\"插入图片\"><a href=\"#插入图片\" class=\"headerlink\" title=\"插入图片\"></a>插入图片</h3><figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">![<span class=\"string\">图片加载失败时显示的文字，等同于img标签的alt属性</span>](<span class=\"link\">1.png</span>)</span><br></pre></td></tr></table></figure>\n<p>插入的图片地址是本地图片，也可以是网络资源。而且图片加载失败是现实的文字可以为空<code>![](1.png)</code>，就和img标签的alt属性不是必填的一样。</p>\n<h3 id=\"插入代码\"><a href=\"#插入代码\" class=\"headerlink\" title=\"插入代码\"></a>插入代码</h3><p><code>使用一个反引号标记的是一个行内的代码</code></p>\n<figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">使用三个反引号包起来的是一大段代码块，记得在开始位置添加代码段的语法</span><br></pre></td></tr></table></figure>\n<h3 id=\"插入分割线\"><a href=\"#插入分割线\" class=\"headerlink\" title=\"插入分割线\"></a>插入分割线</h3><p>在单独的一行中使用至少三个星号(*)、减号(-)、下划线(_)，都可以插入一条分割线</p>\n<figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"emphasis\">***</span></span><br><span class=\"line\">---</span><br><span class=\"line\"><span class=\"emphasis\">___</span></span><br></pre></td></tr></table></figure>\n<hr>\n<hr>\n<hr>\n<h3 id=\"插入引用\"><a href=\"#插入引用\" class=\"headerlink\" title=\"插入引用\"></a>插入引用</h3><figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"quote\">&gt; 在被引用的文本前面加入一个&gt;就可以引用一段文本了</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"quote\">&gt; 引用也是可以嵌套的</span></span><br><span class=\"line\">&gt;&gt; 用打包的大小评判代码的质量，就像用飞机的重量评判飞机的质量</span><br><span class=\"line\">&gt;&gt;&gt; 上一段是我瞎编的，其实应该是代码行数</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"quote\">&gt; **引用**里也可以使用*任何*`markdown`的语法</span></span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>在被引用的文本前面加入一个&gt;就可以引用一段文本了<br>引用也是可以嵌套的</p>\n<blockquote>\n<p>用打包的大小评判代码的质量，就像用飞机的重量评判飞机的质量</p>\n<blockquote>\n<p>上一段是我瞎编的，其实应该是代码行数</p>\n</blockquote>\n</blockquote>\n</blockquote>\n<p><strong>引用</strong>里也可以使用<em>任何</em><code>markdown</code>的语法</p>\n<h3 id=\"插入列表\"><a href=\"#插入列表\" class=\"headerlink\" title=\"插入列表\"></a>插入列表</h3><h4 id=\"有序列表\"><a href=\"#有序列表\" class=\"headerlink\" title=\"有序列表\"></a>有序列表</h4><p>使用数字和一个英文句点表示有序列表。<font color=\"red\">英文句点后面一定要有空格。</font></p>\n<figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"bullet\">1. </span>list1</span><br><span class=\"line\"><span class=\"bullet\">2. </span>list2</span><br><span class=\"line\"><span class=\"bullet\">3. </span>list3</span><br></pre></td></tr></table></figure>\n<ol>\n<li>list1</li>\n<li>list2</li>\n<li>list3</li>\n</ol>\n<h4 id=\"无序列表\"><a href=\"#无序列表\" class=\"headerlink\" title=\"无序列表\"></a>无序列表</h4><p>使用 *，+，- 表示无序列表。<font color=\"red\">符号后面一定要有空格。</font></p>\n<figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"bullet\">+ </span>list1</span><br><span class=\"line\"><span class=\"bullet\">+ </span>list2</span><br><span class=\"line\"><span class=\"bullet\">+ </span>list3</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"bullet\">- </span>list1</span><br><span class=\"line\"><span class=\"bullet\">- </span>list2</span><br><span class=\"line\"><span class=\"bullet\">- </span>list3</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"bullet\">* </span>list1</span><br><span class=\"line\"><span class=\"bullet\">* </span>list2</span><br><span class=\"line\"><span class=\"bullet\">* </span>list3</span><br></pre></td></tr></table></figure>\n<ul>\n<li>list1</li>\n<li>list2</li>\n<li>list3</li>\n</ul>\n<ul>\n<li>list1</li>\n<li>list2</li>\n<li>list3</li>\n</ul>\n<ul>\n<li>list1</li>\n<li>list2</li>\n<li>list3</li>\n</ul>\n<p>无序列表是可以和无序列表、有序列表嵌套使用的</p>\n<ul>\n<li>目录</li>\n<li>第一章<ul>\n<li>第一节<ol>\n<li>第一讲</li>\n<li>第二讲</li>\n</ol>\n</li>\n<li>第二节</li>\n<li>第三节</li>\n</ul>\n</li>\n<li>第二章</li>\n<li>第三章</li>\n</ul>\n<p>需要注意的是和html标签一样，每一层级的标识符必须是相同的，否则会有问题</p>\n<p>另外， 列表也可以包含任意markdown元素，但是要注意：</p>\n<ol>\n<li>加粗效果不能直接用于列表标题里面，但是可以嵌套在列表里面混合使用。</li>\n<li>列表中包含代码块（前面加2个tab或者8个空格，并且需要空一行，否则不显示）。</li>\n</ol>\n<h3 id=\"插入表格\"><a href=\"#插入表格\" class=\"headerlink\" title=\"插入表格\"></a>插入表格</h3><p>表格的写法十分简单 {&#35;table}</p>\n<figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">|姓名|年龄|性别|</span><br><span class=\"line\">|---|---|---|</span><br><span class=\"line\">|张三|1|男|</span><br><span class=\"line\">|李四|2|女|</span><br></pre></td></tr></table></figure>\n<p>我们可以指定表格单元格的对齐方式，在表格第二行添加冒号，在左边表示左对齐，右边表示有对齐，两边都有表示居中。</p>\n<figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">|姓名(左对齐)|年龄(居中)|性别(右对齐)|</span><br><span class=\"line\">|:---|:---:|---:|</span><br><span class=\"line\">|张三|1|男|</span><br><span class=\"line\">|李四|2|女|</span><br></pre></td></tr></table></figure>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">姓名(左对齐)</th>\n<th style=\"text-align:center\">年龄(居中)</th>\n<th style=\"text-align:right\">性别(右对齐)</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">张三</td>\n<td style=\"text-align:center\">1</td>\n<td style=\"text-align:right\">男</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">李四</td>\n<td style=\"text-align:center\">2</td>\n<td style=\"text-align:right\">女</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"插入字体、颜色和字号\"><a href=\"#插入字体、颜色和字号\" class=\"headerlink\" title=\"插入字体、颜色和字号\"></a>插入字体、颜色和字号</h3><p>markdown本身不支持修改字体、颜色、字号等功能，但允许通过内嵌html标签来实现</p>\n<figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">font</span> <span class=\"attr\">face</span>=<span class=\"string\">\"黑体\"</span>&gt;</span></span>黑体字<span class=\"xml\"><span class=\"tag\">&lt;/<span class=\"name\">font</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">font</span> <span class=\"attr\">face</span>=<span class=\"string\">\"黑体\"</span> <span class=\"attr\">color</span>=<span class=\"string\">red</span>&gt;</span></span>黑体字，并且颜色是红色的<span class=\"xml\"><span class=\"tag\">&lt;/<span class=\"name\">font</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">font</span> <span class=\"attr\">face</span>=<span class=\"string\">\"黑体\"</span> <span class=\"attr\">color</span>=<span class=\"string\">red</span> <span class=\"attr\">size</span>=<span class=\"string\">7</span>&gt;</span></span>黑体字，并且颜色是红色的，并且尺寸为7<span class=\"xml\"><span class=\"tag\">&lt;/<span class=\"name\">font</span>&gt;</span></span></span><br></pre></td></tr></table></figure>\n<font face=\"黑体\">黑体字</font><br><font face=\"黑体\" color=\"red\">黑体字，并且颜色是红色的</font><br><font face=\"黑体\" color=\"red\" size=\"7\">黑体字，并且颜色是红色的，并且尺寸为7</font>\n\n<p>face可以是任何可以识别的字体，color可以是任何已知的颜色名、16进制颜色值，size可以是1-7之间的数字，默认为3</p>\n<h2 id=\"高级用法\"><a href=\"#高级用法\" class=\"headerlink\" title=\"高级用法\"></a>高级用法</h2><h3 id=\"锚点\"><a href=\"#锚点\" class=\"headerlink\" title=\"锚点\"></a>锚点</h3><p>一个成熟的前端应该不需要解释什么是锚点，<a href=\"#table\">跳转到表格</a></p>\n<figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">需要跳转的位置&#123;#index&#125;</span><br><span class=\"line\">[<span class=\"string\">点击跳转</span>](<span class=\"link\">#index</span>)</span><br></pre></td></tr></table></figure>\n<h3 id=\"注脚\"><a href=\"#注脚\" class=\"headerlink\" title=\"注脚\"></a>注脚</h3><p>注脚可以放在文档的任意位置，但一般我们把它放在文档最后。而且关于注脚<a href=\"这里应该是对注脚这个名词的解释，但我完全懒得解释他。\">^1</a>每个编辑器解析的方式都有所不同。</p>\n<figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">使用markdown[^1]可以提升开发效率</span><br><span class=\"line\"></span><br><span class=\"line\">[<span class=\"symbol\">^1</span>]: <span class=\"link\">markdown是一种纯文本标记语言</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"todo-list\"><a href=\"#todo-list\" class=\"headerlink\" title=\"todo-list\"></a>todo-list</h3><p>使用带有 [ ] 或 [x] （未完成或已完成）项的列表语法撰写一个待办事宜列表。</p>\n<figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"bullet\">+ </span>[ ] 唱</span><br><span class=\"line\"><span class=\"bullet\">+ </span>[ ] 跳</span><br><span class=\"line\"><span class=\"bullet\">+ </span>[ ] rap</span><br><span class=\"line\"><span class=\"bullet\">+ </span>[x] 篮球</span><br></pre></td></tr></table></figure>\n<hr>\n<ul>\n<li style=\"list-style: none\"><input type=\"checkbox\"> 唱</li>\n<li style=\"list-style: none\"><input type=\"checkbox\"> 跳</li>\n<li style=\"list-style: none\"><input type=\"checkbox\"> rap</li>\n<li style=\"list-style: none\"><input type=\"checkbox\" checked> 篮球</li>\n<li style=\"list-style: none\"><input type=\"checkbox\"> music</li>\n</ul>\n<h3 id=\"流程图\"><a href=\"#流程图\" class=\"headerlink\" title=\"流程图\"></a>流程图</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">st=&gt;start: 开始</span><br><span class=\"line\">op1=&gt;operation: my operation</span><br><span class=\"line\">c=&gt;condition: Yes or No?</span><br><span class=\"line\">e=&gt;end: 结束</span><br></pre></td></tr></table></figure>\n<p>st-&gt;op1-&gt;c<br>c(yes)-&gt;e<br>c(no)-&gt;op1</p>\n<h3 id=\"时序图\"><a href=\"#时序图\" class=\"headerlink\" title=\"时序图\"></a>时序图</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Alice-&gt;Bob: Hello, Bob, how are you?</span><br><span class=\"line\">Note right of Bob: Bob thinks</span><br><span class=\"line\">Bob-&gt;Alice: I am fine, and you?</span><br></pre></td></tr></table></figure>\n<h3 id=\"数学公式\"><a href=\"#数学公式\" class=\"headerlink\" title=\"数学公式\"></a>数学公式</h3><h4 id=\"行内公式\"><a href=\"#行内公式\" class=\"headerlink\" title=\"行内公式\"></a>行内公式</h4><p>使用两个<code>$</code>符号引用公式</p>\n<figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">质能守恒方程：$E=mc^2$</span><br></pre></td></tr></table></figure>\n<p>质能守恒方程：$E=mc^2$</p>\n<h4 id=\"整行公式\"><a href=\"#整行公式\" class=\"headerlink\" title=\"整行公式\"></a>整行公式</h4><p>使用两个<code>$$</code>符号引用整行公式</p>\n<figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$$\\sum<span class=\"emphasis\">_&#123;i=1&#125;^n a_</span>i=0$$</span><br><span class=\"line\"></span><br><span class=\"line\">$$f(x<span class=\"emphasis\">_1,x_</span>x,\\ldots,x<span class=\"emphasis\">_n) = x_</span>1^2 + x<span class=\"emphasis\">_2^2 + \\cdots + x_</span>n^2$$</span><br><span class=\"line\"></span><br><span class=\"line\">$$\\sum^&#123;j-1&#125;<span class=\"emphasis\">_&#123;k=0&#125;&#123;\\widehat&#123;\\gamma&#125;_</span>&#123;kj&#125;z_k&#125;$$</span><br></pre></td></tr></table></figure>\n<p>$$\\sum_{i=1}^n a_i=0$$</p>\n<p>$$f(x_1,x_x,\\ldots,x_n) = x_1^2 + x_2^2 + \\cdots + x_n^2$$</p>\n<p>$$\\sum^{j-1}<em>{k=0}{\\widehat{\\gamma}</em>{kj}z_k}$$</p>\n<h2 id=\"写在最后\"><a href=\"#写在最后\" class=\"headerlink\" title=\"写在最后\"></a>写在最后</h2><p>高级用法中的例子有的解析器是可以解析的，有的完全解析不了，有的解析的规则不尽相同。因此在本博客中无法正确展示，这并不是因为写的不对导致的，看到这里的人，依然建议你下载源代码，放到对应的解析器里可以看到完整的效果。事实上，我们平时使用markdown，大部分还是在用基本语法，高级语法的使用场景是很少的。</p>\n"},{"title":"particlesJs开发手册","date":"2017-10-10T03:29:18.000Z","description":"particles.js Api手册","_content":"## quick start\n\n首先需要引用particles.js，然后创建一个空元素。\n\n```html\n  <div id=\"particles\"></div>\n  ......\n  <script src=\"particles.js\"></script>\n```\n\n然后在js中写配置就可以了\n\n```js\nparticlesJS.load('particles', {\n  // ......\n});\n```\n\n先展示完整的配置项示例，之后附上完整的api。\n\n```json\n\t{\n          \"particles\": {\n            \"number\": {\n              \"value\": 300,\n              \"density\": {\n                \"enable\": true,\n                \"value_area\": 700\n              }\n            },\n            \"color\": {\n              \"value\": [\"#aa73ff\", \"#f8c210\", \"#83d238\", \"#33b1f8\"]\n            },\n            \"shape\": {\n              \"type\": \"edge\",\n              \"stroke\": {\n                \"width\": 0,\n                \"color\": \"#000000\"\n              },\n              \"polygon\": {\n                \"nb_sides\": 15\n              }\n            },\n            \"opacity\": {\n              \"value\": 0.5,\n              \"random\": false,\n              \"anim\": {\n                \"enable\": false,\n                \"speed\": 1.5,\n                \"opacity_min\": 0.15,\n                \"sync\": false\n              }\n            },\n            \"size\": {\n              \"value\": 2.5,\n              \"random\": false,\n              \"anim\": {\n                \"enable\": true,\n                \"speed\": 2,\n                \"size_min\": 0.15,\n                \"sync\": false\n              }\n            },\n            \"line_linked\": {\n              \"enable\": true,\n              \"distance\": 110,\n              \"color\": \"#33b1f8\",\n              \"opacity\": 0.25,\n              \"width\": 1\n            },\n            \"move\": {\n              \"enable\": true,\n              \"speed\": 1.6,\n              \"direction\": \"none\",\n              \"random\": false,\n              \"straight\": false,\n              \"out_mode\": \"out\",\n              \"bounce\": false,\n              \"attract\": {\n                \"enable\": false,\n                \"rotateX\": 600,\n                \"rotateY\": 1200\n              }\n            }\n          },\n          \"interactivity\": {\n            \"detect_on\": \"canvas\",\n            \"events\": {\n              \"onhover\": {\n                \"enable\": false,\n                \"mode\": \"repulse\"\n              },\n              \"onclick\": {\n                \"enable\": false,\n                \"mode\": \"push\"\n              },\n              \"resize\": true\n            },\n            \"modes\": {\n              \"grab\": {\n                \"distance\": 400,\n                \"line_linked\": {\n                  \"opacity\": 1\n                }\n              },\n              \"bubble\": {\n                \"distance\": 400,\n                \"size\": 40,\n                \"duration\": 2,\n                \"opacity\": 8,\n                \"speed\": 3\n              },\n              \"repulse\": {\n                \"distance\": 200,\n                \"duration\": 0.4\n              },\n              \"push\": {\n                \"particles_nb\": 4\n              },\n              \"remove\": {\n                \"particles_nb\": 2\n              }\n            }\n          },\n          \"retina_detect\": true\n        }\n```\n\n## Api手册\n\n| 键值| 参数说明|示例/默认值|\n| ------------- |:-------------:| :-----:|\n| particles.number.value| number<br>数量|40|\n|particles.number.density.enable|boolean|true / false|\n|particles.number.density.value_area|number<br>区域散布密度大小|800|\n|particles.color.value\t|HEX (string)<br/>RGB (object)<br/>HSL (object)<br/> array selection (HEX) <br/>random (string)<br>原子的颜色|\"#b61924\"<br>{r:182, g:25, b:36}<br>{h:356, s:76, l:41}<br>[\"#b61924\", \"#333333\", \"999999\"]<br>\"random\"|\n|particles.shape.type|string<br>array selection<br>原子的形状| \"circle\"<br>\"edge\" <br>\"triangle\"<br>\"polygon\"<br>\"star\"<br>\"image\"<br>[\"circle\", \"triangle\", \"image\"]|\n|particles.shape.stroke.width|number<br>原理的宽度|2|\n|particles.shape.stroke.color|HEX (string)<br>原子颜色|\"#222222\"|\n|particles.shape.polygon.nb_slides|number<br>原子的多边形边数|5|\n|particles.shape.image.src|path<br>link<br>svg / png / gif / jpg<br>原子的图片可以使用自定义图片|\"assets/img/yop.svg\"<br>\"https://xxx.com/xxx.jpg\"|\n|particles.shape.image.width|number(for aspect ratio)<br>图片宽度|100|\n|particles.shape.image.height|number(for aspect ratio)<br>图片高度|100|\n|particles.opacity.value|number(0 to 1)<br>不透明度|0.75|\n|particles.opacity.random|boolean<br>随机不透明度|true / false|\n|particles.opacity.anim.enable|boolean<br>渐变动画|true / false|\n|particles.opacity.anim.speed|number<br>渐变动画速度|3|\n|particles.opacity.anim.opacity_min|number(0 to 1)<br>渐变动画不透明度|0.25|\n|particles.opacity.anim.sync|boolean|true / false|\n|particles.size.value|number<br>原子大小|20|\n|particles.size.random|boolean<br>原子大小随机|true / false|\n|particles.size.anim.enable|boolean<br>原子渐变|true / false|\n|particles.size.anim.speed|number<br>原子渐变速度|3|\n|particles.size.anim.size_min|number|0.25|\n|particles.size.anim.sync|boolean|true / false\n|particles.line_linked.enable|boolean<br>连接线|true / false\n|particles.line_linked.distance|number<br>连接线距离|150|\n|particles.line_linked.color|HEX(string)<br>连接线颜色|#ffffff|\n|particles.line_linked.opacity|number(0 to 1)<br>连接线不透明度|0.5|\n|particles.line_linked.width|number<br>连接线的宽度|1.5|\n|particles.move.enable|boolean<br>原子移动|true / false|\n|particles.move.speed|number<br>原子移动速度|4|\n|particles.move.direction|string<br>原子移动方向|\"none\"<br>\"top\"<br>\"top-right\"<br>\"right\" <br>\"bottom-right\"<br>\"bottom\"<br>\"bottom-left\"<br>\"left\"<br>\"top-left\"|\n|particles.move.random|boolean<br>移动随机方向|true / false|\n|particles.move.straight|boolean<br>直接移动|true / false|\n|particles.move.out_mode|string (out of canvas)<br>是否移动出画布|\"out\"<br>\"bounce\"|\n|particles.move.bounce|boolean<br>(between particles)是否跳动移动|true / false|\n|particles.move.attract.enable|boolean<br>原子之间吸引|true / false|\n|particles.move.attract.rotateX|number<br>原子之间吸引X水平距离|3000|\n|particles.move.attract.rotateY|number<br>y垂直距离|1500|\n|interactivity.detect_on|string<br>原子之间互动检测|\"canvas\"<br>\"window\"|\n|interactivity.events.onhover.enable|boolean<br>是否悬停|true / false|\n|interactivity.events.onhover.mode|string<br>array selection<br>悬停模式|\"grab\"&nbsp;&nbsp;&nbsp;&nbsp;抓取临近的<br>\"bubble\"&nbsp;&nbsp;&nbsp;&nbsp;泡沫球效果<br>\"repulse\"&nbsp;&nbsp;&nbsp;&nbsp;击退效果<br>[\"grab\", \"bubble\"]|\n|interactivity.events.onclick.enable|boolean<br>点击效果|true / false|\n|interactivity.events.onclick.mode|string<br>array selection<br>点击效果模式|\"push\" <br>\"remove\"<br>\"bubble\"<br>\"repulse\"<br>[\"push\", \"repulse\"]|\n|interactivity.events.resize|boolean<br>互动事件调整|true / false|\n|interactivity.events.modes.grab.distance|number<br>原子互动抓取距离|100|\n|interactivity.events.modes.grab.line_linked.opacity|number(0 to 1)<br>原子互动抓取距离连线不透明度|0.75|\n|interactivity.events.modes.bubble.distance|number<br>原子抓取泡沫效果之间的距离|100|\n|interactivity.events.modes.bubble.size|number<br>原子抓取泡沫效果之间的大小|40|\n|interactivity.events.modes.bubble.duration|number<br>原子抓取泡沫效果之间的持续事件(second)|0.4|\n|interactivity.events.modes.repulse.distance|number<br>击退效果距离|200|\n|interactivity.events.modes.repulse.duration|number<br>击退效果持续事件(second)|1.2|\n|interactivity.events.modes.push.particles_nb|number<br>粒子推出的数量|4|\n|interactivity.events.modes.push.particles_nb|number|4|\n|retina_detect|boolean|true / false|\n","source":"_posts/particlesJs开发手册.md","raw":"---\ntitle: particlesJs开发手册\ndate: 2017-10-10 11:29:18\ntags: [canvas,粒子动画]\ncategories: [JavaScript]\ndescription: particles.js Api手册\n---\n## quick start\n\n首先需要引用particles.js，然后创建一个空元素。\n\n```html\n  <div id=\"particles\"></div>\n  ......\n  <script src=\"particles.js\"></script>\n```\n\n然后在js中写配置就可以了\n\n```js\nparticlesJS.load('particles', {\n  // ......\n});\n```\n\n先展示完整的配置项示例，之后附上完整的api。\n\n```json\n\t{\n          \"particles\": {\n            \"number\": {\n              \"value\": 300,\n              \"density\": {\n                \"enable\": true,\n                \"value_area\": 700\n              }\n            },\n            \"color\": {\n              \"value\": [\"#aa73ff\", \"#f8c210\", \"#83d238\", \"#33b1f8\"]\n            },\n            \"shape\": {\n              \"type\": \"edge\",\n              \"stroke\": {\n                \"width\": 0,\n                \"color\": \"#000000\"\n              },\n              \"polygon\": {\n                \"nb_sides\": 15\n              }\n            },\n            \"opacity\": {\n              \"value\": 0.5,\n              \"random\": false,\n              \"anim\": {\n                \"enable\": false,\n                \"speed\": 1.5,\n                \"opacity_min\": 0.15,\n                \"sync\": false\n              }\n            },\n            \"size\": {\n              \"value\": 2.5,\n              \"random\": false,\n              \"anim\": {\n                \"enable\": true,\n                \"speed\": 2,\n                \"size_min\": 0.15,\n                \"sync\": false\n              }\n            },\n            \"line_linked\": {\n              \"enable\": true,\n              \"distance\": 110,\n              \"color\": \"#33b1f8\",\n              \"opacity\": 0.25,\n              \"width\": 1\n            },\n            \"move\": {\n              \"enable\": true,\n              \"speed\": 1.6,\n              \"direction\": \"none\",\n              \"random\": false,\n              \"straight\": false,\n              \"out_mode\": \"out\",\n              \"bounce\": false,\n              \"attract\": {\n                \"enable\": false,\n                \"rotateX\": 600,\n                \"rotateY\": 1200\n              }\n            }\n          },\n          \"interactivity\": {\n            \"detect_on\": \"canvas\",\n            \"events\": {\n              \"onhover\": {\n                \"enable\": false,\n                \"mode\": \"repulse\"\n              },\n              \"onclick\": {\n                \"enable\": false,\n                \"mode\": \"push\"\n              },\n              \"resize\": true\n            },\n            \"modes\": {\n              \"grab\": {\n                \"distance\": 400,\n                \"line_linked\": {\n                  \"opacity\": 1\n                }\n              },\n              \"bubble\": {\n                \"distance\": 400,\n                \"size\": 40,\n                \"duration\": 2,\n                \"opacity\": 8,\n                \"speed\": 3\n              },\n              \"repulse\": {\n                \"distance\": 200,\n                \"duration\": 0.4\n              },\n              \"push\": {\n                \"particles_nb\": 4\n              },\n              \"remove\": {\n                \"particles_nb\": 2\n              }\n            }\n          },\n          \"retina_detect\": true\n        }\n```\n\n## Api手册\n\n| 键值| 参数说明|示例/默认值|\n| ------------- |:-------------:| :-----:|\n| particles.number.value| number<br>数量|40|\n|particles.number.density.enable|boolean|true / false|\n|particles.number.density.value_area|number<br>区域散布密度大小|800|\n|particles.color.value\t|HEX (string)<br/>RGB (object)<br/>HSL (object)<br/> array selection (HEX) <br/>random (string)<br>原子的颜色|\"#b61924\"<br>{r:182, g:25, b:36}<br>{h:356, s:76, l:41}<br>[\"#b61924\", \"#333333\", \"999999\"]<br>\"random\"|\n|particles.shape.type|string<br>array selection<br>原子的形状| \"circle\"<br>\"edge\" <br>\"triangle\"<br>\"polygon\"<br>\"star\"<br>\"image\"<br>[\"circle\", \"triangle\", \"image\"]|\n|particles.shape.stroke.width|number<br>原理的宽度|2|\n|particles.shape.stroke.color|HEX (string)<br>原子颜色|\"#222222\"|\n|particles.shape.polygon.nb_slides|number<br>原子的多边形边数|5|\n|particles.shape.image.src|path<br>link<br>svg / png / gif / jpg<br>原子的图片可以使用自定义图片|\"assets/img/yop.svg\"<br>\"https://xxx.com/xxx.jpg\"|\n|particles.shape.image.width|number(for aspect ratio)<br>图片宽度|100|\n|particles.shape.image.height|number(for aspect ratio)<br>图片高度|100|\n|particles.opacity.value|number(0 to 1)<br>不透明度|0.75|\n|particles.opacity.random|boolean<br>随机不透明度|true / false|\n|particles.opacity.anim.enable|boolean<br>渐变动画|true / false|\n|particles.opacity.anim.speed|number<br>渐变动画速度|3|\n|particles.opacity.anim.opacity_min|number(0 to 1)<br>渐变动画不透明度|0.25|\n|particles.opacity.anim.sync|boolean|true / false|\n|particles.size.value|number<br>原子大小|20|\n|particles.size.random|boolean<br>原子大小随机|true / false|\n|particles.size.anim.enable|boolean<br>原子渐变|true / false|\n|particles.size.anim.speed|number<br>原子渐变速度|3|\n|particles.size.anim.size_min|number|0.25|\n|particles.size.anim.sync|boolean|true / false\n|particles.line_linked.enable|boolean<br>连接线|true / false\n|particles.line_linked.distance|number<br>连接线距离|150|\n|particles.line_linked.color|HEX(string)<br>连接线颜色|#ffffff|\n|particles.line_linked.opacity|number(0 to 1)<br>连接线不透明度|0.5|\n|particles.line_linked.width|number<br>连接线的宽度|1.5|\n|particles.move.enable|boolean<br>原子移动|true / false|\n|particles.move.speed|number<br>原子移动速度|4|\n|particles.move.direction|string<br>原子移动方向|\"none\"<br>\"top\"<br>\"top-right\"<br>\"right\" <br>\"bottom-right\"<br>\"bottom\"<br>\"bottom-left\"<br>\"left\"<br>\"top-left\"|\n|particles.move.random|boolean<br>移动随机方向|true / false|\n|particles.move.straight|boolean<br>直接移动|true / false|\n|particles.move.out_mode|string (out of canvas)<br>是否移动出画布|\"out\"<br>\"bounce\"|\n|particles.move.bounce|boolean<br>(between particles)是否跳动移动|true / false|\n|particles.move.attract.enable|boolean<br>原子之间吸引|true / false|\n|particles.move.attract.rotateX|number<br>原子之间吸引X水平距离|3000|\n|particles.move.attract.rotateY|number<br>y垂直距离|1500|\n|interactivity.detect_on|string<br>原子之间互动检测|\"canvas\"<br>\"window\"|\n|interactivity.events.onhover.enable|boolean<br>是否悬停|true / false|\n|interactivity.events.onhover.mode|string<br>array selection<br>悬停模式|\"grab\"&nbsp;&nbsp;&nbsp;&nbsp;抓取临近的<br>\"bubble\"&nbsp;&nbsp;&nbsp;&nbsp;泡沫球效果<br>\"repulse\"&nbsp;&nbsp;&nbsp;&nbsp;击退效果<br>[\"grab\", \"bubble\"]|\n|interactivity.events.onclick.enable|boolean<br>点击效果|true / false|\n|interactivity.events.onclick.mode|string<br>array selection<br>点击效果模式|\"push\" <br>\"remove\"<br>\"bubble\"<br>\"repulse\"<br>[\"push\", \"repulse\"]|\n|interactivity.events.resize|boolean<br>互动事件调整|true / false|\n|interactivity.events.modes.grab.distance|number<br>原子互动抓取距离|100|\n|interactivity.events.modes.grab.line_linked.opacity|number(0 to 1)<br>原子互动抓取距离连线不透明度|0.75|\n|interactivity.events.modes.bubble.distance|number<br>原子抓取泡沫效果之间的距离|100|\n|interactivity.events.modes.bubble.size|number<br>原子抓取泡沫效果之间的大小|40|\n|interactivity.events.modes.bubble.duration|number<br>原子抓取泡沫效果之间的持续事件(second)|0.4|\n|interactivity.events.modes.repulse.distance|number<br>击退效果距离|200|\n|interactivity.events.modes.repulse.duration|number<br>击退效果持续事件(second)|1.2|\n|interactivity.events.modes.push.particles_nb|number<br>粒子推出的数量|4|\n|interactivity.events.modes.push.particles_nb|number|4|\n|retina_detect|boolean|true / false|\n","slug":"particlesJs开发手册","published":1,"updated":"2021-06-25T11:19:55.442Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckqc904oq000uwotvorf302cq","content":"<h2 id=\"quick-start\"><a href=\"#quick-start\" class=\"headerlink\" title=\"quick start\"></a>quick start</h2><p>首先需要引用particles.js，然后创建一个空元素。</p>\n<div class=\"code-panel__wrapper\" autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\"><header class=\"mac-panel\"><span class=\"doc-path\"></span><span class=\"mac-panel__language\">HTML</span></header><figure class=\"iseeu highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">\"particles\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">......</span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">\"particles.js\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br></pre></td></tr></table></figure></div>\n<p>然后在js中写配置就可以了</p>\n<div class=\"code-panel__wrapper\" autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\"><header class=\"mac-panel\"><span class=\"doc-path\"></span><span class=\"mac-panel__language\">JS</span></header><figure class=\"iseeu highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">particlesJS.load(<span class=\"string\">'particles'</span>, &#123;</span><br><span class=\"line\">  <span class=\"comment\">// ......</span></span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure></div>\n<p>先展示完整的配置项示例，之后附上完整的api。</p>\n<div class=\"code-panel__wrapper\" autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\"><header class=\"mac-panel\"><span class=\"doc-path\"></span><span class=\"mac-panel__language\">JSON</span></header><figure class=\"iseeu highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">         <span class=\"attr\">\"particles\"</span>: &#123;</span><br><span class=\"line\">           <span class=\"attr\">\"number\"</span>: &#123;</span><br><span class=\"line\">             <span class=\"attr\">\"value\"</span>: <span class=\"number\">300</span>,</span><br><span class=\"line\">             <span class=\"attr\">\"density\"</span>: &#123;</span><br><span class=\"line\">               <span class=\"attr\">\"enable\"</span>: <span class=\"literal\">true</span>,</span><br><span class=\"line\">               <span class=\"attr\">\"value_area\"</span>: <span class=\"number\">700</span></span><br><span class=\"line\">             &#125;</span><br><span class=\"line\">           &#125;,</span><br><span class=\"line\">           <span class=\"attr\">\"color\"</span>: &#123;</span><br><span class=\"line\">             <span class=\"attr\">\"value\"</span>: [<span class=\"string\">\"#aa73ff\"</span>, <span class=\"string\">\"#f8c210\"</span>, <span class=\"string\">\"#83d238\"</span>, <span class=\"string\">\"#33b1f8\"</span>]</span><br><span class=\"line\">           &#125;,</span><br><span class=\"line\">           <span class=\"attr\">\"shape\"</span>: &#123;</span><br><span class=\"line\">             <span class=\"attr\">\"type\"</span>: <span class=\"string\">\"edge\"</span>,</span><br><span class=\"line\">             <span class=\"attr\">\"stroke\"</span>: &#123;</span><br><span class=\"line\">               <span class=\"attr\">\"width\"</span>: <span class=\"number\">0</span>,</span><br><span class=\"line\">               <span class=\"attr\">\"color\"</span>: <span class=\"string\">\"#000000\"</span></span><br><span class=\"line\">             &#125;,</span><br><span class=\"line\">             <span class=\"attr\">\"polygon\"</span>: &#123;</span><br><span class=\"line\">               <span class=\"attr\">\"nb_sides\"</span>: <span class=\"number\">15</span></span><br><span class=\"line\">             &#125;</span><br><span class=\"line\">           &#125;,</span><br><span class=\"line\">           <span class=\"attr\">\"opacity\"</span>: &#123;</span><br><span class=\"line\">             <span class=\"attr\">\"value\"</span>: <span class=\"number\">0.5</span>,</span><br><span class=\"line\">             <span class=\"attr\">\"random\"</span>: <span class=\"literal\">false</span>,</span><br><span class=\"line\">             <span class=\"attr\">\"anim\"</span>: &#123;</span><br><span class=\"line\">               <span class=\"attr\">\"enable\"</span>: <span class=\"literal\">false</span>,</span><br><span class=\"line\">               <span class=\"attr\">\"speed\"</span>: <span class=\"number\">1.5</span>,</span><br><span class=\"line\">               <span class=\"attr\">\"opacity_min\"</span>: <span class=\"number\">0.15</span>,</span><br><span class=\"line\">               <span class=\"attr\">\"sync\"</span>: <span class=\"literal\">false</span></span><br><span class=\"line\">             &#125;</span><br><span class=\"line\">           &#125;,</span><br><span class=\"line\">           <span class=\"attr\">\"size\"</span>: &#123;</span><br><span class=\"line\">             <span class=\"attr\">\"value\"</span>: <span class=\"number\">2.5</span>,</span><br><span class=\"line\">             <span class=\"attr\">\"random\"</span>: <span class=\"literal\">false</span>,</span><br><span class=\"line\">             <span class=\"attr\">\"anim\"</span>: &#123;</span><br><span class=\"line\">               <span class=\"attr\">\"enable\"</span>: <span class=\"literal\">true</span>,</span><br><span class=\"line\">               <span class=\"attr\">\"speed\"</span>: <span class=\"number\">2</span>,</span><br><span class=\"line\">               <span class=\"attr\">\"size_min\"</span>: <span class=\"number\">0.15</span>,</span><br><span class=\"line\">               <span class=\"attr\">\"sync\"</span>: <span class=\"literal\">false</span></span><br><span class=\"line\">             &#125;</span><br><span class=\"line\">           &#125;,</span><br><span class=\"line\">           <span class=\"attr\">\"line_linked\"</span>: &#123;</span><br><span class=\"line\">             <span class=\"attr\">\"enable\"</span>: <span class=\"literal\">true</span>,</span><br><span class=\"line\">             <span class=\"attr\">\"distance\"</span>: <span class=\"number\">110</span>,</span><br><span class=\"line\">             <span class=\"attr\">\"color\"</span>: <span class=\"string\">\"#33b1f8\"</span>,</span><br><span class=\"line\">             <span class=\"attr\">\"opacity\"</span>: <span class=\"number\">0.25</span>,</span><br><span class=\"line\">             <span class=\"attr\">\"width\"</span>: <span class=\"number\">1</span></span><br><span class=\"line\">           &#125;,</span><br><span class=\"line\">           <span class=\"attr\">\"move\"</span>: &#123;</span><br><span class=\"line\">             <span class=\"attr\">\"enable\"</span>: <span class=\"literal\">true</span>,</span><br><span class=\"line\">             <span class=\"attr\">\"speed\"</span>: <span class=\"number\">1.6</span>,</span><br><span class=\"line\">             <span class=\"attr\">\"direction\"</span>: <span class=\"string\">\"none\"</span>,</span><br><span class=\"line\">             <span class=\"attr\">\"random\"</span>: <span class=\"literal\">false</span>,</span><br><span class=\"line\">             <span class=\"attr\">\"straight\"</span>: <span class=\"literal\">false</span>,</span><br><span class=\"line\">             <span class=\"attr\">\"out_mode\"</span>: <span class=\"string\">\"out\"</span>,</span><br><span class=\"line\">             <span class=\"attr\">\"bounce\"</span>: <span class=\"literal\">false</span>,</span><br><span class=\"line\">             <span class=\"attr\">\"attract\"</span>: &#123;</span><br><span class=\"line\">               <span class=\"attr\">\"enable\"</span>: <span class=\"literal\">false</span>,</span><br><span class=\"line\">               <span class=\"attr\">\"rotateX\"</span>: <span class=\"number\">600</span>,</span><br><span class=\"line\">               <span class=\"attr\">\"rotateY\"</span>: <span class=\"number\">1200</span></span><br><span class=\"line\">             &#125;</span><br><span class=\"line\">           &#125;</span><br><span class=\"line\">         &#125;,</span><br><span class=\"line\">         <span class=\"attr\">\"interactivity\"</span>: &#123;</span><br><span class=\"line\">           <span class=\"attr\">\"detect_on\"</span>: <span class=\"string\">\"canvas\"</span>,</span><br><span class=\"line\">           <span class=\"attr\">\"events\"</span>: &#123;</span><br><span class=\"line\">             <span class=\"attr\">\"onhover\"</span>: &#123;</span><br><span class=\"line\">               <span class=\"attr\">\"enable\"</span>: <span class=\"literal\">false</span>,</span><br><span class=\"line\">               <span class=\"attr\">\"mode\"</span>: <span class=\"string\">\"repulse\"</span></span><br><span class=\"line\">             &#125;,</span><br><span class=\"line\">             <span class=\"attr\">\"onclick\"</span>: &#123;</span><br><span class=\"line\">               <span class=\"attr\">\"enable\"</span>: <span class=\"literal\">false</span>,</span><br><span class=\"line\">               <span class=\"attr\">\"mode\"</span>: <span class=\"string\">\"push\"</span></span><br><span class=\"line\">             &#125;,</span><br><span class=\"line\">             <span class=\"attr\">\"resize\"</span>: <span class=\"literal\">true</span></span><br><span class=\"line\">           &#125;,</span><br><span class=\"line\">           <span class=\"attr\">\"modes\"</span>: &#123;</span><br><span class=\"line\">             <span class=\"attr\">\"grab\"</span>: &#123;</span><br><span class=\"line\">               <span class=\"attr\">\"distance\"</span>: <span class=\"number\">400</span>,</span><br><span class=\"line\">               <span class=\"attr\">\"line_linked\"</span>: &#123;</span><br><span class=\"line\">                 <span class=\"attr\">\"opacity\"</span>: <span class=\"number\">1</span></span><br><span class=\"line\">               &#125;</span><br><span class=\"line\">             &#125;,</span><br><span class=\"line\">             <span class=\"attr\">\"bubble\"</span>: &#123;</span><br><span class=\"line\">               <span class=\"attr\">\"distance\"</span>: <span class=\"number\">400</span>,</span><br><span class=\"line\">               <span class=\"attr\">\"size\"</span>: <span class=\"number\">40</span>,</span><br><span class=\"line\">               <span class=\"attr\">\"duration\"</span>: <span class=\"number\">2</span>,</span><br><span class=\"line\">               <span class=\"attr\">\"opacity\"</span>: <span class=\"number\">8</span>,</span><br><span class=\"line\">               <span class=\"attr\">\"speed\"</span>: <span class=\"number\">3</span></span><br><span class=\"line\">             &#125;,</span><br><span class=\"line\">             <span class=\"attr\">\"repulse\"</span>: &#123;</span><br><span class=\"line\">               <span class=\"attr\">\"distance\"</span>: <span class=\"number\">200</span>,</span><br><span class=\"line\">               <span class=\"attr\">\"duration\"</span>: <span class=\"number\">0.4</span></span><br><span class=\"line\">             &#125;,</span><br><span class=\"line\">             <span class=\"attr\">\"push\"</span>: &#123;</span><br><span class=\"line\">               <span class=\"attr\">\"particles_nb\"</span>: <span class=\"number\">4</span></span><br><span class=\"line\">             &#125;,</span><br><span class=\"line\">             <span class=\"attr\">\"remove\"</span>: &#123;</span><br><span class=\"line\">               <span class=\"attr\">\"particles_nb\"</span>: <span class=\"number\">2</span></span><br><span class=\"line\">             &#125;</span><br><span class=\"line\">           &#125;</span><br><span class=\"line\">         &#125;,</span><br><span class=\"line\">         <span class=\"attr\">\"retina_detect\"</span>: <span class=\"literal\">true</span></span><br><span class=\"line\">       &#125;</span><br></pre></td></tr></table></figure></div>\n<h2 id=\"Api手册\"><a href=\"#Api手册\" class=\"headerlink\" title=\"Api手册\"></a>Api手册</h2><table>\n<thead>\n<tr>\n<th>键值</th>\n<th style=\"text-align:center\">参数说明</th>\n<th style=\"text-align:center\">示例/默认值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>particles.number.value</td>\n<td style=\"text-align:center\">number<br>数量</td>\n<td style=\"text-align:center\">40</td>\n</tr>\n<tr>\n<td>particles.number.density.enable</td>\n<td style=\"text-align:center\">boolean</td>\n<td style=\"text-align:center\">true / false</td>\n</tr>\n<tr>\n<td>particles.number.density.value_area</td>\n<td style=\"text-align:center\">number<br>区域散布密度大小</td>\n<td style=\"text-align:center\">800</td>\n</tr>\n<tr>\n<td>particles.color.value</td>\n<td style=\"text-align:center\">HEX (string)<br>RGB (object)<br>HSL (object)<br> array selection (HEX) <br>random (string)<br>原子的颜色</td>\n<td style=\"text-align:center\">“#b61924”<br>{r:182, g:25, b:36}<br>{h:356, s:76, l:41}<br>[“#b61924”, “#333333”, “999999”]<br>“random”</td>\n</tr>\n<tr>\n<td>particles.shape.type</td>\n<td style=\"text-align:center\">string<br>array selection<br>原子的形状</td>\n<td style=\"text-align:center\">“circle”<br>“edge” <br>“triangle”<br>“polygon”<br>“star”<br>“image”<br>[“circle”, “triangle”, “image”]</td>\n</tr>\n<tr>\n<td>particles.shape.stroke.width</td>\n<td style=\"text-align:center\">number<br>原理的宽度</td>\n<td style=\"text-align:center\">2</td>\n</tr>\n<tr>\n<td>particles.shape.stroke.color</td>\n<td style=\"text-align:center\">HEX (string)<br>原子颜色</td>\n<td style=\"text-align:center\">“#222222”</td>\n</tr>\n<tr>\n<td>particles.shape.polygon.nb_slides</td>\n<td style=\"text-align:center\">number<br>原子的多边形边数</td>\n<td style=\"text-align:center\">5</td>\n</tr>\n<tr>\n<td>particles.shape.image.src</td>\n<td style=\"text-align:center\">path<br>link<br>svg / png / gif / jpg<br>原子的图片可以使用自定义图片</td>\n<td style=\"text-align:center\">“assets/img/yop.svg”<br>“<a href=\"https://xxx.com/xxx.jpg&quot;\" target=\"_blank\" rel=\"noopener\">https://xxx.com/xxx.jpg&quot;</a></td>\n</tr>\n<tr>\n<td>particles.shape.image.width</td>\n<td style=\"text-align:center\">number(for aspect ratio)<br>图片宽度</td>\n<td style=\"text-align:center\">100</td>\n</tr>\n<tr>\n<td>particles.shape.image.height</td>\n<td style=\"text-align:center\">number(for aspect ratio)<br>图片高度</td>\n<td style=\"text-align:center\">100</td>\n</tr>\n<tr>\n<td>particles.opacity.value</td>\n<td style=\"text-align:center\">number(0 to 1)<br>不透明度</td>\n<td style=\"text-align:center\">0.75</td>\n</tr>\n<tr>\n<td>particles.opacity.random</td>\n<td style=\"text-align:center\">boolean<br>随机不透明度</td>\n<td style=\"text-align:center\">true / false</td>\n</tr>\n<tr>\n<td>particles.opacity.anim.enable</td>\n<td style=\"text-align:center\">boolean<br>渐变动画</td>\n<td style=\"text-align:center\">true / false</td>\n</tr>\n<tr>\n<td>particles.opacity.anim.speed</td>\n<td style=\"text-align:center\">number<br>渐变动画速度</td>\n<td style=\"text-align:center\">3</td>\n</tr>\n<tr>\n<td>particles.opacity.anim.opacity_min</td>\n<td style=\"text-align:center\">number(0 to 1)<br>渐变动画不透明度</td>\n<td style=\"text-align:center\">0.25</td>\n</tr>\n<tr>\n<td>particles.opacity.anim.sync</td>\n<td style=\"text-align:center\">boolean</td>\n<td style=\"text-align:center\">true / false</td>\n</tr>\n<tr>\n<td>particles.size.value</td>\n<td style=\"text-align:center\">number<br>原子大小</td>\n<td style=\"text-align:center\">20</td>\n</tr>\n<tr>\n<td>particles.size.random</td>\n<td style=\"text-align:center\">boolean<br>原子大小随机</td>\n<td style=\"text-align:center\">true / false</td>\n</tr>\n<tr>\n<td>particles.size.anim.enable</td>\n<td style=\"text-align:center\">boolean<br>原子渐变</td>\n<td style=\"text-align:center\">true / false</td>\n</tr>\n<tr>\n<td>particles.size.anim.speed</td>\n<td style=\"text-align:center\">number<br>原子渐变速度</td>\n<td style=\"text-align:center\">3</td>\n</tr>\n<tr>\n<td>particles.size.anim.size_min</td>\n<td style=\"text-align:center\">number</td>\n<td style=\"text-align:center\">0.25</td>\n</tr>\n<tr>\n<td>particles.size.anim.sync</td>\n<td style=\"text-align:center\">boolean</td>\n<td style=\"text-align:center\">true / false</td>\n</tr>\n<tr>\n<td>particles.line_linked.enable</td>\n<td style=\"text-align:center\">boolean<br>连接线</td>\n<td style=\"text-align:center\">true / false</td>\n</tr>\n<tr>\n<td>particles.line_linked.distance</td>\n<td style=\"text-align:center\">number<br>连接线距离</td>\n<td style=\"text-align:center\">150</td>\n</tr>\n<tr>\n<td>particles.line_linked.color</td>\n<td style=\"text-align:center\">HEX(string)<br>连接线颜色</td>\n<td style=\"text-align:center\">#ffffff</td>\n</tr>\n<tr>\n<td>particles.line_linked.opacity</td>\n<td style=\"text-align:center\">number(0 to 1)<br>连接线不透明度</td>\n<td style=\"text-align:center\">0.5</td>\n</tr>\n<tr>\n<td>particles.line_linked.width</td>\n<td style=\"text-align:center\">number<br>连接线的宽度</td>\n<td style=\"text-align:center\">1.5</td>\n</tr>\n<tr>\n<td>particles.move.enable</td>\n<td style=\"text-align:center\">boolean<br>原子移动</td>\n<td style=\"text-align:center\">true / false</td>\n</tr>\n<tr>\n<td>particles.move.speed</td>\n<td style=\"text-align:center\">number<br>原子移动速度</td>\n<td style=\"text-align:center\">4</td>\n</tr>\n<tr>\n<td>particles.move.direction</td>\n<td style=\"text-align:center\">string<br>原子移动方向</td>\n<td style=\"text-align:center\">“none”<br>“top”<br>“top-right”<br>“right” <br>“bottom-right”<br>“bottom”<br>“bottom-left”<br>“left”<br>“top-left”</td>\n</tr>\n<tr>\n<td>particles.move.random</td>\n<td style=\"text-align:center\">boolean<br>移动随机方向</td>\n<td style=\"text-align:center\">true / false</td>\n</tr>\n<tr>\n<td>particles.move.straight</td>\n<td style=\"text-align:center\">boolean<br>直接移动</td>\n<td style=\"text-align:center\">true / false</td>\n</tr>\n<tr>\n<td>particles.move.out_mode</td>\n<td style=\"text-align:center\">string (out of canvas)<br>是否移动出画布</td>\n<td style=\"text-align:center\">“out”<br>“bounce”</td>\n</tr>\n<tr>\n<td>particles.move.bounce</td>\n<td style=\"text-align:center\">boolean<br>(between particles)是否跳动移动</td>\n<td style=\"text-align:center\">true / false</td>\n</tr>\n<tr>\n<td>particles.move.attract.enable</td>\n<td style=\"text-align:center\">boolean<br>原子之间吸引</td>\n<td style=\"text-align:center\">true / false</td>\n</tr>\n<tr>\n<td>particles.move.attract.rotateX</td>\n<td style=\"text-align:center\">number<br>原子之间吸引X水平距离</td>\n<td style=\"text-align:center\">3000</td>\n</tr>\n<tr>\n<td>particles.move.attract.rotateY</td>\n<td style=\"text-align:center\">number<br>y垂直距离</td>\n<td style=\"text-align:center\">1500</td>\n</tr>\n<tr>\n<td>interactivity.detect_on</td>\n<td style=\"text-align:center\">string<br>原子之间互动检测</td>\n<td style=\"text-align:center\">“canvas”<br>“window”</td>\n</tr>\n<tr>\n<td>interactivity.events.onhover.enable</td>\n<td style=\"text-align:center\">boolean<br>是否悬停</td>\n<td style=\"text-align:center\">true / false</td>\n</tr>\n<tr>\n<td>interactivity.events.onhover.mode</td>\n<td style=\"text-align:center\">string<br>array selection<br>悬停模式</td>\n<td style=\"text-align:center\">“grab”&nbsp;&nbsp;&nbsp;&nbsp;抓取临近的<br>“bubble”&nbsp;&nbsp;&nbsp;&nbsp;泡沫球效果<br>“repulse”&nbsp;&nbsp;&nbsp;&nbsp;击退效果<br>[“grab”, “bubble”]</td>\n</tr>\n<tr>\n<td>interactivity.events.onclick.enable</td>\n<td style=\"text-align:center\">boolean<br>点击效果</td>\n<td style=\"text-align:center\">true / false</td>\n</tr>\n<tr>\n<td>interactivity.events.onclick.mode</td>\n<td style=\"text-align:center\">string<br>array selection<br>点击效果模式</td>\n<td style=\"text-align:center\">“push” <br>“remove”<br>“bubble”<br>“repulse”<br>[“push”, “repulse”]</td>\n</tr>\n<tr>\n<td>interactivity.events.resize</td>\n<td style=\"text-align:center\">boolean<br>互动事件调整</td>\n<td style=\"text-align:center\">true / false</td>\n</tr>\n<tr>\n<td>interactivity.events.modes.grab.distance</td>\n<td style=\"text-align:center\">number<br>原子互动抓取距离</td>\n<td style=\"text-align:center\">100</td>\n</tr>\n<tr>\n<td>interactivity.events.modes.grab.line_linked.opacity</td>\n<td style=\"text-align:center\">number(0 to 1)<br>原子互动抓取距离连线不透明度</td>\n<td style=\"text-align:center\">0.75</td>\n</tr>\n<tr>\n<td>interactivity.events.modes.bubble.distance</td>\n<td style=\"text-align:center\">number<br>原子抓取泡沫效果之间的距离</td>\n<td style=\"text-align:center\">100</td>\n</tr>\n<tr>\n<td>interactivity.events.modes.bubble.size</td>\n<td style=\"text-align:center\">number<br>原子抓取泡沫效果之间的大小</td>\n<td style=\"text-align:center\">40</td>\n</tr>\n<tr>\n<td>interactivity.events.modes.bubble.duration</td>\n<td style=\"text-align:center\">number<br>原子抓取泡沫效果之间的持续事件(second)</td>\n<td style=\"text-align:center\">0.4</td>\n</tr>\n<tr>\n<td>interactivity.events.modes.repulse.distance</td>\n<td style=\"text-align:center\">number<br>击退效果距离</td>\n<td style=\"text-align:center\">200</td>\n</tr>\n<tr>\n<td>interactivity.events.modes.repulse.duration</td>\n<td style=\"text-align:center\">number<br>击退效果持续事件(second)</td>\n<td style=\"text-align:center\">1.2</td>\n</tr>\n<tr>\n<td>interactivity.events.modes.push.particles_nb</td>\n<td style=\"text-align:center\">number<br>粒子推出的数量</td>\n<td style=\"text-align:center\">4</td>\n</tr>\n<tr>\n<td>interactivity.events.modes.push.particles_nb</td>\n<td style=\"text-align:center\">number</td>\n<td style=\"text-align:center\">4</td>\n</tr>\n<tr>\n<td>retina_detect</td>\n<td style=\"text-align:center\">boolean</td>\n<td style=\"text-align:center\">true / false</td>\n</tr>\n</tbody>\n</table>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"quick-start\"><a href=\"#quick-start\" class=\"headerlink\" title=\"quick start\"></a>quick start</h2><p>首先需要引用particles.js，然后创建一个空元素。</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">\"particles\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">......</span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">\"particles.js\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>然后在js中写配置就可以了</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">particlesJS.load(<span class=\"string\">'particles'</span>, &#123;</span><br><span class=\"line\">  <span class=\"comment\">// ......</span></span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<p>先展示完整的配置项示例，之后附上完整的api。</p>\n<figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">         <span class=\"attr\">\"particles\"</span>: &#123;</span><br><span class=\"line\">           <span class=\"attr\">\"number\"</span>: &#123;</span><br><span class=\"line\">             <span class=\"attr\">\"value\"</span>: <span class=\"number\">300</span>,</span><br><span class=\"line\">             <span class=\"attr\">\"density\"</span>: &#123;</span><br><span class=\"line\">               <span class=\"attr\">\"enable\"</span>: <span class=\"literal\">true</span>,</span><br><span class=\"line\">               <span class=\"attr\">\"value_area\"</span>: <span class=\"number\">700</span></span><br><span class=\"line\">             &#125;</span><br><span class=\"line\">           &#125;,</span><br><span class=\"line\">           <span class=\"attr\">\"color\"</span>: &#123;</span><br><span class=\"line\">             <span class=\"attr\">\"value\"</span>: [<span class=\"string\">\"#aa73ff\"</span>, <span class=\"string\">\"#f8c210\"</span>, <span class=\"string\">\"#83d238\"</span>, <span class=\"string\">\"#33b1f8\"</span>]</span><br><span class=\"line\">           &#125;,</span><br><span class=\"line\">           <span class=\"attr\">\"shape\"</span>: &#123;</span><br><span class=\"line\">             <span class=\"attr\">\"type\"</span>: <span class=\"string\">\"edge\"</span>,</span><br><span class=\"line\">             <span class=\"attr\">\"stroke\"</span>: &#123;</span><br><span class=\"line\">               <span class=\"attr\">\"width\"</span>: <span class=\"number\">0</span>,</span><br><span class=\"line\">               <span class=\"attr\">\"color\"</span>: <span class=\"string\">\"#000000\"</span></span><br><span class=\"line\">             &#125;,</span><br><span class=\"line\">             <span class=\"attr\">\"polygon\"</span>: &#123;</span><br><span class=\"line\">               <span class=\"attr\">\"nb_sides\"</span>: <span class=\"number\">15</span></span><br><span class=\"line\">             &#125;</span><br><span class=\"line\">           &#125;,</span><br><span class=\"line\">           <span class=\"attr\">\"opacity\"</span>: &#123;</span><br><span class=\"line\">             <span class=\"attr\">\"value\"</span>: <span class=\"number\">0.5</span>,</span><br><span class=\"line\">             <span class=\"attr\">\"random\"</span>: <span class=\"literal\">false</span>,</span><br><span class=\"line\">             <span class=\"attr\">\"anim\"</span>: &#123;</span><br><span class=\"line\">               <span class=\"attr\">\"enable\"</span>: <span class=\"literal\">false</span>,</span><br><span class=\"line\">               <span class=\"attr\">\"speed\"</span>: <span class=\"number\">1.5</span>,</span><br><span class=\"line\">               <span class=\"attr\">\"opacity_min\"</span>: <span class=\"number\">0.15</span>,</span><br><span class=\"line\">               <span class=\"attr\">\"sync\"</span>: <span class=\"literal\">false</span></span><br><span class=\"line\">             &#125;</span><br><span class=\"line\">           &#125;,</span><br><span class=\"line\">           <span class=\"attr\">\"size\"</span>: &#123;</span><br><span class=\"line\">             <span class=\"attr\">\"value\"</span>: <span class=\"number\">2.5</span>,</span><br><span class=\"line\">             <span class=\"attr\">\"random\"</span>: <span class=\"literal\">false</span>,</span><br><span class=\"line\">             <span class=\"attr\">\"anim\"</span>: &#123;</span><br><span class=\"line\">               <span class=\"attr\">\"enable\"</span>: <span class=\"literal\">true</span>,</span><br><span class=\"line\">               <span class=\"attr\">\"speed\"</span>: <span class=\"number\">2</span>,</span><br><span class=\"line\">               <span class=\"attr\">\"size_min\"</span>: <span class=\"number\">0.15</span>,</span><br><span class=\"line\">               <span class=\"attr\">\"sync\"</span>: <span class=\"literal\">false</span></span><br><span class=\"line\">             &#125;</span><br><span class=\"line\">           &#125;,</span><br><span class=\"line\">           <span class=\"attr\">\"line_linked\"</span>: &#123;</span><br><span class=\"line\">             <span class=\"attr\">\"enable\"</span>: <span class=\"literal\">true</span>,</span><br><span class=\"line\">             <span class=\"attr\">\"distance\"</span>: <span class=\"number\">110</span>,</span><br><span class=\"line\">             <span class=\"attr\">\"color\"</span>: <span class=\"string\">\"#33b1f8\"</span>,</span><br><span class=\"line\">             <span class=\"attr\">\"opacity\"</span>: <span class=\"number\">0.25</span>,</span><br><span class=\"line\">             <span class=\"attr\">\"width\"</span>: <span class=\"number\">1</span></span><br><span class=\"line\">           &#125;,</span><br><span class=\"line\">           <span class=\"attr\">\"move\"</span>: &#123;</span><br><span class=\"line\">             <span class=\"attr\">\"enable\"</span>: <span class=\"literal\">true</span>,</span><br><span class=\"line\">             <span class=\"attr\">\"speed\"</span>: <span class=\"number\">1.6</span>,</span><br><span class=\"line\">             <span class=\"attr\">\"direction\"</span>: <span class=\"string\">\"none\"</span>,</span><br><span class=\"line\">             <span class=\"attr\">\"random\"</span>: <span class=\"literal\">false</span>,</span><br><span class=\"line\">             <span class=\"attr\">\"straight\"</span>: <span class=\"literal\">false</span>,</span><br><span class=\"line\">             <span class=\"attr\">\"out_mode\"</span>: <span class=\"string\">\"out\"</span>,</span><br><span class=\"line\">             <span class=\"attr\">\"bounce\"</span>: <span class=\"literal\">false</span>,</span><br><span class=\"line\">             <span class=\"attr\">\"attract\"</span>: &#123;</span><br><span class=\"line\">               <span class=\"attr\">\"enable\"</span>: <span class=\"literal\">false</span>,</span><br><span class=\"line\">               <span class=\"attr\">\"rotateX\"</span>: <span class=\"number\">600</span>,</span><br><span class=\"line\">               <span class=\"attr\">\"rotateY\"</span>: <span class=\"number\">1200</span></span><br><span class=\"line\">             &#125;</span><br><span class=\"line\">           &#125;</span><br><span class=\"line\">         &#125;,</span><br><span class=\"line\">         <span class=\"attr\">\"interactivity\"</span>: &#123;</span><br><span class=\"line\">           <span class=\"attr\">\"detect_on\"</span>: <span class=\"string\">\"canvas\"</span>,</span><br><span class=\"line\">           <span class=\"attr\">\"events\"</span>: &#123;</span><br><span class=\"line\">             <span class=\"attr\">\"onhover\"</span>: &#123;</span><br><span class=\"line\">               <span class=\"attr\">\"enable\"</span>: <span class=\"literal\">false</span>,</span><br><span class=\"line\">               <span class=\"attr\">\"mode\"</span>: <span class=\"string\">\"repulse\"</span></span><br><span class=\"line\">             &#125;,</span><br><span class=\"line\">             <span class=\"attr\">\"onclick\"</span>: &#123;</span><br><span class=\"line\">               <span class=\"attr\">\"enable\"</span>: <span class=\"literal\">false</span>,</span><br><span class=\"line\">               <span class=\"attr\">\"mode\"</span>: <span class=\"string\">\"push\"</span></span><br><span class=\"line\">             &#125;,</span><br><span class=\"line\">             <span class=\"attr\">\"resize\"</span>: <span class=\"literal\">true</span></span><br><span class=\"line\">           &#125;,</span><br><span class=\"line\">           <span class=\"attr\">\"modes\"</span>: &#123;</span><br><span class=\"line\">             <span class=\"attr\">\"grab\"</span>: &#123;</span><br><span class=\"line\">               <span class=\"attr\">\"distance\"</span>: <span class=\"number\">400</span>,</span><br><span class=\"line\">               <span class=\"attr\">\"line_linked\"</span>: &#123;</span><br><span class=\"line\">                 <span class=\"attr\">\"opacity\"</span>: <span class=\"number\">1</span></span><br><span class=\"line\">               &#125;</span><br><span class=\"line\">             &#125;,</span><br><span class=\"line\">             <span class=\"attr\">\"bubble\"</span>: &#123;</span><br><span class=\"line\">               <span class=\"attr\">\"distance\"</span>: <span class=\"number\">400</span>,</span><br><span class=\"line\">               <span class=\"attr\">\"size\"</span>: <span class=\"number\">40</span>,</span><br><span class=\"line\">               <span class=\"attr\">\"duration\"</span>: <span class=\"number\">2</span>,</span><br><span class=\"line\">               <span class=\"attr\">\"opacity\"</span>: <span class=\"number\">8</span>,</span><br><span class=\"line\">               <span class=\"attr\">\"speed\"</span>: <span class=\"number\">3</span></span><br><span class=\"line\">             &#125;,</span><br><span class=\"line\">             <span class=\"attr\">\"repulse\"</span>: &#123;</span><br><span class=\"line\">               <span class=\"attr\">\"distance\"</span>: <span class=\"number\">200</span>,</span><br><span class=\"line\">               <span class=\"attr\">\"duration\"</span>: <span class=\"number\">0.4</span></span><br><span class=\"line\">             &#125;,</span><br><span class=\"line\">             <span class=\"attr\">\"push\"</span>: &#123;</span><br><span class=\"line\">               <span class=\"attr\">\"particles_nb\"</span>: <span class=\"number\">4</span></span><br><span class=\"line\">             &#125;,</span><br><span class=\"line\">             <span class=\"attr\">\"remove\"</span>: &#123;</span><br><span class=\"line\">               <span class=\"attr\">\"particles_nb\"</span>: <span class=\"number\">2</span></span><br><span class=\"line\">             &#125;</span><br><span class=\"line\">           &#125;</span><br><span class=\"line\">         &#125;,</span><br><span class=\"line\">         <span class=\"attr\">\"retina_detect\"</span>: <span class=\"literal\">true</span></span><br><span class=\"line\">       &#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"Api手册\"><a href=\"#Api手册\" class=\"headerlink\" title=\"Api手册\"></a>Api手册</h2><table>\n<thead>\n<tr>\n<th>键值</th>\n<th style=\"text-align:center\">参数说明</th>\n<th style=\"text-align:center\">示例/默认值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>particles.number.value</td>\n<td style=\"text-align:center\">number<br>数量</td>\n<td style=\"text-align:center\">40</td>\n</tr>\n<tr>\n<td>particles.number.density.enable</td>\n<td style=\"text-align:center\">boolean</td>\n<td style=\"text-align:center\">true / false</td>\n</tr>\n<tr>\n<td>particles.number.density.value_area</td>\n<td style=\"text-align:center\">number<br>区域散布密度大小</td>\n<td style=\"text-align:center\">800</td>\n</tr>\n<tr>\n<td>particles.color.value</td>\n<td style=\"text-align:center\">HEX (string)<br>RGB (object)<br>HSL (object)<br> array selection (HEX) <br>random (string)<br>原子的颜色</td>\n<td style=\"text-align:center\">“#b61924”<br>{r:182, g:25, b:36}<br>{h:356, s:76, l:41}<br>[“#b61924”, “#333333”, “999999”]<br>“random”</td>\n</tr>\n<tr>\n<td>particles.shape.type</td>\n<td style=\"text-align:center\">string<br>array selection<br>原子的形状</td>\n<td style=\"text-align:center\">“circle”<br>“edge” <br>“triangle”<br>“polygon”<br>“star”<br>“image”<br>[“circle”, “triangle”, “image”]</td>\n</tr>\n<tr>\n<td>particles.shape.stroke.width</td>\n<td style=\"text-align:center\">number<br>原理的宽度</td>\n<td style=\"text-align:center\">2</td>\n</tr>\n<tr>\n<td>particles.shape.stroke.color</td>\n<td style=\"text-align:center\">HEX (string)<br>原子颜色</td>\n<td style=\"text-align:center\">“#222222”</td>\n</tr>\n<tr>\n<td>particles.shape.polygon.nb_slides</td>\n<td style=\"text-align:center\">number<br>原子的多边形边数</td>\n<td style=\"text-align:center\">5</td>\n</tr>\n<tr>\n<td>particles.shape.image.src</td>\n<td style=\"text-align:center\">path<br>link<br>svg / png / gif / jpg<br>原子的图片可以使用自定义图片</td>\n<td style=\"text-align:center\">“assets/img/yop.svg”<br>“<a href=\"https://xxx.com/xxx.jpg&quot;\" target=\"_blank\" rel=\"noopener\">https://xxx.com/xxx.jpg&quot;</a></td>\n</tr>\n<tr>\n<td>particles.shape.image.width</td>\n<td style=\"text-align:center\">number(for aspect ratio)<br>图片宽度</td>\n<td style=\"text-align:center\">100</td>\n</tr>\n<tr>\n<td>particles.shape.image.height</td>\n<td style=\"text-align:center\">number(for aspect ratio)<br>图片高度</td>\n<td style=\"text-align:center\">100</td>\n</tr>\n<tr>\n<td>particles.opacity.value</td>\n<td style=\"text-align:center\">number(0 to 1)<br>不透明度</td>\n<td style=\"text-align:center\">0.75</td>\n</tr>\n<tr>\n<td>particles.opacity.random</td>\n<td style=\"text-align:center\">boolean<br>随机不透明度</td>\n<td style=\"text-align:center\">true / false</td>\n</tr>\n<tr>\n<td>particles.opacity.anim.enable</td>\n<td style=\"text-align:center\">boolean<br>渐变动画</td>\n<td style=\"text-align:center\">true / false</td>\n</tr>\n<tr>\n<td>particles.opacity.anim.speed</td>\n<td style=\"text-align:center\">number<br>渐变动画速度</td>\n<td style=\"text-align:center\">3</td>\n</tr>\n<tr>\n<td>particles.opacity.anim.opacity_min</td>\n<td style=\"text-align:center\">number(0 to 1)<br>渐变动画不透明度</td>\n<td style=\"text-align:center\">0.25</td>\n</tr>\n<tr>\n<td>particles.opacity.anim.sync</td>\n<td style=\"text-align:center\">boolean</td>\n<td style=\"text-align:center\">true / false</td>\n</tr>\n<tr>\n<td>particles.size.value</td>\n<td style=\"text-align:center\">number<br>原子大小</td>\n<td style=\"text-align:center\">20</td>\n</tr>\n<tr>\n<td>particles.size.random</td>\n<td style=\"text-align:center\">boolean<br>原子大小随机</td>\n<td style=\"text-align:center\">true / false</td>\n</tr>\n<tr>\n<td>particles.size.anim.enable</td>\n<td style=\"text-align:center\">boolean<br>原子渐变</td>\n<td style=\"text-align:center\">true / false</td>\n</tr>\n<tr>\n<td>particles.size.anim.speed</td>\n<td style=\"text-align:center\">number<br>原子渐变速度</td>\n<td style=\"text-align:center\">3</td>\n</tr>\n<tr>\n<td>particles.size.anim.size_min</td>\n<td style=\"text-align:center\">number</td>\n<td style=\"text-align:center\">0.25</td>\n</tr>\n<tr>\n<td>particles.size.anim.sync</td>\n<td style=\"text-align:center\">boolean</td>\n<td style=\"text-align:center\">true / false</td>\n</tr>\n<tr>\n<td>particles.line_linked.enable</td>\n<td style=\"text-align:center\">boolean<br>连接线</td>\n<td style=\"text-align:center\">true / false</td>\n</tr>\n<tr>\n<td>particles.line_linked.distance</td>\n<td style=\"text-align:center\">number<br>连接线距离</td>\n<td style=\"text-align:center\">150</td>\n</tr>\n<tr>\n<td>particles.line_linked.color</td>\n<td style=\"text-align:center\">HEX(string)<br>连接线颜色</td>\n<td style=\"text-align:center\">#ffffff</td>\n</tr>\n<tr>\n<td>particles.line_linked.opacity</td>\n<td style=\"text-align:center\">number(0 to 1)<br>连接线不透明度</td>\n<td style=\"text-align:center\">0.5</td>\n</tr>\n<tr>\n<td>particles.line_linked.width</td>\n<td style=\"text-align:center\">number<br>连接线的宽度</td>\n<td style=\"text-align:center\">1.5</td>\n</tr>\n<tr>\n<td>particles.move.enable</td>\n<td style=\"text-align:center\">boolean<br>原子移动</td>\n<td style=\"text-align:center\">true / false</td>\n</tr>\n<tr>\n<td>particles.move.speed</td>\n<td style=\"text-align:center\">number<br>原子移动速度</td>\n<td style=\"text-align:center\">4</td>\n</tr>\n<tr>\n<td>particles.move.direction</td>\n<td style=\"text-align:center\">string<br>原子移动方向</td>\n<td style=\"text-align:center\">“none”<br>“top”<br>“top-right”<br>“right” <br>“bottom-right”<br>“bottom”<br>“bottom-left”<br>“left”<br>“top-left”</td>\n</tr>\n<tr>\n<td>particles.move.random</td>\n<td style=\"text-align:center\">boolean<br>移动随机方向</td>\n<td style=\"text-align:center\">true / false</td>\n</tr>\n<tr>\n<td>particles.move.straight</td>\n<td style=\"text-align:center\">boolean<br>直接移动</td>\n<td style=\"text-align:center\">true / false</td>\n</tr>\n<tr>\n<td>particles.move.out_mode</td>\n<td style=\"text-align:center\">string (out of canvas)<br>是否移动出画布</td>\n<td style=\"text-align:center\">“out”<br>“bounce”</td>\n</tr>\n<tr>\n<td>particles.move.bounce</td>\n<td style=\"text-align:center\">boolean<br>(between particles)是否跳动移动</td>\n<td style=\"text-align:center\">true / false</td>\n</tr>\n<tr>\n<td>particles.move.attract.enable</td>\n<td style=\"text-align:center\">boolean<br>原子之间吸引</td>\n<td style=\"text-align:center\">true / false</td>\n</tr>\n<tr>\n<td>particles.move.attract.rotateX</td>\n<td style=\"text-align:center\">number<br>原子之间吸引X水平距离</td>\n<td style=\"text-align:center\">3000</td>\n</tr>\n<tr>\n<td>particles.move.attract.rotateY</td>\n<td style=\"text-align:center\">number<br>y垂直距离</td>\n<td style=\"text-align:center\">1500</td>\n</tr>\n<tr>\n<td>interactivity.detect_on</td>\n<td style=\"text-align:center\">string<br>原子之间互动检测</td>\n<td style=\"text-align:center\">“canvas”<br>“window”</td>\n</tr>\n<tr>\n<td>interactivity.events.onhover.enable</td>\n<td style=\"text-align:center\">boolean<br>是否悬停</td>\n<td style=\"text-align:center\">true / false</td>\n</tr>\n<tr>\n<td>interactivity.events.onhover.mode</td>\n<td style=\"text-align:center\">string<br>array selection<br>悬停模式</td>\n<td style=\"text-align:center\">“grab”&nbsp;&nbsp;&nbsp;&nbsp;抓取临近的<br>“bubble”&nbsp;&nbsp;&nbsp;&nbsp;泡沫球效果<br>“repulse”&nbsp;&nbsp;&nbsp;&nbsp;击退效果<br>[“grab”, “bubble”]</td>\n</tr>\n<tr>\n<td>interactivity.events.onclick.enable</td>\n<td style=\"text-align:center\">boolean<br>点击效果</td>\n<td style=\"text-align:center\">true / false</td>\n</tr>\n<tr>\n<td>interactivity.events.onclick.mode</td>\n<td style=\"text-align:center\">string<br>array selection<br>点击效果模式</td>\n<td style=\"text-align:center\">“push” <br>“remove”<br>“bubble”<br>“repulse”<br>[“push”, “repulse”]</td>\n</tr>\n<tr>\n<td>interactivity.events.resize</td>\n<td style=\"text-align:center\">boolean<br>互动事件调整</td>\n<td style=\"text-align:center\">true / false</td>\n</tr>\n<tr>\n<td>interactivity.events.modes.grab.distance</td>\n<td style=\"text-align:center\">number<br>原子互动抓取距离</td>\n<td style=\"text-align:center\">100</td>\n</tr>\n<tr>\n<td>interactivity.events.modes.grab.line_linked.opacity</td>\n<td style=\"text-align:center\">number(0 to 1)<br>原子互动抓取距离连线不透明度</td>\n<td style=\"text-align:center\">0.75</td>\n</tr>\n<tr>\n<td>interactivity.events.modes.bubble.distance</td>\n<td style=\"text-align:center\">number<br>原子抓取泡沫效果之间的距离</td>\n<td style=\"text-align:center\">100</td>\n</tr>\n<tr>\n<td>interactivity.events.modes.bubble.size</td>\n<td style=\"text-align:center\">number<br>原子抓取泡沫效果之间的大小</td>\n<td style=\"text-align:center\">40</td>\n</tr>\n<tr>\n<td>interactivity.events.modes.bubble.duration</td>\n<td style=\"text-align:center\">number<br>原子抓取泡沫效果之间的持续事件(second)</td>\n<td style=\"text-align:center\">0.4</td>\n</tr>\n<tr>\n<td>interactivity.events.modes.repulse.distance</td>\n<td style=\"text-align:center\">number<br>击退效果距离</td>\n<td style=\"text-align:center\">200</td>\n</tr>\n<tr>\n<td>interactivity.events.modes.repulse.duration</td>\n<td style=\"text-align:center\">number<br>击退效果持续事件(second)</td>\n<td style=\"text-align:center\">1.2</td>\n</tr>\n<tr>\n<td>interactivity.events.modes.push.particles_nb</td>\n<td style=\"text-align:center\">number<br>粒子推出的数量</td>\n<td style=\"text-align:center\">4</td>\n</tr>\n<tr>\n<td>interactivity.events.modes.push.particles_nb</td>\n<td style=\"text-align:center\">number</td>\n<td style=\"text-align:center\">4</td>\n</tr>\n<tr>\n<td>retina_detect</td>\n<td style=\"text-align:center\">boolean</td>\n<td style=\"text-align:center\">true / false</td>\n</tr>\n</tbody>\n</table>\n"},{"title":"promise 详解","date":"2020-04-09T06:22:19.000Z","top":true,"description":"面试中常被问起promise，在这里总结一下","_content":"最近想重新换工作，几乎所有面试都会问到 promise，有简单理解的，也有问到一些比较复杂的实现，有些我是知道的但也有些是不清楚的，所以查阅资料，把关于 promise 的知识补充提升一下。\n\n> 本文旨在说明 promise，并未实现具体的 ajax 请求。\n\n## promise 的出现解决了什么样的问题\n\n### 回调地狱\n\n假设一种业务场景，你需要取到所有开源库的列表（假设列表本身按照开源库热度排序），你需要读取当中热度第一的库名称，然后通过调用查询接口查出该库官方文档地址\n\n```js\n  ajax('aaa', success(res) {\n    const lib = res\n    // ...other code\n    ajax(`bbb`, success(res) {\n      // ... other code\n    })\n  })\n```\n\n事实上，真实的业务可能比例子复杂很多，而后一步的操作又必须基于上一步操作的结果，我们不得不将代码组织成这样的回调。然而这样的代码存在很大的问题：\n\n- 代码无法执行 return\n- 回调层数过多会导致逻辑很难读懂，并且后期维护难度很大\n\n### 条件返回\n\n在视频网站或者直播网站很常见到一种场景，视频会分多条线路（主线路、备用线路1、备用线路2...），业务上，打开网站的时候，会同时去请求这三个视频的接口，只要其中一个接口返回了数据，中断其他接口的请求。这样的业务需求在之前的方法中都没有很好地实现方法。\n\n## promise 详解\n\n### 基本语法 && 成功处理\n\n```js\n  new Promise((resolve, reject)=> {\n    resolve('success')\n    reject('error')\n  })\n  .then(\n    res=> { console.log('success', res) }\n    err=> { console.log('error', err) }\n  )\n  .catch(err=> { console.log(err) })\n```\n\n- promise 有三个状态\n  - pending 等待结果返回（未完成）\n  - fulfilled 实现（操作完成）\n  - rejected 被拒绝（操作失败）\n  - 状态一旦改变，不会再次改变\n- 因此 promise 状态状态改变只有两种可能\n  - pending => fulfilled\n  - pending => rejected\n\n其中 pending => fulfilled 表示操作由未完成变为成功，这时会触发`resolve`，**将操作的结果作为参数传递出去**，pending => rejected 表示操作由未完成变为成功，这时会触发`reject`，**将操作结果的错误信息作为参数传递出去。**\n**必须注意的是，promise 会将状态传递出去，用于下一步骤操作的参数**\n\n```js\n  new Promise(resolve=> {\n    ajax('aaa', success(data) {\n      // data = {name: 'singleDogNo.1'}\n      resolve(data)\n    })\n  }).then(res=> {\n    return new Promise(resolve=> {\n      ajax('bbb', success(data) {\n        // data = {age: 27}\n        resolve(...[res, data])\n      })\n    })\n  }).then(res=> {\n    console.log(res)\n    /*\n      {\n        name: 'singleDogNo.1',\n        age: 27\n      }\n    */\n  })\n```\n\n### 错误处理\n\npromise 会自动捕捉异常，交给 rejected 函数处理\n\n```js\n  new Promise(resolve=> {\n    setTimeout(()=> {\n      throw new Error('error!')\n    })\n  })\n  .then(res=> {\n    console.log(res)\n  })\n  .catch(err=> {\n    console.log(err) // error!\n  })\n```\n\n这里需要注意的是链式执行异步操作时，你可以选择为每一步操作做错误处理，类似`a().then(b()).catch().then(c()).catch()`，也可以将错误处理放在最后执行，类似`a().then(b()).then(c()).catch()`。但一般推荐第二种方式，更加方便阅读。\n\n还有一点需要注意的是 catch 本身也会返回 promise 实例，并且状态是 resolve，而且一旦执行到 catch 中，链式操作将会中断，不再继续执行。\n\n```js\n  new Promise(resolve=> {\n    setTimeout(()=> {\n      resolve()\n    }, 1000)\n  })\n  .then(()=> {\n    console.log('promise1')\n    throw new Error('error')\n  })\n  .then(()=> {\n    console.log('promise2')\n  })\n  .then(()=> {\n    console.log('promise3')\n  })\n  .catch(err=> {\n    console.log(err)\n  })\n  // promise1\n  // Error: error\n  // 不会继续执行 promise2 和 promise3\n```\n\n### promise.all()\n\n这个方法会在所有异步操作执行完成并且状态全部为成功的时候执行回调方法\n\n```js\n  function randomA() {\n    return new Promise((resolve,reject)=> {\n      setTimeout(()=> {\n        const num = Math.floor(Math.random() * 10)\n        console.log('num: ', num);\n        if (num <= 5) {\n          resolve(num)\n        } else {\n          reject('randomA:数字大于5是不行的')\n        }\n      }, 1000)\n    })\n  }\n\n  function randomB() {\n    return new Promise((resolve,reject)=> {\n      setTimeout(()=> {\n        const num = Math.floor(Math.random() * 10)\n        console.log('num: ', num);\n        if (num <= 5) {\n          resolve(num)\n        } else {\n          reject('randomB:数字大于5是不行的')\n        }\n      }, 1000)\n    })\n  }\n\n  function randomC() {\n    return new Promise((resolve,reject)=> {\n      setTimeout(()=> {\n        const num = Math.floor(Math.random() * 10)\n        console.log('num: ', num);\n        if (num <= 5) {\n          resolve(num)\n        } else {\n          reject('randomC:数字大于5是不行的')\n        }\n      }, 1000)\n    })\n  }\n\n  Promise.all([randomA(), randomB(), randomC()]).then(res=> {\n    console.log(res)\n    // success: [1,2,3]\n    // error: Uncaught (in promise) randomB:数字大于5是不行的\n  })\n```\n\n可以复制上面代码运行，只有当三个方法值全部小于 5，才会返回正确的值。可以看到正确返回时，返回值是数组的形式。数组中每一项对应 all 方法中的每一个异步操作的结果。\n\n### promise.race()\n\n回想一下上面描述的视频平台切换可选线路的问题。在 promise 中可以使用`promise.race()`方法解决。这个方法完全区别于`promise.all()`，上面的方法在所有异步操作完成之后才执行，这个方法则是**谁先完成就先处理谁的回调方法。**先执行完的方法无论成功或失败，其余的操作还会继续执行，但是不会进入 race 的回调方法。\n\n```js\n  // promise.all 的例子，将 timeout 区分开来\n  function randomA() {\n    return new Promise((resolve,reject)=> {\n      setTimeout(()=> {\n        const num = Math.floor(Math.random() * 10)\n        console.log('num: ', num);\n        if (num <= 5) {\n          resolve(num)\n        } else {\n          reject('randomA:数字大于5是不行的')\n        }\n      }, 1000)\n    })\n  }\n\n  function randomB() {\n    return new Promise((resolve,reject)=> {\n      setTimeout(()=> {\n        const num = Math.floor(Math.random() * 10)\n        console.log('num: ', num);\n        if (num <= 5) {\n          resolve(num)\n        } else {\n          reject('randomB:数字大于5是不行的')\n        }\n      }, 2000)\n    })\n  }\n\n  function randomC() {\n    return new Promise((resolve,reject)=> {\n      setTimeout(()=> {\n        const num = Math.floor(Math.random() * 10)\n        console.log('num: ', num);\n        if (num <= 5) {\n          resolve(num)\n        } else {\n          reject('randomC:数字大于5是不行的')\n        }\n      }, 3000)\n    })\n  }\n\n  Promise.race([randomA(), randomB(), randomC()]).then(\n    res=> {\n      console.log('res: ', res)\n    },\n    err=> {\n      console.log('err: ', err)\n    }\n  )\n```\n\n#### 利用promise.race实现需求 - 如果接口 10s 内返回数据就处理数据，否则执行其他操作\n\n```js\n  function getData() {\n    return new Promise(resolve=> {\n      ajax('url', success(res) {\n        resolve()\n      })\n    })\n  }\n\n  function timeout() {\n    return new Promise((resolve, reject)=> {\n      setTimeout(()=> {\n        reject('请求超时')\n      }, 10000)\n    })\n  }\n\n  Promise.race([getData(), timeout()])\n  .then(res=> {\n    console.log(res)\n  })\n  .catch(err=> {\n    console.log(err)\n  })\n```\n","source":"_posts/promise.md","raw":"---\ntitle: promise 详解\ndate: 2020-04-09 14:22:19\ntags: [es6, promise]\ncategories: [JavaScript]\ntop: true\ndescription: 面试中常被问起promise，在这里总结一下\n---\n最近想重新换工作，几乎所有面试都会问到 promise，有简单理解的，也有问到一些比较复杂的实现，有些我是知道的但也有些是不清楚的，所以查阅资料，把关于 promise 的知识补充提升一下。\n\n> 本文旨在说明 promise，并未实现具体的 ajax 请求。\n\n## promise 的出现解决了什么样的问题\n\n### 回调地狱\n\n假设一种业务场景，你需要取到所有开源库的列表（假设列表本身按照开源库热度排序），你需要读取当中热度第一的库名称，然后通过调用查询接口查出该库官方文档地址\n\n```js\n  ajax('aaa', success(res) {\n    const lib = res\n    // ...other code\n    ajax(`bbb`, success(res) {\n      // ... other code\n    })\n  })\n```\n\n事实上，真实的业务可能比例子复杂很多，而后一步的操作又必须基于上一步操作的结果，我们不得不将代码组织成这样的回调。然而这样的代码存在很大的问题：\n\n- 代码无法执行 return\n- 回调层数过多会导致逻辑很难读懂，并且后期维护难度很大\n\n### 条件返回\n\n在视频网站或者直播网站很常见到一种场景，视频会分多条线路（主线路、备用线路1、备用线路2...），业务上，打开网站的时候，会同时去请求这三个视频的接口，只要其中一个接口返回了数据，中断其他接口的请求。这样的业务需求在之前的方法中都没有很好地实现方法。\n\n## promise 详解\n\n### 基本语法 && 成功处理\n\n```js\n  new Promise((resolve, reject)=> {\n    resolve('success')\n    reject('error')\n  })\n  .then(\n    res=> { console.log('success', res) }\n    err=> { console.log('error', err) }\n  )\n  .catch(err=> { console.log(err) })\n```\n\n- promise 有三个状态\n  - pending 等待结果返回（未完成）\n  - fulfilled 实现（操作完成）\n  - rejected 被拒绝（操作失败）\n  - 状态一旦改变，不会再次改变\n- 因此 promise 状态状态改变只有两种可能\n  - pending => fulfilled\n  - pending => rejected\n\n其中 pending => fulfilled 表示操作由未完成变为成功，这时会触发`resolve`，**将操作的结果作为参数传递出去**，pending => rejected 表示操作由未完成变为成功，这时会触发`reject`，**将操作结果的错误信息作为参数传递出去。**\n**必须注意的是，promise 会将状态传递出去，用于下一步骤操作的参数**\n\n```js\n  new Promise(resolve=> {\n    ajax('aaa', success(data) {\n      // data = {name: 'singleDogNo.1'}\n      resolve(data)\n    })\n  }).then(res=> {\n    return new Promise(resolve=> {\n      ajax('bbb', success(data) {\n        // data = {age: 27}\n        resolve(...[res, data])\n      })\n    })\n  }).then(res=> {\n    console.log(res)\n    /*\n      {\n        name: 'singleDogNo.1',\n        age: 27\n      }\n    */\n  })\n```\n\n### 错误处理\n\npromise 会自动捕捉异常，交给 rejected 函数处理\n\n```js\n  new Promise(resolve=> {\n    setTimeout(()=> {\n      throw new Error('error!')\n    })\n  })\n  .then(res=> {\n    console.log(res)\n  })\n  .catch(err=> {\n    console.log(err) // error!\n  })\n```\n\n这里需要注意的是链式执行异步操作时，你可以选择为每一步操作做错误处理，类似`a().then(b()).catch().then(c()).catch()`，也可以将错误处理放在最后执行，类似`a().then(b()).then(c()).catch()`。但一般推荐第二种方式，更加方便阅读。\n\n还有一点需要注意的是 catch 本身也会返回 promise 实例，并且状态是 resolve，而且一旦执行到 catch 中，链式操作将会中断，不再继续执行。\n\n```js\n  new Promise(resolve=> {\n    setTimeout(()=> {\n      resolve()\n    }, 1000)\n  })\n  .then(()=> {\n    console.log('promise1')\n    throw new Error('error')\n  })\n  .then(()=> {\n    console.log('promise2')\n  })\n  .then(()=> {\n    console.log('promise3')\n  })\n  .catch(err=> {\n    console.log(err)\n  })\n  // promise1\n  // Error: error\n  // 不会继续执行 promise2 和 promise3\n```\n\n### promise.all()\n\n这个方法会在所有异步操作执行完成并且状态全部为成功的时候执行回调方法\n\n```js\n  function randomA() {\n    return new Promise((resolve,reject)=> {\n      setTimeout(()=> {\n        const num = Math.floor(Math.random() * 10)\n        console.log('num: ', num);\n        if (num <= 5) {\n          resolve(num)\n        } else {\n          reject('randomA:数字大于5是不行的')\n        }\n      }, 1000)\n    })\n  }\n\n  function randomB() {\n    return new Promise((resolve,reject)=> {\n      setTimeout(()=> {\n        const num = Math.floor(Math.random() * 10)\n        console.log('num: ', num);\n        if (num <= 5) {\n          resolve(num)\n        } else {\n          reject('randomB:数字大于5是不行的')\n        }\n      }, 1000)\n    })\n  }\n\n  function randomC() {\n    return new Promise((resolve,reject)=> {\n      setTimeout(()=> {\n        const num = Math.floor(Math.random() * 10)\n        console.log('num: ', num);\n        if (num <= 5) {\n          resolve(num)\n        } else {\n          reject('randomC:数字大于5是不行的')\n        }\n      }, 1000)\n    })\n  }\n\n  Promise.all([randomA(), randomB(), randomC()]).then(res=> {\n    console.log(res)\n    // success: [1,2,3]\n    // error: Uncaught (in promise) randomB:数字大于5是不行的\n  })\n```\n\n可以复制上面代码运行，只有当三个方法值全部小于 5，才会返回正确的值。可以看到正确返回时，返回值是数组的形式。数组中每一项对应 all 方法中的每一个异步操作的结果。\n\n### promise.race()\n\n回想一下上面描述的视频平台切换可选线路的问题。在 promise 中可以使用`promise.race()`方法解决。这个方法完全区别于`promise.all()`，上面的方法在所有异步操作完成之后才执行，这个方法则是**谁先完成就先处理谁的回调方法。**先执行完的方法无论成功或失败，其余的操作还会继续执行，但是不会进入 race 的回调方法。\n\n```js\n  // promise.all 的例子，将 timeout 区分开来\n  function randomA() {\n    return new Promise((resolve,reject)=> {\n      setTimeout(()=> {\n        const num = Math.floor(Math.random() * 10)\n        console.log('num: ', num);\n        if (num <= 5) {\n          resolve(num)\n        } else {\n          reject('randomA:数字大于5是不行的')\n        }\n      }, 1000)\n    })\n  }\n\n  function randomB() {\n    return new Promise((resolve,reject)=> {\n      setTimeout(()=> {\n        const num = Math.floor(Math.random() * 10)\n        console.log('num: ', num);\n        if (num <= 5) {\n          resolve(num)\n        } else {\n          reject('randomB:数字大于5是不行的')\n        }\n      }, 2000)\n    })\n  }\n\n  function randomC() {\n    return new Promise((resolve,reject)=> {\n      setTimeout(()=> {\n        const num = Math.floor(Math.random() * 10)\n        console.log('num: ', num);\n        if (num <= 5) {\n          resolve(num)\n        } else {\n          reject('randomC:数字大于5是不行的')\n        }\n      }, 3000)\n    })\n  }\n\n  Promise.race([randomA(), randomB(), randomC()]).then(\n    res=> {\n      console.log('res: ', res)\n    },\n    err=> {\n      console.log('err: ', err)\n    }\n  )\n```\n\n#### 利用promise.race实现需求 - 如果接口 10s 内返回数据就处理数据，否则执行其他操作\n\n```js\n  function getData() {\n    return new Promise(resolve=> {\n      ajax('url', success(res) {\n        resolve()\n      })\n    })\n  }\n\n  function timeout() {\n    return new Promise((resolve, reject)=> {\n      setTimeout(()=> {\n        reject('请求超时')\n      }, 10000)\n    })\n  }\n\n  Promise.race([getData(), timeout()])\n  .then(res=> {\n    console.log(res)\n  })\n  .catch(err=> {\n    console.log(err)\n  })\n```\n","slug":"promise","published":1,"updated":"2021-06-25T11:19:55.442Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckqc904or000wwotv62a5rt8f","content":"<p>最近想重新换工作，几乎所有面试都会问到 promise，有简单理解的，也有问到一些比较复杂的实现，有些我是知道的但也有些是不清楚的，所以查阅资料，把关于 promise 的知识补充提升一下。</p>\n<blockquote>\n<p>本文旨在说明 promise，并未实现具体的 ajax 请求。</p>\n</blockquote>\n<h2 id=\"promise-的出现解决了什么样的问题\"><a href=\"#promise-的出现解决了什么样的问题\" class=\"headerlink\" title=\"promise 的出现解决了什么样的问题\"></a>promise 的出现解决了什么样的问题</h2><h3 id=\"回调地狱\"><a href=\"#回调地狱\" class=\"headerlink\" title=\"回调地狱\"></a>回调地狱</h3><p>假设一种业务场景，你需要取到所有开源库的列表（假设列表本身按照开源库热度排序），你需要读取当中热度第一的库名称，然后通过调用查询接口查出该库官方文档地址</p>\n<div class=\"code-panel__wrapper\" autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\"><header class=\"mac-panel\"><span class=\"doc-path\"></span><span class=\"mac-panel__language\">JS</span></header><figure class=\"iseeu highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ajax(<span class=\"string\">'aaa'</span>, success(res) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">const</span> lib = res</span><br><span class=\"line\">  <span class=\"comment\">// ...other code</span></span><br><span class=\"line\">  ajax(<span class=\"string\">`bbb`</span>, success(res) &#123;</span><br><span class=\"line\">    <span class=\"comment\">// ... other code</span></span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure></div>\n<p>事实上，真实的业务可能比例子复杂很多，而后一步的操作又必须基于上一步操作的结果，我们不得不将代码组织成这样的回调。然而这样的代码存在很大的问题：</p>\n<ul>\n<li>代码无法执行 return</li>\n<li>回调层数过多会导致逻辑很难读懂，并且后期维护难度很大</li>\n</ul>\n<h3 id=\"条件返回\"><a href=\"#条件返回\" class=\"headerlink\" title=\"条件返回\"></a>条件返回</h3><p>在视频网站或者直播网站很常见到一种场景，视频会分多条线路（主线路、备用线路1、备用线路2…），业务上，打开网站的时候，会同时去请求这三个视频的接口，只要其中一个接口返回了数据，中断其他接口的请求。这样的业务需求在之前的方法中都没有很好地实现方法。</p>\n<h2 id=\"promise-详解\"><a href=\"#promise-详解\" class=\"headerlink\" title=\"promise 详解\"></a>promise 详解</h2><h3 id=\"基本语法-amp-amp-成功处理\"><a href=\"#基本语法-amp-amp-成功处理\" class=\"headerlink\" title=\"基本语法 &amp;&amp; 成功处理\"></a>基本语法 &amp;&amp; 成功处理</h3><div class=\"code-panel__wrapper\" autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\"><header class=\"mac-panel\"><span class=\"doc-path\"></span><span class=\"mac-panel__language\">JS</span></header><figure class=\"iseeu highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">new</span> <span class=\"built_in\">Promise</span>(<span class=\"function\">(<span class=\"params\">resolve, reject</span>)=&gt;</span> &#123;</span><br><span class=\"line\">  resolve(<span class=\"string\">'success'</span>)</span><br><span class=\"line\">  reject(<span class=\"string\">'error'</span>)</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\">.then(</span><br><span class=\"line\">  res=&gt; &#123; <span class=\"built_in\">console</span>.log(<span class=\"string\">'success'</span>, res) &#125;</span><br><span class=\"line\">  err=&gt; &#123; <span class=\"built_in\">console</span>.log(<span class=\"string\">'error'</span>, err) &#125;</span><br><span class=\"line\">)</span><br><span class=\"line\">.catch(<span class=\"function\"><span class=\"params\">err</span>=&gt;</span> &#123; <span class=\"built_in\">console</span>.log(err) &#125;)</span><br></pre></td></tr></table></figure></div>\n<ul>\n<li>promise 有三个状态<ul>\n<li>pending 等待结果返回（未完成）</li>\n<li>fulfilled 实现（操作完成）</li>\n<li>rejected 被拒绝（操作失败）</li>\n<li>状态一旦改变，不会再次改变</li>\n</ul>\n</li>\n<li>因此 promise 状态状态改变只有两种可能<ul>\n<li>pending =&gt; fulfilled</li>\n<li>pending =&gt; rejected</li>\n</ul>\n</li>\n</ul>\n<p>其中 pending =&gt; fulfilled 表示操作由未完成变为成功，这时会触发<code>resolve</code>，<strong>将操作的结果作为参数传递出去</strong>，pending =&gt; rejected 表示操作由未完成变为成功，这时会触发<code>reject</code>，<strong>将操作结果的错误信息作为参数传递出去。</strong><br><strong>必须注意的是，promise 会将状态传递出去，用于下一步骤操作的参数</strong></p>\n<div class=\"code-panel__wrapper\" autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\"><header class=\"mac-panel\"><span class=\"doc-path\"></span><span class=\"mac-panel__language\">JS</span></header><figure class=\"iseeu highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">new</span> <span class=\"built_in\">Promise</span>(<span class=\"function\"><span class=\"params\">resolve</span>=&gt;</span> &#123;</span><br><span class=\"line\">  ajax(<span class=\"string\">'aaa'</span>, success(data) &#123;</span><br><span class=\"line\">    <span class=\"comment\">// data = &#123;name: 'singleDogNo.1'&#125;</span></span><br><span class=\"line\">    resolve(data)</span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\">&#125;).then(<span class=\"function\"><span class=\"params\">res</span>=&gt;</span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> <span class=\"built_in\">Promise</span>(<span class=\"function\"><span class=\"params\">resolve</span>=&gt;</span> &#123;</span><br><span class=\"line\">    ajax(<span class=\"string\">'bbb'</span>, success(data) &#123;</span><br><span class=\"line\">      <span class=\"comment\">// data = &#123;age: 27&#125;</span></span><br><span class=\"line\">      resolve(...[res, data])</span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\">&#125;).then(<span class=\"function\"><span class=\"params\">res</span>=&gt;</span> &#123;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(res)</span><br><span class=\"line\">  <span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">    &#123;</span></span><br><span class=\"line\"><span class=\"comment\">      name: 'singleDogNo.1',</span></span><br><span class=\"line\"><span class=\"comment\">      age: 27</span></span><br><span class=\"line\"><span class=\"comment\">    &#125;</span></span><br><span class=\"line\"><span class=\"comment\">  */</span></span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure></div>\n<h3 id=\"错误处理\"><a href=\"#错误处理\" class=\"headerlink\" title=\"错误处理\"></a>错误处理</h3><p>promise 会自动捕捉异常，交给 rejected 函数处理</p>\n<div class=\"code-panel__wrapper\" autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\"><header class=\"mac-panel\"><span class=\"doc-path\"></span><span class=\"mac-panel__language\">JS</span></header><figure class=\"iseeu highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">new</span> <span class=\"built_in\">Promise</span>(<span class=\"function\"><span class=\"params\">resolve</span>=&gt;</span> &#123;</span><br><span class=\"line\">  setTimeout(<span class=\"function\"><span class=\"params\">()</span>=&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> <span class=\"built_in\">Error</span>(<span class=\"string\">'error!'</span>)</span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\">.then(<span class=\"function\"><span class=\"params\">res</span>=&gt;</span> &#123;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(res)</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\">.catch(<span class=\"function\"><span class=\"params\">err</span>=&gt;</span> &#123;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(err) <span class=\"comment\">// error!</span></span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure></div>\n<p>这里需要注意的是链式执行异步操作时，你可以选择为每一步操作做错误处理，类似<code>a().then(b()).catch().then(c()).catch()</code>，也可以将错误处理放在最后执行，类似<code>a().then(b()).then(c()).catch()</code>。但一般推荐第二种方式，更加方便阅读。</p>\n<p>还有一点需要注意的是 catch 本身也会返回 promise 实例，并且状态是 resolve，而且一旦执行到 catch 中，链式操作将会中断，不再继续执行。</p>\n<div class=\"code-panel__wrapper\" autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\"><header class=\"mac-panel\"><span class=\"doc-path\"></span><span class=\"mac-panel__language\">JS</span></header><figure class=\"iseeu highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">new</span> <span class=\"built_in\">Promise</span>(<span class=\"function\"><span class=\"params\">resolve</span>=&gt;</span> &#123;</span><br><span class=\"line\">  setTimeout(<span class=\"function\"><span class=\"params\">()</span>=&gt;</span> &#123;</span><br><span class=\"line\">    resolve()</span><br><span class=\"line\">  &#125;, <span class=\"number\">1000</span>)</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\">.then(<span class=\"function\"><span class=\"params\">()</span>=&gt;</span> &#123;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(<span class=\"string\">'promise1'</span>)</span><br><span class=\"line\">  <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> <span class=\"built_in\">Error</span>(<span class=\"string\">'error'</span>)</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\">.then(<span class=\"function\"><span class=\"params\">()</span>=&gt;</span> &#123;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(<span class=\"string\">'promise2'</span>)</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\">.then(<span class=\"function\"><span class=\"params\">()</span>=&gt;</span> &#123;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(<span class=\"string\">'promise3'</span>)</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\">.catch(<span class=\"function\"><span class=\"params\">err</span>=&gt;</span> &#123;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(err)</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"><span class=\"comment\">// promise1</span></span><br><span class=\"line\"><span class=\"comment\">// Error: error</span></span><br><span class=\"line\"><span class=\"comment\">// 不会继续执行 promise2 和 promise3</span></span><br></pre></td></tr></table></figure></div>\n<h3 id=\"promise-all\"><a href=\"#promise-all\" class=\"headerlink\" title=\"promise.all()\"></a>promise.all()</h3><p>这个方法会在所有异步操作执行完成并且状态全部为成功的时候执行回调方法</p>\n<div class=\"code-panel__wrapper\" autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\"><header class=\"mac-panel\"><span class=\"doc-path\"></span><span class=\"mac-panel__language\">JS</span></header><figure class=\"iseeu highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">randomA</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> <span class=\"built_in\">Promise</span>(<span class=\"function\">(<span class=\"params\">resolve,reject</span>)=&gt;</span> &#123;</span><br><span class=\"line\">    setTimeout(<span class=\"function\"><span class=\"params\">()</span>=&gt;</span> &#123;</span><br><span class=\"line\">      <span class=\"keyword\">const</span> num = <span class=\"built_in\">Math</span>.floor(<span class=\"built_in\">Math</span>.random() * <span class=\"number\">10</span>)</span><br><span class=\"line\">      <span class=\"built_in\">console</span>.log(<span class=\"string\">'num: '</span>, num);</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (num &lt;= <span class=\"number\">5</span>) &#123;</span><br><span class=\"line\">        resolve(num)</span><br><span class=\"line\">      &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">        reject(<span class=\"string\">'randomA:数字大于5是不行的'</span>)</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;, <span class=\"number\">1000</span>)</span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">randomB</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> <span class=\"built_in\">Promise</span>(<span class=\"function\">(<span class=\"params\">resolve,reject</span>)=&gt;</span> &#123;</span><br><span class=\"line\">    setTimeout(<span class=\"function\"><span class=\"params\">()</span>=&gt;</span> &#123;</span><br><span class=\"line\">      <span class=\"keyword\">const</span> num = <span class=\"built_in\">Math</span>.floor(<span class=\"built_in\">Math</span>.random() * <span class=\"number\">10</span>)</span><br><span class=\"line\">      <span class=\"built_in\">console</span>.log(<span class=\"string\">'num: '</span>, num);</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (num &lt;= <span class=\"number\">5</span>) &#123;</span><br><span class=\"line\">        resolve(num)</span><br><span class=\"line\">      &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">        reject(<span class=\"string\">'randomB:数字大于5是不行的'</span>)</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;, <span class=\"number\">1000</span>)</span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">randomC</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> <span class=\"built_in\">Promise</span>(<span class=\"function\">(<span class=\"params\">resolve,reject</span>)=&gt;</span> &#123;</span><br><span class=\"line\">    setTimeout(<span class=\"function\"><span class=\"params\">()</span>=&gt;</span> &#123;</span><br><span class=\"line\">      <span class=\"keyword\">const</span> num = <span class=\"built_in\">Math</span>.floor(<span class=\"built_in\">Math</span>.random() * <span class=\"number\">10</span>)</span><br><span class=\"line\">      <span class=\"built_in\">console</span>.log(<span class=\"string\">'num: '</span>, num);</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (num &lt;= <span class=\"number\">5</span>) &#123;</span><br><span class=\"line\">        resolve(num)</span><br><span class=\"line\">      &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">        reject(<span class=\"string\">'randomC:数字大于5是不行的'</span>)</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;, <span class=\"number\">1000</span>)</span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">Promise</span>.all([randomA(), randomB(), randomC()]).then(<span class=\"function\"><span class=\"params\">res</span>=&gt;</span> &#123;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(res)</span><br><span class=\"line\">  <span class=\"comment\">// success: [1,2,3]</span></span><br><span class=\"line\">  <span class=\"comment\">// error: Uncaught (in promise) randomB:数字大于5是不行的</span></span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure></div>\n<p>可以复制上面代码运行，只有当三个方法值全部小于 5，才会返回正确的值。可以看到正确返回时，返回值是数组的形式。数组中每一项对应 all 方法中的每一个异步操作的结果。</p>\n<h3 id=\"promise-race\"><a href=\"#promise-race\" class=\"headerlink\" title=\"promise.race()\"></a>promise.race()</h3><p>回想一下上面描述的视频平台切换可选线路的问题。在 promise 中可以使用<code>promise.race()</code>方法解决。这个方法完全区别于<code>promise.all()</code>，上面的方法在所有异步操作完成之后才执行，这个方法则是<strong>谁先完成就先处理谁的回调方法。</strong>先执行完的方法无论成功或失败，其余的操作还会继续执行，但是不会进入 race 的回调方法。</p>\n<div class=\"code-panel__wrapper\" autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\"><header class=\"mac-panel\"><span class=\"doc-path\"></span><span class=\"mac-panel__language\">JS</span></header><figure class=\"iseeu highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// promise.all 的例子，将 timeout 区分开来</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">randomA</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> <span class=\"built_in\">Promise</span>(<span class=\"function\">(<span class=\"params\">resolve,reject</span>)=&gt;</span> &#123;</span><br><span class=\"line\">    setTimeout(<span class=\"function\"><span class=\"params\">()</span>=&gt;</span> &#123;</span><br><span class=\"line\">      <span class=\"keyword\">const</span> num = <span class=\"built_in\">Math</span>.floor(<span class=\"built_in\">Math</span>.random() * <span class=\"number\">10</span>)</span><br><span class=\"line\">      <span class=\"built_in\">console</span>.log(<span class=\"string\">'num: '</span>, num);</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (num &lt;= <span class=\"number\">5</span>) &#123;</span><br><span class=\"line\">        resolve(num)</span><br><span class=\"line\">      &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">        reject(<span class=\"string\">'randomA:数字大于5是不行的'</span>)</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;, <span class=\"number\">1000</span>)</span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">randomB</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> <span class=\"built_in\">Promise</span>(<span class=\"function\">(<span class=\"params\">resolve,reject</span>)=&gt;</span> &#123;</span><br><span class=\"line\">    setTimeout(<span class=\"function\"><span class=\"params\">()</span>=&gt;</span> &#123;</span><br><span class=\"line\">      <span class=\"keyword\">const</span> num = <span class=\"built_in\">Math</span>.floor(<span class=\"built_in\">Math</span>.random() * <span class=\"number\">10</span>)</span><br><span class=\"line\">      <span class=\"built_in\">console</span>.log(<span class=\"string\">'num: '</span>, num);</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (num &lt;= <span class=\"number\">5</span>) &#123;</span><br><span class=\"line\">        resolve(num)</span><br><span class=\"line\">      &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">        reject(<span class=\"string\">'randomB:数字大于5是不行的'</span>)</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;, <span class=\"number\">2000</span>)</span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">randomC</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> <span class=\"built_in\">Promise</span>(<span class=\"function\">(<span class=\"params\">resolve,reject</span>)=&gt;</span> &#123;</span><br><span class=\"line\">    setTimeout(<span class=\"function\"><span class=\"params\">()</span>=&gt;</span> &#123;</span><br><span class=\"line\">      <span class=\"keyword\">const</span> num = <span class=\"built_in\">Math</span>.floor(<span class=\"built_in\">Math</span>.random() * <span class=\"number\">10</span>)</span><br><span class=\"line\">      <span class=\"built_in\">console</span>.log(<span class=\"string\">'num: '</span>, num);</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (num &lt;= <span class=\"number\">5</span>) &#123;</span><br><span class=\"line\">        resolve(num)</span><br><span class=\"line\">      &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">        reject(<span class=\"string\">'randomC:数字大于5是不行的'</span>)</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;, <span class=\"number\">3000</span>)</span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">Promise</span>.race([randomA(), randomB(), randomC()]).then(</span><br><span class=\"line\">  res=&gt; &#123;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"string\">'res: '</span>, res)</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  err=&gt; &#123;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"string\">'err: '</span>, err)</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">)</span><br></pre></td></tr></table></figure></div>\n<h4 id=\"利用promise-race实现需求-如果接口-10s-内返回数据就处理数据，否则执行其他操作\"><a href=\"#利用promise-race实现需求-如果接口-10s-内返回数据就处理数据，否则执行其他操作\" class=\"headerlink\" title=\"利用promise.race实现需求 - 如果接口 10s 内返回数据就处理数据，否则执行其他操作\"></a>利用promise.race实现需求 - 如果接口 10s 内返回数据就处理数据，否则执行其他操作</h4><div class=\"code-panel__wrapper\" autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\"><header class=\"mac-panel\"><span class=\"doc-path\"></span><span class=\"mac-panel__language\">JS</span></header><figure class=\"iseeu highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">getData</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> <span class=\"built_in\">Promise</span>(<span class=\"function\"><span class=\"params\">resolve</span>=&gt;</span> &#123;</span><br><span class=\"line\">    ajax(<span class=\"string\">'url'</span>, success(res) &#123;</span><br><span class=\"line\">      resolve()</span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">timeout</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> <span class=\"built_in\">Promise</span>(<span class=\"function\">(<span class=\"params\">resolve, reject</span>)=&gt;</span> &#123;</span><br><span class=\"line\">    setTimeout(<span class=\"function\"><span class=\"params\">()</span>=&gt;</span> &#123;</span><br><span class=\"line\">      reject(<span class=\"string\">'请求超时'</span>)</span><br><span class=\"line\">    &#125;, <span class=\"number\">10000</span>)</span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">Promise</span>.race([getData(), timeout()])</span><br><span class=\"line\">.then(<span class=\"function\"><span class=\"params\">res</span>=&gt;</span> &#123;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(res)</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\">.catch(<span class=\"function\"><span class=\"params\">err</span>=&gt;</span> &#123;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(err)</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure></div>\n","site":{"data":{}},"excerpt":"","more":"<p>最近想重新换工作，几乎所有面试都会问到 promise，有简单理解的，也有问到一些比较复杂的实现，有些我是知道的但也有些是不清楚的，所以查阅资料，把关于 promise 的知识补充提升一下。</p>\n<blockquote>\n<p>本文旨在说明 promise，并未实现具体的 ajax 请求。</p>\n</blockquote>\n<h2 id=\"promise-的出现解决了什么样的问题\"><a href=\"#promise-的出现解决了什么样的问题\" class=\"headerlink\" title=\"promise 的出现解决了什么样的问题\"></a>promise 的出现解决了什么样的问题</h2><h3 id=\"回调地狱\"><a href=\"#回调地狱\" class=\"headerlink\" title=\"回调地狱\"></a>回调地狱</h3><p>假设一种业务场景，你需要取到所有开源库的列表（假设列表本身按照开源库热度排序），你需要读取当中热度第一的库名称，然后通过调用查询接口查出该库官方文档地址</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ajax(<span class=\"string\">'aaa'</span>, success(res) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">const</span> lib = res</span><br><span class=\"line\">  <span class=\"comment\">// ...other code</span></span><br><span class=\"line\">  ajax(<span class=\"string\">`bbb`</span>, success(res) &#123;</span><br><span class=\"line\">    <span class=\"comment\">// ... other code</span></span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n<p>事实上，真实的业务可能比例子复杂很多，而后一步的操作又必须基于上一步操作的结果，我们不得不将代码组织成这样的回调。然而这样的代码存在很大的问题：</p>\n<ul>\n<li>代码无法执行 return</li>\n<li>回调层数过多会导致逻辑很难读懂，并且后期维护难度很大</li>\n</ul>\n<h3 id=\"条件返回\"><a href=\"#条件返回\" class=\"headerlink\" title=\"条件返回\"></a>条件返回</h3><p>在视频网站或者直播网站很常见到一种场景，视频会分多条线路（主线路、备用线路1、备用线路2…），业务上，打开网站的时候，会同时去请求这三个视频的接口，只要其中一个接口返回了数据，中断其他接口的请求。这样的业务需求在之前的方法中都没有很好地实现方法。</p>\n<h2 id=\"promise-详解\"><a href=\"#promise-详解\" class=\"headerlink\" title=\"promise 详解\"></a>promise 详解</h2><h3 id=\"基本语法-amp-amp-成功处理\"><a href=\"#基本语法-amp-amp-成功处理\" class=\"headerlink\" title=\"基本语法 &amp;&amp; 成功处理\"></a>基本语法 &amp;&amp; 成功处理</h3><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">new</span> <span class=\"built_in\">Promise</span>(<span class=\"function\">(<span class=\"params\">resolve, reject</span>)=&gt;</span> &#123;</span><br><span class=\"line\">  resolve(<span class=\"string\">'success'</span>)</span><br><span class=\"line\">  reject(<span class=\"string\">'error'</span>)</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\">.then(</span><br><span class=\"line\">  res=&gt; &#123; <span class=\"built_in\">console</span>.log(<span class=\"string\">'success'</span>, res) &#125;</span><br><span class=\"line\">  err=&gt; &#123; <span class=\"built_in\">console</span>.log(<span class=\"string\">'error'</span>, err) &#125;</span><br><span class=\"line\">)</span><br><span class=\"line\">.catch(<span class=\"function\"><span class=\"params\">err</span>=&gt;</span> &#123; <span class=\"built_in\">console</span>.log(err) &#125;)</span><br></pre></td></tr></table></figure>\n<ul>\n<li>promise 有三个状态<ul>\n<li>pending 等待结果返回（未完成）</li>\n<li>fulfilled 实现（操作完成）</li>\n<li>rejected 被拒绝（操作失败）</li>\n<li>状态一旦改变，不会再次改变</li>\n</ul>\n</li>\n<li>因此 promise 状态状态改变只有两种可能<ul>\n<li>pending =&gt; fulfilled</li>\n<li>pending =&gt; rejected</li>\n</ul>\n</li>\n</ul>\n<p>其中 pending =&gt; fulfilled 表示操作由未完成变为成功，这时会触发<code>resolve</code>，<strong>将操作的结果作为参数传递出去</strong>，pending =&gt; rejected 表示操作由未完成变为成功，这时会触发<code>reject</code>，<strong>将操作结果的错误信息作为参数传递出去。</strong><br><strong>必须注意的是，promise 会将状态传递出去，用于下一步骤操作的参数</strong></p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">new</span> <span class=\"built_in\">Promise</span>(<span class=\"function\"><span class=\"params\">resolve</span>=&gt;</span> &#123;</span><br><span class=\"line\">  ajax(<span class=\"string\">'aaa'</span>, success(data) &#123;</span><br><span class=\"line\">    <span class=\"comment\">// data = &#123;name: 'singleDogNo.1'&#125;</span></span><br><span class=\"line\">    resolve(data)</span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\">&#125;).then(<span class=\"function\"><span class=\"params\">res</span>=&gt;</span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> <span class=\"built_in\">Promise</span>(<span class=\"function\"><span class=\"params\">resolve</span>=&gt;</span> &#123;</span><br><span class=\"line\">    ajax(<span class=\"string\">'bbb'</span>, success(data) &#123;</span><br><span class=\"line\">      <span class=\"comment\">// data = &#123;age: 27&#125;</span></span><br><span class=\"line\">      resolve(...[res, data])</span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\">&#125;).then(<span class=\"function\"><span class=\"params\">res</span>=&gt;</span> &#123;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(res)</span><br><span class=\"line\">  <span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">    &#123;</span></span><br><span class=\"line\"><span class=\"comment\">      name: 'singleDogNo.1',</span></span><br><span class=\"line\"><span class=\"comment\">      age: 27</span></span><br><span class=\"line\"><span class=\"comment\">    &#125;</span></span><br><span class=\"line\"><span class=\"comment\">  */</span></span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n<h3 id=\"错误处理\"><a href=\"#错误处理\" class=\"headerlink\" title=\"错误处理\"></a>错误处理</h3><p>promise 会自动捕捉异常，交给 rejected 函数处理</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">new</span> <span class=\"built_in\">Promise</span>(<span class=\"function\"><span class=\"params\">resolve</span>=&gt;</span> &#123;</span><br><span class=\"line\">  setTimeout(<span class=\"function\"><span class=\"params\">()</span>=&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> <span class=\"built_in\">Error</span>(<span class=\"string\">'error!'</span>)</span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\">.then(<span class=\"function\"><span class=\"params\">res</span>=&gt;</span> &#123;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(res)</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\">.catch(<span class=\"function\"><span class=\"params\">err</span>=&gt;</span> &#123;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(err) <span class=\"comment\">// error!</span></span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n<p>这里需要注意的是链式执行异步操作时，你可以选择为每一步操作做错误处理，类似<code>a().then(b()).catch().then(c()).catch()</code>，也可以将错误处理放在最后执行，类似<code>a().then(b()).then(c()).catch()</code>。但一般推荐第二种方式，更加方便阅读。</p>\n<p>还有一点需要注意的是 catch 本身也会返回 promise 实例，并且状态是 resolve，而且一旦执行到 catch 中，链式操作将会中断，不再继续执行。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">new</span> <span class=\"built_in\">Promise</span>(<span class=\"function\"><span class=\"params\">resolve</span>=&gt;</span> &#123;</span><br><span class=\"line\">  setTimeout(<span class=\"function\"><span class=\"params\">()</span>=&gt;</span> &#123;</span><br><span class=\"line\">    resolve()</span><br><span class=\"line\">  &#125;, <span class=\"number\">1000</span>)</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\">.then(<span class=\"function\"><span class=\"params\">()</span>=&gt;</span> &#123;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(<span class=\"string\">'promise1'</span>)</span><br><span class=\"line\">  <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> <span class=\"built_in\">Error</span>(<span class=\"string\">'error'</span>)</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\">.then(<span class=\"function\"><span class=\"params\">()</span>=&gt;</span> &#123;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(<span class=\"string\">'promise2'</span>)</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\">.then(<span class=\"function\"><span class=\"params\">()</span>=&gt;</span> &#123;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(<span class=\"string\">'promise3'</span>)</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\">.catch(<span class=\"function\"><span class=\"params\">err</span>=&gt;</span> &#123;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(err)</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"><span class=\"comment\">// promise1</span></span><br><span class=\"line\"><span class=\"comment\">// Error: error</span></span><br><span class=\"line\"><span class=\"comment\">// 不会继续执行 promise2 和 promise3</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"promise-all\"><a href=\"#promise-all\" class=\"headerlink\" title=\"promise.all()\"></a>promise.all()</h3><p>这个方法会在所有异步操作执行完成并且状态全部为成功的时候执行回调方法</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">randomA</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> <span class=\"built_in\">Promise</span>(<span class=\"function\">(<span class=\"params\">resolve,reject</span>)=&gt;</span> &#123;</span><br><span class=\"line\">    setTimeout(<span class=\"function\"><span class=\"params\">()</span>=&gt;</span> &#123;</span><br><span class=\"line\">      <span class=\"keyword\">const</span> num = <span class=\"built_in\">Math</span>.floor(<span class=\"built_in\">Math</span>.random() * <span class=\"number\">10</span>)</span><br><span class=\"line\">      <span class=\"built_in\">console</span>.log(<span class=\"string\">'num: '</span>, num);</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (num &lt;= <span class=\"number\">5</span>) &#123;</span><br><span class=\"line\">        resolve(num)</span><br><span class=\"line\">      &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">        reject(<span class=\"string\">'randomA:数字大于5是不行的'</span>)</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;, <span class=\"number\">1000</span>)</span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">randomB</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> <span class=\"built_in\">Promise</span>(<span class=\"function\">(<span class=\"params\">resolve,reject</span>)=&gt;</span> &#123;</span><br><span class=\"line\">    setTimeout(<span class=\"function\"><span class=\"params\">()</span>=&gt;</span> &#123;</span><br><span class=\"line\">      <span class=\"keyword\">const</span> num = <span class=\"built_in\">Math</span>.floor(<span class=\"built_in\">Math</span>.random() * <span class=\"number\">10</span>)</span><br><span class=\"line\">      <span class=\"built_in\">console</span>.log(<span class=\"string\">'num: '</span>, num);</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (num &lt;= <span class=\"number\">5</span>) &#123;</span><br><span class=\"line\">        resolve(num)</span><br><span class=\"line\">      &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">        reject(<span class=\"string\">'randomB:数字大于5是不行的'</span>)</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;, <span class=\"number\">1000</span>)</span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">randomC</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> <span class=\"built_in\">Promise</span>(<span class=\"function\">(<span class=\"params\">resolve,reject</span>)=&gt;</span> &#123;</span><br><span class=\"line\">    setTimeout(<span class=\"function\"><span class=\"params\">()</span>=&gt;</span> &#123;</span><br><span class=\"line\">      <span class=\"keyword\">const</span> num = <span class=\"built_in\">Math</span>.floor(<span class=\"built_in\">Math</span>.random() * <span class=\"number\">10</span>)</span><br><span class=\"line\">      <span class=\"built_in\">console</span>.log(<span class=\"string\">'num: '</span>, num);</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (num &lt;= <span class=\"number\">5</span>) &#123;</span><br><span class=\"line\">        resolve(num)</span><br><span class=\"line\">      &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">        reject(<span class=\"string\">'randomC:数字大于5是不行的'</span>)</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;, <span class=\"number\">1000</span>)</span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">Promise</span>.all([randomA(), randomB(), randomC()]).then(<span class=\"function\"><span class=\"params\">res</span>=&gt;</span> &#123;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(res)</span><br><span class=\"line\">  <span class=\"comment\">// success: [1,2,3]</span></span><br><span class=\"line\">  <span class=\"comment\">// error: Uncaught (in promise) randomB:数字大于5是不行的</span></span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n<p>可以复制上面代码运行，只有当三个方法值全部小于 5，才会返回正确的值。可以看到正确返回时，返回值是数组的形式。数组中每一项对应 all 方法中的每一个异步操作的结果。</p>\n<h3 id=\"promise-race\"><a href=\"#promise-race\" class=\"headerlink\" title=\"promise.race()\"></a>promise.race()</h3><p>回想一下上面描述的视频平台切换可选线路的问题。在 promise 中可以使用<code>promise.race()</code>方法解决。这个方法完全区别于<code>promise.all()</code>，上面的方法在所有异步操作完成之后才执行，这个方法则是<strong>谁先完成就先处理谁的回调方法。</strong>先执行完的方法无论成功或失败，其余的操作还会继续执行，但是不会进入 race 的回调方法。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// promise.all 的例子，将 timeout 区分开来</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">randomA</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> <span class=\"built_in\">Promise</span>(<span class=\"function\">(<span class=\"params\">resolve,reject</span>)=&gt;</span> &#123;</span><br><span class=\"line\">    setTimeout(<span class=\"function\"><span class=\"params\">()</span>=&gt;</span> &#123;</span><br><span class=\"line\">      <span class=\"keyword\">const</span> num = <span class=\"built_in\">Math</span>.floor(<span class=\"built_in\">Math</span>.random() * <span class=\"number\">10</span>)</span><br><span class=\"line\">      <span class=\"built_in\">console</span>.log(<span class=\"string\">'num: '</span>, num);</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (num &lt;= <span class=\"number\">5</span>) &#123;</span><br><span class=\"line\">        resolve(num)</span><br><span class=\"line\">      &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">        reject(<span class=\"string\">'randomA:数字大于5是不行的'</span>)</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;, <span class=\"number\">1000</span>)</span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">randomB</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> <span class=\"built_in\">Promise</span>(<span class=\"function\">(<span class=\"params\">resolve,reject</span>)=&gt;</span> &#123;</span><br><span class=\"line\">    setTimeout(<span class=\"function\"><span class=\"params\">()</span>=&gt;</span> &#123;</span><br><span class=\"line\">      <span class=\"keyword\">const</span> num = <span class=\"built_in\">Math</span>.floor(<span class=\"built_in\">Math</span>.random() * <span class=\"number\">10</span>)</span><br><span class=\"line\">      <span class=\"built_in\">console</span>.log(<span class=\"string\">'num: '</span>, num);</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (num &lt;= <span class=\"number\">5</span>) &#123;</span><br><span class=\"line\">        resolve(num)</span><br><span class=\"line\">      &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">        reject(<span class=\"string\">'randomB:数字大于5是不行的'</span>)</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;, <span class=\"number\">2000</span>)</span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">randomC</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> <span class=\"built_in\">Promise</span>(<span class=\"function\">(<span class=\"params\">resolve,reject</span>)=&gt;</span> &#123;</span><br><span class=\"line\">    setTimeout(<span class=\"function\"><span class=\"params\">()</span>=&gt;</span> &#123;</span><br><span class=\"line\">      <span class=\"keyword\">const</span> num = <span class=\"built_in\">Math</span>.floor(<span class=\"built_in\">Math</span>.random() * <span class=\"number\">10</span>)</span><br><span class=\"line\">      <span class=\"built_in\">console</span>.log(<span class=\"string\">'num: '</span>, num);</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (num &lt;= <span class=\"number\">5</span>) &#123;</span><br><span class=\"line\">        resolve(num)</span><br><span class=\"line\">      &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">        reject(<span class=\"string\">'randomC:数字大于5是不行的'</span>)</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;, <span class=\"number\">3000</span>)</span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">Promise</span>.race([randomA(), randomB(), randomC()]).then(</span><br><span class=\"line\">  res=&gt; &#123;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"string\">'res: '</span>, res)</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  err=&gt; &#123;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"string\">'err: '</span>, err)</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">)</span><br></pre></td></tr></table></figure>\n<h4 id=\"利用promise-race实现需求-如果接口-10s-内返回数据就处理数据，否则执行其他操作\"><a href=\"#利用promise-race实现需求-如果接口-10s-内返回数据就处理数据，否则执行其他操作\" class=\"headerlink\" title=\"利用promise.race实现需求 - 如果接口 10s 内返回数据就处理数据，否则执行其他操作\"></a>利用promise.race实现需求 - 如果接口 10s 内返回数据就处理数据，否则执行其他操作</h4><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">getData</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> <span class=\"built_in\">Promise</span>(<span class=\"function\"><span class=\"params\">resolve</span>=&gt;</span> &#123;</span><br><span class=\"line\">    ajax(<span class=\"string\">'url'</span>, success(res) &#123;</span><br><span class=\"line\">      resolve()</span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">timeout</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> <span class=\"built_in\">Promise</span>(<span class=\"function\">(<span class=\"params\">resolve, reject</span>)=&gt;</span> &#123;</span><br><span class=\"line\">    setTimeout(<span class=\"function\"><span class=\"params\">()</span>=&gt;</span> &#123;</span><br><span class=\"line\">      reject(<span class=\"string\">'请求超时'</span>)</span><br><span class=\"line\">    &#125;, <span class=\"number\">10000</span>)</span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">Promise</span>.race([getData(), timeout()])</span><br><span class=\"line\">.then(<span class=\"function\"><span class=\"params\">res</span>=&gt;</span> &#123;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(res)</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\">.catch(<span class=\"function\"><span class=\"params\">err</span>=&gt;</span> &#123;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(err)</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n"},{"title":"swiper-animate 的使用","date":"2018-02-03T09:39:52.000Z","description":"使用 swiper-animate 创建自己的动画","_content":"\n使用 swiper 创建动画时，有时需要制作一些 css 的动画丰富你的网页。swiper 提供了快速制作 css 动画效果的小插件，适用于所有版本 swiper。\n\n> **该插件不适用于 loop 模式**\n\n## 引用 [swiper.animate.min.js](https://pan.baidu.com/s/1i5U4jcD) 和 [animate.css](https://cdn.bootcss.com/animate.css/3.5.2/animate.min.css)\n\n```html\n//  使用script引入\n<head>\n    ...\n    <link rel=\"stylesheet\" href=\"swiper.min.css\">\n    <link rel=\"stylesheet\" href=\"animate.min.css\">\n    <script src=\"swiper.min.js\"></script>\n    <script src=\"swiper.animate.min.js\"></script>\n    ...\n</head>\n```\n\n```js\n//  使用模块引入\nimport swiper from \"vue-awesome-swiper\"\nimport \"swiper/dist/css/swiper.css\"\nimport \"animate.css\"\nimport import {swiperAnimateCache, swiperAnimate, clearSwiperAnimate} from 'swiper-animate-cn'\n```\n\n## 在 swiper 配置项中加入以下内容\n\n```js\n// swiper4.x\nswiperOptions = {\n  ...\n  on:{\n    init: function(){\n      swiperAnimateCache(this); //隐藏动画元素\n      swiperAnimate(this); //初始化完成开始动画\n    },\n    slideChangeTransitionEnd: function(){\n      swiperAnimate(this); //每个slide切换结束时也运行当前slide动画\n    }\n  }\n  ...\n}\n\n// swiper3.x、swiper2.x\nswiperOptions = {\n  ...\n  onInit: function(swiper){ //Swiper2.x的初始化是onFirstInit\n    swiperAnimateCache(swiper); //隐藏动画元素\n    swiperAnimate(swiper); //初始化完成开始动画\n  },\n  onSlideChangeEnd: function(swiper){\n    swiperAnimate(swiper); //每个slide切换结束时也运行当前slide动画\n  }\n  ...\n}\n```\n\n## 添加动画\n\n在需要运动的元素上面增加类名 **ani** ，和其他的类似插件相同，Swiper Animate 需要指定几个参数：\n\n- swiper-animate-effect：切换效果，例如 fadeInUp\n- swiper-animate-duration：可选，动画持续时间（单位秒），例如 0.5s\n- swiper-animate-delay：可选，动画延迟时间（单位秒），例如 0.3s\n\n```html\n<p class=\"ani\" swiper-animate-effect=\"fadeInUp\" swiper-animate-duration=\"0.5s\" swiper-animate-delay=\"0.3s\">这个元素会在延时0.3s之后执行fadeInUp动画，整个动画持续0.5s</p>\n```\n\n## 添加自定义动画\n\n事实上，这款插件不仅支持 animate.css 动画，也支持自定义的动画。只需要你自己定义动画，然后将`swiper-animate-effect`设置成你的动画名就可以了。\n\n> 小技巧: 你可以给自己的动画定义特殊的类名，来规定动画的其他参数。\n\n```\n<!-- my_ani.css -->\n.my_ani{\n    animation-timing-function: linear;\n}\n@keyframes my_ani {\n  from {\n    opacity: 0\n  }\n  to{\n    opacity: 1\n  }\n}\n\n\nimport \"my_ani.css\"\n<p class=\"ani my_ani\" swiper-animate-effect=\"my_ani\" swiper-animate-duration=\"1s\" swiper-animate-delay=\"0\">这个元素会在一秒之内改变透明度，并且因为增加了my_ani类名。该动画将以匀速执行</p>\n```\n","source":"_posts/swiper-animate的使用.md","raw":"---\ntitle: swiper-animate 的使用\ntags: [carousel,animate]\ndate: 2018-02-03 17:39:52\ncategories: [swiper]\ndescription: 使用 swiper-animate 创建自己的动画\n---\n\n使用 swiper 创建动画时，有时需要制作一些 css 的动画丰富你的网页。swiper 提供了快速制作 css 动画效果的小插件，适用于所有版本 swiper。\n\n> **该插件不适用于 loop 模式**\n\n## 引用 [swiper.animate.min.js](https://pan.baidu.com/s/1i5U4jcD) 和 [animate.css](https://cdn.bootcss.com/animate.css/3.5.2/animate.min.css)\n\n```html\n//  使用script引入\n<head>\n    ...\n    <link rel=\"stylesheet\" href=\"swiper.min.css\">\n    <link rel=\"stylesheet\" href=\"animate.min.css\">\n    <script src=\"swiper.min.js\"></script>\n    <script src=\"swiper.animate.min.js\"></script>\n    ...\n</head>\n```\n\n```js\n//  使用模块引入\nimport swiper from \"vue-awesome-swiper\"\nimport \"swiper/dist/css/swiper.css\"\nimport \"animate.css\"\nimport import {swiperAnimateCache, swiperAnimate, clearSwiperAnimate} from 'swiper-animate-cn'\n```\n\n## 在 swiper 配置项中加入以下内容\n\n```js\n// swiper4.x\nswiperOptions = {\n  ...\n  on:{\n    init: function(){\n      swiperAnimateCache(this); //隐藏动画元素\n      swiperAnimate(this); //初始化完成开始动画\n    },\n    slideChangeTransitionEnd: function(){\n      swiperAnimate(this); //每个slide切换结束时也运行当前slide动画\n    }\n  }\n  ...\n}\n\n// swiper3.x、swiper2.x\nswiperOptions = {\n  ...\n  onInit: function(swiper){ //Swiper2.x的初始化是onFirstInit\n    swiperAnimateCache(swiper); //隐藏动画元素\n    swiperAnimate(swiper); //初始化完成开始动画\n  },\n  onSlideChangeEnd: function(swiper){\n    swiperAnimate(swiper); //每个slide切换结束时也运行当前slide动画\n  }\n  ...\n}\n```\n\n## 添加动画\n\n在需要运动的元素上面增加类名 **ani** ，和其他的类似插件相同，Swiper Animate 需要指定几个参数：\n\n- swiper-animate-effect：切换效果，例如 fadeInUp\n- swiper-animate-duration：可选，动画持续时间（单位秒），例如 0.5s\n- swiper-animate-delay：可选，动画延迟时间（单位秒），例如 0.3s\n\n```html\n<p class=\"ani\" swiper-animate-effect=\"fadeInUp\" swiper-animate-duration=\"0.5s\" swiper-animate-delay=\"0.3s\">这个元素会在延时0.3s之后执行fadeInUp动画，整个动画持续0.5s</p>\n```\n\n## 添加自定义动画\n\n事实上，这款插件不仅支持 animate.css 动画，也支持自定义的动画。只需要你自己定义动画，然后将`swiper-animate-effect`设置成你的动画名就可以了。\n\n> 小技巧: 你可以给自己的动画定义特殊的类名，来规定动画的其他参数。\n\n```\n<!-- my_ani.css -->\n.my_ani{\n    animation-timing-function: linear;\n}\n@keyframes my_ani {\n  from {\n    opacity: 0\n  }\n  to{\n    opacity: 1\n  }\n}\n\n\nimport \"my_ani.css\"\n<p class=\"ani my_ani\" swiper-animate-effect=\"my_ani\" swiper-animate-duration=\"1s\" swiper-animate-delay=\"0\">这个元素会在一秒之内改变透明度，并且因为增加了my_ani类名。该动画将以匀速执行</p>\n```\n","slug":"swiper-animate的使用","published":1,"updated":"2021-06-25T11:19:55.442Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckqc904os000ywotv9plfdoxx","content":"<p>使用 swiper 创建动画时，有时需要制作一些 css 的动画丰富你的网页。swiper 提供了快速制作 css 动画效果的小插件，适用于所有版本 swiper。</p>\n<blockquote>\n<p><strong>该插件不适用于 loop 模式</strong></p>\n</blockquote>\n<h2 id=\"引用-swiper-animate-min-js-和-animate-css\"><a href=\"#引用-swiper-animate-min-js-和-animate-css\" class=\"headerlink\" title=\"引用 swiper.animate.min.js 和 animate.css\"></a>引用 <a href=\"https://pan.baidu.com/s/1i5U4jcD\" target=\"_blank\" rel=\"noopener\">swiper.animate.min.js</a> 和 <a href=\"https://cdn.bootcss.com/animate.css/3.5.2/animate.min.css\" target=\"_blank\" rel=\"noopener\">animate.css</a></h2><div class=\"code-panel__wrapper\" autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\"><header class=\"mac-panel\"><span class=\"doc-path\"></span><span class=\"mac-panel__language\">HTML</span></header><figure class=\"iseeu highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">//  使用script引入</span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">    ...</span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">link</span> <span class=\"attr\">rel</span>=<span class=\"string\">\"stylesheet\"</span> <span class=\"attr\">href</span>=<span class=\"string\">\"swiper.min.css\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">link</span> <span class=\"attr\">rel</span>=<span class=\"string\">\"stylesheet\"</span> <span class=\"attr\">href</span>=<span class=\"string\">\"animate.min.css\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">\"swiper.min.js\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">\"swiper.animate.min.js\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\">    ...</span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br></pre></td></tr></table></figure></div>\n<div class=\"code-panel__wrapper\" autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\"><header class=\"mac-panel\"><span class=\"doc-path\"></span><span class=\"mac-panel__language\">JS</span></header><figure class=\"iseeu highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//  使用模块引入</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> swiper <span class=\"keyword\">from</span> <span class=\"string\">\"vue-awesome-swiper\"</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"string\">\"swiper/dist/css/swiper.css\"</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"string\">\"animate.css\"</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"keyword\">import</span> &#123;swiperAnimateCache, swiperAnimate, clearSwiperAnimate&#125; <span class=\"keyword\">from</span> <span class=\"string\">'swiper-animate-cn'</span></span><br></pre></td></tr></table></figure></div>\n<h2 id=\"在-swiper-配置项中加入以下内容\"><a href=\"#在-swiper-配置项中加入以下内容\" class=\"headerlink\" title=\"在 swiper 配置项中加入以下内容\"></a>在 swiper 配置项中加入以下内容</h2><div class=\"code-panel__wrapper\" autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\"><header class=\"mac-panel\"><span class=\"doc-path\"></span><span class=\"mac-panel__language\">JS</span></header><figure class=\"iseeu highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// swiper4.x</span></span><br><span class=\"line\">swiperOptions = &#123;</span><br><span class=\"line\">  ...</span><br><span class=\"line\">  on:&#123;</span><br><span class=\"line\">    init: <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">      swiperAnimateCache(<span class=\"keyword\">this</span>); <span class=\"comment\">//隐藏动画元素</span></span><br><span class=\"line\">      swiperAnimate(<span class=\"keyword\">this</span>); <span class=\"comment\">//初始化完成开始动画</span></span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    slideChangeTransitionEnd: <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">      swiperAnimate(<span class=\"keyword\">this</span>); <span class=\"comment\">//每个slide切换结束时也运行当前slide动画</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  ...</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// swiper3.x、swiper2.x</span></span><br><span class=\"line\">swiperOptions = &#123;</span><br><span class=\"line\">  ...</span><br><span class=\"line\">  onInit: <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">swiper</span>)</span>&#123; <span class=\"comment\">//Swiper2.x的初始化是onFirstInit</span></span><br><span class=\"line\">    swiperAnimateCache(swiper); <span class=\"comment\">//隐藏动画元素</span></span><br><span class=\"line\">    swiperAnimate(swiper); <span class=\"comment\">//初始化完成开始动画</span></span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  onSlideChangeEnd: <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">swiper</span>)</span>&#123;</span><br><span class=\"line\">    swiperAnimate(swiper); <span class=\"comment\">//每个slide切换结束时也运行当前slide动画</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  ...</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></div>\n<h2 id=\"添加动画\"><a href=\"#添加动画\" class=\"headerlink\" title=\"添加动画\"></a>添加动画</h2><p>在需要运动的元素上面增加类名 <strong>ani</strong> ，和其他的类似插件相同，Swiper Animate 需要指定几个参数：</p>\n<ul>\n<li>swiper-animate-effect：切换效果，例如 fadeInUp</li>\n<li>swiper-animate-duration：可选，动画持续时间（单位秒），例如 0.5s</li>\n<li>swiper-animate-delay：可选，动画延迟时间（单位秒），例如 0.3s</li>\n</ul>\n<div class=\"code-panel__wrapper\" autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\"><header class=\"mac-panel\"><span class=\"doc-path\"></span><span class=\"mac-panel__language\">HTML</span></header><figure class=\"iseeu highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">p</span> <span class=\"attr\">class</span>=<span class=\"string\">\"ani\"</span> <span class=\"attr\">swiper-animate-effect</span>=<span class=\"string\">\"fadeInUp\"</span> <span class=\"attr\">swiper-animate-duration</span>=<span class=\"string\">\"0.5s\"</span> <span class=\"attr\">swiper-animate-delay</span>=<span class=\"string\">\"0.3s\"</span>&gt;</span>这个元素会在延时0.3s之后执行fadeInUp动画，整个动画持续0.5s<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br></pre></td></tr></table></figure></div>\n<h2 id=\"添加自定义动画\"><a href=\"#添加自定义动画\" class=\"headerlink\" title=\"添加自定义动画\"></a>添加自定义动画</h2><p>事实上，这款插件不仅支持 animate.css 动画，也支持自定义的动画。只需要你自己定义动画，然后将<code>swiper-animate-effect</code>设置成你的动画名就可以了。</p>\n<blockquote>\n<p>小技巧: 你可以给自己的动画定义特殊的类名，来规定动画的其他参数。</p>\n</blockquote>\n<div class=\"code-panel__wrapper\" autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\"><header class=\"mac-panel\"><span class=\"doc-path\"></span><span class=\"mac-panel__language\">PLAIN</span></header><figure class=\"iseeu highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;!-- my_ani.css --&gt;</span><br><span class=\"line\">.my_ani&#123;</span><br><span class=\"line\">    animation-timing-function: linear;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">@keyframes my_ani &#123;</span><br><span class=\"line\">  from &#123;</span><br><span class=\"line\">    opacity: 0</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  to&#123;</span><br><span class=\"line\">    opacity: 1</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">import &quot;my_ani.css&quot;</span><br><span class=\"line\">&lt;p class=&quot;ani my_ani&quot; swiper-animate-effect=&quot;my_ani&quot; swiper-animate-duration=&quot;1s&quot; swiper-animate-delay=&quot;0&quot;&gt;这个元素会在一秒之内改变透明度，并且因为增加了my_ani类名。该动画将以匀速执行&lt;/p&gt;</span><br></pre></td></tr></table></figure></div>\n","site":{"data":{}},"excerpt":"","more":"<p>使用 swiper 创建动画时，有时需要制作一些 css 的动画丰富你的网页。swiper 提供了快速制作 css 动画效果的小插件，适用于所有版本 swiper。</p>\n<blockquote>\n<p><strong>该插件不适用于 loop 模式</strong></p>\n</blockquote>\n<h2 id=\"引用-swiper-animate-min-js-和-animate-css\"><a href=\"#引用-swiper-animate-min-js-和-animate-css\" class=\"headerlink\" title=\"引用 swiper.animate.min.js 和 animate.css\"></a>引用 <a href=\"https://pan.baidu.com/s/1i5U4jcD\" target=\"_blank\" rel=\"noopener\">swiper.animate.min.js</a> 和 <a href=\"https://cdn.bootcss.com/animate.css/3.5.2/animate.min.css\" target=\"_blank\" rel=\"noopener\">animate.css</a></h2><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">//  使用script引入</span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">    ...</span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">link</span> <span class=\"attr\">rel</span>=<span class=\"string\">\"stylesheet\"</span> <span class=\"attr\">href</span>=<span class=\"string\">\"swiper.min.css\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">link</span> <span class=\"attr\">rel</span>=<span class=\"string\">\"stylesheet\"</span> <span class=\"attr\">href</span>=<span class=\"string\">\"animate.min.css\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">\"swiper.min.js\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">\"swiper.animate.min.js\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\">    ...</span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//  使用模块引入</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> swiper <span class=\"keyword\">from</span> <span class=\"string\">\"vue-awesome-swiper\"</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"string\">\"swiper/dist/css/swiper.css\"</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"string\">\"animate.css\"</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"keyword\">import</span> &#123;swiperAnimateCache, swiperAnimate, clearSwiperAnimate&#125; <span class=\"keyword\">from</span> <span class=\"string\">'swiper-animate-cn'</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"在-swiper-配置项中加入以下内容\"><a href=\"#在-swiper-配置项中加入以下内容\" class=\"headerlink\" title=\"在 swiper 配置项中加入以下内容\"></a>在 swiper 配置项中加入以下内容</h2><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// swiper4.x</span></span><br><span class=\"line\">swiperOptions = &#123;</span><br><span class=\"line\">  ...</span><br><span class=\"line\">  on:&#123;</span><br><span class=\"line\">    init: <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">      swiperAnimateCache(<span class=\"keyword\">this</span>); <span class=\"comment\">//隐藏动画元素</span></span><br><span class=\"line\">      swiperAnimate(<span class=\"keyword\">this</span>); <span class=\"comment\">//初始化完成开始动画</span></span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    slideChangeTransitionEnd: <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">      swiperAnimate(<span class=\"keyword\">this</span>); <span class=\"comment\">//每个slide切换结束时也运行当前slide动画</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  ...</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// swiper3.x、swiper2.x</span></span><br><span class=\"line\">swiperOptions = &#123;</span><br><span class=\"line\">  ...</span><br><span class=\"line\">  onInit: <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">swiper</span>)</span>&#123; <span class=\"comment\">//Swiper2.x的初始化是onFirstInit</span></span><br><span class=\"line\">    swiperAnimateCache(swiper); <span class=\"comment\">//隐藏动画元素</span></span><br><span class=\"line\">    swiperAnimate(swiper); <span class=\"comment\">//初始化完成开始动画</span></span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  onSlideChangeEnd: <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">swiper</span>)</span>&#123;</span><br><span class=\"line\">    swiperAnimate(swiper); <span class=\"comment\">//每个slide切换结束时也运行当前slide动画</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  ...</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"添加动画\"><a href=\"#添加动画\" class=\"headerlink\" title=\"添加动画\"></a>添加动画</h2><p>在需要运动的元素上面增加类名 <strong>ani</strong> ，和其他的类似插件相同，Swiper Animate 需要指定几个参数：</p>\n<ul>\n<li>swiper-animate-effect：切换效果，例如 fadeInUp</li>\n<li>swiper-animate-duration：可选，动画持续时间（单位秒），例如 0.5s</li>\n<li>swiper-animate-delay：可选，动画延迟时间（单位秒），例如 0.3s</li>\n</ul>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">p</span> <span class=\"attr\">class</span>=<span class=\"string\">\"ani\"</span> <span class=\"attr\">swiper-animate-effect</span>=<span class=\"string\">\"fadeInUp\"</span> <span class=\"attr\">swiper-animate-duration</span>=<span class=\"string\">\"0.5s\"</span> <span class=\"attr\">swiper-animate-delay</span>=<span class=\"string\">\"0.3s\"</span>&gt;</span>这个元素会在延时0.3s之后执行fadeInUp动画，整个动画持续0.5s<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"添加自定义动画\"><a href=\"#添加自定义动画\" class=\"headerlink\" title=\"添加自定义动画\"></a>添加自定义动画</h2><p>事实上，这款插件不仅支持 animate.css 动画，也支持自定义的动画。只需要你自己定义动画，然后将<code>swiper-animate-effect</code>设置成你的动画名就可以了。</p>\n<blockquote>\n<p>小技巧: 你可以给自己的动画定义特殊的类名，来规定动画的其他参数。</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;!-- my_ani.css --&gt;</span><br><span class=\"line\">.my_ani&#123;</span><br><span class=\"line\">    animation-timing-function: linear;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">@keyframes my_ani &#123;</span><br><span class=\"line\">  from &#123;</span><br><span class=\"line\">    opacity: 0</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  to&#123;</span><br><span class=\"line\">    opacity: 1</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">import &quot;my_ani.css&quot;</span><br><span class=\"line\">&lt;p class=&quot;ani my_ani&quot; swiper-animate-effect=&quot;my_ani&quot; swiper-animate-duration=&quot;1s&quot; swiper-animate-delay=&quot;0&quot;&gt;这个元素会在一秒之内改变透明度，并且因为增加了my_ani类名。该动画将以匀速执行&lt;/p&gt;</span><br></pre></td></tr></table></figure>\n"},{"title":"vscode配置","date":"2019-12-12T01:22:18.000Z","description":"分享vscode配置方法和我的vscode配置","old":"WebStorm","new":"vscode","_content":"开门见山地说，我最近换Mac电脑了。那么我之前一直在用的是[{{old}}](https://www.jetbrains.com/webstorm/)，但这个IDE是要花钱的，在windows可以有很多种方法免费去用它，但苹果电脑就不好使了，所以现在用[new](https://code.visualstudio.com/)作为主要开发工具。\n\n目前看来，{{new}}在使用上比{{old}}要方便，也更轻巧，各种插件的扩展也极大地增强了工具的能力。但我个人还是更喜欢{{old}}的git工具。总感觉{{new}}在git的提交和管理不如{{old}}功能那么全面和强大，但除去这一点，{{new}}相比于{{old}}基本没有其他弱势的地方。\n\n## 插件篇\n\n说到{{new}},不得不提的就是插件,如果没有了插件,{{new}}也只不过是长得好看的notepad++。前端开发常用的插件在网上都可以找到，我这里列出一些我安装过好用但不常见的插件，另外文章最后我再列出我安装过的所有插件供参考。\n\n### 不太常用的插件\n\n| 插件名 | 下载量 | 插件介绍 |\n| :---: | :---: | :---: |\n| Better Comments | 53 万 | 可以自定义自己的注释 |\n| DotENV | 68 万 | 支持`.env`格式文件 |\n| Custom CSS and JS Loader | 17 万 | 可以自定义{{new}}的样式 |\n| EditorConfig for VS Code | 162 万 |  高亮并使用.editorconfig文件设置编辑器编码风格 |\n| Hungry Delete | 1 万 | 快速删除多余的空格和空白行 |\n| Open In Default Browser | 27 万 | 使用默认编辑器打开指定网页 |\n| Output Colorizer | 19万 | 更漂亮的terminal |\n| Power Mode | 14 万 | 能让你打字的时候很有打击感 |\n| SynthWave'84 | 11 万 | 一款带有发光效果的字体主题 |\n| Vibrancy | 7 千 | 编辑器毛玻璃效果 |\n| vscode-element-helper | 4 万 | 在{{new}}中就可以查看`element-ui`文档 |\n| epub reader | 8 千 | 在{{new}}里看小说的摸鱼神器 |\n\n所有插件都可以修改，修改的方式有两种，你可以打开设置在设置中对可以修改的参数做简单的修改，但更个性化的设置需要修改系统的`setting.json`,你可以使用`cmd + shift + p`输入`open setting`打开`setting.json`，所有的插件参数都可以在这里进行详细的修改\n\n### 我的{{new}}配置\n\n```json\n[\n  {\n    \"name\": \"Atom One Dark Theme\",\n    \"version\": \"2.1.0\"\n  },\n  {\n    \"name\": \"Auto Close Tag\",\n    \"version\": \"0.5.6\"\n  },\n  {\n    \"name\": \"Auto Import\",\n    \"version\": \"1.5.3\"\n  },\n  {\n    \"name\": \"Auto Rename Tag\",\n    \"version\": \"0.1.1\"\n  },\n  {\n    \"name\": \"background\",\n    \"version\": \"1.1.23\"\n  },\n  {\n    \"name\": \"Beautify css/sass/scss/less\",\n    \"version\": \"2.3.3\"\n  },\n  {\n    \"name\": \"Better Comments\",\n    \"version\": \"2.0.5\"\n  },\n  {\n    \"name\": \"Bookmarks\",\n    \"version\": \"10.6.0\"\n  },\n  {\n    \"name\": \"Bracket Pair Colorizer\",\n    \"version\": \"1.0.61\"\n  },\n  {\n    \"name\": \"Chinese(simplified) Language Pack for Visual Studio Code\",\n    \"version\": \"1.40.2\"\n  },\n  {\n    \"name\": \"Code Spell Checker\",\n    \"version\": \"1.7.20\"\n  },\n  {\n    \"name\": \"Color Highlight\",\n    \"version\": \"2.3.0\"\n  },\n  {\n    \"name\": \"Color Picker\",\n    \"version\": \"0.4.5\"\n  },\n  {\n    \"name\": \"Custom Css and JS Loader\",\n    \"version\": \"3.9.0\"\n  },\n  {\n    \"name\": \"Debugger for Chrome\",\n    \"version\": \"4.12.2\"\n  },\n  {\n    \"name\": \"Document This\",\n    \"version\": \"0.7.1\"\n  },\n  {\n    \"name\": \"DntENV\",\n    \"version\": \"1.0.1\"\n  },\n  {\n    \"name\": \"EditorConfig for VS Code\",\n    \"version\": \"0.14.2\"\n  },\n  {\n    \"name\": \"epub reader\",\n    \"version\": \"1.1.6\"\n  },\n  {\n    \"name\": \"ESLint\",\n    \"version\": \"1.9.1\"\n  },\n  {\n    \"name\": \"Git History\",\n    \"version\": \"0.4.9\"\n  },\n  {\n    \"name\": \"GitLens — Git supercharged\",\n    \"version\": \"10.2.0\"\n  },\n  {\n    \"name\": \"Highlight Matching Tag\",\n    \"version\": \"0.9.6\"\n  },\n  {\n    \"name\": \"HTML CSS Support\",\n    \"version\": \"0.2.3\"\n  },\n  {\n    \"name\": \"Hungry Delete\",\n    \"version\": \"1.6.0\"\n  },\n  {\n    \"name\": \"Import Cost\",\n    \"version\": \"2.12.0\"\n  },\n  {\n    \"name\": \"indent-rainbow\",\n    \"version\": \"7.4.0\"\n  },\n  {\n    \"name\": \"language-stylus\",\n    \"version\": \"1.11.0\"\n  },\n  {\n    \"name\": \"Markdown Preview Enhanced\",\n    \"version\": \"0.5.0\"\n  },\n  {\n    \"name\": \"markdownlint\",\n    \"version\": \"0.32.0\"\n  },\n  {\n    \"name\": \"Material Icon Theme\",\n    \"version\": \"3.9.2\"\n  },\n  {\n    \"name\": \"Material Theme\",\n    \"version\": \"30.0.0\"\n  },\n  {\n    \"name\": \"npm\",\n    \"version\": \"0.3.9\"\n  },\n  {\n    \"name\": \"npm Intellisense\",\n    \"version\": \"1.3.0\"\n  },\n  {\n    \"name\": \"One Dark Pro\",\n    \"version\": \"3.2.1\"\n  },\n  {\n    \"name\": \"Open In Default Browser\",\n    \"version\": \"2.1.0\"\n  },\n  {\n    \"name\": \"Output Colorizer\",\n    \"version\": \"0.1.2\"\n  }\n  {\n    \"name\": \"Path Intellisense\",\n    \"version\": \"1.4.2\"\n  },\n  {\n    \"name\": \"Power Mode\",\n    \"version\": \"2.2.0\"\n  },\n  {\n    \"name\": \"Prettier - Code formatter\",\n    \"version\": \"3.11.0\"\n  },\n  {\n    \"name\": \"Project Manager\",\n    \"version\": \"10.9.1\"\n  },\n  {\n    \"name\": \"Sass Lint\",\n    \"version\": \"1.0.6\"\n  },\n  {\n    \"name\": \"Scss Intellisense\",\n    \"version\": \"0.8.1\"\n  },\n  {\n    \"name\": \"Setting Sync\",\n    \"version\": \"3.4.3\"\n  },\n  {\n    \"name\": \"SVG Viewer\",\n    \"version\": \"2.0.0\"\n  },\n  {\n    \"name\": \"SynthWave'84\",\n    \"version\": \"0.0.7\"\n  },\n  {\n    \"name\": \"TODO Highlight\",\n    \"version\": \"1.0.4\"\n  }\n  {\n    \"name\": \"Trailing Spaces\",\n    \"version\": \"0.3.1\"\n  },\n  {\n    \"name\": \"vetur\",\n    \"version\": \"0.22.6\"\n  },\n  {\n    \"name\": \"Vibrancy\",\n    \"version\": \"1.0.7\"\n  },\n  {\n    \"name\": \"vscode-element-helper\",\n    \"version\": \"0.5.6\"\n  },\n  {\n    \"name\": \"vscode-icons\",\n    \"version\": \"9.6.0\"\n  },\n  {\n    \"name\": \"Vue 2 Snippets\",\n    \"version\": \"0.1.11\"\n  }\n]\n```\n\n### 我的`setting.json`\n\n```json\n{\n    \"workbench.startupEditor\": \"newUntitledFile\",\n    \"workbench.iconTheme\": \"material-icon-theme\",\n    \"window.title\":  \"${dirty}${activeEditorMedium}${separator}${rootName}\",\n    \"window.zoomLevel\": 0.62,\n    \"terminal.integrated.rendererType\": \"dom\",\n    \"emmet.syntaxProfiles\": {\n        \"javascript\": \"jsx\",\n        \"vue\": \"html\",\n        \"vue-html\": \"html\"\n    },\n    \"editor.tabSize\": 2,\n    \"editor.fontSize\": 20,\n    \"editor.lineHeight\": 36,\n    \"editor.wordWrap\": \"on\",\n    \"editor.quickSuggestions\": {\n        \"strings\": true\n    },\n    \"editor.multiCursorModifier\": \"ctrlCmd\",\n    \"editor.formatOnPaste\": false,\n    \"editor.fontFamily\": \"FiraCode-Retina\",\n    \"editor.fontLigatures\": true,\n    \"prettier.singleQuote\": true,\n    \"prettier.semi\": false,\n    \"vscode_custom_css.imports\": [\n        \"file:///Applications/Visual%20Studio%20Code.app/Contents/Resources/theme/synthwave84.css\",\n        \"file:///Applications/Visual%20Studio%20Code.app/Contents/Resources/theme/terminal.css\",\n        \"file:///Applications/Visual%20Studio%20Code.app/Contents/Resources/theme/toolbar.css\",\n        \"file:///Applications/Visual%20Studio%20Code.app/Contents/Resources/theme/custom.css\",\n        \"file:///Applications/Visual%20Studio%20Code.app/Contents/Resources/theme/enable-electron-vibrancy.js\",\n    ],\n    \"vscode_custom_css.policy\": true,\n    \"[vue]\": {\n        \"editor.defaultFormatter\": \"esbenp.prettier-vscode\"\n    },\n    \"git.confirmSync\": false,\n    \"files.exclude\": {\n        \"**/node_modules\": true\n    },\n    \"files.autoSave\": \"afterDelay\",\n    \"background.useDefault\": true,\n    \"background.useFront\": true,\n    \"background.customImages\": [\n        \"file:///Users/singledogno.1/Pictures/pap.er/20191127.jpg\"\n    ],\n    \"[javascript]\": {\n        \"editor.defaultFormatter\": \"esbenp.prettier-vscode\"\n    },\n    \"powermode.enabled\": true,\n    \"better-comments.highlightPlainText\": true,\n    \"better-comments.multilineComments\": true,\n    \"better-comments.tags\": [\n        {\n            \"tag\": \"! \",\n            \"color\": \"#FF2D00\",\n            \"strikethrough\": false,\n            \"backgroundColor\": \"transparent\"\n        },\n        {\n            \"tag\": \"FIXME \",\n            \"color\": \"#3498DB\",\n            \"strikethrough\": false,\n            \"backgroundColor\": \"transparent\"\n        },\n        {\n            \"tag\": \"fixme \",\n            \"color\": \"#3498DB\",\n            \"strikethrough\": false,\n            \"backgroundColor\": \"transparent\"\n        },\n        {\n            \"tag\": \"TODO \",\n            \"color\": \"#FF8C00\",\n            \"strikethrough\": false,\n            \"backgroundColor\": \"transparent\"\n        },\n        {\n            \"tag\": \"todo \",\n            \"color\": \"#FF8C00\",\n            \"strikethrough\": false,\n            \"backgroundColor\": \"transparent\"\n        },\n        {\n            \"tag\": \" \",\n            \"color\": \"#98C379\",\n            \"strikethrough\": false,\n            \"backgroundColor\": \"transparent\"\n        }\n    ],\n    \"sync.gist\": \"944068a1850790116dd60d21167b4af10b30b0c9\",\n    \"files.autoSaveDelay\": 5000,\n    \"cSpell.allowedSchemas\": [\n        \"file\",\n        \"untitled\",\n        \"**/*.vue\"\n    ],\n    \"[html]\": {\n        \"editor.defaultFormatter\": \"vscode.html-language-features\"\n    },\n    \"docthis.includeDateTag\": true,\n    \"docthis.includeDescriptionTag\": true,\n    \"docthis.includeAuthorTag\": true,\n    \"vscode_vibrancy.opacity\": 0,\n    \"vscode_vibrancy.type\": \"selection\",\n    \"vscode_vibrancy.theme\": \"Default Dark\",\n    \"cSpell.enabledLanguageIds\": [\n        \"asciidoc\",\n        \"c\",\n        \"cpp\",\n        \"csharp\",\n        \"css\",\n        \"git-commit\",\n        \"go\",\n        \"handlebars\",\n        \"haskell\",\n        \"html\",\n        \"jade\",\n        \"java\",\n        \"javascript\",\n        \"javascriptreact\",\n        \"json\",\n        \"jsonc\",\n        \"latex\",\n        \"less\",\n        \"markdown\",\n        \"php\",\n        \"plaintext\",\n        \"pug\",\n        \"python\",\n        \"restructuredtext\",\n        \"rust\",\n        \"scala\",\n        \"scss\",\n        \"text\",\n        \"typescript\",\n        \"typescriptreact\",\n        \"vue\",\n        \"vue-html\",\n        \"yaml\",\n        \"yml\"\n    ]\n}\n```\n\n**如果你也是 Mac 电脑，并且你复制了我的`setting.json`，当中有一个只需要注意：`editor.fontFamily: \"FiraCode-Retina\"`**，要保证你也安装了这个字体，他才会生效。这个字体可以给你更优雅的代码展示，尤其是在条件语句中。\n\n![FiraCode](/blog/img/FiraCode.jpg)\n\nMac 可以使用`homebrew`安装这个字体\n\n```shell\n  brew tap homebrew/cask-fonts\n  brew cask install font-fira-code\n```\n\n### 自定义你的{{new}}\n\n因为`custom-css-and-js`的原因，允许自己修改编辑器的样式，事实上你可以把编辑器修改成任何样式，比如我的是毛玻璃的外观\n\n![alpha-bg](/blog/img/alpha-bg.jpg)\n\n那我怎么知道样式是什么，并且怎么调整呢？其实很简单，使用`cmd + shift + p`输入 `toggle developer`, 选中切换开发者人员工具，会跳出来一个类似于 chrome 的调试面板。接下来的操作就像操作修改普通的 css 样式一样了，把这些修改过的 css 文件放到一个固定的地方，传入到`custom-css-and-js`的设置中，重启编辑器就可以生效了。\n\n### 自定义文件模板\n\n比如说我想自定义 vue 的模板，应该怎么做呢？\n\n打开**首选项 -- 用户代码片段 -- 输入 `vue.json`,**打开文件，在里面编辑你想要编辑的模板就可以了。\n","source":"_posts/vscode配置.md","raw":"---\ntitle: vscode配置\ntags: [vscode]\ndate: 2019-12-12 09:22:18\ncategories: [vscode]\ndescription: 分享vscode配置方法和我的vscode配置\nold: WebStorm\nnew: vscode\n---\n开门见山地说，我最近换Mac电脑了。那么我之前一直在用的是[{{old}}](https://www.jetbrains.com/webstorm/)，但这个IDE是要花钱的，在windows可以有很多种方法免费去用它，但苹果电脑就不好使了，所以现在用[new](https://code.visualstudio.com/)作为主要开发工具。\n\n目前看来，{{new}}在使用上比{{old}}要方便，也更轻巧，各种插件的扩展也极大地增强了工具的能力。但我个人还是更喜欢{{old}}的git工具。总感觉{{new}}在git的提交和管理不如{{old}}功能那么全面和强大，但除去这一点，{{new}}相比于{{old}}基本没有其他弱势的地方。\n\n## 插件篇\n\n说到{{new}},不得不提的就是插件,如果没有了插件,{{new}}也只不过是长得好看的notepad++。前端开发常用的插件在网上都可以找到，我这里列出一些我安装过好用但不常见的插件，另外文章最后我再列出我安装过的所有插件供参考。\n\n### 不太常用的插件\n\n| 插件名 | 下载量 | 插件介绍 |\n| :---: | :---: | :---: |\n| Better Comments | 53 万 | 可以自定义自己的注释 |\n| DotENV | 68 万 | 支持`.env`格式文件 |\n| Custom CSS and JS Loader | 17 万 | 可以自定义{{new}}的样式 |\n| EditorConfig for VS Code | 162 万 |  高亮并使用.editorconfig文件设置编辑器编码风格 |\n| Hungry Delete | 1 万 | 快速删除多余的空格和空白行 |\n| Open In Default Browser | 27 万 | 使用默认编辑器打开指定网页 |\n| Output Colorizer | 19万 | 更漂亮的terminal |\n| Power Mode | 14 万 | 能让你打字的时候很有打击感 |\n| SynthWave'84 | 11 万 | 一款带有发光效果的字体主题 |\n| Vibrancy | 7 千 | 编辑器毛玻璃效果 |\n| vscode-element-helper | 4 万 | 在{{new}}中就可以查看`element-ui`文档 |\n| epub reader | 8 千 | 在{{new}}里看小说的摸鱼神器 |\n\n所有插件都可以修改，修改的方式有两种，你可以打开设置在设置中对可以修改的参数做简单的修改，但更个性化的设置需要修改系统的`setting.json`,你可以使用`cmd + shift + p`输入`open setting`打开`setting.json`，所有的插件参数都可以在这里进行详细的修改\n\n### 我的{{new}}配置\n\n```json\n[\n  {\n    \"name\": \"Atom One Dark Theme\",\n    \"version\": \"2.1.0\"\n  },\n  {\n    \"name\": \"Auto Close Tag\",\n    \"version\": \"0.5.6\"\n  },\n  {\n    \"name\": \"Auto Import\",\n    \"version\": \"1.5.3\"\n  },\n  {\n    \"name\": \"Auto Rename Tag\",\n    \"version\": \"0.1.1\"\n  },\n  {\n    \"name\": \"background\",\n    \"version\": \"1.1.23\"\n  },\n  {\n    \"name\": \"Beautify css/sass/scss/less\",\n    \"version\": \"2.3.3\"\n  },\n  {\n    \"name\": \"Better Comments\",\n    \"version\": \"2.0.5\"\n  },\n  {\n    \"name\": \"Bookmarks\",\n    \"version\": \"10.6.0\"\n  },\n  {\n    \"name\": \"Bracket Pair Colorizer\",\n    \"version\": \"1.0.61\"\n  },\n  {\n    \"name\": \"Chinese(simplified) Language Pack for Visual Studio Code\",\n    \"version\": \"1.40.2\"\n  },\n  {\n    \"name\": \"Code Spell Checker\",\n    \"version\": \"1.7.20\"\n  },\n  {\n    \"name\": \"Color Highlight\",\n    \"version\": \"2.3.0\"\n  },\n  {\n    \"name\": \"Color Picker\",\n    \"version\": \"0.4.5\"\n  },\n  {\n    \"name\": \"Custom Css and JS Loader\",\n    \"version\": \"3.9.0\"\n  },\n  {\n    \"name\": \"Debugger for Chrome\",\n    \"version\": \"4.12.2\"\n  },\n  {\n    \"name\": \"Document This\",\n    \"version\": \"0.7.1\"\n  },\n  {\n    \"name\": \"DntENV\",\n    \"version\": \"1.0.1\"\n  },\n  {\n    \"name\": \"EditorConfig for VS Code\",\n    \"version\": \"0.14.2\"\n  },\n  {\n    \"name\": \"epub reader\",\n    \"version\": \"1.1.6\"\n  },\n  {\n    \"name\": \"ESLint\",\n    \"version\": \"1.9.1\"\n  },\n  {\n    \"name\": \"Git History\",\n    \"version\": \"0.4.9\"\n  },\n  {\n    \"name\": \"GitLens — Git supercharged\",\n    \"version\": \"10.2.0\"\n  },\n  {\n    \"name\": \"Highlight Matching Tag\",\n    \"version\": \"0.9.6\"\n  },\n  {\n    \"name\": \"HTML CSS Support\",\n    \"version\": \"0.2.3\"\n  },\n  {\n    \"name\": \"Hungry Delete\",\n    \"version\": \"1.6.0\"\n  },\n  {\n    \"name\": \"Import Cost\",\n    \"version\": \"2.12.0\"\n  },\n  {\n    \"name\": \"indent-rainbow\",\n    \"version\": \"7.4.0\"\n  },\n  {\n    \"name\": \"language-stylus\",\n    \"version\": \"1.11.0\"\n  },\n  {\n    \"name\": \"Markdown Preview Enhanced\",\n    \"version\": \"0.5.0\"\n  },\n  {\n    \"name\": \"markdownlint\",\n    \"version\": \"0.32.0\"\n  },\n  {\n    \"name\": \"Material Icon Theme\",\n    \"version\": \"3.9.2\"\n  },\n  {\n    \"name\": \"Material Theme\",\n    \"version\": \"30.0.0\"\n  },\n  {\n    \"name\": \"npm\",\n    \"version\": \"0.3.9\"\n  },\n  {\n    \"name\": \"npm Intellisense\",\n    \"version\": \"1.3.0\"\n  },\n  {\n    \"name\": \"One Dark Pro\",\n    \"version\": \"3.2.1\"\n  },\n  {\n    \"name\": \"Open In Default Browser\",\n    \"version\": \"2.1.0\"\n  },\n  {\n    \"name\": \"Output Colorizer\",\n    \"version\": \"0.1.2\"\n  }\n  {\n    \"name\": \"Path Intellisense\",\n    \"version\": \"1.4.2\"\n  },\n  {\n    \"name\": \"Power Mode\",\n    \"version\": \"2.2.0\"\n  },\n  {\n    \"name\": \"Prettier - Code formatter\",\n    \"version\": \"3.11.0\"\n  },\n  {\n    \"name\": \"Project Manager\",\n    \"version\": \"10.9.1\"\n  },\n  {\n    \"name\": \"Sass Lint\",\n    \"version\": \"1.0.6\"\n  },\n  {\n    \"name\": \"Scss Intellisense\",\n    \"version\": \"0.8.1\"\n  },\n  {\n    \"name\": \"Setting Sync\",\n    \"version\": \"3.4.3\"\n  },\n  {\n    \"name\": \"SVG Viewer\",\n    \"version\": \"2.0.0\"\n  },\n  {\n    \"name\": \"SynthWave'84\",\n    \"version\": \"0.0.7\"\n  },\n  {\n    \"name\": \"TODO Highlight\",\n    \"version\": \"1.0.4\"\n  }\n  {\n    \"name\": \"Trailing Spaces\",\n    \"version\": \"0.3.1\"\n  },\n  {\n    \"name\": \"vetur\",\n    \"version\": \"0.22.6\"\n  },\n  {\n    \"name\": \"Vibrancy\",\n    \"version\": \"1.0.7\"\n  },\n  {\n    \"name\": \"vscode-element-helper\",\n    \"version\": \"0.5.6\"\n  },\n  {\n    \"name\": \"vscode-icons\",\n    \"version\": \"9.6.0\"\n  },\n  {\n    \"name\": \"Vue 2 Snippets\",\n    \"version\": \"0.1.11\"\n  }\n]\n```\n\n### 我的`setting.json`\n\n```json\n{\n    \"workbench.startupEditor\": \"newUntitledFile\",\n    \"workbench.iconTheme\": \"material-icon-theme\",\n    \"window.title\":  \"${dirty}${activeEditorMedium}${separator}${rootName}\",\n    \"window.zoomLevel\": 0.62,\n    \"terminal.integrated.rendererType\": \"dom\",\n    \"emmet.syntaxProfiles\": {\n        \"javascript\": \"jsx\",\n        \"vue\": \"html\",\n        \"vue-html\": \"html\"\n    },\n    \"editor.tabSize\": 2,\n    \"editor.fontSize\": 20,\n    \"editor.lineHeight\": 36,\n    \"editor.wordWrap\": \"on\",\n    \"editor.quickSuggestions\": {\n        \"strings\": true\n    },\n    \"editor.multiCursorModifier\": \"ctrlCmd\",\n    \"editor.formatOnPaste\": false,\n    \"editor.fontFamily\": \"FiraCode-Retina\",\n    \"editor.fontLigatures\": true,\n    \"prettier.singleQuote\": true,\n    \"prettier.semi\": false,\n    \"vscode_custom_css.imports\": [\n        \"file:///Applications/Visual%20Studio%20Code.app/Contents/Resources/theme/synthwave84.css\",\n        \"file:///Applications/Visual%20Studio%20Code.app/Contents/Resources/theme/terminal.css\",\n        \"file:///Applications/Visual%20Studio%20Code.app/Contents/Resources/theme/toolbar.css\",\n        \"file:///Applications/Visual%20Studio%20Code.app/Contents/Resources/theme/custom.css\",\n        \"file:///Applications/Visual%20Studio%20Code.app/Contents/Resources/theme/enable-electron-vibrancy.js\",\n    ],\n    \"vscode_custom_css.policy\": true,\n    \"[vue]\": {\n        \"editor.defaultFormatter\": \"esbenp.prettier-vscode\"\n    },\n    \"git.confirmSync\": false,\n    \"files.exclude\": {\n        \"**/node_modules\": true\n    },\n    \"files.autoSave\": \"afterDelay\",\n    \"background.useDefault\": true,\n    \"background.useFront\": true,\n    \"background.customImages\": [\n        \"file:///Users/singledogno.1/Pictures/pap.er/20191127.jpg\"\n    ],\n    \"[javascript]\": {\n        \"editor.defaultFormatter\": \"esbenp.prettier-vscode\"\n    },\n    \"powermode.enabled\": true,\n    \"better-comments.highlightPlainText\": true,\n    \"better-comments.multilineComments\": true,\n    \"better-comments.tags\": [\n        {\n            \"tag\": \"! \",\n            \"color\": \"#FF2D00\",\n            \"strikethrough\": false,\n            \"backgroundColor\": \"transparent\"\n        },\n        {\n            \"tag\": \"FIXME \",\n            \"color\": \"#3498DB\",\n            \"strikethrough\": false,\n            \"backgroundColor\": \"transparent\"\n        },\n        {\n            \"tag\": \"fixme \",\n            \"color\": \"#3498DB\",\n            \"strikethrough\": false,\n            \"backgroundColor\": \"transparent\"\n        },\n        {\n            \"tag\": \"TODO \",\n            \"color\": \"#FF8C00\",\n            \"strikethrough\": false,\n            \"backgroundColor\": \"transparent\"\n        },\n        {\n            \"tag\": \"todo \",\n            \"color\": \"#FF8C00\",\n            \"strikethrough\": false,\n            \"backgroundColor\": \"transparent\"\n        },\n        {\n            \"tag\": \" \",\n            \"color\": \"#98C379\",\n            \"strikethrough\": false,\n            \"backgroundColor\": \"transparent\"\n        }\n    ],\n    \"sync.gist\": \"944068a1850790116dd60d21167b4af10b30b0c9\",\n    \"files.autoSaveDelay\": 5000,\n    \"cSpell.allowedSchemas\": [\n        \"file\",\n        \"untitled\",\n        \"**/*.vue\"\n    ],\n    \"[html]\": {\n        \"editor.defaultFormatter\": \"vscode.html-language-features\"\n    },\n    \"docthis.includeDateTag\": true,\n    \"docthis.includeDescriptionTag\": true,\n    \"docthis.includeAuthorTag\": true,\n    \"vscode_vibrancy.opacity\": 0,\n    \"vscode_vibrancy.type\": \"selection\",\n    \"vscode_vibrancy.theme\": \"Default Dark\",\n    \"cSpell.enabledLanguageIds\": [\n        \"asciidoc\",\n        \"c\",\n        \"cpp\",\n        \"csharp\",\n        \"css\",\n        \"git-commit\",\n        \"go\",\n        \"handlebars\",\n        \"haskell\",\n        \"html\",\n        \"jade\",\n        \"java\",\n        \"javascript\",\n        \"javascriptreact\",\n        \"json\",\n        \"jsonc\",\n        \"latex\",\n        \"less\",\n        \"markdown\",\n        \"php\",\n        \"plaintext\",\n        \"pug\",\n        \"python\",\n        \"restructuredtext\",\n        \"rust\",\n        \"scala\",\n        \"scss\",\n        \"text\",\n        \"typescript\",\n        \"typescriptreact\",\n        \"vue\",\n        \"vue-html\",\n        \"yaml\",\n        \"yml\"\n    ]\n}\n```\n\n**如果你也是 Mac 电脑，并且你复制了我的`setting.json`，当中有一个只需要注意：`editor.fontFamily: \"FiraCode-Retina\"`**，要保证你也安装了这个字体，他才会生效。这个字体可以给你更优雅的代码展示，尤其是在条件语句中。\n\n![FiraCode](/blog/img/FiraCode.jpg)\n\nMac 可以使用`homebrew`安装这个字体\n\n```shell\n  brew tap homebrew/cask-fonts\n  brew cask install font-fira-code\n```\n\n### 自定义你的{{new}}\n\n因为`custom-css-and-js`的原因，允许自己修改编辑器的样式，事实上你可以把编辑器修改成任何样式，比如我的是毛玻璃的外观\n\n![alpha-bg](/blog/img/alpha-bg.jpg)\n\n那我怎么知道样式是什么，并且怎么调整呢？其实很简单，使用`cmd + shift + p`输入 `toggle developer`, 选中切换开发者人员工具，会跳出来一个类似于 chrome 的调试面板。接下来的操作就像操作修改普通的 css 样式一样了，把这些修改过的 css 文件放到一个固定的地方，传入到`custom-css-and-js`的设置中，重启编辑器就可以生效了。\n\n### 自定义文件模板\n\n比如说我想自定义 vue 的模板，应该怎么做呢？\n\n打开**首选项 -- 用户代码片段 -- 输入 `vue.json`,**打开文件，在里面编辑你想要编辑的模板就可以了。\n","slug":"vscode配置","published":1,"updated":"2021-06-25T11:19:55.443Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckqc904ot0013wotvpwrdd7of","content":"<p>开门见山地说，我最近换Mac电脑了。那么我之前一直在用的是<a href=\"https://www.jetbrains.com/webstorm/\" target=\"_blank\" rel=\"noopener\">WebStorm</a>，但这个IDE是要花钱的，在windows可以有很多种方法免费去用它，但苹果电脑就不好使了，所以现在用<a href=\"https://code.visualstudio.com/\" target=\"_blank\" rel=\"noopener\">new</a>作为主要开发工具。</p>\n<p>目前看来，vscode在使用上比WebStorm要方便，也更轻巧，各种插件的扩展也极大地增强了工具的能力。但我个人还是更喜欢WebStorm的git工具。总感觉vscode在git的提交和管理不如WebStorm功能那么全面和强大，但除去这一点，vscode相比于WebStorm基本没有其他弱势的地方。</p>\n<h2 id=\"插件篇\"><a href=\"#插件篇\" class=\"headerlink\" title=\"插件篇\"></a>插件篇</h2><p>说到vscode,不得不提的就是插件,如果没有了插件,vscode也只不过是长得好看的notepad++。前端开发常用的插件在网上都可以找到，我这里列出一些我安装过好用但不常见的插件，另外文章最后我再列出我安装过的所有插件供参考。</p>\n<h3 id=\"不太常用的插件\"><a href=\"#不太常用的插件\" class=\"headerlink\" title=\"不太常用的插件\"></a>不太常用的插件</h3><table>\n<thead>\n<tr>\n<th style=\"text-align:center\">插件名</th>\n<th style=\"text-align:center\">下载量</th>\n<th style=\"text-align:center\">插件介绍</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">Better Comments</td>\n<td style=\"text-align:center\">53 万</td>\n<td style=\"text-align:center\">可以自定义自己的注释</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">DotENV</td>\n<td style=\"text-align:center\">68 万</td>\n<td style=\"text-align:center\">支持<code>.env</code>格式文件</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">Custom CSS and JS Loader</td>\n<td style=\"text-align:center\">17 万</td>\n<td style=\"text-align:center\">可以自定义vscode的样式</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">EditorConfig for VS Code</td>\n<td style=\"text-align:center\">162 万</td>\n<td style=\"text-align:center\">高亮并使用.editorconfig文件设置编辑器编码风格</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">Hungry Delete</td>\n<td style=\"text-align:center\">1 万</td>\n<td style=\"text-align:center\">快速删除多余的空格和空白行</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">Open In Default Browser</td>\n<td style=\"text-align:center\">27 万</td>\n<td style=\"text-align:center\">使用默认编辑器打开指定网页</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">Output Colorizer</td>\n<td style=\"text-align:center\">19万</td>\n<td style=\"text-align:center\">更漂亮的terminal</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">Power Mode</td>\n<td style=\"text-align:center\">14 万</td>\n<td style=\"text-align:center\">能让你打字的时候很有打击感</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">SynthWave’84</td>\n<td style=\"text-align:center\">11 万</td>\n<td style=\"text-align:center\">一款带有发光效果的字体主题</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">Vibrancy</td>\n<td style=\"text-align:center\">7 千</td>\n<td style=\"text-align:center\">编辑器毛玻璃效果</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">vscode-element-helper</td>\n<td style=\"text-align:center\">4 万</td>\n<td style=\"text-align:center\">在vscode中就可以查看<code>element-ui</code>文档</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">epub reader</td>\n<td style=\"text-align:center\">8 千</td>\n<td style=\"text-align:center\">在vscode里看小说的摸鱼神器</td>\n</tr>\n</tbody>\n</table>\n<p>所有插件都可以修改，修改的方式有两种，你可以打开设置在设置中对可以修改的参数做简单的修改，但更个性化的设置需要修改系统的<code>setting.json</code>,你可以使用<code>cmd + shift + p</code>输入<code>open setting</code>打开<code>setting.json</code>，所有的插件参数都可以在这里进行详细的修改</p>\n<h3 id=\"我的配置\"><a href=\"#我的配置\" class=\"headerlink\" title=\"我的配置\"></a>我的vscode配置</h3><div class=\"code-panel__wrapper\" autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\"><header class=\"mac-panel\"><span class=\"doc-path\"></span><span class=\"mac-panel__language\">JSON</span></header><figure class=\"iseeu highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br><span class=\"line\">165</span><br><span class=\"line\">166</span><br><span class=\"line\">167</span><br><span class=\"line\">168</span><br><span class=\"line\">169</span><br><span class=\"line\">170</span><br><span class=\"line\">171</span><br><span class=\"line\">172</span><br><span class=\"line\">173</span><br><span class=\"line\">174</span><br><span class=\"line\">175</span><br><span class=\"line\">176</span><br><span class=\"line\">177</span><br><span class=\"line\">178</span><br><span class=\"line\">179</span><br><span class=\"line\">180</span><br><span class=\"line\">181</span><br><span class=\"line\">182</span><br><span class=\"line\">183</span><br><span class=\"line\">184</span><br><span class=\"line\">185</span><br><span class=\"line\">186</span><br><span class=\"line\">187</span><br><span class=\"line\">188</span><br><span class=\"line\">189</span><br><span class=\"line\">190</span><br><span class=\"line\">191</span><br><span class=\"line\">192</span><br><span class=\"line\">193</span><br><span class=\"line\">194</span><br><span class=\"line\">195</span><br><span class=\"line\">196</span><br><span class=\"line\">197</span><br><span class=\"line\">198</span><br><span class=\"line\">199</span><br><span class=\"line\">200</span><br><span class=\"line\">201</span><br><span class=\"line\">202</span><br><span class=\"line\">203</span><br><span class=\"line\">204</span><br><span class=\"line\">205</span><br><span class=\"line\">206</span><br><span class=\"line\">207</span><br><span class=\"line\">208</span><br><span class=\"line\">209</span><br><span class=\"line\">210</span><br><span class=\"line\">211</span><br><span class=\"line\">212</span><br><span class=\"line\">213</span><br><span class=\"line\">214</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    <span class=\"attr\">\"name\"</span>: <span class=\"string\">\"Atom One Dark Theme\"</span>,</span><br><span class=\"line\">    <span class=\"attr\">\"version\"</span>: <span class=\"string\">\"2.1.0\"</span></span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    <span class=\"attr\">\"name\"</span>: <span class=\"string\">\"Auto Close Tag\"</span>,</span><br><span class=\"line\">    <span class=\"attr\">\"version\"</span>: <span class=\"string\">\"0.5.6\"</span></span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    <span class=\"attr\">\"name\"</span>: <span class=\"string\">\"Auto Import\"</span>,</span><br><span class=\"line\">    <span class=\"attr\">\"version\"</span>: <span class=\"string\">\"1.5.3\"</span></span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    <span class=\"attr\">\"name\"</span>: <span class=\"string\">\"Auto Rename Tag\"</span>,</span><br><span class=\"line\">    <span class=\"attr\">\"version\"</span>: <span class=\"string\">\"0.1.1\"</span></span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    <span class=\"attr\">\"name\"</span>: <span class=\"string\">\"background\"</span>,</span><br><span class=\"line\">    <span class=\"attr\">\"version\"</span>: <span class=\"string\">\"1.1.23\"</span></span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    <span class=\"attr\">\"name\"</span>: <span class=\"string\">\"Beautify css/sass/scss/less\"</span>,</span><br><span class=\"line\">    <span class=\"attr\">\"version\"</span>: <span class=\"string\">\"2.3.3\"</span></span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    <span class=\"attr\">\"name\"</span>: <span class=\"string\">\"Better Comments\"</span>,</span><br><span class=\"line\">    <span class=\"attr\">\"version\"</span>: <span class=\"string\">\"2.0.5\"</span></span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    <span class=\"attr\">\"name\"</span>: <span class=\"string\">\"Bookmarks\"</span>,</span><br><span class=\"line\">    <span class=\"attr\">\"version\"</span>: <span class=\"string\">\"10.6.0\"</span></span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    <span class=\"attr\">\"name\"</span>: <span class=\"string\">\"Bracket Pair Colorizer\"</span>,</span><br><span class=\"line\">    <span class=\"attr\">\"version\"</span>: <span class=\"string\">\"1.0.61\"</span></span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    <span class=\"attr\">\"name\"</span>: <span class=\"string\">\"Chinese(simplified) Language Pack for Visual Studio Code\"</span>,</span><br><span class=\"line\">    <span class=\"attr\">\"version\"</span>: <span class=\"string\">\"1.40.2\"</span></span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    <span class=\"attr\">\"name\"</span>: <span class=\"string\">\"Code Spell Checker\"</span>,</span><br><span class=\"line\">    <span class=\"attr\">\"version\"</span>: <span class=\"string\">\"1.7.20\"</span></span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    <span class=\"attr\">\"name\"</span>: <span class=\"string\">\"Color Highlight\"</span>,</span><br><span class=\"line\">    <span class=\"attr\">\"version\"</span>: <span class=\"string\">\"2.3.0\"</span></span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    <span class=\"attr\">\"name\"</span>: <span class=\"string\">\"Color Picker\"</span>,</span><br><span class=\"line\">    <span class=\"attr\">\"version\"</span>: <span class=\"string\">\"0.4.5\"</span></span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    <span class=\"attr\">\"name\"</span>: <span class=\"string\">\"Custom Css and JS Loader\"</span>,</span><br><span class=\"line\">    <span class=\"attr\">\"version\"</span>: <span class=\"string\">\"3.9.0\"</span></span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    <span class=\"attr\">\"name\"</span>: <span class=\"string\">\"Debugger for Chrome\"</span>,</span><br><span class=\"line\">    <span class=\"attr\">\"version\"</span>: <span class=\"string\">\"4.12.2\"</span></span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    <span class=\"attr\">\"name\"</span>: <span class=\"string\">\"Document This\"</span>,</span><br><span class=\"line\">    <span class=\"attr\">\"version\"</span>: <span class=\"string\">\"0.7.1\"</span></span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    <span class=\"attr\">\"name\"</span>: <span class=\"string\">\"DntENV\"</span>,</span><br><span class=\"line\">    <span class=\"attr\">\"version\"</span>: <span class=\"string\">\"1.0.1\"</span></span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    <span class=\"attr\">\"name\"</span>: <span class=\"string\">\"EditorConfig for VS Code\"</span>,</span><br><span class=\"line\">    <span class=\"attr\">\"version\"</span>: <span class=\"string\">\"0.14.2\"</span></span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    <span class=\"attr\">\"name\"</span>: <span class=\"string\">\"epub reader\"</span>,</span><br><span class=\"line\">    <span class=\"attr\">\"version\"</span>: <span class=\"string\">\"1.1.6\"</span></span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    <span class=\"attr\">\"name\"</span>: <span class=\"string\">\"ESLint\"</span>,</span><br><span class=\"line\">    <span class=\"attr\">\"version\"</span>: <span class=\"string\">\"1.9.1\"</span></span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    <span class=\"attr\">\"name\"</span>: <span class=\"string\">\"Git History\"</span>,</span><br><span class=\"line\">    <span class=\"attr\">\"version\"</span>: <span class=\"string\">\"0.4.9\"</span></span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    <span class=\"attr\">\"name\"</span>: <span class=\"string\">\"GitLens — Git supercharged\"</span>,</span><br><span class=\"line\">    <span class=\"attr\">\"version\"</span>: <span class=\"string\">\"10.2.0\"</span></span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    <span class=\"attr\">\"name\"</span>: <span class=\"string\">\"Highlight Matching Tag\"</span>,</span><br><span class=\"line\">    <span class=\"attr\">\"version\"</span>: <span class=\"string\">\"0.9.6\"</span></span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    <span class=\"attr\">\"name\"</span>: <span class=\"string\">\"HTML CSS Support\"</span>,</span><br><span class=\"line\">    <span class=\"attr\">\"version\"</span>: <span class=\"string\">\"0.2.3\"</span></span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    <span class=\"attr\">\"name\"</span>: <span class=\"string\">\"Hungry Delete\"</span>,</span><br><span class=\"line\">    <span class=\"attr\">\"version\"</span>: <span class=\"string\">\"1.6.0\"</span></span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    <span class=\"attr\">\"name\"</span>: <span class=\"string\">\"Import Cost\"</span>,</span><br><span class=\"line\">    <span class=\"attr\">\"version\"</span>: <span class=\"string\">\"2.12.0\"</span></span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    <span class=\"attr\">\"name\"</span>: <span class=\"string\">\"indent-rainbow\"</span>,</span><br><span class=\"line\">    <span class=\"attr\">\"version\"</span>: <span class=\"string\">\"7.4.0\"</span></span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    <span class=\"attr\">\"name\"</span>: <span class=\"string\">\"language-stylus\"</span>,</span><br><span class=\"line\">    <span class=\"attr\">\"version\"</span>: <span class=\"string\">\"1.11.0\"</span></span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    <span class=\"attr\">\"name\"</span>: <span class=\"string\">\"Markdown Preview Enhanced\"</span>,</span><br><span class=\"line\">    <span class=\"attr\">\"version\"</span>: <span class=\"string\">\"0.5.0\"</span></span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    <span class=\"attr\">\"name\"</span>: <span class=\"string\">\"markdownlint\"</span>,</span><br><span class=\"line\">    <span class=\"attr\">\"version\"</span>: <span class=\"string\">\"0.32.0\"</span></span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    <span class=\"attr\">\"name\"</span>: <span class=\"string\">\"Material Icon Theme\"</span>,</span><br><span class=\"line\">    <span class=\"attr\">\"version\"</span>: <span class=\"string\">\"3.9.2\"</span></span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    <span class=\"attr\">\"name\"</span>: <span class=\"string\">\"Material Theme\"</span>,</span><br><span class=\"line\">    <span class=\"attr\">\"version\"</span>: <span class=\"string\">\"30.0.0\"</span></span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    <span class=\"attr\">\"name\"</span>: <span class=\"string\">\"npm\"</span>,</span><br><span class=\"line\">    <span class=\"attr\">\"version\"</span>: <span class=\"string\">\"0.3.9\"</span></span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    <span class=\"attr\">\"name\"</span>: <span class=\"string\">\"npm Intellisense\"</span>,</span><br><span class=\"line\">    <span class=\"attr\">\"version\"</span>: <span class=\"string\">\"1.3.0\"</span></span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    <span class=\"attr\">\"name\"</span>: <span class=\"string\">\"One Dark Pro\"</span>,</span><br><span class=\"line\">    <span class=\"attr\">\"version\"</span>: <span class=\"string\">\"3.2.1\"</span></span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    <span class=\"attr\">\"name\"</span>: <span class=\"string\">\"Open In Default Browser\"</span>,</span><br><span class=\"line\">    <span class=\"attr\">\"version\"</span>: <span class=\"string\">\"2.1.0\"</span></span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    <span class=\"attr\">\"name\"</span>: <span class=\"string\">\"Output Colorizer\"</span>,</span><br><span class=\"line\">    <span class=\"attr\">\"version\"</span>: <span class=\"string\">\"0.1.2\"</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    <span class=\"attr\">\"name\"</span>: <span class=\"string\">\"Path Intellisense\"</span>,</span><br><span class=\"line\">    <span class=\"attr\">\"version\"</span>: <span class=\"string\">\"1.4.2\"</span></span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    <span class=\"attr\">\"name\"</span>: <span class=\"string\">\"Power Mode\"</span>,</span><br><span class=\"line\">    <span class=\"attr\">\"version\"</span>: <span class=\"string\">\"2.2.0\"</span></span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    <span class=\"attr\">\"name\"</span>: <span class=\"string\">\"Prettier - Code formatter\"</span>,</span><br><span class=\"line\">    <span class=\"attr\">\"version\"</span>: <span class=\"string\">\"3.11.0\"</span></span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    <span class=\"attr\">\"name\"</span>: <span class=\"string\">\"Project Manager\"</span>,</span><br><span class=\"line\">    <span class=\"attr\">\"version\"</span>: <span class=\"string\">\"10.9.1\"</span></span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    <span class=\"attr\">\"name\"</span>: <span class=\"string\">\"Sass Lint\"</span>,</span><br><span class=\"line\">    <span class=\"attr\">\"version\"</span>: <span class=\"string\">\"1.0.6\"</span></span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    <span class=\"attr\">\"name\"</span>: <span class=\"string\">\"Scss Intellisense\"</span>,</span><br><span class=\"line\">    <span class=\"attr\">\"version\"</span>: <span class=\"string\">\"0.8.1\"</span></span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    <span class=\"attr\">\"name\"</span>: <span class=\"string\">\"Setting Sync\"</span>,</span><br><span class=\"line\">    <span class=\"attr\">\"version\"</span>: <span class=\"string\">\"3.4.3\"</span></span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    <span class=\"attr\">\"name\"</span>: <span class=\"string\">\"SVG Viewer\"</span>,</span><br><span class=\"line\">    <span class=\"attr\">\"version\"</span>: <span class=\"string\">\"2.0.0\"</span></span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    <span class=\"attr\">\"name\"</span>: <span class=\"string\">\"SynthWave'84\"</span>,</span><br><span class=\"line\">    <span class=\"attr\">\"version\"</span>: <span class=\"string\">\"0.0.7\"</span></span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    <span class=\"attr\">\"name\"</span>: <span class=\"string\">\"TODO Highlight\"</span>,</span><br><span class=\"line\">    <span class=\"attr\">\"version\"</span>: <span class=\"string\">\"1.0.4\"</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    <span class=\"attr\">\"name\"</span>: <span class=\"string\">\"Trailing Spaces\"</span>,</span><br><span class=\"line\">    <span class=\"attr\">\"version\"</span>: <span class=\"string\">\"0.3.1\"</span></span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    <span class=\"attr\">\"name\"</span>: <span class=\"string\">\"vetur\"</span>,</span><br><span class=\"line\">    <span class=\"attr\">\"version\"</span>: <span class=\"string\">\"0.22.6\"</span></span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    <span class=\"attr\">\"name\"</span>: <span class=\"string\">\"Vibrancy\"</span>,</span><br><span class=\"line\">    <span class=\"attr\">\"version\"</span>: <span class=\"string\">\"1.0.7\"</span></span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    <span class=\"attr\">\"name\"</span>: <span class=\"string\">\"vscode-element-helper\"</span>,</span><br><span class=\"line\">    <span class=\"attr\">\"version\"</span>: <span class=\"string\">\"0.5.6\"</span></span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    <span class=\"attr\">\"name\"</span>: <span class=\"string\">\"vscode-icons\"</span>,</span><br><span class=\"line\">    <span class=\"attr\">\"version\"</span>: <span class=\"string\">\"9.6.0\"</span></span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    <span class=\"attr\">\"name\"</span>: <span class=\"string\">\"Vue 2 Snippets\"</span>,</span><br><span class=\"line\">    <span class=\"attr\">\"version\"</span>: <span class=\"string\">\"0.1.11\"</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">]</span><br></pre></td></tr></table></figure></div>\n<h3 id=\"我的setting-json\"><a href=\"#我的setting-json\" class=\"headerlink\" title=\"我的setting.json\"></a>我的<code>setting.json</code></h3><div class=\"code-panel__wrapper\" autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\"><header class=\"mac-panel\"><span class=\"doc-path\"></span><span class=\"mac-panel__language\">JSON</span></header><figure class=\"iseeu highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"attr\">\"workbench.startupEditor\"</span>: <span class=\"string\">\"newUntitledFile\"</span>,</span><br><span class=\"line\">    <span class=\"attr\">\"workbench.iconTheme\"</span>: <span class=\"string\">\"material-icon-theme\"</span>,</span><br><span class=\"line\">    <span class=\"attr\">\"window.title\"</span>:  <span class=\"string\">\"$&#123;dirty&#125;$&#123;activeEditorMedium&#125;$&#123;separator&#125;$&#123;rootName&#125;\"</span>,</span><br><span class=\"line\">    <span class=\"attr\">\"window.zoomLevel\"</span>: <span class=\"number\">0.62</span>,</span><br><span class=\"line\">    <span class=\"attr\">\"terminal.integrated.rendererType\"</span>: <span class=\"string\">\"dom\"</span>,</span><br><span class=\"line\">    <span class=\"attr\">\"emmet.syntaxProfiles\"</span>: &#123;</span><br><span class=\"line\">        <span class=\"attr\">\"javascript\"</span>: <span class=\"string\">\"jsx\"</span>,</span><br><span class=\"line\">        <span class=\"attr\">\"vue\"</span>: <span class=\"string\">\"html\"</span>,</span><br><span class=\"line\">        <span class=\"attr\">\"vue-html\"</span>: <span class=\"string\">\"html\"</span></span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    <span class=\"attr\">\"editor.tabSize\"</span>: <span class=\"number\">2</span>,</span><br><span class=\"line\">    <span class=\"attr\">\"editor.fontSize\"</span>: <span class=\"number\">20</span>,</span><br><span class=\"line\">    <span class=\"attr\">\"editor.lineHeight\"</span>: <span class=\"number\">36</span>,</span><br><span class=\"line\">    <span class=\"attr\">\"editor.wordWrap\"</span>: <span class=\"string\">\"on\"</span>,</span><br><span class=\"line\">    <span class=\"attr\">\"editor.quickSuggestions\"</span>: &#123;</span><br><span class=\"line\">        <span class=\"attr\">\"strings\"</span>: <span class=\"literal\">true</span></span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    <span class=\"attr\">\"editor.multiCursorModifier\"</span>: <span class=\"string\">\"ctrlCmd\"</span>,</span><br><span class=\"line\">    <span class=\"attr\">\"editor.formatOnPaste\"</span>: <span class=\"literal\">false</span>,</span><br><span class=\"line\">    <span class=\"attr\">\"editor.fontFamily\"</span>: <span class=\"string\">\"FiraCode-Retina\"</span>,</span><br><span class=\"line\">    <span class=\"attr\">\"editor.fontLigatures\"</span>: <span class=\"literal\">true</span>,</span><br><span class=\"line\">    <span class=\"attr\">\"prettier.singleQuote\"</span>: <span class=\"literal\">true</span>,</span><br><span class=\"line\">    <span class=\"attr\">\"prettier.semi\"</span>: <span class=\"literal\">false</span>,</span><br><span class=\"line\">    <span class=\"attr\">\"vscode_custom_css.imports\"</span>: [</span><br><span class=\"line\">        <span class=\"string\">\"file:///Applications/Visual%20Studio%20Code.app/Contents/Resources/theme/synthwave84.css\"</span>,</span><br><span class=\"line\">        <span class=\"string\">\"file:///Applications/Visual%20Studio%20Code.app/Contents/Resources/theme/terminal.css\"</span>,</span><br><span class=\"line\">        <span class=\"string\">\"file:///Applications/Visual%20Studio%20Code.app/Contents/Resources/theme/toolbar.css\"</span>,</span><br><span class=\"line\">        <span class=\"string\">\"file:///Applications/Visual%20Studio%20Code.app/Contents/Resources/theme/custom.css\"</span>,</span><br><span class=\"line\">        <span class=\"string\">\"file:///Applications/Visual%20Studio%20Code.app/Contents/Resources/theme/enable-electron-vibrancy.js\"</span>,</span><br><span class=\"line\">    ],</span><br><span class=\"line\">    <span class=\"attr\">\"vscode_custom_css.policy\"</span>: <span class=\"literal\">true</span>,</span><br><span class=\"line\">    <span class=\"attr\">\"[vue]\"</span>: &#123;</span><br><span class=\"line\">        <span class=\"attr\">\"editor.defaultFormatter\"</span>: <span class=\"string\">\"esbenp.prettier-vscode\"</span></span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    <span class=\"attr\">\"git.confirmSync\"</span>: <span class=\"literal\">false</span>,</span><br><span class=\"line\">    <span class=\"attr\">\"files.exclude\"</span>: &#123;</span><br><span class=\"line\">        <span class=\"attr\">\"**/node_modules\"</span>: <span class=\"literal\">true</span></span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    <span class=\"attr\">\"files.autoSave\"</span>: <span class=\"string\">\"afterDelay\"</span>,</span><br><span class=\"line\">    <span class=\"attr\">\"background.useDefault\"</span>: <span class=\"literal\">true</span>,</span><br><span class=\"line\">    <span class=\"attr\">\"background.useFront\"</span>: <span class=\"literal\">true</span>,</span><br><span class=\"line\">    <span class=\"attr\">\"background.customImages\"</span>: [</span><br><span class=\"line\">        <span class=\"string\">\"file:///Users/singledogno.1/Pictures/pap.er/20191127.jpg\"</span></span><br><span class=\"line\">    ],</span><br><span class=\"line\">    <span class=\"attr\">\"[javascript]\"</span>: &#123;</span><br><span class=\"line\">        <span class=\"attr\">\"editor.defaultFormatter\"</span>: <span class=\"string\">\"esbenp.prettier-vscode\"</span></span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    <span class=\"attr\">\"powermode.enabled\"</span>: <span class=\"literal\">true</span>,</span><br><span class=\"line\">    <span class=\"attr\">\"better-comments.highlightPlainText\"</span>: <span class=\"literal\">true</span>,</span><br><span class=\"line\">    <span class=\"attr\">\"better-comments.multilineComments\"</span>: <span class=\"literal\">true</span>,</span><br><span class=\"line\">    <span class=\"attr\">\"better-comments.tags\"</span>: [</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"attr\">\"tag\"</span>: <span class=\"string\">\"! \"</span>,</span><br><span class=\"line\">            <span class=\"attr\">\"color\"</span>: <span class=\"string\">\"#FF2D00\"</span>,</span><br><span class=\"line\">            <span class=\"attr\">\"strikethrough\"</span>: <span class=\"literal\">false</span>,</span><br><span class=\"line\">            <span class=\"attr\">\"backgroundColor\"</span>: <span class=\"string\">\"transparent\"</span></span><br><span class=\"line\">        &#125;,</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"attr\">\"tag\"</span>: <span class=\"string\">\"FIXME \"</span>,</span><br><span class=\"line\">            <span class=\"attr\">\"color\"</span>: <span class=\"string\">\"#3498DB\"</span>,</span><br><span class=\"line\">            <span class=\"attr\">\"strikethrough\"</span>: <span class=\"literal\">false</span>,</span><br><span class=\"line\">            <span class=\"attr\">\"backgroundColor\"</span>: <span class=\"string\">\"transparent\"</span></span><br><span class=\"line\">        &#125;,</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"attr\">\"tag\"</span>: <span class=\"string\">\"fixme \"</span>,</span><br><span class=\"line\">            <span class=\"attr\">\"color\"</span>: <span class=\"string\">\"#3498DB\"</span>,</span><br><span class=\"line\">            <span class=\"attr\">\"strikethrough\"</span>: <span class=\"literal\">false</span>,</span><br><span class=\"line\">            <span class=\"attr\">\"backgroundColor\"</span>: <span class=\"string\">\"transparent\"</span></span><br><span class=\"line\">        &#125;,</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"attr\">\"tag\"</span>: <span class=\"string\">\"TODO \"</span>,</span><br><span class=\"line\">            <span class=\"attr\">\"color\"</span>: <span class=\"string\">\"#FF8C00\"</span>,</span><br><span class=\"line\">            <span class=\"attr\">\"strikethrough\"</span>: <span class=\"literal\">false</span>,</span><br><span class=\"line\">            <span class=\"attr\">\"backgroundColor\"</span>: <span class=\"string\">\"transparent\"</span></span><br><span class=\"line\">        &#125;,</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"attr\">\"tag\"</span>: <span class=\"string\">\"todo \"</span>,</span><br><span class=\"line\">            <span class=\"attr\">\"color\"</span>: <span class=\"string\">\"#FF8C00\"</span>,</span><br><span class=\"line\">            <span class=\"attr\">\"strikethrough\"</span>: <span class=\"literal\">false</span>,</span><br><span class=\"line\">            <span class=\"attr\">\"backgroundColor\"</span>: <span class=\"string\">\"transparent\"</span></span><br><span class=\"line\">        &#125;,</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"attr\">\"tag\"</span>: <span class=\"string\">\" \"</span>,</span><br><span class=\"line\">            <span class=\"attr\">\"color\"</span>: <span class=\"string\">\"#98C379\"</span>,</span><br><span class=\"line\">            <span class=\"attr\">\"strikethrough\"</span>: <span class=\"literal\">false</span>,</span><br><span class=\"line\">            <span class=\"attr\">\"backgroundColor\"</span>: <span class=\"string\">\"transparent\"</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    ],</span><br><span class=\"line\">    <span class=\"attr\">\"sync.gist\"</span>: <span class=\"string\">\"944068a1850790116dd60d21167b4af10b30b0c9\"</span>,</span><br><span class=\"line\">    <span class=\"attr\">\"files.autoSaveDelay\"</span>: <span class=\"number\">5000</span>,</span><br><span class=\"line\">    <span class=\"attr\">\"cSpell.allowedSchemas\"</span>: [</span><br><span class=\"line\">        <span class=\"string\">\"file\"</span>,</span><br><span class=\"line\">        <span class=\"string\">\"untitled\"</span>,</span><br><span class=\"line\">        <span class=\"string\">\"**/*.vue\"</span></span><br><span class=\"line\">    ],</span><br><span class=\"line\">    <span class=\"attr\">\"[html]\"</span>: &#123;</span><br><span class=\"line\">        <span class=\"attr\">\"editor.defaultFormatter\"</span>: <span class=\"string\">\"vscode.html-language-features\"</span></span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    <span class=\"attr\">\"docthis.includeDateTag\"</span>: <span class=\"literal\">true</span>,</span><br><span class=\"line\">    <span class=\"attr\">\"docthis.includeDescriptionTag\"</span>: <span class=\"literal\">true</span>,</span><br><span class=\"line\">    <span class=\"attr\">\"docthis.includeAuthorTag\"</span>: <span class=\"literal\">true</span>,</span><br><span class=\"line\">    <span class=\"attr\">\"vscode_vibrancy.opacity\"</span>: <span class=\"number\">0</span>,</span><br><span class=\"line\">    <span class=\"attr\">\"vscode_vibrancy.type\"</span>: <span class=\"string\">\"selection\"</span>,</span><br><span class=\"line\">    <span class=\"attr\">\"vscode_vibrancy.theme\"</span>: <span class=\"string\">\"Default Dark\"</span>,</span><br><span class=\"line\">    <span class=\"attr\">\"cSpell.enabledLanguageIds\"</span>: [</span><br><span class=\"line\">        <span class=\"string\">\"asciidoc\"</span>,</span><br><span class=\"line\">        <span class=\"string\">\"c\"</span>,</span><br><span class=\"line\">        <span class=\"string\">\"cpp\"</span>,</span><br><span class=\"line\">        <span class=\"string\">\"csharp\"</span>,</span><br><span class=\"line\">        <span class=\"string\">\"css\"</span>,</span><br><span class=\"line\">        <span class=\"string\">\"git-commit\"</span>,</span><br><span class=\"line\">        <span class=\"string\">\"go\"</span>,</span><br><span class=\"line\">        <span class=\"string\">\"handlebars\"</span>,</span><br><span class=\"line\">        <span class=\"string\">\"haskell\"</span>,</span><br><span class=\"line\">        <span class=\"string\">\"html\"</span>,</span><br><span class=\"line\">        <span class=\"string\">\"jade\"</span>,</span><br><span class=\"line\">        <span class=\"string\">\"java\"</span>,</span><br><span class=\"line\">        <span class=\"string\">\"javascript\"</span>,</span><br><span class=\"line\">        <span class=\"string\">\"javascriptreact\"</span>,</span><br><span class=\"line\">        <span class=\"string\">\"json\"</span>,</span><br><span class=\"line\">        <span class=\"string\">\"jsonc\"</span>,</span><br><span class=\"line\">        <span class=\"string\">\"latex\"</span>,</span><br><span class=\"line\">        <span class=\"string\">\"less\"</span>,</span><br><span class=\"line\">        <span class=\"string\">\"markdown\"</span>,</span><br><span class=\"line\">        <span class=\"string\">\"php\"</span>,</span><br><span class=\"line\">        <span class=\"string\">\"plaintext\"</span>,</span><br><span class=\"line\">        <span class=\"string\">\"pug\"</span>,</span><br><span class=\"line\">        <span class=\"string\">\"python\"</span>,</span><br><span class=\"line\">        <span class=\"string\">\"restructuredtext\"</span>,</span><br><span class=\"line\">        <span class=\"string\">\"rust\"</span>,</span><br><span class=\"line\">        <span class=\"string\">\"scala\"</span>,</span><br><span class=\"line\">        <span class=\"string\">\"scss\"</span>,</span><br><span class=\"line\">        <span class=\"string\">\"text\"</span>,</span><br><span class=\"line\">        <span class=\"string\">\"typescript\"</span>,</span><br><span class=\"line\">        <span class=\"string\">\"typescriptreact\"</span>,</span><br><span class=\"line\">        <span class=\"string\">\"vue\"</span>,</span><br><span class=\"line\">        <span class=\"string\">\"vue-html\"</span>,</span><br><span class=\"line\">        <span class=\"string\">\"yaml\"</span>,</span><br><span class=\"line\">        <span class=\"string\">\"yml\"</span></span><br><span class=\"line\">    ]</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></div>\n<p><strong>如果你也是 Mac 电脑，并且你复制了我的<code>setting.json</code>，当中有一个只需要注意：<code>editor.fontFamily: &quot;FiraCode-Retina&quot;</code></strong>，要保证你也安装了这个字体，他才会生效。这个字体可以给你更优雅的代码展示，尤其是在条件语句中。</p>\n<p><img src=\"/blog/img/FiraCode.jpg\" alt=\"FiraCode\"></p>\n<p>Mac 可以使用<code>homebrew</code>安装这个字体</p>\n<div class=\"code-panel__wrapper\" autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\"><header class=\"mac-panel\"><span class=\"doc-path\"></span><span class=\"mac-panel__language\">SHELL</span></header><figure class=\"iseeu highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">brew tap homebrew/cask-fonts</span><br><span class=\"line\">brew cask install font-fira-code</span><br></pre></td></tr></table></figure></div>\n<h3 id=\"自定义你的\"><a href=\"#自定义你的\" class=\"headerlink\" title=\"自定义你的\"></a>自定义你的vscode</h3><p>因为<code>custom-css-and-js</code>的原因，允许自己修改编辑器的样式，事实上你可以把编辑器修改成任何样式，比如我的是毛玻璃的外观</p>\n<p><img src=\"/blog/img/alpha-bg.jpg\" alt=\"alpha-bg\"></p>\n<p>那我怎么知道样式是什么，并且怎么调整呢？其实很简单，使用<code>cmd + shift + p</code>输入 <code>toggle developer</code>, 选中切换开发者人员工具，会跳出来一个类似于 chrome 的调试面板。接下来的操作就像操作修改普通的 css 样式一样了，把这些修改过的 css 文件放到一个固定的地方，传入到<code>custom-css-and-js</code>的设置中，重启编辑器就可以生效了。</p>\n<h3 id=\"自定义文件模板\"><a href=\"#自定义文件模板\" class=\"headerlink\" title=\"自定义文件模板\"></a>自定义文件模板</h3><p>比如说我想自定义 vue 的模板，应该怎么做呢？</p>\n<p>打开<strong>首选项 – 用户代码片段 – 输入 <code>vue.json</code>,</strong>打开文件，在里面编辑你想要编辑的模板就可以了。</p>\n","site":{"data":{}},"excerpt":"","more":"<p>开门见山地说，我最近换Mac电脑了。那么我之前一直在用的是<a href=\"https://www.jetbrains.com/webstorm/\" target=\"_blank\" rel=\"noopener\">WebStorm</a>，但这个IDE是要花钱的，在windows可以有很多种方法免费去用它，但苹果电脑就不好使了，所以现在用<a href=\"https://code.visualstudio.com/\" target=\"_blank\" rel=\"noopener\">new</a>作为主要开发工具。</p>\n<p>目前看来，vscode在使用上比WebStorm要方便，也更轻巧，各种插件的扩展也极大地增强了工具的能力。但我个人还是更喜欢WebStorm的git工具。总感觉vscode在git的提交和管理不如WebStorm功能那么全面和强大，但除去这一点，vscode相比于WebStorm基本没有其他弱势的地方。</p>\n<h2 id=\"插件篇\"><a href=\"#插件篇\" class=\"headerlink\" title=\"插件篇\"></a>插件篇</h2><p>说到vscode,不得不提的就是插件,如果没有了插件,vscode也只不过是长得好看的notepad++。前端开发常用的插件在网上都可以找到，我这里列出一些我安装过好用但不常见的插件，另外文章最后我再列出我安装过的所有插件供参考。</p>\n<h3 id=\"不太常用的插件\"><a href=\"#不太常用的插件\" class=\"headerlink\" title=\"不太常用的插件\"></a>不太常用的插件</h3><table>\n<thead>\n<tr>\n<th style=\"text-align:center\">插件名</th>\n<th style=\"text-align:center\">下载量</th>\n<th style=\"text-align:center\">插件介绍</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">Better Comments</td>\n<td style=\"text-align:center\">53 万</td>\n<td style=\"text-align:center\">可以自定义自己的注释</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">DotENV</td>\n<td style=\"text-align:center\">68 万</td>\n<td style=\"text-align:center\">支持<code>.env</code>格式文件</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">Custom CSS and JS Loader</td>\n<td style=\"text-align:center\">17 万</td>\n<td style=\"text-align:center\">可以自定义vscode的样式</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">EditorConfig for VS Code</td>\n<td style=\"text-align:center\">162 万</td>\n<td style=\"text-align:center\">高亮并使用.editorconfig文件设置编辑器编码风格</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">Hungry Delete</td>\n<td style=\"text-align:center\">1 万</td>\n<td style=\"text-align:center\">快速删除多余的空格和空白行</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">Open In Default Browser</td>\n<td style=\"text-align:center\">27 万</td>\n<td style=\"text-align:center\">使用默认编辑器打开指定网页</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">Output Colorizer</td>\n<td style=\"text-align:center\">19万</td>\n<td style=\"text-align:center\">更漂亮的terminal</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">Power Mode</td>\n<td style=\"text-align:center\">14 万</td>\n<td style=\"text-align:center\">能让你打字的时候很有打击感</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">SynthWave’84</td>\n<td style=\"text-align:center\">11 万</td>\n<td style=\"text-align:center\">一款带有发光效果的字体主题</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">Vibrancy</td>\n<td style=\"text-align:center\">7 千</td>\n<td style=\"text-align:center\">编辑器毛玻璃效果</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">vscode-element-helper</td>\n<td style=\"text-align:center\">4 万</td>\n<td style=\"text-align:center\">在vscode中就可以查看<code>element-ui</code>文档</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">epub reader</td>\n<td style=\"text-align:center\">8 千</td>\n<td style=\"text-align:center\">在vscode里看小说的摸鱼神器</td>\n</tr>\n</tbody>\n</table>\n<p>所有插件都可以修改，修改的方式有两种，你可以打开设置在设置中对可以修改的参数做简单的修改，但更个性化的设置需要修改系统的<code>setting.json</code>,你可以使用<code>cmd + shift + p</code>输入<code>open setting</code>打开<code>setting.json</code>，所有的插件参数都可以在这里进行详细的修改</p>\n<h3 id=\"我的配置\"><a href=\"#我的配置\" class=\"headerlink\" title=\"我的配置\"></a>我的vscode配置</h3><figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br><span class=\"line\">165</span><br><span class=\"line\">166</span><br><span class=\"line\">167</span><br><span class=\"line\">168</span><br><span class=\"line\">169</span><br><span class=\"line\">170</span><br><span class=\"line\">171</span><br><span class=\"line\">172</span><br><span class=\"line\">173</span><br><span class=\"line\">174</span><br><span class=\"line\">175</span><br><span class=\"line\">176</span><br><span class=\"line\">177</span><br><span class=\"line\">178</span><br><span class=\"line\">179</span><br><span class=\"line\">180</span><br><span class=\"line\">181</span><br><span class=\"line\">182</span><br><span class=\"line\">183</span><br><span class=\"line\">184</span><br><span class=\"line\">185</span><br><span class=\"line\">186</span><br><span class=\"line\">187</span><br><span class=\"line\">188</span><br><span class=\"line\">189</span><br><span class=\"line\">190</span><br><span class=\"line\">191</span><br><span class=\"line\">192</span><br><span class=\"line\">193</span><br><span class=\"line\">194</span><br><span class=\"line\">195</span><br><span class=\"line\">196</span><br><span class=\"line\">197</span><br><span class=\"line\">198</span><br><span class=\"line\">199</span><br><span class=\"line\">200</span><br><span class=\"line\">201</span><br><span class=\"line\">202</span><br><span class=\"line\">203</span><br><span class=\"line\">204</span><br><span class=\"line\">205</span><br><span class=\"line\">206</span><br><span class=\"line\">207</span><br><span class=\"line\">208</span><br><span class=\"line\">209</span><br><span class=\"line\">210</span><br><span class=\"line\">211</span><br><span class=\"line\">212</span><br><span class=\"line\">213</span><br><span class=\"line\">214</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    <span class=\"attr\">\"name\"</span>: <span class=\"string\">\"Atom One Dark Theme\"</span>,</span><br><span class=\"line\">    <span class=\"attr\">\"version\"</span>: <span class=\"string\">\"2.1.0\"</span></span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    <span class=\"attr\">\"name\"</span>: <span class=\"string\">\"Auto Close Tag\"</span>,</span><br><span class=\"line\">    <span class=\"attr\">\"version\"</span>: <span class=\"string\">\"0.5.6\"</span></span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    <span class=\"attr\">\"name\"</span>: <span class=\"string\">\"Auto Import\"</span>,</span><br><span class=\"line\">    <span class=\"attr\">\"version\"</span>: <span class=\"string\">\"1.5.3\"</span></span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    <span class=\"attr\">\"name\"</span>: <span class=\"string\">\"Auto Rename Tag\"</span>,</span><br><span class=\"line\">    <span class=\"attr\">\"version\"</span>: <span class=\"string\">\"0.1.1\"</span></span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    <span class=\"attr\">\"name\"</span>: <span class=\"string\">\"background\"</span>,</span><br><span class=\"line\">    <span class=\"attr\">\"version\"</span>: <span class=\"string\">\"1.1.23\"</span></span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    <span class=\"attr\">\"name\"</span>: <span class=\"string\">\"Beautify css/sass/scss/less\"</span>,</span><br><span class=\"line\">    <span class=\"attr\">\"version\"</span>: <span class=\"string\">\"2.3.3\"</span></span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    <span class=\"attr\">\"name\"</span>: <span class=\"string\">\"Better Comments\"</span>,</span><br><span class=\"line\">    <span class=\"attr\">\"version\"</span>: <span class=\"string\">\"2.0.5\"</span></span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    <span class=\"attr\">\"name\"</span>: <span class=\"string\">\"Bookmarks\"</span>,</span><br><span class=\"line\">    <span class=\"attr\">\"version\"</span>: <span class=\"string\">\"10.6.0\"</span></span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    <span class=\"attr\">\"name\"</span>: <span class=\"string\">\"Bracket Pair Colorizer\"</span>,</span><br><span class=\"line\">    <span class=\"attr\">\"version\"</span>: <span class=\"string\">\"1.0.61\"</span></span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    <span class=\"attr\">\"name\"</span>: <span class=\"string\">\"Chinese(simplified) Language Pack for Visual Studio Code\"</span>,</span><br><span class=\"line\">    <span class=\"attr\">\"version\"</span>: <span class=\"string\">\"1.40.2\"</span></span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    <span class=\"attr\">\"name\"</span>: <span class=\"string\">\"Code Spell Checker\"</span>,</span><br><span class=\"line\">    <span class=\"attr\">\"version\"</span>: <span class=\"string\">\"1.7.20\"</span></span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    <span class=\"attr\">\"name\"</span>: <span class=\"string\">\"Color Highlight\"</span>,</span><br><span class=\"line\">    <span class=\"attr\">\"version\"</span>: <span class=\"string\">\"2.3.0\"</span></span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    <span class=\"attr\">\"name\"</span>: <span class=\"string\">\"Color Picker\"</span>,</span><br><span class=\"line\">    <span class=\"attr\">\"version\"</span>: <span class=\"string\">\"0.4.5\"</span></span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    <span class=\"attr\">\"name\"</span>: <span class=\"string\">\"Custom Css and JS Loader\"</span>,</span><br><span class=\"line\">    <span class=\"attr\">\"version\"</span>: <span class=\"string\">\"3.9.0\"</span></span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    <span class=\"attr\">\"name\"</span>: <span class=\"string\">\"Debugger for Chrome\"</span>,</span><br><span class=\"line\">    <span class=\"attr\">\"version\"</span>: <span class=\"string\">\"4.12.2\"</span></span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    <span class=\"attr\">\"name\"</span>: <span class=\"string\">\"Document This\"</span>,</span><br><span class=\"line\">    <span class=\"attr\">\"version\"</span>: <span class=\"string\">\"0.7.1\"</span></span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    <span class=\"attr\">\"name\"</span>: <span class=\"string\">\"DntENV\"</span>,</span><br><span class=\"line\">    <span class=\"attr\">\"version\"</span>: <span class=\"string\">\"1.0.1\"</span></span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    <span class=\"attr\">\"name\"</span>: <span class=\"string\">\"EditorConfig for VS Code\"</span>,</span><br><span class=\"line\">    <span class=\"attr\">\"version\"</span>: <span class=\"string\">\"0.14.2\"</span></span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    <span class=\"attr\">\"name\"</span>: <span class=\"string\">\"epub reader\"</span>,</span><br><span class=\"line\">    <span class=\"attr\">\"version\"</span>: <span class=\"string\">\"1.1.6\"</span></span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    <span class=\"attr\">\"name\"</span>: <span class=\"string\">\"ESLint\"</span>,</span><br><span class=\"line\">    <span class=\"attr\">\"version\"</span>: <span class=\"string\">\"1.9.1\"</span></span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    <span class=\"attr\">\"name\"</span>: <span class=\"string\">\"Git History\"</span>,</span><br><span class=\"line\">    <span class=\"attr\">\"version\"</span>: <span class=\"string\">\"0.4.9\"</span></span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    <span class=\"attr\">\"name\"</span>: <span class=\"string\">\"GitLens — Git supercharged\"</span>,</span><br><span class=\"line\">    <span class=\"attr\">\"version\"</span>: <span class=\"string\">\"10.2.0\"</span></span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    <span class=\"attr\">\"name\"</span>: <span class=\"string\">\"Highlight Matching Tag\"</span>,</span><br><span class=\"line\">    <span class=\"attr\">\"version\"</span>: <span class=\"string\">\"0.9.6\"</span></span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    <span class=\"attr\">\"name\"</span>: <span class=\"string\">\"HTML CSS Support\"</span>,</span><br><span class=\"line\">    <span class=\"attr\">\"version\"</span>: <span class=\"string\">\"0.2.3\"</span></span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    <span class=\"attr\">\"name\"</span>: <span class=\"string\">\"Hungry Delete\"</span>,</span><br><span class=\"line\">    <span class=\"attr\">\"version\"</span>: <span class=\"string\">\"1.6.0\"</span></span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    <span class=\"attr\">\"name\"</span>: <span class=\"string\">\"Import Cost\"</span>,</span><br><span class=\"line\">    <span class=\"attr\">\"version\"</span>: <span class=\"string\">\"2.12.0\"</span></span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    <span class=\"attr\">\"name\"</span>: <span class=\"string\">\"indent-rainbow\"</span>,</span><br><span class=\"line\">    <span class=\"attr\">\"version\"</span>: <span class=\"string\">\"7.4.0\"</span></span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    <span class=\"attr\">\"name\"</span>: <span class=\"string\">\"language-stylus\"</span>,</span><br><span class=\"line\">    <span class=\"attr\">\"version\"</span>: <span class=\"string\">\"1.11.0\"</span></span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    <span class=\"attr\">\"name\"</span>: <span class=\"string\">\"Markdown Preview Enhanced\"</span>,</span><br><span class=\"line\">    <span class=\"attr\">\"version\"</span>: <span class=\"string\">\"0.5.0\"</span></span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    <span class=\"attr\">\"name\"</span>: <span class=\"string\">\"markdownlint\"</span>,</span><br><span class=\"line\">    <span class=\"attr\">\"version\"</span>: <span class=\"string\">\"0.32.0\"</span></span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    <span class=\"attr\">\"name\"</span>: <span class=\"string\">\"Material Icon Theme\"</span>,</span><br><span class=\"line\">    <span class=\"attr\">\"version\"</span>: <span class=\"string\">\"3.9.2\"</span></span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    <span class=\"attr\">\"name\"</span>: <span class=\"string\">\"Material Theme\"</span>,</span><br><span class=\"line\">    <span class=\"attr\">\"version\"</span>: <span class=\"string\">\"30.0.0\"</span></span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    <span class=\"attr\">\"name\"</span>: <span class=\"string\">\"npm\"</span>,</span><br><span class=\"line\">    <span class=\"attr\">\"version\"</span>: <span class=\"string\">\"0.3.9\"</span></span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    <span class=\"attr\">\"name\"</span>: <span class=\"string\">\"npm Intellisense\"</span>,</span><br><span class=\"line\">    <span class=\"attr\">\"version\"</span>: <span class=\"string\">\"1.3.0\"</span></span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    <span class=\"attr\">\"name\"</span>: <span class=\"string\">\"One Dark Pro\"</span>,</span><br><span class=\"line\">    <span class=\"attr\">\"version\"</span>: <span class=\"string\">\"3.2.1\"</span></span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    <span class=\"attr\">\"name\"</span>: <span class=\"string\">\"Open In Default Browser\"</span>,</span><br><span class=\"line\">    <span class=\"attr\">\"version\"</span>: <span class=\"string\">\"2.1.0\"</span></span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    <span class=\"attr\">\"name\"</span>: <span class=\"string\">\"Output Colorizer\"</span>,</span><br><span class=\"line\">    <span class=\"attr\">\"version\"</span>: <span class=\"string\">\"0.1.2\"</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    <span class=\"attr\">\"name\"</span>: <span class=\"string\">\"Path Intellisense\"</span>,</span><br><span class=\"line\">    <span class=\"attr\">\"version\"</span>: <span class=\"string\">\"1.4.2\"</span></span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    <span class=\"attr\">\"name\"</span>: <span class=\"string\">\"Power Mode\"</span>,</span><br><span class=\"line\">    <span class=\"attr\">\"version\"</span>: <span class=\"string\">\"2.2.0\"</span></span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    <span class=\"attr\">\"name\"</span>: <span class=\"string\">\"Prettier - Code formatter\"</span>,</span><br><span class=\"line\">    <span class=\"attr\">\"version\"</span>: <span class=\"string\">\"3.11.0\"</span></span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    <span class=\"attr\">\"name\"</span>: <span class=\"string\">\"Project Manager\"</span>,</span><br><span class=\"line\">    <span class=\"attr\">\"version\"</span>: <span class=\"string\">\"10.9.1\"</span></span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    <span class=\"attr\">\"name\"</span>: <span class=\"string\">\"Sass Lint\"</span>,</span><br><span class=\"line\">    <span class=\"attr\">\"version\"</span>: <span class=\"string\">\"1.0.6\"</span></span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    <span class=\"attr\">\"name\"</span>: <span class=\"string\">\"Scss Intellisense\"</span>,</span><br><span class=\"line\">    <span class=\"attr\">\"version\"</span>: <span class=\"string\">\"0.8.1\"</span></span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    <span class=\"attr\">\"name\"</span>: <span class=\"string\">\"Setting Sync\"</span>,</span><br><span class=\"line\">    <span class=\"attr\">\"version\"</span>: <span class=\"string\">\"3.4.3\"</span></span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    <span class=\"attr\">\"name\"</span>: <span class=\"string\">\"SVG Viewer\"</span>,</span><br><span class=\"line\">    <span class=\"attr\">\"version\"</span>: <span class=\"string\">\"2.0.0\"</span></span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    <span class=\"attr\">\"name\"</span>: <span class=\"string\">\"SynthWave'84\"</span>,</span><br><span class=\"line\">    <span class=\"attr\">\"version\"</span>: <span class=\"string\">\"0.0.7\"</span></span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    <span class=\"attr\">\"name\"</span>: <span class=\"string\">\"TODO Highlight\"</span>,</span><br><span class=\"line\">    <span class=\"attr\">\"version\"</span>: <span class=\"string\">\"1.0.4\"</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    <span class=\"attr\">\"name\"</span>: <span class=\"string\">\"Trailing Spaces\"</span>,</span><br><span class=\"line\">    <span class=\"attr\">\"version\"</span>: <span class=\"string\">\"0.3.1\"</span></span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    <span class=\"attr\">\"name\"</span>: <span class=\"string\">\"vetur\"</span>,</span><br><span class=\"line\">    <span class=\"attr\">\"version\"</span>: <span class=\"string\">\"0.22.6\"</span></span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    <span class=\"attr\">\"name\"</span>: <span class=\"string\">\"Vibrancy\"</span>,</span><br><span class=\"line\">    <span class=\"attr\">\"version\"</span>: <span class=\"string\">\"1.0.7\"</span></span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    <span class=\"attr\">\"name\"</span>: <span class=\"string\">\"vscode-element-helper\"</span>,</span><br><span class=\"line\">    <span class=\"attr\">\"version\"</span>: <span class=\"string\">\"0.5.6\"</span></span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    <span class=\"attr\">\"name\"</span>: <span class=\"string\">\"vscode-icons\"</span>,</span><br><span class=\"line\">    <span class=\"attr\">\"version\"</span>: <span class=\"string\">\"9.6.0\"</span></span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    <span class=\"attr\">\"name\"</span>: <span class=\"string\">\"Vue 2 Snippets\"</span>,</span><br><span class=\"line\">    <span class=\"attr\">\"version\"</span>: <span class=\"string\">\"0.1.11\"</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">]</span><br></pre></td></tr></table></figure>\n<h3 id=\"我的setting-json\"><a href=\"#我的setting-json\" class=\"headerlink\" title=\"我的setting.json\"></a>我的<code>setting.json</code></h3><figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"attr\">\"workbench.startupEditor\"</span>: <span class=\"string\">\"newUntitledFile\"</span>,</span><br><span class=\"line\">    <span class=\"attr\">\"workbench.iconTheme\"</span>: <span class=\"string\">\"material-icon-theme\"</span>,</span><br><span class=\"line\">    <span class=\"attr\">\"window.title\"</span>:  <span class=\"string\">\"$&#123;dirty&#125;$&#123;activeEditorMedium&#125;$&#123;separator&#125;$&#123;rootName&#125;\"</span>,</span><br><span class=\"line\">    <span class=\"attr\">\"window.zoomLevel\"</span>: <span class=\"number\">0.62</span>,</span><br><span class=\"line\">    <span class=\"attr\">\"terminal.integrated.rendererType\"</span>: <span class=\"string\">\"dom\"</span>,</span><br><span class=\"line\">    <span class=\"attr\">\"emmet.syntaxProfiles\"</span>: &#123;</span><br><span class=\"line\">        <span class=\"attr\">\"javascript\"</span>: <span class=\"string\">\"jsx\"</span>,</span><br><span class=\"line\">        <span class=\"attr\">\"vue\"</span>: <span class=\"string\">\"html\"</span>,</span><br><span class=\"line\">        <span class=\"attr\">\"vue-html\"</span>: <span class=\"string\">\"html\"</span></span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    <span class=\"attr\">\"editor.tabSize\"</span>: <span class=\"number\">2</span>,</span><br><span class=\"line\">    <span class=\"attr\">\"editor.fontSize\"</span>: <span class=\"number\">20</span>,</span><br><span class=\"line\">    <span class=\"attr\">\"editor.lineHeight\"</span>: <span class=\"number\">36</span>,</span><br><span class=\"line\">    <span class=\"attr\">\"editor.wordWrap\"</span>: <span class=\"string\">\"on\"</span>,</span><br><span class=\"line\">    <span class=\"attr\">\"editor.quickSuggestions\"</span>: &#123;</span><br><span class=\"line\">        <span class=\"attr\">\"strings\"</span>: <span class=\"literal\">true</span></span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    <span class=\"attr\">\"editor.multiCursorModifier\"</span>: <span class=\"string\">\"ctrlCmd\"</span>,</span><br><span class=\"line\">    <span class=\"attr\">\"editor.formatOnPaste\"</span>: <span class=\"literal\">false</span>,</span><br><span class=\"line\">    <span class=\"attr\">\"editor.fontFamily\"</span>: <span class=\"string\">\"FiraCode-Retina\"</span>,</span><br><span class=\"line\">    <span class=\"attr\">\"editor.fontLigatures\"</span>: <span class=\"literal\">true</span>,</span><br><span class=\"line\">    <span class=\"attr\">\"prettier.singleQuote\"</span>: <span class=\"literal\">true</span>,</span><br><span class=\"line\">    <span class=\"attr\">\"prettier.semi\"</span>: <span class=\"literal\">false</span>,</span><br><span class=\"line\">    <span class=\"attr\">\"vscode_custom_css.imports\"</span>: [</span><br><span class=\"line\">        <span class=\"string\">\"file:///Applications/Visual%20Studio%20Code.app/Contents/Resources/theme/synthwave84.css\"</span>,</span><br><span class=\"line\">        <span class=\"string\">\"file:///Applications/Visual%20Studio%20Code.app/Contents/Resources/theme/terminal.css\"</span>,</span><br><span class=\"line\">        <span class=\"string\">\"file:///Applications/Visual%20Studio%20Code.app/Contents/Resources/theme/toolbar.css\"</span>,</span><br><span class=\"line\">        <span class=\"string\">\"file:///Applications/Visual%20Studio%20Code.app/Contents/Resources/theme/custom.css\"</span>,</span><br><span class=\"line\">        <span class=\"string\">\"file:///Applications/Visual%20Studio%20Code.app/Contents/Resources/theme/enable-electron-vibrancy.js\"</span>,</span><br><span class=\"line\">    ],</span><br><span class=\"line\">    <span class=\"attr\">\"vscode_custom_css.policy\"</span>: <span class=\"literal\">true</span>,</span><br><span class=\"line\">    <span class=\"attr\">\"[vue]\"</span>: &#123;</span><br><span class=\"line\">        <span class=\"attr\">\"editor.defaultFormatter\"</span>: <span class=\"string\">\"esbenp.prettier-vscode\"</span></span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    <span class=\"attr\">\"git.confirmSync\"</span>: <span class=\"literal\">false</span>,</span><br><span class=\"line\">    <span class=\"attr\">\"files.exclude\"</span>: &#123;</span><br><span class=\"line\">        <span class=\"attr\">\"**/node_modules\"</span>: <span class=\"literal\">true</span></span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    <span class=\"attr\">\"files.autoSave\"</span>: <span class=\"string\">\"afterDelay\"</span>,</span><br><span class=\"line\">    <span class=\"attr\">\"background.useDefault\"</span>: <span class=\"literal\">true</span>,</span><br><span class=\"line\">    <span class=\"attr\">\"background.useFront\"</span>: <span class=\"literal\">true</span>,</span><br><span class=\"line\">    <span class=\"attr\">\"background.customImages\"</span>: [</span><br><span class=\"line\">        <span class=\"string\">\"file:///Users/singledogno.1/Pictures/pap.er/20191127.jpg\"</span></span><br><span class=\"line\">    ],</span><br><span class=\"line\">    <span class=\"attr\">\"[javascript]\"</span>: &#123;</span><br><span class=\"line\">        <span class=\"attr\">\"editor.defaultFormatter\"</span>: <span class=\"string\">\"esbenp.prettier-vscode\"</span></span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    <span class=\"attr\">\"powermode.enabled\"</span>: <span class=\"literal\">true</span>,</span><br><span class=\"line\">    <span class=\"attr\">\"better-comments.highlightPlainText\"</span>: <span class=\"literal\">true</span>,</span><br><span class=\"line\">    <span class=\"attr\">\"better-comments.multilineComments\"</span>: <span class=\"literal\">true</span>,</span><br><span class=\"line\">    <span class=\"attr\">\"better-comments.tags\"</span>: [</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"attr\">\"tag\"</span>: <span class=\"string\">\"! \"</span>,</span><br><span class=\"line\">            <span class=\"attr\">\"color\"</span>: <span class=\"string\">\"#FF2D00\"</span>,</span><br><span class=\"line\">            <span class=\"attr\">\"strikethrough\"</span>: <span class=\"literal\">false</span>,</span><br><span class=\"line\">            <span class=\"attr\">\"backgroundColor\"</span>: <span class=\"string\">\"transparent\"</span></span><br><span class=\"line\">        &#125;,</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"attr\">\"tag\"</span>: <span class=\"string\">\"FIXME \"</span>,</span><br><span class=\"line\">            <span class=\"attr\">\"color\"</span>: <span class=\"string\">\"#3498DB\"</span>,</span><br><span class=\"line\">            <span class=\"attr\">\"strikethrough\"</span>: <span class=\"literal\">false</span>,</span><br><span class=\"line\">            <span class=\"attr\">\"backgroundColor\"</span>: <span class=\"string\">\"transparent\"</span></span><br><span class=\"line\">        &#125;,</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"attr\">\"tag\"</span>: <span class=\"string\">\"fixme \"</span>,</span><br><span class=\"line\">            <span class=\"attr\">\"color\"</span>: <span class=\"string\">\"#3498DB\"</span>,</span><br><span class=\"line\">            <span class=\"attr\">\"strikethrough\"</span>: <span class=\"literal\">false</span>,</span><br><span class=\"line\">            <span class=\"attr\">\"backgroundColor\"</span>: <span class=\"string\">\"transparent\"</span></span><br><span class=\"line\">        &#125;,</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"attr\">\"tag\"</span>: <span class=\"string\">\"TODO \"</span>,</span><br><span class=\"line\">            <span class=\"attr\">\"color\"</span>: <span class=\"string\">\"#FF8C00\"</span>,</span><br><span class=\"line\">            <span class=\"attr\">\"strikethrough\"</span>: <span class=\"literal\">false</span>,</span><br><span class=\"line\">            <span class=\"attr\">\"backgroundColor\"</span>: <span class=\"string\">\"transparent\"</span></span><br><span class=\"line\">        &#125;,</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"attr\">\"tag\"</span>: <span class=\"string\">\"todo \"</span>,</span><br><span class=\"line\">            <span class=\"attr\">\"color\"</span>: <span class=\"string\">\"#FF8C00\"</span>,</span><br><span class=\"line\">            <span class=\"attr\">\"strikethrough\"</span>: <span class=\"literal\">false</span>,</span><br><span class=\"line\">            <span class=\"attr\">\"backgroundColor\"</span>: <span class=\"string\">\"transparent\"</span></span><br><span class=\"line\">        &#125;,</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"attr\">\"tag\"</span>: <span class=\"string\">\" \"</span>,</span><br><span class=\"line\">            <span class=\"attr\">\"color\"</span>: <span class=\"string\">\"#98C379\"</span>,</span><br><span class=\"line\">            <span class=\"attr\">\"strikethrough\"</span>: <span class=\"literal\">false</span>,</span><br><span class=\"line\">            <span class=\"attr\">\"backgroundColor\"</span>: <span class=\"string\">\"transparent\"</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    ],</span><br><span class=\"line\">    <span class=\"attr\">\"sync.gist\"</span>: <span class=\"string\">\"944068a1850790116dd60d21167b4af10b30b0c9\"</span>,</span><br><span class=\"line\">    <span class=\"attr\">\"files.autoSaveDelay\"</span>: <span class=\"number\">5000</span>,</span><br><span class=\"line\">    <span class=\"attr\">\"cSpell.allowedSchemas\"</span>: [</span><br><span class=\"line\">        <span class=\"string\">\"file\"</span>,</span><br><span class=\"line\">        <span class=\"string\">\"untitled\"</span>,</span><br><span class=\"line\">        <span class=\"string\">\"**/*.vue\"</span></span><br><span class=\"line\">    ],</span><br><span class=\"line\">    <span class=\"attr\">\"[html]\"</span>: &#123;</span><br><span class=\"line\">        <span class=\"attr\">\"editor.defaultFormatter\"</span>: <span class=\"string\">\"vscode.html-language-features\"</span></span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    <span class=\"attr\">\"docthis.includeDateTag\"</span>: <span class=\"literal\">true</span>,</span><br><span class=\"line\">    <span class=\"attr\">\"docthis.includeDescriptionTag\"</span>: <span class=\"literal\">true</span>,</span><br><span class=\"line\">    <span class=\"attr\">\"docthis.includeAuthorTag\"</span>: <span class=\"literal\">true</span>,</span><br><span class=\"line\">    <span class=\"attr\">\"vscode_vibrancy.opacity\"</span>: <span class=\"number\">0</span>,</span><br><span class=\"line\">    <span class=\"attr\">\"vscode_vibrancy.type\"</span>: <span class=\"string\">\"selection\"</span>,</span><br><span class=\"line\">    <span class=\"attr\">\"vscode_vibrancy.theme\"</span>: <span class=\"string\">\"Default Dark\"</span>,</span><br><span class=\"line\">    <span class=\"attr\">\"cSpell.enabledLanguageIds\"</span>: [</span><br><span class=\"line\">        <span class=\"string\">\"asciidoc\"</span>,</span><br><span class=\"line\">        <span class=\"string\">\"c\"</span>,</span><br><span class=\"line\">        <span class=\"string\">\"cpp\"</span>,</span><br><span class=\"line\">        <span class=\"string\">\"csharp\"</span>,</span><br><span class=\"line\">        <span class=\"string\">\"css\"</span>,</span><br><span class=\"line\">        <span class=\"string\">\"git-commit\"</span>,</span><br><span class=\"line\">        <span class=\"string\">\"go\"</span>,</span><br><span class=\"line\">        <span class=\"string\">\"handlebars\"</span>,</span><br><span class=\"line\">        <span class=\"string\">\"haskell\"</span>,</span><br><span class=\"line\">        <span class=\"string\">\"html\"</span>,</span><br><span class=\"line\">        <span class=\"string\">\"jade\"</span>,</span><br><span class=\"line\">        <span class=\"string\">\"java\"</span>,</span><br><span class=\"line\">        <span class=\"string\">\"javascript\"</span>,</span><br><span class=\"line\">        <span class=\"string\">\"javascriptreact\"</span>,</span><br><span class=\"line\">        <span class=\"string\">\"json\"</span>,</span><br><span class=\"line\">        <span class=\"string\">\"jsonc\"</span>,</span><br><span class=\"line\">        <span class=\"string\">\"latex\"</span>,</span><br><span class=\"line\">        <span class=\"string\">\"less\"</span>,</span><br><span class=\"line\">        <span class=\"string\">\"markdown\"</span>,</span><br><span class=\"line\">        <span class=\"string\">\"php\"</span>,</span><br><span class=\"line\">        <span class=\"string\">\"plaintext\"</span>,</span><br><span class=\"line\">        <span class=\"string\">\"pug\"</span>,</span><br><span class=\"line\">        <span class=\"string\">\"python\"</span>,</span><br><span class=\"line\">        <span class=\"string\">\"restructuredtext\"</span>,</span><br><span class=\"line\">        <span class=\"string\">\"rust\"</span>,</span><br><span class=\"line\">        <span class=\"string\">\"scala\"</span>,</span><br><span class=\"line\">        <span class=\"string\">\"scss\"</span>,</span><br><span class=\"line\">        <span class=\"string\">\"text\"</span>,</span><br><span class=\"line\">        <span class=\"string\">\"typescript\"</span>,</span><br><span class=\"line\">        <span class=\"string\">\"typescriptreact\"</span>,</span><br><span class=\"line\">        <span class=\"string\">\"vue\"</span>,</span><br><span class=\"line\">        <span class=\"string\">\"vue-html\"</span>,</span><br><span class=\"line\">        <span class=\"string\">\"yaml\"</span>,</span><br><span class=\"line\">        <span class=\"string\">\"yml\"</span></span><br><span class=\"line\">    ]</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p><strong>如果你也是 Mac 电脑，并且你复制了我的<code>setting.json</code>，当中有一个只需要注意：<code>editor.fontFamily: &quot;FiraCode-Retina&quot;</code></strong>，要保证你也安装了这个字体，他才会生效。这个字体可以给你更优雅的代码展示，尤其是在条件语句中。</p>\n<p><img src=\"/blog/img/FiraCode.jpg\" alt=\"FiraCode\"></p>\n<p>Mac 可以使用<code>homebrew</code>安装这个字体</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">brew tap homebrew/cask-fonts</span><br><span class=\"line\">brew cask install font-fira-code</span><br></pre></td></tr></table></figure>\n<h3 id=\"自定义你的\"><a href=\"#自定义你的\" class=\"headerlink\" title=\"自定义你的\"></a>自定义你的vscode</h3><p>因为<code>custom-css-and-js</code>的原因，允许自己修改编辑器的样式，事实上你可以把编辑器修改成任何样式，比如我的是毛玻璃的外观</p>\n<p><img src=\"/blog/img/alpha-bg.jpg\" alt=\"alpha-bg\"></p>\n<p>那我怎么知道样式是什么，并且怎么调整呢？其实很简单，使用<code>cmd + shift + p</code>输入 <code>toggle developer</code>, 选中切换开发者人员工具，会跳出来一个类似于 chrome 的调试面板。接下来的操作就像操作修改普通的 css 样式一样了，把这些修改过的 css 文件放到一个固定的地方，传入到<code>custom-css-and-js</code>的设置中，重启编辑器就可以生效了。</p>\n<h3 id=\"自定义文件模板\"><a href=\"#自定义文件模板\" class=\"headerlink\" title=\"自定义文件模板\"></a>自定义文件模板</h3><p>比如说我想自定义 vue 的模板，应该怎么做呢？</p>\n<p>打开<strong>首选项 – 用户代码片段 – 输入 <code>vue.json</code>,</strong>打开文件，在里面编辑你想要编辑的模板就可以了。</p>\n"},{"title":"vue-cli3.x项目图片压缩","date":"2019-05-07T09:04:27.000Z","description":"vue-cli3.x修改webpack配置，添加压缩图片功能","_content":"\n## 介绍\n\n[image-webpack-loader](https://www.npmjs.com/package/image-webpack-loader)是基于webpack的图像加载器模块，使用了[imagemin](https://github.com/kevva/imagemin)压缩PNG，JPEG，GIF，SVG和WEBP图像。\n\n## 安装image-webpack-loader\n\n```shell\nnpm i -D image-webpack-loader\n```\n\n## vue-cli3.x配置方法\n\n这个loader在图片解析的过程中生效，并且最好放在最开始执行，这样的话可以做到先压缩图片，然后再用url-loader处理小图片，可以有效地也就是说需要跟在图片的loader之后进行。也就是说在原本的`webpack.config.js`中应该是这样的：\n\n```json\n{\n\ttest: /\\.(png|jpe?g|gif|webp)(\\?.*)?$/,\n\tuse: [\n\t\t{\n\t\t\tloader: 'url-loader',\n\t\t\toptions: {\n\t\t\t\t// ...\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\tloader: 'image-webpack-loader',\n\t\t\toptions:{\n\t\t\t\tbypassOnDebug: true\n\t\t\t}\n\t\t}\n\t]\n}\n```\n\n因此对应的，通过运行 `vue inspect` 我们找到处理图片的部分，知道他的loader规则叫images，我们只需要修改这部分规则就行了。\n\n```js\n// vue.config.js\nmodule.exports = {\n\tchainWebpack: config => {\n\t\t// 通过vue inspect找到对应的规则\n\t\tconst imagesRule = config.module.rule('images')\n\t\t// 删除原本的规则\n\t\timagesRule.uses.clear()\n\t\t// 为images添加想要的规则,首先把原有的规则恢复\n\t\timagesRule\n\t\t\t.use('url-loader')\n\t\t\t.loader('url-loader')\n\t\t\t.options({\n\t\t\t\tlimit: 4096,\n  \t\t\t\tfallback: {\n    \t\t\t\tloader: 'file-loader',\n    \t\t\t\toptions: {\n      \t\t\t\t\tname: 'img/[name].[hash:8].[ext]'\n    \t\t\t\t}\n  \t\t\t\t}\n\t\t\t})\n\n\n\t\t// 再给images添加压缩图片的loader\n\t\timagesRule\n  \t\t\t.use('image-webpack-loader')\n  \t\t\t.loader('image-webpack-loader')\n  \t\t\t.options({ bypassOnDebug: true })\n\t}\n}\n```\n\n这样就可以了。但需要注意几个问题：\n\n+ 插件本身有更丰富的options，但因为~~我懒得写~~大部分情况下不需要修改，所以就没有写，更具体的配置可以去[官网](https://github.com/tcoopman/image-webpack-loader#readme)看看\n+ 图片压缩是非常耗时的，因此建议只在生产环境下使用。\n","source":"_posts/vue-cli3-x项目图片压缩.md","raw":"---\ntitle: vue-cli3.x项目图片压缩\ntags: [webpack, vue, compress]\ndate: 2019-05-07 17:04:27\ncategories: [webpack, vue, compress]\ndescription: vue-cli3.x修改webpack配置，添加压缩图片功能\n---\n\n## 介绍\n\n[image-webpack-loader](https://www.npmjs.com/package/image-webpack-loader)是基于webpack的图像加载器模块，使用了[imagemin](https://github.com/kevva/imagemin)压缩PNG，JPEG，GIF，SVG和WEBP图像。\n\n## 安装image-webpack-loader\n\n```shell\nnpm i -D image-webpack-loader\n```\n\n## vue-cli3.x配置方法\n\n这个loader在图片解析的过程中生效，并且最好放在最开始执行，这样的话可以做到先压缩图片，然后再用url-loader处理小图片，可以有效地也就是说需要跟在图片的loader之后进行。也就是说在原本的`webpack.config.js`中应该是这样的：\n\n```json\n{\n\ttest: /\\.(png|jpe?g|gif|webp)(\\?.*)?$/,\n\tuse: [\n\t\t{\n\t\t\tloader: 'url-loader',\n\t\t\toptions: {\n\t\t\t\t// ...\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\tloader: 'image-webpack-loader',\n\t\t\toptions:{\n\t\t\t\tbypassOnDebug: true\n\t\t\t}\n\t\t}\n\t]\n}\n```\n\n因此对应的，通过运行 `vue inspect` 我们找到处理图片的部分，知道他的loader规则叫images，我们只需要修改这部分规则就行了。\n\n```js\n// vue.config.js\nmodule.exports = {\n\tchainWebpack: config => {\n\t\t// 通过vue inspect找到对应的规则\n\t\tconst imagesRule = config.module.rule('images')\n\t\t// 删除原本的规则\n\t\timagesRule.uses.clear()\n\t\t// 为images添加想要的规则,首先把原有的规则恢复\n\t\timagesRule\n\t\t\t.use('url-loader')\n\t\t\t.loader('url-loader')\n\t\t\t.options({\n\t\t\t\tlimit: 4096,\n  \t\t\t\tfallback: {\n    \t\t\t\tloader: 'file-loader',\n    \t\t\t\toptions: {\n      \t\t\t\t\tname: 'img/[name].[hash:8].[ext]'\n    \t\t\t\t}\n  \t\t\t\t}\n\t\t\t})\n\n\n\t\t// 再给images添加压缩图片的loader\n\t\timagesRule\n  \t\t\t.use('image-webpack-loader')\n  \t\t\t.loader('image-webpack-loader')\n  \t\t\t.options({ bypassOnDebug: true })\n\t}\n}\n```\n\n这样就可以了。但需要注意几个问题：\n\n+ 插件本身有更丰富的options，但因为~~我懒得写~~大部分情况下不需要修改，所以就没有写，更具体的配置可以去[官网](https://github.com/tcoopman/image-webpack-loader#readme)看看\n+ 图片压缩是非常耗时的，因此建议只在生产环境下使用。\n","slug":"vue-cli3-x项目图片压缩","published":1,"updated":"2021-06-25T11:19:55.443Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckqc904ov0014wotvqr7m5cal","content":"<h2 id=\"介绍\"><a href=\"#介绍\" class=\"headerlink\" title=\"介绍\"></a>介绍</h2><p><a href=\"https://www.npmjs.com/package/image-webpack-loader\" target=\"_blank\" rel=\"noopener\">image-webpack-loader</a>是基于webpack的图像加载器模块，使用了<a href=\"https://github.com/kevva/imagemin\" target=\"_blank\" rel=\"noopener\">imagemin</a>压缩PNG，JPEG，GIF，SVG和WEBP图像。</p>\n<h2 id=\"安装image-webpack-loader\"><a href=\"#安装image-webpack-loader\" class=\"headerlink\" title=\"安装image-webpack-loader\"></a>安装image-webpack-loader</h2><div class=\"code-panel__wrapper\" autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\"><header class=\"mac-panel\"><span class=\"doc-path\"></span><span class=\"mac-panel__language\">SHELL</span></header><figure class=\"iseeu highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm i -D image-webpack-loader</span><br></pre></td></tr></table></figure></div>\n<h2 id=\"vue-cli3-x配置方法\"><a href=\"#vue-cli3-x配置方法\" class=\"headerlink\" title=\"vue-cli3.x配置方法\"></a>vue-cli3.x配置方法</h2><p>这个loader在图片解析的过程中生效，并且最好放在最开始执行，这样的话可以做到先压缩图片，然后再用url-loader处理小图片，可以有效地也就是说需要跟在图片的loader之后进行。也就是说在原本的<code>webpack.config.js</code>中应该是这样的：</p>\n<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">\ttest: /\\.(png|jpe?g|gif|webp)(\\?.*)?$/,</span><br><span class=\"line\">\tuse: [</span><br><span class=\"line\">\t\t&#123;</span><br><span class=\"line\">\t\t\tloader: 'url-loader',</span><br><span class=\"line\">\t\t\toptions: &#123;</span><br><span class=\"line\">\t\t\t\t<span class=\"comment\">// ...</span></span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t&#125;,</span><br><span class=\"line\">\t\t&#123;</span><br><span class=\"line\">\t\t\tloader: 'image-webpack-loader',</span><br><span class=\"line\">\t\t\toptions:&#123;</span><br><span class=\"line\">\t\t\t\tbypassOnDebug: true</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t]</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>因此对应的，通过运行 <code>vue inspect</code> 我们找到处理图片的部分，知道他的loader规则叫images，我们只需要修改这部分规则就行了。</p>\n<div class=\"code-panel__wrapper\" autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\"><header class=\"mac-panel\"><span class=\"doc-path\"></span><span class=\"mac-panel__language\">JS</span></header><figure class=\"iseeu highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// vue.config.js</span></span><br><span class=\"line\"><span class=\"built_in\">module</span>.exports = &#123;</span><br><span class=\"line\">\tchainWebpack: <span class=\"function\"><span class=\"params\">config</span> =&gt;</span> &#123;</span><br><span class=\"line\">\t\t<span class=\"comment\">// 通过vue inspect找到对应的规则</span></span><br><span class=\"line\">\t\t<span class=\"keyword\">const</span> imagesRule = config.module.rule(<span class=\"string\">'images'</span>)</span><br><span class=\"line\">\t\t<span class=\"comment\">// 删除原本的规则</span></span><br><span class=\"line\">\t\timagesRule.uses.clear()</span><br><span class=\"line\">\t\t<span class=\"comment\">// 为images添加想要的规则,首先把原有的规则恢复</span></span><br><span class=\"line\">\t\timagesRule</span><br><span class=\"line\">\t\t\t.use(<span class=\"string\">'url-loader'</span>)</span><br><span class=\"line\">\t\t\t.loader(<span class=\"string\">'url-loader'</span>)</span><br><span class=\"line\">\t\t\t.options(&#123;</span><br><span class=\"line\">\t\t\t\tlimit: <span class=\"number\">4096</span>,</span><br><span class=\"line\">  \t\t\t\tfallback: &#123;</span><br><span class=\"line\">    \t\t\t\tloader: <span class=\"string\">'file-loader'</span>,</span><br><span class=\"line\">    \t\t\t\toptions: &#123;</span><br><span class=\"line\">      \t\t\t\t\tname: <span class=\"string\">'img/[name].[hash:8].[ext]'</span></span><br><span class=\"line\">    \t\t\t\t&#125;</span><br><span class=\"line\">  \t\t\t\t&#125;</span><br><span class=\"line\">\t\t\t&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">\t\t<span class=\"comment\">// 再给images添加压缩图片的loader</span></span><br><span class=\"line\">\t\timagesRule</span><br><span class=\"line\">  \t\t\t.use(<span class=\"string\">'image-webpack-loader'</span>)</span><br><span class=\"line\">  \t\t\t.loader(<span class=\"string\">'image-webpack-loader'</span>)</span><br><span class=\"line\">  \t\t\t.options(&#123; <span class=\"attr\">bypassOnDebug</span>: <span class=\"literal\">true</span> &#125;)</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></div>\n<p>这样就可以了。但需要注意几个问题：</p>\n<ul>\n<li>插件本身有更丰富的options，但因为<del>我懒得写</del>大部分情况下不需要修改，所以就没有写，更具体的配置可以去<a href=\"https://github.com/tcoopman/image-webpack-loader#readme\" target=\"_blank\" rel=\"noopener\">官网</a>看看</li>\n<li>图片压缩是非常耗时的，因此建议只在生产环境下使用。</li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"介绍\"><a href=\"#介绍\" class=\"headerlink\" title=\"介绍\"></a>介绍</h2><p><a href=\"https://www.npmjs.com/package/image-webpack-loader\" target=\"_blank\" rel=\"noopener\">image-webpack-loader</a>是基于webpack的图像加载器模块，使用了<a href=\"https://github.com/kevva/imagemin\" target=\"_blank\" rel=\"noopener\">imagemin</a>压缩PNG，JPEG，GIF，SVG和WEBP图像。</p>\n<h2 id=\"安装image-webpack-loader\"><a href=\"#安装image-webpack-loader\" class=\"headerlink\" title=\"安装image-webpack-loader\"></a>安装image-webpack-loader</h2><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm i -D image-webpack-loader</span><br></pre></td></tr></table></figure>\n<h2 id=\"vue-cli3-x配置方法\"><a href=\"#vue-cli3-x配置方法\" class=\"headerlink\" title=\"vue-cli3.x配置方法\"></a>vue-cli3.x配置方法</h2><p>这个loader在图片解析的过程中生效，并且最好放在最开始执行，这样的话可以做到先压缩图片，然后再用url-loader处理小图片，可以有效地也就是说需要跟在图片的loader之后进行。也就是说在原本的<code>webpack.config.js</code>中应该是这样的：</p>\n<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">\ttest: /\\.(png|jpe?g|gif|webp)(\\?.*)?$/,</span><br><span class=\"line\">\tuse: [</span><br><span class=\"line\">\t\t&#123;</span><br><span class=\"line\">\t\t\tloader: 'url-loader',</span><br><span class=\"line\">\t\t\toptions: &#123;</span><br><span class=\"line\">\t\t\t\t<span class=\"comment\">// ...</span></span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t&#125;,</span><br><span class=\"line\">\t\t&#123;</span><br><span class=\"line\">\t\t\tloader: 'image-webpack-loader',</span><br><span class=\"line\">\t\t\toptions:&#123;</span><br><span class=\"line\">\t\t\t\tbypassOnDebug: true</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t]</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>因此对应的，通过运行 <code>vue inspect</code> 我们找到处理图片的部分，知道他的loader规则叫images，我们只需要修改这部分规则就行了。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// vue.config.js</span></span><br><span class=\"line\"><span class=\"built_in\">module</span>.exports = &#123;</span><br><span class=\"line\">\tchainWebpack: <span class=\"function\"><span class=\"params\">config</span> =&gt;</span> &#123;</span><br><span class=\"line\">\t\t<span class=\"comment\">// 通过vue inspect找到对应的规则</span></span><br><span class=\"line\">\t\t<span class=\"keyword\">const</span> imagesRule = config.module.rule(<span class=\"string\">'images'</span>)</span><br><span class=\"line\">\t\t<span class=\"comment\">// 删除原本的规则</span></span><br><span class=\"line\">\t\timagesRule.uses.clear()</span><br><span class=\"line\">\t\t<span class=\"comment\">// 为images添加想要的规则,首先把原有的规则恢复</span></span><br><span class=\"line\">\t\timagesRule</span><br><span class=\"line\">\t\t\t.use(<span class=\"string\">'url-loader'</span>)</span><br><span class=\"line\">\t\t\t.loader(<span class=\"string\">'url-loader'</span>)</span><br><span class=\"line\">\t\t\t.options(&#123;</span><br><span class=\"line\">\t\t\t\tlimit: <span class=\"number\">4096</span>,</span><br><span class=\"line\">  \t\t\t\tfallback: &#123;</span><br><span class=\"line\">    \t\t\t\tloader: <span class=\"string\">'file-loader'</span>,</span><br><span class=\"line\">    \t\t\t\toptions: &#123;</span><br><span class=\"line\">      \t\t\t\t\tname: <span class=\"string\">'img/[name].[hash:8].[ext]'</span></span><br><span class=\"line\">    \t\t\t\t&#125;</span><br><span class=\"line\">  \t\t\t\t&#125;</span><br><span class=\"line\">\t\t\t&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">\t\t<span class=\"comment\">// 再给images添加压缩图片的loader</span></span><br><span class=\"line\">\t\timagesRule</span><br><span class=\"line\">  \t\t\t.use(<span class=\"string\">'image-webpack-loader'</span>)</span><br><span class=\"line\">  \t\t\t.loader(<span class=\"string\">'image-webpack-loader'</span>)</span><br><span class=\"line\">  \t\t\t.options(&#123; <span class=\"attr\">bypassOnDebug</span>: <span class=\"literal\">true</span> &#125;)</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>这样就可以了。但需要注意几个问题：</p>\n<ul>\n<li>插件本身有更丰富的options，但因为<del>我懒得写</del>大部分情况下不需要修改，所以就没有写，更具体的配置可以去<a href=\"https://github.com/tcoopman/image-webpack-loader#readme\" target=\"_blank\" rel=\"noopener\">官网</a>看看</li>\n<li>图片压缩是非常耗时的，因此建议只在生产环境下使用。</li>\n</ul>\n"},{"title":"vuex4 + typescript 配置","date":"2021-01-26T03:11:50.000Z","description":"vue3 + vuex4 + typescript 配置","_content":"说起来惭愧,vue3快正式发布了,我才开始研究语法,好在除了书写习惯需要改变之外,vue 本身的变动并不是很大,但是配合 typescript 之后就不一样了,这篇说一下我的vue3 配置 -- vuex 篇\n\n> 参照 [vuex 官方文档](https://next.vuex.vuejs.org/guide/typescript-support.html)\n\n## 创建文件结构\n\n基本结构并没有太大变化,仍然是`store`文件夹,但有两点需要注意:\n\n+ 原本的 js 文件,现在全变成 ts 文件\n+ 因为是 ts 文件,对应的 module 下都创建`interface.ts`,标识该模块的类型\n\n结构大致如下:\n\n```javascript\n── store\n   ├── index.ts // 顶层state\n   ├── interface.ts // 顶层 state 类型\n   └── modules\n       └── test\n           ├── index.ts // test模块 state\n           └── interface.ts // test模块 state 类型\n       └── user\n           ├── index.ts //uer 模块\n           └── interface.ts // user模块 state 类型\n```\n\n## 配置顶层 state\n\n+ 定义顶层 state 的数据类型, 假设有全局 state,需要定义\n\n```typescript\n// store/interface.ts\nexport default interface RootState {\n  test: string\n}\n```\n\n+ 在`store/index.ts`中,调用 state 定义,晗需要生成一个唯一的 key,保证 store 实例注册时唯一\n\n```typescript\n// store/index.ts\nimport { InjectionKey } from 'vue'\nimport { createStore, Store } from 'vuex'\nimport RootState from './interface'\n\nexport default createStore<RootState>({\n  state: {\n    test: ''\n  },\n  getters: {},\n  mutations: {},\n  actions: {},\n  modules: {}\n})\nexport const key: InjectionKey<Store<RootState>> = Symbol('vue-store')\n```\n\n+ 生成的 key 在`main.ts`注册时作为第二个参数引入\n\n```typescript\nimport { createApp } from 'vue'\nimport App from './App.vue'\nconst app = createApp(App)\nimport router from './router'\nimport store, { key } from './store'\n\napp\n  .use(store, key)\n  .use(router)\n  .mount('#app')\n```\n\n+ 将 key 添加在`store/index.ts`中统一导出,使用的时候就可以直接调用\n\n```typescript\n// 修改 index.ts 为以下\nimport { createStore, Store, useStore as baseUseStore } from 'vuex'\n\nexport default createStore<RootState>({\n  state: {\n    test: ''\n  },\n  getters: {},\n  mutations: {},\n  actions: {},\n  modules: {}\n})\nexport const key: InjectionKey<Store<RootState>> = Symbol('vue-store')\n\nexport function useStore() {\n  return baseUseStore(key)\n}\n```\n\n这样, vue组件中可以通过`Composition API`调用\n\n```javascript\nimport { defineComponent } from 'vue'\nimport { useStore } from '@/store'\n\nexport default defineComponent({\n  setup() {\n    const store = useStore()\n    return {}\n  }\n})\n```\n\n到这里,定义在顶层的各种数据和方法,都可以不需要定义类型直接使用了,**但是定义在子模块(modules)的部分还不行,需要继续配置**\n\n## 定义子模块(modules)\n\n+ 还是定义 state,以 user 模块举例,类型定义在`store/modules/user/interface/ts`,有两个字段:name, age\n\n```typescript\n  // store/modules/user/interface.ts\n  export default interface UserState {\n    name: string\n    age: number\n  }\n```\n\n+ 引入对应模块的数据类型,按照官网教程提示,子模块使用泛型定义类型,第一个泛型参数是当前子模块类型,第二个参数是顶层模块类型,定义之后会在所有使用 state 的地方自动断言,不需要重复定义\n\n```typescript\n// store/modules/user/index.ts\nimport { Module } from 'vuex'\nimport RootState from '@/store/interface'\nimport UserState from './interface'\n\nconst userModule: Module<UserState, RootState> = {\n  namespaced: true,\n  state: {\n    name: 'xxx',\n    age: 10\n  },\n  mutations: {\n    AGE_ADD: state => {\n      state.age++\n    }\n  }\n}\n\nexport default userModule\n```\n\n+ 然后在`store/interface.ts`中增加一个全量的 state 类型,之后的 state 类型使用全量的类型即可,后续如果继续新增模块,也要更新到全量类型中来\n\n```typescript\n// store/interface.ts\n\nimport userState from './modules/user/interface'\n\nexport default interface RootState {\n  test: string\n}\n\n// 最后集合成所有模块的 state 类型\nexport interface AllState extends RootState {\n  user: userState\n}\n\n```\n\n+ 最后把全局的 state 注入到全局的 vuex 中,原理等同于定义子模块的类型,使用泛型定义全局 state\n\n```javascript\n// store/index.ts\n\nimport { InjectionKey } from 'vue'\nimport { createStore, Store, useStore as baseUseStore } from 'vuex'\nimport RootState from './interface'\nimport user from './modules/user'\nimport { AllState } from './interface'\n\nexport default createStore<RootState>({\n  state: {\n    test: ''\n  },\n  getters: {},\n  mutations: {},\n  actions: {},\n  modules: {\n    user\n  }\n})\nexport const key: InjectionKey<Store<RootState>> = Symbol('vue-store')\n\n// 泛型定义所有子模块的 state\nexport function useStore<T = AllState>() {\n  return baseUseStore<T>(key)\n}\n```\n\n然后,在vue 模块中就可以像以前一样轻松地的使用了\n\n```vue\n<template>\n  <div class=\"hello\">\n    <button @click=\"addAge\">+</button>\n    {{ age }}\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent, computed } from 'vue'\nimport { useStore } from '@/store'\n\nexport default defineComponent({\n  name: 'HelloWorld',\n  setup() {\n    const store = useStore()\n    const age = computed(() => store.state.user.age)\n    const addAge = () => {\n      store.commit('user/AGE_ADD')\n    }\n    return {\n      age,\n      addAge\n    }\n  }\n})\n</script>\n```\n\n## 总结\n\n+ state类型定义单独放在一个文件中方便管理\n+ 各个子模块的类型定义单独放在子模块的文件夹中处理, 最后再集成在根节点上\n+ 使用 vuex 命名空间, 规范模块\n","source":"_posts/vuex4.md","raw":"---\ntitle: vuex4 + typescript 配置\ntags: [vue, vue3]\ndate: 2021-01-26 11:11:50\ncategories: [vue, vue3]\ndescription: vue3 + vuex4 + typescript 配置\n---\n说起来惭愧,vue3快正式发布了,我才开始研究语法,好在除了书写习惯需要改变之外,vue 本身的变动并不是很大,但是配合 typescript 之后就不一样了,这篇说一下我的vue3 配置 -- vuex 篇\n\n> 参照 [vuex 官方文档](https://next.vuex.vuejs.org/guide/typescript-support.html)\n\n## 创建文件结构\n\n基本结构并没有太大变化,仍然是`store`文件夹,但有两点需要注意:\n\n+ 原本的 js 文件,现在全变成 ts 文件\n+ 因为是 ts 文件,对应的 module 下都创建`interface.ts`,标识该模块的类型\n\n结构大致如下:\n\n```javascript\n── store\n   ├── index.ts // 顶层state\n   ├── interface.ts // 顶层 state 类型\n   └── modules\n       └── test\n           ├── index.ts // test模块 state\n           └── interface.ts // test模块 state 类型\n       └── user\n           ├── index.ts //uer 模块\n           └── interface.ts // user模块 state 类型\n```\n\n## 配置顶层 state\n\n+ 定义顶层 state 的数据类型, 假设有全局 state,需要定义\n\n```typescript\n// store/interface.ts\nexport default interface RootState {\n  test: string\n}\n```\n\n+ 在`store/index.ts`中,调用 state 定义,晗需要生成一个唯一的 key,保证 store 实例注册时唯一\n\n```typescript\n// store/index.ts\nimport { InjectionKey } from 'vue'\nimport { createStore, Store } from 'vuex'\nimport RootState from './interface'\n\nexport default createStore<RootState>({\n  state: {\n    test: ''\n  },\n  getters: {},\n  mutations: {},\n  actions: {},\n  modules: {}\n})\nexport const key: InjectionKey<Store<RootState>> = Symbol('vue-store')\n```\n\n+ 生成的 key 在`main.ts`注册时作为第二个参数引入\n\n```typescript\nimport { createApp } from 'vue'\nimport App from './App.vue'\nconst app = createApp(App)\nimport router from './router'\nimport store, { key } from './store'\n\napp\n  .use(store, key)\n  .use(router)\n  .mount('#app')\n```\n\n+ 将 key 添加在`store/index.ts`中统一导出,使用的时候就可以直接调用\n\n```typescript\n// 修改 index.ts 为以下\nimport { createStore, Store, useStore as baseUseStore } from 'vuex'\n\nexport default createStore<RootState>({\n  state: {\n    test: ''\n  },\n  getters: {},\n  mutations: {},\n  actions: {},\n  modules: {}\n})\nexport const key: InjectionKey<Store<RootState>> = Symbol('vue-store')\n\nexport function useStore() {\n  return baseUseStore(key)\n}\n```\n\n这样, vue组件中可以通过`Composition API`调用\n\n```javascript\nimport { defineComponent } from 'vue'\nimport { useStore } from '@/store'\n\nexport default defineComponent({\n  setup() {\n    const store = useStore()\n    return {}\n  }\n})\n```\n\n到这里,定义在顶层的各种数据和方法,都可以不需要定义类型直接使用了,**但是定义在子模块(modules)的部分还不行,需要继续配置**\n\n## 定义子模块(modules)\n\n+ 还是定义 state,以 user 模块举例,类型定义在`store/modules/user/interface/ts`,有两个字段:name, age\n\n```typescript\n  // store/modules/user/interface.ts\n  export default interface UserState {\n    name: string\n    age: number\n  }\n```\n\n+ 引入对应模块的数据类型,按照官网教程提示,子模块使用泛型定义类型,第一个泛型参数是当前子模块类型,第二个参数是顶层模块类型,定义之后会在所有使用 state 的地方自动断言,不需要重复定义\n\n```typescript\n// store/modules/user/index.ts\nimport { Module } from 'vuex'\nimport RootState from '@/store/interface'\nimport UserState from './interface'\n\nconst userModule: Module<UserState, RootState> = {\n  namespaced: true,\n  state: {\n    name: 'xxx',\n    age: 10\n  },\n  mutations: {\n    AGE_ADD: state => {\n      state.age++\n    }\n  }\n}\n\nexport default userModule\n```\n\n+ 然后在`store/interface.ts`中增加一个全量的 state 类型,之后的 state 类型使用全量的类型即可,后续如果继续新增模块,也要更新到全量类型中来\n\n```typescript\n// store/interface.ts\n\nimport userState from './modules/user/interface'\n\nexport default interface RootState {\n  test: string\n}\n\n// 最后集合成所有模块的 state 类型\nexport interface AllState extends RootState {\n  user: userState\n}\n\n```\n\n+ 最后把全局的 state 注入到全局的 vuex 中,原理等同于定义子模块的类型,使用泛型定义全局 state\n\n```javascript\n// store/index.ts\n\nimport { InjectionKey } from 'vue'\nimport { createStore, Store, useStore as baseUseStore } from 'vuex'\nimport RootState from './interface'\nimport user from './modules/user'\nimport { AllState } from './interface'\n\nexport default createStore<RootState>({\n  state: {\n    test: ''\n  },\n  getters: {},\n  mutations: {},\n  actions: {},\n  modules: {\n    user\n  }\n})\nexport const key: InjectionKey<Store<RootState>> = Symbol('vue-store')\n\n// 泛型定义所有子模块的 state\nexport function useStore<T = AllState>() {\n  return baseUseStore<T>(key)\n}\n```\n\n然后,在vue 模块中就可以像以前一样轻松地的使用了\n\n```vue\n<template>\n  <div class=\"hello\">\n    <button @click=\"addAge\">+</button>\n    {{ age }}\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent, computed } from 'vue'\nimport { useStore } from '@/store'\n\nexport default defineComponent({\n  name: 'HelloWorld',\n  setup() {\n    const store = useStore()\n    const age = computed(() => store.state.user.age)\n    const addAge = () => {\n      store.commit('user/AGE_ADD')\n    }\n    return {\n      age,\n      addAge\n    }\n  }\n})\n</script>\n```\n\n## 总结\n\n+ state类型定义单独放在一个文件中方便管理\n+ 各个子模块的类型定义单独放在子模块的文件夹中处理, 最后再集成在根节点上\n+ 使用 vuex 命名空间, 规范模块\n","slug":"vuex4","published":1,"updated":"2021-06-25T11:19:55.443Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckqc904ox0018wotvk64f8gaq","content":"<p>说起来惭愧,vue3快正式发布了,我才开始研究语法,好在除了书写习惯需要改变之外,vue 本身的变动并不是很大,但是配合 typescript 之后就不一样了,这篇说一下我的vue3 配置 – vuex 篇</p>\n<blockquote>\n<p>参照 <a href=\"https://next.vuex.vuejs.org/guide/typescript-support.html\" target=\"_blank\" rel=\"noopener\">vuex 官方文档</a></p>\n</blockquote>\n<h2 id=\"创建文件结构\"><a href=\"#创建文件结构\" class=\"headerlink\" title=\"创建文件结构\"></a>创建文件结构</h2><p>基本结构并没有太大变化,仍然是<code>store</code>文件夹,但有两点需要注意:</p>\n<ul>\n<li>原本的 js 文件,现在全变成 ts 文件</li>\n<li>因为是 ts 文件,对应的 module 下都创建<code>interface.ts</code>,标识该模块的类型</li>\n</ul>\n<p>结构大致如下:</p>\n<div class=\"code-panel__wrapper\" autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\"><header class=\"mac-panel\"><span class=\"doc-path\"></span><span class=\"mac-panel__language\">JAVASCRIPT</span></header><figure class=\"iseeu highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">── store</span><br><span class=\"line\">   ├── index.ts <span class=\"comment\">// 顶层state</span></span><br><span class=\"line\">   ├── interface.ts <span class=\"comment\">// 顶层 state 类型</span></span><br><span class=\"line\">   └── modules</span><br><span class=\"line\">       └── test</span><br><span class=\"line\">           ├── index.ts <span class=\"comment\">// test模块 state</span></span><br><span class=\"line\">           └── interface.ts <span class=\"comment\">// test模块 state 类型</span></span><br><span class=\"line\">       └── user</span><br><span class=\"line\">           ├── index.ts <span class=\"comment\">//uer 模块</span></span><br><span class=\"line\">           └── interface.ts <span class=\"comment\">// user模块 state 类型</span></span><br></pre></td></tr></table></figure></div>\n<h2 id=\"配置顶层-state\"><a href=\"#配置顶层-state\" class=\"headerlink\" title=\"配置顶层 state\"></a>配置顶层 state</h2><ul>\n<li>定义顶层 state 的数据类型, 假设有全局 state,需要定义</li>\n</ul>\n<div class=\"code-panel__wrapper\" autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\"><header class=\"mac-panel\"><span class=\"doc-path\"></span><span class=\"mac-panel__language\">TYPESCRIPT</span></header><figure class=\"iseeu highlight typescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// store/interface.ts</span></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> <span class=\"keyword\">interface</span> RootState &#123;</span><br><span class=\"line\">  test: <span class=\"built_in\">string</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></div>\n<ul>\n<li>在<code>store/index.ts</code>中,调用 state 定义,晗需要生成一个唯一的 key,保证 store 实例注册时唯一</li>\n</ul>\n<div class=\"code-panel__wrapper\" autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\"><header class=\"mac-panel\"><span class=\"doc-path\"></span><span class=\"mac-panel__language\">TYPESCRIPT</span></header><figure class=\"iseeu highlight typescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// store/index.ts</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> &#123; InjectionKey &#125; <span class=\"keyword\">from</span> <span class=\"string\">'vue'</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> &#123; createStore, Store &#125; <span class=\"keyword\">from</span> <span class=\"string\">'vuex'</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> RootState <span class=\"keyword\">from</span> <span class=\"string\">'./interface'</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> createStore&lt;RootState&gt;(&#123;</span><br><span class=\"line\">  state: &#123;</span><br><span class=\"line\">    test: <span class=\"string\">''</span></span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  getters: &#123;&#125;,</span><br><span class=\"line\">  mutations: &#123;&#125;,</span><br><span class=\"line\">  actions: &#123;&#125;,</span><br><span class=\"line\">  modules: &#123;&#125;</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">const</span> key: InjectionKey&lt;Store&lt;RootState&gt;&gt; = Symbol(<span class=\"string\">'vue-store'</span>)</span><br></pre></td></tr></table></figure></div>\n<ul>\n<li>生成的 key 在<code>main.ts</code>注册时作为第二个参数引入</li>\n</ul>\n<div class=\"code-panel__wrapper\" autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\"><header class=\"mac-panel\"><span class=\"doc-path\"></span><span class=\"mac-panel__language\">TYPESCRIPT</span></header><figure class=\"iseeu highlight typescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> &#123; createApp &#125; <span class=\"keyword\">from</span> <span class=\"string\">'vue'</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> App <span class=\"keyword\">from</span> <span class=\"string\">'./App.vue'</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> app = createApp(App)</span><br><span class=\"line\"><span class=\"keyword\">import</span> router <span class=\"keyword\">from</span> <span class=\"string\">'./router'</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> store, &#123; key &#125; <span class=\"keyword\">from</span> <span class=\"string\">'./store'</span></span><br><span class=\"line\"></span><br><span class=\"line\">app</span><br><span class=\"line\">  .use(store, key)</span><br><span class=\"line\">  .use(router)</span><br><span class=\"line\">  .mount(<span class=\"string\">'#app'</span>)</span><br></pre></td></tr></table></figure></div>\n<ul>\n<li>将 key 添加在<code>store/index.ts</code>中统一导出,使用的时候就可以直接调用</li>\n</ul>\n<div class=\"code-panel__wrapper\" autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\"><header class=\"mac-panel\"><span class=\"doc-path\"></span><span class=\"mac-panel__language\">TYPESCRIPT</span></header><figure class=\"iseeu highlight typescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 修改 index.ts 为以下</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> &#123; createStore, Store, useStore <span class=\"keyword\">as</span> baseUseStore &#125; <span class=\"keyword\">from</span> <span class=\"string\">'vuex'</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> createStore&lt;RootState&gt;(&#123;</span><br><span class=\"line\">  state: &#123;</span><br><span class=\"line\">    test: <span class=\"string\">''</span></span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  getters: &#123;&#125;,</span><br><span class=\"line\">  mutations: &#123;&#125;,</span><br><span class=\"line\">  actions: &#123;&#125;,</span><br><span class=\"line\">  modules: &#123;&#125;</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">const</span> key: InjectionKey&lt;Store&lt;RootState&gt;&gt; = Symbol(<span class=\"string\">'vue-store'</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">useStore</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> baseUseStore(key)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></div>\n<p>这样, vue组件中可以通过<code>Composition API</code>调用</p>\n<div class=\"code-panel__wrapper\" autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\"><header class=\"mac-panel\"><span class=\"doc-path\"></span><span class=\"mac-panel__language\">JAVASCRIPT</span></header><figure class=\"iseeu highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> &#123; defineComponent &#125; <span class=\"keyword\">from</span> <span class=\"string\">'vue'</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> &#123; useStore &#125; <span class=\"keyword\">from</span> <span class=\"string\">'@/store'</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> defineComponent(&#123;</span><br><span class=\"line\">  setup() &#123;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> store = useStore()</span><br><span class=\"line\">    <span class=\"keyword\">return</span> &#123;&#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure></div>\n<p>到这里,定义在顶层的各种数据和方法,都可以不需要定义类型直接使用了,<strong>但是定义在子模块(modules)的部分还不行,需要继续配置</strong></p>\n<h2 id=\"定义子模块-modules\"><a href=\"#定义子模块-modules\" class=\"headerlink\" title=\"定义子模块(modules)\"></a>定义子模块(modules)</h2><ul>\n<li>还是定义 state,以 user 模块举例,类型定义在<code>store/modules/user/interface/ts</code>,有两个字段:name, age</li>\n</ul>\n<div class=\"code-panel__wrapper\" autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\"><header class=\"mac-panel\"><span class=\"doc-path\"></span><span class=\"mac-panel__language\">TYPESCRIPT</span></header><figure class=\"iseeu highlight typescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// store/modules/user/interface.ts</span></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> <span class=\"keyword\">interface</span> UserState &#123;</span><br><span class=\"line\">  name: <span class=\"built_in\">string</span></span><br><span class=\"line\">  age: <span class=\"built_in\">number</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></div>\n<ul>\n<li>引入对应模块的数据类型,按照官网教程提示,子模块使用泛型定义类型,第一个泛型参数是当前子模块类型,第二个参数是顶层模块类型,定义之后会在所有使用 state 的地方自动断言,不需要重复定义</li>\n</ul>\n<div class=\"code-panel__wrapper\" autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\"><header class=\"mac-panel\"><span class=\"doc-path\"></span><span class=\"mac-panel__language\">TYPESCRIPT</span></header><figure class=\"iseeu highlight typescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// store/modules/user/index.ts</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> &#123; Module &#125; <span class=\"keyword\">from</span> <span class=\"string\">'vuex'</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> RootState <span class=\"keyword\">from</span> <span class=\"string\">'@/store/interface'</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> UserState <span class=\"keyword\">from</span> <span class=\"string\">'./interface'</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> userModule: Module&lt;UserState, RootState&gt; = &#123;</span><br><span class=\"line\">  namespaced: <span class=\"literal\">true</span>,</span><br><span class=\"line\">  state: &#123;</span><br><span class=\"line\">    name: <span class=\"string\">'xxx'</span>,</span><br><span class=\"line\">    age: <span class=\"number\">10</span></span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  mutations: &#123;</span><br><span class=\"line\">    AGE_ADD: <span class=\"function\"><span class=\"params\">state</span> =&gt;</span> &#123;</span><br><span class=\"line\">      state.age++</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> userModule</span><br></pre></td></tr></table></figure></div>\n<ul>\n<li>然后在<code>store/interface.ts</code>中增加一个全量的 state 类型,之后的 state 类型使用全量的类型即可,后续如果继续新增模块,也要更新到全量类型中来</li>\n</ul>\n<div class=\"code-panel__wrapper\" autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\"><header class=\"mac-panel\"><span class=\"doc-path\"></span><span class=\"mac-panel__language\">TYPESCRIPT</span></header><figure class=\"iseeu highlight typescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// store/interface.ts</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> userState <span class=\"keyword\">from</span> <span class=\"string\">'./modules/user/interface'</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> <span class=\"keyword\">interface</span> RootState &#123;</span><br><span class=\"line\">  test: <span class=\"built_in\">string</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 最后集合成所有模块的 state 类型</span></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">interface</span> AllState <span class=\"keyword\">extends</span> RootState &#123;</span><br><span class=\"line\">  user: userState</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></div>\n<ul>\n<li>最后把全局的 state 注入到全局的 vuex 中,原理等同于定义子模块的类型,使用泛型定义全局 state</li>\n</ul>\n<div class=\"code-panel__wrapper\" autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\"><header class=\"mac-panel\"><span class=\"doc-path\"></span><span class=\"mac-panel__language\">JAVASCRIPT</span></header><figure class=\"iseeu highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// store/index.ts</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> &#123; InjectionKey &#125; <span class=\"keyword\">from</span> <span class=\"string\">'vue'</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> &#123; createStore, Store, useStore <span class=\"keyword\">as</span> baseUseStore &#125; <span class=\"keyword\">from</span> <span class=\"string\">'vuex'</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> RootState <span class=\"keyword\">from</span> <span class=\"string\">'./interface'</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> user <span class=\"keyword\">from</span> <span class=\"string\">'./modules/user'</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> &#123; AllState &#125; <span class=\"keyword\">from</span> <span class=\"string\">'./interface'</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> createStore&lt;RootState&gt;(&#123;</span><br><span class=\"line\">  state: &#123;</span><br><span class=\"line\">    test: <span class=\"string\">''</span></span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  getters: &#123;&#125;,</span><br><span class=\"line\">  mutations: &#123;&#125;,</span><br><span class=\"line\">  actions: &#123;&#125;,</span><br><span class=\"line\">  modules: &#123;</span><br><span class=\"line\">    user</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">const</span> key: InjectionKey&lt;Store&lt;RootState&gt;&gt; = <span class=\"built_in\">Symbol</span>(<span class=\"string\">'vue-store'</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 泛型定义所有子模块的 state</span></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">useStore</span>&lt;<span class=\"title\">T</span> = <span class=\"title\">AllState</span>&gt;(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> baseUseStore&lt;T&gt;(key)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></div>\n<p>然后,在vue 模块中就可以像以前一样轻松地的使用了</p>\n<div class=\"code-panel__wrapper\" autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\"><header class=\"mac-panel\"><span class=\"doc-path\"></span><span class=\"mac-panel__language\">PLAIN</span></header><figure class=\"iseeu highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;template&gt;</span><br><span class=\"line\">  &lt;div class=&quot;hello&quot;&gt;</span><br><span class=\"line\">    &lt;button @click=&quot;addAge&quot;&gt;+&lt;/button&gt;</span><br><span class=\"line\">    &#123;&#123; age &#125;&#125;</span><br><span class=\"line\">  &lt;/div&gt;</span><br><span class=\"line\">&lt;/template&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;script lang=&quot;ts&quot;&gt;</span><br><span class=\"line\">import &#123; defineComponent, computed &#125; from &apos;vue&apos;</span><br><span class=\"line\">import &#123; useStore &#125; from &apos;@/store&apos;</span><br><span class=\"line\"></span><br><span class=\"line\">export default defineComponent(&#123;</span><br><span class=\"line\">  name: &apos;HelloWorld&apos;,</span><br><span class=\"line\">  setup() &#123;</span><br><span class=\"line\">    const store = useStore()</span><br><span class=\"line\">    const age = computed(() =&gt; store.state.user.age)</span><br><span class=\"line\">    const addAge = () =&gt; &#123;</span><br><span class=\"line\">      store.commit(&apos;user/AGE_ADD&apos;)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    return &#123;</span><br><span class=\"line\">      age,</span><br><span class=\"line\">      addAge</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\">&lt;/script&gt;</span><br></pre></td></tr></table></figure></div>\n<h2 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h2><ul>\n<li>state类型定义单独放在一个文件中方便管理</li>\n<li>各个子模块的类型定义单独放在子模块的文件夹中处理, 最后再集成在根节点上</li>\n<li>使用 vuex 命名空间, 规范模块</li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<p>说起来惭愧,vue3快正式发布了,我才开始研究语法,好在除了书写习惯需要改变之外,vue 本身的变动并不是很大,但是配合 typescript 之后就不一样了,这篇说一下我的vue3 配置 – vuex 篇</p>\n<blockquote>\n<p>参照 <a href=\"https://next.vuex.vuejs.org/guide/typescript-support.html\" target=\"_blank\" rel=\"noopener\">vuex 官方文档</a></p>\n</blockquote>\n<h2 id=\"创建文件结构\"><a href=\"#创建文件结构\" class=\"headerlink\" title=\"创建文件结构\"></a>创建文件结构</h2><p>基本结构并没有太大变化,仍然是<code>store</code>文件夹,但有两点需要注意:</p>\n<ul>\n<li>原本的 js 文件,现在全变成 ts 文件</li>\n<li>因为是 ts 文件,对应的 module 下都创建<code>interface.ts</code>,标识该模块的类型</li>\n</ul>\n<p>结构大致如下:</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">── store</span><br><span class=\"line\">   ├── index.ts <span class=\"comment\">// 顶层state</span></span><br><span class=\"line\">   ├── interface.ts <span class=\"comment\">// 顶层 state 类型</span></span><br><span class=\"line\">   └── modules</span><br><span class=\"line\">       └── test</span><br><span class=\"line\">           ├── index.ts <span class=\"comment\">// test模块 state</span></span><br><span class=\"line\">           └── interface.ts <span class=\"comment\">// test模块 state 类型</span></span><br><span class=\"line\">       └── user</span><br><span class=\"line\">           ├── index.ts <span class=\"comment\">//uer 模块</span></span><br><span class=\"line\">           └── interface.ts <span class=\"comment\">// user模块 state 类型</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"配置顶层-state\"><a href=\"#配置顶层-state\" class=\"headerlink\" title=\"配置顶层 state\"></a>配置顶层 state</h2><ul>\n<li>定义顶层 state 的数据类型, 假设有全局 state,需要定义</li>\n</ul>\n<figure class=\"highlight typescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// store/interface.ts</span></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> <span class=\"keyword\">interface</span> RootState &#123;</span><br><span class=\"line\">  test: <span class=\"built_in\">string</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<ul>\n<li>在<code>store/index.ts</code>中,调用 state 定义,晗需要生成一个唯一的 key,保证 store 实例注册时唯一</li>\n</ul>\n<figure class=\"highlight typescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// store/index.ts</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> &#123; InjectionKey &#125; <span class=\"keyword\">from</span> <span class=\"string\">'vue'</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> &#123; createStore, Store &#125; <span class=\"keyword\">from</span> <span class=\"string\">'vuex'</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> RootState <span class=\"keyword\">from</span> <span class=\"string\">'./interface'</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> createStore&lt;RootState&gt;(&#123;</span><br><span class=\"line\">  state: &#123;</span><br><span class=\"line\">    test: <span class=\"string\">''</span></span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  getters: &#123;&#125;,</span><br><span class=\"line\">  mutations: &#123;&#125;,</span><br><span class=\"line\">  actions: &#123;&#125;,</span><br><span class=\"line\">  modules: &#123;&#125;</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">const</span> key: InjectionKey&lt;Store&lt;RootState&gt;&gt; = Symbol(<span class=\"string\">'vue-store'</span>)</span><br></pre></td></tr></table></figure>\n<ul>\n<li>生成的 key 在<code>main.ts</code>注册时作为第二个参数引入</li>\n</ul>\n<figure class=\"highlight typescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> &#123; createApp &#125; <span class=\"keyword\">from</span> <span class=\"string\">'vue'</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> App <span class=\"keyword\">from</span> <span class=\"string\">'./App.vue'</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> app = createApp(App)</span><br><span class=\"line\"><span class=\"keyword\">import</span> router <span class=\"keyword\">from</span> <span class=\"string\">'./router'</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> store, &#123; key &#125; <span class=\"keyword\">from</span> <span class=\"string\">'./store'</span></span><br><span class=\"line\"></span><br><span class=\"line\">app</span><br><span class=\"line\">  .use(store, key)</span><br><span class=\"line\">  .use(router)</span><br><span class=\"line\">  .mount(<span class=\"string\">'#app'</span>)</span><br></pre></td></tr></table></figure>\n<ul>\n<li>将 key 添加在<code>store/index.ts</code>中统一导出,使用的时候就可以直接调用</li>\n</ul>\n<figure class=\"highlight typescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 修改 index.ts 为以下</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> &#123; createStore, Store, useStore <span class=\"keyword\">as</span> baseUseStore &#125; <span class=\"keyword\">from</span> <span class=\"string\">'vuex'</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> createStore&lt;RootState&gt;(&#123;</span><br><span class=\"line\">  state: &#123;</span><br><span class=\"line\">    test: <span class=\"string\">''</span></span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  getters: &#123;&#125;,</span><br><span class=\"line\">  mutations: &#123;&#125;,</span><br><span class=\"line\">  actions: &#123;&#125;,</span><br><span class=\"line\">  modules: &#123;&#125;</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">const</span> key: InjectionKey&lt;Store&lt;RootState&gt;&gt; = Symbol(<span class=\"string\">'vue-store'</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">useStore</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> baseUseStore(key)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>这样, vue组件中可以通过<code>Composition API</code>调用</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> &#123; defineComponent &#125; <span class=\"keyword\">from</span> <span class=\"string\">'vue'</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> &#123; useStore &#125; <span class=\"keyword\">from</span> <span class=\"string\">'@/store'</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> defineComponent(&#123;</span><br><span class=\"line\">  setup() &#123;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> store = useStore()</span><br><span class=\"line\">    <span class=\"keyword\">return</span> &#123;&#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n<p>到这里,定义在顶层的各种数据和方法,都可以不需要定义类型直接使用了,<strong>但是定义在子模块(modules)的部分还不行,需要继续配置</strong></p>\n<h2 id=\"定义子模块-modules\"><a href=\"#定义子模块-modules\" class=\"headerlink\" title=\"定义子模块(modules)\"></a>定义子模块(modules)</h2><ul>\n<li>还是定义 state,以 user 模块举例,类型定义在<code>store/modules/user/interface/ts</code>,有两个字段:name, age</li>\n</ul>\n<figure class=\"highlight typescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// store/modules/user/interface.ts</span></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> <span class=\"keyword\">interface</span> UserState &#123;</span><br><span class=\"line\">  name: <span class=\"built_in\">string</span></span><br><span class=\"line\">  age: <span class=\"built_in\">number</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<ul>\n<li>引入对应模块的数据类型,按照官网教程提示,子模块使用泛型定义类型,第一个泛型参数是当前子模块类型,第二个参数是顶层模块类型,定义之后会在所有使用 state 的地方自动断言,不需要重复定义</li>\n</ul>\n<figure class=\"highlight typescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// store/modules/user/index.ts</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> &#123; Module &#125; <span class=\"keyword\">from</span> <span class=\"string\">'vuex'</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> RootState <span class=\"keyword\">from</span> <span class=\"string\">'@/store/interface'</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> UserState <span class=\"keyword\">from</span> <span class=\"string\">'./interface'</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> userModule: Module&lt;UserState, RootState&gt; = &#123;</span><br><span class=\"line\">  namespaced: <span class=\"literal\">true</span>,</span><br><span class=\"line\">  state: &#123;</span><br><span class=\"line\">    name: <span class=\"string\">'xxx'</span>,</span><br><span class=\"line\">    age: <span class=\"number\">10</span></span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  mutations: &#123;</span><br><span class=\"line\">    AGE_ADD: <span class=\"function\"><span class=\"params\">state</span> =&gt;</span> &#123;</span><br><span class=\"line\">      state.age++</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> userModule</span><br></pre></td></tr></table></figure>\n<ul>\n<li>然后在<code>store/interface.ts</code>中增加一个全量的 state 类型,之后的 state 类型使用全量的类型即可,后续如果继续新增模块,也要更新到全量类型中来</li>\n</ul>\n<figure class=\"highlight typescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// store/interface.ts</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> userState <span class=\"keyword\">from</span> <span class=\"string\">'./modules/user/interface'</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> <span class=\"keyword\">interface</span> RootState &#123;</span><br><span class=\"line\">  test: <span class=\"built_in\">string</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 最后集合成所有模块的 state 类型</span></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">interface</span> AllState <span class=\"keyword\">extends</span> RootState &#123;</span><br><span class=\"line\">  user: userState</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<ul>\n<li>最后把全局的 state 注入到全局的 vuex 中,原理等同于定义子模块的类型,使用泛型定义全局 state</li>\n</ul>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// store/index.ts</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> &#123; InjectionKey &#125; <span class=\"keyword\">from</span> <span class=\"string\">'vue'</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> &#123; createStore, Store, useStore <span class=\"keyword\">as</span> baseUseStore &#125; <span class=\"keyword\">from</span> <span class=\"string\">'vuex'</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> RootState <span class=\"keyword\">from</span> <span class=\"string\">'./interface'</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> user <span class=\"keyword\">from</span> <span class=\"string\">'./modules/user'</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> &#123; AllState &#125; <span class=\"keyword\">from</span> <span class=\"string\">'./interface'</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> createStore&lt;RootState&gt;(&#123;</span><br><span class=\"line\">  state: &#123;</span><br><span class=\"line\">    test: <span class=\"string\">''</span></span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  getters: &#123;&#125;,</span><br><span class=\"line\">  mutations: &#123;&#125;,</span><br><span class=\"line\">  actions: &#123;&#125;,</span><br><span class=\"line\">  modules: &#123;</span><br><span class=\"line\">    user</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">const</span> key: InjectionKey&lt;Store&lt;RootState&gt;&gt; = <span class=\"built_in\">Symbol</span>(<span class=\"string\">'vue-store'</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 泛型定义所有子模块的 state</span></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">useStore</span>&lt;<span class=\"title\">T</span> = <span class=\"title\">AllState</span>&gt;(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> baseUseStore&lt;T&gt;(key)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>然后,在vue 模块中就可以像以前一样轻松地的使用了</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;template&gt;</span><br><span class=\"line\">  &lt;div class=&quot;hello&quot;&gt;</span><br><span class=\"line\">    &lt;button @click=&quot;addAge&quot;&gt;+&lt;/button&gt;</span><br><span class=\"line\">    &#123;&#123; age &#125;&#125;</span><br><span class=\"line\">  &lt;/div&gt;</span><br><span class=\"line\">&lt;/template&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;script lang=&quot;ts&quot;&gt;</span><br><span class=\"line\">import &#123; defineComponent, computed &#125; from &apos;vue&apos;</span><br><span class=\"line\">import &#123; useStore &#125; from &apos;@/store&apos;</span><br><span class=\"line\"></span><br><span class=\"line\">export default defineComponent(&#123;</span><br><span class=\"line\">  name: &apos;HelloWorld&apos;,</span><br><span class=\"line\">  setup() &#123;</span><br><span class=\"line\">    const store = useStore()</span><br><span class=\"line\">    const age = computed(() =&gt; store.state.user.age)</span><br><span class=\"line\">    const addAge = () =&gt; &#123;</span><br><span class=\"line\">      store.commit(&apos;user/AGE_ADD&apos;)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    return &#123;</span><br><span class=\"line\">      age,</span><br><span class=\"line\">      addAge</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\">&lt;/script&gt;</span><br></pre></td></tr></table></figure>\n<h2 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h2><ul>\n<li>state类型定义单独放在一个文件中方便管理</li>\n<li>各个子模块的类型定义单独放在子模块的文件夹中处理, 最后再集成在根节点上</li>\n<li>使用 vuex 命名空间, 规范模块</li>\n</ul>\n"},{"title":"从零搭建Vue UI组件库(一)","date":"2021-04-15T01:55:41.000Z","description":"尝试搭建自己的Vue UI 组件库, 持续更新(大概)","_content":"\nVue3 发布以来,一直在学习, 最近萌生出想要尝试自己搭建组件库的想法,正赶上开发任务不重,就在此尝试一下,一来提升一下能力,二来看能不能搭建成功。\n\n[附上仓库地址](https://github.com/lost-dream/zcm-admin-ui)\n\n> 我的开发是从零搭建，但主要思路和结构参考了[element-plus](https://github.com/element-plus/element-plus),感谢饿了么团队提供的思路\n\n## 初始化项目\n\n因为是从零开始搭建，就不用 vue-cli 了，创建空文件夹开始\n\n```shell\n  mkdir admin-ui\n  cd admin-ui && npm init -y\n```\n\n参照`element-plus`，项目使用[lerna](https://github.com/lerna/lerna)初始化，它优化了使用 git 和 npm 管理多包存储库的工作流，有兴趣可以研究一下\n\n> 我也是刚刚接触这个框架，有写错的地方欢迎纠错\n\n+ 创建`lerna`项目\n\n  ```shell\n    npm install lerna -g\n    cd admin-ui\n    lerna init # 使用默认的固定模式\n\n    # Add packages\n    cd packages\n    mkdir hello button admin-ui input\n\n    #分别进入目录初始化成包\n    cd hello\n    npm init -y\n    cd ../button\n    npm init -y\n    cd ../admin-ui\n    npm init -y\n    cd ../input\n    npm init -y\n  ```\n\n+ 修改项目配置\n\n  ```shell\n    # package.json 文件加入\n    \"private\": true,\n    \"workspaces\": [\n      \"packages/*\"\n    ]\n\n    # lerna.json 文件加入\n    \"useWorkspaces\": true,\n    \"npmClient\": \"yarn\" # 默认使用 yarn 作为包管理工具\n  ```\n\n这样一个lerna脚手架就创建完成了，更多的命令脚本可以自己去看文档（主要是我现在也不会）。\n\n## 安装依赖\n\n上面已经定义好了默认使用 yarn 作为包管理工具，所以首先要保证全局有 yarn，然后执行`yarn add package -W`就可以了，这里有几点需要注意：\n\n+ `yarn`没有必要作为项目依赖写入，因为我更希望你把它装在全局\n+ 因为上面定义过`workspace`的原因，直接使用`yarn add package`会报错，需要在后面加上`-W`\n+ 项目本身定义为 UI 框架，因此`vue`相关的依赖也不需要加入到`dependencies`中，事实上绝大部分依赖都应该是开发依赖。\n\n本着上面的原则，一个基本的 vue 项目应该包含以下依赖：\n`vue、webpack、webpack-cli、webpack-dev-server、@babel/core、babel-loader、css-loader、html-webpack-plugin、vue-loader、vue-template-compile`\n\n> 因为 webpack5 更新之后没有仔细研究过，加上 element-ui 也使用 webpack4，因此本项目使用的是 webpack4、webpack-cli3\n\n## 创建项目模板\n\n安装好依赖，需要添加 vue 模板，参照 element-plus,在更目录新建`website`文件夹，加入`index.html、index.js、index.vue`\n\n+ index.html\n\n  ```html\n  <!DOCTYPE html>\n  <html lang=\"en\">\n  <head>\n    <meta charset=\"UTF-8\">\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>dt-ui</title>\n  </head>\n  <body>\n    <div id=\"app\"></div>\n  </body>\n  </html>\n  ```\n\n+ index.js\n\n  ```javascript\n  // index.js\n  import {createApp} from 'vue'\n  import App from './index.vue'\n\n  createApp(App).mount('#app')\n  ```\n\n+ index.vue\n\n  ```javascript\n  <template>\n    <div class=\"app\">\n      hello,admin ui\n    </div>\n  </template>\n\n  <script>\n  import { defineComponent } from 'vue'\n\n  export default defineComponent({\n    name: 'app'\n  })\n  </script>\n  ```\n\n## 启动本地服务\n\n根目录新建`build`文件夹，新增`webpack.config.base.js`\n\n```javascript\n  'use strict'\n  const HtmlWebpackPlugin = require('html-webpack-plugin')\n  const { VueLoaderPlugin } = require('vue-loader')\n  const path = require('path')\n\n  module.exports = {\n    entry: path.resolve(__dirname, '../website/index.js'),\n    output: {\n      path: path.resolve(__dirname, '../dist'),\n      filename: 'index.js'\n    },\n    module: {\n      rules: [\n        {\n          test: /\\.js$/,\n          loader: 'babel-loader',\n          exclude: /node_modules/\n        },\n        {\n          test: /\\.vue$/,\n          loader: 'vue-loader'\n        }\n      ]\n    },\n    plugins: [\n      new HtmlWebpackPlugin({\n        template: './website/index.html',\n        filename: './index.html'\n      }),\n      new VueLoaderPlugin()\n    ]\n  }\n```\n\n`package.json`添加命令 `\"dev\": \"webpack-dev-server --config build/webpack.config.base.js\"`,运行`yarn dev`就可以在 8080 端口运行服务了\n\n> 如果这时没有运行成功，多半是报错，缺少其他的开发依赖。上面列举的是我知道的必须的 vue 项目依赖，并不完整。可以根据报错，缺什么，安装什么，最后一定没有问题。\n\n最后，补上当前的项目目录\n\n```shell\n├── build\n│   └── webpack.config.base.js\n├── lerna.json\n├── package.json\n├── packages\n│   ├── admin-ui\n│   │   └── package.json\n│   ├── button\n│   │   └── package.json\n│   ├── hello\n│   │   └── package.json\n│   └── input\n│       └── package.json\n├── website\n│   ├── index.html\n│   ├── index.js\n│   └── index.vue\n├── yarn-error.log\n└── yarn.lock\n```\n","source":"_posts/从零搭建Vue UI组件库(一).md","raw":"---\ntitle: 从零搭建Vue UI组件库(一)\ndate: 2021-04-15 09:55:41\ntags: [Vue, adminUI]\ncategories: [adminUI]\ndescription: 尝试搭建自己的Vue UI 组件库, 持续更新(大概)\n---\n\nVue3 发布以来,一直在学习, 最近萌生出想要尝试自己搭建组件库的想法,正赶上开发任务不重,就在此尝试一下,一来提升一下能力,二来看能不能搭建成功。\n\n[附上仓库地址](https://github.com/lost-dream/zcm-admin-ui)\n\n> 我的开发是从零搭建，但主要思路和结构参考了[element-plus](https://github.com/element-plus/element-plus),感谢饿了么团队提供的思路\n\n## 初始化项目\n\n因为是从零开始搭建，就不用 vue-cli 了，创建空文件夹开始\n\n```shell\n  mkdir admin-ui\n  cd admin-ui && npm init -y\n```\n\n参照`element-plus`，项目使用[lerna](https://github.com/lerna/lerna)初始化，它优化了使用 git 和 npm 管理多包存储库的工作流，有兴趣可以研究一下\n\n> 我也是刚刚接触这个框架，有写错的地方欢迎纠错\n\n+ 创建`lerna`项目\n\n  ```shell\n    npm install lerna -g\n    cd admin-ui\n    lerna init # 使用默认的固定模式\n\n    # Add packages\n    cd packages\n    mkdir hello button admin-ui input\n\n    #分别进入目录初始化成包\n    cd hello\n    npm init -y\n    cd ../button\n    npm init -y\n    cd ../admin-ui\n    npm init -y\n    cd ../input\n    npm init -y\n  ```\n\n+ 修改项目配置\n\n  ```shell\n    # package.json 文件加入\n    \"private\": true,\n    \"workspaces\": [\n      \"packages/*\"\n    ]\n\n    # lerna.json 文件加入\n    \"useWorkspaces\": true,\n    \"npmClient\": \"yarn\" # 默认使用 yarn 作为包管理工具\n  ```\n\n这样一个lerna脚手架就创建完成了，更多的命令脚本可以自己去看文档（主要是我现在也不会）。\n\n## 安装依赖\n\n上面已经定义好了默认使用 yarn 作为包管理工具，所以首先要保证全局有 yarn，然后执行`yarn add package -W`就可以了，这里有几点需要注意：\n\n+ `yarn`没有必要作为项目依赖写入，因为我更希望你把它装在全局\n+ 因为上面定义过`workspace`的原因，直接使用`yarn add package`会报错，需要在后面加上`-W`\n+ 项目本身定义为 UI 框架，因此`vue`相关的依赖也不需要加入到`dependencies`中，事实上绝大部分依赖都应该是开发依赖。\n\n本着上面的原则，一个基本的 vue 项目应该包含以下依赖：\n`vue、webpack、webpack-cli、webpack-dev-server、@babel/core、babel-loader、css-loader、html-webpack-plugin、vue-loader、vue-template-compile`\n\n> 因为 webpack5 更新之后没有仔细研究过，加上 element-ui 也使用 webpack4，因此本项目使用的是 webpack4、webpack-cli3\n\n## 创建项目模板\n\n安装好依赖，需要添加 vue 模板，参照 element-plus,在更目录新建`website`文件夹，加入`index.html、index.js、index.vue`\n\n+ index.html\n\n  ```html\n  <!DOCTYPE html>\n  <html lang=\"en\">\n  <head>\n    <meta charset=\"UTF-8\">\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>dt-ui</title>\n  </head>\n  <body>\n    <div id=\"app\"></div>\n  </body>\n  </html>\n  ```\n\n+ index.js\n\n  ```javascript\n  // index.js\n  import {createApp} from 'vue'\n  import App from './index.vue'\n\n  createApp(App).mount('#app')\n  ```\n\n+ index.vue\n\n  ```javascript\n  <template>\n    <div class=\"app\">\n      hello,admin ui\n    </div>\n  </template>\n\n  <script>\n  import { defineComponent } from 'vue'\n\n  export default defineComponent({\n    name: 'app'\n  })\n  </script>\n  ```\n\n## 启动本地服务\n\n根目录新建`build`文件夹，新增`webpack.config.base.js`\n\n```javascript\n  'use strict'\n  const HtmlWebpackPlugin = require('html-webpack-plugin')\n  const { VueLoaderPlugin } = require('vue-loader')\n  const path = require('path')\n\n  module.exports = {\n    entry: path.resolve(__dirname, '../website/index.js'),\n    output: {\n      path: path.resolve(__dirname, '../dist'),\n      filename: 'index.js'\n    },\n    module: {\n      rules: [\n        {\n          test: /\\.js$/,\n          loader: 'babel-loader',\n          exclude: /node_modules/\n        },\n        {\n          test: /\\.vue$/,\n          loader: 'vue-loader'\n        }\n      ]\n    },\n    plugins: [\n      new HtmlWebpackPlugin({\n        template: './website/index.html',\n        filename: './index.html'\n      }),\n      new VueLoaderPlugin()\n    ]\n  }\n```\n\n`package.json`添加命令 `\"dev\": \"webpack-dev-server --config build/webpack.config.base.js\"`,运行`yarn dev`就可以在 8080 端口运行服务了\n\n> 如果这时没有运行成功，多半是报错，缺少其他的开发依赖。上面列举的是我知道的必须的 vue 项目依赖，并不完整。可以根据报错，缺什么，安装什么，最后一定没有问题。\n\n最后，补上当前的项目目录\n\n```shell\n├── build\n│   └── webpack.config.base.js\n├── lerna.json\n├── package.json\n├── packages\n│   ├── admin-ui\n│   │   └── package.json\n│   ├── button\n│   │   └── package.json\n│   ├── hello\n│   │   └── package.json\n│   └── input\n│       └── package.json\n├── website\n│   ├── index.html\n│   ├── index.js\n│   └── index.vue\n├── yarn-error.log\n└── yarn.lock\n```\n","slug":"从零搭建Vue UI组件库(一)","published":1,"updated":"2021-06-25T11:19:55.444Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckqc904oz001awotvec1w5zlt","content":"<p>Vue3 发布以来,一直在学习, 最近萌生出想要尝试自己搭建组件库的想法,正赶上开发任务不重,就在此尝试一下,一来提升一下能力,二来看能不能搭建成功。</p>\n<p><a href=\"https://github.com/lost-dream/zcm-admin-ui\" target=\"_blank\" rel=\"noopener\">附上仓库地址</a></p>\n<blockquote>\n<p>我的开发是从零搭建，但主要思路和结构参考了<a href=\"https://github.com/element-plus/element-plus\" target=\"_blank\" rel=\"noopener\">element-plus</a>,感谢饿了么团队提供的思路</p>\n</blockquote>\n<h2 id=\"初始化项目\"><a href=\"#初始化项目\" class=\"headerlink\" title=\"初始化项目\"></a>初始化项目</h2><p>因为是从零开始搭建，就不用 vue-cli 了，创建空文件夹开始</p>\n<div class=\"code-panel__wrapper\" autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\"><header class=\"mac-panel\"><span class=\"doc-path\"></span><span class=\"mac-panel__language\">SHELL</span></header><figure class=\"iseeu highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mkdir admin-ui</span><br><span class=\"line\">cd admin-ui &amp;&amp; npm init -y</span><br></pre></td></tr></table></figure></div>\n<p>参照<code>element-plus</code>，项目使用<a href=\"https://github.com/lerna/lerna\" target=\"_blank\" rel=\"noopener\">lerna</a>初始化，它优化了使用 git 和 npm 管理多包存储库的工作流，有兴趣可以研究一下</p>\n<blockquote>\n<p>我也是刚刚接触这个框架，有写错的地方欢迎纠错</p>\n</blockquote>\n<ul>\n<li><p>创建<code>lerna</code>项目</p>\n<div class=\"code-panel__wrapper\" autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\"><header class=\"mac-panel\"><span class=\"doc-path\"></span><span class=\"mac-panel__language\">SHELL</span></header><figure class=\"iseeu highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install lerna -g</span><br><span class=\"line\">cd admin-ui</span><br><span class=\"line\">lerna init # 使用默认的固定模式</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#</span> Add packages</span><br><span class=\"line\">cd packages</span><br><span class=\"line\">mkdir hello button admin-ui input</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#</span>分别进入目录初始化成包</span><br><span class=\"line\">cd hello</span><br><span class=\"line\">npm init -y</span><br><span class=\"line\">cd ../button</span><br><span class=\"line\">npm init -y</span><br><span class=\"line\">cd ../admin-ui</span><br><span class=\"line\">npm init -y</span><br><span class=\"line\">cd ../input</span><br><span class=\"line\">npm init -y</span><br></pre></td></tr></table></figure></div>\n</li>\n<li><p>修改项目配置</p>\n<div class=\"code-panel__wrapper\" autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\"><header class=\"mac-panel\"><span class=\"doc-path\"></span><span class=\"mac-panel__language\">SHELL</span></header><figure class=\"iseeu highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span> package.json 文件加入</span><br><span class=\"line\">\"private\": true,</span><br><span class=\"line\">\"workspaces\": [</span><br><span class=\"line\">  \"packages/*\"</span><br><span class=\"line\">]</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#</span> lerna.json 文件加入</span><br><span class=\"line\">\"useWorkspaces\": true,</span><br><span class=\"line\">\"npmClient\": \"yarn\" # 默认使用 yarn 作为包管理工具</span><br></pre></td></tr></table></figure></div>\n</li>\n</ul>\n<p>这样一个lerna脚手架就创建完成了，更多的命令脚本可以自己去看文档（主要是我现在也不会）。</p>\n<h2 id=\"安装依赖\"><a href=\"#安装依赖\" class=\"headerlink\" title=\"安装依赖\"></a>安装依赖</h2><p>上面已经定义好了默认使用 yarn 作为包管理工具，所以首先要保证全局有 yarn，然后执行<code>yarn add package -W</code>就可以了，这里有几点需要注意：</p>\n<ul>\n<li><code>yarn</code>没有必要作为项目依赖写入，因为我更希望你把它装在全局</li>\n<li>因为上面定义过<code>workspace</code>的原因，直接使用<code>yarn add package</code>会报错，需要在后面加上<code>-W</code></li>\n<li>项目本身定义为 UI 框架，因此<code>vue</code>相关的依赖也不需要加入到<code>dependencies</code>中，事实上绝大部分依赖都应该是开发依赖。</li>\n</ul>\n<p>本着上面的原则，一个基本的 vue 项目应该包含以下依赖：<br><code>vue、webpack、webpack-cli、webpack-dev-server、@babel/core、babel-loader、css-loader、html-webpack-plugin、vue-loader、vue-template-compile</code></p>\n<blockquote>\n<p>因为 webpack5 更新之后没有仔细研究过，加上 element-ui 也使用 webpack4，因此本项目使用的是 webpack4、webpack-cli3</p>\n</blockquote>\n<h2 id=\"创建项目模板\"><a href=\"#创建项目模板\" class=\"headerlink\" title=\"创建项目模板\"></a>创建项目模板</h2><p>安装好依赖，需要添加 vue 模板，参照 element-plus,在更目录新建<code>website</code>文件夹，加入<code>index.html、index.js、index.vue</code></p>\n<ul>\n<li><p>index.html</p>\n<div class=\"code-panel__wrapper\" autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\"><header class=\"mac-panel\"><span class=\"doc-path\"></span><span class=\"mac-panel__language\">HTML</span></header><figure class=\"iseeu highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"meta-keyword\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span> <span class=\"attr\">lang</span>=<span class=\"string\">\"en\"</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">\"UTF-8\"</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">http-equiv</span>=<span class=\"string\">\"X-UA-Compatible\"</span> <span class=\"attr\">content</span>=<span class=\"string\">\"IE=edge\"</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">name</span>=<span class=\"string\">\"viewport\"</span> <span class=\"attr\">content</span>=<span class=\"string\">\"width=device-width, initial-scale=1.0\"</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>dt-ui<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">\"app\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure></div>\n</li>\n<li><p>index.js</p>\n<div class=\"code-panel__wrapper\" autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\"><header class=\"mac-panel\"><span class=\"doc-path\"></span><span class=\"mac-panel__language\">JAVASCRIPT</span></header><figure class=\"iseeu highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// index.js</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> &#123;createApp&#125; <span class=\"keyword\">from</span> <span class=\"string\">'vue'</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> App <span class=\"keyword\">from</span> <span class=\"string\">'./index.vue'</span></span><br><span class=\"line\"></span><br><span class=\"line\">createApp(App).mount(<span class=\"string\">'#app'</span>)</span><br></pre></td></tr></table></figure></div>\n</li>\n<li><p>index.vue</p>\n<div class=\"code-panel__wrapper\" autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\"><header class=\"mac-panel\"><span class=\"doc-path\"></span><span class=\"mac-panel__language\">JAVASCRIPT</span></header><figure class=\"iseeu highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;template&gt;</span><br><span class=\"line\">  &lt;div <span class=\"class\"><span class=\"keyword\">class</span></span>=<span class=\"string\">\"app\"</span>&gt;</span><br><span class=\"line\">    hello,admin ui</span><br><span class=\"line\">  &lt;<span class=\"regexp\">/div&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">&lt;/</span>template&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;script&gt;</span><br><span class=\"line\"><span class=\"keyword\">import</span> &#123; defineComponent &#125; <span class=\"keyword\">from</span> <span class=\"string\">'vue'</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> defineComponent(&#123;</span><br><span class=\"line\">  name: <span class=\"string\">'app'</span></span><br><span class=\"line\">&#125;)</span><br><span class=\"line\">&lt;<span class=\"regexp\">/script&gt;</span></span><br></pre></td></tr></table></figure></div>\n</li>\n</ul>\n<h2 id=\"启动本地服务\"><a href=\"#启动本地服务\" class=\"headerlink\" title=\"启动本地服务\"></a>启动本地服务</h2><p>根目录新建<code>build</code>文件夹，新增<code>webpack.config.base.js</code></p>\n<div class=\"code-panel__wrapper\" autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\"><header class=\"mac-panel\"><span class=\"doc-path\"></span><span class=\"mac-panel__language\">JAVASCRIPT</span></header><figure class=\"iseeu highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">'use strict'</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> HtmlWebpackPlugin = <span class=\"built_in\">require</span>(<span class=\"string\">'html-webpack-plugin'</span>)</span><br><span class=\"line\"><span class=\"keyword\">const</span> &#123; VueLoaderPlugin &#125; = <span class=\"built_in\">require</span>(<span class=\"string\">'vue-loader'</span>)</span><br><span class=\"line\"><span class=\"keyword\">const</span> path = <span class=\"built_in\">require</span>(<span class=\"string\">'path'</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">module</span>.exports = &#123;</span><br><span class=\"line\">  entry: path.resolve(__dirname, <span class=\"string\">'../website/index.js'</span>),</span><br><span class=\"line\">  output: &#123;</span><br><span class=\"line\">    path: path.resolve(__dirname, <span class=\"string\">'../dist'</span>),</span><br><span class=\"line\">    filename: <span class=\"string\">'index.js'</span></span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  <span class=\"built_in\">module</span>: &#123;</span><br><span class=\"line\">    rules: [</span><br><span class=\"line\">      &#123;</span><br><span class=\"line\">        test: <span class=\"regexp\">/\\.js$/</span>,</span><br><span class=\"line\">        loader: <span class=\"string\">'babel-loader'</span>,</span><br><span class=\"line\">        exclude: <span class=\"regexp\">/node_modules/</span></span><br><span class=\"line\">      &#125;,</span><br><span class=\"line\">      &#123;</span><br><span class=\"line\">        test: <span class=\"regexp\">/\\.vue$/</span>,</span><br><span class=\"line\">        loader: <span class=\"string\">'vue-loader'</span></span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    ]</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  plugins: [</span><br><span class=\"line\">    <span class=\"keyword\">new</span> HtmlWebpackPlugin(&#123;</span><br><span class=\"line\">      template: <span class=\"string\">'./website/index.html'</span>,</span><br><span class=\"line\">      filename: <span class=\"string\">'./index.html'</span></span><br><span class=\"line\">    &#125;),</span><br><span class=\"line\">    <span class=\"keyword\">new</span> VueLoaderPlugin()</span><br><span class=\"line\">  ]</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></div>\n<p><code>package.json</code>添加命令 <code>&quot;dev&quot;: &quot;webpack-dev-server --config build/webpack.config.base.js&quot;</code>,运行<code>yarn dev</code>就可以在 8080 端口运行服务了</p>\n<blockquote>\n<p>如果这时没有运行成功，多半是报错，缺少其他的开发依赖。上面列举的是我知道的必须的 vue 项目依赖，并不完整。可以根据报错，缺什么，安装什么，最后一定没有问题。</p>\n</blockquote>\n<p>最后，补上当前的项目目录</p>\n<div class=\"code-panel__wrapper\" autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\"><header class=\"mac-panel\"><span class=\"doc-path\"></span><span class=\"mac-panel__language\">SHELL</span></header><figure class=\"iseeu highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">├── build</span><br><span class=\"line\">│   └── webpack.config.base.js</span><br><span class=\"line\">├── lerna.json</span><br><span class=\"line\">├── package.json</span><br><span class=\"line\">├── packages</span><br><span class=\"line\">│   ├── admin-ui</span><br><span class=\"line\">│   │   └── package.json</span><br><span class=\"line\">│   ├── button</span><br><span class=\"line\">│   │   └── package.json</span><br><span class=\"line\">│   ├── hello</span><br><span class=\"line\">│   │   └── package.json</span><br><span class=\"line\">│   └── input</span><br><span class=\"line\">│       └── package.json</span><br><span class=\"line\">├── website</span><br><span class=\"line\">│   ├── index.html</span><br><span class=\"line\">│   ├── index.js</span><br><span class=\"line\">│   └── index.vue</span><br><span class=\"line\">├── yarn-error.log</span><br><span class=\"line\">└── yarn.lock</span><br></pre></td></tr></table></figure></div>\n","site":{"data":{}},"excerpt":"","more":"<p>Vue3 发布以来,一直在学习, 最近萌生出想要尝试自己搭建组件库的想法,正赶上开发任务不重,就在此尝试一下,一来提升一下能力,二来看能不能搭建成功。</p>\n<p><a href=\"https://github.com/lost-dream/zcm-admin-ui\" target=\"_blank\" rel=\"noopener\">附上仓库地址</a></p>\n<blockquote>\n<p>我的开发是从零搭建，但主要思路和结构参考了<a href=\"https://github.com/element-plus/element-plus\" target=\"_blank\" rel=\"noopener\">element-plus</a>,感谢饿了么团队提供的思路</p>\n</blockquote>\n<h2 id=\"初始化项目\"><a href=\"#初始化项目\" class=\"headerlink\" title=\"初始化项目\"></a>初始化项目</h2><p>因为是从零开始搭建，就不用 vue-cli 了，创建空文件夹开始</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mkdir admin-ui</span><br><span class=\"line\">cd admin-ui &amp;&amp; npm init -y</span><br></pre></td></tr></table></figure>\n<p>参照<code>element-plus</code>，项目使用<a href=\"https://github.com/lerna/lerna\" target=\"_blank\" rel=\"noopener\">lerna</a>初始化，它优化了使用 git 和 npm 管理多包存储库的工作流，有兴趣可以研究一下</p>\n<blockquote>\n<p>我也是刚刚接触这个框架，有写错的地方欢迎纠错</p>\n</blockquote>\n<ul>\n<li><p>创建<code>lerna</code>项目</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install lerna -g</span><br><span class=\"line\">cd admin-ui</span><br><span class=\"line\">lerna init # 使用默认的固定模式</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#</span> Add packages</span><br><span class=\"line\">cd packages</span><br><span class=\"line\">mkdir hello button admin-ui input</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#</span>分别进入目录初始化成包</span><br><span class=\"line\">cd hello</span><br><span class=\"line\">npm init -y</span><br><span class=\"line\">cd ../button</span><br><span class=\"line\">npm init -y</span><br><span class=\"line\">cd ../admin-ui</span><br><span class=\"line\">npm init -y</span><br><span class=\"line\">cd ../input</span><br><span class=\"line\">npm init -y</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>修改项目配置</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span> package.json 文件加入</span><br><span class=\"line\">\"private\": true,</span><br><span class=\"line\">\"workspaces\": [</span><br><span class=\"line\">  \"packages/*\"</span><br><span class=\"line\">]</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#</span> lerna.json 文件加入</span><br><span class=\"line\">\"useWorkspaces\": true,</span><br><span class=\"line\">\"npmClient\": \"yarn\" # 默认使用 yarn 作为包管理工具</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<p>这样一个lerna脚手架就创建完成了，更多的命令脚本可以自己去看文档（主要是我现在也不会）。</p>\n<h2 id=\"安装依赖\"><a href=\"#安装依赖\" class=\"headerlink\" title=\"安装依赖\"></a>安装依赖</h2><p>上面已经定义好了默认使用 yarn 作为包管理工具，所以首先要保证全局有 yarn，然后执行<code>yarn add package -W</code>就可以了，这里有几点需要注意：</p>\n<ul>\n<li><code>yarn</code>没有必要作为项目依赖写入，因为我更希望你把它装在全局</li>\n<li>因为上面定义过<code>workspace</code>的原因，直接使用<code>yarn add package</code>会报错，需要在后面加上<code>-W</code></li>\n<li>项目本身定义为 UI 框架，因此<code>vue</code>相关的依赖也不需要加入到<code>dependencies</code>中，事实上绝大部分依赖都应该是开发依赖。</li>\n</ul>\n<p>本着上面的原则，一个基本的 vue 项目应该包含以下依赖：<br><code>vue、webpack、webpack-cli、webpack-dev-server、@babel/core、babel-loader、css-loader、html-webpack-plugin、vue-loader、vue-template-compile</code></p>\n<blockquote>\n<p>因为 webpack5 更新之后没有仔细研究过，加上 element-ui 也使用 webpack4，因此本项目使用的是 webpack4、webpack-cli3</p>\n</blockquote>\n<h2 id=\"创建项目模板\"><a href=\"#创建项目模板\" class=\"headerlink\" title=\"创建项目模板\"></a>创建项目模板</h2><p>安装好依赖，需要添加 vue 模板，参照 element-plus,在更目录新建<code>website</code>文件夹，加入<code>index.html、index.js、index.vue</code></p>\n<ul>\n<li><p>index.html</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"meta-keyword\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span> <span class=\"attr\">lang</span>=<span class=\"string\">\"en\"</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">\"UTF-8\"</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">http-equiv</span>=<span class=\"string\">\"X-UA-Compatible\"</span> <span class=\"attr\">content</span>=<span class=\"string\">\"IE=edge\"</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">name</span>=<span class=\"string\">\"viewport\"</span> <span class=\"attr\">content</span>=<span class=\"string\">\"width=device-width, initial-scale=1.0\"</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>dt-ui<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">\"app\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>index.js</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// index.js</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> &#123;createApp&#125; <span class=\"keyword\">from</span> <span class=\"string\">'vue'</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> App <span class=\"keyword\">from</span> <span class=\"string\">'./index.vue'</span></span><br><span class=\"line\"></span><br><span class=\"line\">createApp(App).mount(<span class=\"string\">'#app'</span>)</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>index.vue</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;template&gt;</span><br><span class=\"line\">  &lt;div <span class=\"class\"><span class=\"keyword\">class</span></span>=<span class=\"string\">\"app\"</span>&gt;</span><br><span class=\"line\">    hello,admin ui</span><br><span class=\"line\">  &lt;<span class=\"regexp\">/div&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">&lt;/</span>template&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;script&gt;</span><br><span class=\"line\"><span class=\"keyword\">import</span> &#123; defineComponent &#125; <span class=\"keyword\">from</span> <span class=\"string\">'vue'</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> defineComponent(&#123;</span><br><span class=\"line\">  name: <span class=\"string\">'app'</span></span><br><span class=\"line\">&#125;)</span><br><span class=\"line\">&lt;<span class=\"regexp\">/script&gt;</span></span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<h2 id=\"启动本地服务\"><a href=\"#启动本地服务\" class=\"headerlink\" title=\"启动本地服务\"></a>启动本地服务</h2><p>根目录新建<code>build</code>文件夹，新增<code>webpack.config.base.js</code></p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">'use strict'</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> HtmlWebpackPlugin = <span class=\"built_in\">require</span>(<span class=\"string\">'html-webpack-plugin'</span>)</span><br><span class=\"line\"><span class=\"keyword\">const</span> &#123; VueLoaderPlugin &#125; = <span class=\"built_in\">require</span>(<span class=\"string\">'vue-loader'</span>)</span><br><span class=\"line\"><span class=\"keyword\">const</span> path = <span class=\"built_in\">require</span>(<span class=\"string\">'path'</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">module</span>.exports = &#123;</span><br><span class=\"line\">  entry: path.resolve(__dirname, <span class=\"string\">'../website/index.js'</span>),</span><br><span class=\"line\">  output: &#123;</span><br><span class=\"line\">    path: path.resolve(__dirname, <span class=\"string\">'../dist'</span>),</span><br><span class=\"line\">    filename: <span class=\"string\">'index.js'</span></span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  <span class=\"built_in\">module</span>: &#123;</span><br><span class=\"line\">    rules: [</span><br><span class=\"line\">      &#123;</span><br><span class=\"line\">        test: <span class=\"regexp\">/\\.js$/</span>,</span><br><span class=\"line\">        loader: <span class=\"string\">'babel-loader'</span>,</span><br><span class=\"line\">        exclude: <span class=\"regexp\">/node_modules/</span></span><br><span class=\"line\">      &#125;,</span><br><span class=\"line\">      &#123;</span><br><span class=\"line\">        test: <span class=\"regexp\">/\\.vue$/</span>,</span><br><span class=\"line\">        loader: <span class=\"string\">'vue-loader'</span></span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    ]</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  plugins: [</span><br><span class=\"line\">    <span class=\"keyword\">new</span> HtmlWebpackPlugin(&#123;</span><br><span class=\"line\">      template: <span class=\"string\">'./website/index.html'</span>,</span><br><span class=\"line\">      filename: <span class=\"string\">'./index.html'</span></span><br><span class=\"line\">    &#125;),</span><br><span class=\"line\">    <span class=\"keyword\">new</span> VueLoaderPlugin()</span><br><span class=\"line\">  ]</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p><code>package.json</code>添加命令 <code>&quot;dev&quot;: &quot;webpack-dev-server --config build/webpack.config.base.js&quot;</code>,运行<code>yarn dev</code>就可以在 8080 端口运行服务了</p>\n<blockquote>\n<p>如果这时没有运行成功，多半是报错，缺少其他的开发依赖。上面列举的是我知道的必须的 vue 项目依赖，并不完整。可以根据报错，缺什么，安装什么，最后一定没有问题。</p>\n</blockquote>\n<p>最后，补上当前的项目目录</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">├── build</span><br><span class=\"line\">│   └── webpack.config.base.js</span><br><span class=\"line\">├── lerna.json</span><br><span class=\"line\">├── package.json</span><br><span class=\"line\">├── packages</span><br><span class=\"line\">│   ├── admin-ui</span><br><span class=\"line\">│   │   └── package.json</span><br><span class=\"line\">│   ├── button</span><br><span class=\"line\">│   │   └── package.json</span><br><span class=\"line\">│   ├── hello</span><br><span class=\"line\">│   │   └── package.json</span><br><span class=\"line\">│   └── input</span><br><span class=\"line\">│       └── package.json</span><br><span class=\"line\">├── website</span><br><span class=\"line\">│   ├── index.html</span><br><span class=\"line\">│   ├── index.js</span><br><span class=\"line\">│   └── index.vue</span><br><span class=\"line\">├── yarn-error.log</span><br><span class=\"line\">└── yarn.lock</span><br></pre></td></tr></table></figure>\n"},{"title":"从0开始开发vue单文件项目","date":"2019-04-02T11:44:31.000Z","description":"从0开始自己搭建vue脚手架","_content":"都说软件开发不需要重复造轮子。但不得不说自己造轮子是掌握和巩固知识点最好的办法。这篇文章带大家从0开始自己写一个最简单的vue脚手架。\n\n## 创建项目\n\n创建一个空文件夹，执行`npm init`，生成一个npm项目。填写一些你认为有用的信息。并在根目录下创建一个index.js文件，作为npm项目的入口。\n\n## 安装依赖\n\n### 安装webpack\n\n首先安装webpack。如果用的是webpack4.x版本，同时还需要安装webpack-cli才行。\n\n```nodemon\nnpm i -D webpack webpack-cli\n```\n\n### 管理webpack\n\n在根目录创建一个webpack.config.js，在这里管理webpack。创建一个src文件夹来管理源码。在src文件夹中创建index.js作为入口文件（其实就是脚手架中的main文件）。参照vue脚手架，我们规定最后打包目录为dist。此时文件的目录结构为\n\n```shell\n│  index.js\n│  package.json\n│  webpack.config.js\n│\n│\n└─src\n        index.js\n```\n\n而webpack.config.js的内容为\n\n```javascript\nconst path = require('path')\n\nmodule.exports = {\n  entry: './src/index.js',\n  output: {\n    path: path.resolve(__dirname, './dist'),\n    filename: 'index.js'\n  }\n}\n```\n\n为此我们需要安装基本的loader\n\n+ 编译css的loader和sass本身\n\n```nodemon\nnpm i -D style-loader css-loader sass-loader node-sass\n```\n\n+ 编译js的loader\n\n> 如果是babel8.x,必需要同时安装@babel/core @babel/preset-env\n\n```nodemon\nnpm i -D babel-loader @babel/core @babel/preset-env\n```\n\n+ 编译vue的loader\n\n```nodemon\nnpm i -D vue-loader vue-template-compiler\nnpm i -S vue\n```\n\n把这些加到webpack.config.js里，文件变成了这样\n\n```javascript\nconst path = require('path')\nconst VueLoaderPlugin = require('vue-loader/lib/plugin')\n\nmodule.exports = {\n  entry: './src/index.js',\n  output: {\n    path: path.resolve(__dirname, './dist'),\n    filename: 'index.js'\n  },\n  module: {\n    rules: [\n      {\n        test: /\\.js$/,\n        use: [\n          {\n            loader: 'babel-loader'\n          }\n        ]\n      },\n      {\n        test: /\\.vue$/,\n        use: [\n          {\n            loader: 'vue-loader'\n          }\n        ]\n      },\n      {\n        test: /\\.(css|scss|sass)$/,\n        use: [\n          {\n            loader: 'style-loader'\n          },\n          {\n            loader: 'css-loader'\n          },\n          {\n            loader: 'sass-loader'\n          }\n        ]\n      }\n    ]\n  },\n  plugins: [new VueLoaderPlugin()]\n}\n```\n\n### 然后向webpack添加开发环境运行的配置\n\n```nodemon\nnpm i -D clean-webpack-plugin html-webpack-plugin webpack-dev-server\n```\n\n使用webpack-dev-server来启动开发环境，使用webpack进行打包。在这个操作当中，`html-webpack-plugin`需要一个模板来定义文件的结构，因为我们需要的不是一个空白模板，而希望模板中至少要有一个`<div id=\"app\"></div>`。根据插件，我们还需要在跟目录创建一个public文件夹。里面放的是渲染`html-webpack-plugin`插件的模板。那么现在，整个项目结构变成了这样\n\n```shell\n│  index.js\n│  package.json\n│  webpack.config.js\n│\n├─public\n│      index.html\n│\n└─src\n        index.js\n```\n\n然后向`package.json`添加执行命令\n\n```json\n{\n  // ...\n  \"scripts\": {\n    \"build\": \"webpack --config webpack.config.js\",\n    \"dev\": \"webpack-dev-server --open\"\n  }\n  // ...\n}\n```\n\n并且向`webpack.config.json`继续补充\n\n```js\nconst path = require('path')\nconst HtmlWebpackPlugin = require('html-webpack-plugin');\nconst CleanWebpackPlugin = require('clean-webpack-plugin');\nconst VueLoaderPlugin = require('vue-loader/lib/plugin')\n\nmodule.exports = {\n  entry: './src/index.js',\n  output: {\n    path: path.resolve(__dirname, './dist'),\n    filename: 'index.js'\n  },\n  devServer: {\n    contentBase:  './dist'\n  },\n  module: {\n    rules: [\n      {\n        test: /\\.js$/,\n        use: [\n          {\n            loader: 'babel-loader'\n          }\n        ]\n      },\n      {\n        test: /\\.vue$/,\n        use: [\n          {\n            loader: 'vue-loader'\n          }\n        ]\n      },\n      {\n        test: /\\.(css|scss|sass)$/,\n        use: [\n          {\n            loader: 'style-loader'\n          },\n          {\n            loader: 'css-loader'\n          },\n          {\n            loader: 'sass-loader'\n          }\n        ]\n      }\n    ]\n  },\n  plugins: [\n    new VueLoaderPlugin(),\n    new CleanWebpackPlugin(),\n    new HtmlWebpackPlugin({\n      template: 'public/index.html',\n      title: 'hello, vue_title'\n    })\n  ]\n}\n```\n\n### 创建真正的vue脚手架\n\n如果你能执行到上面的步骤结束没有出错，那么实际上你的webpack已经没有问题了。虽然看上去是如此的简单。接下来我们只需要把精力放到如何编译vue单文件组件。在src文件夹中创建一个index.vue文件如下\n\n```vue\n<template>\n  <div>\n    {{msg}}\n  </div>\n</template>\n\n<script>\nexport default {\n  data() {\n    return {\n      msg: 'hello, vue!!!'\n    }\n  }\n}\n</script>\n\n<style lang=\"scss\" scoped>\ndiv {\n  color: red\n}\n</style>\n```\n\n并编辑同目录中的index.js\n\n```js\nimport Vue from 'vue'\nimport App from './index.vue'\n\nnew Vue({\n  render: h => h(App)\n}).$mount('#app')\n```\n\n最后，我们的项目长成了这样\n\n```shell\n│  index.js\n│  package.json\n│  webpack.config.js\n│\n├─public\n│      index.html\n└─src\n        index.js\n        index.vue\n```\n\n是不是发现和vue-cli3.x脚手架的结构完全一样？事实上vue-cli3.x就是这个结构来的。只不过它把webpack.config.js安装到了vue-cli-service里，暴露出来vue.config.js来管理。\n\n## 最后，这个模板的地址[在这里](https://github.com/lost-dream/webpack-demo)\n","source":"_posts/从0开始开发vue单文件项目.md","raw":"---\ntitle: 从0开始开发vue单文件项目\ntags: [vue,webpack]\ndate: 2019-04-02 19:44:31\ncategories: [webpack]\ndescription: 从0开始自己搭建vue脚手架\n---\n都说软件开发不需要重复造轮子。但不得不说自己造轮子是掌握和巩固知识点最好的办法。这篇文章带大家从0开始自己写一个最简单的vue脚手架。\n\n## 创建项目\n\n创建一个空文件夹，执行`npm init`，生成一个npm项目。填写一些你认为有用的信息。并在根目录下创建一个index.js文件，作为npm项目的入口。\n\n## 安装依赖\n\n### 安装webpack\n\n首先安装webpack。如果用的是webpack4.x版本，同时还需要安装webpack-cli才行。\n\n```nodemon\nnpm i -D webpack webpack-cli\n```\n\n### 管理webpack\n\n在根目录创建一个webpack.config.js，在这里管理webpack。创建一个src文件夹来管理源码。在src文件夹中创建index.js作为入口文件（其实就是脚手架中的main文件）。参照vue脚手架，我们规定最后打包目录为dist。此时文件的目录结构为\n\n```shell\n│  index.js\n│  package.json\n│  webpack.config.js\n│\n│\n└─src\n        index.js\n```\n\n而webpack.config.js的内容为\n\n```javascript\nconst path = require('path')\n\nmodule.exports = {\n  entry: './src/index.js',\n  output: {\n    path: path.resolve(__dirname, './dist'),\n    filename: 'index.js'\n  }\n}\n```\n\n为此我们需要安装基本的loader\n\n+ 编译css的loader和sass本身\n\n```nodemon\nnpm i -D style-loader css-loader sass-loader node-sass\n```\n\n+ 编译js的loader\n\n> 如果是babel8.x,必需要同时安装@babel/core @babel/preset-env\n\n```nodemon\nnpm i -D babel-loader @babel/core @babel/preset-env\n```\n\n+ 编译vue的loader\n\n```nodemon\nnpm i -D vue-loader vue-template-compiler\nnpm i -S vue\n```\n\n把这些加到webpack.config.js里，文件变成了这样\n\n```javascript\nconst path = require('path')\nconst VueLoaderPlugin = require('vue-loader/lib/plugin')\n\nmodule.exports = {\n  entry: './src/index.js',\n  output: {\n    path: path.resolve(__dirname, './dist'),\n    filename: 'index.js'\n  },\n  module: {\n    rules: [\n      {\n        test: /\\.js$/,\n        use: [\n          {\n            loader: 'babel-loader'\n          }\n        ]\n      },\n      {\n        test: /\\.vue$/,\n        use: [\n          {\n            loader: 'vue-loader'\n          }\n        ]\n      },\n      {\n        test: /\\.(css|scss|sass)$/,\n        use: [\n          {\n            loader: 'style-loader'\n          },\n          {\n            loader: 'css-loader'\n          },\n          {\n            loader: 'sass-loader'\n          }\n        ]\n      }\n    ]\n  },\n  plugins: [new VueLoaderPlugin()]\n}\n```\n\n### 然后向webpack添加开发环境运行的配置\n\n```nodemon\nnpm i -D clean-webpack-plugin html-webpack-plugin webpack-dev-server\n```\n\n使用webpack-dev-server来启动开发环境，使用webpack进行打包。在这个操作当中，`html-webpack-plugin`需要一个模板来定义文件的结构，因为我们需要的不是一个空白模板，而希望模板中至少要有一个`<div id=\"app\"></div>`。根据插件，我们还需要在跟目录创建一个public文件夹。里面放的是渲染`html-webpack-plugin`插件的模板。那么现在，整个项目结构变成了这样\n\n```shell\n│  index.js\n│  package.json\n│  webpack.config.js\n│\n├─public\n│      index.html\n│\n└─src\n        index.js\n```\n\n然后向`package.json`添加执行命令\n\n```json\n{\n  // ...\n  \"scripts\": {\n    \"build\": \"webpack --config webpack.config.js\",\n    \"dev\": \"webpack-dev-server --open\"\n  }\n  // ...\n}\n```\n\n并且向`webpack.config.json`继续补充\n\n```js\nconst path = require('path')\nconst HtmlWebpackPlugin = require('html-webpack-plugin');\nconst CleanWebpackPlugin = require('clean-webpack-plugin');\nconst VueLoaderPlugin = require('vue-loader/lib/plugin')\n\nmodule.exports = {\n  entry: './src/index.js',\n  output: {\n    path: path.resolve(__dirname, './dist'),\n    filename: 'index.js'\n  },\n  devServer: {\n    contentBase:  './dist'\n  },\n  module: {\n    rules: [\n      {\n        test: /\\.js$/,\n        use: [\n          {\n            loader: 'babel-loader'\n          }\n        ]\n      },\n      {\n        test: /\\.vue$/,\n        use: [\n          {\n            loader: 'vue-loader'\n          }\n        ]\n      },\n      {\n        test: /\\.(css|scss|sass)$/,\n        use: [\n          {\n            loader: 'style-loader'\n          },\n          {\n            loader: 'css-loader'\n          },\n          {\n            loader: 'sass-loader'\n          }\n        ]\n      }\n    ]\n  },\n  plugins: [\n    new VueLoaderPlugin(),\n    new CleanWebpackPlugin(),\n    new HtmlWebpackPlugin({\n      template: 'public/index.html',\n      title: 'hello, vue_title'\n    })\n  ]\n}\n```\n\n### 创建真正的vue脚手架\n\n如果你能执行到上面的步骤结束没有出错，那么实际上你的webpack已经没有问题了。虽然看上去是如此的简单。接下来我们只需要把精力放到如何编译vue单文件组件。在src文件夹中创建一个index.vue文件如下\n\n```vue\n<template>\n  <div>\n    {{msg}}\n  </div>\n</template>\n\n<script>\nexport default {\n  data() {\n    return {\n      msg: 'hello, vue!!!'\n    }\n  }\n}\n</script>\n\n<style lang=\"scss\" scoped>\ndiv {\n  color: red\n}\n</style>\n```\n\n并编辑同目录中的index.js\n\n```js\nimport Vue from 'vue'\nimport App from './index.vue'\n\nnew Vue({\n  render: h => h(App)\n}).$mount('#app')\n```\n\n最后，我们的项目长成了这样\n\n```shell\n│  index.js\n│  package.json\n│  webpack.config.js\n│\n├─public\n│      index.html\n└─src\n        index.js\n        index.vue\n```\n\n是不是发现和vue-cli3.x脚手架的结构完全一样？事实上vue-cli3.x就是这个结构来的。只不过它把webpack.config.js安装到了vue-cli-service里，暴露出来vue.config.js来管理。\n\n## 最后，这个模板的地址[在这里](https://github.com/lost-dream/webpack-demo)\n","slug":"从0开始开发vue单文件项目","published":1,"updated":"2021-06-25T11:19:55.444Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckqc904p1001ewotv6fcst2cg","content":"<p>都说软件开发不需要重复造轮子。但不得不说自己造轮子是掌握和巩固知识点最好的办法。这篇文章带大家从0开始自己写一个最简单的vue脚手架。</p>\n<h2 id=\"创建项目\"><a href=\"#创建项目\" class=\"headerlink\" title=\"创建项目\"></a>创建项目</h2><p>创建一个空文件夹，执行<code>npm init</code>，生成一个npm项目。填写一些你认为有用的信息。并在根目录下创建一个index.js文件，作为npm项目的入口。</p>\n<h2 id=\"安装依赖\"><a href=\"#安装依赖\" class=\"headerlink\" title=\"安装依赖\"></a>安装依赖</h2><h3 id=\"安装webpack\"><a href=\"#安装webpack\" class=\"headerlink\" title=\"安装webpack\"></a>安装webpack</h3><p>首先安装webpack。如果用的是webpack4.x版本，同时还需要安装webpack-cli才行。</p>\n<div class=\"code-panel__wrapper\" autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\"><header class=\"mac-panel\"><span class=\"doc-path\"></span><span class=\"mac-panel__language\">PLAIN</span></header><figure class=\"iseeu highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm i -D webpack webpack-cli</span><br></pre></td></tr></table></figure></div>\n<h3 id=\"管理webpack\"><a href=\"#管理webpack\" class=\"headerlink\" title=\"管理webpack\"></a>管理webpack</h3><p>在根目录创建一个webpack.config.js，在这里管理webpack。创建一个src文件夹来管理源码。在src文件夹中创建index.js作为入口文件（其实就是脚手架中的main文件）。参照vue脚手架，我们规定最后打包目录为dist。此时文件的目录结构为</p>\n<div class=\"code-panel__wrapper\" autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\"><header class=\"mac-panel\"><span class=\"doc-path\"></span><span class=\"mac-panel__language\">SHELL</span></header><figure class=\"iseeu highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">│  index.js</span><br><span class=\"line\">│  package.json</span><br><span class=\"line\">│  webpack.config.js</span><br><span class=\"line\">│</span><br><span class=\"line\">│</span><br><span class=\"line\">└─src</span><br><span class=\"line\">        index.js</span><br></pre></td></tr></table></figure></div>\n<p>而webpack.config.js的内容为</p>\n<div class=\"code-panel__wrapper\" autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\"><header class=\"mac-panel\"><span class=\"doc-path\"></span><span class=\"mac-panel__language\">JAVASCRIPT</span></header><figure class=\"iseeu highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> path = <span class=\"built_in\">require</span>(<span class=\"string\">'path'</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">module</span>.exports = &#123;</span><br><span class=\"line\">  entry: <span class=\"string\">'./src/index.js'</span>,</span><br><span class=\"line\">  output: &#123;</span><br><span class=\"line\">    path: path.resolve(__dirname, <span class=\"string\">'./dist'</span>),</span><br><span class=\"line\">    filename: <span class=\"string\">'index.js'</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></div>\n<p>为此我们需要安装基本的loader</p>\n<ul>\n<li>编译css的loader和sass本身</li>\n</ul>\n<div class=\"code-panel__wrapper\" autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\"><header class=\"mac-panel\"><span class=\"doc-path\"></span><span class=\"mac-panel__language\">PLAIN</span></header><figure class=\"iseeu highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm i -D style-loader css-loader sass-loader node-sass</span><br></pre></td></tr></table></figure></div>\n<ul>\n<li>编译js的loader</li>\n</ul>\n<blockquote>\n<p>如果是babel8.x,必需要同时安装@babel/core @babel/preset-env</p>\n</blockquote>\n<div class=\"code-panel__wrapper\" autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\"><header class=\"mac-panel\"><span class=\"doc-path\"></span><span class=\"mac-panel__language\">PLAIN</span></header><figure class=\"iseeu highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm i -D babel-loader @babel/core @babel/preset-env</span><br></pre></td></tr></table></figure></div>\n<ul>\n<li>编译vue的loader</li>\n</ul>\n<div class=\"code-panel__wrapper\" autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\"><header class=\"mac-panel\"><span class=\"doc-path\"></span><span class=\"mac-panel__language\">PLAIN</span></header><figure class=\"iseeu highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm i -D vue-loader vue-template-compiler</span><br><span class=\"line\">npm i -S vue</span><br></pre></td></tr></table></figure></div>\n<p>把这些加到webpack.config.js里，文件变成了这样</p>\n<div class=\"code-panel__wrapper\" autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\"><header class=\"mac-panel\"><span class=\"doc-path\"></span><span class=\"mac-panel__language\">JAVASCRIPT</span></header><figure class=\"iseeu highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> path = <span class=\"built_in\">require</span>(<span class=\"string\">'path'</span>)</span><br><span class=\"line\"><span class=\"keyword\">const</span> VueLoaderPlugin = <span class=\"built_in\">require</span>(<span class=\"string\">'vue-loader/lib/plugin'</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">module</span>.exports = &#123;</span><br><span class=\"line\">  entry: <span class=\"string\">'./src/index.js'</span>,</span><br><span class=\"line\">  output: &#123;</span><br><span class=\"line\">    path: path.resolve(__dirname, <span class=\"string\">'./dist'</span>),</span><br><span class=\"line\">    filename: <span class=\"string\">'index.js'</span></span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  <span class=\"built_in\">module</span>: &#123;</span><br><span class=\"line\">    rules: [</span><br><span class=\"line\">      &#123;</span><br><span class=\"line\">        test: <span class=\"regexp\">/\\.js$/</span>,</span><br><span class=\"line\">        use: [</span><br><span class=\"line\">          &#123;</span><br><span class=\"line\">            loader: <span class=\"string\">'babel-loader'</span></span><br><span class=\"line\">          &#125;</span><br><span class=\"line\">        ]</span><br><span class=\"line\">      &#125;,</span><br><span class=\"line\">      &#123;</span><br><span class=\"line\">        test: <span class=\"regexp\">/\\.vue$/</span>,</span><br><span class=\"line\">        use: [</span><br><span class=\"line\">          &#123;</span><br><span class=\"line\">            loader: <span class=\"string\">'vue-loader'</span></span><br><span class=\"line\">          &#125;</span><br><span class=\"line\">        ]</span><br><span class=\"line\">      &#125;,</span><br><span class=\"line\">      &#123;</span><br><span class=\"line\">        test: <span class=\"regexp\">/\\.(css|scss|sass)$/</span>,</span><br><span class=\"line\">        use: [</span><br><span class=\"line\">          &#123;</span><br><span class=\"line\">            loader: <span class=\"string\">'style-loader'</span></span><br><span class=\"line\">          &#125;,</span><br><span class=\"line\">          &#123;</span><br><span class=\"line\">            loader: <span class=\"string\">'css-loader'</span></span><br><span class=\"line\">          &#125;,</span><br><span class=\"line\">          &#123;</span><br><span class=\"line\">            loader: <span class=\"string\">'sass-loader'</span></span><br><span class=\"line\">          &#125;</span><br><span class=\"line\">        ]</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    ]</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  plugins: [<span class=\"keyword\">new</span> VueLoaderPlugin()]</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></div>\n<h3 id=\"然后向webpack添加开发环境运行的配置\"><a href=\"#然后向webpack添加开发环境运行的配置\" class=\"headerlink\" title=\"然后向webpack添加开发环境运行的配置\"></a>然后向webpack添加开发环境运行的配置</h3><div class=\"code-panel__wrapper\" autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\"><header class=\"mac-panel\"><span class=\"doc-path\"></span><span class=\"mac-panel__language\">PLAIN</span></header><figure class=\"iseeu highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm i -D clean-webpack-plugin html-webpack-plugin webpack-dev-server</span><br></pre></td></tr></table></figure></div>\n<p>使用webpack-dev-server来启动开发环境，使用webpack进行打包。在这个操作当中，<code>html-webpack-plugin</code>需要一个模板来定义文件的结构，因为我们需要的不是一个空白模板，而希望模板中至少要有一个<code>&lt;div id=&quot;app&quot;&gt;&lt;/div&gt;</code>。根据插件，我们还需要在跟目录创建一个public文件夹。里面放的是渲染<code>html-webpack-plugin</code>插件的模板。那么现在，整个项目结构变成了这样</p>\n<div class=\"code-panel__wrapper\" autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\"><header class=\"mac-panel\"><span class=\"doc-path\"></span><span class=\"mac-panel__language\">SHELL</span></header><figure class=\"iseeu highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">│  index.js</span><br><span class=\"line\">│  package.json</span><br><span class=\"line\">│  webpack.config.js</span><br><span class=\"line\">│</span><br><span class=\"line\">├─public</span><br><span class=\"line\">│      index.html</span><br><span class=\"line\">│</span><br><span class=\"line\">└─src</span><br><span class=\"line\">        index.js</span><br></pre></td></tr></table></figure></div>\n<p>然后向<code>package.json</code>添加执行命令</p>\n<div class=\"code-panel__wrapper\" autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\"><header class=\"mac-panel\"><span class=\"doc-path\"></span><span class=\"mac-panel__language\">JSON</span></header><figure class=\"iseeu highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"comment\">// ...</span></span><br><span class=\"line\">  <span class=\"attr\">\"scripts\"</span>: &#123;</span><br><span class=\"line\">    <span class=\"attr\">\"build\"</span>: <span class=\"string\">\"webpack --config webpack.config.js\"</span>,</span><br><span class=\"line\">    <span class=\"attr\">\"dev\"</span>: <span class=\"string\">\"webpack-dev-server --open\"</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"comment\">// ...</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></div>\n<p>并且向<code>webpack.config.json</code>继续补充</p>\n<div class=\"code-panel__wrapper\" autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\"><header class=\"mac-panel\"><span class=\"doc-path\"></span><span class=\"mac-panel__language\">JS</span></header><figure class=\"iseeu highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> path = <span class=\"built_in\">require</span>(<span class=\"string\">'path'</span>)</span><br><span class=\"line\"><span class=\"keyword\">const</span> HtmlWebpackPlugin = <span class=\"built_in\">require</span>(<span class=\"string\">'html-webpack-plugin'</span>);</span><br><span class=\"line\"><span class=\"keyword\">const</span> CleanWebpackPlugin = <span class=\"built_in\">require</span>(<span class=\"string\">'clean-webpack-plugin'</span>);</span><br><span class=\"line\"><span class=\"keyword\">const</span> VueLoaderPlugin = <span class=\"built_in\">require</span>(<span class=\"string\">'vue-loader/lib/plugin'</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">module</span>.exports = &#123;</span><br><span class=\"line\">  entry: <span class=\"string\">'./src/index.js'</span>,</span><br><span class=\"line\">  output: &#123;</span><br><span class=\"line\">    path: path.resolve(__dirname, <span class=\"string\">'./dist'</span>),</span><br><span class=\"line\">    filename: <span class=\"string\">'index.js'</span></span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  devServer: &#123;</span><br><span class=\"line\">    contentBase:  <span class=\"string\">'./dist'</span></span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  <span class=\"built_in\">module</span>: &#123;</span><br><span class=\"line\">    rules: [</span><br><span class=\"line\">      &#123;</span><br><span class=\"line\">        test: <span class=\"regexp\">/\\.js$/</span>,</span><br><span class=\"line\">        use: [</span><br><span class=\"line\">          &#123;</span><br><span class=\"line\">            loader: <span class=\"string\">'babel-loader'</span></span><br><span class=\"line\">          &#125;</span><br><span class=\"line\">        ]</span><br><span class=\"line\">      &#125;,</span><br><span class=\"line\">      &#123;</span><br><span class=\"line\">        test: <span class=\"regexp\">/\\.vue$/</span>,</span><br><span class=\"line\">        use: [</span><br><span class=\"line\">          &#123;</span><br><span class=\"line\">            loader: <span class=\"string\">'vue-loader'</span></span><br><span class=\"line\">          &#125;</span><br><span class=\"line\">        ]</span><br><span class=\"line\">      &#125;,</span><br><span class=\"line\">      &#123;</span><br><span class=\"line\">        test: <span class=\"regexp\">/\\.(css|scss|sass)$/</span>,</span><br><span class=\"line\">        use: [</span><br><span class=\"line\">          &#123;</span><br><span class=\"line\">            loader: <span class=\"string\">'style-loader'</span></span><br><span class=\"line\">          &#125;,</span><br><span class=\"line\">          &#123;</span><br><span class=\"line\">            loader: <span class=\"string\">'css-loader'</span></span><br><span class=\"line\">          &#125;,</span><br><span class=\"line\">          &#123;</span><br><span class=\"line\">            loader: <span class=\"string\">'sass-loader'</span></span><br><span class=\"line\">          &#125;</span><br><span class=\"line\">        ]</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    ]</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  plugins: [</span><br><span class=\"line\">    <span class=\"keyword\">new</span> VueLoaderPlugin(),</span><br><span class=\"line\">    <span class=\"keyword\">new</span> CleanWebpackPlugin(),</span><br><span class=\"line\">    <span class=\"keyword\">new</span> HtmlWebpackPlugin(&#123;</span><br><span class=\"line\">      template: <span class=\"string\">'public/index.html'</span>,</span><br><span class=\"line\">      title: <span class=\"string\">'hello, vue_title'</span></span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">  ]</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></div>\n<h3 id=\"创建真正的vue脚手架\"><a href=\"#创建真正的vue脚手架\" class=\"headerlink\" title=\"创建真正的vue脚手架\"></a>创建真正的vue脚手架</h3><p>如果你能执行到上面的步骤结束没有出错，那么实际上你的webpack已经没有问题了。虽然看上去是如此的简单。接下来我们只需要把精力放到如何编译vue单文件组件。在src文件夹中创建一个index.vue文件如下</p>\n<div class=\"code-panel__wrapper\" autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\"><header class=\"mac-panel\"><span class=\"doc-path\"></span><span class=\"mac-panel__language\">PLAIN</span></header><figure class=\"iseeu highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;template&gt;</span><br><span class=\"line\">  &lt;div&gt;</span><br><span class=\"line\">    &#123;&#123;msg&#125;&#125;</span><br><span class=\"line\">  &lt;/div&gt;</span><br><span class=\"line\">&lt;/template&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;script&gt;</span><br><span class=\"line\">export default &#123;</span><br><span class=\"line\">  data() &#123;</span><br><span class=\"line\">    return &#123;</span><br><span class=\"line\">      msg: &apos;hello, vue!!!&apos;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">&lt;/script&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;style lang=&quot;scss&quot; scoped&gt;</span><br><span class=\"line\">div &#123;</span><br><span class=\"line\">  color: red</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">&lt;/style&gt;</span><br></pre></td></tr></table></figure></div>\n<p>并编辑同目录中的index.js</p>\n<div class=\"code-panel__wrapper\" autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\"><header class=\"mac-panel\"><span class=\"doc-path\"></span><span class=\"mac-panel__language\">JS</span></header><figure class=\"iseeu highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> Vue <span class=\"keyword\">from</span> <span class=\"string\">'vue'</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> App <span class=\"keyword\">from</span> <span class=\"string\">'./index.vue'</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">new</span> Vue(&#123;</span><br><span class=\"line\">  render: <span class=\"function\"><span class=\"params\">h</span> =&gt;</span> h(App)</span><br><span class=\"line\">&#125;).$mount(<span class=\"string\">'#app'</span>)</span><br></pre></td></tr></table></figure></div>\n<p>最后，我们的项目长成了这样</p>\n<div class=\"code-panel__wrapper\" autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\"><header class=\"mac-panel\"><span class=\"doc-path\"></span><span class=\"mac-panel__language\">SHELL</span></header><figure class=\"iseeu highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">│  index.js</span><br><span class=\"line\">│  package.json</span><br><span class=\"line\">│  webpack.config.js</span><br><span class=\"line\">│</span><br><span class=\"line\">├─public</span><br><span class=\"line\">│      index.html</span><br><span class=\"line\">└─src</span><br><span class=\"line\">        index.js</span><br><span class=\"line\">        index.vue</span><br></pre></td></tr></table></figure></div>\n<p>是不是发现和vue-cli3.x脚手架的结构完全一样？事实上vue-cli3.x就是这个结构来的。只不过它把webpack.config.js安装到了vue-cli-service里，暴露出来vue.config.js来管理。</p>\n<h2 id=\"最后，这个模板的地址在这里\"><a href=\"#最后，这个模板的地址在这里\" class=\"headerlink\" title=\"最后，这个模板的地址在这里\"></a>最后，这个模板的地址<a href=\"https://github.com/lost-dream/webpack-demo\" target=\"_blank\" rel=\"noopener\">在这里</a></h2>","site":{"data":{}},"excerpt":"","more":"<p>都说软件开发不需要重复造轮子。但不得不说自己造轮子是掌握和巩固知识点最好的办法。这篇文章带大家从0开始自己写一个最简单的vue脚手架。</p>\n<h2 id=\"创建项目\"><a href=\"#创建项目\" class=\"headerlink\" title=\"创建项目\"></a>创建项目</h2><p>创建一个空文件夹，执行<code>npm init</code>，生成一个npm项目。填写一些你认为有用的信息。并在根目录下创建一个index.js文件，作为npm项目的入口。</p>\n<h2 id=\"安装依赖\"><a href=\"#安装依赖\" class=\"headerlink\" title=\"安装依赖\"></a>安装依赖</h2><h3 id=\"安装webpack\"><a href=\"#安装webpack\" class=\"headerlink\" title=\"安装webpack\"></a>安装webpack</h3><p>首先安装webpack。如果用的是webpack4.x版本，同时还需要安装webpack-cli才行。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm i -D webpack webpack-cli</span><br></pre></td></tr></table></figure>\n<h3 id=\"管理webpack\"><a href=\"#管理webpack\" class=\"headerlink\" title=\"管理webpack\"></a>管理webpack</h3><p>在根目录创建一个webpack.config.js，在这里管理webpack。创建一个src文件夹来管理源码。在src文件夹中创建index.js作为入口文件（其实就是脚手架中的main文件）。参照vue脚手架，我们规定最后打包目录为dist。此时文件的目录结构为</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">│  index.js</span><br><span class=\"line\">│  package.json</span><br><span class=\"line\">│  webpack.config.js</span><br><span class=\"line\">│</span><br><span class=\"line\">│</span><br><span class=\"line\">└─src</span><br><span class=\"line\">        index.js</span><br></pre></td></tr></table></figure>\n<p>而webpack.config.js的内容为</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> path = <span class=\"built_in\">require</span>(<span class=\"string\">'path'</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">module</span>.exports = &#123;</span><br><span class=\"line\">  entry: <span class=\"string\">'./src/index.js'</span>,</span><br><span class=\"line\">  output: &#123;</span><br><span class=\"line\">    path: path.resolve(__dirname, <span class=\"string\">'./dist'</span>),</span><br><span class=\"line\">    filename: <span class=\"string\">'index.js'</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>为此我们需要安装基本的loader</p>\n<ul>\n<li>编译css的loader和sass本身</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm i -D style-loader css-loader sass-loader node-sass</span><br></pre></td></tr></table></figure>\n<ul>\n<li>编译js的loader</li>\n</ul>\n<blockquote>\n<p>如果是babel8.x,必需要同时安装@babel/core @babel/preset-env</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm i -D babel-loader @babel/core @babel/preset-env</span><br></pre></td></tr></table></figure>\n<ul>\n<li>编译vue的loader</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm i -D vue-loader vue-template-compiler</span><br><span class=\"line\">npm i -S vue</span><br></pre></td></tr></table></figure>\n<p>把这些加到webpack.config.js里，文件变成了这样</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> path = <span class=\"built_in\">require</span>(<span class=\"string\">'path'</span>)</span><br><span class=\"line\"><span class=\"keyword\">const</span> VueLoaderPlugin = <span class=\"built_in\">require</span>(<span class=\"string\">'vue-loader/lib/plugin'</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">module</span>.exports = &#123;</span><br><span class=\"line\">  entry: <span class=\"string\">'./src/index.js'</span>,</span><br><span class=\"line\">  output: &#123;</span><br><span class=\"line\">    path: path.resolve(__dirname, <span class=\"string\">'./dist'</span>),</span><br><span class=\"line\">    filename: <span class=\"string\">'index.js'</span></span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  <span class=\"built_in\">module</span>: &#123;</span><br><span class=\"line\">    rules: [</span><br><span class=\"line\">      &#123;</span><br><span class=\"line\">        test: <span class=\"regexp\">/\\.js$/</span>,</span><br><span class=\"line\">        use: [</span><br><span class=\"line\">          &#123;</span><br><span class=\"line\">            loader: <span class=\"string\">'babel-loader'</span></span><br><span class=\"line\">          &#125;</span><br><span class=\"line\">        ]</span><br><span class=\"line\">      &#125;,</span><br><span class=\"line\">      &#123;</span><br><span class=\"line\">        test: <span class=\"regexp\">/\\.vue$/</span>,</span><br><span class=\"line\">        use: [</span><br><span class=\"line\">          &#123;</span><br><span class=\"line\">            loader: <span class=\"string\">'vue-loader'</span></span><br><span class=\"line\">          &#125;</span><br><span class=\"line\">        ]</span><br><span class=\"line\">      &#125;,</span><br><span class=\"line\">      &#123;</span><br><span class=\"line\">        test: <span class=\"regexp\">/\\.(css|scss|sass)$/</span>,</span><br><span class=\"line\">        use: [</span><br><span class=\"line\">          &#123;</span><br><span class=\"line\">            loader: <span class=\"string\">'style-loader'</span></span><br><span class=\"line\">          &#125;,</span><br><span class=\"line\">          &#123;</span><br><span class=\"line\">            loader: <span class=\"string\">'css-loader'</span></span><br><span class=\"line\">          &#125;,</span><br><span class=\"line\">          &#123;</span><br><span class=\"line\">            loader: <span class=\"string\">'sass-loader'</span></span><br><span class=\"line\">          &#125;</span><br><span class=\"line\">        ]</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    ]</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  plugins: [<span class=\"keyword\">new</span> VueLoaderPlugin()]</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"然后向webpack添加开发环境运行的配置\"><a href=\"#然后向webpack添加开发环境运行的配置\" class=\"headerlink\" title=\"然后向webpack添加开发环境运行的配置\"></a>然后向webpack添加开发环境运行的配置</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm i -D clean-webpack-plugin html-webpack-plugin webpack-dev-server</span><br></pre></td></tr></table></figure>\n<p>使用webpack-dev-server来启动开发环境，使用webpack进行打包。在这个操作当中，<code>html-webpack-plugin</code>需要一个模板来定义文件的结构，因为我们需要的不是一个空白模板，而希望模板中至少要有一个<code>&lt;div id=&quot;app&quot;&gt;&lt;/div&gt;</code>。根据插件，我们还需要在跟目录创建一个public文件夹。里面放的是渲染<code>html-webpack-plugin</code>插件的模板。那么现在，整个项目结构变成了这样</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">│  index.js</span><br><span class=\"line\">│  package.json</span><br><span class=\"line\">│  webpack.config.js</span><br><span class=\"line\">│</span><br><span class=\"line\">├─public</span><br><span class=\"line\">│      index.html</span><br><span class=\"line\">│</span><br><span class=\"line\">└─src</span><br><span class=\"line\">        index.js</span><br></pre></td></tr></table></figure>\n<p>然后向<code>package.json</code>添加执行命令</p>\n<figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"comment\">// ...</span></span><br><span class=\"line\">  <span class=\"attr\">\"scripts\"</span>: &#123;</span><br><span class=\"line\">    <span class=\"attr\">\"build\"</span>: <span class=\"string\">\"webpack --config webpack.config.js\"</span>,</span><br><span class=\"line\">    <span class=\"attr\">\"dev\"</span>: <span class=\"string\">\"webpack-dev-server --open\"</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"comment\">// ...</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>并且向<code>webpack.config.json</code>继续补充</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> path = <span class=\"built_in\">require</span>(<span class=\"string\">'path'</span>)</span><br><span class=\"line\"><span class=\"keyword\">const</span> HtmlWebpackPlugin = <span class=\"built_in\">require</span>(<span class=\"string\">'html-webpack-plugin'</span>);</span><br><span class=\"line\"><span class=\"keyword\">const</span> CleanWebpackPlugin = <span class=\"built_in\">require</span>(<span class=\"string\">'clean-webpack-plugin'</span>);</span><br><span class=\"line\"><span class=\"keyword\">const</span> VueLoaderPlugin = <span class=\"built_in\">require</span>(<span class=\"string\">'vue-loader/lib/plugin'</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">module</span>.exports = &#123;</span><br><span class=\"line\">  entry: <span class=\"string\">'./src/index.js'</span>,</span><br><span class=\"line\">  output: &#123;</span><br><span class=\"line\">    path: path.resolve(__dirname, <span class=\"string\">'./dist'</span>),</span><br><span class=\"line\">    filename: <span class=\"string\">'index.js'</span></span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  devServer: &#123;</span><br><span class=\"line\">    contentBase:  <span class=\"string\">'./dist'</span></span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  <span class=\"built_in\">module</span>: &#123;</span><br><span class=\"line\">    rules: [</span><br><span class=\"line\">      &#123;</span><br><span class=\"line\">        test: <span class=\"regexp\">/\\.js$/</span>,</span><br><span class=\"line\">        use: [</span><br><span class=\"line\">          &#123;</span><br><span class=\"line\">            loader: <span class=\"string\">'babel-loader'</span></span><br><span class=\"line\">          &#125;</span><br><span class=\"line\">        ]</span><br><span class=\"line\">      &#125;,</span><br><span class=\"line\">      &#123;</span><br><span class=\"line\">        test: <span class=\"regexp\">/\\.vue$/</span>,</span><br><span class=\"line\">        use: [</span><br><span class=\"line\">          &#123;</span><br><span class=\"line\">            loader: <span class=\"string\">'vue-loader'</span></span><br><span class=\"line\">          &#125;</span><br><span class=\"line\">        ]</span><br><span class=\"line\">      &#125;,</span><br><span class=\"line\">      &#123;</span><br><span class=\"line\">        test: <span class=\"regexp\">/\\.(css|scss|sass)$/</span>,</span><br><span class=\"line\">        use: [</span><br><span class=\"line\">          &#123;</span><br><span class=\"line\">            loader: <span class=\"string\">'style-loader'</span></span><br><span class=\"line\">          &#125;,</span><br><span class=\"line\">          &#123;</span><br><span class=\"line\">            loader: <span class=\"string\">'css-loader'</span></span><br><span class=\"line\">          &#125;,</span><br><span class=\"line\">          &#123;</span><br><span class=\"line\">            loader: <span class=\"string\">'sass-loader'</span></span><br><span class=\"line\">          &#125;</span><br><span class=\"line\">        ]</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    ]</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  plugins: [</span><br><span class=\"line\">    <span class=\"keyword\">new</span> VueLoaderPlugin(),</span><br><span class=\"line\">    <span class=\"keyword\">new</span> CleanWebpackPlugin(),</span><br><span class=\"line\">    <span class=\"keyword\">new</span> HtmlWebpackPlugin(&#123;</span><br><span class=\"line\">      template: <span class=\"string\">'public/index.html'</span>,</span><br><span class=\"line\">      title: <span class=\"string\">'hello, vue_title'</span></span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">  ]</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"创建真正的vue脚手架\"><a href=\"#创建真正的vue脚手架\" class=\"headerlink\" title=\"创建真正的vue脚手架\"></a>创建真正的vue脚手架</h3><p>如果你能执行到上面的步骤结束没有出错，那么实际上你的webpack已经没有问题了。虽然看上去是如此的简单。接下来我们只需要把精力放到如何编译vue单文件组件。在src文件夹中创建一个index.vue文件如下</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;template&gt;</span><br><span class=\"line\">  &lt;div&gt;</span><br><span class=\"line\">    &#123;&#123;msg&#125;&#125;</span><br><span class=\"line\">  &lt;/div&gt;</span><br><span class=\"line\">&lt;/template&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;script&gt;</span><br><span class=\"line\">export default &#123;</span><br><span class=\"line\">  data() &#123;</span><br><span class=\"line\">    return &#123;</span><br><span class=\"line\">      msg: &apos;hello, vue!!!&apos;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">&lt;/script&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;style lang=&quot;scss&quot; scoped&gt;</span><br><span class=\"line\">div &#123;</span><br><span class=\"line\">  color: red</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">&lt;/style&gt;</span><br></pre></td></tr></table></figure>\n<p>并编辑同目录中的index.js</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> Vue <span class=\"keyword\">from</span> <span class=\"string\">'vue'</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> App <span class=\"keyword\">from</span> <span class=\"string\">'./index.vue'</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">new</span> Vue(&#123;</span><br><span class=\"line\">  render: <span class=\"function\"><span class=\"params\">h</span> =&gt;</span> h(App)</span><br><span class=\"line\">&#125;).$mount(<span class=\"string\">'#app'</span>)</span><br></pre></td></tr></table></figure>\n<p>最后，我们的项目长成了这样</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">│  index.js</span><br><span class=\"line\">│  package.json</span><br><span class=\"line\">│  webpack.config.js</span><br><span class=\"line\">│</span><br><span class=\"line\">├─public</span><br><span class=\"line\">│      index.html</span><br><span class=\"line\">└─src</span><br><span class=\"line\">        index.js</span><br><span class=\"line\">        index.vue</span><br></pre></td></tr></table></figure>\n<p>是不是发现和vue-cli3.x脚手架的结构完全一样？事实上vue-cli3.x就是这个结构来的。只不过它把webpack.config.js安装到了vue-cli-service里，暴露出来vue.config.js来管理。</p>\n<h2 id=\"最后，这个模板的地址在这里\"><a href=\"#最后，这个模板的地址在这里\" class=\"headerlink\" title=\"最后，这个模板的地址在这里\"></a>最后，这个模板的地址<a href=\"https://github.com/lost-dream/webpack-demo\" target=\"_blank\" rel=\"noopener\">在这里</a></h2>"},{"title":"从零搭建Vue UI组件库(三)","date":"2021-04-15T08:42:30.000Z","description":"尝试搭建自己的Vue UI 组件库, 持续更新(大概)","_content":"\n## 加入 typescript/sass\n\n### 添加 typescript、ts-loader、sass、sass-loader\n\n```\nyarn add -D typescript ts-loader sass sass-loader -W\n```\n\n> ts-loader@8.1.0 报错，这里选择了 v8.0.3; sass-loader@11.0.1报错，选择了 v10.1.1,如果你的 loader 运行没有报错可以忽略。\n\n### 添加 tsconfig.json\n\n```json\n{\n  \"compilerOptions\": {\n    \"module\": \"ESNext\",\n    \"declaration\": true,\n    \"noImplicitAny\": false,\n    \"removeComments\": true,\n    \"moduleResolution\": \"node\",\n    \"esModuleInterop\": true,\n    \"jsx\": \"preserve\",\n    \"noLib\": false,\n    \"target\": \"es6\",\n    \"baseUrl\": \".\",\n    \"sourceMap\": true,\n    \"lib\": [\"ESNext\", \"DOM\"],\n    \"allowSyntheticDefaultImports\": true,\n    \"paths\": {\n      \"@packages/*\": [\"packages/*\"],\n      \"@website/*\": [\"website/*\"]\n    }\n  },\n  \"exclude\": [\"node_modules\", \"lib\"]\n}\n```\n\n### 添加 ts 声明文件\n\n根目录新建`types`文件夹，ts 的所有声明放在这里。目前只新增`shims-vue.d.ts`\n\n```typescript\n  declare module '*.vue' {\n    import { defineComponent } from 'vue'\n    const Component: ReturnType<typeof defineComponent>\n    export default Component\n  }\n```\n\n### 修改对应 js 文件为 ts 文件, css改为 scss\n\n把 `packages`对应包的 js文件和`website`下的`index.js`全部改为 ts 结尾；所有 vue 组件的 `script` 增加`lang=“ts”`，`style`增加`lang=”scss“`\n\n### 修改 webpack 配置\n\n增加 ts-loader 和 sass-loader配置；修改入口文件为 ts 结尾；添加`resolve.extensions`，支持 ts 文件引用\n\n```diff\n// build/webpack.config.base.js\n'use strict'\nconst HtmlWebpackPlugin = require('html-webpack-plugin')\nconst { VueLoaderPlugin } = require('vue-loader')\nconst path = require('path')\n\nmodule.exports = {\n-  entry: path.resolve(__dirname, '../website/index.js'),\n+  entry: path.resolve(__dirname, '../website/index.ts'),\n  output: {\n    path: path.resolve(__dirname, '../dist'),\n    filename: 'index.js'\n  },\n+  resolve: {\n+    alias: {\n+      '@package': path.resolve(__dirname, '../packages'),\n+      '@website': path.resolve(__dirname, '../website')\n+    },\n+    extensions: ['.ts', '.js', '.json']\n+  },\n  module: {\n    rules: [\n      {\n        test: /\\.js$/,\n        loader: 'babel-loader',\n        exclude: /node_modules/\n      },\n      {\n        test: /\\.vue$/,\n        loader: 'vue-loader'\n      },\n+      {\n+        test: /\\.scss$/,\n+        use: [\n+          { loader: 'style-loader' },\n+          {\n+            loader: 'css-loader',\n+            options: { sourceMap: true }\n+          },\n+          {\n+            loader: 'sass-loader'\n+          }\n+        ]\n+      },\n+      {\n+        test: /\\.tsx?$/,\n+        use: [\n+          {\n+            loader: 'babel-loader'\n+          },\n+          {\n+            loader: 'ts-loader',\n+            options: {\n+              transpileOnly: true\n+            }\n+          }\n+        ],\n+        exclude: /node_modules/\n+      }\n    ]\n  },\n  plugins: [\n    new HtmlWebpackPlugin({\n      template: './website/index.html',\n      filename: './index.html'\n    }),\n    new VueLoaderPlugin()\n  ]\n}\n\n// build/webpack.config.build.js\n'use strict'\nconst path = require('path')\nconst { VueLoaderPlugin } = require('vue-loader')\n\nmodule.exports = {\n  mode: 'production',\n  entry: {\n-    adminUI: './packages/admin-ui/index.js'\n+    adminUI: './packages/admin-ui/index.ts'\n  },\n  output: {\n    path: path.resolve(__dirname, '../lib'), // 出口目录\n    publicPath: '/lib/',\n    library: 'adminUI', // 包名\n    filename: 'index.js',\n    libraryTarget: 'umd',\n    umdNamedDefine: true // 会对 UMD 的构建过程中的 AMD 模块进行命名。否则就使用匿名的 define\n  },\n+  resolve: {\n+    alias: {\n+      '@package': path.resolve(__dirname, '../packages'),\n+      '@website': path.resolve(__dirname, '../website')\n+    },\n+    extensions: ['.ts', '.js', '.json']\n+  },\n  externals: {\n    vue: {\n      root: 'Vue',\n      commonjs: 'vue',\n      commonjs2: 'vue',\n      amd: 'vue'\n    }\n  },\n  optimization: {\n    splitChunks: {\n      cacheGroups: {\n        commons: {\n          test: /[\\\\/]node_modules[\\\\/]/,\n          name: 'vendor',\n          chunks: 'all'\n        }\n      }\n    }\n  },\n  module: {\n    rules: [\n      {\n        test: /\\.js$/,\n        loader: 'babel-loader',\n        exclude: /node_modules/\n      },\n      {\n        test: /\\.vue$/,\n        loader: 'vue-loader'\n      },\n+      {\n+        test: /\\.scss$/,\n+        use: [\n+          { loader: 'style-loader' },\n+          {\n+            loader: 'css-loader',\n+            options: { sourceMap: true }\n+          },\n+          {\n+            loader: 'sass-loader'\n+          }\n+        ]\n+      },\n+      {\n+        test: /\\.tsx?$/,\n+        use: [\n+          {\n+            loader: 'babel-loader'\n+          },\n+          {\n+            loader: 'ts-loader',\n+            options: {\n+              transpileOnly: true\n+            }\n+          }\n+        ],\n+        exclude: /node_modules/\n+      }\n    ]\n  },\n  plugins: [new VueLoaderPlugin()]\n}\n```\n","source":"_posts/从零搭建Vue UI组件库(三).md","raw":"---\ntitle: 从零搭建Vue UI组件库(三)\ndate: 2021-04-15 16:42:30\ntags: [Vue, adminUI]\ncategories: [adminUI]\ndescription: 尝试搭建自己的Vue UI 组件库, 持续更新(大概)\n---\n\n## 加入 typescript/sass\n\n### 添加 typescript、ts-loader、sass、sass-loader\n\n```\nyarn add -D typescript ts-loader sass sass-loader -W\n```\n\n> ts-loader@8.1.0 报错，这里选择了 v8.0.3; sass-loader@11.0.1报错，选择了 v10.1.1,如果你的 loader 运行没有报错可以忽略。\n\n### 添加 tsconfig.json\n\n```json\n{\n  \"compilerOptions\": {\n    \"module\": \"ESNext\",\n    \"declaration\": true,\n    \"noImplicitAny\": false,\n    \"removeComments\": true,\n    \"moduleResolution\": \"node\",\n    \"esModuleInterop\": true,\n    \"jsx\": \"preserve\",\n    \"noLib\": false,\n    \"target\": \"es6\",\n    \"baseUrl\": \".\",\n    \"sourceMap\": true,\n    \"lib\": [\"ESNext\", \"DOM\"],\n    \"allowSyntheticDefaultImports\": true,\n    \"paths\": {\n      \"@packages/*\": [\"packages/*\"],\n      \"@website/*\": [\"website/*\"]\n    }\n  },\n  \"exclude\": [\"node_modules\", \"lib\"]\n}\n```\n\n### 添加 ts 声明文件\n\n根目录新建`types`文件夹，ts 的所有声明放在这里。目前只新增`shims-vue.d.ts`\n\n```typescript\n  declare module '*.vue' {\n    import { defineComponent } from 'vue'\n    const Component: ReturnType<typeof defineComponent>\n    export default Component\n  }\n```\n\n### 修改对应 js 文件为 ts 文件, css改为 scss\n\n把 `packages`对应包的 js文件和`website`下的`index.js`全部改为 ts 结尾；所有 vue 组件的 `script` 增加`lang=“ts”`，`style`增加`lang=”scss“`\n\n### 修改 webpack 配置\n\n增加 ts-loader 和 sass-loader配置；修改入口文件为 ts 结尾；添加`resolve.extensions`，支持 ts 文件引用\n\n```diff\n// build/webpack.config.base.js\n'use strict'\nconst HtmlWebpackPlugin = require('html-webpack-plugin')\nconst { VueLoaderPlugin } = require('vue-loader')\nconst path = require('path')\n\nmodule.exports = {\n-  entry: path.resolve(__dirname, '../website/index.js'),\n+  entry: path.resolve(__dirname, '../website/index.ts'),\n  output: {\n    path: path.resolve(__dirname, '../dist'),\n    filename: 'index.js'\n  },\n+  resolve: {\n+    alias: {\n+      '@package': path.resolve(__dirname, '../packages'),\n+      '@website': path.resolve(__dirname, '../website')\n+    },\n+    extensions: ['.ts', '.js', '.json']\n+  },\n  module: {\n    rules: [\n      {\n        test: /\\.js$/,\n        loader: 'babel-loader',\n        exclude: /node_modules/\n      },\n      {\n        test: /\\.vue$/,\n        loader: 'vue-loader'\n      },\n+      {\n+        test: /\\.scss$/,\n+        use: [\n+          { loader: 'style-loader' },\n+          {\n+            loader: 'css-loader',\n+            options: { sourceMap: true }\n+          },\n+          {\n+            loader: 'sass-loader'\n+          }\n+        ]\n+      },\n+      {\n+        test: /\\.tsx?$/,\n+        use: [\n+          {\n+            loader: 'babel-loader'\n+          },\n+          {\n+            loader: 'ts-loader',\n+            options: {\n+              transpileOnly: true\n+            }\n+          }\n+        ],\n+        exclude: /node_modules/\n+      }\n    ]\n  },\n  plugins: [\n    new HtmlWebpackPlugin({\n      template: './website/index.html',\n      filename: './index.html'\n    }),\n    new VueLoaderPlugin()\n  ]\n}\n\n// build/webpack.config.build.js\n'use strict'\nconst path = require('path')\nconst { VueLoaderPlugin } = require('vue-loader')\n\nmodule.exports = {\n  mode: 'production',\n  entry: {\n-    adminUI: './packages/admin-ui/index.js'\n+    adminUI: './packages/admin-ui/index.ts'\n  },\n  output: {\n    path: path.resolve(__dirname, '../lib'), // 出口目录\n    publicPath: '/lib/',\n    library: 'adminUI', // 包名\n    filename: 'index.js',\n    libraryTarget: 'umd',\n    umdNamedDefine: true // 会对 UMD 的构建过程中的 AMD 模块进行命名。否则就使用匿名的 define\n  },\n+  resolve: {\n+    alias: {\n+      '@package': path.resolve(__dirname, '../packages'),\n+      '@website': path.resolve(__dirname, '../website')\n+    },\n+    extensions: ['.ts', '.js', '.json']\n+  },\n  externals: {\n    vue: {\n      root: 'Vue',\n      commonjs: 'vue',\n      commonjs2: 'vue',\n      amd: 'vue'\n    }\n  },\n  optimization: {\n    splitChunks: {\n      cacheGroups: {\n        commons: {\n          test: /[\\\\/]node_modules[\\\\/]/,\n          name: 'vendor',\n          chunks: 'all'\n        }\n      }\n    }\n  },\n  module: {\n    rules: [\n      {\n        test: /\\.js$/,\n        loader: 'babel-loader',\n        exclude: /node_modules/\n      },\n      {\n        test: /\\.vue$/,\n        loader: 'vue-loader'\n      },\n+      {\n+        test: /\\.scss$/,\n+        use: [\n+          { loader: 'style-loader' },\n+          {\n+            loader: 'css-loader',\n+            options: { sourceMap: true }\n+          },\n+          {\n+            loader: 'sass-loader'\n+          }\n+        ]\n+      },\n+      {\n+        test: /\\.tsx?$/,\n+        use: [\n+          {\n+            loader: 'babel-loader'\n+          },\n+          {\n+            loader: 'ts-loader',\n+            options: {\n+              transpileOnly: true\n+            }\n+          }\n+        ],\n+        exclude: /node_modules/\n+      }\n    ]\n  },\n  plugins: [new VueLoaderPlugin()]\n}\n```\n","slug":"从零搭建Vue UI组件库(三)","published":1,"updated":"2021-06-25T11:19:55.444Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckqc904p2001fwotvjq93l7wo","content":"<h2 id=\"加入-typescript-sass\"><a href=\"#加入-typescript-sass\" class=\"headerlink\" title=\"加入 typescript/sass\"></a>加入 typescript/sass</h2><h3 id=\"添加-typescript、ts-loader、sass、sass-loader\"><a href=\"#添加-typescript、ts-loader、sass、sass-loader\" class=\"headerlink\" title=\"添加 typescript、ts-loader、sass、sass-loader\"></a>添加 typescript、ts-loader、sass、sass-loader</h3><div class=\"code-panel__wrapper\" autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\"><header class=\"mac-panel\"><span class=\"doc-path\"></span><span class=\"mac-panel__language\">PLAIN</span></header><figure class=\"iseeu highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">yarn add -D typescript ts-loader sass sass-loader -W</span><br></pre></td></tr></table></figure></div>\n<blockquote>\n<p><a href=\"mailto:ts-loader@8.1.0\" target=\"_blank\" rel=\"noopener\">ts-loader@8.1.0</a> 报错，这里选择了 v8.0.3; <a href=\"mailto:sass-loader@11.0.1\" target=\"_blank\" rel=\"noopener\">sass-loader@11.0.1</a>报错，选择了 v10.1.1,如果你的 loader 运行没有报错可以忽略。</p>\n</blockquote>\n<h3 id=\"添加-tsconfig-json\"><a href=\"#添加-tsconfig-json\" class=\"headerlink\" title=\"添加 tsconfig.json\"></a>添加 tsconfig.json</h3><div class=\"code-panel__wrapper\" autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\"><header class=\"mac-panel\"><span class=\"doc-path\"></span><span class=\"mac-panel__language\">JSON</span></header><figure class=\"iseeu highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"attr\">\"compilerOptions\"</span>: &#123;</span><br><span class=\"line\">    <span class=\"attr\">\"module\"</span>: <span class=\"string\">\"ESNext\"</span>,</span><br><span class=\"line\">    <span class=\"attr\">\"declaration\"</span>: <span class=\"literal\">true</span>,</span><br><span class=\"line\">    <span class=\"attr\">\"noImplicitAny\"</span>: <span class=\"literal\">false</span>,</span><br><span class=\"line\">    <span class=\"attr\">\"removeComments\"</span>: <span class=\"literal\">true</span>,</span><br><span class=\"line\">    <span class=\"attr\">\"moduleResolution\"</span>: <span class=\"string\">\"node\"</span>,</span><br><span class=\"line\">    <span class=\"attr\">\"esModuleInterop\"</span>: <span class=\"literal\">true</span>,</span><br><span class=\"line\">    <span class=\"attr\">\"jsx\"</span>: <span class=\"string\">\"preserve\"</span>,</span><br><span class=\"line\">    <span class=\"attr\">\"noLib\"</span>: <span class=\"literal\">false</span>,</span><br><span class=\"line\">    <span class=\"attr\">\"target\"</span>: <span class=\"string\">\"es6\"</span>,</span><br><span class=\"line\">    <span class=\"attr\">\"baseUrl\"</span>: <span class=\"string\">\".\"</span>,</span><br><span class=\"line\">    <span class=\"attr\">\"sourceMap\"</span>: <span class=\"literal\">true</span>,</span><br><span class=\"line\">    <span class=\"attr\">\"lib\"</span>: [<span class=\"string\">\"ESNext\"</span>, <span class=\"string\">\"DOM\"</span>],</span><br><span class=\"line\">    <span class=\"attr\">\"allowSyntheticDefaultImports\"</span>: <span class=\"literal\">true</span>,</span><br><span class=\"line\">    <span class=\"attr\">\"paths\"</span>: &#123;</span><br><span class=\"line\">      <span class=\"attr\">\"@packages/*\"</span>: [<span class=\"string\">\"packages/*\"</span>],</span><br><span class=\"line\">      <span class=\"attr\">\"@website/*\"</span>: [<span class=\"string\">\"website/*\"</span>]</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  <span class=\"attr\">\"exclude\"</span>: [<span class=\"string\">\"node_modules\"</span>, <span class=\"string\">\"lib\"</span>]</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></div>\n<h3 id=\"添加-ts-声明文件\"><a href=\"#添加-ts-声明文件\" class=\"headerlink\" title=\"添加 ts 声明文件\"></a>添加 ts 声明文件</h3><p>根目录新建<code>types</code>文件夹，ts 的所有声明放在这里。目前只新增<code>shims-vue.d.ts</code></p>\n<div class=\"code-panel__wrapper\" autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\"><header class=\"mac-panel\"><span class=\"doc-path\"></span><span class=\"mac-panel__language\">TYPESCRIPT</span></header><figure class=\"iseeu highlight typescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">declare</span> <span class=\"keyword\">module</span> '*.vue' &#123;</span><br><span class=\"line\">  <span class=\"keyword\">import</span> &#123; defineComponent &#125; <span class=\"keyword\">from</span> <span class=\"string\">'vue'</span></span><br><span class=\"line\">  <span class=\"keyword\">const</span> Component: ReturnType&lt;<span class=\"keyword\">typeof</span> defineComponent&gt;</span><br><span class=\"line\">  <span class=\"keyword\">export</span> <span class=\"keyword\">default</span> Component</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></div>\n<h3 id=\"修改对应-js-文件为-ts-文件-css改为-scss\"><a href=\"#修改对应-js-文件为-ts-文件-css改为-scss\" class=\"headerlink\" title=\"修改对应 js 文件为 ts 文件, css改为 scss\"></a>修改对应 js 文件为 ts 文件, css改为 scss</h3><p>把 <code>packages</code>对应包的 js文件和<code>website</code>下的<code>index.js</code>全部改为 ts 结尾；所有 vue 组件的 <code>script</code> 增加<code>lang=“ts”</code>，<code>style</code>增加<code>lang=”scss“</code></p>\n<h3 id=\"修改-webpack-配置\"><a href=\"#修改-webpack-配置\" class=\"headerlink\" title=\"修改 webpack 配置\"></a>修改 webpack 配置</h3><p>增加 ts-loader 和 sass-loader配置；修改入口文件为 ts 结尾；添加<code>resolve.extensions</code>，支持 ts 文件引用</p>\n<div class=\"code-panel__wrapper\" autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\"><header class=\"mac-panel\"><span class=\"doc-path\"></span><span class=\"mac-panel__language\">DIFF</span></header><figure class=\"iseeu highlight diff\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">// build/webpack.config.base.js</span><br><span class=\"line\">'use strict'</span><br><span class=\"line\">const HtmlWebpackPlugin = require('html-webpack-plugin')</span><br><span class=\"line\">const &#123; VueLoaderPlugin &#125; = require('vue-loader')</span><br><span class=\"line\">const path = require('path')</span><br><span class=\"line\"></span><br><span class=\"line\">module.exports = &#123;</span><br><span class=\"line\"><span class=\"deletion\">-  entry: path.resolve(__dirname, '../website/index.js'),</span></span><br><span class=\"line\"><span class=\"addition\">+  entry: path.resolve(__dirname, '../website/index.ts'),</span></span><br><span class=\"line\">  output: &#123;</span><br><span class=\"line\">    path: path.resolve(__dirname, '../dist'),</span><br><span class=\"line\">    filename: 'index.js'</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\"><span class=\"addition\">+  resolve: &#123;</span></span><br><span class=\"line\"><span class=\"addition\">+    alias: &#123;</span></span><br><span class=\"line\"><span class=\"addition\">+      '@package': path.resolve(__dirname, '../packages'),</span></span><br><span class=\"line\"><span class=\"addition\">+      '@website': path.resolve(__dirname, '../website')</span></span><br><span class=\"line\"><span class=\"addition\">+    &#125;,</span></span><br><span class=\"line\"><span class=\"addition\">+    extensions: ['.ts', '.js', '.json']</span></span><br><span class=\"line\"><span class=\"addition\">+  &#125;,</span></span><br><span class=\"line\">  module: &#123;</span><br><span class=\"line\">    rules: [</span><br><span class=\"line\">      &#123;</span><br><span class=\"line\">        test: /\\.js$/,</span><br><span class=\"line\">        loader: 'babel-loader',</span><br><span class=\"line\">        exclude: /node_modules/</span><br><span class=\"line\">      &#125;,</span><br><span class=\"line\">      &#123;</span><br><span class=\"line\">        test: /\\.vue$/,</span><br><span class=\"line\">        loader: 'vue-loader'</span><br><span class=\"line\">      &#125;,</span><br><span class=\"line\"><span class=\"addition\">+      &#123;</span></span><br><span class=\"line\"><span class=\"addition\">+        test: /\\.scss$/,</span></span><br><span class=\"line\"><span class=\"addition\">+        use: [</span></span><br><span class=\"line\"><span class=\"addition\">+          &#123; loader: 'style-loader' &#125;,</span></span><br><span class=\"line\"><span class=\"addition\">+          &#123;</span></span><br><span class=\"line\"><span class=\"addition\">+            loader: 'css-loader',</span></span><br><span class=\"line\"><span class=\"addition\">+            options: &#123; sourceMap: true &#125;</span></span><br><span class=\"line\"><span class=\"addition\">+          &#125;,</span></span><br><span class=\"line\"><span class=\"addition\">+          &#123;</span></span><br><span class=\"line\"><span class=\"addition\">+            loader: 'sass-loader'</span></span><br><span class=\"line\"><span class=\"addition\">+          &#125;</span></span><br><span class=\"line\"><span class=\"addition\">+        ]</span></span><br><span class=\"line\"><span class=\"addition\">+      &#125;,</span></span><br><span class=\"line\"><span class=\"addition\">+      &#123;</span></span><br><span class=\"line\"><span class=\"addition\">+        test: /\\.tsx?$/,</span></span><br><span class=\"line\"><span class=\"addition\">+        use: [</span></span><br><span class=\"line\"><span class=\"addition\">+          &#123;</span></span><br><span class=\"line\"><span class=\"addition\">+            loader: 'babel-loader'</span></span><br><span class=\"line\"><span class=\"addition\">+          &#125;,</span></span><br><span class=\"line\"><span class=\"addition\">+          &#123;</span></span><br><span class=\"line\"><span class=\"addition\">+            loader: 'ts-loader',</span></span><br><span class=\"line\"><span class=\"addition\">+            options: &#123;</span></span><br><span class=\"line\"><span class=\"addition\">+              transpileOnly: true</span></span><br><span class=\"line\"><span class=\"addition\">+            &#125;</span></span><br><span class=\"line\"><span class=\"addition\">+          &#125;</span></span><br><span class=\"line\"><span class=\"addition\">+        ],</span></span><br><span class=\"line\"><span class=\"addition\">+        exclude: /node_modules/</span></span><br><span class=\"line\"><span class=\"addition\">+      &#125;</span></span><br><span class=\"line\">    ]</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  plugins: [</span><br><span class=\"line\">    new HtmlWebpackPlugin(&#123;</span><br><span class=\"line\">      template: './website/index.html',</span><br><span class=\"line\">      filename: './index.html'</span><br><span class=\"line\">    &#125;),</span><br><span class=\"line\">    new VueLoaderPlugin()</span><br><span class=\"line\">  ]</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">// build/webpack.config.build.js</span><br><span class=\"line\">'use strict'</span><br><span class=\"line\">const path = require('path')</span><br><span class=\"line\">const &#123; VueLoaderPlugin &#125; = require('vue-loader')</span><br><span class=\"line\"></span><br><span class=\"line\">module.exports = &#123;</span><br><span class=\"line\">  mode: 'production',</span><br><span class=\"line\">  entry: &#123;</span><br><span class=\"line\"><span class=\"deletion\">-    adminUI: './packages/admin-ui/index.js'</span></span><br><span class=\"line\"><span class=\"addition\">+    adminUI: './packages/admin-ui/index.ts'</span></span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  output: &#123;</span><br><span class=\"line\">    path: path.resolve(__dirname, '../lib'), // 出口目录</span><br><span class=\"line\">    publicPath: '/lib/',</span><br><span class=\"line\">    library: 'adminUI', // 包名</span><br><span class=\"line\">    filename: 'index.js',</span><br><span class=\"line\">    libraryTarget: 'umd',</span><br><span class=\"line\">    umdNamedDefine: true // 会对 UMD 的构建过程中的 AMD 模块进行命名。否则就使用匿名的 define</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\"><span class=\"addition\">+  resolve: &#123;</span></span><br><span class=\"line\"><span class=\"addition\">+    alias: &#123;</span></span><br><span class=\"line\"><span class=\"addition\">+      '@package': path.resolve(__dirname, '../packages'),</span></span><br><span class=\"line\"><span class=\"addition\">+      '@website': path.resolve(__dirname, '../website')</span></span><br><span class=\"line\"><span class=\"addition\">+    &#125;,</span></span><br><span class=\"line\"><span class=\"addition\">+    extensions: ['.ts', '.js', '.json']</span></span><br><span class=\"line\"><span class=\"addition\">+  &#125;,</span></span><br><span class=\"line\">  externals: &#123;</span><br><span class=\"line\">    vue: &#123;</span><br><span class=\"line\">      root: 'Vue',</span><br><span class=\"line\">      commonjs: 'vue',</span><br><span class=\"line\">      commonjs2: 'vue',</span><br><span class=\"line\">      amd: 'vue'</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  optimization: &#123;</span><br><span class=\"line\">    splitChunks: &#123;</span><br><span class=\"line\">      cacheGroups: &#123;</span><br><span class=\"line\">        commons: &#123;</span><br><span class=\"line\">          test: /[\\\\/]node_modules[\\\\/]/,</span><br><span class=\"line\">          name: 'vendor',</span><br><span class=\"line\">          chunks: 'all'</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  module: &#123;</span><br><span class=\"line\">    rules: [</span><br><span class=\"line\">      &#123;</span><br><span class=\"line\">        test: /\\.js$/,</span><br><span class=\"line\">        loader: 'babel-loader',</span><br><span class=\"line\">        exclude: /node_modules/</span><br><span class=\"line\">      &#125;,</span><br><span class=\"line\">      &#123;</span><br><span class=\"line\">        test: /\\.vue$/,</span><br><span class=\"line\">        loader: 'vue-loader'</span><br><span class=\"line\">      &#125;,</span><br><span class=\"line\"><span class=\"addition\">+      &#123;</span></span><br><span class=\"line\"><span class=\"addition\">+        test: /\\.scss$/,</span></span><br><span class=\"line\"><span class=\"addition\">+        use: [</span></span><br><span class=\"line\"><span class=\"addition\">+          &#123; loader: 'style-loader' &#125;,</span></span><br><span class=\"line\"><span class=\"addition\">+          &#123;</span></span><br><span class=\"line\"><span class=\"addition\">+            loader: 'css-loader',</span></span><br><span class=\"line\"><span class=\"addition\">+            options: &#123; sourceMap: true &#125;</span></span><br><span class=\"line\"><span class=\"addition\">+          &#125;,</span></span><br><span class=\"line\"><span class=\"addition\">+          &#123;</span></span><br><span class=\"line\"><span class=\"addition\">+            loader: 'sass-loader'</span></span><br><span class=\"line\"><span class=\"addition\">+          &#125;</span></span><br><span class=\"line\"><span class=\"addition\">+        ]</span></span><br><span class=\"line\"><span class=\"addition\">+      &#125;,</span></span><br><span class=\"line\"><span class=\"addition\">+      &#123;</span></span><br><span class=\"line\"><span class=\"addition\">+        test: /\\.tsx?$/,</span></span><br><span class=\"line\"><span class=\"addition\">+        use: [</span></span><br><span class=\"line\"><span class=\"addition\">+          &#123;</span></span><br><span class=\"line\"><span class=\"addition\">+            loader: 'babel-loader'</span></span><br><span class=\"line\"><span class=\"addition\">+          &#125;,</span></span><br><span class=\"line\"><span class=\"addition\">+          &#123;</span></span><br><span class=\"line\"><span class=\"addition\">+            loader: 'ts-loader',</span></span><br><span class=\"line\"><span class=\"addition\">+            options: &#123;</span></span><br><span class=\"line\"><span class=\"addition\">+              transpileOnly: true</span></span><br><span class=\"line\"><span class=\"addition\">+            &#125;</span></span><br><span class=\"line\"><span class=\"addition\">+          &#125;</span></span><br><span class=\"line\"><span class=\"addition\">+        ],</span></span><br><span class=\"line\"><span class=\"addition\">+        exclude: /node_modules/</span></span><br><span class=\"line\"><span class=\"addition\">+      &#125;</span></span><br><span class=\"line\">    ]</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  plugins: [new VueLoaderPlugin()]</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></div>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"加入-typescript-sass\"><a href=\"#加入-typescript-sass\" class=\"headerlink\" title=\"加入 typescript/sass\"></a>加入 typescript/sass</h2><h3 id=\"添加-typescript、ts-loader、sass、sass-loader\"><a href=\"#添加-typescript、ts-loader、sass、sass-loader\" class=\"headerlink\" title=\"添加 typescript、ts-loader、sass、sass-loader\"></a>添加 typescript、ts-loader、sass、sass-loader</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">yarn add -D typescript ts-loader sass sass-loader -W</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p><a href=\"mailto:ts-loader@8.1.0\" target=\"_blank\" rel=\"noopener\">ts-loader@8.1.0</a> 报错，这里选择了 v8.0.3; <a href=\"mailto:sass-loader@11.0.1\" target=\"_blank\" rel=\"noopener\">sass-loader@11.0.1</a>报错，选择了 v10.1.1,如果你的 loader 运行没有报错可以忽略。</p>\n</blockquote>\n<h3 id=\"添加-tsconfig-json\"><a href=\"#添加-tsconfig-json\" class=\"headerlink\" title=\"添加 tsconfig.json\"></a>添加 tsconfig.json</h3><figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"attr\">\"compilerOptions\"</span>: &#123;</span><br><span class=\"line\">    <span class=\"attr\">\"module\"</span>: <span class=\"string\">\"ESNext\"</span>,</span><br><span class=\"line\">    <span class=\"attr\">\"declaration\"</span>: <span class=\"literal\">true</span>,</span><br><span class=\"line\">    <span class=\"attr\">\"noImplicitAny\"</span>: <span class=\"literal\">false</span>,</span><br><span class=\"line\">    <span class=\"attr\">\"removeComments\"</span>: <span class=\"literal\">true</span>,</span><br><span class=\"line\">    <span class=\"attr\">\"moduleResolution\"</span>: <span class=\"string\">\"node\"</span>,</span><br><span class=\"line\">    <span class=\"attr\">\"esModuleInterop\"</span>: <span class=\"literal\">true</span>,</span><br><span class=\"line\">    <span class=\"attr\">\"jsx\"</span>: <span class=\"string\">\"preserve\"</span>,</span><br><span class=\"line\">    <span class=\"attr\">\"noLib\"</span>: <span class=\"literal\">false</span>,</span><br><span class=\"line\">    <span class=\"attr\">\"target\"</span>: <span class=\"string\">\"es6\"</span>,</span><br><span class=\"line\">    <span class=\"attr\">\"baseUrl\"</span>: <span class=\"string\">\".\"</span>,</span><br><span class=\"line\">    <span class=\"attr\">\"sourceMap\"</span>: <span class=\"literal\">true</span>,</span><br><span class=\"line\">    <span class=\"attr\">\"lib\"</span>: [<span class=\"string\">\"ESNext\"</span>, <span class=\"string\">\"DOM\"</span>],</span><br><span class=\"line\">    <span class=\"attr\">\"allowSyntheticDefaultImports\"</span>: <span class=\"literal\">true</span>,</span><br><span class=\"line\">    <span class=\"attr\">\"paths\"</span>: &#123;</span><br><span class=\"line\">      <span class=\"attr\">\"@packages/*\"</span>: [<span class=\"string\">\"packages/*\"</span>],</span><br><span class=\"line\">      <span class=\"attr\">\"@website/*\"</span>: [<span class=\"string\">\"website/*\"</span>]</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  <span class=\"attr\">\"exclude\"</span>: [<span class=\"string\">\"node_modules\"</span>, <span class=\"string\">\"lib\"</span>]</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"添加-ts-声明文件\"><a href=\"#添加-ts-声明文件\" class=\"headerlink\" title=\"添加 ts 声明文件\"></a>添加 ts 声明文件</h3><p>根目录新建<code>types</code>文件夹，ts 的所有声明放在这里。目前只新增<code>shims-vue.d.ts</code></p>\n<figure class=\"highlight typescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">declare</span> <span class=\"keyword\">module</span> '*.vue' &#123;</span><br><span class=\"line\">  <span class=\"keyword\">import</span> &#123; defineComponent &#125; <span class=\"keyword\">from</span> <span class=\"string\">'vue'</span></span><br><span class=\"line\">  <span class=\"keyword\">const</span> Component: ReturnType&lt;<span class=\"keyword\">typeof</span> defineComponent&gt;</span><br><span class=\"line\">  <span class=\"keyword\">export</span> <span class=\"keyword\">default</span> Component</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"修改对应-js-文件为-ts-文件-css改为-scss\"><a href=\"#修改对应-js-文件为-ts-文件-css改为-scss\" class=\"headerlink\" title=\"修改对应 js 文件为 ts 文件, css改为 scss\"></a>修改对应 js 文件为 ts 文件, css改为 scss</h3><p>把 <code>packages</code>对应包的 js文件和<code>website</code>下的<code>index.js</code>全部改为 ts 结尾；所有 vue 组件的 <code>script</code> 增加<code>lang=“ts”</code>，<code>style</code>增加<code>lang=”scss“</code></p>\n<h3 id=\"修改-webpack-配置\"><a href=\"#修改-webpack-配置\" class=\"headerlink\" title=\"修改 webpack 配置\"></a>修改 webpack 配置</h3><p>增加 ts-loader 和 sass-loader配置；修改入口文件为 ts 结尾；添加<code>resolve.extensions</code>，支持 ts 文件引用</p>\n<figure class=\"highlight diff\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">// build/webpack.config.base.js</span><br><span class=\"line\">'use strict'</span><br><span class=\"line\">const HtmlWebpackPlugin = require('html-webpack-plugin')</span><br><span class=\"line\">const &#123; VueLoaderPlugin &#125; = require('vue-loader')</span><br><span class=\"line\">const path = require('path')</span><br><span class=\"line\"></span><br><span class=\"line\">module.exports = &#123;</span><br><span class=\"line\"><span class=\"deletion\">-  entry: path.resolve(__dirname, '../website/index.js'),</span></span><br><span class=\"line\"><span class=\"addition\">+  entry: path.resolve(__dirname, '../website/index.ts'),</span></span><br><span class=\"line\">  output: &#123;</span><br><span class=\"line\">    path: path.resolve(__dirname, '../dist'),</span><br><span class=\"line\">    filename: 'index.js'</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\"><span class=\"addition\">+  resolve: &#123;</span></span><br><span class=\"line\"><span class=\"addition\">+    alias: &#123;</span></span><br><span class=\"line\"><span class=\"addition\">+      '@package': path.resolve(__dirname, '../packages'),</span></span><br><span class=\"line\"><span class=\"addition\">+      '@website': path.resolve(__dirname, '../website')</span></span><br><span class=\"line\"><span class=\"addition\">+    &#125;,</span></span><br><span class=\"line\"><span class=\"addition\">+    extensions: ['.ts', '.js', '.json']</span></span><br><span class=\"line\"><span class=\"addition\">+  &#125;,</span></span><br><span class=\"line\">  module: &#123;</span><br><span class=\"line\">    rules: [</span><br><span class=\"line\">      &#123;</span><br><span class=\"line\">        test: /\\.js$/,</span><br><span class=\"line\">        loader: 'babel-loader',</span><br><span class=\"line\">        exclude: /node_modules/</span><br><span class=\"line\">      &#125;,</span><br><span class=\"line\">      &#123;</span><br><span class=\"line\">        test: /\\.vue$/,</span><br><span class=\"line\">        loader: 'vue-loader'</span><br><span class=\"line\">      &#125;,</span><br><span class=\"line\"><span class=\"addition\">+      &#123;</span></span><br><span class=\"line\"><span class=\"addition\">+        test: /\\.scss$/,</span></span><br><span class=\"line\"><span class=\"addition\">+        use: [</span></span><br><span class=\"line\"><span class=\"addition\">+          &#123; loader: 'style-loader' &#125;,</span></span><br><span class=\"line\"><span class=\"addition\">+          &#123;</span></span><br><span class=\"line\"><span class=\"addition\">+            loader: 'css-loader',</span></span><br><span class=\"line\"><span class=\"addition\">+            options: &#123; sourceMap: true &#125;</span></span><br><span class=\"line\"><span class=\"addition\">+          &#125;,</span></span><br><span class=\"line\"><span class=\"addition\">+          &#123;</span></span><br><span class=\"line\"><span class=\"addition\">+            loader: 'sass-loader'</span></span><br><span class=\"line\"><span class=\"addition\">+          &#125;</span></span><br><span class=\"line\"><span class=\"addition\">+        ]</span></span><br><span class=\"line\"><span class=\"addition\">+      &#125;,</span></span><br><span class=\"line\"><span class=\"addition\">+      &#123;</span></span><br><span class=\"line\"><span class=\"addition\">+        test: /\\.tsx?$/,</span></span><br><span class=\"line\"><span class=\"addition\">+        use: [</span></span><br><span class=\"line\"><span class=\"addition\">+          &#123;</span></span><br><span class=\"line\"><span class=\"addition\">+            loader: 'babel-loader'</span></span><br><span class=\"line\"><span class=\"addition\">+          &#125;,</span></span><br><span class=\"line\"><span class=\"addition\">+          &#123;</span></span><br><span class=\"line\"><span class=\"addition\">+            loader: 'ts-loader',</span></span><br><span class=\"line\"><span class=\"addition\">+            options: &#123;</span></span><br><span class=\"line\"><span class=\"addition\">+              transpileOnly: true</span></span><br><span class=\"line\"><span class=\"addition\">+            &#125;</span></span><br><span class=\"line\"><span class=\"addition\">+          &#125;</span></span><br><span class=\"line\"><span class=\"addition\">+        ],</span></span><br><span class=\"line\"><span class=\"addition\">+        exclude: /node_modules/</span></span><br><span class=\"line\"><span class=\"addition\">+      &#125;</span></span><br><span class=\"line\">    ]</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  plugins: [</span><br><span class=\"line\">    new HtmlWebpackPlugin(&#123;</span><br><span class=\"line\">      template: './website/index.html',</span><br><span class=\"line\">      filename: './index.html'</span><br><span class=\"line\">    &#125;),</span><br><span class=\"line\">    new VueLoaderPlugin()</span><br><span class=\"line\">  ]</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">// build/webpack.config.build.js</span><br><span class=\"line\">'use strict'</span><br><span class=\"line\">const path = require('path')</span><br><span class=\"line\">const &#123; VueLoaderPlugin &#125; = require('vue-loader')</span><br><span class=\"line\"></span><br><span class=\"line\">module.exports = &#123;</span><br><span class=\"line\">  mode: 'production',</span><br><span class=\"line\">  entry: &#123;</span><br><span class=\"line\"><span class=\"deletion\">-    adminUI: './packages/admin-ui/index.js'</span></span><br><span class=\"line\"><span class=\"addition\">+    adminUI: './packages/admin-ui/index.ts'</span></span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  output: &#123;</span><br><span class=\"line\">    path: path.resolve(__dirname, '../lib'), // 出口目录</span><br><span class=\"line\">    publicPath: '/lib/',</span><br><span class=\"line\">    library: 'adminUI', // 包名</span><br><span class=\"line\">    filename: 'index.js',</span><br><span class=\"line\">    libraryTarget: 'umd',</span><br><span class=\"line\">    umdNamedDefine: true // 会对 UMD 的构建过程中的 AMD 模块进行命名。否则就使用匿名的 define</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\"><span class=\"addition\">+  resolve: &#123;</span></span><br><span class=\"line\"><span class=\"addition\">+    alias: &#123;</span></span><br><span class=\"line\"><span class=\"addition\">+      '@package': path.resolve(__dirname, '../packages'),</span></span><br><span class=\"line\"><span class=\"addition\">+      '@website': path.resolve(__dirname, '../website')</span></span><br><span class=\"line\"><span class=\"addition\">+    &#125;,</span></span><br><span class=\"line\"><span class=\"addition\">+    extensions: ['.ts', '.js', '.json']</span></span><br><span class=\"line\"><span class=\"addition\">+  &#125;,</span></span><br><span class=\"line\">  externals: &#123;</span><br><span class=\"line\">    vue: &#123;</span><br><span class=\"line\">      root: 'Vue',</span><br><span class=\"line\">      commonjs: 'vue',</span><br><span class=\"line\">      commonjs2: 'vue',</span><br><span class=\"line\">      amd: 'vue'</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  optimization: &#123;</span><br><span class=\"line\">    splitChunks: &#123;</span><br><span class=\"line\">      cacheGroups: &#123;</span><br><span class=\"line\">        commons: &#123;</span><br><span class=\"line\">          test: /[\\\\/]node_modules[\\\\/]/,</span><br><span class=\"line\">          name: 'vendor',</span><br><span class=\"line\">          chunks: 'all'</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  module: &#123;</span><br><span class=\"line\">    rules: [</span><br><span class=\"line\">      &#123;</span><br><span class=\"line\">        test: /\\.js$/,</span><br><span class=\"line\">        loader: 'babel-loader',</span><br><span class=\"line\">        exclude: /node_modules/</span><br><span class=\"line\">      &#125;,</span><br><span class=\"line\">      &#123;</span><br><span class=\"line\">        test: /\\.vue$/,</span><br><span class=\"line\">        loader: 'vue-loader'</span><br><span class=\"line\">      &#125;,</span><br><span class=\"line\"><span class=\"addition\">+      &#123;</span></span><br><span class=\"line\"><span class=\"addition\">+        test: /\\.scss$/,</span></span><br><span class=\"line\"><span class=\"addition\">+        use: [</span></span><br><span class=\"line\"><span class=\"addition\">+          &#123; loader: 'style-loader' &#125;,</span></span><br><span class=\"line\"><span class=\"addition\">+          &#123;</span></span><br><span class=\"line\"><span class=\"addition\">+            loader: 'css-loader',</span></span><br><span class=\"line\"><span class=\"addition\">+            options: &#123; sourceMap: true &#125;</span></span><br><span class=\"line\"><span class=\"addition\">+          &#125;,</span></span><br><span class=\"line\"><span class=\"addition\">+          &#123;</span></span><br><span class=\"line\"><span class=\"addition\">+            loader: 'sass-loader'</span></span><br><span class=\"line\"><span class=\"addition\">+          &#125;</span></span><br><span class=\"line\"><span class=\"addition\">+        ]</span></span><br><span class=\"line\"><span class=\"addition\">+      &#125;,</span></span><br><span class=\"line\"><span class=\"addition\">+      &#123;</span></span><br><span class=\"line\"><span class=\"addition\">+        test: /\\.tsx?$/,</span></span><br><span class=\"line\"><span class=\"addition\">+        use: [</span></span><br><span class=\"line\"><span class=\"addition\">+          &#123;</span></span><br><span class=\"line\"><span class=\"addition\">+            loader: 'babel-loader'</span></span><br><span class=\"line\"><span class=\"addition\">+          &#125;,</span></span><br><span class=\"line\"><span class=\"addition\">+          &#123;</span></span><br><span class=\"line\"><span class=\"addition\">+            loader: 'ts-loader',</span></span><br><span class=\"line\"><span class=\"addition\">+            options: &#123;</span></span><br><span class=\"line\"><span class=\"addition\">+              transpileOnly: true</span></span><br><span class=\"line\"><span class=\"addition\">+            &#125;</span></span><br><span class=\"line\"><span class=\"addition\">+          &#125;</span></span><br><span class=\"line\"><span class=\"addition\">+        ],</span></span><br><span class=\"line\"><span class=\"addition\">+        exclude: /node_modules/</span></span><br><span class=\"line\"><span class=\"addition\">+      &#125;</span></span><br><span class=\"line\">    ]</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  plugins: [new VueLoaderPlugin()]</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n"},{"title":"从零搭建Vue UI组件库(二)","date":"2021-04-15T03:17:57.000Z","description":"尝试搭建自己的Vue UI 组件库, 持续更新(大概)","_content":"\n上一篇结束，使用 webpack 搭建了一个本地服务，事实上还不算项目模板，这篇的目的是编写一个基础的 HelloWorld 组件\n\n## 创建组件\n\n在 `packages/hello`中新建`src`文件夹，存放 vue 源文件，新建 `index.js`用来暴露和挂载组件\n\n```javascript\n  // src/index.vue\n  <template>\n    <div>\n      <h2>Hello, {{ name }} !</h2>\n    </div>\n  </template>\n\n  <script>\n    import { defineComponent } from 'vue'\n    export default defineComponent({\n      name: 'Hello',\n      props: {\n        name: {\n          type: String,\n          default: 'admin UI'\n        }\n      }\n    })\n  </script>\n\n  // index.js\n  import Hello from './src/index.vue'\n  // 关于 vue 插件，不熟悉的可以去看一下 vue 官网\n  Hello.install = app => {\n    app.component(Hello.name, Hello)\n  }\n\n  export default Hello\n```\n\n然后在`website`文件中引用组件，查看效果\n\n```javascript\n  <template>\n    <div class=\"app\">\n      <Hello :name=\"name\"></Hello>\n    </div>\n  </template>\n\n  <script>\n    import { defineComponent, reactive, toRefs } from 'vue'\n    import Hello from '../packages/hello'\n\n    export default defineComponent({\n      name: 'app',\n      components: {\n        Hello\n      },\n      setup(props, ctx) {\n        const state = reactive({\n          name: 'admin ui'\n        })\n\n        return {\n          ...toRefs(state)\n        }\n      }\n    })\n  </script>\n```\n\n开发阶段，这样可以快速调试组件，确认组件功能完成后，就需要导出组件。可以预见到的是，以后会有很多个组件需要导出，因此需要一个统一的出口。参照 `element-plus`，把出口文件定义为`packages/admin-ui/index.js`\n\n```javascript\n  import Hello from '../hello'\n\n  const components = [Hello]\n\n  const install = app => {\n    components.forEach(component => {\n      app.component(component.name, component)\n    })\n  }\n\n  export {\n    Hello,\n    install\n  }\n\n  export default {\n    install\n  }\n```\n\n## 打包配置\n\n`build`文件夹中新增`webpack.config.build.js`\n\n```javascript\n  'use strict'\n  const path = require('path')\n  const { VueLoaderPlugin } = require('vue-loader')\n\n  module.exports = {\n    mode: 'production',\n    entry: {\n      'adminUI': './packages/admin-ui/index.js'\n    },\n    output: {\n      path: path.resolve(__dirname, '../lib'), // 出口目录\n      publicPath: '/lib/',\n      library: 'adminUI', // 包名\n      filename: 'index.js', // 文件名\n      libraryTarget: 'umd',\n      umdNamedDefine: true // 会对 UMD 的构建过程中的 AMD 模块进行命名。否则就使用匿名的 define\n    },\n    externals: {\n      vue: {\n        root: 'Vue',\n        commonjs: 'vue',\n        commonjs2: 'vue',\n        amd: 'vue'\n      }\n    },\n    optimization: {\n      splitChunks: {\n        cacheGroups: {\n          commons: {\n            test: /[\\\\/]node_modules[\\\\/]/,\n            name: 'vendor',\n            chunks: 'all'\n          }\n        }\n      }\n    },\n    module: {\n      rules: [\n        {\n          test: /\\.js$/,\n          loader: \"babel-loader\",\n          exclude: /node_modules/\n        },\n        {\n          test: /\\.vue$/,\n          loader: 'vue-loader'\n        }\n      ]\n    },\n    plugins: [\n      new VueLoaderPlugin(),\n    ]\n  }\n\n```\n\n`package.json`新增打包命令`\"build\": \"webpack --config build/webpack.config.build.js\"`\n使用`yarn build`,会在根目录生成`lib`文件夹，包含`index.js`文件，就是我们最后输出的文件\n\n## 预览\n\n本地调用打包后的组件库，查看效果。修改`website`中的`index.js`\n\n```javascript\n  import {createApp} from 'vue'\n  import App from './index.vue'\n  import AdminUI from '../lib'\n\n  createApp(App).use(AdminUI).mount('#app')\n```\n\n删除`website/index.vue`中导入的组件\n\n```javascript\n  <template>\n    <div class=\"app\">\n      <Hello :name=\"name\"></Hello>\n    </div>\n  </template>\n\n  <script>\n    import { defineComponent, reactive, toRefs } from 'vue'\n\n    export default defineComponent({\n      name: 'app',\n      setup(props, ctx) {\n        const state = reactive({\n          name: 'admin ui'\n        })\n\n        return {\n          ...toRefs(state)\n        }\n      }\n    })\n  </script>\n```\n\n运行项目，会发现结果完全一致。说明组件打包是没有问题的，接下来只要把`lib`文件夹上传到 npm,就可以像`element-ui`一样使用啦！\n\n## next\n\n虽然很简陋，但想要的功能第一步已经实现了，接下来我先不打算上传 npm，我的计划有以下几个：\n\n+ [ ] 增加 eslint/prettier/lint-staged,保证代码结构\n+ [ ] 添加 typescript，使用 ts 开发\n+ [ ] 结合 vuepress,使用 MD 作为文档和展示组件 demo\n","source":"_posts/从零搭建Vue UI组件库(二).md","raw":"---\ntitle: 从零搭建Vue UI组件库(二)\ndate: 2021-04-15 11:17:57\ntags: [Vue, adminUI]\ncategories: [adminUI]\ndescription: 尝试搭建自己的Vue UI 组件库, 持续更新(大概)\n---\n\n上一篇结束，使用 webpack 搭建了一个本地服务，事实上还不算项目模板，这篇的目的是编写一个基础的 HelloWorld 组件\n\n## 创建组件\n\n在 `packages/hello`中新建`src`文件夹，存放 vue 源文件，新建 `index.js`用来暴露和挂载组件\n\n```javascript\n  // src/index.vue\n  <template>\n    <div>\n      <h2>Hello, {{ name }} !</h2>\n    </div>\n  </template>\n\n  <script>\n    import { defineComponent } from 'vue'\n    export default defineComponent({\n      name: 'Hello',\n      props: {\n        name: {\n          type: String,\n          default: 'admin UI'\n        }\n      }\n    })\n  </script>\n\n  // index.js\n  import Hello from './src/index.vue'\n  // 关于 vue 插件，不熟悉的可以去看一下 vue 官网\n  Hello.install = app => {\n    app.component(Hello.name, Hello)\n  }\n\n  export default Hello\n```\n\n然后在`website`文件中引用组件，查看效果\n\n```javascript\n  <template>\n    <div class=\"app\">\n      <Hello :name=\"name\"></Hello>\n    </div>\n  </template>\n\n  <script>\n    import { defineComponent, reactive, toRefs } from 'vue'\n    import Hello from '../packages/hello'\n\n    export default defineComponent({\n      name: 'app',\n      components: {\n        Hello\n      },\n      setup(props, ctx) {\n        const state = reactive({\n          name: 'admin ui'\n        })\n\n        return {\n          ...toRefs(state)\n        }\n      }\n    })\n  </script>\n```\n\n开发阶段，这样可以快速调试组件，确认组件功能完成后，就需要导出组件。可以预见到的是，以后会有很多个组件需要导出，因此需要一个统一的出口。参照 `element-plus`，把出口文件定义为`packages/admin-ui/index.js`\n\n```javascript\n  import Hello from '../hello'\n\n  const components = [Hello]\n\n  const install = app => {\n    components.forEach(component => {\n      app.component(component.name, component)\n    })\n  }\n\n  export {\n    Hello,\n    install\n  }\n\n  export default {\n    install\n  }\n```\n\n## 打包配置\n\n`build`文件夹中新增`webpack.config.build.js`\n\n```javascript\n  'use strict'\n  const path = require('path')\n  const { VueLoaderPlugin } = require('vue-loader')\n\n  module.exports = {\n    mode: 'production',\n    entry: {\n      'adminUI': './packages/admin-ui/index.js'\n    },\n    output: {\n      path: path.resolve(__dirname, '../lib'), // 出口目录\n      publicPath: '/lib/',\n      library: 'adminUI', // 包名\n      filename: 'index.js', // 文件名\n      libraryTarget: 'umd',\n      umdNamedDefine: true // 会对 UMD 的构建过程中的 AMD 模块进行命名。否则就使用匿名的 define\n    },\n    externals: {\n      vue: {\n        root: 'Vue',\n        commonjs: 'vue',\n        commonjs2: 'vue',\n        amd: 'vue'\n      }\n    },\n    optimization: {\n      splitChunks: {\n        cacheGroups: {\n          commons: {\n            test: /[\\\\/]node_modules[\\\\/]/,\n            name: 'vendor',\n            chunks: 'all'\n          }\n        }\n      }\n    },\n    module: {\n      rules: [\n        {\n          test: /\\.js$/,\n          loader: \"babel-loader\",\n          exclude: /node_modules/\n        },\n        {\n          test: /\\.vue$/,\n          loader: 'vue-loader'\n        }\n      ]\n    },\n    plugins: [\n      new VueLoaderPlugin(),\n    ]\n  }\n\n```\n\n`package.json`新增打包命令`\"build\": \"webpack --config build/webpack.config.build.js\"`\n使用`yarn build`,会在根目录生成`lib`文件夹，包含`index.js`文件，就是我们最后输出的文件\n\n## 预览\n\n本地调用打包后的组件库，查看效果。修改`website`中的`index.js`\n\n```javascript\n  import {createApp} from 'vue'\n  import App from './index.vue'\n  import AdminUI from '../lib'\n\n  createApp(App).use(AdminUI).mount('#app')\n```\n\n删除`website/index.vue`中导入的组件\n\n```javascript\n  <template>\n    <div class=\"app\">\n      <Hello :name=\"name\"></Hello>\n    </div>\n  </template>\n\n  <script>\n    import { defineComponent, reactive, toRefs } from 'vue'\n\n    export default defineComponent({\n      name: 'app',\n      setup(props, ctx) {\n        const state = reactive({\n          name: 'admin ui'\n        })\n\n        return {\n          ...toRefs(state)\n        }\n      }\n    })\n  </script>\n```\n\n运行项目，会发现结果完全一致。说明组件打包是没有问题的，接下来只要把`lib`文件夹上传到 npm,就可以像`element-ui`一样使用啦！\n\n## next\n\n虽然很简陋，但想要的功能第一步已经实现了，接下来我先不打算上传 npm，我的计划有以下几个：\n\n+ [ ] 增加 eslint/prettier/lint-staged,保证代码结构\n+ [ ] 添加 typescript，使用 ts 开发\n+ [ ] 结合 vuepress,使用 MD 作为文档和展示组件 demo\n","slug":"从零搭建Vue UI组件库(二)","published":1,"updated":"2021-06-25T11:19:55.444Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckqc904p3001jwotv7yma46uj","content":"<p>上一篇结束，使用 webpack 搭建了一个本地服务，事实上还不算项目模板，这篇的目的是编写一个基础的 HelloWorld 组件</p>\n<h2 id=\"创建组件\"><a href=\"#创建组件\" class=\"headerlink\" title=\"创建组件\"></a>创建组件</h2><p>在 <code>packages/hello</code>中新建<code>src</code>文件夹，存放 vue 源文件，新建 <code>index.js</code>用来暴露和挂载组件</p>\n<div class=\"code-panel__wrapper\" autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\"><header class=\"mac-panel\"><span class=\"doc-path\"></span><span class=\"mac-panel__language\">JAVASCRIPT</span></header><figure class=\"iseeu highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// src/index.vue</span></span><br><span class=\"line\">&lt;template&gt;</span><br><span class=\"line\">  &lt;div&gt;</span><br><span class=\"line\">    &lt;h2&gt;Hello, &#123;&#123; name &#125;&#125; !&lt;<span class=\"regexp\">/h2&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">  &lt;/</span>div&gt;</span><br><span class=\"line\">&lt;<span class=\"regexp\">/template&gt;</span></span><br><span class=\"line\"><span class=\"regexp\"></span></span><br><span class=\"line\"><span class=\"regexp\">&lt;script&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">  import &#123; defineComponent &#125; from 'vue'</span></span><br><span class=\"line\"><span class=\"regexp\">  export default defineComponent(&#123;</span></span><br><span class=\"line\"><span class=\"regexp\">    name: 'Hello',</span></span><br><span class=\"line\"><span class=\"regexp\">    props: &#123;</span></span><br><span class=\"line\"><span class=\"regexp\">      name: &#123;</span></span><br><span class=\"line\"><span class=\"regexp\">        type: String,</span></span><br><span class=\"line\"><span class=\"regexp\">        default: 'admin UI'</span></span><br><span class=\"line\"><span class=\"regexp\">      &#125;</span></span><br><span class=\"line\"><span class=\"regexp\">    &#125;</span></span><br><span class=\"line\"><span class=\"regexp\">  &#125;)</span></span><br><span class=\"line\"><span class=\"regexp\">&lt;/</span>script&gt;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// index.js</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> Hello <span class=\"keyword\">from</span> <span class=\"string\">'./src/index.vue'</span></span><br><span class=\"line\"><span class=\"comment\">// 关于 vue 插件，不熟悉的可以去看一下 vue 官网</span></span><br><span class=\"line\">Hello.install = <span class=\"function\"><span class=\"params\">app</span> =&gt;</span> &#123;</span><br><span class=\"line\">  app.component(Hello.name, Hello)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> Hello</span><br></pre></td></tr></table></figure></div>\n<p>然后在<code>website</code>文件中引用组件，查看效果</p>\n<div class=\"code-panel__wrapper\" autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\"><header class=\"mac-panel\"><span class=\"doc-path\"></span><span class=\"mac-panel__language\">JAVASCRIPT</span></header><figure class=\"iseeu highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;template&gt;</span><br><span class=\"line\">  &lt;div <span class=\"class\"><span class=\"keyword\">class</span></span>=<span class=\"string\">\"app\"</span>&gt;</span><br><span class=\"line\">    &lt;Hello :name=<span class=\"string\">\"name\"</span>&gt;&lt;<span class=\"regexp\">/Hello&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">  &lt;/</span>div&gt;</span><br><span class=\"line\">&lt;<span class=\"regexp\">/template&gt;</span></span><br><span class=\"line\"><span class=\"regexp\"></span></span><br><span class=\"line\"><span class=\"regexp\">&lt;script&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">  import &#123; defineComponent, reactive, toRefs &#125; from 'vue'</span></span><br><span class=\"line\"><span class=\"regexp\">  import Hello from '../</span>packages/hello<span class=\"string\">'</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">  export default defineComponent(&#123;</span></span><br><span class=\"line\"><span class=\"string\">    name: '</span>app<span class=\"string\">',</span></span><br><span class=\"line\"><span class=\"string\">    components: &#123;</span></span><br><span class=\"line\"><span class=\"string\">      Hello</span></span><br><span class=\"line\"><span class=\"string\">    &#125;,</span></span><br><span class=\"line\"><span class=\"string\">    setup(props, ctx) &#123;</span></span><br><span class=\"line\"><span class=\"string\">      const state = reactive(&#123;</span></span><br><span class=\"line\"><span class=\"string\">        name: '</span>admin ui<span class=\"string\">'</span></span><br><span class=\"line\"><span class=\"string\">      &#125;)</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">      return &#123;</span></span><br><span class=\"line\"><span class=\"string\">        ...toRefs(state)</span></span><br><span class=\"line\"><span class=\"string\">      &#125;</span></span><br><span class=\"line\"><span class=\"string\">    &#125;</span></span><br><span class=\"line\"><span class=\"string\">  &#125;)</span></span><br><span class=\"line\"><span class=\"string\">&lt;/script&gt;</span></span><br></pre></td></tr></table></figure></div>\n<p>开发阶段，这样可以快速调试组件，确认组件功能完成后，就需要导出组件。可以预见到的是，以后会有很多个组件需要导出，因此需要一个统一的出口。参照 <code>element-plus</code>，把出口文件定义为<code>packages/admin-ui/index.js</code></p>\n<div class=\"code-panel__wrapper\" autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\"><header class=\"mac-panel\"><span class=\"doc-path\"></span><span class=\"mac-panel__language\">JAVASCRIPT</span></header><figure class=\"iseeu highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> Hello <span class=\"keyword\">from</span> <span class=\"string\">'../hello'</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> components = [Hello]</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> install = <span class=\"function\"><span class=\"params\">app</span> =&gt;</span> &#123;</span><br><span class=\"line\">  components.forEach(<span class=\"function\"><span class=\"params\">component</span> =&gt;</span> &#123;</span><br><span class=\"line\">    app.component(component.name, component)</span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">export</span> &#123;</span><br><span class=\"line\">  Hello,</span><br><span class=\"line\">  install</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> &#123;</span><br><span class=\"line\">  install</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></div>\n<h2 id=\"打包配置\"><a href=\"#打包配置\" class=\"headerlink\" title=\"打包配置\"></a>打包配置</h2><p><code>build</code>文件夹中新增<code>webpack.config.build.js</code></p>\n<div class=\"code-panel__wrapper\" autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\"><header class=\"mac-panel\"><span class=\"doc-path\"></span><span class=\"mac-panel__language\">JAVASCRIPT</span></header><figure class=\"iseeu highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">'use strict'</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> path = <span class=\"built_in\">require</span>(<span class=\"string\">'path'</span>)</span><br><span class=\"line\"><span class=\"keyword\">const</span> &#123; VueLoaderPlugin &#125; = <span class=\"built_in\">require</span>(<span class=\"string\">'vue-loader'</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">module</span>.exports = &#123;</span><br><span class=\"line\">  mode: <span class=\"string\">'production'</span>,</span><br><span class=\"line\">  entry: &#123;</span><br><span class=\"line\">    <span class=\"string\">'adminUI'</span>: <span class=\"string\">'./packages/admin-ui/index.js'</span></span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  output: &#123;</span><br><span class=\"line\">    path: path.resolve(__dirname, <span class=\"string\">'../lib'</span>), <span class=\"comment\">// 出口目录</span></span><br><span class=\"line\">    publicPath: <span class=\"string\">'/lib/'</span>,</span><br><span class=\"line\">    library: <span class=\"string\">'adminUI'</span>, <span class=\"comment\">// 包名</span></span><br><span class=\"line\">    filename: <span class=\"string\">'index.js'</span>, <span class=\"comment\">// 文件名</span></span><br><span class=\"line\">    libraryTarget: <span class=\"string\">'umd'</span>,</span><br><span class=\"line\">    umdNamedDefine: <span class=\"literal\">true</span> <span class=\"comment\">// 会对 UMD 的构建过程中的 AMD 模块进行命名。否则就使用匿名的 define</span></span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  externals: &#123;</span><br><span class=\"line\">    vue: &#123;</span><br><span class=\"line\">      root: <span class=\"string\">'Vue'</span>,</span><br><span class=\"line\">      commonjs: <span class=\"string\">'vue'</span>,</span><br><span class=\"line\">      commonjs2: <span class=\"string\">'vue'</span>,</span><br><span class=\"line\">      amd: <span class=\"string\">'vue'</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  optimization: &#123;</span><br><span class=\"line\">    splitChunks: &#123;</span><br><span class=\"line\">      cacheGroups: &#123;</span><br><span class=\"line\">        commons: &#123;</span><br><span class=\"line\">          test: <span class=\"regexp\">/[\\\\/]node_modules[\\\\/]/</span>,</span><br><span class=\"line\">          name: <span class=\"string\">'vendor'</span>,</span><br><span class=\"line\">          chunks: <span class=\"string\">'all'</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  <span class=\"built_in\">module</span>: &#123;</span><br><span class=\"line\">    rules: [</span><br><span class=\"line\">      &#123;</span><br><span class=\"line\">        test: <span class=\"regexp\">/\\.js$/</span>,</span><br><span class=\"line\">        loader: <span class=\"string\">\"babel-loader\"</span>,</span><br><span class=\"line\">        exclude: <span class=\"regexp\">/node_modules/</span></span><br><span class=\"line\">      &#125;,</span><br><span class=\"line\">      &#123;</span><br><span class=\"line\">        test: <span class=\"regexp\">/\\.vue$/</span>,</span><br><span class=\"line\">        loader: <span class=\"string\">'vue-loader'</span></span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    ]</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  plugins: [</span><br><span class=\"line\">    <span class=\"keyword\">new</span> VueLoaderPlugin(),</span><br><span class=\"line\">  ]</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></div>\n<p><code>package.json</code>新增打包命令<code>&quot;build&quot;: &quot;webpack --config build/webpack.config.build.js&quot;</code><br>使用<code>yarn build</code>,会在根目录生成<code>lib</code>文件夹，包含<code>index.js</code>文件，就是我们最后输出的文件</p>\n<h2 id=\"预览\"><a href=\"#预览\" class=\"headerlink\" title=\"预览\"></a>预览</h2><p>本地调用打包后的组件库，查看效果。修改<code>website</code>中的<code>index.js</code></p>\n<div class=\"code-panel__wrapper\" autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\"><header class=\"mac-panel\"><span class=\"doc-path\"></span><span class=\"mac-panel__language\">JAVASCRIPT</span></header><figure class=\"iseeu highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> &#123;createApp&#125; <span class=\"keyword\">from</span> <span class=\"string\">'vue'</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> App <span class=\"keyword\">from</span> <span class=\"string\">'./index.vue'</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> AdminUI <span class=\"keyword\">from</span> <span class=\"string\">'../lib'</span></span><br><span class=\"line\"></span><br><span class=\"line\">createApp(App).use(AdminUI).mount(<span class=\"string\">'#app'</span>)</span><br></pre></td></tr></table></figure></div>\n<p>删除<code>website/index.vue</code>中导入的组件</p>\n<div class=\"code-panel__wrapper\" autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\"><header class=\"mac-panel\"><span class=\"doc-path\"></span><span class=\"mac-panel__language\">JAVASCRIPT</span></header><figure class=\"iseeu highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;template&gt;</span><br><span class=\"line\">  &lt;div <span class=\"class\"><span class=\"keyword\">class</span></span>=<span class=\"string\">\"app\"</span>&gt;</span><br><span class=\"line\">    &lt;Hello :name=<span class=\"string\">\"name\"</span>&gt;&lt;<span class=\"regexp\">/Hello&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">  &lt;/</span>div&gt;</span><br><span class=\"line\">&lt;<span class=\"regexp\">/template&gt;</span></span><br><span class=\"line\"><span class=\"regexp\"></span></span><br><span class=\"line\"><span class=\"regexp\">&lt;script&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">  import &#123; defineComponent, reactive, toRefs &#125; from 'vue'</span></span><br><span class=\"line\"><span class=\"regexp\"></span></span><br><span class=\"line\"><span class=\"regexp\">  export default defineComponent(&#123;</span></span><br><span class=\"line\"><span class=\"regexp\">    name: 'app',</span></span><br><span class=\"line\"><span class=\"regexp\">    setup(props, ctx) &#123;</span></span><br><span class=\"line\"><span class=\"regexp\">      const state = reactive(&#123;</span></span><br><span class=\"line\"><span class=\"regexp\">        name: 'admin ui'</span></span><br><span class=\"line\"><span class=\"regexp\">      &#125;)</span></span><br><span class=\"line\"><span class=\"regexp\"></span></span><br><span class=\"line\"><span class=\"regexp\">      return &#123;</span></span><br><span class=\"line\"><span class=\"regexp\">        ...toRefs(state)</span></span><br><span class=\"line\"><span class=\"regexp\">      &#125;</span></span><br><span class=\"line\"><span class=\"regexp\">    &#125;</span></span><br><span class=\"line\"><span class=\"regexp\">  &#125;)</span></span><br><span class=\"line\"><span class=\"regexp\">&lt;/</span>script&gt;</span><br></pre></td></tr></table></figure></div>\n<p>运行项目，会发现结果完全一致。说明组件打包是没有问题的，接下来只要把<code>lib</code>文件夹上传到 npm,就可以像<code>element-ui</code>一样使用啦！</p>\n<h2 id=\"next\"><a href=\"#next\" class=\"headerlink\" title=\"next\"></a>next</h2><p>虽然很简陋，但想要的功能第一步已经实现了，接下来我先不打算上传 npm，我的计划有以下几个：</p>\n<ul>\n<li style=\"list-style: none\"><input type=\"checkbox\"> 增加 eslint/prettier/lint-staged,保证代码结构</li>\n<li style=\"list-style: none\"><input type=\"checkbox\"> 添加 typescript，使用 ts 开发</li>\n<li style=\"list-style: none\"><input type=\"checkbox\"> 结合 vuepress,使用 MD 作为文档和展示组件 demo</li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<p>上一篇结束，使用 webpack 搭建了一个本地服务，事实上还不算项目模板，这篇的目的是编写一个基础的 HelloWorld 组件</p>\n<h2 id=\"创建组件\"><a href=\"#创建组件\" class=\"headerlink\" title=\"创建组件\"></a>创建组件</h2><p>在 <code>packages/hello</code>中新建<code>src</code>文件夹，存放 vue 源文件，新建 <code>index.js</code>用来暴露和挂载组件</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// src/index.vue</span></span><br><span class=\"line\">&lt;template&gt;</span><br><span class=\"line\">  &lt;div&gt;</span><br><span class=\"line\">    &lt;h2&gt;Hello, &#123;&#123; name &#125;&#125; !&lt;<span class=\"regexp\">/h2&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">  &lt;/</span>div&gt;</span><br><span class=\"line\">&lt;<span class=\"regexp\">/template&gt;</span></span><br><span class=\"line\"><span class=\"regexp\"></span></span><br><span class=\"line\"><span class=\"regexp\">&lt;script&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">  import &#123; defineComponent &#125; from 'vue'</span></span><br><span class=\"line\"><span class=\"regexp\">  export default defineComponent(&#123;</span></span><br><span class=\"line\"><span class=\"regexp\">    name: 'Hello',</span></span><br><span class=\"line\"><span class=\"regexp\">    props: &#123;</span></span><br><span class=\"line\"><span class=\"regexp\">      name: &#123;</span></span><br><span class=\"line\"><span class=\"regexp\">        type: String,</span></span><br><span class=\"line\"><span class=\"regexp\">        default: 'admin UI'</span></span><br><span class=\"line\"><span class=\"regexp\">      &#125;</span></span><br><span class=\"line\"><span class=\"regexp\">    &#125;</span></span><br><span class=\"line\"><span class=\"regexp\">  &#125;)</span></span><br><span class=\"line\"><span class=\"regexp\">&lt;/</span>script&gt;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// index.js</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> Hello <span class=\"keyword\">from</span> <span class=\"string\">'./src/index.vue'</span></span><br><span class=\"line\"><span class=\"comment\">// 关于 vue 插件，不熟悉的可以去看一下 vue 官网</span></span><br><span class=\"line\">Hello.install = <span class=\"function\"><span class=\"params\">app</span> =&gt;</span> &#123;</span><br><span class=\"line\">  app.component(Hello.name, Hello)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> Hello</span><br></pre></td></tr></table></figure>\n<p>然后在<code>website</code>文件中引用组件，查看效果</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;template&gt;</span><br><span class=\"line\">  &lt;div <span class=\"class\"><span class=\"keyword\">class</span></span>=<span class=\"string\">\"app\"</span>&gt;</span><br><span class=\"line\">    &lt;Hello :name=<span class=\"string\">\"name\"</span>&gt;&lt;<span class=\"regexp\">/Hello&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">  &lt;/</span>div&gt;</span><br><span class=\"line\">&lt;<span class=\"regexp\">/template&gt;</span></span><br><span class=\"line\"><span class=\"regexp\"></span></span><br><span class=\"line\"><span class=\"regexp\">&lt;script&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">  import &#123; defineComponent, reactive, toRefs &#125; from 'vue'</span></span><br><span class=\"line\"><span class=\"regexp\">  import Hello from '../</span>packages/hello<span class=\"string\">'</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">  export default defineComponent(&#123;</span></span><br><span class=\"line\"><span class=\"string\">    name: '</span>app<span class=\"string\">',</span></span><br><span class=\"line\"><span class=\"string\">    components: &#123;</span></span><br><span class=\"line\"><span class=\"string\">      Hello</span></span><br><span class=\"line\"><span class=\"string\">    &#125;,</span></span><br><span class=\"line\"><span class=\"string\">    setup(props, ctx) &#123;</span></span><br><span class=\"line\"><span class=\"string\">      const state = reactive(&#123;</span></span><br><span class=\"line\"><span class=\"string\">        name: '</span>admin ui<span class=\"string\">'</span></span><br><span class=\"line\"><span class=\"string\">      &#125;)</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">      return &#123;</span></span><br><span class=\"line\"><span class=\"string\">        ...toRefs(state)</span></span><br><span class=\"line\"><span class=\"string\">      &#125;</span></span><br><span class=\"line\"><span class=\"string\">    &#125;</span></span><br><span class=\"line\"><span class=\"string\">  &#125;)</span></span><br><span class=\"line\"><span class=\"string\">&lt;/script&gt;</span></span><br></pre></td></tr></table></figure>\n<p>开发阶段，这样可以快速调试组件，确认组件功能完成后，就需要导出组件。可以预见到的是，以后会有很多个组件需要导出，因此需要一个统一的出口。参照 <code>element-plus</code>，把出口文件定义为<code>packages/admin-ui/index.js</code></p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> Hello <span class=\"keyword\">from</span> <span class=\"string\">'../hello'</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> components = [Hello]</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> install = <span class=\"function\"><span class=\"params\">app</span> =&gt;</span> &#123;</span><br><span class=\"line\">  components.forEach(<span class=\"function\"><span class=\"params\">component</span> =&gt;</span> &#123;</span><br><span class=\"line\">    app.component(component.name, component)</span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">export</span> &#123;</span><br><span class=\"line\">  Hello,</span><br><span class=\"line\">  install</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> &#123;</span><br><span class=\"line\">  install</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"打包配置\"><a href=\"#打包配置\" class=\"headerlink\" title=\"打包配置\"></a>打包配置</h2><p><code>build</code>文件夹中新增<code>webpack.config.build.js</code></p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">'use strict'</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> path = <span class=\"built_in\">require</span>(<span class=\"string\">'path'</span>)</span><br><span class=\"line\"><span class=\"keyword\">const</span> &#123; VueLoaderPlugin &#125; = <span class=\"built_in\">require</span>(<span class=\"string\">'vue-loader'</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">module</span>.exports = &#123;</span><br><span class=\"line\">  mode: <span class=\"string\">'production'</span>,</span><br><span class=\"line\">  entry: &#123;</span><br><span class=\"line\">    <span class=\"string\">'adminUI'</span>: <span class=\"string\">'./packages/admin-ui/index.js'</span></span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  output: &#123;</span><br><span class=\"line\">    path: path.resolve(__dirname, <span class=\"string\">'../lib'</span>), <span class=\"comment\">// 出口目录</span></span><br><span class=\"line\">    publicPath: <span class=\"string\">'/lib/'</span>,</span><br><span class=\"line\">    library: <span class=\"string\">'adminUI'</span>, <span class=\"comment\">// 包名</span></span><br><span class=\"line\">    filename: <span class=\"string\">'index.js'</span>, <span class=\"comment\">// 文件名</span></span><br><span class=\"line\">    libraryTarget: <span class=\"string\">'umd'</span>,</span><br><span class=\"line\">    umdNamedDefine: <span class=\"literal\">true</span> <span class=\"comment\">// 会对 UMD 的构建过程中的 AMD 模块进行命名。否则就使用匿名的 define</span></span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  externals: &#123;</span><br><span class=\"line\">    vue: &#123;</span><br><span class=\"line\">      root: <span class=\"string\">'Vue'</span>,</span><br><span class=\"line\">      commonjs: <span class=\"string\">'vue'</span>,</span><br><span class=\"line\">      commonjs2: <span class=\"string\">'vue'</span>,</span><br><span class=\"line\">      amd: <span class=\"string\">'vue'</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  optimization: &#123;</span><br><span class=\"line\">    splitChunks: &#123;</span><br><span class=\"line\">      cacheGroups: &#123;</span><br><span class=\"line\">        commons: &#123;</span><br><span class=\"line\">          test: <span class=\"regexp\">/[\\\\/]node_modules[\\\\/]/</span>,</span><br><span class=\"line\">          name: <span class=\"string\">'vendor'</span>,</span><br><span class=\"line\">          chunks: <span class=\"string\">'all'</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  <span class=\"built_in\">module</span>: &#123;</span><br><span class=\"line\">    rules: [</span><br><span class=\"line\">      &#123;</span><br><span class=\"line\">        test: <span class=\"regexp\">/\\.js$/</span>,</span><br><span class=\"line\">        loader: <span class=\"string\">\"babel-loader\"</span>,</span><br><span class=\"line\">        exclude: <span class=\"regexp\">/node_modules/</span></span><br><span class=\"line\">      &#125;,</span><br><span class=\"line\">      &#123;</span><br><span class=\"line\">        test: <span class=\"regexp\">/\\.vue$/</span>,</span><br><span class=\"line\">        loader: <span class=\"string\">'vue-loader'</span></span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    ]</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  plugins: [</span><br><span class=\"line\">    <span class=\"keyword\">new</span> VueLoaderPlugin(),</span><br><span class=\"line\">  ]</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p><code>package.json</code>新增打包命令<code>&quot;build&quot;: &quot;webpack --config build/webpack.config.build.js&quot;</code><br>使用<code>yarn build</code>,会在根目录生成<code>lib</code>文件夹，包含<code>index.js</code>文件，就是我们最后输出的文件</p>\n<h2 id=\"预览\"><a href=\"#预览\" class=\"headerlink\" title=\"预览\"></a>预览</h2><p>本地调用打包后的组件库，查看效果。修改<code>website</code>中的<code>index.js</code></p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> &#123;createApp&#125; <span class=\"keyword\">from</span> <span class=\"string\">'vue'</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> App <span class=\"keyword\">from</span> <span class=\"string\">'./index.vue'</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> AdminUI <span class=\"keyword\">from</span> <span class=\"string\">'../lib'</span></span><br><span class=\"line\"></span><br><span class=\"line\">createApp(App).use(AdminUI).mount(<span class=\"string\">'#app'</span>)</span><br></pre></td></tr></table></figure>\n<p>删除<code>website/index.vue</code>中导入的组件</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;template&gt;</span><br><span class=\"line\">  &lt;div <span class=\"class\"><span class=\"keyword\">class</span></span>=<span class=\"string\">\"app\"</span>&gt;</span><br><span class=\"line\">    &lt;Hello :name=<span class=\"string\">\"name\"</span>&gt;&lt;<span class=\"regexp\">/Hello&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">  &lt;/</span>div&gt;</span><br><span class=\"line\">&lt;<span class=\"regexp\">/template&gt;</span></span><br><span class=\"line\"><span class=\"regexp\"></span></span><br><span class=\"line\"><span class=\"regexp\">&lt;script&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">  import &#123; defineComponent, reactive, toRefs &#125; from 'vue'</span></span><br><span class=\"line\"><span class=\"regexp\"></span></span><br><span class=\"line\"><span class=\"regexp\">  export default defineComponent(&#123;</span></span><br><span class=\"line\"><span class=\"regexp\">    name: 'app',</span></span><br><span class=\"line\"><span class=\"regexp\">    setup(props, ctx) &#123;</span></span><br><span class=\"line\"><span class=\"regexp\">      const state = reactive(&#123;</span></span><br><span class=\"line\"><span class=\"regexp\">        name: 'admin ui'</span></span><br><span class=\"line\"><span class=\"regexp\">      &#125;)</span></span><br><span class=\"line\"><span class=\"regexp\"></span></span><br><span class=\"line\"><span class=\"regexp\">      return &#123;</span></span><br><span class=\"line\"><span class=\"regexp\">        ...toRefs(state)</span></span><br><span class=\"line\"><span class=\"regexp\">      &#125;</span></span><br><span class=\"line\"><span class=\"regexp\">    &#125;</span></span><br><span class=\"line\"><span class=\"regexp\">  &#125;)</span></span><br><span class=\"line\"><span class=\"regexp\">&lt;/</span>script&gt;</span><br></pre></td></tr></table></figure>\n<p>运行项目，会发现结果完全一致。说明组件打包是没有问题的，接下来只要把<code>lib</code>文件夹上传到 npm,就可以像<code>element-ui</code>一样使用啦！</p>\n<h2 id=\"next\"><a href=\"#next\" class=\"headerlink\" title=\"next\"></a>next</h2><p>虽然很简陋，但想要的功能第一步已经实现了，接下来我先不打算上传 npm，我的计划有以下几个：</p>\n<ul>\n<li style=\"list-style: none\"><input type=\"checkbox\"> 增加 eslint/prettier/lint-staged,保证代码结构</li>\n<li style=\"list-style: none\"><input type=\"checkbox\"> 添加 typescript，使用 ts 开发</li>\n<li style=\"list-style: none\"><input type=\"checkbox\"> 结合 vuepress,使用 MD 作为文档和展示组件 demo</li>\n</ul>\n"},{"title":"从零搭建Vue UI组件库(六)","date":"2021-04-26T02:42:23.000Z","description":"尝试搭建自己的Vue UI 组件库(完)","_content":"\n上一步中,已经实现了本地开发 + 应用打包的全部流程, 开发 UI 框架的这套框架本身就已经完成了。现在只需要打包上传到 npm, 框架本身也完成了。剩下的就只是不断完善组件了。\n\n## 生成打包\n\n修改`package.json`，添加入口文件\n\n```diff package.json\n{\n+  \"main\": \"lib/index.js\"\n}\n```\n\n## 本地测试\n\n执行`npm pack`，生成一个本地的`zcm-admin-ui-0.0.0.tgz`包，这个包可以本地安装，用来预览结果\n\n执行`yarn add ./zcm-admin-ui-0.0.0.tgz`，本地安装这个包，安装结束后会发现依赖选项里安装了这个包，但是路径是在`./`下。这个时候`main.ts`中就已经可以使用 `import AdminUI from 'zcm-admin-ui'`了。**记得测试完成后，删除这一测试选项，开发环境还是用 @packages 里的包，保证开发时候方便**\n\n### 修改`main.ts`\n\n```js\nimport { createApp } from 'vue'\nimport App from './app.vue'\nimport router from './router'\nimport i18n from './locales/index'\n// admin-ui\nimport AdminUI from 'zcm-admin-ui'\nimport 'zcm-admin-ui/lib/theme/index.css'\n\n// components\nimport DemoBlock from './components/DemoBlock/index.vue'\nimport DtIcon from '@packages/icon'\n// reset-css\nimport 'highlight.js/styles/color-brewer.css'\nimport './styles/common.scss'\n\ncreateApp(App)\n  .use(AdminUI)\n  .use(i18n)\n  .component('demo-block', DemoBlock)\n  .component('dt-icon', DtIcon)\n  .use(router)\n  .mount('#app')\n```\n\n如果修改之后，和之前一样正常使用，说明没有问题，可以打包上传。\n\n> 上传之前先删除上一步的 tgz 包，它已经没用了\n\n## 发布 npm\n\n首先要有账号，到 npm 官网注册即可\n\n执行`npm login`，按照要求依次填写账号、密码、邮箱。出现`logged in as xxx on http://registry.npmjs.org`，说明登录成功了\n\n然后在项目根目录执行`npm publish`，就可以了\n\n## 常见问题\n\n+ 项目是用`lerna`初始化的，`package.json`里`private`选项必须是`true`才行，但是上传 npm 又要求必须是`false`，暂时不知道为什么，怎么处理\n+ 发布报错`npm ERR! no_perms Private mode enable, only admin can publish this module`，是因为使用了淘宝镜像，需要重置到原本的 npm 地址\n\n  ```shell\n  npm config set registry=http://registry.npmjs.org\n  ```\n\n+ 每次发布需要修改版本号（package.json的 version），否则会提交失败。详见[npm 版本号规则](https://www.jianshu.com/p/7d83bda6d751)\n\n## 完\n\n组件方面，我也有打算一直维护，并且不参考任何框架，有时间就按自己的想法去尝试一下。\n\n最后再附上[本项目仓库地址](https://github.com/lost-dream/zcm-admin-ui)，希望有幸看到这篇文章你也能有所收获。","source":"_posts/从零搭建Vue UI组件库(六).md","raw":"---\ntitle: 从零搭建Vue UI组件库(六)\ndate: 2021-04-26 10:42:23\ntags: [Vue, adminUI]\ncategories: [adminUI]\ndescription: 尝试搭建自己的Vue UI 组件库(完)\n---\n\n上一步中,已经实现了本地开发 + 应用打包的全部流程, 开发 UI 框架的这套框架本身就已经完成了。现在只需要打包上传到 npm, 框架本身也完成了。剩下的就只是不断完善组件了。\n\n## 生成打包\n\n修改`package.json`，添加入口文件\n\n```diff package.json\n{\n+  \"main\": \"lib/index.js\"\n}\n```\n\n## 本地测试\n\n执行`npm pack`，生成一个本地的`zcm-admin-ui-0.0.0.tgz`包，这个包可以本地安装，用来预览结果\n\n执行`yarn add ./zcm-admin-ui-0.0.0.tgz`，本地安装这个包，安装结束后会发现依赖选项里安装了这个包，但是路径是在`./`下。这个时候`main.ts`中就已经可以使用 `import AdminUI from 'zcm-admin-ui'`了。**记得测试完成后，删除这一测试选项，开发环境还是用 @packages 里的包，保证开发时候方便**\n\n### 修改`main.ts`\n\n```js\nimport { createApp } from 'vue'\nimport App from './app.vue'\nimport router from './router'\nimport i18n from './locales/index'\n// admin-ui\nimport AdminUI from 'zcm-admin-ui'\nimport 'zcm-admin-ui/lib/theme/index.css'\n\n// components\nimport DemoBlock from './components/DemoBlock/index.vue'\nimport DtIcon from '@packages/icon'\n// reset-css\nimport 'highlight.js/styles/color-brewer.css'\nimport './styles/common.scss'\n\ncreateApp(App)\n  .use(AdminUI)\n  .use(i18n)\n  .component('demo-block', DemoBlock)\n  .component('dt-icon', DtIcon)\n  .use(router)\n  .mount('#app')\n```\n\n如果修改之后，和之前一样正常使用，说明没有问题，可以打包上传。\n\n> 上传之前先删除上一步的 tgz 包，它已经没用了\n\n## 发布 npm\n\n首先要有账号，到 npm 官网注册即可\n\n执行`npm login`，按照要求依次填写账号、密码、邮箱。出现`logged in as xxx on http://registry.npmjs.org`，说明登录成功了\n\n然后在项目根目录执行`npm publish`，就可以了\n\n## 常见问题\n\n+ 项目是用`lerna`初始化的，`package.json`里`private`选项必须是`true`才行，但是上传 npm 又要求必须是`false`，暂时不知道为什么，怎么处理\n+ 发布报错`npm ERR! no_perms Private mode enable, only admin can publish this module`，是因为使用了淘宝镜像，需要重置到原本的 npm 地址\n\n  ```shell\n  npm config set registry=http://registry.npmjs.org\n  ```\n\n+ 每次发布需要修改版本号（package.json的 version），否则会提交失败。详见[npm 版本号规则](https://www.jianshu.com/p/7d83bda6d751)\n\n## 完\n\n组件方面，我也有打算一直维护，并且不参考任何框架，有时间就按自己的想法去尝试一下。\n\n最后再附上[本项目仓库地址](https://github.com/lost-dream/zcm-admin-ui)，希望有幸看到这篇文章你也能有所收获。","slug":"从零搭建Vue UI组件库(六)","published":1,"updated":"2021-06-25T11:19:55.445Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckqc904p5001lwotv79f8c1k2","content":"<p>上一步中,已经实现了本地开发 + 应用打包的全部流程, 开发 UI 框架的这套框架本身就已经完成了。现在只需要打包上传到 npm, 框架本身也完成了。剩下的就只是不断完善组件了。</p>\n<h2 id=\"生成打包\"><a href=\"#生成打包\" class=\"headerlink\" title=\"生成打包\"></a>生成打包</h2><p>修改<code>package.json</code>，添加入口文件</p>\n<div class=\"code-panel__wrapper\" autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\"><header class=\"mac-panel\"><span class=\"doc-path\"><span>package.json</span></span><span class=\"mac-panel__language\">DIFF</span></header><figure class=\"iseeu highlight diff\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\"><span class=\"addition\">+  \"main\": \"lib/index.js\"</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></div>\n<h2 id=\"本地测试\"><a href=\"#本地测试\" class=\"headerlink\" title=\"本地测试\"></a>本地测试</h2><p>执行<code>npm pack</code>，生成一个本地的<code>zcm-admin-ui-0.0.0.tgz</code>包，这个包可以本地安装，用来预览结果</p>\n<p>执行<code>yarn add ./zcm-admin-ui-0.0.0.tgz</code>，本地安装这个包，安装结束后会发现依赖选项里安装了这个包，但是路径是在<code>./</code>下。这个时候<code>main.ts</code>中就已经可以使用 <code>import AdminUI from &#39;zcm-admin-ui&#39;</code>了。<strong>记得测试完成后，删除这一测试选项，开发环境还是用 @packages 里的包，保证开发时候方便</strong></p>\n<h3 id=\"修改main-ts\"><a href=\"#修改main-ts\" class=\"headerlink\" title=\"修改main.ts\"></a>修改<code>main.ts</code></h3><div class=\"code-panel__wrapper\" autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\"><header class=\"mac-panel\"><span class=\"doc-path\"></span><span class=\"mac-panel__language\">JS</span></header><figure class=\"iseeu highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> &#123; createApp &#125; <span class=\"keyword\">from</span> <span class=\"string\">'vue'</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> App <span class=\"keyword\">from</span> <span class=\"string\">'./app.vue'</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> router <span class=\"keyword\">from</span> <span class=\"string\">'./router'</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> i18n <span class=\"keyword\">from</span> <span class=\"string\">'./locales/index'</span></span><br><span class=\"line\"><span class=\"comment\">// admin-ui</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> AdminUI <span class=\"keyword\">from</span> <span class=\"string\">'zcm-admin-ui'</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"string\">'zcm-admin-ui/lib/theme/index.css'</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// components</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> DemoBlock <span class=\"keyword\">from</span> <span class=\"string\">'./components/DemoBlock/index.vue'</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> DtIcon <span class=\"keyword\">from</span> <span class=\"string\">'@packages/icon'</span></span><br><span class=\"line\"><span class=\"comment\">// reset-css</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"string\">'highlight.js/styles/color-brewer.css'</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"string\">'./styles/common.scss'</span></span><br><span class=\"line\"></span><br><span class=\"line\">createApp(App)</span><br><span class=\"line\">  .use(AdminUI)</span><br><span class=\"line\">  .use(i18n)</span><br><span class=\"line\">  .component(<span class=\"string\">'demo-block'</span>, DemoBlock)</span><br><span class=\"line\">  .component(<span class=\"string\">'dt-icon'</span>, DtIcon)</span><br><span class=\"line\">  .use(router)</span><br><span class=\"line\">  .mount(<span class=\"string\">'#app'</span>)</span><br></pre></td></tr></table></figure></div>\n<p>如果修改之后，和之前一样正常使用，说明没有问题，可以打包上传。</p>\n<blockquote>\n<p>上传之前先删除上一步的 tgz 包，它已经没用了</p>\n</blockquote>\n<h2 id=\"发布-npm\"><a href=\"#发布-npm\" class=\"headerlink\" title=\"发布 npm\"></a>发布 npm</h2><p>首先要有账号，到 npm 官网注册即可</p>\n<p>执行<code>npm login</code>，按照要求依次填写账号、密码、邮箱。出现<code>logged in as xxx on http://registry.npmjs.org</code>，说明登录成功了</p>\n<p>然后在项目根目录执行<code>npm publish</code>，就可以了</p>\n<h2 id=\"常见问题\"><a href=\"#常见问题\" class=\"headerlink\" title=\"常见问题\"></a>常见问题</h2><ul>\n<li>项目是用<code>lerna</code>初始化的，<code>package.json</code>里<code>private</code>选项必须是<code>true</code>才行，但是上传 npm 又要求必须是<code>false</code>，暂时不知道为什么，怎么处理</li>\n<li><p>发布报错<code>npm ERR! no_perms Private mode enable, only admin can publish this module</code>，是因为使用了淘宝镜像，需要重置到原本的 npm 地址</p>\n<div class=\"code-panel__wrapper\" autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\"><header class=\"mac-panel\"><span class=\"doc-path\"></span><span class=\"mac-panel__language\">SHELL</span></header><figure class=\"iseeu highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm config set registry=http://registry.npmjs.org</span><br></pre></td></tr></table></figure></div>\n</li>\n<li><p>每次发布需要修改版本号（package.json的 version），否则会提交失败。详见<a href=\"https://www.jianshu.com/p/7d83bda6d751\" target=\"_blank\" rel=\"noopener\">npm 版本号规则</a></p>\n</li>\n</ul>\n<h2 id=\"完\"><a href=\"#完\" class=\"headerlink\" title=\"完\"></a>完</h2><p>组件方面，我也有打算一直维护，并且不参考任何框架，有时间就按自己的想法去尝试一下。</p>\n<p>最后再附上<a href=\"https://github.com/lost-dream/zcm-admin-ui\" target=\"_blank\" rel=\"noopener\">本项目仓库地址</a>，希望有幸看到这篇文章你也能有所收获。</p>\n","site":{"data":{}},"excerpt":"","more":"<p>上一步中,已经实现了本地开发 + 应用打包的全部流程, 开发 UI 框架的这套框架本身就已经完成了。现在只需要打包上传到 npm, 框架本身也完成了。剩下的就只是不断完善组件了。</p>\n<h2 id=\"生成打包\"><a href=\"#生成打包\" class=\"headerlink\" title=\"生成打包\"></a>生成打包</h2><p>修改<code>package.json</code>，添加入口文件</p>\n<figure class=\"highlight diff\"><figcaption><span>package.json</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\"><span class=\"addition\">+  \"main\": \"lib/index.js\"</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"本地测试\"><a href=\"#本地测试\" class=\"headerlink\" title=\"本地测试\"></a>本地测试</h2><p>执行<code>npm pack</code>，生成一个本地的<code>zcm-admin-ui-0.0.0.tgz</code>包，这个包可以本地安装，用来预览结果</p>\n<p>执行<code>yarn add ./zcm-admin-ui-0.0.0.tgz</code>，本地安装这个包，安装结束后会发现依赖选项里安装了这个包，但是路径是在<code>./</code>下。这个时候<code>main.ts</code>中就已经可以使用 <code>import AdminUI from &#39;zcm-admin-ui&#39;</code>了。<strong>记得测试完成后，删除这一测试选项，开发环境还是用 @packages 里的包，保证开发时候方便</strong></p>\n<h3 id=\"修改main-ts\"><a href=\"#修改main-ts\" class=\"headerlink\" title=\"修改main.ts\"></a>修改<code>main.ts</code></h3><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> &#123; createApp &#125; <span class=\"keyword\">from</span> <span class=\"string\">'vue'</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> App <span class=\"keyword\">from</span> <span class=\"string\">'./app.vue'</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> router <span class=\"keyword\">from</span> <span class=\"string\">'./router'</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> i18n <span class=\"keyword\">from</span> <span class=\"string\">'./locales/index'</span></span><br><span class=\"line\"><span class=\"comment\">// admin-ui</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> AdminUI <span class=\"keyword\">from</span> <span class=\"string\">'zcm-admin-ui'</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"string\">'zcm-admin-ui/lib/theme/index.css'</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// components</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> DemoBlock <span class=\"keyword\">from</span> <span class=\"string\">'./components/DemoBlock/index.vue'</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> DtIcon <span class=\"keyword\">from</span> <span class=\"string\">'@packages/icon'</span></span><br><span class=\"line\"><span class=\"comment\">// reset-css</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"string\">'highlight.js/styles/color-brewer.css'</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"string\">'./styles/common.scss'</span></span><br><span class=\"line\"></span><br><span class=\"line\">createApp(App)</span><br><span class=\"line\">  .use(AdminUI)</span><br><span class=\"line\">  .use(i18n)</span><br><span class=\"line\">  .component(<span class=\"string\">'demo-block'</span>, DemoBlock)</span><br><span class=\"line\">  .component(<span class=\"string\">'dt-icon'</span>, DtIcon)</span><br><span class=\"line\">  .use(router)</span><br><span class=\"line\">  .mount(<span class=\"string\">'#app'</span>)</span><br></pre></td></tr></table></figure>\n<p>如果修改之后，和之前一样正常使用，说明没有问题，可以打包上传。</p>\n<blockquote>\n<p>上传之前先删除上一步的 tgz 包，它已经没用了</p>\n</blockquote>\n<h2 id=\"发布-npm\"><a href=\"#发布-npm\" class=\"headerlink\" title=\"发布 npm\"></a>发布 npm</h2><p>首先要有账号，到 npm 官网注册即可</p>\n<p>执行<code>npm login</code>，按照要求依次填写账号、密码、邮箱。出现<code>logged in as xxx on http://registry.npmjs.org</code>，说明登录成功了</p>\n<p>然后在项目根目录执行<code>npm publish</code>，就可以了</p>\n<h2 id=\"常见问题\"><a href=\"#常见问题\" class=\"headerlink\" title=\"常见问题\"></a>常见问题</h2><ul>\n<li>项目是用<code>lerna</code>初始化的，<code>package.json</code>里<code>private</code>选项必须是<code>true</code>才行，但是上传 npm 又要求必须是<code>false</code>，暂时不知道为什么，怎么处理</li>\n<li><p>发布报错<code>npm ERR! no_perms Private mode enable, only admin can publish this module</code>，是因为使用了淘宝镜像，需要重置到原本的 npm 地址</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm config set registry=http://registry.npmjs.org</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>每次发布需要修改版本号（package.json的 version），否则会提交失败。详见<a href=\"https://www.jianshu.com/p/7d83bda6d751\" target=\"_blank\" rel=\"noopener\">npm 版本号规则</a></p>\n</li>\n</ul>\n<h2 id=\"完\"><a href=\"#完\" class=\"headerlink\" title=\"完\"></a>完</h2><p>组件方面，我也有打算一直维护，并且不参考任何框架，有时间就按自己的想法去尝试一下。</p>\n<p>最后再附上<a href=\"https://github.com/lost-dream/zcm-admin-ui\" target=\"_blank\" rel=\"noopener\">本项目仓库地址</a>，希望有幸看到这篇文章你也能有所收获。</p>\n"},{"title":"从零搭建Vue UI组件库(五)","date":"2021-04-20T08:24:12.000Z","description":"尝试搭建自己的Vue UI 组件库, 持续更新(大概)","_content":"\n## 写在前面\n\n接上一篇，这篇说的是使用`markdown`作为开发文档，原本想的是直接使用`vuepress`加入进来，万万没想到它不支持`vue3`，而新的`vuepress@next`功能还未完善，试过之后不太理想，所以还是照着`element-plus`来吧\n\n> 在参考和查找的过程中，无意间发现了一个类似的仓库：[ninecat-ui](https://github.com/ninecat-ui/ninecat-ui),所以这篇文档在 element 基础上，也参照了部分 ninecat-ui 的思路（当然主要还是 element）\n\n## 安装依赖\n\n\n### markdown 相关依赖\n\n安装解析 markdown 语法的依赖\n\n`yarn add -D highlight.js markdown-it markdown-it-anchor markdown-it-chain markdown-it-container transliteration -W`\n\n### vue 相关依赖\n\n本地开发文档自然需要设置路由，后面可能会需要补全国际化，还要提前安装好 i18n。`yarn add -D vue-router@next vue-i18n@next -W`\n\n## 修改 webpack 配置\n\n### 修改 css rules\n\n之前写的疏忽，loader 里没有包含 `css`文件，导致了一些问题，首先修复\n\n```diff\n// build/webpack.config.base.js\n\n{\n-  test: /\\.scss$/,\n+  test: /\\.(css|sass|scss)$/,\n  use: [\n    { loader: 'style-loader' },\n    {\n      loader: 'css-loader',\n      options: { sourceMap: true }\n    },\n    {\n      loader: 'sass-loader'\n    }\n  ]\n},\n```\n\n### 添加解析 markdown 的 loader\n\n> 说来惭愧，这个 loader 我现在还是很茫然，因为是从 element-plus 粘贴来的。并不清楚为什么要这么配置，需要后面再仔细学习一下\n\n#### 创建 markdown-loader\n\nbuild 文件夹中创建 md-loader 文件夹，新建`config.js`、`container.js`、 `fence.js`、 `index.js`、`util.js`作为 md-loader 配置\n\n```js\n/* config.js */\nconst Config = require('markdown-it-chain')\nconst anchorPlugin = require('markdown-it-anchor')\nconst slugify = require('transliteration').slugify\nconst hljs = require('highlight.js')\nconst containers = require('./containers')\nconst overWriteFenceRule = require('./fence')\n\nconst config = new Config()\n\nconst highlight = (str, lang) => {\n  if (!lang || !hljs.getLanguage(lang)) {\n    return '<pre><code class=\"hljs\">' + str + '</code></pre>'\n  }\n  const html = hljs.highlight(lang, str, true, undefined).value\n  return `<pre><code class=\"hljs language-${lang}\">${html}</code></pre>`\n}\n\nconfig.options\n  .html(true)\n  .highlight(highlight)\n  .end()\n\n  .plugin('anchor')\n  .use(anchorPlugin, [\n    {\n      level: 2,\n      slugify: slugify,\n      permalink: true,\n      permalinkBefore: false,\n      // permalinkSymbol: '#'\n      permalinkSymbol: ''\n    }\n  ])\n  .end()\n\n  .plugin('containers')\n  .use(containers)\n  .end()\n\nconst md = config.toMd()\noverWriteFenceRule(md)\n\nmodule.exports = md\n\n// --------------------------------------------------------------\n\n/* containers.js */\nconst mdContainer = require('markdown-it-container')\n\nmodule.exports = md => {\n  md.use(mdContainer, 'demo', {\n    validate(params) {\n      return params.trim().match(/^demo\\s*(.*)$/)\n    },\n    render(tokens, idx) {\n      const m = tokens[idx].info.trim().match(/^demo\\s*(.*)$/)\n      if (tokens[idx].nesting === 1) {\n        const description = m && m.length > 1 ? m[1] : ''\n        const content = tokens[idx + 1].type === 'fence' ? tokens[idx + 1].content : ''\n        return `<demo-block>\n        ${description ? `<div>${md.render(description)}</div>` : ''}\n        <!--admin-demo: ${content}:admin-demo-->\n        `\n      }\n      return '</demo-block>'\n    }\n  })\n\n  md.use(mdContainer, 'tip')\n  md.use(mdContainer, 'warning')\n}\n\n// --------------------------------------------------------------\n\n/* fence.js */\n// 覆盖默认的 fence 渲染策略\nmodule.exports = md => {\n  const defaultRender = md.renderer.rules.fence\n  md.renderer.rules.fence = (tokens, idx, options, env, self) => {\n    const token = tokens[idx]\n    // 判断该 fence 是否在 :::demo 内\n    const prevToken = tokens[idx - 1]\n    const isInDemoContainer =\n      prevToken && prevToken.nesting === 1 && prevToken.info.trim().match(/^demo\\s*(.*)$/)\n    if (token.info === 'html' && isInDemoContainer) {\n      return `<template #highlight><pre v-pre><code class=\"html\">${md.utils.escapeHtml(\n        token.content\n      )}</code></pre></template>`\n    }\n    return defaultRender(tokens, idx, options, env, self)\n  }\n}\n\n// --------------------------------------------------------------\n\n/* index.js */\nconst { stripScript, stripTemplate, genInlineComponentText } = require('./util')\nconst md = require('./config')\n\nmodule.exports = function (source) {\n  const content = md.render(source)\n\n  const startTag = '<!--admin-demo:'\n  const startTagLen = startTag.length\n  const endTag = ':admin-demo-->'\n  const endTagLen = endTag.length\n\n  let componenetsString = ''\n  let id = 0 // demo 的 id\n  let output = [] // 输出的内容\n  let start = 0 // 字符串开始位置\n\n  let commentStart = content.indexOf(startTag)\n  let commentEnd = content.indexOf(endTag, commentStart + startTagLen)\n  while (commentStart !== -1 && commentEnd !== -1) {\n    output.push(content.slice(start, commentStart))\n\n    const commentContent = content.slice(commentStart + startTagLen, commentEnd)\n    const html = stripTemplate(commentContent)\n    const script = stripScript(commentContent)\n    let demoComponentContent = genInlineComponentText(html, script)\n    const demoComponentName = `admin-demo${id}`\n    output.push(`<template #source><${demoComponentName} /></template>`)\n    componenetsString += `${JSON.stringify(demoComponentName)}: ${demoComponentContent},`\n\n    // 重新计算下一次的位置\n    id++\n    start = commentEnd + endTagLen\n    commentStart = content.indexOf(startTag, start)\n    commentEnd = content.indexOf(endTag, commentStart + startTagLen)\n  }\n\n  // 仅允许在 demo 不存在时，才可以在 Markdown 中写 script 标签\n  // todo: 优化这段逻辑\n\n  let pageScript = ''\n  if (componenetsString) {\n    pageScript = `<script lang=\"ts\">\n      import * as Vue from 'vue';\n      export default {\n        name: 'component-doc',\n        components: {\n          ${componenetsString}\n        }\n      }\n    </script>`\n  } else if (content.indexOf('<script>') === 0) {\n    // 硬编码，有待改善\n    start = content.indexOf('</script>') + '</script>'.length\n    pageScript = content.slice(0, start)\n  }\n\n  output.push(content.slice(start))\n  const result = `\n  <template>\n    <section class=\"content admin-doc\">\n      ${output.join('')}\n    </section>\n  </template>\n  ${pageScript}\n  `\n  return result\n}\n\n// --------------------------------------------------------------\n\n/* util.js */\nconst { compileTemplate, TemplateCompiler } = require('@vue/compiler-sfc')\n\nfunction stripScript(content) {\n  const result = content.match(/<(script)>([\\s\\S]+)<\\/\\1>/)\n  return result && result[2] ? result[2].trim() : ''\n}\n\nfunction stripStyle(content) {\n  const result = content.match(/<(style)\\s*>([\\s\\S]+)<\\/\\1>/)\n  return result && result[2] ? result[2].trim() : ''\n}\n\n// 编写例子时不一定有 template。所以采取的方案是剔除其他的内容\nfunction stripTemplate(content) {\n  content = content.trim()\n  if (!content) {\n    return content\n  }\n  return content.replace(/<(script|style)[\\s\\S]+<\\/\\1>/g, '').trim()\n}\n\nfunction pad(source) {\n  return source\n    .split(/\\r?\\n/)\n    .map(line => `  ${line}`)\n    .join('\\n')\n}\n\nconst templateReplaceRegex = /<template>([\\s\\S]+)<\\/template>/g\nfunction genInlineComponentText(template, script) {\n  // https://github.com/vuejs/vue-loader/blob/423b8341ab368c2117931e909e2da9af74503635/lib/loaders/templateLoader.js#L46\n  let source = template\n  if (templateReplaceRegex.test(source)) {\n    source = source.replace(templateReplaceRegex, '$1')\n  }\n  const finalOptions = {\n    source: `<div>${source}</div>`,\n    filename: 'inline-component',\n    compiler: TemplateCompiler,\n    compilerOptions: {\n      mode: 'function'\n    }\n  }\n  const compiled = compileTemplate(finalOptions)\n  // tips\n  if (compiled.tips && compiled.tips.length) {\n    compiled.tips.forEach(tip => {\n      console.warn(tip)\n    })\n  }\n  // errors\n  if (compiled.errors && compiled.errors.length) {\n    console.error(\n      `\\n  Error compiling template:\\n${pad(compiled.source)}\\n` +\n        compiled.errors.map(e => `  - ${e}`).join('\\n') +\n        '\\n'\n    )\n  }\n  let demoComponentContent = `\n    ${compiled.code.replace('return function render', 'function render')}\n  `\n  // todo: 这里采用了硬编码有待改进\n  script = script.trim()\n  if (script) {\n    script = script\n      .replace(/export\\s+default/, 'const democomponentExport =')\n      .replace(/import ({.*}) from 'vue'/g, (s, s1) => `const ${s1} = Vue`)\n  } else {\n    script = 'const democomponentExport = {}'\n  }\n  demoComponentContent = `(function() {\n    ${demoComponentContent}\n    ${script}\n    return {\n      render,\n      ...democomponentExport\n    }\n  })()`\n  return demoComponentContent\n}\n\nmodule.exports = {\n  stripScript,\n  stripStyle,\n  stripTemplate,\n  genInlineComponentText\n}\n```\n\n#### 添加 md-loader 配置\n\n`webpack.config.base.js`添加 markdown 规则\n\n```diff\n+{\n+  test: /\\.md$/,\n+  use: [\n+    {\n+      loader: 'vue-loader',\n+      options: {\n+        compilerOptions: {\n+          preserveWhitespace: false\n+        }\n+      }\n+    },\n+    {\n+      loader: path.resolve(__dirname, './md-loader/index.js')\n+    }\n+  ]\n+}\n```\n\n## 搭建运行环境的 vue 页面\n\n修改`website`下的配置，变成一个完整的 demo 页\n\n### 创建单页面组件\n\n新建`components`文件夹，添加组件\n\n```shell\ncd website\nmkdir Container DemoBlock Header Nav\n```\n\n其中Container 是文档主要内容区域， Header 是文档头部，Nav 是文档侧边导航， DemoBlock是 vue 源码编译为 demo 的组件，现在除了 DemoBlock 外，其他组件暂时没有具体实现，以后在慢慢补充。代码也过于冗长，不贴出来了，可以下载来看。\n\n### 修改文件\n\n```diff\n<template>\n-  <div class=\"app\">\n-    <Hello :name=\"name\" />\n-  </div>\n+  <Header />\n+  <section class=\"content-wrapper\">\n+    <Nav class=\"menu-bar\" />\n+    <Container class=\"content\">\n+      <router-view />\n+    </Container>\n+  </section>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent, reactive, toRefs } from 'vue'\n+import Header from './components/Header/index.vue'\n+import Nav from './components/Nav/index.vue'\n+import Container from './components/Container/index.vue'\n\nexport default defineComponent({\n  name: 'App',\n+  components: {\n+    Header,\n+    Nav,\n+    Container\n+  },\n  setup() {\n    const state = reactive({ name: 'admin ui' })\n    return {\n      ...toRefs(state)\n    }\n  }\n})\n</script>\n\n+<style lang=\"scss\" scoped>\n+.content-wrapper {\n+  display: flex;\n+  overflow: hidden;\n+  flex: 1;\n\n+  .menu-bar {\n+    width: 200px;\n+    color: #fff;\n+    background: red;\n+  }\n\n+  .content {\n+    flex: 1;\n+  }\n+}\n</style>\n\n```\n\n### 创建路由\n\nwebsite 下新建 `nav.config.ts`\n\n```js\nimport { getLang } from './utils/lang'\n\nconst localLang = getLang()\nconst componentsString = localLang === 'en-US' ? 'Components' : '组件'\nconst baseComponentsString = localLang === 'en-US' ? 'Base Components' : '基础组件'\n\nexport const navs = [\n  {\n    name: componentsString,\n    groups: [\n      {\n        groupName: baseComponentsString,\n        list: [\n          {\n            path: '/button',\n            name: 'Button',\n            component: () => {\n              if (localLang === 'en-US') {\n                return import('./markdown/en-US/button.md')\n              } else {\n                return import('./markdown/zh-CN/button.md')\n              }\n            }\n          }\n        ]\n      }\n    ]\n  }\n]\n```\n\n创建 `utils/lang.ts`\n\n```ts\nexport let curLang = window.sessionStorage.getItem('lang')\n\nexport const langTransformMap = {\n  zh: 'zh-CN',\n  en: 'en-US'\n}\n\nexport function setLang(langType) {\n  window.sessionStorage.setItem('lang', langType)\n}\n\nexport function transformLang(originalLang) {\n  let langTransform = langTransformMap[originalLang]\n  if (langTransform === undefined) langTransform = originalLang\n  curLang = langTransform\n  return langTransform\n}\n\nexport function getLang(lang?: string): string {\n  if (curLang == null || curLang === '') {\n    const langTransform = transformLang(window.sessionStorage.getItem('lang') || navigator.language)\n    setLang(langTransform)\n    return langTransform\n  } else {\n    return lang ? window.sessionStorage.getItem('lang') || navigator.language : curLang\n  }\n}\n```\n\n新建`router/index.ts`\n\n```js\nimport { createRouter, createWebHashHistory } from 'vue-router'\nimport { nextTick } from 'vue'\nimport hljs from 'highlight.js'\nimport { navs } from '../nav.config'\n\nexport const indexRoute = [\n]\n\nconst componentRoutes = []\n\nnavs.forEach(navItem => {\n  navItem.groups.forEach(groupItem => {\n    groupItem.list.forEach(item => {\n      if (item.path !== '/') {\n        componentRoutes.push({\n          path: item.path,\n          name: item.path.slice(1),\n          meta: {\n            name: item.path.slice(1)\n          },\n          component: item.component\n        })\n      }\n    })\n  })\n})\n\nconst routes = [...indexRoute, ...componentRoutes]\n\nconst router = createRouter({\n  history: createWebHashHistory(),\n  routes: routes\n})\n\nrouter.afterEach(() => {\n  nextTick(() => {\n    const blocks = document.querySelectorAll('pre code:not(.hljs)')\n    Array.prototype.forEach.call(blocks, hljs.highlightBlock)\n  })\n})\n\nexport default router\n```\n\n创建 css 文件，修改页面样式\n\n```css\n/* website/styles/common.scss */\nhtml,\nbody {\n  height: 100%;\n  padding: 0;\n  margin: 0;\n  overflow: hidden;\n  font-family: 'Helvetica Neue', Helvetica, 'PingFang SC', 'Hiragino Sans GB', 'Microsoft YaHei',\n    SimSun, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  font-weight: 400;\n  -webkit-tap-highlight-color: transparent;\n}\n\n#app {\n  display: flex;\n  flex-direction: column;\n  height: 100%;\n}\n\na {\n  color: #409eff;\n  text-decoration: none;\n}\n\ncode {\n  padding: 0 4px;\n  background-color: #f9fafc;\n  border: 1px solid #eaeefb;\n  border-radius: 4px;\n}\n\nbutton,\ninput,\nselect,\ntextarea {\n  font-family: inherit;\n  font-size: inherit;\n  line-height: inherit;\n  color: inherit;\n}\n\n.hljs {\n  padding: 18px 24px;\n  margin-bottom: 25px;\n  font-family: Menlo, Monaco, Consolas, Courier, monospace;\n  font-size: 12px;\n  -webkit-font-smoothing: auto;\n  line-height: 1.8;\n  background-color: #fafafa;\n  border: solid 1px #eaeefb;\n  border-radius: 4px;\n}\n\n\n\n.demo {\n  margin: 20px 0;\n}\n```\n\n修改`main.ts`\n\n```diff\nimport { createApp } from 'vue'\nimport App from './app.vue'\nimport AdminUI from '../packages/admin-ui'\n+import 'highlight.js/styles/color-brewer.css' // 代码块高亮主题，多种主题可选择\n\n\n+import router from './router'\n+import DemoBlock from './components/DemoBlock/index.vue'\n+import './styles/common.scss'\n\n-createApp(App).use(AdminUI).mount('#app')\n+createApp(App).use(AdminUI).component('demo-block', DemoBlock).use(router).mount('#app')\n```\n\n### 添加枚举类型\n\n新建 enums 文件夹，用来存放项目的枚举类型，目前只有语言类型需要保存\n\n```ts\nexport enum Language {\n  /** Chinese */\n  CN = 'zh-CN',\n  /** English */\n  EN = 'en-US'\n}\n```\n\n## 修改packages && 编写文档\n\n例子中，我定义了`button`组件，然后新建`markdown`文件夹，创建相应的语言文件夹，分别创建`button.md`，然后编写文档，就完成了。这里有几点要注意：\n\n+ `:::demo demo-desc`是固定的语法，一定要这样写，下面的源码才会被编译成示例\n+ 示例中的`dt-button`，对应的是 button 组件中，vue 的 name\n\n\n## 增加 build:docs命令\n\n```shell\n\"script\": {\n+  \"build:docs\": \"webpack --config build/webpack.config.dev.js\"\n}\n```\n","source":"_posts/从零搭建Vue UI组件库(五).md","raw":"---\ntitle: 从零搭建Vue UI组件库(五)\ndate: 2021-04-20 16:24:12\ntags: [Vue, adminUI]\ncategories: [adminUI]\ndescription: 尝试搭建自己的Vue UI 组件库, 持续更新(大概)\n---\n\n## 写在前面\n\n接上一篇，这篇说的是使用`markdown`作为开发文档，原本想的是直接使用`vuepress`加入进来，万万没想到它不支持`vue3`，而新的`vuepress@next`功能还未完善，试过之后不太理想，所以还是照着`element-plus`来吧\n\n> 在参考和查找的过程中，无意间发现了一个类似的仓库：[ninecat-ui](https://github.com/ninecat-ui/ninecat-ui),所以这篇文档在 element 基础上，也参照了部分 ninecat-ui 的思路（当然主要还是 element）\n\n## 安装依赖\n\n\n### markdown 相关依赖\n\n安装解析 markdown 语法的依赖\n\n`yarn add -D highlight.js markdown-it markdown-it-anchor markdown-it-chain markdown-it-container transliteration -W`\n\n### vue 相关依赖\n\n本地开发文档自然需要设置路由，后面可能会需要补全国际化，还要提前安装好 i18n。`yarn add -D vue-router@next vue-i18n@next -W`\n\n## 修改 webpack 配置\n\n### 修改 css rules\n\n之前写的疏忽，loader 里没有包含 `css`文件，导致了一些问题，首先修复\n\n```diff\n// build/webpack.config.base.js\n\n{\n-  test: /\\.scss$/,\n+  test: /\\.(css|sass|scss)$/,\n  use: [\n    { loader: 'style-loader' },\n    {\n      loader: 'css-loader',\n      options: { sourceMap: true }\n    },\n    {\n      loader: 'sass-loader'\n    }\n  ]\n},\n```\n\n### 添加解析 markdown 的 loader\n\n> 说来惭愧，这个 loader 我现在还是很茫然，因为是从 element-plus 粘贴来的。并不清楚为什么要这么配置，需要后面再仔细学习一下\n\n#### 创建 markdown-loader\n\nbuild 文件夹中创建 md-loader 文件夹，新建`config.js`、`container.js`、 `fence.js`、 `index.js`、`util.js`作为 md-loader 配置\n\n```js\n/* config.js */\nconst Config = require('markdown-it-chain')\nconst anchorPlugin = require('markdown-it-anchor')\nconst slugify = require('transliteration').slugify\nconst hljs = require('highlight.js')\nconst containers = require('./containers')\nconst overWriteFenceRule = require('./fence')\n\nconst config = new Config()\n\nconst highlight = (str, lang) => {\n  if (!lang || !hljs.getLanguage(lang)) {\n    return '<pre><code class=\"hljs\">' + str + '</code></pre>'\n  }\n  const html = hljs.highlight(lang, str, true, undefined).value\n  return `<pre><code class=\"hljs language-${lang}\">${html}</code></pre>`\n}\n\nconfig.options\n  .html(true)\n  .highlight(highlight)\n  .end()\n\n  .plugin('anchor')\n  .use(anchorPlugin, [\n    {\n      level: 2,\n      slugify: slugify,\n      permalink: true,\n      permalinkBefore: false,\n      // permalinkSymbol: '#'\n      permalinkSymbol: ''\n    }\n  ])\n  .end()\n\n  .plugin('containers')\n  .use(containers)\n  .end()\n\nconst md = config.toMd()\noverWriteFenceRule(md)\n\nmodule.exports = md\n\n// --------------------------------------------------------------\n\n/* containers.js */\nconst mdContainer = require('markdown-it-container')\n\nmodule.exports = md => {\n  md.use(mdContainer, 'demo', {\n    validate(params) {\n      return params.trim().match(/^demo\\s*(.*)$/)\n    },\n    render(tokens, idx) {\n      const m = tokens[idx].info.trim().match(/^demo\\s*(.*)$/)\n      if (tokens[idx].nesting === 1) {\n        const description = m && m.length > 1 ? m[1] : ''\n        const content = tokens[idx + 1].type === 'fence' ? tokens[idx + 1].content : ''\n        return `<demo-block>\n        ${description ? `<div>${md.render(description)}</div>` : ''}\n        <!--admin-demo: ${content}:admin-demo-->\n        `\n      }\n      return '</demo-block>'\n    }\n  })\n\n  md.use(mdContainer, 'tip')\n  md.use(mdContainer, 'warning')\n}\n\n// --------------------------------------------------------------\n\n/* fence.js */\n// 覆盖默认的 fence 渲染策略\nmodule.exports = md => {\n  const defaultRender = md.renderer.rules.fence\n  md.renderer.rules.fence = (tokens, idx, options, env, self) => {\n    const token = tokens[idx]\n    // 判断该 fence 是否在 :::demo 内\n    const prevToken = tokens[idx - 1]\n    const isInDemoContainer =\n      prevToken && prevToken.nesting === 1 && prevToken.info.trim().match(/^demo\\s*(.*)$/)\n    if (token.info === 'html' && isInDemoContainer) {\n      return `<template #highlight><pre v-pre><code class=\"html\">${md.utils.escapeHtml(\n        token.content\n      )}</code></pre></template>`\n    }\n    return defaultRender(tokens, idx, options, env, self)\n  }\n}\n\n// --------------------------------------------------------------\n\n/* index.js */\nconst { stripScript, stripTemplate, genInlineComponentText } = require('./util')\nconst md = require('./config')\n\nmodule.exports = function (source) {\n  const content = md.render(source)\n\n  const startTag = '<!--admin-demo:'\n  const startTagLen = startTag.length\n  const endTag = ':admin-demo-->'\n  const endTagLen = endTag.length\n\n  let componenetsString = ''\n  let id = 0 // demo 的 id\n  let output = [] // 输出的内容\n  let start = 0 // 字符串开始位置\n\n  let commentStart = content.indexOf(startTag)\n  let commentEnd = content.indexOf(endTag, commentStart + startTagLen)\n  while (commentStart !== -1 && commentEnd !== -1) {\n    output.push(content.slice(start, commentStart))\n\n    const commentContent = content.slice(commentStart + startTagLen, commentEnd)\n    const html = stripTemplate(commentContent)\n    const script = stripScript(commentContent)\n    let demoComponentContent = genInlineComponentText(html, script)\n    const demoComponentName = `admin-demo${id}`\n    output.push(`<template #source><${demoComponentName} /></template>`)\n    componenetsString += `${JSON.stringify(demoComponentName)}: ${demoComponentContent},`\n\n    // 重新计算下一次的位置\n    id++\n    start = commentEnd + endTagLen\n    commentStart = content.indexOf(startTag, start)\n    commentEnd = content.indexOf(endTag, commentStart + startTagLen)\n  }\n\n  // 仅允许在 demo 不存在时，才可以在 Markdown 中写 script 标签\n  // todo: 优化这段逻辑\n\n  let pageScript = ''\n  if (componenetsString) {\n    pageScript = `<script lang=\"ts\">\n      import * as Vue from 'vue';\n      export default {\n        name: 'component-doc',\n        components: {\n          ${componenetsString}\n        }\n      }\n    </script>`\n  } else if (content.indexOf('<script>') === 0) {\n    // 硬编码，有待改善\n    start = content.indexOf('</script>') + '</script>'.length\n    pageScript = content.slice(0, start)\n  }\n\n  output.push(content.slice(start))\n  const result = `\n  <template>\n    <section class=\"content admin-doc\">\n      ${output.join('')}\n    </section>\n  </template>\n  ${pageScript}\n  `\n  return result\n}\n\n// --------------------------------------------------------------\n\n/* util.js */\nconst { compileTemplate, TemplateCompiler } = require('@vue/compiler-sfc')\n\nfunction stripScript(content) {\n  const result = content.match(/<(script)>([\\s\\S]+)<\\/\\1>/)\n  return result && result[2] ? result[2].trim() : ''\n}\n\nfunction stripStyle(content) {\n  const result = content.match(/<(style)\\s*>([\\s\\S]+)<\\/\\1>/)\n  return result && result[2] ? result[2].trim() : ''\n}\n\n// 编写例子时不一定有 template。所以采取的方案是剔除其他的内容\nfunction stripTemplate(content) {\n  content = content.trim()\n  if (!content) {\n    return content\n  }\n  return content.replace(/<(script|style)[\\s\\S]+<\\/\\1>/g, '').trim()\n}\n\nfunction pad(source) {\n  return source\n    .split(/\\r?\\n/)\n    .map(line => `  ${line}`)\n    .join('\\n')\n}\n\nconst templateReplaceRegex = /<template>([\\s\\S]+)<\\/template>/g\nfunction genInlineComponentText(template, script) {\n  // https://github.com/vuejs/vue-loader/blob/423b8341ab368c2117931e909e2da9af74503635/lib/loaders/templateLoader.js#L46\n  let source = template\n  if (templateReplaceRegex.test(source)) {\n    source = source.replace(templateReplaceRegex, '$1')\n  }\n  const finalOptions = {\n    source: `<div>${source}</div>`,\n    filename: 'inline-component',\n    compiler: TemplateCompiler,\n    compilerOptions: {\n      mode: 'function'\n    }\n  }\n  const compiled = compileTemplate(finalOptions)\n  // tips\n  if (compiled.tips && compiled.tips.length) {\n    compiled.tips.forEach(tip => {\n      console.warn(tip)\n    })\n  }\n  // errors\n  if (compiled.errors && compiled.errors.length) {\n    console.error(\n      `\\n  Error compiling template:\\n${pad(compiled.source)}\\n` +\n        compiled.errors.map(e => `  - ${e}`).join('\\n') +\n        '\\n'\n    )\n  }\n  let demoComponentContent = `\n    ${compiled.code.replace('return function render', 'function render')}\n  `\n  // todo: 这里采用了硬编码有待改进\n  script = script.trim()\n  if (script) {\n    script = script\n      .replace(/export\\s+default/, 'const democomponentExport =')\n      .replace(/import ({.*}) from 'vue'/g, (s, s1) => `const ${s1} = Vue`)\n  } else {\n    script = 'const democomponentExport = {}'\n  }\n  demoComponentContent = `(function() {\n    ${demoComponentContent}\n    ${script}\n    return {\n      render,\n      ...democomponentExport\n    }\n  })()`\n  return demoComponentContent\n}\n\nmodule.exports = {\n  stripScript,\n  stripStyle,\n  stripTemplate,\n  genInlineComponentText\n}\n```\n\n#### 添加 md-loader 配置\n\n`webpack.config.base.js`添加 markdown 规则\n\n```diff\n+{\n+  test: /\\.md$/,\n+  use: [\n+    {\n+      loader: 'vue-loader',\n+      options: {\n+        compilerOptions: {\n+          preserveWhitespace: false\n+        }\n+      }\n+    },\n+    {\n+      loader: path.resolve(__dirname, './md-loader/index.js')\n+    }\n+  ]\n+}\n```\n\n## 搭建运行环境的 vue 页面\n\n修改`website`下的配置，变成一个完整的 demo 页\n\n### 创建单页面组件\n\n新建`components`文件夹，添加组件\n\n```shell\ncd website\nmkdir Container DemoBlock Header Nav\n```\n\n其中Container 是文档主要内容区域， Header 是文档头部，Nav 是文档侧边导航， DemoBlock是 vue 源码编译为 demo 的组件，现在除了 DemoBlock 外，其他组件暂时没有具体实现，以后在慢慢补充。代码也过于冗长，不贴出来了，可以下载来看。\n\n### 修改文件\n\n```diff\n<template>\n-  <div class=\"app\">\n-    <Hello :name=\"name\" />\n-  </div>\n+  <Header />\n+  <section class=\"content-wrapper\">\n+    <Nav class=\"menu-bar\" />\n+    <Container class=\"content\">\n+      <router-view />\n+    </Container>\n+  </section>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent, reactive, toRefs } from 'vue'\n+import Header from './components/Header/index.vue'\n+import Nav from './components/Nav/index.vue'\n+import Container from './components/Container/index.vue'\n\nexport default defineComponent({\n  name: 'App',\n+  components: {\n+    Header,\n+    Nav,\n+    Container\n+  },\n  setup() {\n    const state = reactive({ name: 'admin ui' })\n    return {\n      ...toRefs(state)\n    }\n  }\n})\n</script>\n\n+<style lang=\"scss\" scoped>\n+.content-wrapper {\n+  display: flex;\n+  overflow: hidden;\n+  flex: 1;\n\n+  .menu-bar {\n+    width: 200px;\n+    color: #fff;\n+    background: red;\n+  }\n\n+  .content {\n+    flex: 1;\n+  }\n+}\n</style>\n\n```\n\n### 创建路由\n\nwebsite 下新建 `nav.config.ts`\n\n```js\nimport { getLang } from './utils/lang'\n\nconst localLang = getLang()\nconst componentsString = localLang === 'en-US' ? 'Components' : '组件'\nconst baseComponentsString = localLang === 'en-US' ? 'Base Components' : '基础组件'\n\nexport const navs = [\n  {\n    name: componentsString,\n    groups: [\n      {\n        groupName: baseComponentsString,\n        list: [\n          {\n            path: '/button',\n            name: 'Button',\n            component: () => {\n              if (localLang === 'en-US') {\n                return import('./markdown/en-US/button.md')\n              } else {\n                return import('./markdown/zh-CN/button.md')\n              }\n            }\n          }\n        ]\n      }\n    ]\n  }\n]\n```\n\n创建 `utils/lang.ts`\n\n```ts\nexport let curLang = window.sessionStorage.getItem('lang')\n\nexport const langTransformMap = {\n  zh: 'zh-CN',\n  en: 'en-US'\n}\n\nexport function setLang(langType) {\n  window.sessionStorage.setItem('lang', langType)\n}\n\nexport function transformLang(originalLang) {\n  let langTransform = langTransformMap[originalLang]\n  if (langTransform === undefined) langTransform = originalLang\n  curLang = langTransform\n  return langTransform\n}\n\nexport function getLang(lang?: string): string {\n  if (curLang == null || curLang === '') {\n    const langTransform = transformLang(window.sessionStorage.getItem('lang') || navigator.language)\n    setLang(langTransform)\n    return langTransform\n  } else {\n    return lang ? window.sessionStorage.getItem('lang') || navigator.language : curLang\n  }\n}\n```\n\n新建`router/index.ts`\n\n```js\nimport { createRouter, createWebHashHistory } from 'vue-router'\nimport { nextTick } from 'vue'\nimport hljs from 'highlight.js'\nimport { navs } from '../nav.config'\n\nexport const indexRoute = [\n]\n\nconst componentRoutes = []\n\nnavs.forEach(navItem => {\n  navItem.groups.forEach(groupItem => {\n    groupItem.list.forEach(item => {\n      if (item.path !== '/') {\n        componentRoutes.push({\n          path: item.path,\n          name: item.path.slice(1),\n          meta: {\n            name: item.path.slice(1)\n          },\n          component: item.component\n        })\n      }\n    })\n  })\n})\n\nconst routes = [...indexRoute, ...componentRoutes]\n\nconst router = createRouter({\n  history: createWebHashHistory(),\n  routes: routes\n})\n\nrouter.afterEach(() => {\n  nextTick(() => {\n    const blocks = document.querySelectorAll('pre code:not(.hljs)')\n    Array.prototype.forEach.call(blocks, hljs.highlightBlock)\n  })\n})\n\nexport default router\n```\n\n创建 css 文件，修改页面样式\n\n```css\n/* website/styles/common.scss */\nhtml,\nbody {\n  height: 100%;\n  padding: 0;\n  margin: 0;\n  overflow: hidden;\n  font-family: 'Helvetica Neue', Helvetica, 'PingFang SC', 'Hiragino Sans GB', 'Microsoft YaHei',\n    SimSun, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  font-weight: 400;\n  -webkit-tap-highlight-color: transparent;\n}\n\n#app {\n  display: flex;\n  flex-direction: column;\n  height: 100%;\n}\n\na {\n  color: #409eff;\n  text-decoration: none;\n}\n\ncode {\n  padding: 0 4px;\n  background-color: #f9fafc;\n  border: 1px solid #eaeefb;\n  border-radius: 4px;\n}\n\nbutton,\ninput,\nselect,\ntextarea {\n  font-family: inherit;\n  font-size: inherit;\n  line-height: inherit;\n  color: inherit;\n}\n\n.hljs {\n  padding: 18px 24px;\n  margin-bottom: 25px;\n  font-family: Menlo, Monaco, Consolas, Courier, monospace;\n  font-size: 12px;\n  -webkit-font-smoothing: auto;\n  line-height: 1.8;\n  background-color: #fafafa;\n  border: solid 1px #eaeefb;\n  border-radius: 4px;\n}\n\n\n\n.demo {\n  margin: 20px 0;\n}\n```\n\n修改`main.ts`\n\n```diff\nimport { createApp } from 'vue'\nimport App from './app.vue'\nimport AdminUI from '../packages/admin-ui'\n+import 'highlight.js/styles/color-brewer.css' // 代码块高亮主题，多种主题可选择\n\n\n+import router from './router'\n+import DemoBlock from './components/DemoBlock/index.vue'\n+import './styles/common.scss'\n\n-createApp(App).use(AdminUI).mount('#app')\n+createApp(App).use(AdminUI).component('demo-block', DemoBlock).use(router).mount('#app')\n```\n\n### 添加枚举类型\n\n新建 enums 文件夹，用来存放项目的枚举类型，目前只有语言类型需要保存\n\n```ts\nexport enum Language {\n  /** Chinese */\n  CN = 'zh-CN',\n  /** English */\n  EN = 'en-US'\n}\n```\n\n## 修改packages && 编写文档\n\n例子中，我定义了`button`组件，然后新建`markdown`文件夹，创建相应的语言文件夹，分别创建`button.md`，然后编写文档，就完成了。这里有几点要注意：\n\n+ `:::demo demo-desc`是固定的语法，一定要这样写，下面的源码才会被编译成示例\n+ 示例中的`dt-button`，对应的是 button 组件中，vue 的 name\n\n\n## 增加 build:docs命令\n\n```shell\n\"script\": {\n+  \"build:docs\": \"webpack --config build/webpack.config.dev.js\"\n}\n```\n","slug":"从零搭建Vue UI组件库(五)","published":1,"updated":"2021-06-25T11:19:55.445Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckqc904p6001qwotvm3lc182e","content":"<h2 id=\"写在前面\"><a href=\"#写在前面\" class=\"headerlink\" title=\"写在前面\"></a>写在前面</h2><p>接上一篇，这篇说的是使用<code>markdown</code>作为开发文档，原本想的是直接使用<code>vuepress</code>加入进来，万万没想到它不支持<code>vue3</code>，而新的<code>vuepress@next</code>功能还未完善，试过之后不太理想，所以还是照着<code>element-plus</code>来吧</p>\n<blockquote>\n<p>在参考和查找的过程中，无意间发现了一个类似的仓库：<a href=\"https://github.com/ninecat-ui/ninecat-ui\" target=\"_blank\" rel=\"noopener\">ninecat-ui</a>,所以这篇文档在 element 基础上，也参照了部分 ninecat-ui 的思路（当然主要还是 element）</p>\n</blockquote>\n<h2 id=\"安装依赖\"><a href=\"#安装依赖\" class=\"headerlink\" title=\"安装依赖\"></a>安装依赖</h2><h3 id=\"markdown-相关依赖\"><a href=\"#markdown-相关依赖\" class=\"headerlink\" title=\"markdown 相关依赖\"></a>markdown 相关依赖</h3><p>安装解析 markdown 语法的依赖</p>\n<p><code>yarn add -D highlight.js markdown-it markdown-it-anchor markdown-it-chain markdown-it-container transliteration -W</code></p>\n<h3 id=\"vue-相关依赖\"><a href=\"#vue-相关依赖\" class=\"headerlink\" title=\"vue 相关依赖\"></a>vue 相关依赖</h3><p>本地开发文档自然需要设置路由，后面可能会需要补全国际化，还要提前安装好 i18n。<code>yarn add -D vue-router@next vue-i18n@next -W</code></p>\n<h2 id=\"修改-webpack-配置\"><a href=\"#修改-webpack-配置\" class=\"headerlink\" title=\"修改 webpack 配置\"></a>修改 webpack 配置</h2><h3 id=\"修改-css-rules\"><a href=\"#修改-css-rules\" class=\"headerlink\" title=\"修改 css rules\"></a>修改 css rules</h3><p>之前写的疏忽，loader 里没有包含 <code>css</code>文件，导致了一些问题，首先修复</p>\n<div class=\"code-panel__wrapper\" autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\"><header class=\"mac-panel\"><span class=\"doc-path\"></span><span class=\"mac-panel__language\">DIFF</span></header><figure class=\"iseeu highlight diff\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">// build/webpack.config.base.js</span><br><span class=\"line\"></span><br><span class=\"line\">&#123;</span><br><span class=\"line\"><span class=\"deletion\">-  test: /\\.scss$/,</span></span><br><span class=\"line\"><span class=\"addition\">+  test: /\\.(css|sass|scss)$/,</span></span><br><span class=\"line\">  use: [</span><br><span class=\"line\">    &#123; loader: 'style-loader' &#125;,</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">      loader: 'css-loader',</span><br><span class=\"line\">      options: &#123; sourceMap: true &#125;</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">      loader: 'sass-loader'</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  ]</span><br><span class=\"line\">&#125;,</span><br></pre></td></tr></table></figure></div>\n<h3 id=\"添加解析-markdown-的-loader\"><a href=\"#添加解析-markdown-的-loader\" class=\"headerlink\" title=\"添加解析 markdown 的 loader\"></a>添加解析 markdown 的 loader</h3><blockquote>\n<p>说来惭愧，这个 loader 我现在还是很茫然，因为是从 element-plus 粘贴来的。并不清楚为什么要这么配置，需要后面再仔细学习一下</p>\n</blockquote>\n<h4 id=\"创建-markdown-loader\"><a href=\"#创建-markdown-loader\" class=\"headerlink\" title=\"创建 markdown-loader\"></a>创建 markdown-loader</h4><p>build 文件夹中创建 md-loader 文件夹，新建<code>config.js</code>、<code>container.js</code>、 <code>fence.js</code>、 <code>index.js</code>、<code>util.js</code>作为 md-loader 配置</p>\n<div class=\"code-panel__wrapper\" autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\"><header class=\"mac-panel\"><span class=\"doc-path\"></span><span class=\"mac-panel__language\">JS</span></header><figure class=\"iseeu highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br><span class=\"line\">165</span><br><span class=\"line\">166</span><br><span class=\"line\">167</span><br><span class=\"line\">168</span><br><span class=\"line\">169</span><br><span class=\"line\">170</span><br><span class=\"line\">171</span><br><span class=\"line\">172</span><br><span class=\"line\">173</span><br><span class=\"line\">174</span><br><span class=\"line\">175</span><br><span class=\"line\">176</span><br><span class=\"line\">177</span><br><span class=\"line\">178</span><br><span class=\"line\">179</span><br><span class=\"line\">180</span><br><span class=\"line\">181</span><br><span class=\"line\">182</span><br><span class=\"line\">183</span><br><span class=\"line\">184</span><br><span class=\"line\">185</span><br><span class=\"line\">186</span><br><span class=\"line\">187</span><br><span class=\"line\">188</span><br><span class=\"line\">189</span><br><span class=\"line\">190</span><br><span class=\"line\">191</span><br><span class=\"line\">192</span><br><span class=\"line\">193</span><br><span class=\"line\">194</span><br><span class=\"line\">195</span><br><span class=\"line\">196</span><br><span class=\"line\">197</span><br><span class=\"line\">198</span><br><span class=\"line\">199</span><br><span class=\"line\">200</span><br><span class=\"line\">201</span><br><span class=\"line\">202</span><br><span class=\"line\">203</span><br><span class=\"line\">204</span><br><span class=\"line\">205</span><br><span class=\"line\">206</span><br><span class=\"line\">207</span><br><span class=\"line\">208</span><br><span class=\"line\">209</span><br><span class=\"line\">210</span><br><span class=\"line\">211</span><br><span class=\"line\">212</span><br><span class=\"line\">213</span><br><span class=\"line\">214</span><br><span class=\"line\">215</span><br><span class=\"line\">216</span><br><span class=\"line\">217</span><br><span class=\"line\">218</span><br><span class=\"line\">219</span><br><span class=\"line\">220</span><br><span class=\"line\">221</span><br><span class=\"line\">222</span><br><span class=\"line\">223</span><br><span class=\"line\">224</span><br><span class=\"line\">225</span><br><span class=\"line\">226</span><br><span class=\"line\">227</span><br><span class=\"line\">228</span><br><span class=\"line\">229</span><br><span class=\"line\">230</span><br><span class=\"line\">231</span><br><span class=\"line\">232</span><br><span class=\"line\">233</span><br><span class=\"line\">234</span><br><span class=\"line\">235</span><br><span class=\"line\">236</span><br><span class=\"line\">237</span><br><span class=\"line\">238</span><br><span class=\"line\">239</span><br><span class=\"line\">240</span><br><span class=\"line\">241</span><br><span class=\"line\">242</span><br><span class=\"line\">243</span><br><span class=\"line\">244</span><br><span class=\"line\">245</span><br><span class=\"line\">246</span><br><span class=\"line\">247</span><br><span class=\"line\">248</span><br><span class=\"line\">249</span><br><span class=\"line\">250</span><br><span class=\"line\">251</span><br><span class=\"line\">252</span><br><span class=\"line\">253</span><br><span class=\"line\">254</span><br><span class=\"line\">255</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/* config.js */</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> Config = <span class=\"built_in\">require</span>(<span class=\"string\">'markdown-it-chain'</span>)</span><br><span class=\"line\"><span class=\"keyword\">const</span> anchorPlugin = <span class=\"built_in\">require</span>(<span class=\"string\">'markdown-it-anchor'</span>)</span><br><span class=\"line\"><span class=\"keyword\">const</span> slugify = <span class=\"built_in\">require</span>(<span class=\"string\">'transliteration'</span>).slugify</span><br><span class=\"line\"><span class=\"keyword\">const</span> hljs = <span class=\"built_in\">require</span>(<span class=\"string\">'highlight.js'</span>)</span><br><span class=\"line\"><span class=\"keyword\">const</span> containers = <span class=\"built_in\">require</span>(<span class=\"string\">'./containers'</span>)</span><br><span class=\"line\"><span class=\"keyword\">const</span> overWriteFenceRule = <span class=\"built_in\">require</span>(<span class=\"string\">'./fence'</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> config = <span class=\"keyword\">new</span> Config()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> highlight = <span class=\"function\">(<span class=\"params\">str, lang</span>) =&gt;</span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (!lang || !hljs.getLanguage(lang)) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"string\">'&lt;pre&gt;&lt;code class=\"hljs\"&gt;'</span> + str + <span class=\"string\">'&lt;/code&gt;&lt;/pre&gt;'</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">const</span> html = hljs.highlight(lang, str, <span class=\"literal\">true</span>, <span class=\"literal\">undefined</span>).value</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"string\">`&lt;pre&gt;&lt;code class=\"hljs language-<span class=\"subst\">$&#123;lang&#125;</span>\"&gt;<span class=\"subst\">$&#123;html&#125;</span>&lt;/code&gt;&lt;/pre&gt;`</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">config.options</span><br><span class=\"line\">  .html(<span class=\"literal\">true</span>)</span><br><span class=\"line\">  .highlight(highlight)</span><br><span class=\"line\">  .end()</span><br><span class=\"line\"></span><br><span class=\"line\">  .plugin(<span class=\"string\">'anchor'</span>)</span><br><span class=\"line\">  .use(anchorPlugin, [</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">      level: <span class=\"number\">2</span>,</span><br><span class=\"line\">      slugify: slugify,</span><br><span class=\"line\">      permalink: <span class=\"literal\">true</span>,</span><br><span class=\"line\">      permalinkBefore: <span class=\"literal\">false</span>,</span><br><span class=\"line\">      <span class=\"comment\">// permalinkSymbol: '#'</span></span><br><span class=\"line\">      permalinkSymbol: <span class=\"string\">''</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  ])</span><br><span class=\"line\">  .end()</span><br><span class=\"line\"></span><br><span class=\"line\">  .plugin(<span class=\"string\">'containers'</span>)</span><br><span class=\"line\">  .use(containers)</span><br><span class=\"line\">  .end()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> md = config.toMd()</span><br><span class=\"line\">overWriteFenceRule(md)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">module</span>.exports = md</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// --------------------------------------------------------------</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/* containers.js */</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> mdContainer = <span class=\"built_in\">require</span>(<span class=\"string\">'markdown-it-container'</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">module</span>.exports = <span class=\"function\"><span class=\"params\">md</span> =&gt;</span> &#123;</span><br><span class=\"line\">  md.use(mdContainer, <span class=\"string\">'demo'</span>, &#123;</span><br><span class=\"line\">    validate(params) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">return</span> params.trim().match(<span class=\"regexp\">/^demo\\s*(.*)$/</span>)</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    render(tokens, idx) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">const</span> m = tokens[idx].info.trim().match(<span class=\"regexp\">/^demo\\s*(.*)$/</span>)</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (tokens[idx].nesting === <span class=\"number\">1</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">const</span> description = m &amp;&amp; m.length &gt; <span class=\"number\">1</span> ? m[<span class=\"number\">1</span>] : <span class=\"string\">''</span></span><br><span class=\"line\">        <span class=\"keyword\">const</span> content = tokens[idx + <span class=\"number\">1</span>].type === <span class=\"string\">'fence'</span> ? tokens[idx + <span class=\"number\">1</span>].content : <span class=\"string\">''</span></span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"string\">`&lt;demo-block&gt;</span></span><br><span class=\"line\"><span class=\"string\">        <span class=\"subst\">$&#123;description ? <span class=\"string\">`&lt;div&gt;<span class=\"subst\">$&#123;md.render(description)&#125;</span>&lt;/div&gt;`</span> : <span class=\"string\">''</span>&#125;</span></span></span><br><span class=\"line\"><span class=\"string\">        &lt;!--admin-demo: <span class=\"subst\">$&#123;content&#125;</span>:admin-demo--&gt;</span></span><br><span class=\"line\"><span class=\"string\">        `</span></span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">      <span class=\"keyword\">return</span> <span class=\"string\">'&lt;/demo-block&gt;'</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\"></span><br><span class=\"line\">  md.use(mdContainer, <span class=\"string\">'tip'</span>)</span><br><span class=\"line\">  md.use(mdContainer, <span class=\"string\">'warning'</span>)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// --------------------------------------------------------------</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/* fence.js */</span></span><br><span class=\"line\"><span class=\"comment\">// 覆盖默认的 fence 渲染策略</span></span><br><span class=\"line\"><span class=\"built_in\">module</span>.exports = <span class=\"function\"><span class=\"params\">md</span> =&gt;</span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">const</span> defaultRender = md.renderer.rules.fence</span><br><span class=\"line\">  md.renderer.rules.fence = <span class=\"function\">(<span class=\"params\">tokens, idx, options, env, self</span>) =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> token = tokens[idx]</span><br><span class=\"line\">    <span class=\"comment\">// 判断该 fence 是否在 :::demo 内</span></span><br><span class=\"line\">    <span class=\"keyword\">const</span> prevToken = tokens[idx - <span class=\"number\">1</span>]</span><br><span class=\"line\">    <span class=\"keyword\">const</span> isInDemoContainer =</span><br><span class=\"line\">      prevToken &amp;&amp; prevToken.nesting === <span class=\"number\">1</span> &amp;&amp; prevToken.info.trim().match(<span class=\"regexp\">/^demo\\s*(.*)$/</span>)</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (token.info === <span class=\"string\">'html'</span> &amp;&amp; isInDemoContainer) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">return</span> <span class=\"string\">`&lt;template #highlight&gt;&lt;pre v-pre&gt;&lt;code class=\"html\"&gt;<span class=\"subst\">$&#123;md.utils.escapeHtml(</span></span></span><br><span class=\"line\"><span class=\"string\"><span class=\"subst\">        token.content</span></span></span><br><span class=\"line\"><span class=\"string\"><span class=\"subst\">      )&#125;</span>&lt;/code&gt;&lt;/pre&gt;&lt;/template&gt;`</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> defaultRender(tokens, idx, options, env, self)</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// --------------------------------------------------------------</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/* index.js */</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> &#123; stripScript, stripTemplate, genInlineComponentText &#125; = <span class=\"built_in\">require</span>(<span class=\"string\">'./util'</span>)</span><br><span class=\"line\"><span class=\"keyword\">const</span> md = <span class=\"built_in\">require</span>(<span class=\"string\">'./config'</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">module</span>.exports = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">source</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">const</span> content = md.render(source)</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">const</span> startTag = <span class=\"string\">'&lt;!--admin-demo:'</span></span><br><span class=\"line\">  <span class=\"keyword\">const</span> startTagLen = startTag.length</span><br><span class=\"line\">  <span class=\"keyword\">const</span> endTag = <span class=\"string\">':admin-demo--&gt;'</span></span><br><span class=\"line\">  <span class=\"keyword\">const</span> endTagLen = endTag.length</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">let</span> componenetsString = <span class=\"string\">''</span></span><br><span class=\"line\">  <span class=\"keyword\">let</span> id = <span class=\"number\">0</span> <span class=\"comment\">// demo 的 id</span></span><br><span class=\"line\">  <span class=\"keyword\">let</span> output = [] <span class=\"comment\">// 输出的内容</span></span><br><span class=\"line\">  <span class=\"keyword\">let</span> start = <span class=\"number\">0</span> <span class=\"comment\">// 字符串开始位置</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">let</span> commentStart = content.indexOf(startTag)</span><br><span class=\"line\">  <span class=\"keyword\">let</span> commentEnd = content.indexOf(endTag, commentStart + startTagLen)</span><br><span class=\"line\">  <span class=\"keyword\">while</span> (commentStart !== <span class=\"number\">-1</span> &amp;&amp; commentEnd !== <span class=\"number\">-1</span>) &#123;</span><br><span class=\"line\">    output.push(content.slice(start, commentStart))</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">const</span> commentContent = content.slice(commentStart + startTagLen, commentEnd)</span><br><span class=\"line\">    <span class=\"keyword\">const</span> html = stripTemplate(commentContent)</span><br><span class=\"line\">    <span class=\"keyword\">const</span> script = stripScript(commentContent)</span><br><span class=\"line\">    <span class=\"keyword\">let</span> demoComponentContent = genInlineComponentText(html, script)</span><br><span class=\"line\">    <span class=\"keyword\">const</span> demoComponentName = <span class=\"string\">`admin-demo<span class=\"subst\">$&#123;id&#125;</span>`</span></span><br><span class=\"line\">    output.push(<span class=\"string\">`&lt;template #source&gt;&lt;<span class=\"subst\">$&#123;demoComponentName&#125;</span> /&gt;&lt;/template&gt;`</span>)</span><br><span class=\"line\">    componenetsString += <span class=\"string\">`<span class=\"subst\">$&#123;<span class=\"built_in\">JSON</span>.stringify(demoComponentName)&#125;</span>: <span class=\"subst\">$&#123;demoComponentContent&#125;</span>,`</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 重新计算下一次的位置</span></span><br><span class=\"line\">    id++</span><br><span class=\"line\">    start = commentEnd + endTagLen</span><br><span class=\"line\">    commentStart = content.indexOf(startTag, start)</span><br><span class=\"line\">    commentEnd = content.indexOf(endTag, commentStart + startTagLen)</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// 仅允许在 demo 不存在时，才可以在 Markdown 中写 script 标签</span></span><br><span class=\"line\">  <span class=\"comment\">// todo: 优化这段逻辑</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">let</span> pageScript = <span class=\"string\">''</span></span><br><span class=\"line\">  <span class=\"keyword\">if</span> (componenetsString) &#123;</span><br><span class=\"line\">    pageScript = <span class=\"string\">`&lt;script lang=\"ts\"&gt;</span></span><br><span class=\"line\"><span class=\"string\">      import * as Vue from 'vue';</span></span><br><span class=\"line\"><span class=\"string\">      export default &#123;</span></span><br><span class=\"line\"><span class=\"string\">        name: 'component-doc',</span></span><br><span class=\"line\"><span class=\"string\">        components: &#123;</span></span><br><span class=\"line\"><span class=\"string\">          <span class=\"subst\">$&#123;componenetsString&#125;</span></span></span><br><span class=\"line\"><span class=\"string\">        &#125;</span></span><br><span class=\"line\"><span class=\"string\">      &#125;</span></span><br><span class=\"line\"><span class=\"string\">    &lt;/script&gt;`</span></span><br><span class=\"line\">  &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (content.indexOf(<span class=\"string\">'&lt;script&gt;'</span>) === <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">    <span class=\"comment\">// 硬编码，有待改善</span></span><br><span class=\"line\">    start = content.indexOf(<span class=\"string\">'&lt;/script&gt;'</span>) + <span class=\"string\">'&lt;/script&gt;'</span>.length</span><br><span class=\"line\">    pageScript = content.slice(<span class=\"number\">0</span>, start)</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  output.push(content.slice(start))</span><br><span class=\"line\">  <span class=\"keyword\">const</span> result = <span class=\"string\">`</span></span><br><span class=\"line\"><span class=\"string\">  &lt;template&gt;</span></span><br><span class=\"line\"><span class=\"string\">    &lt;section class=\"content admin-doc\"&gt;</span></span><br><span class=\"line\"><span class=\"string\">      <span class=\"subst\">$&#123;output.join(<span class=\"string\">''</span>)&#125;</span></span></span><br><span class=\"line\"><span class=\"string\">    &lt;/section&gt;</span></span><br><span class=\"line\"><span class=\"string\">  &lt;/template&gt;</span></span><br><span class=\"line\"><span class=\"string\">  <span class=\"subst\">$&#123;pageScript&#125;</span></span></span><br><span class=\"line\"><span class=\"string\">  `</span></span><br><span class=\"line\">  <span class=\"keyword\">return</span> result</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// --------------------------------------------------------------</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/* util.js */</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> &#123; compileTemplate, TemplateCompiler &#125; = <span class=\"built_in\">require</span>(<span class=\"string\">'@vue/compiler-sfc'</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">stripScript</span>(<span class=\"params\">content</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">const</span> result = content.match(<span class=\"regexp\">/&lt;(script)&gt;([\\s\\S]+)&lt;\\/\\1&gt;/</span>)</span><br><span class=\"line\">  <span class=\"keyword\">return</span> result &amp;&amp; result[<span class=\"number\">2</span>] ? result[<span class=\"number\">2</span>].trim() : <span class=\"string\">''</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">stripStyle</span>(<span class=\"params\">content</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">const</span> result = content.match(<span class=\"regexp\">/&lt;(style)\\s*&gt;([\\s\\S]+)&lt;\\/\\1&gt;/</span>)</span><br><span class=\"line\">  <span class=\"keyword\">return</span> result &amp;&amp; result[<span class=\"number\">2</span>] ? result[<span class=\"number\">2</span>].trim() : <span class=\"string\">''</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 编写例子时不一定有 template。所以采取的方案是剔除其他的内容</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">stripTemplate</span>(<span class=\"params\">content</span>) </span>&#123;</span><br><span class=\"line\">  content = content.trim()</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (!content) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> content</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> content.replace(<span class=\"regexp\">/&lt;(script|style)[\\s\\S]+&lt;\\/\\1&gt;/g</span>, <span class=\"string\">''</span>).trim()</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">pad</span>(<span class=\"params\">source</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> source</span><br><span class=\"line\">    .split(<span class=\"regexp\">/\\r?\\n/</span>)</span><br><span class=\"line\">    .map(<span class=\"function\"><span class=\"params\">line</span> =&gt;</span> <span class=\"string\">`  <span class=\"subst\">$&#123;line&#125;</span>`</span>)</span><br><span class=\"line\">    .join(<span class=\"string\">'\\n'</span>)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> templateReplaceRegex = <span class=\"regexp\">/&lt;template&gt;([\\s\\S]+)&lt;\\/template&gt;/g</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">genInlineComponentText</span>(<span class=\"params\">template, script</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"comment\">// https://github.com/vuejs/vue-loader/blob/423b8341ab368c2117931e909e2da9af74503635/lib/loaders/templateLoader.js#L46</span></span><br><span class=\"line\">  <span class=\"keyword\">let</span> source = template</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (templateReplaceRegex.test(source)) &#123;</span><br><span class=\"line\">    source = source.replace(templateReplaceRegex, <span class=\"string\">'$1'</span>)</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">const</span> finalOptions = &#123;</span><br><span class=\"line\">    source: <span class=\"string\">`&lt;div&gt;<span class=\"subst\">$&#123;source&#125;</span>&lt;/div&gt;`</span>,</span><br><span class=\"line\">    filename: <span class=\"string\">'inline-component'</span>,</span><br><span class=\"line\">    compiler: TemplateCompiler,</span><br><span class=\"line\">    compilerOptions: &#123;</span><br><span class=\"line\">      mode: <span class=\"string\">'function'</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">const</span> compiled = compileTemplate(finalOptions)</span><br><span class=\"line\">  <span class=\"comment\">// tips</span></span><br><span class=\"line\">  <span class=\"keyword\">if</span> (compiled.tips &amp;&amp; compiled.tips.length) &#123;</span><br><span class=\"line\">    compiled.tips.forEach(<span class=\"function\"><span class=\"params\">tip</span> =&gt;</span> &#123;</span><br><span class=\"line\">      <span class=\"built_in\">console</span>.warn(tip)</span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"comment\">// errors</span></span><br><span class=\"line\">  <span class=\"keyword\">if</span> (compiled.errors &amp;&amp; compiled.errors.length) &#123;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.error(</span><br><span class=\"line\">      <span class=\"string\">`\\n  Error compiling template:\\n<span class=\"subst\">$&#123;pad(compiled.source)&#125;</span>\\n`</span> +</span><br><span class=\"line\">        compiled.errors.map(<span class=\"function\"><span class=\"params\">e</span> =&gt;</span> <span class=\"string\">`  - <span class=\"subst\">$&#123;e&#125;</span>`</span>).join(<span class=\"string\">'\\n'</span>) +</span><br><span class=\"line\">        <span class=\"string\">'\\n'</span></span><br><span class=\"line\">    )</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">let</span> demoComponentContent = <span class=\"string\">`</span></span><br><span class=\"line\"><span class=\"string\">    <span class=\"subst\">$&#123;compiled.code.replace(<span class=\"string\">'return function render'</span>, <span class=\"string\">'function render'</span>)&#125;</span></span></span><br><span class=\"line\"><span class=\"string\">  `</span></span><br><span class=\"line\">  <span class=\"comment\">// todo: 这里采用了硬编码有待改进</span></span><br><span class=\"line\">  script = script.trim()</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (script) &#123;</span><br><span class=\"line\">    script = script</span><br><span class=\"line\">      .replace(<span class=\"regexp\">/export\\s+default/</span>, <span class=\"string\">'const democomponentExport ='</span>)</span><br><span class=\"line\">      .replace(<span class=\"regexp\">/import (&#123;.*&#125;) from 'vue'/g</span>, (s, s1) =&gt; <span class=\"string\">`const <span class=\"subst\">$&#123;s1&#125;</span> = Vue`</span>)</span><br><span class=\"line\">  &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">    script = <span class=\"string\">'const democomponentExport = &#123;&#125;'</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  demoComponentContent = <span class=\"string\">`(function() &#123;</span></span><br><span class=\"line\"><span class=\"string\">    <span class=\"subst\">$&#123;demoComponentContent&#125;</span></span></span><br><span class=\"line\"><span class=\"string\">    <span class=\"subst\">$&#123;script&#125;</span></span></span><br><span class=\"line\"><span class=\"string\">    return &#123;</span></span><br><span class=\"line\"><span class=\"string\">      render,</span></span><br><span class=\"line\"><span class=\"string\">      ...democomponentExport</span></span><br><span class=\"line\"><span class=\"string\">    &#125;</span></span><br><span class=\"line\"><span class=\"string\">  &#125;)()`</span></span><br><span class=\"line\">  <span class=\"keyword\">return</span> demoComponentContent</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">module</span>.exports = &#123;</span><br><span class=\"line\">  stripScript,</span><br><span class=\"line\">  stripStyle,</span><br><span class=\"line\">  stripTemplate,</span><br><span class=\"line\">  genInlineComponentText</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></div>\n<h4 id=\"添加-md-loader-配置\"><a href=\"#添加-md-loader-配置\" class=\"headerlink\" title=\"添加 md-loader 配置\"></a>添加 md-loader 配置</h4><p><code>webpack.config.base.js</code>添加 markdown 规则</p>\n<div class=\"code-panel__wrapper\" autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\"><header class=\"mac-panel\"><span class=\"doc-path\"></span><span class=\"mac-panel__language\">DIFF</span></header><figure class=\"iseeu highlight diff\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"addition\">+&#123;</span></span><br><span class=\"line\"><span class=\"addition\">+  test: /\\.md$/,</span></span><br><span class=\"line\"><span class=\"addition\">+  use: [</span></span><br><span class=\"line\"><span class=\"addition\">+    &#123;</span></span><br><span class=\"line\"><span class=\"addition\">+      loader: 'vue-loader',</span></span><br><span class=\"line\"><span class=\"addition\">+      options: &#123;</span></span><br><span class=\"line\"><span class=\"addition\">+        compilerOptions: &#123;</span></span><br><span class=\"line\"><span class=\"addition\">+          preserveWhitespace: false</span></span><br><span class=\"line\"><span class=\"addition\">+        &#125;</span></span><br><span class=\"line\"><span class=\"addition\">+      &#125;</span></span><br><span class=\"line\"><span class=\"addition\">+    &#125;,</span></span><br><span class=\"line\"><span class=\"addition\">+    &#123;</span></span><br><span class=\"line\"><span class=\"addition\">+      loader: path.resolve(__dirname, './md-loader/index.js')</span></span><br><span class=\"line\"><span class=\"addition\">+    &#125;</span></span><br><span class=\"line\"><span class=\"addition\">+  ]</span></span><br><span class=\"line\"><span class=\"addition\">+&#125;</span></span><br></pre></td></tr></table></figure></div>\n<h2 id=\"搭建运行环境的-vue-页面\"><a href=\"#搭建运行环境的-vue-页面\" class=\"headerlink\" title=\"搭建运行环境的 vue 页面\"></a>搭建运行环境的 vue 页面</h2><p>修改<code>website</code>下的配置，变成一个完整的 demo 页</p>\n<h3 id=\"创建单页面组件\"><a href=\"#创建单页面组件\" class=\"headerlink\" title=\"创建单页面组件\"></a>创建单页面组件</h3><p>新建<code>components</code>文件夹，添加组件</p>\n<div class=\"code-panel__wrapper\" autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\"><header class=\"mac-panel\"><span class=\"doc-path\"></span><span class=\"mac-panel__language\">SHELL</span></header><figure class=\"iseeu highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cd website</span><br><span class=\"line\">mkdir Container DemoBlock Header Nav</span><br></pre></td></tr></table></figure></div>\n<p>其中Container 是文档主要内容区域， Header 是文档头部，Nav 是文档侧边导航， DemoBlock是 vue 源码编译为 demo 的组件，现在除了 DemoBlock 外，其他组件暂时没有具体实现，以后在慢慢补充。代码也过于冗长，不贴出来了，可以下载来看。</p>\n<h3 id=\"修改文件\"><a href=\"#修改文件\" class=\"headerlink\" title=\"修改文件\"></a>修改文件</h3><div class=\"code-panel__wrapper\" autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\"><header class=\"mac-panel\"><span class=\"doc-path\"></span><span class=\"mac-panel__language\">DIFF</span></header><figure class=\"iseeu highlight diff\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;template&gt;</span><br><span class=\"line\"><span class=\"deletion\">-  &lt;div class=\"app\"&gt;</span></span><br><span class=\"line\"><span class=\"deletion\">-    &lt;Hello :name=\"name\" /&gt;</span></span><br><span class=\"line\"><span class=\"deletion\">-  &lt;/div&gt;</span></span><br><span class=\"line\"><span class=\"addition\">+  &lt;Header /&gt;</span></span><br><span class=\"line\"><span class=\"addition\">+  &lt;section class=\"content-wrapper\"&gt;</span></span><br><span class=\"line\"><span class=\"addition\">+    &lt;Nav class=\"menu-bar\" /&gt;</span></span><br><span class=\"line\"><span class=\"addition\">+    &lt;Container class=\"content\"&gt;</span></span><br><span class=\"line\"><span class=\"addition\">+      &lt;router-view /&gt;</span></span><br><span class=\"line\"><span class=\"addition\">+    &lt;/Container&gt;</span></span><br><span class=\"line\"><span class=\"addition\">+  &lt;/section&gt;</span></span><br><span class=\"line\">&lt;/template&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;script lang=\"ts\"&gt;</span><br><span class=\"line\">import &#123; defineComponent, reactive, toRefs &#125; from 'vue'</span><br><span class=\"line\"><span class=\"addition\">+import Header from './components/Header/index.vue'</span></span><br><span class=\"line\"><span class=\"addition\">+import Nav from './components/Nav/index.vue'</span></span><br><span class=\"line\"><span class=\"addition\">+import Container from './components/Container/index.vue'</span></span><br><span class=\"line\"></span><br><span class=\"line\">export default defineComponent(&#123;</span><br><span class=\"line\">  name: 'App',</span><br><span class=\"line\"><span class=\"addition\">+  components: &#123;</span></span><br><span class=\"line\"><span class=\"addition\">+    Header,</span></span><br><span class=\"line\"><span class=\"addition\">+    Nav,</span></span><br><span class=\"line\"><span class=\"addition\">+    Container</span></span><br><span class=\"line\"><span class=\"addition\">+  &#125;,</span></span><br><span class=\"line\">  setup() &#123;</span><br><span class=\"line\">    const state = reactive(&#123; name: 'admin ui' &#125;)</span><br><span class=\"line\">    return &#123;</span><br><span class=\"line\">      ...toRefs(state)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\">&lt;/script&gt;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"addition\">+&lt;style lang=\"scss\" scoped&gt;</span></span><br><span class=\"line\"><span class=\"addition\">+.content-wrapper &#123;</span></span><br><span class=\"line\"><span class=\"addition\">+  display: flex;</span></span><br><span class=\"line\"><span class=\"addition\">+  overflow: hidden;</span></span><br><span class=\"line\"><span class=\"addition\">+  flex: 1;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"addition\">+  .menu-bar &#123;</span></span><br><span class=\"line\"><span class=\"addition\">+    width: 200px;</span></span><br><span class=\"line\"><span class=\"addition\">+    color: #fff;</span></span><br><span class=\"line\"><span class=\"addition\">+    background: red;</span></span><br><span class=\"line\"><span class=\"addition\">+  &#125;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"addition\">+  .content &#123;</span></span><br><span class=\"line\"><span class=\"addition\">+    flex: 1;</span></span><br><span class=\"line\"><span class=\"addition\">+  &#125;</span></span><br><span class=\"line\"><span class=\"addition\">+&#125;</span></span><br><span class=\"line\">&lt;/style&gt;</span><br></pre></td></tr></table></figure></div>\n<h3 id=\"创建路由\"><a href=\"#创建路由\" class=\"headerlink\" title=\"创建路由\"></a>创建路由</h3><p>website 下新建 <code>nav.config.ts</code></p>\n<div class=\"code-panel__wrapper\" autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\"><header class=\"mac-panel\"><span class=\"doc-path\"></span><span class=\"mac-panel__language\">JS</span></header><figure class=\"iseeu highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> &#123; getLang &#125; <span class=\"keyword\">from</span> <span class=\"string\">'./utils/lang'</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> localLang = getLang()</span><br><span class=\"line\"><span class=\"keyword\">const</span> componentsString = localLang === <span class=\"string\">'en-US'</span> ? <span class=\"string\">'Components'</span> : <span class=\"string\">'组件'</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> baseComponentsString = localLang === <span class=\"string\">'en-US'</span> ? <span class=\"string\">'Base Components'</span> : <span class=\"string\">'基础组件'</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">const</span> navs = [</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    name: componentsString,</span><br><span class=\"line\">    groups: [</span><br><span class=\"line\">      &#123;</span><br><span class=\"line\">        groupName: baseComponentsString,</span><br><span class=\"line\">        list: [</span><br><span class=\"line\">          &#123;</span><br><span class=\"line\">            path: <span class=\"string\">'/button'</span>,</span><br><span class=\"line\">            name: <span class=\"string\">'Button'</span>,</span><br><span class=\"line\">            component: <span class=\"function\"><span class=\"params\">()</span> =&gt;</span> &#123;</span><br><span class=\"line\">              <span class=\"keyword\">if</span> (localLang === <span class=\"string\">'en-US'</span>) &#123;</span><br><span class=\"line\">                <span class=\"keyword\">return</span> <span class=\"keyword\">import</span>(<span class=\"string\">'./markdown/en-US/button.md'</span>)</span><br><span class=\"line\">              &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                <span class=\"keyword\">return</span> <span class=\"keyword\">import</span>(<span class=\"string\">'./markdown/zh-CN/button.md'</span>)</span><br><span class=\"line\">              &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">          &#125;</span><br><span class=\"line\">        ]</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    ]</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">]</span><br></pre></td></tr></table></figure></div>\n<p>创建 <code>utils/lang.ts</code></p>\n<div class=\"code-panel__wrapper\" autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\"><header class=\"mac-panel\"><span class=\"doc-path\"></span><span class=\"mac-panel__language\">TS</span></header><figure class=\"iseeu highlight ts\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">let</span> curLang = <span class=\"built_in\">window</span>.sessionStorage.getItem(<span class=\"string\">'lang'</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">const</span> langTransformMap = &#123;</span><br><span class=\"line\">  zh: <span class=\"string\">'zh-CN'</span>,</span><br><span class=\"line\">  en: <span class=\"string\">'en-US'</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">setLang</span>(<span class=\"params\">langType</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"built_in\">window</span>.sessionStorage.setItem(<span class=\"string\">'lang'</span>, langType)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">transformLang</span>(<span class=\"params\">originalLang</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">let</span> langTransform = langTransformMap[originalLang]</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (langTransform === <span class=\"literal\">undefined</span>) langTransform = originalLang</span><br><span class=\"line\">  curLang = langTransform</span><br><span class=\"line\">  <span class=\"keyword\">return</span> langTransform</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">getLang</span>(<span class=\"params\">lang?: <span class=\"built_in\">string</span></span>): <span class=\"title\">string</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (curLang == <span class=\"literal\">null</span> || curLang === <span class=\"string\">''</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> langTransform = transformLang(<span class=\"built_in\">window</span>.sessionStorage.getItem(<span class=\"string\">'lang'</span>) || navigator.language)</span><br><span class=\"line\">    setLang(langTransform)</span><br><span class=\"line\">    <span class=\"keyword\">return</span> langTransform</span><br><span class=\"line\">  &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> lang ? <span class=\"built_in\">window</span>.sessionStorage.getItem(<span class=\"string\">'lang'</span>) || navigator.language : curLang</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></div>\n<p>新建<code>router/index.ts</code></p>\n<div class=\"code-panel__wrapper\" autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\"><header class=\"mac-panel\"><span class=\"doc-path\"></span><span class=\"mac-panel__language\">JS</span></header><figure class=\"iseeu highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> &#123; createRouter, createWebHashHistory &#125; <span class=\"keyword\">from</span> <span class=\"string\">'vue-router'</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> &#123; nextTick &#125; <span class=\"keyword\">from</span> <span class=\"string\">'vue'</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> hljs <span class=\"keyword\">from</span> <span class=\"string\">'highlight.js'</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> &#123; navs &#125; <span class=\"keyword\">from</span> <span class=\"string\">'../nav.config'</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">const</span> indexRoute = [</span><br><span class=\"line\">]</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> componentRoutes = []</span><br><span class=\"line\"></span><br><span class=\"line\">navs.forEach(<span class=\"function\"><span class=\"params\">navItem</span> =&gt;</span> &#123;</span><br><span class=\"line\">  navItem.groups.forEach(<span class=\"function\"><span class=\"params\">groupItem</span> =&gt;</span> &#123;</span><br><span class=\"line\">    groupItem.list.forEach(<span class=\"function\"><span class=\"params\">item</span> =&gt;</span> &#123;</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (item.path !== <span class=\"string\">'/'</span>) &#123;</span><br><span class=\"line\">        componentRoutes.push(&#123;</span><br><span class=\"line\">          path: item.path,</span><br><span class=\"line\">          name: item.path.slice(<span class=\"number\">1</span>),</span><br><span class=\"line\">          meta: &#123;</span><br><span class=\"line\">            name: item.path.slice(<span class=\"number\">1</span>)</span><br><span class=\"line\">          &#125;,</span><br><span class=\"line\">          component: item.component</span><br><span class=\"line\">        &#125;)</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> routes = [...indexRoute, ...componentRoutes]</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> router = createRouter(&#123;</span><br><span class=\"line\">  history: createWebHashHistory(),</span><br><span class=\"line\">  routes: routes</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\">router.afterEach(<span class=\"function\"><span class=\"params\">()</span> =&gt;</span> &#123;</span><br><span class=\"line\">  nextTick(<span class=\"function\"><span class=\"params\">()</span> =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> blocks = <span class=\"built_in\">document</span>.querySelectorAll(<span class=\"string\">'pre code:not(.hljs)'</span>)</span><br><span class=\"line\">    <span class=\"built_in\">Array</span>.prototype.forEach.call(blocks, hljs.highlightBlock)</span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> router</span><br></pre></td></tr></table></figure></div>\n<p>创建 css 文件，修改页面样式</p>\n<div class=\"code-panel__wrapper\" autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\"><header class=\"mac-panel\"><span class=\"doc-path\"></span><span class=\"mac-panel__language\">CSS</span></header><figure class=\"iseeu highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/* website/styles/common.scss */</span></span><br><span class=\"line\"><span class=\"selector-tag\">html</span>,</span><br><span class=\"line\"><span class=\"selector-tag\">body</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">height</span>: <span class=\"number\">100%</span>;</span><br><span class=\"line\">  <span class=\"attribute\">padding</span>: <span class=\"number\">0</span>;</span><br><span class=\"line\">  <span class=\"attribute\">margin</span>: <span class=\"number\">0</span>;</span><br><span class=\"line\">  <span class=\"attribute\">overflow</span>: hidden;</span><br><span class=\"line\">  <span class=\"attribute\">font-family</span>: <span class=\"string\">'Helvetica Neue'</span>, Helvetica, <span class=\"string\">'PingFang SC'</span>, <span class=\"string\">'Hiragino Sans GB'</span>, <span class=\"string\">'Microsoft YaHei'</span>,</span><br><span class=\"line\">    SimSun, sans-serif;</span><br><span class=\"line\">  <span class=\"attribute\">-webkit-font-smoothing</span>: antialiased;</span><br><span class=\"line\">  <span class=\"attribute\">font-weight</span>: <span class=\"number\">400</span>;</span><br><span class=\"line\">  <span class=\"attribute\">-webkit-tap-highlight-color</span>: transparent;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-id\">#app</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">display</span>: flex;</span><br><span class=\"line\">  <span class=\"attribute\">flex-direction</span>: column;</span><br><span class=\"line\">  <span class=\"attribute\">height</span>: <span class=\"number\">100%</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-tag\">a</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">color</span>: <span class=\"number\">#409eff</span>;</span><br><span class=\"line\">  <span class=\"attribute\">text-decoration</span>: none;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-tag\">code</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">padding</span>: <span class=\"number\">0</span> <span class=\"number\">4px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">background-color</span>: <span class=\"number\">#f9fafc</span>;</span><br><span class=\"line\">  <span class=\"attribute\">border</span>: <span class=\"number\">1px</span> solid <span class=\"number\">#eaeefb</span>;</span><br><span class=\"line\">  <span class=\"attribute\">border-radius</span>: <span class=\"number\">4px</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-tag\">button</span>,</span><br><span class=\"line\"><span class=\"selector-tag\">input</span>,</span><br><span class=\"line\"><span class=\"selector-tag\">select</span>,</span><br><span class=\"line\"><span class=\"selector-tag\">textarea</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">font-family</span>: inherit;</span><br><span class=\"line\">  <span class=\"attribute\">font-size</span>: inherit;</span><br><span class=\"line\">  <span class=\"attribute\">line-height</span>: inherit;</span><br><span class=\"line\">  <span class=\"attribute\">color</span>: inherit;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-class\">.hljs</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">padding</span>: <span class=\"number\">18px</span> <span class=\"number\">24px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">margin-bottom</span>: <span class=\"number\">25px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">font-family</span>: Menlo, Monaco, Consolas, Courier, monospace;</span><br><span class=\"line\">  <span class=\"attribute\">font-size</span>: <span class=\"number\">12px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">-webkit-font-smoothing</span>: auto;</span><br><span class=\"line\">  <span class=\"attribute\">line-height</span>: <span class=\"number\">1.8</span>;</span><br><span class=\"line\">  <span class=\"attribute\">background-color</span>: <span class=\"number\">#fafafa</span>;</span><br><span class=\"line\">  <span class=\"attribute\">border</span>: solid <span class=\"number\">1px</span> <span class=\"number\">#eaeefb</span>;</span><br><span class=\"line\">  <span class=\"attribute\">border-radius</span>: <span class=\"number\">4px</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-class\">.demo</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">margin</span>: <span class=\"number\">20px</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></div>\n<p>修改<code>main.ts</code></p>\n<div class=\"code-panel__wrapper\" autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\"><header class=\"mac-panel\"><span class=\"doc-path\"></span><span class=\"mac-panel__language\">DIFF</span></header><figure class=\"iseeu highlight diff\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">import &#123; createApp &#125; from 'vue'</span><br><span class=\"line\">import App from './app.vue'</span><br><span class=\"line\">import AdminUI from '../packages/admin-ui'</span><br><span class=\"line\"><span class=\"addition\">+import 'highlight.js/styles/color-brewer.css' // 代码块高亮主题，多种主题可选择</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"addition\">+import router from './router'</span></span><br><span class=\"line\"><span class=\"addition\">+import DemoBlock from './components/DemoBlock/index.vue'</span></span><br><span class=\"line\"><span class=\"addition\">+import './styles/common.scss'</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"deletion\">-createApp(App).use(AdminUI).mount('#app')</span></span><br><span class=\"line\"><span class=\"addition\">+createApp(App).use(AdminUI).component('demo-block', DemoBlock).use(router).mount('#app')</span></span><br></pre></td></tr></table></figure></div>\n<h3 id=\"添加枚举类型\"><a href=\"#添加枚举类型\" class=\"headerlink\" title=\"添加枚举类型\"></a>添加枚举类型</h3><p>新建 enums 文件夹，用来存放项目的枚举类型，目前只有语言类型需要保存</p>\n<div class=\"code-panel__wrapper\" autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\"><header class=\"mac-panel\"><span class=\"doc-path\"></span><span class=\"mac-panel__language\">TS</span></header><figure class=\"iseeu highlight ts\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">enum</span> Language &#123;</span><br><span class=\"line\">  <span class=\"comment\">/** Chinese */</span></span><br><span class=\"line\">  CN = <span class=\"string\">'zh-CN'</span>,</span><br><span class=\"line\">  <span class=\"comment\">/** English */</span></span><br><span class=\"line\">  EN = <span class=\"string\">'en-US'</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></div>\n<h2 id=\"修改packages-amp-amp-编写文档\"><a href=\"#修改packages-amp-amp-编写文档\" class=\"headerlink\" title=\"修改packages &amp;&amp; 编写文档\"></a>修改packages &amp;&amp; 编写文档</h2><p>例子中，我定义了<code>button</code>组件，然后新建<code>markdown</code>文件夹，创建相应的语言文件夹，分别创建<code>button.md</code>，然后编写文档，就完成了。这里有几点要注意：</p>\n<ul>\n<li><code>:::demo demo-desc</code>是固定的语法，一定要这样写，下面的源码才会被编译成示例</li>\n<li>示例中的<code>dt-button</code>，对应的是 button 组件中，vue 的 name</li>\n</ul>\n<h2 id=\"增加-build-docs命令\"><a href=\"#增加-build-docs命令\" class=\"headerlink\" title=\"增加 build:docs命令\"></a>增加 build:docs命令</h2><div class=\"code-panel__wrapper\" autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\"><header class=\"mac-panel\"><span class=\"doc-path\"></span><span class=\"mac-panel__language\">SHELL</span></header><figure class=\"iseeu highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\"script\": &#123;</span><br><span class=\"line\">+  \"build:docs\": \"webpack --config build/webpack.config.dev.js\"</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></div>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"写在前面\"><a href=\"#写在前面\" class=\"headerlink\" title=\"写在前面\"></a>写在前面</h2><p>接上一篇，这篇说的是使用<code>markdown</code>作为开发文档，原本想的是直接使用<code>vuepress</code>加入进来，万万没想到它不支持<code>vue3</code>，而新的<code>vuepress@next</code>功能还未完善，试过之后不太理想，所以还是照着<code>element-plus</code>来吧</p>\n<blockquote>\n<p>在参考和查找的过程中，无意间发现了一个类似的仓库：<a href=\"https://github.com/ninecat-ui/ninecat-ui\" target=\"_blank\" rel=\"noopener\">ninecat-ui</a>,所以这篇文档在 element 基础上，也参照了部分 ninecat-ui 的思路（当然主要还是 element）</p>\n</blockquote>\n<h2 id=\"安装依赖\"><a href=\"#安装依赖\" class=\"headerlink\" title=\"安装依赖\"></a>安装依赖</h2><h3 id=\"markdown-相关依赖\"><a href=\"#markdown-相关依赖\" class=\"headerlink\" title=\"markdown 相关依赖\"></a>markdown 相关依赖</h3><p>安装解析 markdown 语法的依赖</p>\n<p><code>yarn add -D highlight.js markdown-it markdown-it-anchor markdown-it-chain markdown-it-container transliteration -W</code></p>\n<h3 id=\"vue-相关依赖\"><a href=\"#vue-相关依赖\" class=\"headerlink\" title=\"vue 相关依赖\"></a>vue 相关依赖</h3><p>本地开发文档自然需要设置路由，后面可能会需要补全国际化，还要提前安装好 i18n。<code>yarn add -D vue-router@next vue-i18n@next -W</code></p>\n<h2 id=\"修改-webpack-配置\"><a href=\"#修改-webpack-配置\" class=\"headerlink\" title=\"修改 webpack 配置\"></a>修改 webpack 配置</h2><h3 id=\"修改-css-rules\"><a href=\"#修改-css-rules\" class=\"headerlink\" title=\"修改 css rules\"></a>修改 css rules</h3><p>之前写的疏忽，loader 里没有包含 <code>css</code>文件，导致了一些问题，首先修复</p>\n<figure class=\"highlight diff\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">// build/webpack.config.base.js</span><br><span class=\"line\"></span><br><span class=\"line\">&#123;</span><br><span class=\"line\"><span class=\"deletion\">-  test: /\\.scss$/,</span></span><br><span class=\"line\"><span class=\"addition\">+  test: /\\.(css|sass|scss)$/,</span></span><br><span class=\"line\">  use: [</span><br><span class=\"line\">    &#123; loader: 'style-loader' &#125;,</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">      loader: 'css-loader',</span><br><span class=\"line\">      options: &#123; sourceMap: true &#125;</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">      loader: 'sass-loader'</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  ]</span><br><span class=\"line\">&#125;,</span><br></pre></td></tr></table></figure>\n<h3 id=\"添加解析-markdown-的-loader\"><a href=\"#添加解析-markdown-的-loader\" class=\"headerlink\" title=\"添加解析 markdown 的 loader\"></a>添加解析 markdown 的 loader</h3><blockquote>\n<p>说来惭愧，这个 loader 我现在还是很茫然，因为是从 element-plus 粘贴来的。并不清楚为什么要这么配置，需要后面再仔细学习一下</p>\n</blockquote>\n<h4 id=\"创建-markdown-loader\"><a href=\"#创建-markdown-loader\" class=\"headerlink\" title=\"创建 markdown-loader\"></a>创建 markdown-loader</h4><p>build 文件夹中创建 md-loader 文件夹，新建<code>config.js</code>、<code>container.js</code>、 <code>fence.js</code>、 <code>index.js</code>、<code>util.js</code>作为 md-loader 配置</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br><span class=\"line\">165</span><br><span class=\"line\">166</span><br><span class=\"line\">167</span><br><span class=\"line\">168</span><br><span class=\"line\">169</span><br><span class=\"line\">170</span><br><span class=\"line\">171</span><br><span class=\"line\">172</span><br><span class=\"line\">173</span><br><span class=\"line\">174</span><br><span class=\"line\">175</span><br><span class=\"line\">176</span><br><span class=\"line\">177</span><br><span class=\"line\">178</span><br><span class=\"line\">179</span><br><span class=\"line\">180</span><br><span class=\"line\">181</span><br><span class=\"line\">182</span><br><span class=\"line\">183</span><br><span class=\"line\">184</span><br><span class=\"line\">185</span><br><span class=\"line\">186</span><br><span class=\"line\">187</span><br><span class=\"line\">188</span><br><span class=\"line\">189</span><br><span class=\"line\">190</span><br><span class=\"line\">191</span><br><span class=\"line\">192</span><br><span class=\"line\">193</span><br><span class=\"line\">194</span><br><span class=\"line\">195</span><br><span class=\"line\">196</span><br><span class=\"line\">197</span><br><span class=\"line\">198</span><br><span class=\"line\">199</span><br><span class=\"line\">200</span><br><span class=\"line\">201</span><br><span class=\"line\">202</span><br><span class=\"line\">203</span><br><span class=\"line\">204</span><br><span class=\"line\">205</span><br><span class=\"line\">206</span><br><span class=\"line\">207</span><br><span class=\"line\">208</span><br><span class=\"line\">209</span><br><span class=\"line\">210</span><br><span class=\"line\">211</span><br><span class=\"line\">212</span><br><span class=\"line\">213</span><br><span class=\"line\">214</span><br><span class=\"line\">215</span><br><span class=\"line\">216</span><br><span class=\"line\">217</span><br><span class=\"line\">218</span><br><span class=\"line\">219</span><br><span class=\"line\">220</span><br><span class=\"line\">221</span><br><span class=\"line\">222</span><br><span class=\"line\">223</span><br><span class=\"line\">224</span><br><span class=\"line\">225</span><br><span class=\"line\">226</span><br><span class=\"line\">227</span><br><span class=\"line\">228</span><br><span class=\"line\">229</span><br><span class=\"line\">230</span><br><span class=\"line\">231</span><br><span class=\"line\">232</span><br><span class=\"line\">233</span><br><span class=\"line\">234</span><br><span class=\"line\">235</span><br><span class=\"line\">236</span><br><span class=\"line\">237</span><br><span class=\"line\">238</span><br><span class=\"line\">239</span><br><span class=\"line\">240</span><br><span class=\"line\">241</span><br><span class=\"line\">242</span><br><span class=\"line\">243</span><br><span class=\"line\">244</span><br><span class=\"line\">245</span><br><span class=\"line\">246</span><br><span class=\"line\">247</span><br><span class=\"line\">248</span><br><span class=\"line\">249</span><br><span class=\"line\">250</span><br><span class=\"line\">251</span><br><span class=\"line\">252</span><br><span class=\"line\">253</span><br><span class=\"line\">254</span><br><span class=\"line\">255</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/* config.js */</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> Config = <span class=\"built_in\">require</span>(<span class=\"string\">'markdown-it-chain'</span>)</span><br><span class=\"line\"><span class=\"keyword\">const</span> anchorPlugin = <span class=\"built_in\">require</span>(<span class=\"string\">'markdown-it-anchor'</span>)</span><br><span class=\"line\"><span class=\"keyword\">const</span> slugify = <span class=\"built_in\">require</span>(<span class=\"string\">'transliteration'</span>).slugify</span><br><span class=\"line\"><span class=\"keyword\">const</span> hljs = <span class=\"built_in\">require</span>(<span class=\"string\">'highlight.js'</span>)</span><br><span class=\"line\"><span class=\"keyword\">const</span> containers = <span class=\"built_in\">require</span>(<span class=\"string\">'./containers'</span>)</span><br><span class=\"line\"><span class=\"keyword\">const</span> overWriteFenceRule = <span class=\"built_in\">require</span>(<span class=\"string\">'./fence'</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> config = <span class=\"keyword\">new</span> Config()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> highlight = <span class=\"function\">(<span class=\"params\">str, lang</span>) =&gt;</span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (!lang || !hljs.getLanguage(lang)) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"string\">'&lt;pre&gt;&lt;code class=\"hljs\"&gt;'</span> + str + <span class=\"string\">'&lt;/code&gt;&lt;/pre&gt;'</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">const</span> html = hljs.highlight(lang, str, <span class=\"literal\">true</span>, <span class=\"literal\">undefined</span>).value</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"string\">`&lt;pre&gt;&lt;code class=\"hljs language-<span class=\"subst\">$&#123;lang&#125;</span>\"&gt;<span class=\"subst\">$&#123;html&#125;</span>&lt;/code&gt;&lt;/pre&gt;`</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">config.options</span><br><span class=\"line\">  .html(<span class=\"literal\">true</span>)</span><br><span class=\"line\">  .highlight(highlight)</span><br><span class=\"line\">  .end()</span><br><span class=\"line\"></span><br><span class=\"line\">  .plugin(<span class=\"string\">'anchor'</span>)</span><br><span class=\"line\">  .use(anchorPlugin, [</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">      level: <span class=\"number\">2</span>,</span><br><span class=\"line\">      slugify: slugify,</span><br><span class=\"line\">      permalink: <span class=\"literal\">true</span>,</span><br><span class=\"line\">      permalinkBefore: <span class=\"literal\">false</span>,</span><br><span class=\"line\">      <span class=\"comment\">// permalinkSymbol: '#'</span></span><br><span class=\"line\">      permalinkSymbol: <span class=\"string\">''</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  ])</span><br><span class=\"line\">  .end()</span><br><span class=\"line\"></span><br><span class=\"line\">  .plugin(<span class=\"string\">'containers'</span>)</span><br><span class=\"line\">  .use(containers)</span><br><span class=\"line\">  .end()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> md = config.toMd()</span><br><span class=\"line\">overWriteFenceRule(md)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">module</span>.exports = md</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// --------------------------------------------------------------</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/* containers.js */</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> mdContainer = <span class=\"built_in\">require</span>(<span class=\"string\">'markdown-it-container'</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">module</span>.exports = <span class=\"function\"><span class=\"params\">md</span> =&gt;</span> &#123;</span><br><span class=\"line\">  md.use(mdContainer, <span class=\"string\">'demo'</span>, &#123;</span><br><span class=\"line\">    validate(params) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">return</span> params.trim().match(<span class=\"regexp\">/^demo\\s*(.*)$/</span>)</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    render(tokens, idx) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">const</span> m = tokens[idx].info.trim().match(<span class=\"regexp\">/^demo\\s*(.*)$/</span>)</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (tokens[idx].nesting === <span class=\"number\">1</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">const</span> description = m &amp;&amp; m.length &gt; <span class=\"number\">1</span> ? m[<span class=\"number\">1</span>] : <span class=\"string\">''</span></span><br><span class=\"line\">        <span class=\"keyword\">const</span> content = tokens[idx + <span class=\"number\">1</span>].type === <span class=\"string\">'fence'</span> ? tokens[idx + <span class=\"number\">1</span>].content : <span class=\"string\">''</span></span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"string\">`&lt;demo-block&gt;</span></span><br><span class=\"line\"><span class=\"string\">        <span class=\"subst\">$&#123;description ? <span class=\"string\">`&lt;div&gt;<span class=\"subst\">$&#123;md.render(description)&#125;</span>&lt;/div&gt;`</span> : <span class=\"string\">''</span>&#125;</span></span></span><br><span class=\"line\"><span class=\"string\">        &lt;!--admin-demo: <span class=\"subst\">$&#123;content&#125;</span>:admin-demo--&gt;</span></span><br><span class=\"line\"><span class=\"string\">        `</span></span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">      <span class=\"keyword\">return</span> <span class=\"string\">'&lt;/demo-block&gt;'</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\"></span><br><span class=\"line\">  md.use(mdContainer, <span class=\"string\">'tip'</span>)</span><br><span class=\"line\">  md.use(mdContainer, <span class=\"string\">'warning'</span>)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// --------------------------------------------------------------</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/* fence.js */</span></span><br><span class=\"line\"><span class=\"comment\">// 覆盖默认的 fence 渲染策略</span></span><br><span class=\"line\"><span class=\"built_in\">module</span>.exports = <span class=\"function\"><span class=\"params\">md</span> =&gt;</span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">const</span> defaultRender = md.renderer.rules.fence</span><br><span class=\"line\">  md.renderer.rules.fence = <span class=\"function\">(<span class=\"params\">tokens, idx, options, env, self</span>) =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> token = tokens[idx]</span><br><span class=\"line\">    <span class=\"comment\">// 判断该 fence 是否在 :::demo 内</span></span><br><span class=\"line\">    <span class=\"keyword\">const</span> prevToken = tokens[idx - <span class=\"number\">1</span>]</span><br><span class=\"line\">    <span class=\"keyword\">const</span> isInDemoContainer =</span><br><span class=\"line\">      prevToken &amp;&amp; prevToken.nesting === <span class=\"number\">1</span> &amp;&amp; prevToken.info.trim().match(<span class=\"regexp\">/^demo\\s*(.*)$/</span>)</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (token.info === <span class=\"string\">'html'</span> &amp;&amp; isInDemoContainer) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">return</span> <span class=\"string\">`&lt;template #highlight&gt;&lt;pre v-pre&gt;&lt;code class=\"html\"&gt;<span class=\"subst\">$&#123;md.utils.escapeHtml(</span></span></span><br><span class=\"line\"><span class=\"string\"><span class=\"subst\">        token.content</span></span></span><br><span class=\"line\"><span class=\"string\"><span class=\"subst\">      )&#125;</span>&lt;/code&gt;&lt;/pre&gt;&lt;/template&gt;`</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> defaultRender(tokens, idx, options, env, self)</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// --------------------------------------------------------------</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/* index.js */</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> &#123; stripScript, stripTemplate, genInlineComponentText &#125; = <span class=\"built_in\">require</span>(<span class=\"string\">'./util'</span>)</span><br><span class=\"line\"><span class=\"keyword\">const</span> md = <span class=\"built_in\">require</span>(<span class=\"string\">'./config'</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">module</span>.exports = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">source</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">const</span> content = md.render(source)</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">const</span> startTag = <span class=\"string\">'&lt;!--admin-demo:'</span></span><br><span class=\"line\">  <span class=\"keyword\">const</span> startTagLen = startTag.length</span><br><span class=\"line\">  <span class=\"keyword\">const</span> endTag = <span class=\"string\">':admin-demo--&gt;'</span></span><br><span class=\"line\">  <span class=\"keyword\">const</span> endTagLen = endTag.length</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">let</span> componenetsString = <span class=\"string\">''</span></span><br><span class=\"line\">  <span class=\"keyword\">let</span> id = <span class=\"number\">0</span> <span class=\"comment\">// demo 的 id</span></span><br><span class=\"line\">  <span class=\"keyword\">let</span> output = [] <span class=\"comment\">// 输出的内容</span></span><br><span class=\"line\">  <span class=\"keyword\">let</span> start = <span class=\"number\">0</span> <span class=\"comment\">// 字符串开始位置</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">let</span> commentStart = content.indexOf(startTag)</span><br><span class=\"line\">  <span class=\"keyword\">let</span> commentEnd = content.indexOf(endTag, commentStart + startTagLen)</span><br><span class=\"line\">  <span class=\"keyword\">while</span> (commentStart !== <span class=\"number\">-1</span> &amp;&amp; commentEnd !== <span class=\"number\">-1</span>) &#123;</span><br><span class=\"line\">    output.push(content.slice(start, commentStart))</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">const</span> commentContent = content.slice(commentStart + startTagLen, commentEnd)</span><br><span class=\"line\">    <span class=\"keyword\">const</span> html = stripTemplate(commentContent)</span><br><span class=\"line\">    <span class=\"keyword\">const</span> script = stripScript(commentContent)</span><br><span class=\"line\">    <span class=\"keyword\">let</span> demoComponentContent = genInlineComponentText(html, script)</span><br><span class=\"line\">    <span class=\"keyword\">const</span> demoComponentName = <span class=\"string\">`admin-demo<span class=\"subst\">$&#123;id&#125;</span>`</span></span><br><span class=\"line\">    output.push(<span class=\"string\">`&lt;template #source&gt;&lt;<span class=\"subst\">$&#123;demoComponentName&#125;</span> /&gt;&lt;/template&gt;`</span>)</span><br><span class=\"line\">    componenetsString += <span class=\"string\">`<span class=\"subst\">$&#123;<span class=\"built_in\">JSON</span>.stringify(demoComponentName)&#125;</span>: <span class=\"subst\">$&#123;demoComponentContent&#125;</span>,`</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 重新计算下一次的位置</span></span><br><span class=\"line\">    id++</span><br><span class=\"line\">    start = commentEnd + endTagLen</span><br><span class=\"line\">    commentStart = content.indexOf(startTag, start)</span><br><span class=\"line\">    commentEnd = content.indexOf(endTag, commentStart + startTagLen)</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// 仅允许在 demo 不存在时，才可以在 Markdown 中写 script 标签</span></span><br><span class=\"line\">  <span class=\"comment\">// todo: 优化这段逻辑</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">let</span> pageScript = <span class=\"string\">''</span></span><br><span class=\"line\">  <span class=\"keyword\">if</span> (componenetsString) &#123;</span><br><span class=\"line\">    pageScript = <span class=\"string\">`&lt;script lang=\"ts\"&gt;</span></span><br><span class=\"line\"><span class=\"string\">      import * as Vue from 'vue';</span></span><br><span class=\"line\"><span class=\"string\">      export default &#123;</span></span><br><span class=\"line\"><span class=\"string\">        name: 'component-doc',</span></span><br><span class=\"line\"><span class=\"string\">        components: &#123;</span></span><br><span class=\"line\"><span class=\"string\">          <span class=\"subst\">$&#123;componenetsString&#125;</span></span></span><br><span class=\"line\"><span class=\"string\">        &#125;</span></span><br><span class=\"line\"><span class=\"string\">      &#125;</span></span><br><span class=\"line\"><span class=\"string\">    &lt;/script&gt;`</span></span><br><span class=\"line\">  &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (content.indexOf(<span class=\"string\">'&lt;script&gt;'</span>) === <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">    <span class=\"comment\">// 硬编码，有待改善</span></span><br><span class=\"line\">    start = content.indexOf(<span class=\"string\">'&lt;/script&gt;'</span>) + <span class=\"string\">'&lt;/script&gt;'</span>.length</span><br><span class=\"line\">    pageScript = content.slice(<span class=\"number\">0</span>, start)</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  output.push(content.slice(start))</span><br><span class=\"line\">  <span class=\"keyword\">const</span> result = <span class=\"string\">`</span></span><br><span class=\"line\"><span class=\"string\">  &lt;template&gt;</span></span><br><span class=\"line\"><span class=\"string\">    &lt;section class=\"content admin-doc\"&gt;</span></span><br><span class=\"line\"><span class=\"string\">      <span class=\"subst\">$&#123;output.join(<span class=\"string\">''</span>)&#125;</span></span></span><br><span class=\"line\"><span class=\"string\">    &lt;/section&gt;</span></span><br><span class=\"line\"><span class=\"string\">  &lt;/template&gt;</span></span><br><span class=\"line\"><span class=\"string\">  <span class=\"subst\">$&#123;pageScript&#125;</span></span></span><br><span class=\"line\"><span class=\"string\">  `</span></span><br><span class=\"line\">  <span class=\"keyword\">return</span> result</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// --------------------------------------------------------------</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/* util.js */</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> &#123; compileTemplate, TemplateCompiler &#125; = <span class=\"built_in\">require</span>(<span class=\"string\">'@vue/compiler-sfc'</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">stripScript</span>(<span class=\"params\">content</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">const</span> result = content.match(<span class=\"regexp\">/&lt;(script)&gt;([\\s\\S]+)&lt;\\/\\1&gt;/</span>)</span><br><span class=\"line\">  <span class=\"keyword\">return</span> result &amp;&amp; result[<span class=\"number\">2</span>] ? result[<span class=\"number\">2</span>].trim() : <span class=\"string\">''</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">stripStyle</span>(<span class=\"params\">content</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">const</span> result = content.match(<span class=\"regexp\">/&lt;(style)\\s*&gt;([\\s\\S]+)&lt;\\/\\1&gt;/</span>)</span><br><span class=\"line\">  <span class=\"keyword\">return</span> result &amp;&amp; result[<span class=\"number\">2</span>] ? result[<span class=\"number\">2</span>].trim() : <span class=\"string\">''</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 编写例子时不一定有 template。所以采取的方案是剔除其他的内容</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">stripTemplate</span>(<span class=\"params\">content</span>) </span>&#123;</span><br><span class=\"line\">  content = content.trim()</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (!content) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> content</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> content.replace(<span class=\"regexp\">/&lt;(script|style)[\\s\\S]+&lt;\\/\\1&gt;/g</span>, <span class=\"string\">''</span>).trim()</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">pad</span>(<span class=\"params\">source</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> source</span><br><span class=\"line\">    .split(<span class=\"regexp\">/\\r?\\n/</span>)</span><br><span class=\"line\">    .map(<span class=\"function\"><span class=\"params\">line</span> =&gt;</span> <span class=\"string\">`  <span class=\"subst\">$&#123;line&#125;</span>`</span>)</span><br><span class=\"line\">    .join(<span class=\"string\">'\\n'</span>)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> templateReplaceRegex = <span class=\"regexp\">/&lt;template&gt;([\\s\\S]+)&lt;\\/template&gt;/g</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">genInlineComponentText</span>(<span class=\"params\">template, script</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"comment\">// https://github.com/vuejs/vue-loader/blob/423b8341ab368c2117931e909e2da9af74503635/lib/loaders/templateLoader.js#L46</span></span><br><span class=\"line\">  <span class=\"keyword\">let</span> source = template</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (templateReplaceRegex.test(source)) &#123;</span><br><span class=\"line\">    source = source.replace(templateReplaceRegex, <span class=\"string\">'$1'</span>)</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">const</span> finalOptions = &#123;</span><br><span class=\"line\">    source: <span class=\"string\">`&lt;div&gt;<span class=\"subst\">$&#123;source&#125;</span>&lt;/div&gt;`</span>,</span><br><span class=\"line\">    filename: <span class=\"string\">'inline-component'</span>,</span><br><span class=\"line\">    compiler: TemplateCompiler,</span><br><span class=\"line\">    compilerOptions: &#123;</span><br><span class=\"line\">      mode: <span class=\"string\">'function'</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">const</span> compiled = compileTemplate(finalOptions)</span><br><span class=\"line\">  <span class=\"comment\">// tips</span></span><br><span class=\"line\">  <span class=\"keyword\">if</span> (compiled.tips &amp;&amp; compiled.tips.length) &#123;</span><br><span class=\"line\">    compiled.tips.forEach(<span class=\"function\"><span class=\"params\">tip</span> =&gt;</span> &#123;</span><br><span class=\"line\">      <span class=\"built_in\">console</span>.warn(tip)</span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"comment\">// errors</span></span><br><span class=\"line\">  <span class=\"keyword\">if</span> (compiled.errors &amp;&amp; compiled.errors.length) &#123;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.error(</span><br><span class=\"line\">      <span class=\"string\">`\\n  Error compiling template:\\n<span class=\"subst\">$&#123;pad(compiled.source)&#125;</span>\\n`</span> +</span><br><span class=\"line\">        compiled.errors.map(<span class=\"function\"><span class=\"params\">e</span> =&gt;</span> <span class=\"string\">`  - <span class=\"subst\">$&#123;e&#125;</span>`</span>).join(<span class=\"string\">'\\n'</span>) +</span><br><span class=\"line\">        <span class=\"string\">'\\n'</span></span><br><span class=\"line\">    )</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">let</span> demoComponentContent = <span class=\"string\">`</span></span><br><span class=\"line\"><span class=\"string\">    <span class=\"subst\">$&#123;compiled.code.replace(<span class=\"string\">'return function render'</span>, <span class=\"string\">'function render'</span>)&#125;</span></span></span><br><span class=\"line\"><span class=\"string\">  `</span></span><br><span class=\"line\">  <span class=\"comment\">// todo: 这里采用了硬编码有待改进</span></span><br><span class=\"line\">  script = script.trim()</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (script) &#123;</span><br><span class=\"line\">    script = script</span><br><span class=\"line\">      .replace(<span class=\"regexp\">/export\\s+default/</span>, <span class=\"string\">'const democomponentExport ='</span>)</span><br><span class=\"line\">      .replace(<span class=\"regexp\">/import (&#123;.*&#125;) from 'vue'/g</span>, (s, s1) =&gt; <span class=\"string\">`const <span class=\"subst\">$&#123;s1&#125;</span> = Vue`</span>)</span><br><span class=\"line\">  &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">    script = <span class=\"string\">'const democomponentExport = &#123;&#125;'</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  demoComponentContent = <span class=\"string\">`(function() &#123;</span></span><br><span class=\"line\"><span class=\"string\">    <span class=\"subst\">$&#123;demoComponentContent&#125;</span></span></span><br><span class=\"line\"><span class=\"string\">    <span class=\"subst\">$&#123;script&#125;</span></span></span><br><span class=\"line\"><span class=\"string\">    return &#123;</span></span><br><span class=\"line\"><span class=\"string\">      render,</span></span><br><span class=\"line\"><span class=\"string\">      ...democomponentExport</span></span><br><span class=\"line\"><span class=\"string\">    &#125;</span></span><br><span class=\"line\"><span class=\"string\">  &#125;)()`</span></span><br><span class=\"line\">  <span class=\"keyword\">return</span> demoComponentContent</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">module</span>.exports = &#123;</span><br><span class=\"line\">  stripScript,</span><br><span class=\"line\">  stripStyle,</span><br><span class=\"line\">  stripTemplate,</span><br><span class=\"line\">  genInlineComponentText</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h4 id=\"添加-md-loader-配置\"><a href=\"#添加-md-loader-配置\" class=\"headerlink\" title=\"添加 md-loader 配置\"></a>添加 md-loader 配置</h4><p><code>webpack.config.base.js</code>添加 markdown 规则</p>\n<figure class=\"highlight diff\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"addition\">+&#123;</span></span><br><span class=\"line\"><span class=\"addition\">+  test: /\\.md$/,</span></span><br><span class=\"line\"><span class=\"addition\">+  use: [</span></span><br><span class=\"line\"><span class=\"addition\">+    &#123;</span></span><br><span class=\"line\"><span class=\"addition\">+      loader: 'vue-loader',</span></span><br><span class=\"line\"><span class=\"addition\">+      options: &#123;</span></span><br><span class=\"line\"><span class=\"addition\">+        compilerOptions: &#123;</span></span><br><span class=\"line\"><span class=\"addition\">+          preserveWhitespace: false</span></span><br><span class=\"line\"><span class=\"addition\">+        &#125;</span></span><br><span class=\"line\"><span class=\"addition\">+      &#125;</span></span><br><span class=\"line\"><span class=\"addition\">+    &#125;,</span></span><br><span class=\"line\"><span class=\"addition\">+    &#123;</span></span><br><span class=\"line\"><span class=\"addition\">+      loader: path.resolve(__dirname, './md-loader/index.js')</span></span><br><span class=\"line\"><span class=\"addition\">+    &#125;</span></span><br><span class=\"line\"><span class=\"addition\">+  ]</span></span><br><span class=\"line\"><span class=\"addition\">+&#125;</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"搭建运行环境的-vue-页面\"><a href=\"#搭建运行环境的-vue-页面\" class=\"headerlink\" title=\"搭建运行环境的 vue 页面\"></a>搭建运行环境的 vue 页面</h2><p>修改<code>website</code>下的配置，变成一个完整的 demo 页</p>\n<h3 id=\"创建单页面组件\"><a href=\"#创建单页面组件\" class=\"headerlink\" title=\"创建单页面组件\"></a>创建单页面组件</h3><p>新建<code>components</code>文件夹，添加组件</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cd website</span><br><span class=\"line\">mkdir Container DemoBlock Header Nav</span><br></pre></td></tr></table></figure>\n<p>其中Container 是文档主要内容区域， Header 是文档头部，Nav 是文档侧边导航， DemoBlock是 vue 源码编译为 demo 的组件，现在除了 DemoBlock 外，其他组件暂时没有具体实现，以后在慢慢补充。代码也过于冗长，不贴出来了，可以下载来看。</p>\n<h3 id=\"修改文件\"><a href=\"#修改文件\" class=\"headerlink\" title=\"修改文件\"></a>修改文件</h3><figure class=\"highlight diff\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;template&gt;</span><br><span class=\"line\"><span class=\"deletion\">-  &lt;div class=\"app\"&gt;</span></span><br><span class=\"line\"><span class=\"deletion\">-    &lt;Hello :name=\"name\" /&gt;</span></span><br><span class=\"line\"><span class=\"deletion\">-  &lt;/div&gt;</span></span><br><span class=\"line\"><span class=\"addition\">+  &lt;Header /&gt;</span></span><br><span class=\"line\"><span class=\"addition\">+  &lt;section class=\"content-wrapper\"&gt;</span></span><br><span class=\"line\"><span class=\"addition\">+    &lt;Nav class=\"menu-bar\" /&gt;</span></span><br><span class=\"line\"><span class=\"addition\">+    &lt;Container class=\"content\"&gt;</span></span><br><span class=\"line\"><span class=\"addition\">+      &lt;router-view /&gt;</span></span><br><span class=\"line\"><span class=\"addition\">+    &lt;/Container&gt;</span></span><br><span class=\"line\"><span class=\"addition\">+  &lt;/section&gt;</span></span><br><span class=\"line\">&lt;/template&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;script lang=\"ts\"&gt;</span><br><span class=\"line\">import &#123; defineComponent, reactive, toRefs &#125; from 'vue'</span><br><span class=\"line\"><span class=\"addition\">+import Header from './components/Header/index.vue'</span></span><br><span class=\"line\"><span class=\"addition\">+import Nav from './components/Nav/index.vue'</span></span><br><span class=\"line\"><span class=\"addition\">+import Container from './components/Container/index.vue'</span></span><br><span class=\"line\"></span><br><span class=\"line\">export default defineComponent(&#123;</span><br><span class=\"line\">  name: 'App',</span><br><span class=\"line\"><span class=\"addition\">+  components: &#123;</span></span><br><span class=\"line\"><span class=\"addition\">+    Header,</span></span><br><span class=\"line\"><span class=\"addition\">+    Nav,</span></span><br><span class=\"line\"><span class=\"addition\">+    Container</span></span><br><span class=\"line\"><span class=\"addition\">+  &#125;,</span></span><br><span class=\"line\">  setup() &#123;</span><br><span class=\"line\">    const state = reactive(&#123; name: 'admin ui' &#125;)</span><br><span class=\"line\">    return &#123;</span><br><span class=\"line\">      ...toRefs(state)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\">&lt;/script&gt;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"addition\">+&lt;style lang=\"scss\" scoped&gt;</span></span><br><span class=\"line\"><span class=\"addition\">+.content-wrapper &#123;</span></span><br><span class=\"line\"><span class=\"addition\">+  display: flex;</span></span><br><span class=\"line\"><span class=\"addition\">+  overflow: hidden;</span></span><br><span class=\"line\"><span class=\"addition\">+  flex: 1;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"addition\">+  .menu-bar &#123;</span></span><br><span class=\"line\"><span class=\"addition\">+    width: 200px;</span></span><br><span class=\"line\"><span class=\"addition\">+    color: #fff;</span></span><br><span class=\"line\"><span class=\"addition\">+    background: red;</span></span><br><span class=\"line\"><span class=\"addition\">+  &#125;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"addition\">+  .content &#123;</span></span><br><span class=\"line\"><span class=\"addition\">+    flex: 1;</span></span><br><span class=\"line\"><span class=\"addition\">+  &#125;</span></span><br><span class=\"line\"><span class=\"addition\">+&#125;</span></span><br><span class=\"line\">&lt;/style&gt;</span><br></pre></td></tr></table></figure>\n<h3 id=\"创建路由\"><a href=\"#创建路由\" class=\"headerlink\" title=\"创建路由\"></a>创建路由</h3><p>website 下新建 <code>nav.config.ts</code></p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> &#123; getLang &#125; <span class=\"keyword\">from</span> <span class=\"string\">'./utils/lang'</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> localLang = getLang()</span><br><span class=\"line\"><span class=\"keyword\">const</span> componentsString = localLang === <span class=\"string\">'en-US'</span> ? <span class=\"string\">'Components'</span> : <span class=\"string\">'组件'</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> baseComponentsString = localLang === <span class=\"string\">'en-US'</span> ? <span class=\"string\">'Base Components'</span> : <span class=\"string\">'基础组件'</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">const</span> navs = [</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    name: componentsString,</span><br><span class=\"line\">    groups: [</span><br><span class=\"line\">      &#123;</span><br><span class=\"line\">        groupName: baseComponentsString,</span><br><span class=\"line\">        list: [</span><br><span class=\"line\">          &#123;</span><br><span class=\"line\">            path: <span class=\"string\">'/button'</span>,</span><br><span class=\"line\">            name: <span class=\"string\">'Button'</span>,</span><br><span class=\"line\">            component: <span class=\"function\"><span class=\"params\">()</span> =&gt;</span> &#123;</span><br><span class=\"line\">              <span class=\"keyword\">if</span> (localLang === <span class=\"string\">'en-US'</span>) &#123;</span><br><span class=\"line\">                <span class=\"keyword\">return</span> <span class=\"keyword\">import</span>(<span class=\"string\">'./markdown/en-US/button.md'</span>)</span><br><span class=\"line\">              &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                <span class=\"keyword\">return</span> <span class=\"keyword\">import</span>(<span class=\"string\">'./markdown/zh-CN/button.md'</span>)</span><br><span class=\"line\">              &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">          &#125;</span><br><span class=\"line\">        ]</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    ]</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">]</span><br></pre></td></tr></table></figure>\n<p>创建 <code>utils/lang.ts</code></p>\n<figure class=\"highlight ts\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">let</span> curLang = <span class=\"built_in\">window</span>.sessionStorage.getItem(<span class=\"string\">'lang'</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">const</span> langTransformMap = &#123;</span><br><span class=\"line\">  zh: <span class=\"string\">'zh-CN'</span>,</span><br><span class=\"line\">  en: <span class=\"string\">'en-US'</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">setLang</span>(<span class=\"params\">langType</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"built_in\">window</span>.sessionStorage.setItem(<span class=\"string\">'lang'</span>, langType)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">transformLang</span>(<span class=\"params\">originalLang</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">let</span> langTransform = langTransformMap[originalLang]</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (langTransform === <span class=\"literal\">undefined</span>) langTransform = originalLang</span><br><span class=\"line\">  curLang = langTransform</span><br><span class=\"line\">  <span class=\"keyword\">return</span> langTransform</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">getLang</span>(<span class=\"params\">lang?: <span class=\"built_in\">string</span></span>): <span class=\"title\">string</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (curLang == <span class=\"literal\">null</span> || curLang === <span class=\"string\">''</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> langTransform = transformLang(<span class=\"built_in\">window</span>.sessionStorage.getItem(<span class=\"string\">'lang'</span>) || navigator.language)</span><br><span class=\"line\">    setLang(langTransform)</span><br><span class=\"line\">    <span class=\"keyword\">return</span> langTransform</span><br><span class=\"line\">  &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> lang ? <span class=\"built_in\">window</span>.sessionStorage.getItem(<span class=\"string\">'lang'</span>) || navigator.language : curLang</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>新建<code>router/index.ts</code></p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> &#123; createRouter, createWebHashHistory &#125; <span class=\"keyword\">from</span> <span class=\"string\">'vue-router'</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> &#123; nextTick &#125; <span class=\"keyword\">from</span> <span class=\"string\">'vue'</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> hljs <span class=\"keyword\">from</span> <span class=\"string\">'highlight.js'</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> &#123; navs &#125; <span class=\"keyword\">from</span> <span class=\"string\">'../nav.config'</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">const</span> indexRoute = [</span><br><span class=\"line\">]</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> componentRoutes = []</span><br><span class=\"line\"></span><br><span class=\"line\">navs.forEach(<span class=\"function\"><span class=\"params\">navItem</span> =&gt;</span> &#123;</span><br><span class=\"line\">  navItem.groups.forEach(<span class=\"function\"><span class=\"params\">groupItem</span> =&gt;</span> &#123;</span><br><span class=\"line\">    groupItem.list.forEach(<span class=\"function\"><span class=\"params\">item</span> =&gt;</span> &#123;</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (item.path !== <span class=\"string\">'/'</span>) &#123;</span><br><span class=\"line\">        componentRoutes.push(&#123;</span><br><span class=\"line\">          path: item.path,</span><br><span class=\"line\">          name: item.path.slice(<span class=\"number\">1</span>),</span><br><span class=\"line\">          meta: &#123;</span><br><span class=\"line\">            name: item.path.slice(<span class=\"number\">1</span>)</span><br><span class=\"line\">          &#125;,</span><br><span class=\"line\">          component: item.component</span><br><span class=\"line\">        &#125;)</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> routes = [...indexRoute, ...componentRoutes]</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> router = createRouter(&#123;</span><br><span class=\"line\">  history: createWebHashHistory(),</span><br><span class=\"line\">  routes: routes</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\">router.afterEach(<span class=\"function\"><span class=\"params\">()</span> =&gt;</span> &#123;</span><br><span class=\"line\">  nextTick(<span class=\"function\"><span class=\"params\">()</span> =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> blocks = <span class=\"built_in\">document</span>.querySelectorAll(<span class=\"string\">'pre code:not(.hljs)'</span>)</span><br><span class=\"line\">    <span class=\"built_in\">Array</span>.prototype.forEach.call(blocks, hljs.highlightBlock)</span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> router</span><br></pre></td></tr></table></figure>\n<p>创建 css 文件，修改页面样式</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/* website/styles/common.scss */</span></span><br><span class=\"line\"><span class=\"selector-tag\">html</span>,</span><br><span class=\"line\"><span class=\"selector-tag\">body</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">height</span>: <span class=\"number\">100%</span>;</span><br><span class=\"line\">  <span class=\"attribute\">padding</span>: <span class=\"number\">0</span>;</span><br><span class=\"line\">  <span class=\"attribute\">margin</span>: <span class=\"number\">0</span>;</span><br><span class=\"line\">  <span class=\"attribute\">overflow</span>: hidden;</span><br><span class=\"line\">  <span class=\"attribute\">font-family</span>: <span class=\"string\">'Helvetica Neue'</span>, Helvetica, <span class=\"string\">'PingFang SC'</span>, <span class=\"string\">'Hiragino Sans GB'</span>, <span class=\"string\">'Microsoft YaHei'</span>,</span><br><span class=\"line\">    SimSun, sans-serif;</span><br><span class=\"line\">  <span class=\"attribute\">-webkit-font-smoothing</span>: antialiased;</span><br><span class=\"line\">  <span class=\"attribute\">font-weight</span>: <span class=\"number\">400</span>;</span><br><span class=\"line\">  <span class=\"attribute\">-webkit-tap-highlight-color</span>: transparent;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-id\">#app</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">display</span>: flex;</span><br><span class=\"line\">  <span class=\"attribute\">flex-direction</span>: column;</span><br><span class=\"line\">  <span class=\"attribute\">height</span>: <span class=\"number\">100%</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-tag\">a</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">color</span>: <span class=\"number\">#409eff</span>;</span><br><span class=\"line\">  <span class=\"attribute\">text-decoration</span>: none;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-tag\">code</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">padding</span>: <span class=\"number\">0</span> <span class=\"number\">4px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">background-color</span>: <span class=\"number\">#f9fafc</span>;</span><br><span class=\"line\">  <span class=\"attribute\">border</span>: <span class=\"number\">1px</span> solid <span class=\"number\">#eaeefb</span>;</span><br><span class=\"line\">  <span class=\"attribute\">border-radius</span>: <span class=\"number\">4px</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-tag\">button</span>,</span><br><span class=\"line\"><span class=\"selector-tag\">input</span>,</span><br><span class=\"line\"><span class=\"selector-tag\">select</span>,</span><br><span class=\"line\"><span class=\"selector-tag\">textarea</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">font-family</span>: inherit;</span><br><span class=\"line\">  <span class=\"attribute\">font-size</span>: inherit;</span><br><span class=\"line\">  <span class=\"attribute\">line-height</span>: inherit;</span><br><span class=\"line\">  <span class=\"attribute\">color</span>: inherit;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-class\">.hljs</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">padding</span>: <span class=\"number\">18px</span> <span class=\"number\">24px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">margin-bottom</span>: <span class=\"number\">25px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">font-family</span>: Menlo, Monaco, Consolas, Courier, monospace;</span><br><span class=\"line\">  <span class=\"attribute\">font-size</span>: <span class=\"number\">12px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">-webkit-font-smoothing</span>: auto;</span><br><span class=\"line\">  <span class=\"attribute\">line-height</span>: <span class=\"number\">1.8</span>;</span><br><span class=\"line\">  <span class=\"attribute\">background-color</span>: <span class=\"number\">#fafafa</span>;</span><br><span class=\"line\">  <span class=\"attribute\">border</span>: solid <span class=\"number\">1px</span> <span class=\"number\">#eaeefb</span>;</span><br><span class=\"line\">  <span class=\"attribute\">border-radius</span>: <span class=\"number\">4px</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-class\">.demo</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">margin</span>: <span class=\"number\">20px</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>修改<code>main.ts</code></p>\n<figure class=\"highlight diff\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">import &#123; createApp &#125; from 'vue'</span><br><span class=\"line\">import App from './app.vue'</span><br><span class=\"line\">import AdminUI from '../packages/admin-ui'</span><br><span class=\"line\"><span class=\"addition\">+import 'highlight.js/styles/color-brewer.css' // 代码块高亮主题，多种主题可选择</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"addition\">+import router from './router'</span></span><br><span class=\"line\"><span class=\"addition\">+import DemoBlock from './components/DemoBlock/index.vue'</span></span><br><span class=\"line\"><span class=\"addition\">+import './styles/common.scss'</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"deletion\">-createApp(App).use(AdminUI).mount('#app')</span></span><br><span class=\"line\"><span class=\"addition\">+createApp(App).use(AdminUI).component('demo-block', DemoBlock).use(router).mount('#app')</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"添加枚举类型\"><a href=\"#添加枚举类型\" class=\"headerlink\" title=\"添加枚举类型\"></a>添加枚举类型</h3><p>新建 enums 文件夹，用来存放项目的枚举类型，目前只有语言类型需要保存</p>\n<figure class=\"highlight ts\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">enum</span> Language &#123;</span><br><span class=\"line\">  <span class=\"comment\">/** Chinese */</span></span><br><span class=\"line\">  CN = <span class=\"string\">'zh-CN'</span>,</span><br><span class=\"line\">  <span class=\"comment\">/** English */</span></span><br><span class=\"line\">  EN = <span class=\"string\">'en-US'</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"修改packages-amp-amp-编写文档\"><a href=\"#修改packages-amp-amp-编写文档\" class=\"headerlink\" title=\"修改packages &amp;&amp; 编写文档\"></a>修改packages &amp;&amp; 编写文档</h2><p>例子中，我定义了<code>button</code>组件，然后新建<code>markdown</code>文件夹，创建相应的语言文件夹，分别创建<code>button.md</code>，然后编写文档，就完成了。这里有几点要注意：</p>\n<ul>\n<li><code>:::demo demo-desc</code>是固定的语法，一定要这样写，下面的源码才会被编译成示例</li>\n<li>示例中的<code>dt-button</code>，对应的是 button 组件中，vue 的 name</li>\n</ul>\n<h2 id=\"增加-build-docs命令\"><a href=\"#增加-build-docs命令\" class=\"headerlink\" title=\"增加 build:docs命令\"></a>增加 build:docs命令</h2><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\"script\": &#123;</span><br><span class=\"line\">+  \"build:docs\": \"webpack --config build/webpack.config.dev.js\"</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n"},{"title":"使用SASS","date":"2017-10-20T06:11:27.000Z","description":"Sass教程","top":true,"_content":"> 本文参考[sass 中文网](https://www.sass.hk/docs/),仅作为个人速查文档使用\n\n## Sass简介\n\nSass 是一款强化 CSS 的辅助工具，它在 CSS 语法的基础上增加了变量 (variables)、嵌套 (nested rules)、混合 (mixins)、导入 (inline imports) 等高级功能，这些拓展令 CSS 更加强大与优雅。使用 Sass 以及 Sass 的样式库（如 Compass）有助于更好地组织管理样式文件，以及更高效地开发项目。\n\n## 语法风格\n\nSass 有两种写法，一种是靠缩进代替花括号代替选择器，用换行代替分号，是一种简写格式，这种格式的文件以`.sass`结尾。另一种写法类似 css 写法，以`.scss`结尾。\n\n> 本文均为 scss 格式\n\n```scss\n/* Sass 语法 */\nbody\n  font-size: 14px\n  color: #333\n\n/* Scss 语法 */\nbody {\n  font-size: 14px;\n  color: #333;\n}\n```\n\n以上俩段编译的结果是同样的结果\n\n```css\nbody {\n  font: 100% Helvetica, sans-serif;\n  color: #333;\n}\n```\n\n## Sass 安装\n\n这里以 node-sass 为例\n\n首先需要安装 [NodeJs](https://nodejs.org/en/)，通过命令行安装：\n\n```node\nnpm install -g node-sass\n```\n\n## Sass使用\n\n在命令中运行 sass\n\n```node\nnode-sass input.scss output.css\n```\n\n命令行监测单个 sass 文件，每次修改自动保存\n\n```node\nnode-sass -w input.scss output.css\n```\n\n监视整个文件夹的变化\n\n```node\nsass --watch app/sass:public/stylesheets\n```\n\n更多命令通过`sass --help`查看帮助\n\n## 输出格式\n\nSass 默认的 CSS 输出格式很美观也能清晰反映文档结构，为满足其他需求 Sass 也提供了多种输出格式。\n\nSass 提供了四种输出格式，可以通过 `:style option` 选项设定，或者在命令行中使用 `--style` 选项。\n\n```shell\nnode-sass -w input.scss output.css --style expanded\n```\n\n* nested -- Nested （嵌套）样式是 Sass 默认的输出格式，能够清晰反映 CSS 与 HTML 的结构关系。选择器与属性等单独占用一行，缩进量与 Sass 文件中一致，每行的缩进量反映了其在嵌套规则内的层数。当阅读大型 CSS 文件时，这种样式可以很容易地分析文件的主要结构。\n* expanded -- Expanded 输出更像是手写的样式，选择器、属性等各占用一行，属性根据选择器缩进，而选择器不做任何缩进。\n* compact -- Compact 输出方式比起上面两种占用的空间更少，每条 CSS 规则只占一行，包含其下的所有属性。嵌套过的选择器在输出时没有空行，不嵌套的选择器会输出空白行作为分隔符。\n* compressed -- Compressed 输出方式删除所有无意义的空格、空白行、以及注释，力求将文件体积压缩到最小，同时也会做出其他调整，比如会自动替换占用空间最小的颜色表达方式。\n\n## 注释\n\nSass 支持标准的 CSS 多行注释 `/* */`，以及单行注释 `//`，前者会 被完整输出到编译后的 CSS 文件中，而后者则不会。\n\n## Sass功能扩展\n\n### 嵌套结构\n\nSass 允许将一套 CSS 样式嵌套进另一套样式中，内层的样式将它外层的选择器作为父选择器。\n\n> 注意不可以无节制地嵌套，会加大浏览器的负担\n\n```scss\n#main {\n  width: 97%;\n\n  p, div {\n    font-size: 2em;\n    a { font-weight: bold; }\n  }\n\n  pre { font-size: 3em; }\n}\n```\n\n编译为\n\n```scss\n#main {\n  width: 97%;\n}\n#main p, #main div {\n  font-size: 2em;\n}\n#main p a, #main div a {\n  font-weight: bold;\n}\n#main pre {\n  font-size: 3em;\n}\n```\n\n嵌套功能避免了重复输入父选择器，而且令复杂的 CSS 结构更易于管理\n\n### 父选择器\n\n在嵌套 CSS 规则时，有时也需要直接使用嵌套外层的父选择器，例如，当给某个元素设定 hover 样式时，或者当 body 元素有某个 classname 时，可以用 & 代表嵌套规则外层的父选择器。\n\n```scss\n.box {\n  color: #333;\n  &:hover {\n    color: red;\n  }\n  $.active {\n    color: red;\n  }\n}\n```\n\n编译为\n\n```css\n.box {\n  color: #333;\n}\n.box:hover {\n  color: red;\n}\n.box.active {\n  color: red;\n}\n```\n\n值得注意的有两点:\n\n* 如果包含多层嵌套关系， &会逐层向下传递\n* &在编译时会完全解析为外层的父选择器名称，你可以以任何你需要的方式来操作它\n\n```scss\n.menu {\n  color: #333;\n  li {\n    &:hover {\n      color: red;\n    }\n  }\n  &-item {\n    color: blue;\n  }\n}\n```\n\n编译为\n\n```css\n.menu {\n  color: #333;\n}\n.menu li:hover {\n  color: red;\n}\n.menu .menu-item {\n  color: green;\n}\n```\n\n### 属性嵌套\n\n有些 CSS 属性遵循相同的命名空间 (namespace)，比如 `font-family`, `font-size`, `font-weight` 都以 `font` 作为属性的命名空间。为了便于管理这样的属性，同时也为了避免了重复输入，Sass 允许将属性嵌套在命名空间中。\n\n```scss\nbody {\n  font: {\n    family: 'iconfont';\n    size: 20px;\n    weight: bold;\n  }\n}\n```\n\n编译为\n\n```css\nbody {\n  font-family: 'iconfont';\n  font-size: 20px;\n  font-weight: bold;\n}\n```\n\n## SassScript\n\nSass在 css 的基础上提供了一些名为 SassScript 的功能，允许使用变量、运算、函数等额外的功能。这也是 Sass 语言最强大的地方。\n\n### 变量\n\nSassScript 最普遍的用法就是变量，变量以`$`开头，赋值方法与 CSS 属性的写法一样\n\n```scss\n$width: 20px;\n```\n\n变量可以直接使用\n\n```scss\n.box {\n  width: $width;\n}\n```\n\n编译为\n\n```css\n.box {\n  width: 20px;\n}\n```\n\n变量支持块级作用域，嵌套规则内定义的变量只能在嵌套规则内使用（局部变量），不在嵌套规则内定义的变量则可在任何地方使用（全局变量）。\n\n```scss\n.menu {\n  $width: 100px;\n  width: $width;\n  .menu-item {\n    $width: 20px;\n    width: $width;\n  }\n}\n```\n\n编译为\n\n```css\n.menu {\n  width: 100px;\n}\n.menu .menu-item {\n  width: 20px;\n}\n```\n\n可以通过添加`!global`将局部变量转换为全局变量\n\n### 数据类型\n\nsassScript支持 7 种主要的数据类型:\n\n* 数字 `1, 2, 3px`\n* 字符串，有引号字符串与无引号字符串 `\"foo\", 'bar', baz`\n* 颜色 `blue, #04a3f9, rgba(255,0,0,0.5)`\n* 布尔型 `true, false`\n* 空值 `null`\n* 数组 (list)，用空格或逗号作分隔符 `1.5em 1em 0 2em, Helvetica, Arial, sans-serif`\n* maps, 相当于 JavaScript 的 object `(key1: value1, key2: value2)`\n\nSassScript 也支持其他 CSS 属性值，比如 Unicode 字符集，或 !important 声明。然而Sass 不会特殊对待这些属性值，一律视为无引号字符串。\n\n### 插值语句 `#{}`\n\n通过 #{} 插值语句可以在选择器或属性名中使用变量,方式**等同于es6语法中的`${}`**\n\n```scss\n$name: foo;\n$attr: border;\n$color: blue;\np.#{$name} {\n  #{$attr}-color: #{$color};\n}\n```\n\n编译为\n\n```css\np.foo {\n  border-color: blue;\n}\n```\n\n使用插值可以避免 Sass 运行运算表达式，直接编译 CSS。\n\n```scss\np {\n  $font-size: 12px;\n  $line-height: 30px;\n  $width: 20px;\n  font: #{$font-size}/#{$line-height};\n  width: calc(100% - #{$width});\n}\n```\n\n编译为\n\n```css\np {\n  font: 12px/30px;\n  width: calc(100% - 20px);\n}\n```\n\n### 定义初始值\n\n可以在变量的结尾添加 `!default` 给一个未通过 `!default` 声明赋值的变量赋值，此时，如果变量已经被赋值，不会再被重新赋值，但是如果变量还没有被赋值，则会被赋予新的值。\n\n```scss\n$content: \"First content\";\n$content: \"Second content?\" !default;\n$new_content: \"First time reference\" !default;\n\n#main {\n  content: $content;\n  new-content: $new_content;\n}\n```\n\n编译为\n\n```css\n#main {\n  content: \"First content\";\n  new-content: \"First time reference\"; }\n```\n\n### 运算\n\n所有数据类型均支持相等运算 == 或 !=，此外，每种数据类型也有其各自支持的运算方式。\n\n#### 数字运算\n\nSassScript 支持数字的加减乘除、取整等运算 `(+, -, *, /, %)`，如果必要会在不同单位间转换值。\n\n```scss\np {\n  width: 1in + 8pt;\n}\n```\n\n编译为\n\n```css\np {\n  width: 1.111in; }\n```\n\n关系运算 <, >, <=, >= 也可用于数字运算，相等运算 ==, != 可用于所有数据类型。\n\n##### 除法运算\n\n`/` 在 CSS 中原本起到分隔数字的用途，SassScript 作为 CSS 语言的拓展在支持原本功能的同时也赋予了 `/` 除法运算的功能。也就是说，在 SassScript 中，`/`可以作为分隔符，也可以作为除法运算符。\n\n以下三种情况 `/` 将被视为除法运算符号：\n\n* 如果值，或值的一部分，是变量或者函数的返回值\n* 如果值被圆括号包裹\n* 如果值是算数表达式的一部分\n\n```scss\np {\n  font: 10px/8px;             // css语法，作为分隔符使用\n  $width: 1000px;\n  width: $width/2;            // 使用了变量，是除法运算\n  width: round(1.5)/2;        // 使用了函数，是除法运算\n  height: (500px/2);          // 使用了括号，是除法运算\n  margin-left: 5px + 8px/2px; // 使用了加号，是除法运算\n}\n```\n\n编译为\n\n```css\np {\n  font: 10px/8px;\n  width: 500px;\n  height: 250px;\n  margin-left: 9px; }\n```\n\n如果需要使用变量，同时又要确保 `/` 不做除法运算而是完整地编译到 CSS 文件中，只需要用 `#{}` 插值语句将变量包裹。\n\n```scss\np {\n  $font-size: 12px;\n  $line-height: 30px;\n  font: #{$font-size}/#{$line-height};\n}\n```\n\n编译为\n\n```css\np {\n  font: 12px/30px; }\n```\n\n#### 颜色值运算\n\n颜色值的运算是分段计算进行的，也就是分别计算红色，绿色，以及蓝色的值\n\n```scss\np {\n  color: #010203 + #040506;\n}\n```\n\n计算 `01 + 04 = 05 02 + 05 = 07 03 + 06 = 09`，然后编译为\n\n```css\np {\n  color: #050709; }\n```\n\n使用 `color functions` 比计算颜色值更方便一些。\n\n数字与颜色值之间也可以进行算数运算，同样也是分段计算的，比如\n\n```scss\np {\n  color: #010203 * 2;\n}\n```\n\n计算 `01 * 2 = 02 02 * 2 = 04 03 * 2 = 06`，然后编译为\n\n```css\np {\n  color: #020406; }\n```\n\n需要注意的是，如果颜色值包含 alpha channel（rgba 或 hsla 两种颜色值），必须拥有相等的 alpha 值才能进行运算，因为算术运算不会作用于 alpha 值。\n\n```scss\np {\n  color: rgba(255, 0, 0, 0.75) + rgba(0, 255, 0, 0.75);\n}\n```\n\n编译为\n\n```css\np {\n  color: rgba(255, 255, 0, 0.75); }\n```\n\n颜色值的 alpha channel 可以通过 opacify 或 transparentize 两个函数进行调整。\n\n```scss\n$translucent-red: rgba(255, 0, 0, 0.5);\np {\n  color: opacify($translucent-red, 0.3);\n  background-color: transparentize($translucent-red, 0.25);\n}\n```\n\n编译为\n\n```css\np {\n  color: rgba(255, 0, 0, 0.8);\n  background-color: rgba(255, 0, 0, 0.25); }\n```\n\n#### 字符串运算\n\n`+` 可用于连接字符串\n\n```scss\np {\n  cursor: e + -resize;\n}\n```\n\n编译为\n\n```css\np {\n  cursor: e-resize; }\n```\n\n注意，如果有引号字符串（位于 + 左侧）连接无引号字符串，运算结果是有引号的，相反，无引号字符串（位于 + 左侧）连接有引号字符串，运算结果则没有引号。\n\n```scss\np:before {\n  content: \"Foo \" + Bar;\n  font-family: sans- + \"serif\";\n}\n```\n\n编译为\n\n```css\np:before {\n  content: \"Foo Bar\";\n  font-family: sans-serif; }\n```\n\n运算表达式与其他值连用时，用空格做连接符：\n\n```scss\np {\n  margin: 3px + 4px auto;\n}\n```\n\n编译为\n\n```css\np {\n  margin: 7px auto; }\n```\n\n在有引号的文本字符串中使用 `#{}` 插值语句可以添加动态的值：\n\n```scss\np:before {\n  content: \"I ate #{5 + 10} pies!\";\n}\n```\n\n编译为\n\n```css\np:before {\n  content: \"I ate 15 pies!\"; }\n```\n\n#### 圆括号运算\n\n圆括号可以用来影响运算的顺序：\n\n```scss\np {\n  width: 1em + (2em * 3);\n}\n```\n\n编译为\n\n```css\np {\n  width: 7em; }\n```\n\n#### 函数运算\n\nSassScript 定义了多种函数，有些甚至可以通过普通的 CSS 语句调用\n<!-- 把下面的函数直接粘贴上来 -->\n\n## @Rules && 指令\n\nSass 支持所有的 CSS3 @-Rules，以及 Sass 特有的 “指令”（directives）。这一节会详细解释，更多资料请查看 [控制指令](#controlDirectives) 与 [混合指令](mixinDirectives) 两个部分。\n\n### @import\n\nSass 拓展了 `@import` 的功能，允许其导入 SCSS 或 Sass 文件。被导入的文件将合并编译到同一个 CSS 文件中，另外，被导入的文件中所包含的变量或者混合指令 (mixin) 都可以在导入的文件中使用。\n\nSass 在当前地址，或 Rack, Rails, Merb 的 Sass 文件地址寻找 Sass 文件，如果需要设定其他地址，可以用 `:load_paths` 选项，或者在命令行中输入 `--load-path` 命令。\n\n通常，`@import` 寻找 Sass 文件并将其导入，但在以下情况下，`@import` 仅作为普通的 CSS 语句，不会导入任何 Sass 文件:\n\n* 文件拓展名是 `.css`\n* 文件名以 `http://` 开头\n* 文件名是 `url()`\n* `@import` 包含 `media queries`\n\n如果不在上述情况内，文件的拓展名是 `.scss` 或 `.sass`，则导入成功。没有指定拓展名，Sass 将会试着寻找文件名相同，拓展名为 `.scss` 或 `.sass` 的文件并将其导入。\n\n```scss\n@import \"foo.scss\";\n```\n\n或\n\n```scss\n@import \"foo\";\n```\n\n都会导入文件 `foo.scss`，但是\n\n```scss\n@import \"foo.css\";\n@import \"foo\" screen;\n@import \"http://foo.com/bar\";\n@import url(foo);\n```\n\n编译为\n\n```css\n@import \"foo.css\";\n@import \"foo\" screen;\n@import \"http://foo.com/bar\";\n@import url(foo);\n```\n\nSass 允许同时导入多个文件，例如同时导入 `rounded-corners` 与 `text-shadow` 两个文件：\n\n```scss\n@import \"rounded-corners\", \"text-shadow\";\n```\n\n导入文件也可以使用 `#{ }` 插值语句，但不是通过变量动态导入 Sass 文件，只能作用于 CSS 的 `url()` 导入方式：\n\n```scss\n$family: unquote(\"Droid+Sans\");\n@import url(\"http://fonts.googleapis.com/css?family=\\#{$family}\");\n```\n\n编译为\n\n```css\n@import url(\"http://fonts.googleapis.com/css?family=Droid+Sans\");\n```\n\n#### 分音\n\n如果需要导入 SCSS 或者 Sass 文件，但又不希望将其编译为 CSS，只需要在文件名前添加下划线，这样会告诉 Sass 不要编译这些文件，但导入语句中却不需要添加下划线。\n\n例如，将文件命名为 `_colors.scss`，便不会编译 `_colours.css` 文件。\n\n```scss\n@import \"colors\";\n```\n\n上面的例子，导入的其实是 `_colors.scss` 文件\n\n注意，不可以同时存在添加下划线与未添加下划线的同名文件，添加下划线的文件将会被忽略。\n\n#### 嵌套 @import\n\n大多数情况下，一般在文件的最外层（不在嵌套规则内）使用 `@import`，其实，也可以将 `@import` 嵌套进 CSS 样式或者 `@media` 中，与平时的用法效果相同，只是这样导入的样式只能出现在嵌套的层中。\n\n假设 `example.scss` 文件包含以下样式：\n\n```scss\n.example {\n  color: red;\n}\n```\n\n然后导入到 `#main` 样式内\n\n```scss\n#main {\n  @import \"example\";\n}\n```\n\n将会被编译为\n\n```scss\n#main .example {\n  color: red;\n}\n```\n\n不可以在混合指令 (mixin) 或控制指令 (control directives) 中嵌套 @import。\n\n### @media\n\nSass 中 `@media` 指令与 CSS 中用法一样，只是增加了一点额外的功能：允许其在 CSS 规则中嵌套。如果 `@media` 嵌套在 CSS 规则内，编译时，`@media` 将被编译到文件的最外层，包含嵌套的父选择器。这个功能让 `@media` 用起来更方便，不需要重复使用选择器，也不会打乱 CSS 的书写流程。\n\n```scss\n.sidebar {\n  width: 300px;\n  @media screen and (orientation: landscape) {\n    width: 500px;\n  }\n}\n```\n\n编译为\n\n```css\n.sidebar {\n  width: 300px; }\n  @media screen and (orientation: landscape) {\n    .sidebar {\n      width: 500px; } }\n```\n\n`@media` 的 queries 允许互相嵌套使用，编译时，Sass 自动添加 `and`\n\n```scss\n@media screen {\n  .sidebar {\n    @media (orientation: landscape) {\n      width: 500px;\n    }\n  }\n}\n```\n\n编译为\n\n```css\n@media screen and (orientation: landscape) {\n  .sidebar {\n    width: 500px; } }\n```\n\n`@media` 甚至可以使用 SassScript（比如变量，函数，以及运算符）代替条件的名称或者值：\n\n```scss\n$media: screen;\n$feature: -webkit-min-device-pixel-ratio;\n$value: 1.5;\n\n@media #{$media} and ($feature: $value) {\n  .sidebar {\n    width: 500px;\n  }\n}\n```\n\n编译为\n\n```css\n@media screen and (-webkit-min-device-pixel-ratio: 1.5) {\n  .sidebar {\n    width: 500px; } }\n```\n\n### @extend\n\n在设计网页的时候常常遇到这种情况：一个元素使用的样式与另一个元素完全相同，但又添加了额外的样式。通常会在 HTML 中给元素定义两个 class，一个通用样式，一个特殊样式。假设现在要设计一个普通错误样式与一个严重错误样式，一般会这样写：\n\n```html\n<div class=\"error seriousError\">\n  Oh no! You've been hacked!\n</div>\n```\n\n样式如下\n\n```css\n.error {\n  border: 1px #f00;\n  background-color: #fdd;\n}\n.seriousError {\n  border-width: 3px;\n}\n```\n\n麻烦的是，这样做必须时刻记住使用 `.seriousError` 时需要参考 `.error` 的样式，带来了很多不便：比如加重维护负担，导致 bug，或者给 HTML 添加无语意的样式。使用 @extend 可以避免上述情况，告诉 Sass 将一个选择器下的所有样式继承给另一个选择器。\n\n```scss\n.error {\n  border: 1px #f00;\n  background-color: #fdd;\n}\n.seriousError {\n  @extend .error;\n  border-width: 3px;\n}\n```\n\n上面代码的意思是将 `.error` 下的所有样式继承给 `.seriousError，border-width: 3px;` 是单独给 `.seriousError` 设定特殊样式，这样，使用 `.seriousError` 的地方可以不再使用 `.error`。\n\n其他使用到 `.error` 的样式也会同样继承给 `.seriousError`，例如，另一个样式 `.error.intrusion` 使用了 `hacked.png` 做背景，`<div class=\"seriousError intrusion\">` 也同样会使用 hacked.png 背景。\n\n```css\n.error.intrusion {\n  background-image: url(\"/image/hacked.png\");\n}\n```\n\n#### How it works\n\n`@extend` 的作用是将重复使用的样式 `(.error)` 延伸 `(extend)` 给需要包含这个样式的特殊样式`（.seriousError）`，刚刚的例子：\n\n```scss\n.error {\n  border: 1px #f00;\n  background-color: #fdd;\n}\n.error.intrusion {\n  background-image: url(\"/image/hacked.png\");\n}\n.seriousError {\n  @extend .error;\n  border-width: 3px;\n}\n```\n\n编译为\n\n```css\n.error, .seriousError {\n  border: 1px #f00;\n  background-color: #fdd; }\n\n.error.intrusion, .seriousError.intrusion {\n  background-image: url(\"/image/hacked.png\"); }\n\n.seriousError {\n  border-width: 3px; }\n```\n\n当合并选择器时，`@extend` 会很聪明地避免无谓的重复，`.seriousError.seriousError` 将编译为 `.seriousError`，不能匹配任何元素的选择器（比如 `#main#footer` ）也会删除。\n\n#### 延伸复杂的选择器\n\nClass 选择器并不是唯一可以被延伸 (extend) 的，Sass 允许延伸任何定义给单个元素的选择器，比如 `.special.cool`，`a:hover` 或者 `a.user[href^=\"http://\"]` 等，例如：\n\n```scss\n.hoverlink {\n  @extend a:hover;\n}\n```\n\n同 class 元素一样，`a:hover` 的样式将继承给 `.hoverlink`。\n\n```scss\n.hoverlink {\n  @extend a:hover;\n}\na:hover {\n  text-decoration: underline;\n}\n```\n\n编译为\n\n```css\na:hover, .hoverlink {\n  text-decoration: underline; }\n```\n\n与上面 `.error.intrusion` 的例子一样，所有 `a:hover` 的样式将继承给 `.hoverlink`，包括其他使用到 `a:hover` 的样式，例如：\n\n```scss\n.hoverlink {\n  @extend a:hover;\n}\n.comment a.user:hover {\n  font-weight: bold;\n}\n```\n\n编译为\n\n```css\n.comment a.user:hover, .comment .user.hoverlink {\n  font-weight: bold; }\n```\n\n#### 多重延伸\n\n同一个选择器可以延伸给多个选择器，它所包含的属性将继承给所有被延伸的选择器：\n\n```scss\n.error {\n  border: 1px #f00;\n  background-color: #fdd;\n}\n.attention {\n  font-size: 3em;\n  background-color: #ff0;\n}\n.seriousError {\n  @extend .error;\n  @extend .attention;\n  border-width: 3px;\n}\n```\n\n编译为\n\n```css\n.error, .seriousError {\n  border: 1px #f00;\n  background-color: #fdd; }\n\n.attention, .seriousError {\n  font-size: 3em;\n  background-color: #ff0; }\n\n.seriousError {\n  border-width: 3px; }\n```\n\n每个 `.seriousError` 将包含 `.error` 与 `.attention` 下的所有样式，这时，后定义的样式享有优先权：`.seriousError` 的背景颜色是 `#ff0` 而不是 `#fdd`，因为 `.attention` 在 `.error` 之后定义。\n\n多重延伸可以使用逗号分隔选择器名，比如 `@extend .error, .attention;` 与 `@extend .error; @extend.attention` 有相同的效果。\n\n#### 继续延伸\n\n当一个选择器延伸给第二个后，可以继续将第二个选择器延伸给第三个，例如：\n\n```scss\n.error {\n  border: 1px #f00;\n  background-color: #fdd;\n}\n.seriousError {\n  @extend .error;\n  border-width: 3px;\n}\n.criticalError {\n  @extend .seriousError;\n  position: fixed;\n  top: 10%;\n  bottom: 10%;\n  left: 10%;\n  right: 10%;\n}\n```\n\n现在，每个 `.seriousError` 选择器将包含 `.error` 的样式，而 `.criticalError` 不仅包含 `.seriousError` 的样式也会同时包含 `.error` 的所有样式，上面的代码编译为：\n\n```css\n.error, .seriousError, .criticalError {\n  border: 1px #f00;\n  background-color: #fdd; }\n\n.seriousError, .criticalError {\n  border-width: 3px; }\n\n.criticalError {\n  position: fixed;\n  top: 10%;\n  bottom: 10%;\n  left: 10%;\n  right: 10%; }\n```\n\n#### 选择器列\n\n不可以将选择器列（比如 `.foo .bar` 或 `.foo + .bar`）延伸给其他元素，但是，却可以将其他元素延伸给选择器列：\n\n```scss\n#fake-links .link {\n  @extend a;\n}\n\na {\n  color: blue;\n  &:hover {\n    text-decoration: underline;\n  }\n}\n```\n\n编译为\n\n```css\na, #fake-links .link {\n  color: blue; }\n  a:hover, #fake-links .link:hover {\n    text-decoration: underline; }\n```\n\n##### 合并选择器列\n\n有时会遇到复杂的情况，比如选择器列中的某个元素需要延伸给另一个选择器列，这种情况下，两个选择器列需要合并，比如：\n\n```scss\n#admin .tabbar a {\n  font-weight: bold;\n}\n#demo .overview .fakelink {\n  @extend a;\n}\n```\n\n技术上讲能够生成所有匹配条件的结果，但是这样生成的样式表太复杂了，上面这个简单的例子就可能有 10 种结果。所以，Sass 只会编译输出有用的选择器。\n\n当两个列 (sequence) 合并时，如果没有包含相同的选择器，将生成两个新选择器：第一列出现在第二列之前，或者第二列出现在第一列之前：\n\n```scss\n#admin .tabbar a {\n  font-weight: bold;\n}\n#demo .overview .fakelink {\n  @extend a;\n}\n```\n\n编译为\n\n```css\n#admin .tabbar a,\n#admin .tabbar #demo .overview .fakelink,\n#demo .overview #admin .tabbar .fakelink {\n  font-weight: bold; }\n```\n\n如果两个列 (sequence) 包含了相同的选择器，相同部分将会合并在一起，其他部分交替输出。在下面的例子里，两个列都包含 `#admin`，输出结果中它们合并在了一起：\n\n```scss\n#admin .tabbar a {\n  font-weight: bold;\n}\n#admin .overview .fakelink {\n  @extend a;\n}\n```\n\n编译为\n\n```css\n#admin .tabbar a,\n#admin .tabbar .overview .fakelink,\n#admin .overview .tabbar .fakelink {\n  font-weight: bold; }\n```\n\n#### @extend-Only 选择器\n\n有时，需要定义一套样式并不是给某个元素用，而是只通过 `@extend` 指令使用，尤其是在制作 `Sass` 样式库的时候，希望 `Sass` 能够忽略用不到的样式。\n\n如果使用普通的 CSS 规则，最后会编译出很多用不到的样式，也容易与其他样式名冲突，所以，Sass 引入了“占位符选择器” (placeholder selectors)，看起来很像普通的 `id` 或 `class` 选择器，只是 `#` 或 `.` 被替换成了 `%`。可以像 `class` 或者 `id` 选择器那样使用，当它们单独使用时，不会被编译到 CSS 文件中。\n\n```scss\n// This ruleset won't be rendered on its own.\n#context a%extreme {\n  color: blue;\n  font-weight: bold;\n  font-size: 2em;\n}\n```\n\n占位符选择器需要通过延伸指令使用，用法与 `class` 或者 `id` 选择器一样，被延伸后，占位符选择器本身不会被编译。\n\n```scss\n.notice {\n  @extend %extreme;\n}\n```\n\n编译为\n\n```css\n#context a.notice {\n  color: blue;\n  font-weight: bold;\n  font-size: 2em; }\n```\n\n#### 在指令之延伸\n\n在指令中使用 `@extend` 时（比如在 @media 中）有一些限制：Sass 不可以将 `@media` 层外的 CSS 规则延伸给指令层内的 CSS，这样会生成大量的无用代码。也就是说，如果在 `@media` （或者其他 CSS 指令）中使用 `@extend`，必须延伸给相同指令层中的选择器。\n\n下面的例子是可行的：\n\n```scss\n@media print {\n  .error {\n    border: 1px #f00;\n    background-color: #fdd;\n  }\n  .seriousError {\n    @extend .error;\n    border-width: 3px;\n  }\n}\n```\n\n但不可以这样：\n\n```scss\n.error {\n  border: 1px #f00;\n  background-color: #fdd;\n}\n\n@media print {\n  .seriousError {\n    // INVALID EXTEND: .error is used outside of the \"@media print\" directive\n    @extend .error;\n    border-width: 3px;\n  }\n}\n```\n\n希望有一天，浏览器可以原生支持 `@extend` 指令，这样就可以在任何指令中使用延伸功能，不再受限制了。\n\n## 控制指令\n\nSassScript 提供了一些基础的控制指令，比如在满足一定条件时引用样式，或者设定范围重复输出格式。控制指令是一种高级功能，日常编写过程中并不常用到，主要与混合指令 (mixin) 配合使用。\n\n### @if\n\n当 @if 的表达式返回值不是 `false` 或者 `null` 时，条件成立，输出 `{}` 内的代码：\n\n```scss\np {\n  @if 1 + 1 == 2 { border: 1px solid; }\n  @if 5 < 3 { border: 2px dotted; }\n  @if null  { border: 3px double; }\n}\n```\n\n编译为\n\n```css\np {\n  border: 1px solid; }\n```\n\n`@if` 声明后面可以跟多个 `@else if` 声明，或者一个 `@else` 声明。如果 `@if` 声明失败，Sass 将逐条执行 `@else if` 声明，如果全部失败，最后执行 `@else` 声明，例如：\n\n```scss\n$type: monster;\np {\n  @if $type == ocean {\n    color: blue;\n  } @else if $type == matador {\n    color: red;\n  } @else if $type == monster {\n    color: green;\n  } @else {\n    color: black;\n  }\n}\n```\n\n编译为\n\n```css\np {\n  color: green; }\n```\n\n### @for\n\n`@for` 指令可以在限制的范围内重复输出格式，每次按要求（变量的值）对输出结果做出变动。这个指令包含两种格式：`@for $var from <start> through <end>`，或者 `@for $var from <start> to <end>`，区别在于 `through` 与 `to` 的含义：当使用 `through` 时，条件范围包含 `<start>` 与 `<end>` 的值，而使用 `to` 时条件范围只包含 `<start>` 的值不包含 `<end>` 的值。另外，`$var` 可以是任何变量，比如 `$i`；`<start>` 和 `<end>` 必须是整数值。\n\n```scss\n@for $i from 1 through 3 {\n  .item-#{$i} { width: 2em * $i; }\n}\n```\n\n编译为\n\n```css\n.item-1 {\n  width: 2em; }\n.item-2 {\n  width: 4em; }\n.item-3 {\n  width: 6em; }\n```\n\n### @each\n\n`@each` 指令的格式是 `$var in <list>`, `$var` 可以是任何变量名，比如 `$length` 或者 `$name`，而 `<list>` 是一连串的值，也就是值列表。\n\n`@each` 将变量 `$var` 作用于值列表中的每一个项目，然后输出结果，例如：\n\n```scss\n@each $animal in puma, sea-slug, egret, salamander {\n  .#{$animal}-icon {\n    background-image: url('/images/#{$animal}.png');\n  }\n}\n```\n\n编译为\n\n```css\n.puma-icon {\n  background-image: url('/images/puma.png'); }\n.sea-slug-icon {\n  background-image: url('/images/sea-slug.png'); }\n.egret-icon {\n  background-image: url('/images/egret.png'); }\n.salamander-icon {\n  background-image: url('/images/salamander.png'); }\n```\n\n### @while\n\n`@while` 指令重复输出格式直到表达式返回结果为 `false`。这样可以实现比 `@for` 更复杂的循环，只是很少会用到。例如：\n\n```scss\n$i: 6;\n@while $i > 0 {\n  .item-#{$i} { width: 2em * $i; }\n  $i: $i - 2;\n}\n```\n\n编译为\n\n```css\n.item-6 {\n  width: 12em; }\n\n.item-4 {\n  width: 8em; }\n\n.item-2 {\n  width: 4em; }\n```\n\n## 混合指令\n\n混合指令（Mixin）用于定义可重复使用的样式，避免了使用无语意的 class，比如 `.float-left`。混合指令可以包含所有的 CSS 规则，绝大部分 Sass 规则，甚至通过参数功能引入变量，输出多样化的样式。\n\n### 定义混合指令 `@mixin`\n\n混合指令的用法是在 `@mixin` 后添加名称与样式，比如名为 `large-text` 的混合通过下面的代码定义\n\n```scss\n@mixin large-text {\n  font: {\n    family: Arial;\n    size: 20px;\n    weight: bold;\n  }\n}\n```\n\n混合指令也可以包含选择器和属性，甚至可以用 `&` 引用父选择器\n\n```scss\n@mixin clearfix {\n  display: inline-block;\n  &:after {\n    content: \".\";\n    display: block;\n    height: 0;\n    clear: both;\n    visibility: hidden;\n  }\n  * html & { height: 1px }\n}\n```\n\n### 引用混合指令 `@include`\n\n使用 `@include` 指令引用混合样式\n\n```scss\n.page-title {\n  @include large-text;\n  padding: 4px;\n  margin-top: 10px;\n}\n```\n\n编译为\n\n```scss\n.page-title {\n  font-family: Arial;\n  font-size: 20px;\n  font-weight: bold;\n  padding: 4px;\n  margin-top: 10px; }\n```\n\n> 混合指令类似于 javascript 函数,除非引用，否则不会出现在结果中**\n\n也可以不使用父选择器在最外层直接引用混合样式\n\n```scss\n@mixin silly-links {\n  a {\n    color: blue;\n    background-color: red;\n  }\n}\n@include silly-links;\n```\n\n编译为\n\n```css\na {\n  color: blue;\n  background-color: red; }\n```\n\n混合样式中也可以包含其他混合样式，比如\n\n```scss\n@mixin compound {\n  @include highlighted-background;\n  @include header-text;\n}\n@mixin highlighted-background { background-color: #fc0; }\n@mixin header-text { font-size: 20px; }\n```\n\n混合样式中应该只定义后代选择器，这样可以安全的导入到文件的任何位置。\n\n### 参数\n\n参数用于给混合指令中的样式设定变量，并且赋值使用。在定义混合指令的时候，按照变量的格式，通过逗号分隔，将参数写进圆括号里。引用指令时，按照参数的顺序，再将所赋的值对应写进括号\n\n```scss\n@mixin sexy-border($color, $width) {\n  border: {\n    color: $color;\n    width: $width;\n    style: dashed;\n  }\n}\np { @include sexy-border(blue, 1in); }\n```\n\n编译为\n\n```css\np {\n  border-color: blue;\n  border-width: 1in;\n  border-style: dashed; }\n```\n\n混合指令也可以使用给变量赋值的方法给参数设定默认值，然后，当这个指令被引用的时候，如果没有给参数赋值，则自动使用默认值：\n\n```scss\n@mixin sexy-border($color, $width: 1in) {\n  border: {\n    color: $color;\n    width: $width;\n    style: dashed;\n  }\n}\np { @include sexy-border(blue); }\nh1 { @include sexy-border(blue, 2in); }\n```\n\n编译为\n\n```css\np {\n  border-color: blue;\n  border-width: 1in;\n  border-style: dashed; }\n\nh1 {\n  border-color: blue;\n  border-width: 2in;\n  border-style: dashed; }\n```\n\n### 关键词参数\n\n混合指令也可以使用关键词参数，上面的例子也可以写成：\n\n```scss\np { @include sexy-border($color: blue); }\nh1 { @include sexy-border($color: blue, $width: 2in); }\n```\n\n虽然不够简明，但是阅读起来会更方便。关键词参数给函数提供了更灵活的接口，以及容易调用的参数。关键词参数可以打乱顺序使用，如果使用默认值也可以省缺，另外，参数名被视为变量名，下划线、短横线可以互换使用。\n\n### 可变参数\n\n有时，不能确定混合指令需要使用多少个参数，比如一个关于 `box-shadow` 的混合指令不能确定有多少个 'shadow' 会被用到。这时，可以使用参数变量 `…` 声明（写在参数的最后方）告诉 Sass 将这些参数视为值列表处理\n\n```scss\n@mixin box-shadow($shadows...) {\n  box-shadow: $shadows;\n}\n.shadows {\n  @include box-shadow(0px 4px 5px #666, 2px 6px 10px #999);\n}\n```\n\n编译为\n\n```css\n.shadows {\n  box-shadow: 0px 4px 5px #666, 2px 6px 10px #999;\n}\n```\n\n有时，我们可以确定混合指令中的部分参数，其余的参数数不确定的\n\n```scss\n@mixin test($color, $shadows...) {\n  a {\n    color: $color;\n    box-shadow: $shadows;\n  }\n}\n$color: red;\n$shadows: 0px 4px 5px #666, 2px 6px 10px #999;\n@include test($color, $shadows)\n```\n\n编译为\n\n```css\na {\n  color: red;\n  box-shadow: 0px 4px 5px #666, 2px 6px 10px #999; }\n```\n\n> **一定要注意，可变参数必须放在最后**\n\n### 向混合样式中导入内容\n\n在引用混合样式的时候，可以先将一段代码导入到混合指令中，然后再输出混合样式，额外导入的部分将出现在 `@content` 标志的地方：\n\n```scss\n@mixin apply-to-ie6-only {\n  * html {\n    @content;\n  }\n}\n@include apply-to-ie6-only {\n  #logo {\n    background-image: url('/logo.gif');\n  }\n}\n```\n\n编译为\n\n```css\n* html #logo {\n  background-image: url(/logo.gif);\n}\n```\n\n> 当 @content 在指令中出现过多次或者出现在循环中时，额外的代码将被导入到每一个地方。\n\n## 函数指令\n\n### 自定义函数\n\nSass 支持自定义函数，并能在任何属性值或 SassScript 中使用：\n\n```scss\n$grid-width: 40px;\n$gutter-width: 10px;\n\n@function grid-width($n) {\n  @return $n * $grid-width + ($n - 1) * $gutter-width;\n}\n\n#sidebar { width: grid-width(5); }\n```\n\n编译为\n\n```css\n#sidebar {\n  width: 240px; }\n```\n\n与 mixin 相同，也可以传递若干个全局变量给函数作为参数。一个函数可以含有多条语句，需要调用 `@return` 输出结果。\n\n自定义的函数也可以使用关键词参数，上面的例子还可以这样写：\n\n```scss\n#sidebar { width: grid-width($n: 5); }\n```\n\n建议在自定义函数前添加前缀避免命名冲突，其他人阅读代码时也会知道这不是 Sass 或者 CSS 的自带功能。\n\n### sass 中内置的函数\n\n* 字符串函数\n  * unquote\n  * quote\n  * To-upper-case\n  * To-lower-case\n  * percentage\n  * round\n  * ceil\n  * floor\n  * abs\n  * min\n  * max\n  * random\n* 列表函数\n  * length  列表数据的长度\n  * nth  (10px 20px 30px, 1)\n  * join  join(10px 20px, 30px 40px)\n  * append  append(10px 20px ,30px)\n  * zip  zip(1px 2px 3px,solid dashed dotted,green blue red)\n  * index  index(1px solid red, solid)\n  * type-of  type-of(100)\n  * unit  取单位\n  * unitless  判断一个值是否带有单位\n  * comparable  判断两个数是否可以进行加减合并\n  * if(true,1px,2px)\n* Maps函数\n  * map-get\n  * map-has-key\n  * map-keys\n  * map-values\n  * map-merge\n  * map-remove\n  * keywords\n* 颜色函数\n  * rgb\n  * rgba\n  * red\n  * green\n  * blue\n  * mix  混合两种颜色 第三个参数为第一种颜色的比例  mix(blue,red,20%)\n  * lighten  lighten(red, 20%)\n  * darken  darken(red,30%)\n  * saturate  改变颜色的饱和度 参数单位为百分比 saturate(blue,20%)\n  * desaturate\n  * adjust-hue  通过调整色相 adjust-hue(blue,30deg)\n  * grayscale  直接让饱和度为0  grayscale(blue)\n  * alpha  获取透明度\n  * opacity  获取透明度\n  * rgba\n  * fade-in  增加透明度\n  * transparentize  减少透明度\n  * fade-out  减少透明度\n\n```scss\n$map: (\n  $key1: value1,\n  $key2: value2,\n  $key3: value3\n);\n\n$map: (\n  key1: value1,\n  key2: (\n    key-1: value-1,\n    key-2: value-2,\n  ),\nkey3: value3\n);\n\n$theme-color: (\n  default: (\n      bgcolor: #fff,\n      text-color: #444,\n      link-color: #39f\n  ),\n  primary:(\n      bgcolor: #000,\n      text-color:#fff,\n      link-color: #93f\n  ),\n  negative: (\n      bgcolor: #f36,\n      text-color: #fefefe,\n      link-color: #d4e\n  )\n);\n\n/* map-get */\n$social-colors: (\n  dribble: #ea4c89,\n  facebook: #3b5998,\n  github: #171515,\n  google: #db4437,\n  twitter: #55acee\n);\n.btn-dribble{\n  color: map-get($social-colors,facebook);\n}\n/* 没有值不会报错 */\n.btn-weibo{\n  font-size: 12px;\n  color: map-get($social-colors,weibo);\n}\n\n/* map中的容错函数 */\n   @function colors($color){\n     @if not map-has-key($social-colors,$color){\n         @warn \"No color found for `#{$color}` in $social-colors map. Property omitted.\";\n     }\n     @return map-get($social-colors,$color);\n   }\n   .btn-dribble {\n     color: colors(dribble);\n   }\n\n/* each 遍历 map */\n@each $name in map-keys($social-colors){\n  .btn-#{$name}{\n      color: colors($name);\n  }\n}\n@for $i from 1 through length(map-keys($social-colors)){\n  .btn-#{nth(map-keys($social-colors),$i)} {\n    color: colors(nth(map-keys($social-colors),$i));\n  }\n}\n\n/*得到所有的值*/\n$values: map-values($social-colors);\n\n$color: (\n  text: #f36,\n  link: #f63,\n  border: #ddd,\n  backround: #fff\n);\n$typo:(\n  font-size: 12px,\n  line-height: 1.6\n);\n$newcolor: map-merge($color, $typo);\n\n/* 得到新值 */\n$map:map-remove($social-colors,dribble);\n```\n\n```html\n<ul class=\"swatches red\">\n  <li></li>\n  ...\n  <li></li>\n</ul>\n<ul class=\"swatches orange\">\n  <li></li>\n  …\n  <li></li>\n</ul>\n<ul class=\"swatches yellow\">\n  <li></li>\n  …\n  <li></li>\n</ul>\n<ul class=\"swatches green\">\n  <li></li>\n  …\n  <li></li>\n</ul>\n<ul class=\"swatches blue\">\n  <li></li>\n  …\n  <li></li>\n</ul>\n<ul class=\"swatches purple\">\n  <li></li>\n  …\n  <li></li>\n</ul>\n```\n\n```scss\n$redBase: #DC143C;\n$orangeBase: saturate(lighten(adjust_hue($redBase, 39), 5), 7);//#f37a16\n$yellowBase: saturate(lighten(adjust_hue($redBase, 64), 6), 13);//#fbdc14\n$greenBase: desaturate(darken(adjust_hue($redBase, 102), 2), 11);//#73c620\n$blueBase: saturate(darken(adjust_hue($redBase, 201), 2), 1);//#12b7d4\n$purpleBase: saturate(darken(adjust_hue($redBase, 296), 2), 1);//#a012d4\n$blackBase: #777;\n$bgc: #fff;\n\n//定义颜色变暗的 mixin\n@mixin swatchesDarken($color) {\n  @for $i from 1 through 10 {\n    $x:$i+11;\n    li:nth-child(#{$x}) {\n      $n:$i*5;\n      $bgc:darken($color,$n); //颜色变暗\n      background-color: $bgc;\n      &:hover:before { //hover状态显示颜色编号\n        content: \"#{$bgc}\";\n        color: lighten($bgc,40);\n        font-family: verdana;\n        font-size: 8px;\n        padding: 2px;\n      }\n    }\n  }\n}\n//定义颜色变亮的 mixin\n@mixin swatchesLighten($color) {\n  @for $i from 1 through 10 {\n    $x:11-$i;\n    li:nth-child(#{$x}) {\n      $n:$i*5;\n      $bgc:lighten($color,$n);\n      background-color: $bgc;\n      &:hover:before {\n        content: \"#{$bgc}\";\n        color: darken($bgc,40);\n        font-family: verdana;\n        font-size: 8px;\n        padding: 2px;\n      }\n    }\n  }\n}\n\n.swatches li {\n  width: 4.7619047619%;\n  float: left;\n  height: 60px;\n  list-style: none outside none;\n}\n\nul.red {\n  @include swatchesLighten($redBase);\n  @include swatchesDarken($redBase);\n  li:nth-child(11) {\n    background-color: $redBase;\n  }\n}\n\nul.orange {\n  @include swatchesLighten($orangeBase);\n  @include swatchesDarken($orangeBase);\n  li:nth-child(11) {\n    background-color: $orangeBase;\n  }\n}\n\nul.yellow {\n  @include swatchesLighten($yellowBase);\n  @include swatchesDarken($yellowBase);\n  li:nth-child(11) {\n    background-color: $yellowBase;\n  }\n}\n\nul.green {\n  @include swatchesLighten($greenBase);\n  @include swatchesDarken($greenBase);\n  li:nth-child(11) {\n    background-color: $greenBase;\n  }\n}\n\nul.blue {\n  @include swatchesLighten($blueBase);\n  @include swatchesDarken($blueBase);\n  li:nth-child(11) {\n    background-color: $blueBase;\n  }\n}\n\nul.purple {\n  @include swatchesLighten($purpleBase);\n  @include swatchesDarken($purpleBase);\n  li:nth-child(11) {\n    background-color: $purpleBase;\n  }\n}\n\nul.black {\n  @include swatchesLighten($blackBase);\n  @include swatchesDarken($blackBase);\n  li:nth-child(11) {\n    background-color: $blackBase;\n  }\n}\n```\n\n## 最后附上一个rem的例子\n\n```scss\n//以750px( iphone6 )为基准定义其他分辨率下的rem\n@mixin useRem($size){\n  $device-list : 320px, 375px , 414px;\n  html{\n    @each $device in $device-list{\n      @media screen and (min-width: $device){\n        font-size: 100px * ($device/$size);\n      }\n    }\n  }\n}\n@include useRem(750px);\n```\n","source":"_posts/使用SASS.md","raw":"---\ntitle: 使用SASS\ntags: [sass]\ndate: 2017-10-20 14:11:27\ncategories: [NodeJs]\ndescription: Sass教程\ntop: true\n---\n> 本文参考[sass 中文网](https://www.sass.hk/docs/),仅作为个人速查文档使用\n\n## Sass简介\n\nSass 是一款强化 CSS 的辅助工具，它在 CSS 语法的基础上增加了变量 (variables)、嵌套 (nested rules)、混合 (mixins)、导入 (inline imports) 等高级功能，这些拓展令 CSS 更加强大与优雅。使用 Sass 以及 Sass 的样式库（如 Compass）有助于更好地组织管理样式文件，以及更高效地开发项目。\n\n## 语法风格\n\nSass 有两种写法，一种是靠缩进代替花括号代替选择器，用换行代替分号，是一种简写格式，这种格式的文件以`.sass`结尾。另一种写法类似 css 写法，以`.scss`结尾。\n\n> 本文均为 scss 格式\n\n```scss\n/* Sass 语法 */\nbody\n  font-size: 14px\n  color: #333\n\n/* Scss 语法 */\nbody {\n  font-size: 14px;\n  color: #333;\n}\n```\n\n以上俩段编译的结果是同样的结果\n\n```css\nbody {\n  font: 100% Helvetica, sans-serif;\n  color: #333;\n}\n```\n\n## Sass 安装\n\n这里以 node-sass 为例\n\n首先需要安装 [NodeJs](https://nodejs.org/en/)，通过命令行安装：\n\n```node\nnpm install -g node-sass\n```\n\n## Sass使用\n\n在命令中运行 sass\n\n```node\nnode-sass input.scss output.css\n```\n\n命令行监测单个 sass 文件，每次修改自动保存\n\n```node\nnode-sass -w input.scss output.css\n```\n\n监视整个文件夹的变化\n\n```node\nsass --watch app/sass:public/stylesheets\n```\n\n更多命令通过`sass --help`查看帮助\n\n## 输出格式\n\nSass 默认的 CSS 输出格式很美观也能清晰反映文档结构，为满足其他需求 Sass 也提供了多种输出格式。\n\nSass 提供了四种输出格式，可以通过 `:style option` 选项设定，或者在命令行中使用 `--style` 选项。\n\n```shell\nnode-sass -w input.scss output.css --style expanded\n```\n\n* nested -- Nested （嵌套）样式是 Sass 默认的输出格式，能够清晰反映 CSS 与 HTML 的结构关系。选择器与属性等单独占用一行，缩进量与 Sass 文件中一致，每行的缩进量反映了其在嵌套规则内的层数。当阅读大型 CSS 文件时，这种样式可以很容易地分析文件的主要结构。\n* expanded -- Expanded 输出更像是手写的样式，选择器、属性等各占用一行，属性根据选择器缩进，而选择器不做任何缩进。\n* compact -- Compact 输出方式比起上面两种占用的空间更少，每条 CSS 规则只占一行，包含其下的所有属性。嵌套过的选择器在输出时没有空行，不嵌套的选择器会输出空白行作为分隔符。\n* compressed -- Compressed 输出方式删除所有无意义的空格、空白行、以及注释，力求将文件体积压缩到最小，同时也会做出其他调整，比如会自动替换占用空间最小的颜色表达方式。\n\n## 注释\n\nSass 支持标准的 CSS 多行注释 `/* */`，以及单行注释 `//`，前者会 被完整输出到编译后的 CSS 文件中，而后者则不会。\n\n## Sass功能扩展\n\n### 嵌套结构\n\nSass 允许将一套 CSS 样式嵌套进另一套样式中，内层的样式将它外层的选择器作为父选择器。\n\n> 注意不可以无节制地嵌套，会加大浏览器的负担\n\n```scss\n#main {\n  width: 97%;\n\n  p, div {\n    font-size: 2em;\n    a { font-weight: bold; }\n  }\n\n  pre { font-size: 3em; }\n}\n```\n\n编译为\n\n```scss\n#main {\n  width: 97%;\n}\n#main p, #main div {\n  font-size: 2em;\n}\n#main p a, #main div a {\n  font-weight: bold;\n}\n#main pre {\n  font-size: 3em;\n}\n```\n\n嵌套功能避免了重复输入父选择器，而且令复杂的 CSS 结构更易于管理\n\n### 父选择器\n\n在嵌套 CSS 规则时，有时也需要直接使用嵌套外层的父选择器，例如，当给某个元素设定 hover 样式时，或者当 body 元素有某个 classname 时，可以用 & 代表嵌套规则外层的父选择器。\n\n```scss\n.box {\n  color: #333;\n  &:hover {\n    color: red;\n  }\n  $.active {\n    color: red;\n  }\n}\n```\n\n编译为\n\n```css\n.box {\n  color: #333;\n}\n.box:hover {\n  color: red;\n}\n.box.active {\n  color: red;\n}\n```\n\n值得注意的有两点:\n\n* 如果包含多层嵌套关系， &会逐层向下传递\n* &在编译时会完全解析为外层的父选择器名称，你可以以任何你需要的方式来操作它\n\n```scss\n.menu {\n  color: #333;\n  li {\n    &:hover {\n      color: red;\n    }\n  }\n  &-item {\n    color: blue;\n  }\n}\n```\n\n编译为\n\n```css\n.menu {\n  color: #333;\n}\n.menu li:hover {\n  color: red;\n}\n.menu .menu-item {\n  color: green;\n}\n```\n\n### 属性嵌套\n\n有些 CSS 属性遵循相同的命名空间 (namespace)，比如 `font-family`, `font-size`, `font-weight` 都以 `font` 作为属性的命名空间。为了便于管理这样的属性，同时也为了避免了重复输入，Sass 允许将属性嵌套在命名空间中。\n\n```scss\nbody {\n  font: {\n    family: 'iconfont';\n    size: 20px;\n    weight: bold;\n  }\n}\n```\n\n编译为\n\n```css\nbody {\n  font-family: 'iconfont';\n  font-size: 20px;\n  font-weight: bold;\n}\n```\n\n## SassScript\n\nSass在 css 的基础上提供了一些名为 SassScript 的功能，允许使用变量、运算、函数等额外的功能。这也是 Sass 语言最强大的地方。\n\n### 变量\n\nSassScript 最普遍的用法就是变量，变量以`$`开头，赋值方法与 CSS 属性的写法一样\n\n```scss\n$width: 20px;\n```\n\n变量可以直接使用\n\n```scss\n.box {\n  width: $width;\n}\n```\n\n编译为\n\n```css\n.box {\n  width: 20px;\n}\n```\n\n变量支持块级作用域，嵌套规则内定义的变量只能在嵌套规则内使用（局部变量），不在嵌套规则内定义的变量则可在任何地方使用（全局变量）。\n\n```scss\n.menu {\n  $width: 100px;\n  width: $width;\n  .menu-item {\n    $width: 20px;\n    width: $width;\n  }\n}\n```\n\n编译为\n\n```css\n.menu {\n  width: 100px;\n}\n.menu .menu-item {\n  width: 20px;\n}\n```\n\n可以通过添加`!global`将局部变量转换为全局变量\n\n### 数据类型\n\nsassScript支持 7 种主要的数据类型:\n\n* 数字 `1, 2, 3px`\n* 字符串，有引号字符串与无引号字符串 `\"foo\", 'bar', baz`\n* 颜色 `blue, #04a3f9, rgba(255,0,0,0.5)`\n* 布尔型 `true, false`\n* 空值 `null`\n* 数组 (list)，用空格或逗号作分隔符 `1.5em 1em 0 2em, Helvetica, Arial, sans-serif`\n* maps, 相当于 JavaScript 的 object `(key1: value1, key2: value2)`\n\nSassScript 也支持其他 CSS 属性值，比如 Unicode 字符集，或 !important 声明。然而Sass 不会特殊对待这些属性值，一律视为无引号字符串。\n\n### 插值语句 `#{}`\n\n通过 #{} 插值语句可以在选择器或属性名中使用变量,方式**等同于es6语法中的`${}`**\n\n```scss\n$name: foo;\n$attr: border;\n$color: blue;\np.#{$name} {\n  #{$attr}-color: #{$color};\n}\n```\n\n编译为\n\n```css\np.foo {\n  border-color: blue;\n}\n```\n\n使用插值可以避免 Sass 运行运算表达式，直接编译 CSS。\n\n```scss\np {\n  $font-size: 12px;\n  $line-height: 30px;\n  $width: 20px;\n  font: #{$font-size}/#{$line-height};\n  width: calc(100% - #{$width});\n}\n```\n\n编译为\n\n```css\np {\n  font: 12px/30px;\n  width: calc(100% - 20px);\n}\n```\n\n### 定义初始值\n\n可以在变量的结尾添加 `!default` 给一个未通过 `!default` 声明赋值的变量赋值，此时，如果变量已经被赋值，不会再被重新赋值，但是如果变量还没有被赋值，则会被赋予新的值。\n\n```scss\n$content: \"First content\";\n$content: \"Second content?\" !default;\n$new_content: \"First time reference\" !default;\n\n#main {\n  content: $content;\n  new-content: $new_content;\n}\n```\n\n编译为\n\n```css\n#main {\n  content: \"First content\";\n  new-content: \"First time reference\"; }\n```\n\n### 运算\n\n所有数据类型均支持相等运算 == 或 !=，此外，每种数据类型也有其各自支持的运算方式。\n\n#### 数字运算\n\nSassScript 支持数字的加减乘除、取整等运算 `(+, -, *, /, %)`，如果必要会在不同单位间转换值。\n\n```scss\np {\n  width: 1in + 8pt;\n}\n```\n\n编译为\n\n```css\np {\n  width: 1.111in; }\n```\n\n关系运算 <, >, <=, >= 也可用于数字运算，相等运算 ==, != 可用于所有数据类型。\n\n##### 除法运算\n\n`/` 在 CSS 中原本起到分隔数字的用途，SassScript 作为 CSS 语言的拓展在支持原本功能的同时也赋予了 `/` 除法运算的功能。也就是说，在 SassScript 中，`/`可以作为分隔符，也可以作为除法运算符。\n\n以下三种情况 `/` 将被视为除法运算符号：\n\n* 如果值，或值的一部分，是变量或者函数的返回值\n* 如果值被圆括号包裹\n* 如果值是算数表达式的一部分\n\n```scss\np {\n  font: 10px/8px;             // css语法，作为分隔符使用\n  $width: 1000px;\n  width: $width/2;            // 使用了变量，是除法运算\n  width: round(1.5)/2;        // 使用了函数，是除法运算\n  height: (500px/2);          // 使用了括号，是除法运算\n  margin-left: 5px + 8px/2px; // 使用了加号，是除法运算\n}\n```\n\n编译为\n\n```css\np {\n  font: 10px/8px;\n  width: 500px;\n  height: 250px;\n  margin-left: 9px; }\n```\n\n如果需要使用变量，同时又要确保 `/` 不做除法运算而是完整地编译到 CSS 文件中，只需要用 `#{}` 插值语句将变量包裹。\n\n```scss\np {\n  $font-size: 12px;\n  $line-height: 30px;\n  font: #{$font-size}/#{$line-height};\n}\n```\n\n编译为\n\n```css\np {\n  font: 12px/30px; }\n```\n\n#### 颜色值运算\n\n颜色值的运算是分段计算进行的，也就是分别计算红色，绿色，以及蓝色的值\n\n```scss\np {\n  color: #010203 + #040506;\n}\n```\n\n计算 `01 + 04 = 05 02 + 05 = 07 03 + 06 = 09`，然后编译为\n\n```css\np {\n  color: #050709; }\n```\n\n使用 `color functions` 比计算颜色值更方便一些。\n\n数字与颜色值之间也可以进行算数运算，同样也是分段计算的，比如\n\n```scss\np {\n  color: #010203 * 2;\n}\n```\n\n计算 `01 * 2 = 02 02 * 2 = 04 03 * 2 = 06`，然后编译为\n\n```css\np {\n  color: #020406; }\n```\n\n需要注意的是，如果颜色值包含 alpha channel（rgba 或 hsla 两种颜色值），必须拥有相等的 alpha 值才能进行运算，因为算术运算不会作用于 alpha 值。\n\n```scss\np {\n  color: rgba(255, 0, 0, 0.75) + rgba(0, 255, 0, 0.75);\n}\n```\n\n编译为\n\n```css\np {\n  color: rgba(255, 255, 0, 0.75); }\n```\n\n颜色值的 alpha channel 可以通过 opacify 或 transparentize 两个函数进行调整。\n\n```scss\n$translucent-red: rgba(255, 0, 0, 0.5);\np {\n  color: opacify($translucent-red, 0.3);\n  background-color: transparentize($translucent-red, 0.25);\n}\n```\n\n编译为\n\n```css\np {\n  color: rgba(255, 0, 0, 0.8);\n  background-color: rgba(255, 0, 0, 0.25); }\n```\n\n#### 字符串运算\n\n`+` 可用于连接字符串\n\n```scss\np {\n  cursor: e + -resize;\n}\n```\n\n编译为\n\n```css\np {\n  cursor: e-resize; }\n```\n\n注意，如果有引号字符串（位于 + 左侧）连接无引号字符串，运算结果是有引号的，相反，无引号字符串（位于 + 左侧）连接有引号字符串，运算结果则没有引号。\n\n```scss\np:before {\n  content: \"Foo \" + Bar;\n  font-family: sans- + \"serif\";\n}\n```\n\n编译为\n\n```css\np:before {\n  content: \"Foo Bar\";\n  font-family: sans-serif; }\n```\n\n运算表达式与其他值连用时，用空格做连接符：\n\n```scss\np {\n  margin: 3px + 4px auto;\n}\n```\n\n编译为\n\n```css\np {\n  margin: 7px auto; }\n```\n\n在有引号的文本字符串中使用 `#{}` 插值语句可以添加动态的值：\n\n```scss\np:before {\n  content: \"I ate #{5 + 10} pies!\";\n}\n```\n\n编译为\n\n```css\np:before {\n  content: \"I ate 15 pies!\"; }\n```\n\n#### 圆括号运算\n\n圆括号可以用来影响运算的顺序：\n\n```scss\np {\n  width: 1em + (2em * 3);\n}\n```\n\n编译为\n\n```css\np {\n  width: 7em; }\n```\n\n#### 函数运算\n\nSassScript 定义了多种函数，有些甚至可以通过普通的 CSS 语句调用\n<!-- 把下面的函数直接粘贴上来 -->\n\n## @Rules && 指令\n\nSass 支持所有的 CSS3 @-Rules，以及 Sass 特有的 “指令”（directives）。这一节会详细解释，更多资料请查看 [控制指令](#controlDirectives) 与 [混合指令](mixinDirectives) 两个部分。\n\n### @import\n\nSass 拓展了 `@import` 的功能，允许其导入 SCSS 或 Sass 文件。被导入的文件将合并编译到同一个 CSS 文件中，另外，被导入的文件中所包含的变量或者混合指令 (mixin) 都可以在导入的文件中使用。\n\nSass 在当前地址，或 Rack, Rails, Merb 的 Sass 文件地址寻找 Sass 文件，如果需要设定其他地址，可以用 `:load_paths` 选项，或者在命令行中输入 `--load-path` 命令。\n\n通常，`@import` 寻找 Sass 文件并将其导入，但在以下情况下，`@import` 仅作为普通的 CSS 语句，不会导入任何 Sass 文件:\n\n* 文件拓展名是 `.css`\n* 文件名以 `http://` 开头\n* 文件名是 `url()`\n* `@import` 包含 `media queries`\n\n如果不在上述情况内，文件的拓展名是 `.scss` 或 `.sass`，则导入成功。没有指定拓展名，Sass 将会试着寻找文件名相同，拓展名为 `.scss` 或 `.sass` 的文件并将其导入。\n\n```scss\n@import \"foo.scss\";\n```\n\n或\n\n```scss\n@import \"foo\";\n```\n\n都会导入文件 `foo.scss`，但是\n\n```scss\n@import \"foo.css\";\n@import \"foo\" screen;\n@import \"http://foo.com/bar\";\n@import url(foo);\n```\n\n编译为\n\n```css\n@import \"foo.css\";\n@import \"foo\" screen;\n@import \"http://foo.com/bar\";\n@import url(foo);\n```\n\nSass 允许同时导入多个文件，例如同时导入 `rounded-corners` 与 `text-shadow` 两个文件：\n\n```scss\n@import \"rounded-corners\", \"text-shadow\";\n```\n\n导入文件也可以使用 `#{ }` 插值语句，但不是通过变量动态导入 Sass 文件，只能作用于 CSS 的 `url()` 导入方式：\n\n```scss\n$family: unquote(\"Droid+Sans\");\n@import url(\"http://fonts.googleapis.com/css?family=\\#{$family}\");\n```\n\n编译为\n\n```css\n@import url(\"http://fonts.googleapis.com/css?family=Droid+Sans\");\n```\n\n#### 分音\n\n如果需要导入 SCSS 或者 Sass 文件，但又不希望将其编译为 CSS，只需要在文件名前添加下划线，这样会告诉 Sass 不要编译这些文件，但导入语句中却不需要添加下划线。\n\n例如，将文件命名为 `_colors.scss`，便不会编译 `_colours.css` 文件。\n\n```scss\n@import \"colors\";\n```\n\n上面的例子，导入的其实是 `_colors.scss` 文件\n\n注意，不可以同时存在添加下划线与未添加下划线的同名文件，添加下划线的文件将会被忽略。\n\n#### 嵌套 @import\n\n大多数情况下，一般在文件的最外层（不在嵌套规则内）使用 `@import`，其实，也可以将 `@import` 嵌套进 CSS 样式或者 `@media` 中，与平时的用法效果相同，只是这样导入的样式只能出现在嵌套的层中。\n\n假设 `example.scss` 文件包含以下样式：\n\n```scss\n.example {\n  color: red;\n}\n```\n\n然后导入到 `#main` 样式内\n\n```scss\n#main {\n  @import \"example\";\n}\n```\n\n将会被编译为\n\n```scss\n#main .example {\n  color: red;\n}\n```\n\n不可以在混合指令 (mixin) 或控制指令 (control directives) 中嵌套 @import。\n\n### @media\n\nSass 中 `@media` 指令与 CSS 中用法一样，只是增加了一点额外的功能：允许其在 CSS 规则中嵌套。如果 `@media` 嵌套在 CSS 规则内，编译时，`@media` 将被编译到文件的最外层，包含嵌套的父选择器。这个功能让 `@media` 用起来更方便，不需要重复使用选择器，也不会打乱 CSS 的书写流程。\n\n```scss\n.sidebar {\n  width: 300px;\n  @media screen and (orientation: landscape) {\n    width: 500px;\n  }\n}\n```\n\n编译为\n\n```css\n.sidebar {\n  width: 300px; }\n  @media screen and (orientation: landscape) {\n    .sidebar {\n      width: 500px; } }\n```\n\n`@media` 的 queries 允许互相嵌套使用，编译时，Sass 自动添加 `and`\n\n```scss\n@media screen {\n  .sidebar {\n    @media (orientation: landscape) {\n      width: 500px;\n    }\n  }\n}\n```\n\n编译为\n\n```css\n@media screen and (orientation: landscape) {\n  .sidebar {\n    width: 500px; } }\n```\n\n`@media` 甚至可以使用 SassScript（比如变量，函数，以及运算符）代替条件的名称或者值：\n\n```scss\n$media: screen;\n$feature: -webkit-min-device-pixel-ratio;\n$value: 1.5;\n\n@media #{$media} and ($feature: $value) {\n  .sidebar {\n    width: 500px;\n  }\n}\n```\n\n编译为\n\n```css\n@media screen and (-webkit-min-device-pixel-ratio: 1.5) {\n  .sidebar {\n    width: 500px; } }\n```\n\n### @extend\n\n在设计网页的时候常常遇到这种情况：一个元素使用的样式与另一个元素完全相同，但又添加了额外的样式。通常会在 HTML 中给元素定义两个 class，一个通用样式，一个特殊样式。假设现在要设计一个普通错误样式与一个严重错误样式，一般会这样写：\n\n```html\n<div class=\"error seriousError\">\n  Oh no! You've been hacked!\n</div>\n```\n\n样式如下\n\n```css\n.error {\n  border: 1px #f00;\n  background-color: #fdd;\n}\n.seriousError {\n  border-width: 3px;\n}\n```\n\n麻烦的是，这样做必须时刻记住使用 `.seriousError` 时需要参考 `.error` 的样式，带来了很多不便：比如加重维护负担，导致 bug，或者给 HTML 添加无语意的样式。使用 @extend 可以避免上述情况，告诉 Sass 将一个选择器下的所有样式继承给另一个选择器。\n\n```scss\n.error {\n  border: 1px #f00;\n  background-color: #fdd;\n}\n.seriousError {\n  @extend .error;\n  border-width: 3px;\n}\n```\n\n上面代码的意思是将 `.error` 下的所有样式继承给 `.seriousError，border-width: 3px;` 是单独给 `.seriousError` 设定特殊样式，这样，使用 `.seriousError` 的地方可以不再使用 `.error`。\n\n其他使用到 `.error` 的样式也会同样继承给 `.seriousError`，例如，另一个样式 `.error.intrusion` 使用了 `hacked.png` 做背景，`<div class=\"seriousError intrusion\">` 也同样会使用 hacked.png 背景。\n\n```css\n.error.intrusion {\n  background-image: url(\"/image/hacked.png\");\n}\n```\n\n#### How it works\n\n`@extend` 的作用是将重复使用的样式 `(.error)` 延伸 `(extend)` 给需要包含这个样式的特殊样式`（.seriousError）`，刚刚的例子：\n\n```scss\n.error {\n  border: 1px #f00;\n  background-color: #fdd;\n}\n.error.intrusion {\n  background-image: url(\"/image/hacked.png\");\n}\n.seriousError {\n  @extend .error;\n  border-width: 3px;\n}\n```\n\n编译为\n\n```css\n.error, .seriousError {\n  border: 1px #f00;\n  background-color: #fdd; }\n\n.error.intrusion, .seriousError.intrusion {\n  background-image: url(\"/image/hacked.png\"); }\n\n.seriousError {\n  border-width: 3px; }\n```\n\n当合并选择器时，`@extend` 会很聪明地避免无谓的重复，`.seriousError.seriousError` 将编译为 `.seriousError`，不能匹配任何元素的选择器（比如 `#main#footer` ）也会删除。\n\n#### 延伸复杂的选择器\n\nClass 选择器并不是唯一可以被延伸 (extend) 的，Sass 允许延伸任何定义给单个元素的选择器，比如 `.special.cool`，`a:hover` 或者 `a.user[href^=\"http://\"]` 等，例如：\n\n```scss\n.hoverlink {\n  @extend a:hover;\n}\n```\n\n同 class 元素一样，`a:hover` 的样式将继承给 `.hoverlink`。\n\n```scss\n.hoverlink {\n  @extend a:hover;\n}\na:hover {\n  text-decoration: underline;\n}\n```\n\n编译为\n\n```css\na:hover, .hoverlink {\n  text-decoration: underline; }\n```\n\n与上面 `.error.intrusion` 的例子一样，所有 `a:hover` 的样式将继承给 `.hoverlink`，包括其他使用到 `a:hover` 的样式，例如：\n\n```scss\n.hoverlink {\n  @extend a:hover;\n}\n.comment a.user:hover {\n  font-weight: bold;\n}\n```\n\n编译为\n\n```css\n.comment a.user:hover, .comment .user.hoverlink {\n  font-weight: bold; }\n```\n\n#### 多重延伸\n\n同一个选择器可以延伸给多个选择器，它所包含的属性将继承给所有被延伸的选择器：\n\n```scss\n.error {\n  border: 1px #f00;\n  background-color: #fdd;\n}\n.attention {\n  font-size: 3em;\n  background-color: #ff0;\n}\n.seriousError {\n  @extend .error;\n  @extend .attention;\n  border-width: 3px;\n}\n```\n\n编译为\n\n```css\n.error, .seriousError {\n  border: 1px #f00;\n  background-color: #fdd; }\n\n.attention, .seriousError {\n  font-size: 3em;\n  background-color: #ff0; }\n\n.seriousError {\n  border-width: 3px; }\n```\n\n每个 `.seriousError` 将包含 `.error` 与 `.attention` 下的所有样式，这时，后定义的样式享有优先权：`.seriousError` 的背景颜色是 `#ff0` 而不是 `#fdd`，因为 `.attention` 在 `.error` 之后定义。\n\n多重延伸可以使用逗号分隔选择器名，比如 `@extend .error, .attention;` 与 `@extend .error; @extend.attention` 有相同的效果。\n\n#### 继续延伸\n\n当一个选择器延伸给第二个后，可以继续将第二个选择器延伸给第三个，例如：\n\n```scss\n.error {\n  border: 1px #f00;\n  background-color: #fdd;\n}\n.seriousError {\n  @extend .error;\n  border-width: 3px;\n}\n.criticalError {\n  @extend .seriousError;\n  position: fixed;\n  top: 10%;\n  bottom: 10%;\n  left: 10%;\n  right: 10%;\n}\n```\n\n现在，每个 `.seriousError` 选择器将包含 `.error` 的样式，而 `.criticalError` 不仅包含 `.seriousError` 的样式也会同时包含 `.error` 的所有样式，上面的代码编译为：\n\n```css\n.error, .seriousError, .criticalError {\n  border: 1px #f00;\n  background-color: #fdd; }\n\n.seriousError, .criticalError {\n  border-width: 3px; }\n\n.criticalError {\n  position: fixed;\n  top: 10%;\n  bottom: 10%;\n  left: 10%;\n  right: 10%; }\n```\n\n#### 选择器列\n\n不可以将选择器列（比如 `.foo .bar` 或 `.foo + .bar`）延伸给其他元素，但是，却可以将其他元素延伸给选择器列：\n\n```scss\n#fake-links .link {\n  @extend a;\n}\n\na {\n  color: blue;\n  &:hover {\n    text-decoration: underline;\n  }\n}\n```\n\n编译为\n\n```css\na, #fake-links .link {\n  color: blue; }\n  a:hover, #fake-links .link:hover {\n    text-decoration: underline; }\n```\n\n##### 合并选择器列\n\n有时会遇到复杂的情况，比如选择器列中的某个元素需要延伸给另一个选择器列，这种情况下，两个选择器列需要合并，比如：\n\n```scss\n#admin .tabbar a {\n  font-weight: bold;\n}\n#demo .overview .fakelink {\n  @extend a;\n}\n```\n\n技术上讲能够生成所有匹配条件的结果，但是这样生成的样式表太复杂了，上面这个简单的例子就可能有 10 种结果。所以，Sass 只会编译输出有用的选择器。\n\n当两个列 (sequence) 合并时，如果没有包含相同的选择器，将生成两个新选择器：第一列出现在第二列之前，或者第二列出现在第一列之前：\n\n```scss\n#admin .tabbar a {\n  font-weight: bold;\n}\n#demo .overview .fakelink {\n  @extend a;\n}\n```\n\n编译为\n\n```css\n#admin .tabbar a,\n#admin .tabbar #demo .overview .fakelink,\n#demo .overview #admin .tabbar .fakelink {\n  font-weight: bold; }\n```\n\n如果两个列 (sequence) 包含了相同的选择器，相同部分将会合并在一起，其他部分交替输出。在下面的例子里，两个列都包含 `#admin`，输出结果中它们合并在了一起：\n\n```scss\n#admin .tabbar a {\n  font-weight: bold;\n}\n#admin .overview .fakelink {\n  @extend a;\n}\n```\n\n编译为\n\n```css\n#admin .tabbar a,\n#admin .tabbar .overview .fakelink,\n#admin .overview .tabbar .fakelink {\n  font-weight: bold; }\n```\n\n#### @extend-Only 选择器\n\n有时，需要定义一套样式并不是给某个元素用，而是只通过 `@extend` 指令使用，尤其是在制作 `Sass` 样式库的时候，希望 `Sass` 能够忽略用不到的样式。\n\n如果使用普通的 CSS 规则，最后会编译出很多用不到的样式，也容易与其他样式名冲突，所以，Sass 引入了“占位符选择器” (placeholder selectors)，看起来很像普通的 `id` 或 `class` 选择器，只是 `#` 或 `.` 被替换成了 `%`。可以像 `class` 或者 `id` 选择器那样使用，当它们单独使用时，不会被编译到 CSS 文件中。\n\n```scss\n// This ruleset won't be rendered on its own.\n#context a%extreme {\n  color: blue;\n  font-weight: bold;\n  font-size: 2em;\n}\n```\n\n占位符选择器需要通过延伸指令使用，用法与 `class` 或者 `id` 选择器一样，被延伸后，占位符选择器本身不会被编译。\n\n```scss\n.notice {\n  @extend %extreme;\n}\n```\n\n编译为\n\n```css\n#context a.notice {\n  color: blue;\n  font-weight: bold;\n  font-size: 2em; }\n```\n\n#### 在指令之延伸\n\n在指令中使用 `@extend` 时（比如在 @media 中）有一些限制：Sass 不可以将 `@media` 层外的 CSS 规则延伸给指令层内的 CSS，这样会生成大量的无用代码。也就是说，如果在 `@media` （或者其他 CSS 指令）中使用 `@extend`，必须延伸给相同指令层中的选择器。\n\n下面的例子是可行的：\n\n```scss\n@media print {\n  .error {\n    border: 1px #f00;\n    background-color: #fdd;\n  }\n  .seriousError {\n    @extend .error;\n    border-width: 3px;\n  }\n}\n```\n\n但不可以这样：\n\n```scss\n.error {\n  border: 1px #f00;\n  background-color: #fdd;\n}\n\n@media print {\n  .seriousError {\n    // INVALID EXTEND: .error is used outside of the \"@media print\" directive\n    @extend .error;\n    border-width: 3px;\n  }\n}\n```\n\n希望有一天，浏览器可以原生支持 `@extend` 指令，这样就可以在任何指令中使用延伸功能，不再受限制了。\n\n## 控制指令\n\nSassScript 提供了一些基础的控制指令，比如在满足一定条件时引用样式，或者设定范围重复输出格式。控制指令是一种高级功能，日常编写过程中并不常用到，主要与混合指令 (mixin) 配合使用。\n\n### @if\n\n当 @if 的表达式返回值不是 `false` 或者 `null` 时，条件成立，输出 `{}` 内的代码：\n\n```scss\np {\n  @if 1 + 1 == 2 { border: 1px solid; }\n  @if 5 < 3 { border: 2px dotted; }\n  @if null  { border: 3px double; }\n}\n```\n\n编译为\n\n```css\np {\n  border: 1px solid; }\n```\n\n`@if` 声明后面可以跟多个 `@else if` 声明，或者一个 `@else` 声明。如果 `@if` 声明失败，Sass 将逐条执行 `@else if` 声明，如果全部失败，最后执行 `@else` 声明，例如：\n\n```scss\n$type: monster;\np {\n  @if $type == ocean {\n    color: blue;\n  } @else if $type == matador {\n    color: red;\n  } @else if $type == monster {\n    color: green;\n  } @else {\n    color: black;\n  }\n}\n```\n\n编译为\n\n```css\np {\n  color: green; }\n```\n\n### @for\n\n`@for` 指令可以在限制的范围内重复输出格式，每次按要求（变量的值）对输出结果做出变动。这个指令包含两种格式：`@for $var from <start> through <end>`，或者 `@for $var from <start> to <end>`，区别在于 `through` 与 `to` 的含义：当使用 `through` 时，条件范围包含 `<start>` 与 `<end>` 的值，而使用 `to` 时条件范围只包含 `<start>` 的值不包含 `<end>` 的值。另外，`$var` 可以是任何变量，比如 `$i`；`<start>` 和 `<end>` 必须是整数值。\n\n```scss\n@for $i from 1 through 3 {\n  .item-#{$i} { width: 2em * $i; }\n}\n```\n\n编译为\n\n```css\n.item-1 {\n  width: 2em; }\n.item-2 {\n  width: 4em; }\n.item-3 {\n  width: 6em; }\n```\n\n### @each\n\n`@each` 指令的格式是 `$var in <list>`, `$var` 可以是任何变量名，比如 `$length` 或者 `$name`，而 `<list>` 是一连串的值，也就是值列表。\n\n`@each` 将变量 `$var` 作用于值列表中的每一个项目，然后输出结果，例如：\n\n```scss\n@each $animal in puma, sea-slug, egret, salamander {\n  .#{$animal}-icon {\n    background-image: url('/images/#{$animal}.png');\n  }\n}\n```\n\n编译为\n\n```css\n.puma-icon {\n  background-image: url('/images/puma.png'); }\n.sea-slug-icon {\n  background-image: url('/images/sea-slug.png'); }\n.egret-icon {\n  background-image: url('/images/egret.png'); }\n.salamander-icon {\n  background-image: url('/images/salamander.png'); }\n```\n\n### @while\n\n`@while` 指令重复输出格式直到表达式返回结果为 `false`。这样可以实现比 `@for` 更复杂的循环，只是很少会用到。例如：\n\n```scss\n$i: 6;\n@while $i > 0 {\n  .item-#{$i} { width: 2em * $i; }\n  $i: $i - 2;\n}\n```\n\n编译为\n\n```css\n.item-6 {\n  width: 12em; }\n\n.item-4 {\n  width: 8em; }\n\n.item-2 {\n  width: 4em; }\n```\n\n## 混合指令\n\n混合指令（Mixin）用于定义可重复使用的样式，避免了使用无语意的 class，比如 `.float-left`。混合指令可以包含所有的 CSS 规则，绝大部分 Sass 规则，甚至通过参数功能引入变量，输出多样化的样式。\n\n### 定义混合指令 `@mixin`\n\n混合指令的用法是在 `@mixin` 后添加名称与样式，比如名为 `large-text` 的混合通过下面的代码定义\n\n```scss\n@mixin large-text {\n  font: {\n    family: Arial;\n    size: 20px;\n    weight: bold;\n  }\n}\n```\n\n混合指令也可以包含选择器和属性，甚至可以用 `&` 引用父选择器\n\n```scss\n@mixin clearfix {\n  display: inline-block;\n  &:after {\n    content: \".\";\n    display: block;\n    height: 0;\n    clear: both;\n    visibility: hidden;\n  }\n  * html & { height: 1px }\n}\n```\n\n### 引用混合指令 `@include`\n\n使用 `@include` 指令引用混合样式\n\n```scss\n.page-title {\n  @include large-text;\n  padding: 4px;\n  margin-top: 10px;\n}\n```\n\n编译为\n\n```scss\n.page-title {\n  font-family: Arial;\n  font-size: 20px;\n  font-weight: bold;\n  padding: 4px;\n  margin-top: 10px; }\n```\n\n> 混合指令类似于 javascript 函数,除非引用，否则不会出现在结果中**\n\n也可以不使用父选择器在最外层直接引用混合样式\n\n```scss\n@mixin silly-links {\n  a {\n    color: blue;\n    background-color: red;\n  }\n}\n@include silly-links;\n```\n\n编译为\n\n```css\na {\n  color: blue;\n  background-color: red; }\n```\n\n混合样式中也可以包含其他混合样式，比如\n\n```scss\n@mixin compound {\n  @include highlighted-background;\n  @include header-text;\n}\n@mixin highlighted-background { background-color: #fc0; }\n@mixin header-text { font-size: 20px; }\n```\n\n混合样式中应该只定义后代选择器，这样可以安全的导入到文件的任何位置。\n\n### 参数\n\n参数用于给混合指令中的样式设定变量，并且赋值使用。在定义混合指令的时候，按照变量的格式，通过逗号分隔，将参数写进圆括号里。引用指令时，按照参数的顺序，再将所赋的值对应写进括号\n\n```scss\n@mixin sexy-border($color, $width) {\n  border: {\n    color: $color;\n    width: $width;\n    style: dashed;\n  }\n}\np { @include sexy-border(blue, 1in); }\n```\n\n编译为\n\n```css\np {\n  border-color: blue;\n  border-width: 1in;\n  border-style: dashed; }\n```\n\n混合指令也可以使用给变量赋值的方法给参数设定默认值，然后，当这个指令被引用的时候，如果没有给参数赋值，则自动使用默认值：\n\n```scss\n@mixin sexy-border($color, $width: 1in) {\n  border: {\n    color: $color;\n    width: $width;\n    style: dashed;\n  }\n}\np { @include sexy-border(blue); }\nh1 { @include sexy-border(blue, 2in); }\n```\n\n编译为\n\n```css\np {\n  border-color: blue;\n  border-width: 1in;\n  border-style: dashed; }\n\nh1 {\n  border-color: blue;\n  border-width: 2in;\n  border-style: dashed; }\n```\n\n### 关键词参数\n\n混合指令也可以使用关键词参数，上面的例子也可以写成：\n\n```scss\np { @include sexy-border($color: blue); }\nh1 { @include sexy-border($color: blue, $width: 2in); }\n```\n\n虽然不够简明，但是阅读起来会更方便。关键词参数给函数提供了更灵活的接口，以及容易调用的参数。关键词参数可以打乱顺序使用，如果使用默认值也可以省缺，另外，参数名被视为变量名，下划线、短横线可以互换使用。\n\n### 可变参数\n\n有时，不能确定混合指令需要使用多少个参数，比如一个关于 `box-shadow` 的混合指令不能确定有多少个 'shadow' 会被用到。这时，可以使用参数变量 `…` 声明（写在参数的最后方）告诉 Sass 将这些参数视为值列表处理\n\n```scss\n@mixin box-shadow($shadows...) {\n  box-shadow: $shadows;\n}\n.shadows {\n  @include box-shadow(0px 4px 5px #666, 2px 6px 10px #999);\n}\n```\n\n编译为\n\n```css\n.shadows {\n  box-shadow: 0px 4px 5px #666, 2px 6px 10px #999;\n}\n```\n\n有时，我们可以确定混合指令中的部分参数，其余的参数数不确定的\n\n```scss\n@mixin test($color, $shadows...) {\n  a {\n    color: $color;\n    box-shadow: $shadows;\n  }\n}\n$color: red;\n$shadows: 0px 4px 5px #666, 2px 6px 10px #999;\n@include test($color, $shadows)\n```\n\n编译为\n\n```css\na {\n  color: red;\n  box-shadow: 0px 4px 5px #666, 2px 6px 10px #999; }\n```\n\n> **一定要注意，可变参数必须放在最后**\n\n### 向混合样式中导入内容\n\n在引用混合样式的时候，可以先将一段代码导入到混合指令中，然后再输出混合样式，额外导入的部分将出现在 `@content` 标志的地方：\n\n```scss\n@mixin apply-to-ie6-only {\n  * html {\n    @content;\n  }\n}\n@include apply-to-ie6-only {\n  #logo {\n    background-image: url('/logo.gif');\n  }\n}\n```\n\n编译为\n\n```css\n* html #logo {\n  background-image: url(/logo.gif);\n}\n```\n\n> 当 @content 在指令中出现过多次或者出现在循环中时，额外的代码将被导入到每一个地方。\n\n## 函数指令\n\n### 自定义函数\n\nSass 支持自定义函数，并能在任何属性值或 SassScript 中使用：\n\n```scss\n$grid-width: 40px;\n$gutter-width: 10px;\n\n@function grid-width($n) {\n  @return $n * $grid-width + ($n - 1) * $gutter-width;\n}\n\n#sidebar { width: grid-width(5); }\n```\n\n编译为\n\n```css\n#sidebar {\n  width: 240px; }\n```\n\n与 mixin 相同，也可以传递若干个全局变量给函数作为参数。一个函数可以含有多条语句，需要调用 `@return` 输出结果。\n\n自定义的函数也可以使用关键词参数，上面的例子还可以这样写：\n\n```scss\n#sidebar { width: grid-width($n: 5); }\n```\n\n建议在自定义函数前添加前缀避免命名冲突，其他人阅读代码时也会知道这不是 Sass 或者 CSS 的自带功能。\n\n### sass 中内置的函数\n\n* 字符串函数\n  * unquote\n  * quote\n  * To-upper-case\n  * To-lower-case\n  * percentage\n  * round\n  * ceil\n  * floor\n  * abs\n  * min\n  * max\n  * random\n* 列表函数\n  * length  列表数据的长度\n  * nth  (10px 20px 30px, 1)\n  * join  join(10px 20px, 30px 40px)\n  * append  append(10px 20px ,30px)\n  * zip  zip(1px 2px 3px,solid dashed dotted,green blue red)\n  * index  index(1px solid red, solid)\n  * type-of  type-of(100)\n  * unit  取单位\n  * unitless  判断一个值是否带有单位\n  * comparable  判断两个数是否可以进行加减合并\n  * if(true,1px,2px)\n* Maps函数\n  * map-get\n  * map-has-key\n  * map-keys\n  * map-values\n  * map-merge\n  * map-remove\n  * keywords\n* 颜色函数\n  * rgb\n  * rgba\n  * red\n  * green\n  * blue\n  * mix  混合两种颜色 第三个参数为第一种颜色的比例  mix(blue,red,20%)\n  * lighten  lighten(red, 20%)\n  * darken  darken(red,30%)\n  * saturate  改变颜色的饱和度 参数单位为百分比 saturate(blue,20%)\n  * desaturate\n  * adjust-hue  通过调整色相 adjust-hue(blue,30deg)\n  * grayscale  直接让饱和度为0  grayscale(blue)\n  * alpha  获取透明度\n  * opacity  获取透明度\n  * rgba\n  * fade-in  增加透明度\n  * transparentize  减少透明度\n  * fade-out  减少透明度\n\n```scss\n$map: (\n  $key1: value1,\n  $key2: value2,\n  $key3: value3\n);\n\n$map: (\n  key1: value1,\n  key2: (\n    key-1: value-1,\n    key-2: value-2,\n  ),\nkey3: value3\n);\n\n$theme-color: (\n  default: (\n      bgcolor: #fff,\n      text-color: #444,\n      link-color: #39f\n  ),\n  primary:(\n      bgcolor: #000,\n      text-color:#fff,\n      link-color: #93f\n  ),\n  negative: (\n      bgcolor: #f36,\n      text-color: #fefefe,\n      link-color: #d4e\n  )\n);\n\n/* map-get */\n$social-colors: (\n  dribble: #ea4c89,\n  facebook: #3b5998,\n  github: #171515,\n  google: #db4437,\n  twitter: #55acee\n);\n.btn-dribble{\n  color: map-get($social-colors,facebook);\n}\n/* 没有值不会报错 */\n.btn-weibo{\n  font-size: 12px;\n  color: map-get($social-colors,weibo);\n}\n\n/* map中的容错函数 */\n   @function colors($color){\n     @if not map-has-key($social-colors,$color){\n         @warn \"No color found for `#{$color}` in $social-colors map. Property omitted.\";\n     }\n     @return map-get($social-colors,$color);\n   }\n   .btn-dribble {\n     color: colors(dribble);\n   }\n\n/* each 遍历 map */\n@each $name in map-keys($social-colors){\n  .btn-#{$name}{\n      color: colors($name);\n  }\n}\n@for $i from 1 through length(map-keys($social-colors)){\n  .btn-#{nth(map-keys($social-colors),$i)} {\n    color: colors(nth(map-keys($social-colors),$i));\n  }\n}\n\n/*得到所有的值*/\n$values: map-values($social-colors);\n\n$color: (\n  text: #f36,\n  link: #f63,\n  border: #ddd,\n  backround: #fff\n);\n$typo:(\n  font-size: 12px,\n  line-height: 1.6\n);\n$newcolor: map-merge($color, $typo);\n\n/* 得到新值 */\n$map:map-remove($social-colors,dribble);\n```\n\n```html\n<ul class=\"swatches red\">\n  <li></li>\n  ...\n  <li></li>\n</ul>\n<ul class=\"swatches orange\">\n  <li></li>\n  …\n  <li></li>\n</ul>\n<ul class=\"swatches yellow\">\n  <li></li>\n  …\n  <li></li>\n</ul>\n<ul class=\"swatches green\">\n  <li></li>\n  …\n  <li></li>\n</ul>\n<ul class=\"swatches blue\">\n  <li></li>\n  …\n  <li></li>\n</ul>\n<ul class=\"swatches purple\">\n  <li></li>\n  …\n  <li></li>\n</ul>\n```\n\n```scss\n$redBase: #DC143C;\n$orangeBase: saturate(lighten(adjust_hue($redBase, 39), 5), 7);//#f37a16\n$yellowBase: saturate(lighten(adjust_hue($redBase, 64), 6), 13);//#fbdc14\n$greenBase: desaturate(darken(adjust_hue($redBase, 102), 2), 11);//#73c620\n$blueBase: saturate(darken(adjust_hue($redBase, 201), 2), 1);//#12b7d4\n$purpleBase: saturate(darken(adjust_hue($redBase, 296), 2), 1);//#a012d4\n$blackBase: #777;\n$bgc: #fff;\n\n//定义颜色变暗的 mixin\n@mixin swatchesDarken($color) {\n  @for $i from 1 through 10 {\n    $x:$i+11;\n    li:nth-child(#{$x}) {\n      $n:$i*5;\n      $bgc:darken($color,$n); //颜色变暗\n      background-color: $bgc;\n      &:hover:before { //hover状态显示颜色编号\n        content: \"#{$bgc}\";\n        color: lighten($bgc,40);\n        font-family: verdana;\n        font-size: 8px;\n        padding: 2px;\n      }\n    }\n  }\n}\n//定义颜色变亮的 mixin\n@mixin swatchesLighten($color) {\n  @for $i from 1 through 10 {\n    $x:11-$i;\n    li:nth-child(#{$x}) {\n      $n:$i*5;\n      $bgc:lighten($color,$n);\n      background-color: $bgc;\n      &:hover:before {\n        content: \"#{$bgc}\";\n        color: darken($bgc,40);\n        font-family: verdana;\n        font-size: 8px;\n        padding: 2px;\n      }\n    }\n  }\n}\n\n.swatches li {\n  width: 4.7619047619%;\n  float: left;\n  height: 60px;\n  list-style: none outside none;\n}\n\nul.red {\n  @include swatchesLighten($redBase);\n  @include swatchesDarken($redBase);\n  li:nth-child(11) {\n    background-color: $redBase;\n  }\n}\n\nul.orange {\n  @include swatchesLighten($orangeBase);\n  @include swatchesDarken($orangeBase);\n  li:nth-child(11) {\n    background-color: $orangeBase;\n  }\n}\n\nul.yellow {\n  @include swatchesLighten($yellowBase);\n  @include swatchesDarken($yellowBase);\n  li:nth-child(11) {\n    background-color: $yellowBase;\n  }\n}\n\nul.green {\n  @include swatchesLighten($greenBase);\n  @include swatchesDarken($greenBase);\n  li:nth-child(11) {\n    background-color: $greenBase;\n  }\n}\n\nul.blue {\n  @include swatchesLighten($blueBase);\n  @include swatchesDarken($blueBase);\n  li:nth-child(11) {\n    background-color: $blueBase;\n  }\n}\n\nul.purple {\n  @include swatchesLighten($purpleBase);\n  @include swatchesDarken($purpleBase);\n  li:nth-child(11) {\n    background-color: $purpleBase;\n  }\n}\n\nul.black {\n  @include swatchesLighten($blackBase);\n  @include swatchesDarken($blackBase);\n  li:nth-child(11) {\n    background-color: $blackBase;\n  }\n}\n```\n\n## 最后附上一个rem的例子\n\n```scss\n//以750px( iphone6 )为基准定义其他分辨率下的rem\n@mixin useRem($size){\n  $device-list : 320px, 375px , 414px;\n  html{\n    @each $device in $device-list{\n      @media screen and (min-width: $device){\n        font-size: 100px * ($device/$size);\n      }\n    }\n  }\n}\n@include useRem(750px);\n```\n","slug":"使用SASS","published":1,"updated":"2021-06-25T11:19:55.446Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckqc904p7001swotvx2zbeady","content":"<blockquote>\n<p>本文参考<a href=\"https://www.sass.hk/docs/\" target=\"_blank\" rel=\"noopener\">sass 中文网</a>,仅作为个人速查文档使用</p>\n</blockquote>\n<h2 id=\"Sass简介\"><a href=\"#Sass简介\" class=\"headerlink\" title=\"Sass简介\"></a>Sass简介</h2><p>Sass 是一款强化 CSS 的辅助工具，它在 CSS 语法的基础上增加了变量 (variables)、嵌套 (nested rules)、混合 (mixins)、导入 (inline imports) 等高级功能，这些拓展令 CSS 更加强大与优雅。使用 Sass 以及 Sass 的样式库（如 Compass）有助于更好地组织管理样式文件，以及更高效地开发项目。</p>\n<h2 id=\"语法风格\"><a href=\"#语法风格\" class=\"headerlink\" title=\"语法风格\"></a>语法风格</h2><p>Sass 有两种写法，一种是靠缩进代替花括号代替选择器，用换行代替分号，是一种简写格式，这种格式的文件以<code>.sass</code>结尾。另一种写法类似 css 写法，以<code>.scss</code>结尾。</p>\n<blockquote>\n<p>本文均为 scss 格式</p>\n</blockquote>\n<div class=\"code-panel__wrapper\" autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\"><header class=\"mac-panel\"><span class=\"doc-path\"></span><span class=\"mac-panel__language\">SCSS</span></header><figure class=\"iseeu highlight scss\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/* Sass 语法 */</span></span><br><span class=\"line\"><span class=\"selector-tag\">body</span></span><br><span class=\"line\">  <span class=\"attribute\">font-size</span>: <span class=\"number\">14px</span></span><br><span class=\"line\">  color: <span class=\"number\">#333</span></span><br><span class=\"line\"></span><br><span class=\"line\">/* Scss 语法 */</span><br><span class=\"line\">body &#123;</span><br><span class=\"line\">  font-size: <span class=\"number\">14px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">color</span>: <span class=\"number\">#333</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></div>\n<p>以上俩段编译的结果是同样的结果</p>\n<div class=\"code-panel__wrapper\" autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\"><header class=\"mac-panel\"><span class=\"doc-path\"></span><span class=\"mac-panel__language\">CSS</span></header><figure class=\"iseeu highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">body</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">font</span>: <span class=\"number\">100%</span> Helvetica, sans-serif;</span><br><span class=\"line\">  <span class=\"attribute\">color</span>: <span class=\"number\">#333</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></div>\n<h2 id=\"Sass-安装\"><a href=\"#Sass-安装\" class=\"headerlink\" title=\"Sass 安装\"></a>Sass 安装</h2><p>这里以 node-sass 为例</p>\n<p>首先需要安装 <a href=\"https://nodejs.org/en/\" target=\"_blank\" rel=\"noopener\">NodeJs</a>，通过命令行安装：</p>\n<div class=\"code-panel__wrapper\" autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\"><header class=\"mac-panel\"><span class=\"doc-path\"></span><span class=\"mac-panel__language\">PLAIN</span></header><figure class=\"iseeu highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install -g node-sass</span><br></pre></td></tr></table></figure></div>\n<h2 id=\"Sass使用\"><a href=\"#Sass使用\" class=\"headerlink\" title=\"Sass使用\"></a>Sass使用</h2><p>在命令中运行 sass</p>\n<div class=\"code-panel__wrapper\" autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\"><header class=\"mac-panel\"><span class=\"doc-path\"></span><span class=\"mac-panel__language\">PLAIN</span></header><figure class=\"iseeu highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">node-sass input.scss output.css</span><br></pre></td></tr></table></figure></div>\n<p>命令行监测单个 sass 文件，每次修改自动保存</p>\n<div class=\"code-panel__wrapper\" autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\"><header class=\"mac-panel\"><span class=\"doc-path\"></span><span class=\"mac-panel__language\">PLAIN</span></header><figure class=\"iseeu highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">node-sass -w input.scss output.css</span><br></pre></td></tr></table></figure></div>\n<p>监视整个文件夹的变化</p>\n<div class=\"code-panel__wrapper\" autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\"><header class=\"mac-panel\"><span class=\"doc-path\"></span><span class=\"mac-panel__language\">PLAIN</span></header><figure class=\"iseeu highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sass --watch app/sass:public/stylesheets</span><br></pre></td></tr></table></figure></div>\n<p>更多命令通过<code>sass --help</code>查看帮助</p>\n<h2 id=\"输出格式\"><a href=\"#输出格式\" class=\"headerlink\" title=\"输出格式\"></a>输出格式</h2><p>Sass 默认的 CSS 输出格式很美观也能清晰反映文档结构，为满足其他需求 Sass 也提供了多种输出格式。</p>\n<p>Sass 提供了四种输出格式，可以通过 <code>:style option</code> 选项设定，或者在命令行中使用 <code>--style</code> 选项。</p>\n<div class=\"code-panel__wrapper\" autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\"><header class=\"mac-panel\"><span class=\"doc-path\"></span><span class=\"mac-panel__language\">SHELL</span></header><figure class=\"iseeu highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">node-sass -w input.scss output.css --style expanded</span><br></pre></td></tr></table></figure></div>\n<ul>\n<li>nested – Nested （嵌套）样式是 Sass 默认的输出格式，能够清晰反映 CSS 与 HTML 的结构关系。选择器与属性等单独占用一行，缩进量与 Sass 文件中一致，每行的缩进量反映了其在嵌套规则内的层数。当阅读大型 CSS 文件时，这种样式可以很容易地分析文件的主要结构。</li>\n<li>expanded – Expanded 输出更像是手写的样式，选择器、属性等各占用一行，属性根据选择器缩进，而选择器不做任何缩进。</li>\n<li>compact – Compact 输出方式比起上面两种占用的空间更少，每条 CSS 规则只占一行，包含其下的所有属性。嵌套过的选择器在输出时没有空行，不嵌套的选择器会输出空白行作为分隔符。</li>\n<li>compressed – Compressed 输出方式删除所有无意义的空格、空白行、以及注释，力求将文件体积压缩到最小，同时也会做出其他调整，比如会自动替换占用空间最小的颜色表达方式。</li>\n</ul>\n<h2 id=\"注释\"><a href=\"#注释\" class=\"headerlink\" title=\"注释\"></a>注释</h2><p>Sass 支持标准的 CSS 多行注释 <code>/* */</code>，以及单行注释 <code>//</code>，前者会 被完整输出到编译后的 CSS 文件中，而后者则不会。</p>\n<h2 id=\"Sass功能扩展\"><a href=\"#Sass功能扩展\" class=\"headerlink\" title=\"Sass功能扩展\"></a>Sass功能扩展</h2><h3 id=\"嵌套结构\"><a href=\"#嵌套结构\" class=\"headerlink\" title=\"嵌套结构\"></a>嵌套结构</h3><p>Sass 允许将一套 CSS 样式嵌套进另一套样式中，内层的样式将它外层的选择器作为父选择器。</p>\n<blockquote>\n<p>注意不可以无节制地嵌套，会加大浏览器的负担</p>\n</blockquote>\n<div class=\"code-panel__wrapper\" autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\"><header class=\"mac-panel\"><span class=\"doc-path\"></span><span class=\"mac-panel__language\">SCSS</span></header><figure class=\"iseeu highlight scss\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-id\">#main</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">width</span>: <span class=\"number\">97%</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"selector-tag\">p</span>, <span class=\"selector-tag\">div</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">font-size</span>: <span class=\"number\">2em</span>;</span><br><span class=\"line\">    <span class=\"selector-tag\">a</span> &#123; <span class=\"attribute\">font-weight</span>: bold; &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"selector-tag\">pre</span> &#123; <span class=\"attribute\">font-size</span>: <span class=\"number\">3em</span>; &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></div>\n<p>编译为</p>\n<div class=\"code-panel__wrapper\" autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\"><header class=\"mac-panel\"><span class=\"doc-path\"></span><span class=\"mac-panel__language\">SCSS</span></header><figure class=\"iseeu highlight scss\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-id\">#main</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">width</span>: <span class=\"number\">97%</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-id\">#main</span> <span class=\"selector-tag\">p</span>, <span class=\"selector-id\">#main</span> <span class=\"selector-tag\">div</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">font-size</span>: <span class=\"number\">2em</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-id\">#main</span> <span class=\"selector-tag\">p</span> <span class=\"selector-tag\">a</span>, <span class=\"selector-id\">#main</span> <span class=\"selector-tag\">div</span> <span class=\"selector-tag\">a</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">font-weight</span>: bold;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-id\">#main</span> <span class=\"selector-tag\">pre</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">font-size</span>: <span class=\"number\">3em</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></div>\n<p>嵌套功能避免了重复输入父选择器，而且令复杂的 CSS 结构更易于管理</p>\n<h3 id=\"父选择器\"><a href=\"#父选择器\" class=\"headerlink\" title=\"父选择器\"></a>父选择器</h3><p>在嵌套 CSS 规则时，有时也需要直接使用嵌套外层的父选择器，例如，当给某个元素设定 hover 样式时，或者当 body 元素有某个 classname 时，可以用 &amp; 代表嵌套规则外层的父选择器。</p>\n<div class=\"code-panel__wrapper\" autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\"><header class=\"mac-panel\"><span class=\"doc-path\"></span><span class=\"mac-panel__language\">SCSS</span></header><figure class=\"iseeu highlight scss\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.box</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">color</span>: <span class=\"number\">#333</span>;</span><br><span class=\"line\">  &amp;<span class=\"selector-pseudo\">:hover</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">color</span>: red;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  $<span class=\"selector-class\">.active</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">color</span>: red;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></div>\n<p>编译为</p>\n<div class=\"code-panel__wrapper\" autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\"><header class=\"mac-panel\"><span class=\"doc-path\"></span><span class=\"mac-panel__language\">CSS</span></header><figure class=\"iseeu highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.box</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">color</span>: <span class=\"number\">#333</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-class\">.box</span><span class=\"selector-pseudo\">:hover</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">color</span>: red;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-class\">.box</span><span class=\"selector-class\">.active</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">color</span>: red;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></div>\n<p>值得注意的有两点:</p>\n<ul>\n<li>如果包含多层嵌套关系， &amp;会逐层向下传递</li>\n<li>&amp;在编译时会完全解析为外层的父选择器名称，你可以以任何你需要的方式来操作它</li>\n</ul>\n<div class=\"code-panel__wrapper\" autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\"><header class=\"mac-panel\"><span class=\"doc-path\"></span><span class=\"mac-panel__language\">SCSS</span></header><figure class=\"iseeu highlight scss\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.menu</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">color</span>: <span class=\"number\">#333</span>;</span><br><span class=\"line\">  <span class=\"selector-tag\">li</span> &#123;</span><br><span class=\"line\">    &amp;<span class=\"selector-pseudo\">:hover</span> &#123;</span><br><span class=\"line\">      <span class=\"attribute\">color</span>: red;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  &amp;-item &#123;</span><br><span class=\"line\">    <span class=\"attribute\">color</span>: blue;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></div>\n<p>编译为</p>\n<div class=\"code-panel__wrapper\" autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\"><header class=\"mac-panel\"><span class=\"doc-path\"></span><span class=\"mac-panel__language\">CSS</span></header><figure class=\"iseeu highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.menu</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">color</span>: <span class=\"number\">#333</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-class\">.menu</span> <span class=\"selector-tag\">li</span><span class=\"selector-pseudo\">:hover</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">color</span>: red;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-class\">.menu</span> <span class=\"selector-class\">.menu-item</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">color</span>: green;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></div>\n<h3 id=\"属性嵌套\"><a href=\"#属性嵌套\" class=\"headerlink\" title=\"属性嵌套\"></a>属性嵌套</h3><p>有些 CSS 属性遵循相同的命名空间 (namespace)，比如 <code>font-family</code>, <code>font-size</code>, <code>font-weight</code> 都以 <code>font</code> 作为属性的命名空间。为了便于管理这样的属性，同时也为了避免了重复输入，Sass 允许将属性嵌套在命名空间中。</p>\n<div class=\"code-panel__wrapper\" autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\"><header class=\"mac-panel\"><span class=\"doc-path\"></span><span class=\"mac-panel__language\">SCSS</span></header><figure class=\"iseeu highlight scss\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">body</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">font</span>: &#123;</span><br><span class=\"line\">    family: <span class=\"string\">'iconfont'</span>;</span><br><span class=\"line\">    size: <span class=\"number\">20px</span>;</span><br><span class=\"line\">    weight: bold;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></div>\n<p>编译为</p>\n<div class=\"code-panel__wrapper\" autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\"><header class=\"mac-panel\"><span class=\"doc-path\"></span><span class=\"mac-panel__language\">CSS</span></header><figure class=\"iseeu highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">body</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">font-family</span>: <span class=\"string\">'iconfont'</span>;</span><br><span class=\"line\">  <span class=\"attribute\">font-size</span>: <span class=\"number\">20px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">font-weight</span>: bold;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></div>\n<h2 id=\"SassScript\"><a href=\"#SassScript\" class=\"headerlink\" title=\"SassScript\"></a>SassScript</h2><p>Sass在 css 的基础上提供了一些名为 SassScript 的功能，允许使用变量、运算、函数等额外的功能。这也是 Sass 语言最强大的地方。</p>\n<h3 id=\"变量\"><a href=\"#变量\" class=\"headerlink\" title=\"变量\"></a>变量</h3><p>SassScript 最普遍的用法就是变量，变量以<code>$</code>开头，赋值方法与 CSS 属性的写法一样</p>\n<div class=\"code-panel__wrapper\" autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\"><header class=\"mac-panel\"><span class=\"doc-path\"></span><span class=\"mac-panel__language\">SCSS</span></header><figure class=\"iseeu highlight scss\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$width</span>: <span class=\"number\">20px</span>;</span><br></pre></td></tr></table></figure></div>\n<p>变量可以直接使用</p>\n<div class=\"code-panel__wrapper\" autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\"><header class=\"mac-panel\"><span class=\"doc-path\"></span><span class=\"mac-panel__language\">SCSS</span></header><figure class=\"iseeu highlight scss\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.box</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">width</span>: <span class=\"variable\">$width</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></div>\n<p>编译为</p>\n<div class=\"code-panel__wrapper\" autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\"><header class=\"mac-panel\"><span class=\"doc-path\"></span><span class=\"mac-panel__language\">CSS</span></header><figure class=\"iseeu highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.box</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">width</span>: <span class=\"number\">20px</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></div>\n<p>变量支持块级作用域，嵌套规则内定义的变量只能在嵌套规则内使用（局部变量），不在嵌套规则内定义的变量则可在任何地方使用（全局变量）。</p>\n<div class=\"code-panel__wrapper\" autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\"><header class=\"mac-panel\"><span class=\"doc-path\"></span><span class=\"mac-panel__language\">SCSS</span></header><figure class=\"iseeu highlight scss\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.menu</span> &#123;</span><br><span class=\"line\">  <span class=\"variable\">$width</span>: <span class=\"number\">100px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">width</span>: <span class=\"variable\">$width</span>;</span><br><span class=\"line\">  <span class=\"selector-class\">.menu-item</span> &#123;</span><br><span class=\"line\">    <span class=\"variable\">$width</span>: <span class=\"number\">20px</span>;</span><br><span class=\"line\">    <span class=\"attribute\">width</span>: <span class=\"variable\">$width</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></div>\n<p>编译为</p>\n<div class=\"code-panel__wrapper\" autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\"><header class=\"mac-panel\"><span class=\"doc-path\"></span><span class=\"mac-panel__language\">CSS</span></header><figure class=\"iseeu highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.menu</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">width</span>: <span class=\"number\">100px</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-class\">.menu</span> <span class=\"selector-class\">.menu-item</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">width</span>: <span class=\"number\">20px</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></div>\n<p>可以通过添加<code>!global</code>将局部变量转换为全局变量</p>\n<h3 id=\"数据类型\"><a href=\"#数据类型\" class=\"headerlink\" title=\"数据类型\"></a>数据类型</h3><p>sassScript支持 7 种主要的数据类型:</p>\n<ul>\n<li>数字 <code>1, 2, 3px</code></li>\n<li>字符串，有引号字符串与无引号字符串 <code>&quot;foo&quot;, &#39;bar&#39;, baz</code></li>\n<li>颜色 <code>blue, #04a3f9, rgba(255,0,0,0.5)</code></li>\n<li>布尔型 <code>true, false</code></li>\n<li>空值 <code>null</code></li>\n<li>数组 (list)，用空格或逗号作分隔符 <code>1.5em 1em 0 2em, Helvetica, Arial, sans-serif</code></li>\n<li>maps, 相当于 JavaScript 的 object <code>(key1: value1, key2: value2)</code></li>\n</ul>\n<p>SassScript 也支持其他 CSS 属性值，比如 Unicode 字符集，或 !important 声明。然而Sass 不会特殊对待这些属性值，一律视为无引号字符串。</p>\n<h3 id=\"插值语句\"><a href=\"#插值语句\" class=\"headerlink\" title=\"插值语句 #{}\"></a>插值语句 <code>#{}</code></h3><p>通过 #{} 插值语句可以在选择器或属性名中使用变量,方式<strong>等同于es6语法中的<code>${}</code></strong></p>\n<div class=\"code-panel__wrapper\" autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\"><header class=\"mac-panel\"><span class=\"doc-path\"></span><span class=\"mac-panel__language\">SCSS</span></header><figure class=\"iseeu highlight scss\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$name</span>: foo;</span><br><span class=\"line\"><span class=\"variable\">$attr</span>: border;</span><br><span class=\"line\"><span class=\"variable\">$color</span>: blue;</span><br><span class=\"line\"><span class=\"selector-tag\">p</span>.#&#123;<span class=\"variable\">$name</span>&#125; &#123;</span><br><span class=\"line\">  #&#123;<span class=\"variable\">$attr</span>&#125;-<span class=\"attribute\">color</span>: #&#123;<span class=\"variable\">$color</span>&#125;;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></div>\n<p>编译为</p>\n<div class=\"code-panel__wrapper\" autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\"><header class=\"mac-panel\"><span class=\"doc-path\"></span><span class=\"mac-panel__language\">CSS</span></header><figure class=\"iseeu highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">p</span><span class=\"selector-class\">.foo</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">border-color</span>: blue;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></div>\n<p>使用插值可以避免 Sass 运行运算表达式，直接编译 CSS。</p>\n<div class=\"code-panel__wrapper\" autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\"><header class=\"mac-panel\"><span class=\"doc-path\"></span><span class=\"mac-panel__language\">SCSS</span></header><figure class=\"iseeu highlight scss\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">p</span> &#123;</span><br><span class=\"line\">  <span class=\"variable\">$font-size</span>: <span class=\"number\">12px</span>;</span><br><span class=\"line\">  <span class=\"variable\">$line-height</span>: <span class=\"number\">30px</span>;</span><br><span class=\"line\">  <span class=\"variable\">$width</span>: <span class=\"number\">20px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">font</span>: #&#123;<span class=\"variable\">$font-size</span>&#125;/#&#123;<span class=\"variable\">$line-height</span>&#125;;</span><br><span class=\"line\">  <span class=\"attribute\">width</span>: calc(<span class=\"number\">100%</span> - #&#123;<span class=\"variable\">$width</span>&#125;);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></div>\n<p>编译为</p>\n<div class=\"code-panel__wrapper\" autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\"><header class=\"mac-panel\"><span class=\"doc-path\"></span><span class=\"mac-panel__language\">CSS</span></header><figure class=\"iseeu highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">p</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">font</span>: <span class=\"number\">12px</span>/<span class=\"number\">30px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">width</span>: <span class=\"built_in\">calc</span>(<span class=\"number\">100%</span> - <span class=\"number\">20px</span>);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></div>\n<h3 id=\"定义初始值\"><a href=\"#定义初始值\" class=\"headerlink\" title=\"定义初始值\"></a>定义初始值</h3><p>可以在变量的结尾添加 <code>!default</code> 给一个未通过 <code>!default</code> 声明赋值的变量赋值，此时，如果变量已经被赋值，不会再被重新赋值，但是如果变量还没有被赋值，则会被赋予新的值。</p>\n<div class=\"code-panel__wrapper\" autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\"><header class=\"mac-panel\"><span class=\"doc-path\"></span><span class=\"mac-panel__language\">SCSS</span></header><figure class=\"iseeu highlight scss\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$content</span>: <span class=\"string\">\"First content\"</span>;</span><br><span class=\"line\"><span class=\"variable\">$content</span>: <span class=\"string\">\"Second content?\"</span> !default;</span><br><span class=\"line\"><span class=\"variable\">$new_content</span>: <span class=\"string\">\"First time reference\"</span> !default;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-id\">#main</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">content</span>: <span class=\"variable\">$content</span>;</span><br><span class=\"line\">  new-<span class=\"attribute\">content</span>: <span class=\"variable\">$new_content</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></div>\n<p>编译为</p>\n<div class=\"code-panel__wrapper\" autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\"><header class=\"mac-panel\"><span class=\"doc-path\"></span><span class=\"mac-panel__language\">CSS</span></header><figure class=\"iseeu highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-id\">#main</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">content</span>: <span class=\"string\">\"First content\"</span>;</span><br><span class=\"line\">  <span class=\"attribute\">new-content</span>: <span class=\"string\">\"First time reference\"</span>; &#125;</span><br></pre></td></tr></table></figure></div>\n<h3 id=\"运算\"><a href=\"#运算\" class=\"headerlink\" title=\"运算\"></a>运算</h3><p>所有数据类型均支持相等运算 == 或 !=，此外，每种数据类型也有其各自支持的运算方式。</p>\n<h4 id=\"数字运算\"><a href=\"#数字运算\" class=\"headerlink\" title=\"数字运算\"></a>数字运算</h4><p>SassScript 支持数字的加减乘除、取整等运算 <code>(+, -, *, /, %)</code>，如果必要会在不同单位间转换值。</p>\n<div class=\"code-panel__wrapper\" autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\"><header class=\"mac-panel\"><span class=\"doc-path\"></span><span class=\"mac-panel__language\">SCSS</span></header><figure class=\"iseeu highlight scss\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">p</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">width</span>: <span class=\"number\">1in</span> + <span class=\"number\">8pt</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></div>\n<p>编译为</p>\n<div class=\"code-panel__wrapper\" autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\"><header class=\"mac-panel\"><span class=\"doc-path\"></span><span class=\"mac-panel__language\">CSS</span></header><figure class=\"iseeu highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">p</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">width</span>: <span class=\"number\">1.111in</span>; &#125;</span><br></pre></td></tr></table></figure></div>\n<p>关系运算 &lt;, &gt;, &lt;=, &gt;= 也可用于数字运算，相等运算 ==, != 可用于所有数据类型。</p>\n<h5 id=\"除法运算\"><a href=\"#除法运算\" class=\"headerlink\" title=\"除法运算\"></a>除法运算</h5><p><code>/</code> 在 CSS 中原本起到分隔数字的用途，SassScript 作为 CSS 语言的拓展在支持原本功能的同时也赋予了 <code>/</code> 除法运算的功能。也就是说，在 SassScript 中，<code>/</code>可以作为分隔符，也可以作为除法运算符。</p>\n<p>以下三种情况 <code>/</code> 将被视为除法运算符号：</p>\n<ul>\n<li>如果值，或值的一部分，是变量或者函数的返回值</li>\n<li>如果值被圆括号包裹</li>\n<li>如果值是算数表达式的一部分</li>\n</ul>\n<div class=\"code-panel__wrapper\" autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\"><header class=\"mac-panel\"><span class=\"doc-path\"></span><span class=\"mac-panel__language\">SCSS</span></header><figure class=\"iseeu highlight scss\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">p</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">font</span>: <span class=\"number\">10px</span>/<span class=\"number\">8px</span>;             <span class=\"comment\">// css语法，作为分隔符使用</span></span><br><span class=\"line\">  <span class=\"variable\">$width</span>: <span class=\"number\">1000px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">width</span>: <span class=\"variable\">$width</span>/<span class=\"number\">2</span>;            <span class=\"comment\">// 使用了变量，是除法运算</span></span><br><span class=\"line\">  <span class=\"attribute\">width</span>: round(<span class=\"number\">1.5</span>)/<span class=\"number\">2</span>;        <span class=\"comment\">// 使用了函数，是除法运算</span></span><br><span class=\"line\">  <span class=\"attribute\">height</span>: (<span class=\"number\">500px</span>/<span class=\"number\">2</span>);          <span class=\"comment\">// 使用了括号，是除法运算</span></span><br><span class=\"line\">  <span class=\"attribute\">margin-left</span>: <span class=\"number\">5px</span> + <span class=\"number\">8px</span>/<span class=\"number\">2px</span>; <span class=\"comment\">// 使用了加号，是除法运算</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></div>\n<p>编译为</p>\n<div class=\"code-panel__wrapper\" autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\"><header class=\"mac-panel\"><span class=\"doc-path\"></span><span class=\"mac-panel__language\">CSS</span></header><figure class=\"iseeu highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">p</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">font</span>: <span class=\"number\">10px</span>/<span class=\"number\">8px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">width</span>: <span class=\"number\">500px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">height</span>: <span class=\"number\">250px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">margin-left</span>: <span class=\"number\">9px</span>; &#125;</span><br></pre></td></tr></table></figure></div>\n<p>如果需要使用变量，同时又要确保 <code>/</code> 不做除法运算而是完整地编译到 CSS 文件中，只需要用 <code>#{}</code> 插值语句将变量包裹。</p>\n<div class=\"code-panel__wrapper\" autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\"><header class=\"mac-panel\"><span class=\"doc-path\"></span><span class=\"mac-panel__language\">SCSS</span></header><figure class=\"iseeu highlight scss\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">p</span> &#123;</span><br><span class=\"line\">  <span class=\"variable\">$font-size</span>: <span class=\"number\">12px</span>;</span><br><span class=\"line\">  <span class=\"variable\">$line-height</span>: <span class=\"number\">30px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">font</span>: #&#123;<span class=\"variable\">$font-size</span>&#125;/#&#123;<span class=\"variable\">$line-height</span>&#125;;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></div>\n<p>编译为</p>\n<div class=\"code-panel__wrapper\" autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\"><header class=\"mac-panel\"><span class=\"doc-path\"></span><span class=\"mac-panel__language\">CSS</span></header><figure class=\"iseeu highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">p</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">font</span>: <span class=\"number\">12px</span>/<span class=\"number\">30px</span>; &#125;</span><br></pre></td></tr></table></figure></div>\n<h4 id=\"颜色值运算\"><a href=\"#颜色值运算\" class=\"headerlink\" title=\"颜色值运算\"></a>颜色值运算</h4><p>颜色值的运算是分段计算进行的，也就是分别计算红色，绿色，以及蓝色的值</p>\n<div class=\"code-panel__wrapper\" autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\"><header class=\"mac-panel\"><span class=\"doc-path\"></span><span class=\"mac-panel__language\">SCSS</span></header><figure class=\"iseeu highlight scss\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">p</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">color</span>: <span class=\"number\">#010203</span> + <span class=\"number\">#040506</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></div>\n<p>计算 <code>01 + 04 = 05 02 + 05 = 07 03 + 06 = 09</code>，然后编译为</p>\n<div class=\"code-panel__wrapper\" autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\"><header class=\"mac-panel\"><span class=\"doc-path\"></span><span class=\"mac-panel__language\">CSS</span></header><figure class=\"iseeu highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">p</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">color</span>: <span class=\"number\">#050709</span>; &#125;</span><br></pre></td></tr></table></figure></div>\n<p>使用 <code>color functions</code> 比计算颜色值更方便一些。</p>\n<p>数字与颜色值之间也可以进行算数运算，同样也是分段计算的，比如</p>\n<div class=\"code-panel__wrapper\" autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\"><header class=\"mac-panel\"><span class=\"doc-path\"></span><span class=\"mac-panel__language\">SCSS</span></header><figure class=\"iseeu highlight scss\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">p</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">color</span>: <span class=\"number\">#010203</span> * <span class=\"number\">2</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></div>\n<p>计算 <code>01 * 2 = 02 02 * 2 = 04 03 * 2 = 06</code>，然后编译为</p>\n<div class=\"code-panel__wrapper\" autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\"><header class=\"mac-panel\"><span class=\"doc-path\"></span><span class=\"mac-panel__language\">CSS</span></header><figure class=\"iseeu highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">p</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">color</span>: <span class=\"number\">#020406</span>; &#125;</span><br></pre></td></tr></table></figure></div>\n<p>需要注意的是，如果颜色值包含 alpha channel（rgba 或 hsla 两种颜色值），必须拥有相等的 alpha 值才能进行运算，因为算术运算不会作用于 alpha 值。</p>\n<div class=\"code-panel__wrapper\" autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\"><header class=\"mac-panel\"><span class=\"doc-path\"></span><span class=\"mac-panel__language\">SCSS</span></header><figure class=\"iseeu highlight scss\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">p</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">color</span>: rgba(<span class=\"number\">255</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">0.75</span>) + rgba(<span class=\"number\">0</span>, <span class=\"number\">255</span>, <span class=\"number\">0</span>, <span class=\"number\">0.75</span>);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></div>\n<p>编译为</p>\n<div class=\"code-panel__wrapper\" autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\"><header class=\"mac-panel\"><span class=\"doc-path\"></span><span class=\"mac-panel__language\">CSS</span></header><figure class=\"iseeu highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">p</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">color</span>: <span class=\"built_in\">rgba</span>(<span class=\"number\">255</span>, <span class=\"number\">255</span>, <span class=\"number\">0</span>, <span class=\"number\">0.75</span>); &#125;</span><br></pre></td></tr></table></figure></div>\n<p>颜色值的 alpha channel 可以通过 opacify 或 transparentize 两个函数进行调整。</p>\n<div class=\"code-panel__wrapper\" autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\"><header class=\"mac-panel\"><span class=\"doc-path\"></span><span class=\"mac-panel__language\">SCSS</span></header><figure class=\"iseeu highlight scss\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$translucent-red</span>: rgba(<span class=\"number\">255</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">0.5</span>);</span><br><span class=\"line\"><span class=\"selector-tag\">p</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">color</span>: opacify(<span class=\"variable\">$translucent-red</span>, <span class=\"number\">0.3</span>);</span><br><span class=\"line\">  <span class=\"attribute\">background-color</span>: transparentize(<span class=\"variable\">$translucent-red</span>, <span class=\"number\">0.25</span>);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></div>\n<p>编译为</p>\n<div class=\"code-panel__wrapper\" autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\"><header class=\"mac-panel\"><span class=\"doc-path\"></span><span class=\"mac-panel__language\">CSS</span></header><figure class=\"iseeu highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">p</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">color</span>: <span class=\"built_in\">rgba</span>(<span class=\"number\">255</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">0.8</span>);</span><br><span class=\"line\">  <span class=\"attribute\">background-color</span>: <span class=\"built_in\">rgba</span>(<span class=\"number\">255</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">0.25</span>); &#125;</span><br></pre></td></tr></table></figure></div>\n<h4 id=\"字符串运算\"><a href=\"#字符串运算\" class=\"headerlink\" title=\"字符串运算\"></a>字符串运算</h4><p><code>+</code> 可用于连接字符串</p>\n<div class=\"code-panel__wrapper\" autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\"><header class=\"mac-panel\"><span class=\"doc-path\"></span><span class=\"mac-panel__language\">SCSS</span></header><figure class=\"iseeu highlight scss\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">p</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">cursor</span>: e + -resize;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></div>\n<p>编译为</p>\n<div class=\"code-panel__wrapper\" autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\"><header class=\"mac-panel\"><span class=\"doc-path\"></span><span class=\"mac-panel__language\">CSS</span></header><figure class=\"iseeu highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">p</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">cursor</span>: e-resize; &#125;</span><br></pre></td></tr></table></figure></div>\n<p>注意，如果有引号字符串（位于 + 左侧）连接无引号字符串，运算结果是有引号的，相反，无引号字符串（位于 + 左侧）连接有引号字符串，运算结果则没有引号。</p>\n<div class=\"code-panel__wrapper\" autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\"><header class=\"mac-panel\"><span class=\"doc-path\"></span><span class=\"mac-panel__language\">SCSS</span></header><figure class=\"iseeu highlight scss\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">p</span><span class=\"selector-pseudo\">:before</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">content</span>: <span class=\"string\">\"Foo \"</span> + Bar;</span><br><span class=\"line\">  <span class=\"attribute\">font-family</span>: sans- + <span class=\"string\">\"serif\"</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></div>\n<p>编译为</p>\n<div class=\"code-panel__wrapper\" autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\"><header class=\"mac-panel\"><span class=\"doc-path\"></span><span class=\"mac-panel__language\">CSS</span></header><figure class=\"iseeu highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">p</span><span class=\"selector-pseudo\">:before</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">content</span>: <span class=\"string\">\"Foo Bar\"</span>;</span><br><span class=\"line\">  <span class=\"attribute\">font-family</span>: sans-serif; &#125;</span><br></pre></td></tr></table></figure></div>\n<p>运算表达式与其他值连用时，用空格做连接符：</p>\n<div class=\"code-panel__wrapper\" autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\"><header class=\"mac-panel\"><span class=\"doc-path\"></span><span class=\"mac-panel__language\">SCSS</span></header><figure class=\"iseeu highlight scss\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">p</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">margin</span>: <span class=\"number\">3px</span> + <span class=\"number\">4px</span> auto;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></div>\n<p>编译为</p>\n<div class=\"code-panel__wrapper\" autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\"><header class=\"mac-panel\"><span class=\"doc-path\"></span><span class=\"mac-panel__language\">CSS</span></header><figure class=\"iseeu highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">p</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">margin</span>: <span class=\"number\">7px</span> auto; &#125;</span><br></pre></td></tr></table></figure></div>\n<p>在有引号的文本字符串中使用 <code>#{}</code> 插值语句可以添加动态的值：</p>\n<div class=\"code-panel__wrapper\" autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\"><header class=\"mac-panel\"><span class=\"doc-path\"></span><span class=\"mac-panel__language\">SCSS</span></header><figure class=\"iseeu highlight scss\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">p</span><span class=\"selector-pseudo\">:before</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">content</span>: <span class=\"string\">\"I ate #&#123;5 + 10&#125; pies!\"</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></div>\n<p>编译为</p>\n<div class=\"code-panel__wrapper\" autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\"><header class=\"mac-panel\"><span class=\"doc-path\"></span><span class=\"mac-panel__language\">CSS</span></header><figure class=\"iseeu highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">p</span><span class=\"selector-pseudo\">:before</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">content</span>: <span class=\"string\">\"I ate 15 pies!\"</span>; &#125;</span><br></pre></td></tr></table></figure></div>\n<h4 id=\"圆括号运算\"><a href=\"#圆括号运算\" class=\"headerlink\" title=\"圆括号运算\"></a>圆括号运算</h4><p>圆括号可以用来影响运算的顺序：</p>\n<div class=\"code-panel__wrapper\" autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\"><header class=\"mac-panel\"><span class=\"doc-path\"></span><span class=\"mac-panel__language\">SCSS</span></header><figure class=\"iseeu highlight scss\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">p</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">width</span>: <span class=\"number\">1em</span> + (<span class=\"number\">2em</span> * <span class=\"number\">3</span>);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></div>\n<p>编译为</p>\n<div class=\"code-panel__wrapper\" autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\"><header class=\"mac-panel\"><span class=\"doc-path\"></span><span class=\"mac-panel__language\">CSS</span></header><figure class=\"iseeu highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">p</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">width</span>: <span class=\"number\">7em</span>; &#125;</span><br></pre></td></tr></table></figure></div>\n<h4 id=\"函数运算\"><a href=\"#函数运算\" class=\"headerlink\" title=\"函数运算\"></a>函数运算</h4><p>SassScript 定义了多种函数，有些甚至可以通过普通的 CSS 语句调用<br><!-- 把下面的函数直接粘贴上来 --></p>\n<h2 id=\"Rules-amp-amp-指令\"><a href=\"#Rules-amp-amp-指令\" class=\"headerlink\" title=\"@Rules &amp;&amp; 指令\"></a>@Rules &amp;&amp; 指令</h2><p>Sass 支持所有的 CSS3 @-Rules，以及 Sass 特有的 “指令”（directives）。这一节会详细解释，更多资料请查看 <a href=\"#controlDirectives\">控制指令</a> 与 <a href=\"mixinDirectives\">混合指令</a> 两个部分。</p>\n<h3 id=\"import\"><a href=\"#import\" class=\"headerlink\" title=\"@import\"></a>@import</h3><p>Sass 拓展了 <code>@import</code> 的功能，允许其导入 SCSS 或 Sass 文件。被导入的文件将合并编译到同一个 CSS 文件中，另外，被导入的文件中所包含的变量或者混合指令 (mixin) 都可以在导入的文件中使用。</p>\n<p>Sass 在当前地址，或 Rack, Rails, Merb 的 Sass 文件地址寻找 Sass 文件，如果需要设定其他地址，可以用 <code>:load_paths</code> 选项，或者在命令行中输入 <code>--load-path</code> 命令。</p>\n<p>通常，<code>@import</code> 寻找 Sass 文件并将其导入，但在以下情况下，<code>@import</code> 仅作为普通的 CSS 语句，不会导入任何 Sass 文件:</p>\n<ul>\n<li>文件拓展名是 <code>.css</code></li>\n<li>文件名以 <code>http://</code> 开头</li>\n<li>文件名是 <code>url()</code></li>\n<li><code>@import</code> 包含 <code>media queries</code></li>\n</ul>\n<p>如果不在上述情况内，文件的拓展名是 <code>.scss</code> 或 <code>.sass</code>，则导入成功。没有指定拓展名，Sass 将会试着寻找文件名相同，拓展名为 <code>.scss</code> 或 <code>.sass</code> 的文件并将其导入。</p>\n<div class=\"code-panel__wrapper\" autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\"><header class=\"mac-panel\"><span class=\"doc-path\"></span><span class=\"mac-panel__language\">SCSS</span></header><figure class=\"iseeu highlight scss\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">@import</span> <span class=\"string\">\"foo.scss\"</span>;</span><br></pre></td></tr></table></figure></div>\n<p>或</p>\n<div class=\"code-panel__wrapper\" autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\"><header class=\"mac-panel\"><span class=\"doc-path\"></span><span class=\"mac-panel__language\">SCSS</span></header><figure class=\"iseeu highlight scss\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">@import</span> <span class=\"string\">\"foo\"</span>;</span><br></pre></td></tr></table></figure></div>\n<p>都会导入文件 <code>foo.scss</code>，但是</p>\n<div class=\"code-panel__wrapper\" autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\"><header class=\"mac-panel\"><span class=\"doc-path\"></span><span class=\"mac-panel__language\">SCSS</span></header><figure class=\"iseeu highlight scss\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">@import</span> <span class=\"string\">\"foo.css\"</span>;</span><br><span class=\"line\"><span class=\"keyword\">@import</span> <span class=\"string\">\"foo\"</span> screen;</span><br><span class=\"line\"><span class=\"keyword\">@import</span> <span class=\"string\">\"http://foo.com/bar\"</span>;</span><br><span class=\"line\"><span class=\"keyword\">@import</span> url(foo);</span><br></pre></td></tr></table></figure></div>\n<p>编译为</p>\n<div class=\"code-panel__wrapper\" autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\"><header class=\"mac-panel\"><span class=\"doc-path\"></span><span class=\"mac-panel__language\">CSS</span></header><figure class=\"iseeu highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">@import</span> <span class=\"string\">\"foo.css\"</span>;</span><br><span class=\"line\"><span class=\"keyword\">@import</span> <span class=\"string\">\"foo\"</span> screen;</span><br><span class=\"line\"><span class=\"keyword\">@import</span> <span class=\"string\">\"http://foo.com/bar\"</span>;</span><br><span class=\"line\"><span class=\"keyword\">@import</span> url(foo);</span><br></pre></td></tr></table></figure></div>\n<p>Sass 允许同时导入多个文件，例如同时导入 <code>rounded-corners</code> 与 <code>text-shadow</code> 两个文件：</p>\n<div class=\"code-panel__wrapper\" autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\"><header class=\"mac-panel\"><span class=\"doc-path\"></span><span class=\"mac-panel__language\">SCSS</span></header><figure class=\"iseeu highlight scss\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">@import</span> <span class=\"string\">\"rounded-corners\"</span>, <span class=\"string\">\"text-shadow\"</span>;</span><br></pre></td></tr></table></figure></div>\n<p>导入文件也可以使用 <code>#{ }</code> 插值语句，但不是通过变量动态导入 Sass 文件，只能作用于 CSS 的 <code>url()</code> 导入方式：</p>\n<div class=\"code-panel__wrapper\" autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\"><header class=\"mac-panel\"><span class=\"doc-path\"></span><span class=\"mac-panel__language\">SCSS</span></header><figure class=\"iseeu highlight scss\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$family</span>: unquote(<span class=\"string\">\"Droid+Sans\"</span>);</span><br><span class=\"line\"><span class=\"keyword\">@import</span> url(<span class=\"string\">\"http://fonts.googleapis.com/css?family=\\#&#123;$family&#125;\"</span>);</span><br></pre></td></tr></table></figure></div>\n<p>编译为</p>\n<div class=\"code-panel__wrapper\" autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\"><header class=\"mac-panel\"><span class=\"doc-path\"></span><span class=\"mac-panel__language\">CSS</span></header><figure class=\"iseeu highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">@import</span> url(<span class=\"string\">\"http://fonts.googleapis.com/css?family=Droid+Sans\"</span>);</span><br></pre></td></tr></table></figure></div>\n<h4 id=\"分音\"><a href=\"#分音\" class=\"headerlink\" title=\"分音\"></a>分音</h4><p>如果需要导入 SCSS 或者 Sass 文件，但又不希望将其编译为 CSS，只需要在文件名前添加下划线，这样会告诉 Sass 不要编译这些文件，但导入语句中却不需要添加下划线。</p>\n<p>例如，将文件命名为 <code>_colors.scss</code>，便不会编译 <code>_colours.css</code> 文件。</p>\n<div class=\"code-panel__wrapper\" autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\"><header class=\"mac-panel\"><span class=\"doc-path\"></span><span class=\"mac-panel__language\">SCSS</span></header><figure class=\"iseeu highlight scss\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">@import</span> <span class=\"string\">\"colors\"</span>;</span><br></pre></td></tr></table></figure></div>\n<p>上面的例子，导入的其实是 <code>_colors.scss</code> 文件</p>\n<p>注意，不可以同时存在添加下划线与未添加下划线的同名文件，添加下划线的文件将会被忽略。</p>\n<h4 id=\"嵌套-import\"><a href=\"#嵌套-import\" class=\"headerlink\" title=\"嵌套 @import\"></a>嵌套 @import</h4><p>大多数情况下，一般在文件的最外层（不在嵌套规则内）使用 <code>@import</code>，其实，也可以将 <code>@import</code> 嵌套进 CSS 样式或者 <code>@media</code> 中，与平时的用法效果相同，只是这样导入的样式只能出现在嵌套的层中。</p>\n<p>假设 <code>example.scss</code> 文件包含以下样式：</p>\n<div class=\"code-panel__wrapper\" autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\"><header class=\"mac-panel\"><span class=\"doc-path\"></span><span class=\"mac-panel__language\">SCSS</span></header><figure class=\"iseeu highlight scss\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.example</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">color</span>: red;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></div>\n<p>然后导入到 <code>#main</code> 样式内</p>\n<div class=\"code-panel__wrapper\" autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\"><header class=\"mac-panel\"><span class=\"doc-path\"></span><span class=\"mac-panel__language\">SCSS</span></header><figure class=\"iseeu highlight scss\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-id\">#main</span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">@import</span> <span class=\"string\">\"example\"</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></div>\n<p>将会被编译为</p>\n<div class=\"code-panel__wrapper\" autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\"><header class=\"mac-panel\"><span class=\"doc-path\"></span><span class=\"mac-panel__language\">SCSS</span></header><figure class=\"iseeu highlight scss\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-id\">#main</span> <span class=\"selector-class\">.example</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">color</span>: red;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></div>\n<p>不可以在混合指令 (mixin) 或控制指令 (control directives) 中嵌套 @import。</p>\n<h3 id=\"media\"><a href=\"#media\" class=\"headerlink\" title=\"@media\"></a>@media</h3><p>Sass 中 <code>@media</code> 指令与 CSS 中用法一样，只是增加了一点额外的功能：允许其在 CSS 规则中嵌套。如果 <code>@media</code> 嵌套在 CSS 规则内，编译时，<code>@media</code> 将被编译到文件的最外层，包含嵌套的父选择器。这个功能让 <code>@media</code> 用起来更方便，不需要重复使用选择器，也不会打乱 CSS 的书写流程。</p>\n<div class=\"code-panel__wrapper\" autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\"><header class=\"mac-panel\"><span class=\"doc-path\"></span><span class=\"mac-panel__language\">SCSS</span></header><figure class=\"iseeu highlight scss\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.sidebar</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">width</span>: <span class=\"number\">300px</span>;</span><br><span class=\"line\">  <span class=\"keyword\">@media</span> screen <span class=\"keyword\">and</span> (orientation: landscape) &#123;</span><br><span class=\"line\">    <span class=\"attribute\">width</span>: <span class=\"number\">500px</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></div>\n<p>编译为</p>\n<div class=\"code-panel__wrapper\" autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\"><header class=\"mac-panel\"><span class=\"doc-path\"></span><span class=\"mac-panel__language\">CSS</span></header><figure class=\"iseeu highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.sidebar</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">width</span>: <span class=\"number\">300px</span>; &#125;</span><br><span class=\"line\">  <span class=\"keyword\">@media</span> screen <span class=\"keyword\">and</span> (<span class=\"attribute\">orientation:</span> landscape) &#123;</span><br><span class=\"line\">    <span class=\"selector-class\">.sidebar</span> &#123;</span><br><span class=\"line\">      <span class=\"attribute\">width</span>: <span class=\"number\">500px</span>; &#125; &#125;</span><br></pre></td></tr></table></figure></div>\n<p><code>@media</code> 的 queries 允许互相嵌套使用，编译时，Sass 自动添加 <code>and</code></p>\n<div class=\"code-panel__wrapper\" autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\"><header class=\"mac-panel\"><span class=\"doc-path\"></span><span class=\"mac-panel__language\">SCSS</span></header><figure class=\"iseeu highlight scss\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">@media</span> screen &#123;</span><br><span class=\"line\">  <span class=\"selector-class\">.sidebar</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">@media</span> (orientation: landscape) &#123;</span><br><span class=\"line\">      <span class=\"attribute\">width</span>: <span class=\"number\">500px</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></div>\n<p>编译为</p>\n<div class=\"code-panel__wrapper\" autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\"><header class=\"mac-panel\"><span class=\"doc-path\"></span><span class=\"mac-panel__language\">CSS</span></header><figure class=\"iseeu highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">@media</span> screen <span class=\"keyword\">and</span> (<span class=\"attribute\">orientation:</span> landscape) &#123;</span><br><span class=\"line\">  <span class=\"selector-class\">.sidebar</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">width</span>: <span class=\"number\">500px</span>; &#125; &#125;</span><br></pre></td></tr></table></figure></div>\n<p><code>@media</code> 甚至可以使用 SassScript（比如变量，函数，以及运算符）代替条件的名称或者值：</p>\n<div class=\"code-panel__wrapper\" autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\"><header class=\"mac-panel\"><span class=\"doc-path\"></span><span class=\"mac-panel__language\">SCSS</span></header><figure class=\"iseeu highlight scss\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$media</span>: screen;</span><br><span class=\"line\"><span class=\"variable\">$feature</span>: -webkit-min-device-pixel-ratio;</span><br><span class=\"line\"><span class=\"variable\">$value</span>: <span class=\"number\">1.5</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">@media</span> #&#123;<span class=\"variable\">$media</span>&#125; and (<span class=\"variable\">$feature</span>: <span class=\"variable\">$value</span>) &#123;</span><br><span class=\"line\">  .sidebar &#123;</span><br><span class=\"line\">    width: <span class=\"number\">500px</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></div>\n<p>编译为</p>\n<div class=\"code-panel__wrapper\" autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\"><header class=\"mac-panel\"><span class=\"doc-path\"></span><span class=\"mac-panel__language\">CSS</span></header><figure class=\"iseeu highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">@media</span> screen <span class=\"keyword\">and</span> (<span class=\"attribute\">-webkit-min-device-pixel-ratio:</span> <span class=\"number\">1.5</span>) &#123;</span><br><span class=\"line\">  <span class=\"selector-class\">.sidebar</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">width</span>: <span class=\"number\">500px</span>; &#125; &#125;</span><br></pre></td></tr></table></figure></div>\n<h3 id=\"extend\"><a href=\"#extend\" class=\"headerlink\" title=\"@extend\"></a>@extend</h3><p>在设计网页的时候常常遇到这种情况：一个元素使用的样式与另一个元素完全相同，但又添加了额外的样式。通常会在 HTML 中给元素定义两个 class，一个通用样式，一个特殊样式。假设现在要设计一个普通错误样式与一个严重错误样式，一般会这样写：</p>\n<div class=\"code-panel__wrapper\" autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\"><header class=\"mac-panel\"><span class=\"doc-path\"></span><span class=\"mac-panel__language\">HTML</span></header><figure class=\"iseeu highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"error seriousError\"</span>&gt;</span></span><br><span class=\"line\">  Oh no! You've been hacked!</span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure></div>\n<p>样式如下</p>\n<div class=\"code-panel__wrapper\" autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\"><header class=\"mac-panel\"><span class=\"doc-path\"></span><span class=\"mac-panel__language\">CSS</span></header><figure class=\"iseeu highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.error</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">border</span>: <span class=\"number\">1px</span> <span class=\"number\">#f00</span>;</span><br><span class=\"line\">  <span class=\"attribute\">background-color</span>: <span class=\"number\">#fdd</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-class\">.seriousError</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">border-width</span>: <span class=\"number\">3px</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></div>\n<p>麻烦的是，这样做必须时刻记住使用 <code>.seriousError</code> 时需要参考 <code>.error</code> 的样式，带来了很多不便：比如加重维护负担，导致 bug，或者给 HTML 添加无语意的样式。使用 @extend 可以避免上述情况，告诉 Sass 将一个选择器下的所有样式继承给另一个选择器。</p>\n<div class=\"code-panel__wrapper\" autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\"><header class=\"mac-panel\"><span class=\"doc-path\"></span><span class=\"mac-panel__language\">SCSS</span></header><figure class=\"iseeu highlight scss\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.error</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">border</span>: <span class=\"number\">1px</span> <span class=\"number\">#f00</span>;</span><br><span class=\"line\">  <span class=\"attribute\">background-color</span>: <span class=\"number\">#fdd</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-class\">.seriousError</span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">@extend</span> .error;</span><br><span class=\"line\">  <span class=\"attribute\">border-width</span>: <span class=\"number\">3px</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></div>\n<p>上面代码的意思是将 <code>.error</code> 下的所有样式继承给 <code>.seriousError，border-width: 3px;</code> 是单独给 <code>.seriousError</code> 设定特殊样式，这样，使用 <code>.seriousError</code> 的地方可以不再使用 <code>.error</code>。</p>\n<p>其他使用到 <code>.error</code> 的样式也会同样继承给 <code>.seriousError</code>，例如，另一个样式 <code>.error.intrusion</code> 使用了 <code>hacked.png</code> 做背景，<code>&lt;div class=&quot;seriousError intrusion&quot;&gt;</code> 也同样会使用 hacked.png 背景。</p>\n<div class=\"code-panel__wrapper\" autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\"><header class=\"mac-panel\"><span class=\"doc-path\"></span><span class=\"mac-panel__language\">CSS</span></header><figure class=\"iseeu highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.error</span><span class=\"selector-class\">.intrusion</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">background-image</span>: <span class=\"built_in\">url</span>(<span class=\"string\">\"/image/hacked.png\"</span>);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></div>\n<h4 id=\"How-it-works\"><a href=\"#How-it-works\" class=\"headerlink\" title=\"How it works\"></a>How it works</h4><p><code>@extend</code> 的作用是将重复使用的样式 <code>(.error)</code> 延伸 <code>(extend)</code> 给需要包含这个样式的特殊样式<code>（.seriousError）</code>，刚刚的例子：</p>\n<div class=\"code-panel__wrapper\" autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\"><header class=\"mac-panel\"><span class=\"doc-path\"></span><span class=\"mac-panel__language\">SCSS</span></header><figure class=\"iseeu highlight scss\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.error</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">border</span>: <span class=\"number\">1px</span> <span class=\"number\">#f00</span>;</span><br><span class=\"line\">  <span class=\"attribute\">background-color</span>: <span class=\"number\">#fdd</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-class\">.error</span><span class=\"selector-class\">.intrusion</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">background-image</span>: url(<span class=\"string\">\"/image/hacked.png\"</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-class\">.seriousError</span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">@extend</span> .error;</span><br><span class=\"line\">  <span class=\"attribute\">border-width</span>: <span class=\"number\">3px</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></div>\n<p>编译为</p>\n<div class=\"code-panel__wrapper\" autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\"><header class=\"mac-panel\"><span class=\"doc-path\"></span><span class=\"mac-panel__language\">CSS</span></header><figure class=\"iseeu highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.error</span>, <span class=\"selector-class\">.seriousError</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">border</span>: <span class=\"number\">1px</span> <span class=\"number\">#f00</span>;</span><br><span class=\"line\">  <span class=\"attribute\">background-color</span>: <span class=\"number\">#fdd</span>; &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-class\">.error</span><span class=\"selector-class\">.intrusion</span>, <span class=\"selector-class\">.seriousError</span><span class=\"selector-class\">.intrusion</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">background-image</span>: <span class=\"built_in\">url</span>(<span class=\"string\">\"/image/hacked.png\"</span>); &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-class\">.seriousError</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">border-width</span>: <span class=\"number\">3px</span>; &#125;</span><br></pre></td></tr></table></figure></div>\n<p>当合并选择器时，<code>@extend</code> 会很聪明地避免无谓的重复，<code>.seriousError.seriousError</code> 将编译为 <code>.seriousError</code>，不能匹配任何元素的选择器（比如 <code>#main#footer</code> ）也会删除。</p>\n<h4 id=\"延伸复杂的选择器\"><a href=\"#延伸复杂的选择器\" class=\"headerlink\" title=\"延伸复杂的选择器\"></a>延伸复杂的选择器</h4><p>Class 选择器并不是唯一可以被延伸 (extend) 的，Sass 允许延伸任何定义给单个元素的选择器，比如 <code>.special.cool</code>，<code>a:hover</code> 或者 <code>a.user[href^=&quot;http://&quot;]</code> 等，例如：</p>\n<div class=\"code-panel__wrapper\" autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\"><header class=\"mac-panel\"><span class=\"doc-path\"></span><span class=\"mac-panel__language\">SCSS</span></header><figure class=\"iseeu highlight scss\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.hoverlink</span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">@extend</span> a:hover;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></div>\n<p>同 class 元素一样，<code>a:hover</code> 的样式将继承给 <code>.hoverlink</code>。</p>\n<div class=\"code-panel__wrapper\" autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\"><header class=\"mac-panel\"><span class=\"doc-path\"></span><span class=\"mac-panel__language\">SCSS</span></header><figure class=\"iseeu highlight scss\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.hoverlink</span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">@extend</span> a:hover;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-tag\">a</span><span class=\"selector-pseudo\">:hover</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">text-decoration</span>: underline;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></div>\n<p>编译为</p>\n<div class=\"code-panel__wrapper\" autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\"><header class=\"mac-panel\"><span class=\"doc-path\"></span><span class=\"mac-panel__language\">CSS</span></header><figure class=\"iseeu highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">a</span><span class=\"selector-pseudo\">:hover</span>, <span class=\"selector-class\">.hoverlink</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">text-decoration</span>: underline; &#125;</span><br></pre></td></tr></table></figure></div>\n<p>与上面 <code>.error.intrusion</code> 的例子一样，所有 <code>a:hover</code> 的样式将继承给 <code>.hoverlink</code>，包括其他使用到 <code>a:hover</code> 的样式，例如：</p>\n<div class=\"code-panel__wrapper\" autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\"><header class=\"mac-panel\"><span class=\"doc-path\"></span><span class=\"mac-panel__language\">SCSS</span></header><figure class=\"iseeu highlight scss\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.hoverlink</span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">@extend</span> a:hover;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-class\">.comment</span> <span class=\"selector-tag\">a</span><span class=\"selector-class\">.user</span><span class=\"selector-pseudo\">:hover</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">font-weight</span>: bold;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></div>\n<p>编译为</p>\n<div class=\"code-panel__wrapper\" autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\"><header class=\"mac-panel\"><span class=\"doc-path\"></span><span class=\"mac-panel__language\">CSS</span></header><figure class=\"iseeu highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.comment</span> <span class=\"selector-tag\">a</span><span class=\"selector-class\">.user</span><span class=\"selector-pseudo\">:hover</span>, <span class=\"selector-class\">.comment</span> <span class=\"selector-class\">.user</span><span class=\"selector-class\">.hoverlink</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">font-weight</span>: bold; &#125;</span><br></pre></td></tr></table></figure></div>\n<h4 id=\"多重延伸\"><a href=\"#多重延伸\" class=\"headerlink\" title=\"多重延伸\"></a>多重延伸</h4><p>同一个选择器可以延伸给多个选择器，它所包含的属性将继承给所有被延伸的选择器：</p>\n<div class=\"code-panel__wrapper\" autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\"><header class=\"mac-panel\"><span class=\"doc-path\"></span><span class=\"mac-panel__language\">SCSS</span></header><figure class=\"iseeu highlight scss\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.error</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">border</span>: <span class=\"number\">1px</span> <span class=\"number\">#f00</span>;</span><br><span class=\"line\">  <span class=\"attribute\">background-color</span>: <span class=\"number\">#fdd</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-class\">.attention</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">font-size</span>: <span class=\"number\">3em</span>;</span><br><span class=\"line\">  <span class=\"attribute\">background-color</span>: <span class=\"number\">#ff0</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-class\">.seriousError</span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">@extend</span> .error;</span><br><span class=\"line\">  <span class=\"keyword\">@extend</span> .attention;</span><br><span class=\"line\">  <span class=\"attribute\">border-width</span>: <span class=\"number\">3px</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></div>\n<p>编译为</p>\n<div class=\"code-panel__wrapper\" autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\"><header class=\"mac-panel\"><span class=\"doc-path\"></span><span class=\"mac-panel__language\">CSS</span></header><figure class=\"iseeu highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.error</span>, <span class=\"selector-class\">.seriousError</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">border</span>: <span class=\"number\">1px</span> <span class=\"number\">#f00</span>;</span><br><span class=\"line\">  <span class=\"attribute\">background-color</span>: <span class=\"number\">#fdd</span>; &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-class\">.attention</span>, <span class=\"selector-class\">.seriousError</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">font-size</span>: <span class=\"number\">3em</span>;</span><br><span class=\"line\">  <span class=\"attribute\">background-color</span>: <span class=\"number\">#ff0</span>; &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-class\">.seriousError</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">border-width</span>: <span class=\"number\">3px</span>; &#125;</span><br></pre></td></tr></table></figure></div>\n<p>每个 <code>.seriousError</code> 将包含 <code>.error</code> 与 <code>.attention</code> 下的所有样式，这时，后定义的样式享有优先权：<code>.seriousError</code> 的背景颜色是 <code>#ff0</code> 而不是 <code>#fdd</code>，因为 <code>.attention</code> 在 <code>.error</code> 之后定义。</p>\n<p>多重延伸可以使用逗号分隔选择器名，比如 <code>@extend .error, .attention;</code> 与 <code>@extend .error; @extend.attention</code> 有相同的效果。</p>\n<h4 id=\"继续延伸\"><a href=\"#继续延伸\" class=\"headerlink\" title=\"继续延伸\"></a>继续延伸</h4><p>当一个选择器延伸给第二个后，可以继续将第二个选择器延伸给第三个，例如：</p>\n<div class=\"code-panel__wrapper\" autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\"><header class=\"mac-panel\"><span class=\"doc-path\"></span><span class=\"mac-panel__language\">SCSS</span></header><figure class=\"iseeu highlight scss\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.error</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">border</span>: <span class=\"number\">1px</span> <span class=\"number\">#f00</span>;</span><br><span class=\"line\">  <span class=\"attribute\">background-color</span>: <span class=\"number\">#fdd</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-class\">.seriousError</span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">@extend</span> .error;</span><br><span class=\"line\">  <span class=\"attribute\">border-width</span>: <span class=\"number\">3px</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-class\">.criticalError</span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">@extend</span> .seriousError;</span><br><span class=\"line\">  <span class=\"attribute\">position</span>: fixed;</span><br><span class=\"line\">  <span class=\"attribute\">top</span>: <span class=\"number\">10%</span>;</span><br><span class=\"line\">  <span class=\"attribute\">bottom</span>: <span class=\"number\">10%</span>;</span><br><span class=\"line\">  <span class=\"attribute\">left</span>: <span class=\"number\">10%</span>;</span><br><span class=\"line\">  <span class=\"attribute\">right</span>: <span class=\"number\">10%</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></div>\n<p>现在，每个 <code>.seriousError</code> 选择器将包含 <code>.error</code> 的样式，而 <code>.criticalError</code> 不仅包含 <code>.seriousError</code> 的样式也会同时包含 <code>.error</code> 的所有样式，上面的代码编译为：</p>\n<div class=\"code-panel__wrapper\" autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\"><header class=\"mac-panel\"><span class=\"doc-path\"></span><span class=\"mac-panel__language\">CSS</span></header><figure class=\"iseeu highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.error</span>, <span class=\"selector-class\">.seriousError</span>, <span class=\"selector-class\">.criticalError</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">border</span>: <span class=\"number\">1px</span> <span class=\"number\">#f00</span>;</span><br><span class=\"line\">  <span class=\"attribute\">background-color</span>: <span class=\"number\">#fdd</span>; &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-class\">.seriousError</span>, <span class=\"selector-class\">.criticalError</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">border-width</span>: <span class=\"number\">3px</span>; &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-class\">.criticalError</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">position</span>: fixed;</span><br><span class=\"line\">  <span class=\"attribute\">top</span>: <span class=\"number\">10%</span>;</span><br><span class=\"line\">  <span class=\"attribute\">bottom</span>: <span class=\"number\">10%</span>;</span><br><span class=\"line\">  <span class=\"attribute\">left</span>: <span class=\"number\">10%</span>;</span><br><span class=\"line\">  <span class=\"attribute\">right</span>: <span class=\"number\">10%</span>; &#125;</span><br></pre></td></tr></table></figure></div>\n<h4 id=\"选择器列\"><a href=\"#选择器列\" class=\"headerlink\" title=\"选择器列\"></a>选择器列</h4><p>不可以将选择器列（比如 <code>.foo .bar</code> 或 <code>.foo + .bar</code>）延伸给其他元素，但是，却可以将其他元素延伸给选择器列：</p>\n<div class=\"code-panel__wrapper\" autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\"><header class=\"mac-panel\"><span class=\"doc-path\"></span><span class=\"mac-panel__language\">SCSS</span></header><figure class=\"iseeu highlight scss\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-id\">#fake-links</span> <span class=\"selector-class\">.link</span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">@extend</span> a;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-tag\">a</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">color</span>: blue;</span><br><span class=\"line\">  &amp;<span class=\"selector-pseudo\">:hover</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">text-decoration</span>: underline;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></div>\n<p>编译为</p>\n<div class=\"code-panel__wrapper\" autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\"><header class=\"mac-panel\"><span class=\"doc-path\"></span><span class=\"mac-panel__language\">CSS</span></header><figure class=\"iseeu highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">a</span>, <span class=\"selector-id\">#fake-links</span> <span class=\"selector-class\">.link</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">color</span>: blue; &#125;</span><br><span class=\"line\">  <span class=\"selector-tag\">a</span><span class=\"selector-pseudo\">:hover</span>, <span class=\"selector-id\">#fake-links</span> <span class=\"selector-class\">.link</span><span class=\"selector-pseudo\">:hover</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">text-decoration</span>: underline; &#125;</span><br></pre></td></tr></table></figure></div>\n<h5 id=\"合并选择器列\"><a href=\"#合并选择器列\" class=\"headerlink\" title=\"合并选择器列\"></a>合并选择器列</h5><p>有时会遇到复杂的情况，比如选择器列中的某个元素需要延伸给另一个选择器列，这种情况下，两个选择器列需要合并，比如：</p>\n<div class=\"code-panel__wrapper\" autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\"><header class=\"mac-panel\"><span class=\"doc-path\"></span><span class=\"mac-panel__language\">SCSS</span></header><figure class=\"iseeu highlight scss\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-id\">#admin</span> <span class=\"selector-class\">.tabbar</span> <span class=\"selector-tag\">a</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">font-weight</span>: bold;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-id\">#demo</span> <span class=\"selector-class\">.overview</span> <span class=\"selector-class\">.fakelink</span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">@extend</span> a;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></div>\n<p>技术上讲能够生成所有匹配条件的结果，但是这样生成的样式表太复杂了，上面这个简单的例子就可能有 10 种结果。所以，Sass 只会编译输出有用的选择器。</p>\n<p>当两个列 (sequence) 合并时，如果没有包含相同的选择器，将生成两个新选择器：第一列出现在第二列之前，或者第二列出现在第一列之前：</p>\n<div class=\"code-panel__wrapper\" autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\"><header class=\"mac-panel\"><span class=\"doc-path\"></span><span class=\"mac-panel__language\">SCSS</span></header><figure class=\"iseeu highlight scss\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-id\">#admin</span> <span class=\"selector-class\">.tabbar</span> <span class=\"selector-tag\">a</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">font-weight</span>: bold;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-id\">#demo</span> <span class=\"selector-class\">.overview</span> <span class=\"selector-class\">.fakelink</span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">@extend</span> a;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></div>\n<p>编译为</p>\n<div class=\"code-panel__wrapper\" autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\"><header class=\"mac-panel\"><span class=\"doc-path\"></span><span class=\"mac-panel__language\">CSS</span></header><figure class=\"iseeu highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-id\">#admin</span> <span class=\"selector-class\">.tabbar</span> <span class=\"selector-tag\">a</span>,</span><br><span class=\"line\"><span class=\"selector-id\">#admin</span> <span class=\"selector-class\">.tabbar</span> <span class=\"selector-id\">#demo</span> <span class=\"selector-class\">.overview</span> <span class=\"selector-class\">.fakelink</span>,</span><br><span class=\"line\"><span class=\"selector-id\">#demo</span> <span class=\"selector-class\">.overview</span> <span class=\"selector-id\">#admin</span> <span class=\"selector-class\">.tabbar</span> <span class=\"selector-class\">.fakelink</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">font-weight</span>: bold; &#125;</span><br></pre></td></tr></table></figure></div>\n<p>如果两个列 (sequence) 包含了相同的选择器，相同部分将会合并在一起，其他部分交替输出。在下面的例子里，两个列都包含 <code>#admin</code>，输出结果中它们合并在了一起：</p>\n<div class=\"code-panel__wrapper\" autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\"><header class=\"mac-panel\"><span class=\"doc-path\"></span><span class=\"mac-panel__language\">SCSS</span></header><figure class=\"iseeu highlight scss\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-id\">#admin</span> <span class=\"selector-class\">.tabbar</span> <span class=\"selector-tag\">a</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">font-weight</span>: bold;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-id\">#admin</span> <span class=\"selector-class\">.overview</span> <span class=\"selector-class\">.fakelink</span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">@extend</span> a;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></div>\n<p>编译为</p>\n<div class=\"code-panel__wrapper\" autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\"><header class=\"mac-panel\"><span class=\"doc-path\"></span><span class=\"mac-panel__language\">CSS</span></header><figure class=\"iseeu highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-id\">#admin</span> <span class=\"selector-class\">.tabbar</span> <span class=\"selector-tag\">a</span>,</span><br><span class=\"line\"><span class=\"selector-id\">#admin</span> <span class=\"selector-class\">.tabbar</span> <span class=\"selector-class\">.overview</span> <span class=\"selector-class\">.fakelink</span>,</span><br><span class=\"line\"><span class=\"selector-id\">#admin</span> <span class=\"selector-class\">.overview</span> <span class=\"selector-class\">.tabbar</span> <span class=\"selector-class\">.fakelink</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">font-weight</span>: bold; &#125;</span><br></pre></td></tr></table></figure></div>\n<h4 id=\"extend-Only-选择器\"><a href=\"#extend-Only-选择器\" class=\"headerlink\" title=\"@extend-Only 选择器\"></a>@extend-Only 选择器</h4><p>有时，需要定义一套样式并不是给某个元素用，而是只通过 <code>@extend</code> 指令使用，尤其是在制作 <code>Sass</code> 样式库的时候，希望 <code>Sass</code> 能够忽略用不到的样式。</p>\n<p>如果使用普通的 CSS 规则，最后会编译出很多用不到的样式，也容易与其他样式名冲突，所以，Sass 引入了“占位符选择器” (placeholder selectors)，看起来很像普通的 <code>id</code> 或 <code>class</code> 选择器，只是 <code>#</code> 或 <code>.</code> 被替换成了 <code>%</code>。可以像 <code>class</code> 或者 <code>id</code> 选择器那样使用，当它们单独使用时，不会被编译到 CSS 文件中。</p>\n<div class=\"code-panel__wrapper\" autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\"><header class=\"mac-panel\"><span class=\"doc-path\"></span><span class=\"mac-panel__language\">SCSS</span></header><figure class=\"iseeu highlight scss\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// This ruleset won't be rendered on its own.</span></span><br><span class=\"line\"><span class=\"selector-id\">#context</span> <span class=\"selector-tag\">a</span>%extreme &#123;</span><br><span class=\"line\">  <span class=\"attribute\">color</span>: blue;</span><br><span class=\"line\">  <span class=\"attribute\">font-weight</span>: bold;</span><br><span class=\"line\">  <span class=\"attribute\">font-size</span>: <span class=\"number\">2em</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></div>\n<p>占位符选择器需要通过延伸指令使用，用法与 <code>class</code> 或者 <code>id</code> 选择器一样，被延伸后，占位符选择器本身不会被编译。</p>\n<div class=\"code-panel__wrapper\" autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\"><header class=\"mac-panel\"><span class=\"doc-path\"></span><span class=\"mac-panel__language\">SCSS</span></header><figure class=\"iseeu highlight scss\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.notice</span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">@extend</span> %extreme;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></div>\n<p>编译为</p>\n<div class=\"code-panel__wrapper\" autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\"><header class=\"mac-panel\"><span class=\"doc-path\"></span><span class=\"mac-panel__language\">CSS</span></header><figure class=\"iseeu highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-id\">#context</span> <span class=\"selector-tag\">a</span><span class=\"selector-class\">.notice</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">color</span>: blue;</span><br><span class=\"line\">  <span class=\"attribute\">font-weight</span>: bold;</span><br><span class=\"line\">  <span class=\"attribute\">font-size</span>: <span class=\"number\">2em</span>; &#125;</span><br></pre></td></tr></table></figure></div>\n<h4 id=\"在指令之延伸\"><a href=\"#在指令之延伸\" class=\"headerlink\" title=\"在指令之延伸\"></a>在指令之延伸</h4><p>在指令中使用 <code>@extend</code> 时（比如在 @media 中）有一些限制：Sass 不可以将 <code>@media</code> 层外的 CSS 规则延伸给指令层内的 CSS，这样会生成大量的无用代码。也就是说，如果在 <code>@media</code> （或者其他 CSS 指令）中使用 <code>@extend</code>，必须延伸给相同指令层中的选择器。</p>\n<p>下面的例子是可行的：</p>\n<div class=\"code-panel__wrapper\" autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\"><header class=\"mac-panel\"><span class=\"doc-path\"></span><span class=\"mac-panel__language\">SCSS</span></header><figure class=\"iseeu highlight scss\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">@media</span> print &#123;</span><br><span class=\"line\">  <span class=\"selector-class\">.error</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">border</span>: <span class=\"number\">1px</span> <span class=\"number\">#f00</span>;</span><br><span class=\"line\">    <span class=\"attribute\">background-color</span>: <span class=\"number\">#fdd</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"selector-class\">.seriousError</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">@extend</span> .error;</span><br><span class=\"line\">    <span class=\"attribute\">border-width</span>: <span class=\"number\">3px</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></div>\n<p>但不可以这样：</p>\n<div class=\"code-panel__wrapper\" autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\"><header class=\"mac-panel\"><span class=\"doc-path\"></span><span class=\"mac-panel__language\">SCSS</span></header><figure class=\"iseeu highlight scss\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.error</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">border</span>: <span class=\"number\">1px</span> <span class=\"number\">#f00</span>;</span><br><span class=\"line\">  <span class=\"attribute\">background-color</span>: <span class=\"number\">#fdd</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">@media</span> print &#123;</span><br><span class=\"line\">  <span class=\"selector-class\">.seriousError</span> &#123;</span><br><span class=\"line\">    <span class=\"comment\">// INVALID EXTEND: .error is used outside of the \"@media print\" directive</span></span><br><span class=\"line\">    <span class=\"keyword\">@extend</span> .error;</span><br><span class=\"line\">    <span class=\"attribute\">border-width</span>: <span class=\"number\">3px</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></div>\n<p>希望有一天，浏览器可以原生支持 <code>@extend</code> 指令，这样就可以在任何指令中使用延伸功能，不再受限制了。</p>\n<h2 id=\"控制指令\"><a href=\"#控制指令\" class=\"headerlink\" title=\"控制指令\"></a>控制指令</h2><p>SassScript 提供了一些基础的控制指令，比如在满足一定条件时引用样式，或者设定范围重复输出格式。控制指令是一种高级功能，日常编写过程中并不常用到，主要与混合指令 (mixin) 配合使用。</p>\n<h3 id=\"if\"><a href=\"#if\" class=\"headerlink\" title=\"@if\"></a>@if</h3><p>当 @if 的表达式返回值不是 <code>false</code> 或者 <code>null</code> 时，条件成立，输出 <code>{}</code> 内的代码：</p>\n<div class=\"code-panel__wrapper\" autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\"><header class=\"mac-panel\"><span class=\"doc-path\"></span><span class=\"mac-panel__language\">SCSS</span></header><figure class=\"iseeu highlight scss\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">p</span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">@if</span> <span class=\"number\">1</span> + <span class=\"number\">1</span> == <span class=\"number\">2</span> &#123; <span class=\"attribute\">border</span>: <span class=\"number\">1px</span> solid; &#125;</span><br><span class=\"line\">  <span class=\"keyword\">@if</span> <span class=\"number\">5</span> &lt; <span class=\"number\">3</span> &#123; <span class=\"attribute\">border</span>: <span class=\"number\">2px</span> dotted; &#125;</span><br><span class=\"line\">  <span class=\"keyword\">@if</span> null  &#123; <span class=\"attribute\">border</span>: <span class=\"number\">3px</span> double; &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></div>\n<p>编译为</p>\n<div class=\"code-panel__wrapper\" autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\"><header class=\"mac-panel\"><span class=\"doc-path\"></span><span class=\"mac-panel__language\">CSS</span></header><figure class=\"iseeu highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">p</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">border</span>: <span class=\"number\">1px</span> solid; &#125;</span><br></pre></td></tr></table></figure></div>\n<p><code>@if</code> 声明后面可以跟多个 <code>@else if</code> 声明，或者一个 <code>@else</code> 声明。如果 <code>@if</code> 声明失败，Sass 将逐条执行 <code>@else if</code> 声明，如果全部失败，最后执行 <code>@else</code> 声明，例如：</p>\n<div class=\"code-panel__wrapper\" autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\"><header class=\"mac-panel\"><span class=\"doc-path\"></span><span class=\"mac-panel__language\">SCSS</span></header><figure class=\"iseeu highlight scss\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$type</span>: monster;</span><br><span class=\"line\"><span class=\"selector-tag\">p</span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">@if</span> <span class=\"variable\">$type</span> == ocean &#123;</span><br><span class=\"line\">    <span class=\"attribute\">color</span>: blue;</span><br><span class=\"line\">  &#125; <span class=\"keyword\">@else</span> if <span class=\"variable\">$type</span> == matador &#123;</span><br><span class=\"line\">    <span class=\"attribute\">color</span>: red;</span><br><span class=\"line\">  &#125; <span class=\"keyword\">@else</span> if <span class=\"variable\">$type</span> == monster &#123;</span><br><span class=\"line\">    <span class=\"attribute\">color</span>: green;</span><br><span class=\"line\">  &#125; <span class=\"keyword\">@else</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">color</span>: black;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></div>\n<p>编译为</p>\n<div class=\"code-panel__wrapper\" autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\"><header class=\"mac-panel\"><span class=\"doc-path\"></span><span class=\"mac-panel__language\">CSS</span></header><figure class=\"iseeu highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">p</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">color</span>: green; &#125;</span><br></pre></td></tr></table></figure></div>\n<h3 id=\"for\"><a href=\"#for\" class=\"headerlink\" title=\"@for\"></a>@for</h3><p><code>@for</code> 指令可以在限制的范围内重复输出格式，每次按要求（变量的值）对输出结果做出变动。这个指令包含两种格式：<code>@for $var from &lt;start&gt; through &lt;end&gt;</code>，或者 <code>@for $var from &lt;start&gt; to &lt;end&gt;</code>，区别在于 <code>through</code> 与 <code>to</code> 的含义：当使用 <code>through</code> 时，条件范围包含 <code>&lt;start&gt;</code> 与 <code>&lt;end&gt;</code> 的值，而使用 <code>to</code> 时条件范围只包含 <code>&lt;start&gt;</code> 的值不包含 <code>&lt;end&gt;</code> 的值。另外，<code>$var</code> 可以是任何变量，比如 <code>$i</code>；<code>&lt;start&gt;</code> 和 <code>&lt;end&gt;</code> 必须是整数值。</p>\n<div class=\"code-panel__wrapper\" autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\"><header class=\"mac-panel\"><span class=\"doc-path\"></span><span class=\"mac-panel__language\">SCSS</span></header><figure class=\"iseeu highlight scss\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">@for</span> <span class=\"variable\">$i</span> from <span class=\"number\">1</span> through <span class=\"number\">3</span> &#123;</span><br><span class=\"line\">  <span class=\"selector-class\">.item-</span>#&#123;<span class=\"variable\">$i</span>&#125; &#123; <span class=\"attribute\">width</span>: <span class=\"number\">2em</span> * <span class=\"variable\">$i</span>; &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></div>\n<p>编译为</p>\n<div class=\"code-panel__wrapper\" autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\"><header class=\"mac-panel\"><span class=\"doc-path\"></span><span class=\"mac-panel__language\">CSS</span></header><figure class=\"iseeu highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.item-1</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">width</span>: <span class=\"number\">2em</span>; &#125;</span><br><span class=\"line\"><span class=\"selector-class\">.item-2</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">width</span>: <span class=\"number\">4em</span>; &#125;</span><br><span class=\"line\"><span class=\"selector-class\">.item-3</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">width</span>: <span class=\"number\">6em</span>; &#125;</span><br></pre></td></tr></table></figure></div>\n<h3 id=\"each\"><a href=\"#each\" class=\"headerlink\" title=\"@each\"></a>@each</h3><p><code>@each</code> 指令的格式是 <code>$var in &lt;list&gt;</code>, <code>$var</code> 可以是任何变量名，比如 <code>$length</code> 或者 <code>$name</code>，而 <code>&lt;list&gt;</code> 是一连串的值，也就是值列表。</p>\n<p><code>@each</code> 将变量 <code>$var</code> 作用于值列表中的每一个项目，然后输出结果，例如：</p>\n<div class=\"code-panel__wrapper\" autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\"><header class=\"mac-panel\"><span class=\"doc-path\"></span><span class=\"mac-panel__language\">SCSS</span></header><figure class=\"iseeu highlight scss\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">@each</span> <span class=\"variable\">$animal</span> in puma, sea-slug, egret, salamander &#123;</span><br><span class=\"line\">  .#&#123;<span class=\"variable\">$animal</span>&#125;-<span class=\"attribute\">icon</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">background-image</span>: url(<span class=\"string\">'/images/#&#123;$animal&#125;.png'</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></div>\n<p>编译为</p>\n<div class=\"code-panel__wrapper\" autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\"><header class=\"mac-panel\"><span class=\"doc-path\"></span><span class=\"mac-panel__language\">CSS</span></header><figure class=\"iseeu highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.puma-icon</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">background-image</span>: <span class=\"built_in\">url</span>(<span class=\"string\">'/images/puma.png'</span>); &#125;</span><br><span class=\"line\"><span class=\"selector-class\">.sea-slug-icon</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">background-image</span>: <span class=\"built_in\">url</span>(<span class=\"string\">'/images/sea-slug.png'</span>); &#125;</span><br><span class=\"line\"><span class=\"selector-class\">.egret-icon</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">background-image</span>: <span class=\"built_in\">url</span>(<span class=\"string\">'/images/egret.png'</span>); &#125;</span><br><span class=\"line\"><span class=\"selector-class\">.salamander-icon</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">background-image</span>: <span class=\"built_in\">url</span>(<span class=\"string\">'/images/salamander.png'</span>); &#125;</span><br></pre></td></tr></table></figure></div>\n<h3 id=\"while\"><a href=\"#while\" class=\"headerlink\" title=\"@while\"></a>@while</h3><p><code>@while</code> 指令重复输出格式直到表达式返回结果为 <code>false</code>。这样可以实现比 <code>@for</code> 更复杂的循环，只是很少会用到。例如：</p>\n<div class=\"code-panel__wrapper\" autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\"><header class=\"mac-panel\"><span class=\"doc-path\"></span><span class=\"mac-panel__language\">SCSS</span></header><figure class=\"iseeu highlight scss\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$i</span>: <span class=\"number\">6</span>;</span><br><span class=\"line\"><span class=\"keyword\">@while</span> <span class=\"variable\">$i</span> &gt; <span class=\"number\">0</span> &#123;</span><br><span class=\"line\">  <span class=\"selector-class\">.item-</span>#&#123;<span class=\"variable\">$i</span>&#125; &#123; <span class=\"attribute\">width</span>: <span class=\"number\">2em</span> * <span class=\"variable\">$i</span>; &#125;</span><br><span class=\"line\">  <span class=\"variable\">$i</span>: <span class=\"variable\">$i</span> - <span class=\"number\">2</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></div>\n<p>编译为</p>\n<div class=\"code-panel__wrapper\" autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\"><header class=\"mac-panel\"><span class=\"doc-path\"></span><span class=\"mac-panel__language\">CSS</span></header><figure class=\"iseeu highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.item-6</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">width</span>: <span class=\"number\">12em</span>; &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-class\">.item-4</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">width</span>: <span class=\"number\">8em</span>; &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-class\">.item-2</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">width</span>: <span class=\"number\">4em</span>; &#125;</span><br></pre></td></tr></table></figure></div>\n<h2 id=\"混合指令\"><a href=\"#混合指令\" class=\"headerlink\" title=\"混合指令\"></a>混合指令</h2><p>混合指令（Mixin）用于定义可重复使用的样式，避免了使用无语意的 class，比如 <code>.float-left</code>。混合指令可以包含所有的 CSS 规则，绝大部分 Sass 规则，甚至通过参数功能引入变量，输出多样化的样式。</p>\n<h3 id=\"定义混合指令-mixin\"><a href=\"#定义混合指令-mixin\" class=\"headerlink\" title=\"定义混合指令 @mixin\"></a>定义混合指令 <code>@mixin</code></h3><p>混合指令的用法是在 <code>@mixin</code> 后添加名称与样式，比如名为 <code>large-text</code> 的混合通过下面的代码定义</p>\n<div class=\"code-panel__wrapper\" autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\"><header class=\"mac-panel\"><span class=\"doc-path\"></span><span class=\"mac-panel__language\">SCSS</span></header><figure class=\"iseeu highlight scss\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">@mixin</span> large-text &#123;</span><br><span class=\"line\">  <span class=\"attribute\">font</span>: &#123;</span><br><span class=\"line\">    family: Arial;</span><br><span class=\"line\">    size: <span class=\"number\">20px</span>;</span><br><span class=\"line\">    weight: bold;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></div>\n<p>混合指令也可以包含选择器和属性，甚至可以用 <code>&amp;</code> 引用父选择器</p>\n<div class=\"code-panel__wrapper\" autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\"><header class=\"mac-panel\"><span class=\"doc-path\"></span><span class=\"mac-panel__language\">SCSS</span></header><figure class=\"iseeu highlight scss\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">@mixin</span> clearfix &#123;</span><br><span class=\"line\">  <span class=\"attribute\">display</span>: inline-block;</span><br><span class=\"line\">  &amp;<span class=\"selector-pseudo\">:after</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">content</span>: <span class=\"string\">\".\"</span>;</span><br><span class=\"line\">    <span class=\"attribute\">display</span>: block;</span><br><span class=\"line\">    <span class=\"attribute\">height</span>: <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"attribute\">clear</span>: both;</span><br><span class=\"line\">    <span class=\"attribute\">visibility</span>: hidden;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  * <span class=\"selector-tag\">html</span> &amp; &#123; <span class=\"attribute\">height</span>: <span class=\"number\">1px</span> &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></div>\n<h3 id=\"引用混合指令-include\"><a href=\"#引用混合指令-include\" class=\"headerlink\" title=\"引用混合指令 @include\"></a>引用混合指令 <code>@include</code></h3><p>使用 <code>@include</code> 指令引用混合样式</p>\n<div class=\"code-panel__wrapper\" autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\"><header class=\"mac-panel\"><span class=\"doc-path\"></span><span class=\"mac-panel__language\">SCSS</span></header><figure class=\"iseeu highlight scss\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.page-title</span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">@include</span> large-text;</span><br><span class=\"line\">  <span class=\"attribute\">padding</span>: <span class=\"number\">4px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">margin-top</span>: <span class=\"number\">10px</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></div>\n<p>编译为</p>\n<div class=\"code-panel__wrapper\" autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\"><header class=\"mac-panel\"><span class=\"doc-path\"></span><span class=\"mac-panel__language\">SCSS</span></header><figure class=\"iseeu highlight scss\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.page-title</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">font-family</span>: Arial;</span><br><span class=\"line\">  <span class=\"attribute\">font-size</span>: <span class=\"number\">20px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">font-weight</span>: bold;</span><br><span class=\"line\">  <span class=\"attribute\">padding</span>: <span class=\"number\">4px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">margin-top</span>: <span class=\"number\">10px</span>; &#125;</span><br></pre></td></tr></table></figure></div>\n<blockquote>\n<p>混合指令类似于 javascript 函数,除非引用，否则不会出现在结果中**</p>\n</blockquote>\n<p>也可以不使用父选择器在最外层直接引用混合样式</p>\n<div class=\"code-panel__wrapper\" autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\"><header class=\"mac-panel\"><span class=\"doc-path\"></span><span class=\"mac-panel__language\">SCSS</span></header><figure class=\"iseeu highlight scss\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">@mixin</span> silly-links &#123;</span><br><span class=\"line\">  <span class=\"selector-tag\">a</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">color</span>: blue;</span><br><span class=\"line\">    <span class=\"attribute\">background-color</span>: red;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">@include</span> silly-links;</span><br></pre></td></tr></table></figure></div>\n<p>编译为</p>\n<div class=\"code-panel__wrapper\" autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\"><header class=\"mac-panel\"><span class=\"doc-path\"></span><span class=\"mac-panel__language\">CSS</span></header><figure class=\"iseeu highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">a</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">color</span>: blue;</span><br><span class=\"line\">  <span class=\"attribute\">background-color</span>: red; &#125;</span><br></pre></td></tr></table></figure></div>\n<p>混合样式中也可以包含其他混合样式，比如</p>\n<div class=\"code-panel__wrapper\" autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\"><header class=\"mac-panel\"><span class=\"doc-path\"></span><span class=\"mac-panel__language\">SCSS</span></header><figure class=\"iseeu highlight scss\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">@mixin</span> compound &#123;</span><br><span class=\"line\">  <span class=\"keyword\">@include</span> highlighted-background;</span><br><span class=\"line\">  <span class=\"keyword\">@include</span> header-text;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">@mixin</span> highlighted-background &#123; <span class=\"attribute\">background-color</span>: <span class=\"number\">#fc0</span>; &#125;</span><br><span class=\"line\"><span class=\"keyword\">@mixin</span> header-text &#123; <span class=\"attribute\">font-size</span>: <span class=\"number\">20px</span>; &#125;</span><br></pre></td></tr></table></figure></div>\n<p>混合样式中应该只定义后代选择器，这样可以安全的导入到文件的任何位置。</p>\n<h3 id=\"参数\"><a href=\"#参数\" class=\"headerlink\" title=\"参数\"></a>参数</h3><p>参数用于给混合指令中的样式设定变量，并且赋值使用。在定义混合指令的时候，按照变量的格式，通过逗号分隔，将参数写进圆括号里。引用指令时，按照参数的顺序，再将所赋的值对应写进括号</p>\n<div class=\"code-panel__wrapper\" autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\"><header class=\"mac-panel\"><span class=\"doc-path\"></span><span class=\"mac-panel__language\">SCSS</span></header><figure class=\"iseeu highlight scss\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">@mixin</span> sexy-border(<span class=\"variable\">$color</span>, <span class=\"variable\">$width</span>) &#123;</span><br><span class=\"line\">  <span class=\"attribute\">border</span>: &#123;</span><br><span class=\"line\">    color: <span class=\"variable\">$color</span>;</span><br><span class=\"line\">    <span class=\"attribute\">width</span>: <span class=\"variable\">$width</span>;</span><br><span class=\"line\">    <span class=\"selector-tag\">style</span>: dashed;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-tag\">p</span> &#123; <span class=\"keyword\">@include</span> sexy-border(blue, <span class=\"number\">1in</span>); &#125;</span><br></pre></td></tr></table></figure></div>\n<p>编译为</p>\n<div class=\"code-panel__wrapper\" autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\"><header class=\"mac-panel\"><span class=\"doc-path\"></span><span class=\"mac-panel__language\">CSS</span></header><figure class=\"iseeu highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">p</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">border-color</span>: blue;</span><br><span class=\"line\">  <span class=\"attribute\">border-width</span>: <span class=\"number\">1in</span>;</span><br><span class=\"line\">  <span class=\"attribute\">border-style</span>: dashed; &#125;</span><br></pre></td></tr></table></figure></div>\n<p>混合指令也可以使用给变量赋值的方法给参数设定默认值，然后，当这个指令被引用的时候，如果没有给参数赋值，则自动使用默认值：</p>\n<div class=\"code-panel__wrapper\" autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\"><header class=\"mac-panel\"><span class=\"doc-path\"></span><span class=\"mac-panel__language\">SCSS</span></header><figure class=\"iseeu highlight scss\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">@mixin</span> sexy-border(<span class=\"variable\">$color</span>, <span class=\"variable\">$width</span>: <span class=\"number\">1in</span>) &#123;</span><br><span class=\"line\">  <span class=\"attribute\">border</span>: &#123;</span><br><span class=\"line\">    color: <span class=\"variable\">$color</span>;</span><br><span class=\"line\">    <span class=\"attribute\">width</span>: <span class=\"variable\">$width</span>;</span><br><span class=\"line\">    <span class=\"selector-tag\">style</span>: dashed;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-tag\">p</span> &#123; <span class=\"keyword\">@include</span> sexy-border(blue); &#125;</span><br><span class=\"line\"><span class=\"selector-tag\">h1</span> &#123; <span class=\"keyword\">@include</span> sexy-border(blue, <span class=\"number\">2in</span>); &#125;</span><br></pre></td></tr></table></figure></div>\n<p>编译为</p>\n<div class=\"code-panel__wrapper\" autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\"><header class=\"mac-panel\"><span class=\"doc-path\"></span><span class=\"mac-panel__language\">CSS</span></header><figure class=\"iseeu highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">p</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">border-color</span>: blue;</span><br><span class=\"line\">  <span class=\"attribute\">border-width</span>: <span class=\"number\">1in</span>;</span><br><span class=\"line\">  <span class=\"attribute\">border-style</span>: dashed; &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-tag\">h1</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">border-color</span>: blue;</span><br><span class=\"line\">  <span class=\"attribute\">border-width</span>: <span class=\"number\">2in</span>;</span><br><span class=\"line\">  <span class=\"attribute\">border-style</span>: dashed; &#125;</span><br></pre></td></tr></table></figure></div>\n<h3 id=\"关键词参数\"><a href=\"#关键词参数\" class=\"headerlink\" title=\"关键词参数\"></a>关键词参数</h3><p>混合指令也可以使用关键词参数，上面的例子也可以写成：</p>\n<div class=\"code-panel__wrapper\" autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\"><header class=\"mac-panel\"><span class=\"doc-path\"></span><span class=\"mac-panel__language\">SCSS</span></header><figure class=\"iseeu highlight scss\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">p</span> &#123; <span class=\"keyword\">@include</span> sexy-border(<span class=\"variable\">$color</span>: blue); &#125;</span><br><span class=\"line\"><span class=\"selector-tag\">h1</span> &#123; <span class=\"keyword\">@include</span> sexy-border(<span class=\"variable\">$color</span>: blue, <span class=\"variable\">$width</span>: <span class=\"number\">2in</span>); &#125;</span><br></pre></td></tr></table></figure></div>\n<p>虽然不够简明，但是阅读起来会更方便。关键词参数给函数提供了更灵活的接口，以及容易调用的参数。关键词参数可以打乱顺序使用，如果使用默认值也可以省缺，另外，参数名被视为变量名，下划线、短横线可以互换使用。</p>\n<h3 id=\"可变参数\"><a href=\"#可变参数\" class=\"headerlink\" title=\"可变参数\"></a>可变参数</h3><p>有时，不能确定混合指令需要使用多少个参数，比如一个关于 <code>box-shadow</code> 的混合指令不能确定有多少个 ‘shadow’ 会被用到。这时，可以使用参数变量 <code>…</code> 声明（写在参数的最后方）告诉 Sass 将这些参数视为值列表处理</p>\n<div class=\"code-panel__wrapper\" autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\"><header class=\"mac-panel\"><span class=\"doc-path\"></span><span class=\"mac-panel__language\">SCSS</span></header><figure class=\"iseeu highlight scss\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">@mixin</span> box-shadow(<span class=\"variable\">$shadows</span>...) &#123;</span><br><span class=\"line\">  <span class=\"attribute\">box-shadow</span>: <span class=\"variable\">$shadows</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-class\">.shadows</span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">@include</span> box-shadow(<span class=\"number\">0px</span> <span class=\"number\">4px</span> <span class=\"number\">5px</span> <span class=\"number\">#666</span>, <span class=\"number\">2px</span> <span class=\"number\">6px</span> <span class=\"number\">10px</span> <span class=\"number\">#999</span>);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></div>\n<p>编译为</p>\n<div class=\"code-panel__wrapper\" autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\"><header class=\"mac-panel\"><span class=\"doc-path\"></span><span class=\"mac-panel__language\">CSS</span></header><figure class=\"iseeu highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.shadows</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">box-shadow</span>: <span class=\"number\">0px</span> <span class=\"number\">4px</span> <span class=\"number\">5px</span> <span class=\"number\">#666</span>, <span class=\"number\">2px</span> <span class=\"number\">6px</span> <span class=\"number\">10px</span> <span class=\"number\">#999</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></div>\n<p>有时，我们可以确定混合指令中的部分参数，其余的参数数不确定的</p>\n<div class=\"code-panel__wrapper\" autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\"><header class=\"mac-panel\"><span class=\"doc-path\"></span><span class=\"mac-panel__language\">SCSS</span></header><figure class=\"iseeu highlight scss\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">@mixin</span> test(<span class=\"variable\">$color</span>, <span class=\"variable\">$shadows</span>...) &#123;</span><br><span class=\"line\">  <span class=\"selector-tag\">a</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">color</span>: <span class=\"variable\">$color</span>;</span><br><span class=\"line\">    <span class=\"attribute\">box-shadow</span>: <span class=\"variable\">$shadows</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"variable\">$color</span>: red;</span><br><span class=\"line\"><span class=\"variable\">$shadows</span>: <span class=\"number\">0px</span> <span class=\"number\">4px</span> <span class=\"number\">5px</span> <span class=\"number\">#666</span>, <span class=\"number\">2px</span> <span class=\"number\">6px</span> <span class=\"number\">10px</span> <span class=\"number\">#999</span>;</span><br><span class=\"line\"><span class=\"keyword\">@include</span> test(<span class=\"variable\">$color</span>, <span class=\"variable\">$shadows</span>)</span><br></pre></td></tr></table></figure></div>\n<p>编译为</p>\n<div class=\"code-panel__wrapper\" autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\"><header class=\"mac-panel\"><span class=\"doc-path\"></span><span class=\"mac-panel__language\">CSS</span></header><figure class=\"iseeu highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">a</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">color</span>: red;</span><br><span class=\"line\">  <span class=\"attribute\">box-shadow</span>: <span class=\"number\">0px</span> <span class=\"number\">4px</span> <span class=\"number\">5px</span> <span class=\"number\">#666</span>, <span class=\"number\">2px</span> <span class=\"number\">6px</span> <span class=\"number\">10px</span> <span class=\"number\">#999</span>; &#125;</span><br></pre></td></tr></table></figure></div>\n<blockquote>\n<p><strong>一定要注意，可变参数必须放在最后</strong></p>\n</blockquote>\n<h3 id=\"向混合样式中导入内容\"><a href=\"#向混合样式中导入内容\" class=\"headerlink\" title=\"向混合样式中导入内容\"></a>向混合样式中导入内容</h3><p>在引用混合样式的时候，可以先将一段代码导入到混合指令中，然后再输出混合样式，额外导入的部分将出现在 <code>@content</code> 标志的地方：</p>\n<div class=\"code-panel__wrapper\" autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\"><header class=\"mac-panel\"><span class=\"doc-path\"></span><span class=\"mac-panel__language\">SCSS</span></header><figure class=\"iseeu highlight scss\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">@mixin</span> apply-to-ie6-<span class=\"keyword\">only</span> &#123;</span><br><span class=\"line\">  * <span class=\"selector-tag\">html</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">@content</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">@include</span> apply-to-ie6-<span class=\"keyword\">only</span> &#123;</span><br><span class=\"line\">  <span class=\"selector-id\">#logo</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">background-image</span>: url(<span class=\"string\">'/logo.gif'</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></div>\n<p>编译为</p>\n<div class=\"code-panel__wrapper\" autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\"><header class=\"mac-panel\"><span class=\"doc-path\"></span><span class=\"mac-panel__language\">CSS</span></header><figure class=\"iseeu highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">* <span class=\"selector-tag\">html</span> <span class=\"selector-id\">#logo</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">background-image</span>: <span class=\"built_in\">url</span>(/logo.gif);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></div>\n<blockquote>\n<p>当 @content 在指令中出现过多次或者出现在循环中时，额外的代码将被导入到每一个地方。</p>\n</blockquote>\n<h2 id=\"函数指令\"><a href=\"#函数指令\" class=\"headerlink\" title=\"函数指令\"></a>函数指令</h2><h3 id=\"自定义函数\"><a href=\"#自定义函数\" class=\"headerlink\" title=\"自定义函数\"></a>自定义函数</h3><p>Sass 支持自定义函数，并能在任何属性值或 SassScript 中使用：</p>\n<div class=\"code-panel__wrapper\" autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\"><header class=\"mac-panel\"><span class=\"doc-path\"></span><span class=\"mac-panel__language\">SCSS</span></header><figure class=\"iseeu highlight scss\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$grid-width</span>: <span class=\"number\">40px</span>;</span><br><span class=\"line\"><span class=\"variable\">$gutter-width</span>: <span class=\"number\">10px</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">@function</span> grid-width(<span class=\"variable\">$n</span>) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">@return</span> <span class=\"variable\">$n</span> * <span class=\"variable\">$grid-width</span> + (<span class=\"variable\">$n</span> - <span class=\"number\">1</span>) * <span class=\"variable\">$gutter-width</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-id\">#sidebar</span> &#123; <span class=\"attribute\">width</span>: grid-width(<span class=\"number\">5</span>); &#125;</span><br></pre></td></tr></table></figure></div>\n<p>编译为</p>\n<div class=\"code-panel__wrapper\" autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\"><header class=\"mac-panel\"><span class=\"doc-path\"></span><span class=\"mac-panel__language\">CSS</span></header><figure class=\"iseeu highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-id\">#sidebar</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">width</span>: <span class=\"number\">240px</span>; &#125;</span><br></pre></td></tr></table></figure></div>\n<p>与 mixin 相同，也可以传递若干个全局变量给函数作为参数。一个函数可以含有多条语句，需要调用 <code>@return</code> 输出结果。</p>\n<p>自定义的函数也可以使用关键词参数，上面的例子还可以这样写：</p>\n<div class=\"code-panel__wrapper\" autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\"><header class=\"mac-panel\"><span class=\"doc-path\"></span><span class=\"mac-panel__language\">SCSS</span></header><figure class=\"iseeu highlight scss\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-id\">#sidebar</span> &#123; <span class=\"attribute\">width</span>: grid-width(<span class=\"variable\">$n</span>: <span class=\"number\">5</span>); &#125;</span><br></pre></td></tr></table></figure></div>\n<p>建议在自定义函数前添加前缀避免命名冲突，其他人阅读代码时也会知道这不是 Sass 或者 CSS 的自带功能。</p>\n<h3 id=\"sass-中内置的函数\"><a href=\"#sass-中内置的函数\" class=\"headerlink\" title=\"sass 中内置的函数\"></a>sass 中内置的函数</h3><ul>\n<li>字符串函数<ul>\n<li>unquote</li>\n<li>quote</li>\n<li>To-upper-case</li>\n<li>To-lower-case</li>\n<li>percentage</li>\n<li>round</li>\n<li>ceil</li>\n<li>floor</li>\n<li>abs</li>\n<li>min</li>\n<li>max</li>\n<li>random</li>\n</ul>\n</li>\n<li>列表函数<ul>\n<li>length  列表数据的长度</li>\n<li>nth  (10px 20px 30px, 1)</li>\n<li>join  join(10px 20px, 30px 40px)</li>\n<li>append  append(10px 20px ,30px)</li>\n<li>zip  zip(1px 2px 3px,solid dashed dotted,green blue red)</li>\n<li>index  index(1px solid red, solid)</li>\n<li>type-of  type-of(100)</li>\n<li>unit  取单位</li>\n<li>unitless  判断一个值是否带有单位</li>\n<li>comparable  判断两个数是否可以进行加减合并</li>\n<li>if(true,1px,2px)</li>\n</ul>\n</li>\n<li>Maps函数<ul>\n<li>map-get</li>\n<li>map-has-key</li>\n<li>map-keys</li>\n<li>map-values</li>\n<li>map-merge</li>\n<li>map-remove</li>\n<li>keywords</li>\n</ul>\n</li>\n<li>颜色函数<ul>\n<li>rgb</li>\n<li>rgba</li>\n<li>red</li>\n<li>green</li>\n<li>blue</li>\n<li>mix  混合两种颜色 第三个参数为第一种颜色的比例  mix(blue,red,20%)</li>\n<li>lighten  lighten(red, 20%)</li>\n<li>darken  darken(red,30%)</li>\n<li>saturate  改变颜色的饱和度 参数单位为百分比 saturate(blue,20%)</li>\n<li>desaturate</li>\n<li>adjust-hue  通过调整色相 adjust-hue(blue,30deg)</li>\n<li>grayscale  直接让饱和度为0  grayscale(blue)</li>\n<li>alpha  获取透明度</li>\n<li>opacity  获取透明度</li>\n<li>rgba</li>\n<li>fade-in  增加透明度</li>\n<li>transparentize  减少透明度</li>\n<li>fade-out  减少透明度</li>\n</ul>\n</li>\n</ul>\n<div class=\"code-panel__wrapper\" autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\"><header class=\"mac-panel\"><span class=\"doc-path\"></span><span class=\"mac-panel__language\">SCSS</span></header><figure class=\"iseeu highlight scss\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$map</span>: (</span><br><span class=\"line\">  <span class=\"variable\">$key1</span>: value1,</span><br><span class=\"line\">  <span class=\"variable\">$key2</span>: value2,</span><br><span class=\"line\">  <span class=\"variable\">$key3</span>: value3</span><br><span class=\"line\">);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable\">$map</span>: (</span><br><span class=\"line\">  key1: value1,</span><br><span class=\"line\">  key2: (</span><br><span class=\"line\">    key-<span class=\"number\">1</span>: value-<span class=\"number\">1</span>,</span><br><span class=\"line\">    key-<span class=\"number\">2</span>: value-<span class=\"number\">2</span>,</span><br><span class=\"line\">  ),</span><br><span class=\"line\">key3: value3</span><br><span class=\"line\">);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable\">$theme-color</span>: (</span><br><span class=\"line\">  default: (</span><br><span class=\"line\">      bgcolor: <span class=\"number\">#fff</span>,</span><br><span class=\"line\">      text-color: <span class=\"number\">#444</span>,</span><br><span class=\"line\">      link-color: <span class=\"number\">#39f</span></span><br><span class=\"line\">  ),</span><br><span class=\"line\">  primary:(</span><br><span class=\"line\">      bgcolor: <span class=\"number\">#000</span>,</span><br><span class=\"line\">      text-color:<span class=\"number\">#fff</span>,</span><br><span class=\"line\">      link-color: <span class=\"number\">#93f</span></span><br><span class=\"line\">  ),</span><br><span class=\"line\">  negative: (</span><br><span class=\"line\">      bgcolor: <span class=\"number\">#f36</span>,</span><br><span class=\"line\">      text-color: <span class=\"number\">#fefefe</span>,</span><br><span class=\"line\">      link-color: <span class=\"number\">#d4e</span></span><br><span class=\"line\">  )</span><br><span class=\"line\">);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/* map-get */</span></span><br><span class=\"line\"><span class=\"variable\">$social-colors</span>: (</span><br><span class=\"line\">  dribble: <span class=\"number\">#ea4c89</span>,</span><br><span class=\"line\">  facebook: <span class=\"number\">#3b5998</span>,</span><br><span class=\"line\">  github: <span class=\"number\">#171515</span>,</span><br><span class=\"line\">  google: <span class=\"number\">#db4437</span>,</span><br><span class=\"line\">  twitter: <span class=\"number\">#55acee</span></span><br><span class=\"line\">);</span><br><span class=\"line\"><span class=\"selector-class\">.btn-dribble</span>&#123;</span><br><span class=\"line\">  <span class=\"attribute\">color</span>: map-get(<span class=\"variable\">$social-colors</span>,facebook);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">/* 没有值不会报错 */</span></span><br><span class=\"line\"><span class=\"selector-class\">.btn-weibo</span>&#123;</span><br><span class=\"line\">  <span class=\"attribute\">font-size</span>: <span class=\"number\">12px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">color</span>: map-get(<span class=\"variable\">$social-colors</span>,weibo);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/* map中的容错函数 */</span></span><br><span class=\"line\">   <span class=\"keyword\">@function</span> colors(<span class=\"variable\">$color</span>)&#123;</span><br><span class=\"line\">     <span class=\"keyword\">@if</span> <span class=\"keyword\">not</span> map-has-key(<span class=\"variable\">$social-colors</span>,<span class=\"variable\">$color</span>)&#123;</span><br><span class=\"line\">         <span class=\"keyword\">@warn</span> <span class=\"string\">\"No color found for `#&#123;$color&#125;` in $social-colors map. Property omitted.\"</span>;</span><br><span class=\"line\">     &#125;</span><br><span class=\"line\">     <span class=\"keyword\">@return</span> map-get(<span class=\"variable\">$social-colors</span>,<span class=\"variable\">$color</span>);</span><br><span class=\"line\">   &#125;</span><br><span class=\"line\">   <span class=\"selector-class\">.btn-dribble</span> &#123;</span><br><span class=\"line\">     <span class=\"attribute\">color</span>: colors(dribble);</span><br><span class=\"line\">   &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/* each 遍历 map */</span></span><br><span class=\"line\"><span class=\"keyword\">@each</span> <span class=\"variable\">$name</span> in map-keys(<span class=\"variable\">$social-colors</span>)&#123;</span><br><span class=\"line\">  <span class=\"selector-class\">.btn-</span>#&#123;<span class=\"variable\">$name</span>&#125;&#123;</span><br><span class=\"line\">      <span class=\"attribute\">color</span>: colors(<span class=\"variable\">$name</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">@for</span> <span class=\"variable\">$i</span> from <span class=\"number\">1</span> through length(map-keys(<span class=\"variable\">$social-colors</span>))&#123;</span><br><span class=\"line\">  <span class=\"selector-class\">.btn-</span>#&#123;nth(<span class=\"selector-tag\">map</span>-keys(<span class=\"variable\">$social-colors</span>),<span class=\"variable\">$i</span>)&#125; &#123;</span><br><span class=\"line\">    <span class=\"attribute\">color</span>: colors(nth(map-keys(<span class=\"variable\">$social-colors</span>),<span class=\"variable\">$i</span>));</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/*得到所有的值*/</span></span><br><span class=\"line\"><span class=\"variable\">$values</span>: map-values(<span class=\"variable\">$social-colors</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable\">$color</span>: (</span><br><span class=\"line\">  text: <span class=\"number\">#f36</span>,</span><br><span class=\"line\">  link: <span class=\"number\">#f63</span>,</span><br><span class=\"line\">  border: <span class=\"number\">#ddd</span>,</span><br><span class=\"line\">  backround: <span class=\"number\">#fff</span></span><br><span class=\"line\">);</span><br><span class=\"line\"><span class=\"variable\">$typo</span>:(</span><br><span class=\"line\">  font-size: <span class=\"number\">12px</span>,</span><br><span class=\"line\">  line-height: <span class=\"number\">1.6</span></span><br><span class=\"line\">);</span><br><span class=\"line\"><span class=\"variable\">$newcolor</span>: map-merge(<span class=\"variable\">$color</span>, <span class=\"variable\">$typo</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/* 得到新值 */</span></span><br><span class=\"line\"><span class=\"variable\">$map</span>:map-remove(<span class=\"variable\">$social-colors</span>,dribble);</span><br></pre></td></tr></table></figure></div>\n<div class=\"code-panel__wrapper\" autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\"><header class=\"mac-panel\"><span class=\"doc-path\"></span><span class=\"mac-panel__language\">HTML</span></header><figure class=\"iseeu highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">ul</span> <span class=\"attr\">class</span>=<span class=\"string\">\"swatches red\"</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">  ...</span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">ul</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">ul</span> <span class=\"attr\">class</span>=<span class=\"string\">\"swatches orange\"</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">  …</span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">ul</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">ul</span> <span class=\"attr\">class</span>=<span class=\"string\">\"swatches yellow\"</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">  …</span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">ul</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">ul</span> <span class=\"attr\">class</span>=<span class=\"string\">\"swatches green\"</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">  …</span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">ul</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">ul</span> <span class=\"attr\">class</span>=<span class=\"string\">\"swatches blue\"</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">  …</span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">ul</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">ul</span> <span class=\"attr\">class</span>=<span class=\"string\">\"swatches purple\"</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">  …</span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">ul</span>&gt;</span></span><br></pre></td></tr></table></figure></div>\n<div class=\"code-panel__wrapper\" autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\"><header class=\"mac-panel\"><span class=\"doc-path\"></span><span class=\"mac-panel__language\">SCSS</span></header><figure class=\"iseeu highlight scss\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$redBase</span>: <span class=\"number\">#DC143C</span>;</span><br><span class=\"line\"><span class=\"variable\">$orangeBase</span>: saturate(lighten(adjust_hue(<span class=\"variable\">$redBase</span>, <span class=\"number\">39</span>), <span class=\"number\">5</span>), <span class=\"number\">7</span>);<span class=\"comment\">//#f37a16</span></span><br><span class=\"line\"><span class=\"variable\">$yellowBase</span>: saturate(lighten(adjust_hue(<span class=\"variable\">$redBase</span>, <span class=\"number\">64</span>), <span class=\"number\">6</span>), <span class=\"number\">13</span>);<span class=\"comment\">//#fbdc14</span></span><br><span class=\"line\"><span class=\"variable\">$greenBase</span>: desaturate(darken(adjust_hue(<span class=\"variable\">$redBase</span>, <span class=\"number\">102</span>), <span class=\"number\">2</span>), <span class=\"number\">11</span>);<span class=\"comment\">//#73c620</span></span><br><span class=\"line\"><span class=\"variable\">$blueBase</span>: saturate(darken(adjust_hue(<span class=\"variable\">$redBase</span>, <span class=\"number\">201</span>), <span class=\"number\">2</span>), <span class=\"number\">1</span>);<span class=\"comment\">//#12b7d4</span></span><br><span class=\"line\"><span class=\"variable\">$purpleBase</span>: saturate(darken(adjust_hue(<span class=\"variable\">$redBase</span>, <span class=\"number\">296</span>), <span class=\"number\">2</span>), <span class=\"number\">1</span>);<span class=\"comment\">//#a012d4</span></span><br><span class=\"line\"><span class=\"variable\">$blackBase</span>: <span class=\"number\">#777</span>;</span><br><span class=\"line\"><span class=\"variable\">$bgc</span>: <span class=\"number\">#fff</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//定义颜色变暗的 mixin</span></span><br><span class=\"line\"><span class=\"keyword\">@mixin</span> swatchesDarken(<span class=\"variable\">$color</span>) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">@for</span> <span class=\"variable\">$i</span> from <span class=\"number\">1</span> through <span class=\"number\">10</span> &#123;</span><br><span class=\"line\">    <span class=\"variable\">$x</span>:<span class=\"variable\">$i</span>+<span class=\"number\">11</span>;</span><br><span class=\"line\">    <span class=\"selector-tag\">li</span><span class=\"selector-pseudo\">:nth-child</span>(#&#123;<span class=\"variable\">$x</span>&#125;) &#123;</span><br><span class=\"line\">      <span class=\"variable\">$n</span>:<span class=\"variable\">$i</span>*<span class=\"number\">5</span>;</span><br><span class=\"line\">      <span class=\"variable\">$bgc</span>:darken(<span class=\"variable\">$color</span>,<span class=\"variable\">$n</span>); <span class=\"comment\">//颜色变暗</span></span><br><span class=\"line\">      <span class=\"attribute\">background-color</span>: <span class=\"variable\">$bgc</span>;</span><br><span class=\"line\">      &amp;<span class=\"selector-pseudo\">:hover</span><span class=\"selector-pseudo\">:before</span> &#123; <span class=\"comment\">//hover状态显示颜色编号</span></span><br><span class=\"line\">        <span class=\"attribute\">content</span>: <span class=\"string\">\"#&#123;$bgc&#125;\"</span>;</span><br><span class=\"line\">        <span class=\"attribute\">color</span>: lighten(<span class=\"variable\">$bgc</span>,<span class=\"number\">40</span>);</span><br><span class=\"line\">        <span class=\"attribute\">font-family</span>: verdana;</span><br><span class=\"line\">        <span class=\"attribute\">font-size</span>: <span class=\"number\">8px</span>;</span><br><span class=\"line\">        <span class=\"attribute\">padding</span>: <span class=\"number\">2px</span>;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">//定义颜色变亮的 mixin</span></span><br><span class=\"line\"><span class=\"keyword\">@mixin</span> swatchesLighten(<span class=\"variable\">$color</span>) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">@for</span> <span class=\"variable\">$i</span> from <span class=\"number\">1</span> through <span class=\"number\">10</span> &#123;</span><br><span class=\"line\">    <span class=\"variable\">$x</span>:<span class=\"number\">11</span>-<span class=\"variable\">$i</span>;</span><br><span class=\"line\">    <span class=\"selector-tag\">li</span><span class=\"selector-pseudo\">:nth-child</span>(#&#123;<span class=\"variable\">$x</span>&#125;) &#123;</span><br><span class=\"line\">      <span class=\"variable\">$n</span>:<span class=\"variable\">$i</span>*<span class=\"number\">5</span>;</span><br><span class=\"line\">      <span class=\"variable\">$bgc</span>:lighten(<span class=\"variable\">$color</span>,<span class=\"variable\">$n</span>);</span><br><span class=\"line\">      <span class=\"attribute\">background-color</span>: <span class=\"variable\">$bgc</span>;</span><br><span class=\"line\">      &amp;<span class=\"selector-pseudo\">:hover</span><span class=\"selector-pseudo\">:before</span> &#123;</span><br><span class=\"line\">        <span class=\"attribute\">content</span>: <span class=\"string\">\"#&#123;$bgc&#125;\"</span>;</span><br><span class=\"line\">        <span class=\"attribute\">color</span>: darken(<span class=\"variable\">$bgc</span>,<span class=\"number\">40</span>);</span><br><span class=\"line\">        <span class=\"attribute\">font-family</span>: verdana;</span><br><span class=\"line\">        <span class=\"attribute\">font-size</span>: <span class=\"number\">8px</span>;</span><br><span class=\"line\">        <span class=\"attribute\">padding</span>: <span class=\"number\">2px</span>;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-class\">.swatches</span> <span class=\"selector-tag\">li</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">width</span>: <span class=\"number\">4.7619047619%</span>;</span><br><span class=\"line\">  <span class=\"attribute\">float</span>: left;</span><br><span class=\"line\">  <span class=\"attribute\">height</span>: <span class=\"number\">60px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">list-style</span>: none outside none;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-tag\">ul</span><span class=\"selector-class\">.red</span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">@include</span> swatchesLighten(<span class=\"variable\">$redBase</span>);</span><br><span class=\"line\">  <span class=\"keyword\">@include</span> swatchesDarken(<span class=\"variable\">$redBase</span>);</span><br><span class=\"line\">  <span class=\"selector-tag\">li</span><span class=\"selector-pseudo\">:nth-child</span>(11) &#123;</span><br><span class=\"line\">    <span class=\"attribute\">background-color</span>: <span class=\"variable\">$redBase</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-tag\">ul</span><span class=\"selector-class\">.orange</span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">@include</span> swatchesLighten(<span class=\"variable\">$orangeBase</span>);</span><br><span class=\"line\">  <span class=\"keyword\">@include</span> swatchesDarken(<span class=\"variable\">$orangeBase</span>);</span><br><span class=\"line\">  <span class=\"selector-tag\">li</span><span class=\"selector-pseudo\">:nth-child</span>(11) &#123;</span><br><span class=\"line\">    <span class=\"attribute\">background-color</span>: <span class=\"variable\">$orangeBase</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-tag\">ul</span><span class=\"selector-class\">.yellow</span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">@include</span> swatchesLighten(<span class=\"variable\">$yellowBase</span>);</span><br><span class=\"line\">  <span class=\"keyword\">@include</span> swatchesDarken(<span class=\"variable\">$yellowBase</span>);</span><br><span class=\"line\">  <span class=\"selector-tag\">li</span><span class=\"selector-pseudo\">:nth-child</span>(11) &#123;</span><br><span class=\"line\">    <span class=\"attribute\">background-color</span>: <span class=\"variable\">$yellowBase</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-tag\">ul</span><span class=\"selector-class\">.green</span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">@include</span> swatchesLighten(<span class=\"variable\">$greenBase</span>);</span><br><span class=\"line\">  <span class=\"keyword\">@include</span> swatchesDarken(<span class=\"variable\">$greenBase</span>);</span><br><span class=\"line\">  <span class=\"selector-tag\">li</span><span class=\"selector-pseudo\">:nth-child</span>(11) &#123;</span><br><span class=\"line\">    <span class=\"attribute\">background-color</span>: <span class=\"variable\">$greenBase</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-tag\">ul</span><span class=\"selector-class\">.blue</span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">@include</span> swatchesLighten(<span class=\"variable\">$blueBase</span>);</span><br><span class=\"line\">  <span class=\"keyword\">@include</span> swatchesDarken(<span class=\"variable\">$blueBase</span>);</span><br><span class=\"line\">  <span class=\"selector-tag\">li</span><span class=\"selector-pseudo\">:nth-child</span>(11) &#123;</span><br><span class=\"line\">    <span class=\"attribute\">background-color</span>: <span class=\"variable\">$blueBase</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-tag\">ul</span><span class=\"selector-class\">.purple</span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">@include</span> swatchesLighten(<span class=\"variable\">$purpleBase</span>);</span><br><span class=\"line\">  <span class=\"keyword\">@include</span> swatchesDarken(<span class=\"variable\">$purpleBase</span>);</span><br><span class=\"line\">  <span class=\"selector-tag\">li</span><span class=\"selector-pseudo\">:nth-child</span>(11) &#123;</span><br><span class=\"line\">    <span class=\"attribute\">background-color</span>: <span class=\"variable\">$purpleBase</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-tag\">ul</span><span class=\"selector-class\">.black</span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">@include</span> swatchesLighten(<span class=\"variable\">$blackBase</span>);</span><br><span class=\"line\">  <span class=\"keyword\">@include</span> swatchesDarken(<span class=\"variable\">$blackBase</span>);</span><br><span class=\"line\">  <span class=\"selector-tag\">li</span><span class=\"selector-pseudo\">:nth-child</span>(11) &#123;</span><br><span class=\"line\">    <span class=\"attribute\">background-color</span>: <span class=\"variable\">$blackBase</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></div>\n<h2 id=\"最后附上一个rem的例子\"><a href=\"#最后附上一个rem的例子\" class=\"headerlink\" title=\"最后附上一个rem的例子\"></a>最后附上一个rem的例子</h2><div class=\"code-panel__wrapper\" autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\"><header class=\"mac-panel\"><span class=\"doc-path\"></span><span class=\"mac-panel__language\">SCSS</span></header><figure class=\"iseeu highlight scss\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//以750px( iphone6 )为基准定义其他分辨率下的rem</span></span><br><span class=\"line\"><span class=\"keyword\">@mixin</span> useRem(<span class=\"variable\">$size</span>)&#123;</span><br><span class=\"line\">  <span class=\"variable\">$device-list</span> : <span class=\"number\">320px</span>, <span class=\"number\">375px</span> , <span class=\"number\">414px</span>;</span><br><span class=\"line\">  <span class=\"selector-tag\">html</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">@each</span> <span class=\"variable\">$device</span> in <span class=\"variable\">$device-list</span>&#123;</span><br><span class=\"line\">      <span class=\"keyword\">@media</span> screen <span class=\"keyword\">and</span> (min-width: <span class=\"variable\">$device</span>)&#123;</span><br><span class=\"line\">        <span class=\"attribute\">font-size</span>: <span class=\"number\">100px</span> * (<span class=\"variable\">$device</span>/<span class=\"variable\">$size</span>);</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">@include</span> useRem(<span class=\"number\">750px</span>);</span><br></pre></td></tr></table></figure></div>\n","site":{"data":{}},"excerpt":"","more":"<blockquote>\n<p>本文参考<a href=\"https://www.sass.hk/docs/\" target=\"_blank\" rel=\"noopener\">sass 中文网</a>,仅作为个人速查文档使用</p>\n</blockquote>\n<h2 id=\"Sass简介\"><a href=\"#Sass简介\" class=\"headerlink\" title=\"Sass简介\"></a>Sass简介</h2><p>Sass 是一款强化 CSS 的辅助工具，它在 CSS 语法的基础上增加了变量 (variables)、嵌套 (nested rules)、混合 (mixins)、导入 (inline imports) 等高级功能，这些拓展令 CSS 更加强大与优雅。使用 Sass 以及 Sass 的样式库（如 Compass）有助于更好地组织管理样式文件，以及更高效地开发项目。</p>\n<h2 id=\"语法风格\"><a href=\"#语法风格\" class=\"headerlink\" title=\"语法风格\"></a>语法风格</h2><p>Sass 有两种写法，一种是靠缩进代替花括号代替选择器，用换行代替分号，是一种简写格式，这种格式的文件以<code>.sass</code>结尾。另一种写法类似 css 写法，以<code>.scss</code>结尾。</p>\n<blockquote>\n<p>本文均为 scss 格式</p>\n</blockquote>\n<figure class=\"highlight scss\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/* Sass 语法 */</span></span><br><span class=\"line\"><span class=\"selector-tag\">body</span></span><br><span class=\"line\">  <span class=\"attribute\">font-size</span>: <span class=\"number\">14px</span></span><br><span class=\"line\">  color: <span class=\"number\">#333</span></span><br><span class=\"line\"></span><br><span class=\"line\">/* Scss 语法 */</span><br><span class=\"line\">body &#123;</span><br><span class=\"line\">  font-size: <span class=\"number\">14px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">color</span>: <span class=\"number\">#333</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>以上俩段编译的结果是同样的结果</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">body</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">font</span>: <span class=\"number\">100%</span> Helvetica, sans-serif;</span><br><span class=\"line\">  <span class=\"attribute\">color</span>: <span class=\"number\">#333</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"Sass-安装\"><a href=\"#Sass-安装\" class=\"headerlink\" title=\"Sass 安装\"></a>Sass 安装</h2><p>这里以 node-sass 为例</p>\n<p>首先需要安装 <a href=\"https://nodejs.org/en/\" target=\"_blank\" rel=\"noopener\">NodeJs</a>，通过命令行安装：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install -g node-sass</span><br></pre></td></tr></table></figure>\n<h2 id=\"Sass使用\"><a href=\"#Sass使用\" class=\"headerlink\" title=\"Sass使用\"></a>Sass使用</h2><p>在命令中运行 sass</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">node-sass input.scss output.css</span><br></pre></td></tr></table></figure>\n<p>命令行监测单个 sass 文件，每次修改自动保存</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">node-sass -w input.scss output.css</span><br></pre></td></tr></table></figure>\n<p>监视整个文件夹的变化</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sass --watch app/sass:public/stylesheets</span><br></pre></td></tr></table></figure>\n<p>更多命令通过<code>sass --help</code>查看帮助</p>\n<h2 id=\"输出格式\"><a href=\"#输出格式\" class=\"headerlink\" title=\"输出格式\"></a>输出格式</h2><p>Sass 默认的 CSS 输出格式很美观也能清晰反映文档结构，为满足其他需求 Sass 也提供了多种输出格式。</p>\n<p>Sass 提供了四种输出格式，可以通过 <code>:style option</code> 选项设定，或者在命令行中使用 <code>--style</code> 选项。</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">node-sass -w input.scss output.css --style expanded</span><br></pre></td></tr></table></figure>\n<ul>\n<li>nested – Nested （嵌套）样式是 Sass 默认的输出格式，能够清晰反映 CSS 与 HTML 的结构关系。选择器与属性等单独占用一行，缩进量与 Sass 文件中一致，每行的缩进量反映了其在嵌套规则内的层数。当阅读大型 CSS 文件时，这种样式可以很容易地分析文件的主要结构。</li>\n<li>expanded – Expanded 输出更像是手写的样式，选择器、属性等各占用一行，属性根据选择器缩进，而选择器不做任何缩进。</li>\n<li>compact – Compact 输出方式比起上面两种占用的空间更少，每条 CSS 规则只占一行，包含其下的所有属性。嵌套过的选择器在输出时没有空行，不嵌套的选择器会输出空白行作为分隔符。</li>\n<li>compressed – Compressed 输出方式删除所有无意义的空格、空白行、以及注释，力求将文件体积压缩到最小，同时也会做出其他调整，比如会自动替换占用空间最小的颜色表达方式。</li>\n</ul>\n<h2 id=\"注释\"><a href=\"#注释\" class=\"headerlink\" title=\"注释\"></a>注释</h2><p>Sass 支持标准的 CSS 多行注释 <code>/* */</code>，以及单行注释 <code>//</code>，前者会 被完整输出到编译后的 CSS 文件中，而后者则不会。</p>\n<h2 id=\"Sass功能扩展\"><a href=\"#Sass功能扩展\" class=\"headerlink\" title=\"Sass功能扩展\"></a>Sass功能扩展</h2><h3 id=\"嵌套结构\"><a href=\"#嵌套结构\" class=\"headerlink\" title=\"嵌套结构\"></a>嵌套结构</h3><p>Sass 允许将一套 CSS 样式嵌套进另一套样式中，内层的样式将它外层的选择器作为父选择器。</p>\n<blockquote>\n<p>注意不可以无节制地嵌套，会加大浏览器的负担</p>\n</blockquote>\n<figure class=\"highlight scss\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-id\">#main</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">width</span>: <span class=\"number\">97%</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"selector-tag\">p</span>, <span class=\"selector-tag\">div</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">font-size</span>: <span class=\"number\">2em</span>;</span><br><span class=\"line\">    <span class=\"selector-tag\">a</span> &#123; <span class=\"attribute\">font-weight</span>: bold; &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"selector-tag\">pre</span> &#123; <span class=\"attribute\">font-size</span>: <span class=\"number\">3em</span>; &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>编译为</p>\n<figure class=\"highlight scss\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-id\">#main</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">width</span>: <span class=\"number\">97%</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-id\">#main</span> <span class=\"selector-tag\">p</span>, <span class=\"selector-id\">#main</span> <span class=\"selector-tag\">div</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">font-size</span>: <span class=\"number\">2em</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-id\">#main</span> <span class=\"selector-tag\">p</span> <span class=\"selector-tag\">a</span>, <span class=\"selector-id\">#main</span> <span class=\"selector-tag\">div</span> <span class=\"selector-tag\">a</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">font-weight</span>: bold;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-id\">#main</span> <span class=\"selector-tag\">pre</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">font-size</span>: <span class=\"number\">3em</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>嵌套功能避免了重复输入父选择器，而且令复杂的 CSS 结构更易于管理</p>\n<h3 id=\"父选择器\"><a href=\"#父选择器\" class=\"headerlink\" title=\"父选择器\"></a>父选择器</h3><p>在嵌套 CSS 规则时，有时也需要直接使用嵌套外层的父选择器，例如，当给某个元素设定 hover 样式时，或者当 body 元素有某个 classname 时，可以用 &amp; 代表嵌套规则外层的父选择器。</p>\n<figure class=\"highlight scss\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.box</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">color</span>: <span class=\"number\">#333</span>;</span><br><span class=\"line\">  &amp;<span class=\"selector-pseudo\">:hover</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">color</span>: red;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  $<span class=\"selector-class\">.active</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">color</span>: red;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>编译为</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.box</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">color</span>: <span class=\"number\">#333</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-class\">.box</span><span class=\"selector-pseudo\">:hover</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">color</span>: red;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-class\">.box</span><span class=\"selector-class\">.active</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">color</span>: red;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>值得注意的有两点:</p>\n<ul>\n<li>如果包含多层嵌套关系， &amp;会逐层向下传递</li>\n<li>&amp;在编译时会完全解析为外层的父选择器名称，你可以以任何你需要的方式来操作它</li>\n</ul>\n<figure class=\"highlight scss\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.menu</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">color</span>: <span class=\"number\">#333</span>;</span><br><span class=\"line\">  <span class=\"selector-tag\">li</span> &#123;</span><br><span class=\"line\">    &amp;<span class=\"selector-pseudo\">:hover</span> &#123;</span><br><span class=\"line\">      <span class=\"attribute\">color</span>: red;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  &amp;-item &#123;</span><br><span class=\"line\">    <span class=\"attribute\">color</span>: blue;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>编译为</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.menu</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">color</span>: <span class=\"number\">#333</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-class\">.menu</span> <span class=\"selector-tag\">li</span><span class=\"selector-pseudo\">:hover</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">color</span>: red;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-class\">.menu</span> <span class=\"selector-class\">.menu-item</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">color</span>: green;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"属性嵌套\"><a href=\"#属性嵌套\" class=\"headerlink\" title=\"属性嵌套\"></a>属性嵌套</h3><p>有些 CSS 属性遵循相同的命名空间 (namespace)，比如 <code>font-family</code>, <code>font-size</code>, <code>font-weight</code> 都以 <code>font</code> 作为属性的命名空间。为了便于管理这样的属性，同时也为了避免了重复输入，Sass 允许将属性嵌套在命名空间中。</p>\n<figure class=\"highlight scss\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">body</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">font</span>: &#123;</span><br><span class=\"line\">    family: <span class=\"string\">'iconfont'</span>;</span><br><span class=\"line\">    size: <span class=\"number\">20px</span>;</span><br><span class=\"line\">    weight: bold;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>编译为</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">body</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">font-family</span>: <span class=\"string\">'iconfont'</span>;</span><br><span class=\"line\">  <span class=\"attribute\">font-size</span>: <span class=\"number\">20px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">font-weight</span>: bold;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"SassScript\"><a href=\"#SassScript\" class=\"headerlink\" title=\"SassScript\"></a>SassScript</h2><p>Sass在 css 的基础上提供了一些名为 SassScript 的功能，允许使用变量、运算、函数等额外的功能。这也是 Sass 语言最强大的地方。</p>\n<h3 id=\"变量\"><a href=\"#变量\" class=\"headerlink\" title=\"变量\"></a>变量</h3><p>SassScript 最普遍的用法就是变量，变量以<code>$</code>开头，赋值方法与 CSS 属性的写法一样</p>\n<figure class=\"highlight scss\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$width</span>: <span class=\"number\">20px</span>;</span><br></pre></td></tr></table></figure>\n<p>变量可以直接使用</p>\n<figure class=\"highlight scss\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.box</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">width</span>: <span class=\"variable\">$width</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>编译为</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.box</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">width</span>: <span class=\"number\">20px</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>变量支持块级作用域，嵌套规则内定义的变量只能在嵌套规则内使用（局部变量），不在嵌套规则内定义的变量则可在任何地方使用（全局变量）。</p>\n<figure class=\"highlight scss\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.menu</span> &#123;</span><br><span class=\"line\">  <span class=\"variable\">$width</span>: <span class=\"number\">100px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">width</span>: <span class=\"variable\">$width</span>;</span><br><span class=\"line\">  <span class=\"selector-class\">.menu-item</span> &#123;</span><br><span class=\"line\">    <span class=\"variable\">$width</span>: <span class=\"number\">20px</span>;</span><br><span class=\"line\">    <span class=\"attribute\">width</span>: <span class=\"variable\">$width</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>编译为</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.menu</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">width</span>: <span class=\"number\">100px</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-class\">.menu</span> <span class=\"selector-class\">.menu-item</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">width</span>: <span class=\"number\">20px</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>可以通过添加<code>!global</code>将局部变量转换为全局变量</p>\n<h3 id=\"数据类型\"><a href=\"#数据类型\" class=\"headerlink\" title=\"数据类型\"></a>数据类型</h3><p>sassScript支持 7 种主要的数据类型:</p>\n<ul>\n<li>数字 <code>1, 2, 3px</code></li>\n<li>字符串，有引号字符串与无引号字符串 <code>&quot;foo&quot;, &#39;bar&#39;, baz</code></li>\n<li>颜色 <code>blue, #04a3f9, rgba(255,0,0,0.5)</code></li>\n<li>布尔型 <code>true, false</code></li>\n<li>空值 <code>null</code></li>\n<li>数组 (list)，用空格或逗号作分隔符 <code>1.5em 1em 0 2em, Helvetica, Arial, sans-serif</code></li>\n<li>maps, 相当于 JavaScript 的 object <code>(key1: value1, key2: value2)</code></li>\n</ul>\n<p>SassScript 也支持其他 CSS 属性值，比如 Unicode 字符集，或 !important 声明。然而Sass 不会特殊对待这些属性值，一律视为无引号字符串。</p>\n<h3 id=\"插值语句\"><a href=\"#插值语句\" class=\"headerlink\" title=\"插值语句 #{}\"></a>插值语句 <code>#{}</code></h3><p>通过 #{} 插值语句可以在选择器或属性名中使用变量,方式<strong>等同于es6语法中的<code>${}</code></strong></p>\n<figure class=\"highlight scss\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$name</span>: foo;</span><br><span class=\"line\"><span class=\"variable\">$attr</span>: border;</span><br><span class=\"line\"><span class=\"variable\">$color</span>: blue;</span><br><span class=\"line\"><span class=\"selector-tag\">p</span>.#&#123;<span class=\"variable\">$name</span>&#125; &#123;</span><br><span class=\"line\">  #&#123;<span class=\"variable\">$attr</span>&#125;-<span class=\"attribute\">color</span>: #&#123;<span class=\"variable\">$color</span>&#125;;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>编译为</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">p</span><span class=\"selector-class\">.foo</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">border-color</span>: blue;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>使用插值可以避免 Sass 运行运算表达式，直接编译 CSS。</p>\n<figure class=\"highlight scss\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">p</span> &#123;</span><br><span class=\"line\">  <span class=\"variable\">$font-size</span>: <span class=\"number\">12px</span>;</span><br><span class=\"line\">  <span class=\"variable\">$line-height</span>: <span class=\"number\">30px</span>;</span><br><span class=\"line\">  <span class=\"variable\">$width</span>: <span class=\"number\">20px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">font</span>: #&#123;<span class=\"variable\">$font-size</span>&#125;/#&#123;<span class=\"variable\">$line-height</span>&#125;;</span><br><span class=\"line\">  <span class=\"attribute\">width</span>: calc(<span class=\"number\">100%</span> - #&#123;<span class=\"variable\">$width</span>&#125;);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>编译为</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">p</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">font</span>: <span class=\"number\">12px</span>/<span class=\"number\">30px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">width</span>: <span class=\"built_in\">calc</span>(<span class=\"number\">100%</span> - <span class=\"number\">20px</span>);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"定义初始值\"><a href=\"#定义初始值\" class=\"headerlink\" title=\"定义初始值\"></a>定义初始值</h3><p>可以在变量的结尾添加 <code>!default</code> 给一个未通过 <code>!default</code> 声明赋值的变量赋值，此时，如果变量已经被赋值，不会再被重新赋值，但是如果变量还没有被赋值，则会被赋予新的值。</p>\n<figure class=\"highlight scss\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$content</span>: <span class=\"string\">\"First content\"</span>;</span><br><span class=\"line\"><span class=\"variable\">$content</span>: <span class=\"string\">\"Second content?\"</span> !default;</span><br><span class=\"line\"><span class=\"variable\">$new_content</span>: <span class=\"string\">\"First time reference\"</span> !default;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-id\">#main</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">content</span>: <span class=\"variable\">$content</span>;</span><br><span class=\"line\">  new-<span class=\"attribute\">content</span>: <span class=\"variable\">$new_content</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>编译为</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-id\">#main</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">content</span>: <span class=\"string\">\"First content\"</span>;</span><br><span class=\"line\">  <span class=\"attribute\">new-content</span>: <span class=\"string\">\"First time reference\"</span>; &#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"运算\"><a href=\"#运算\" class=\"headerlink\" title=\"运算\"></a>运算</h3><p>所有数据类型均支持相等运算 == 或 !=，此外，每种数据类型也有其各自支持的运算方式。</p>\n<h4 id=\"数字运算\"><a href=\"#数字运算\" class=\"headerlink\" title=\"数字运算\"></a>数字运算</h4><p>SassScript 支持数字的加减乘除、取整等运算 <code>(+, -, *, /, %)</code>，如果必要会在不同单位间转换值。</p>\n<figure class=\"highlight scss\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">p</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">width</span>: <span class=\"number\">1in</span> + <span class=\"number\">8pt</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>编译为</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">p</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">width</span>: <span class=\"number\">1.111in</span>; &#125;</span><br></pre></td></tr></table></figure>\n<p>关系运算 &lt;, &gt;, &lt;=, &gt;= 也可用于数字运算，相等运算 ==, != 可用于所有数据类型。</p>\n<h5 id=\"除法运算\"><a href=\"#除法运算\" class=\"headerlink\" title=\"除法运算\"></a>除法运算</h5><p><code>/</code> 在 CSS 中原本起到分隔数字的用途，SassScript 作为 CSS 语言的拓展在支持原本功能的同时也赋予了 <code>/</code> 除法运算的功能。也就是说，在 SassScript 中，<code>/</code>可以作为分隔符，也可以作为除法运算符。</p>\n<p>以下三种情况 <code>/</code> 将被视为除法运算符号：</p>\n<ul>\n<li>如果值，或值的一部分，是变量或者函数的返回值</li>\n<li>如果值被圆括号包裹</li>\n<li>如果值是算数表达式的一部分</li>\n</ul>\n<figure class=\"highlight scss\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">p</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">font</span>: <span class=\"number\">10px</span>/<span class=\"number\">8px</span>;             <span class=\"comment\">// css语法，作为分隔符使用</span></span><br><span class=\"line\">  <span class=\"variable\">$width</span>: <span class=\"number\">1000px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">width</span>: <span class=\"variable\">$width</span>/<span class=\"number\">2</span>;            <span class=\"comment\">// 使用了变量，是除法运算</span></span><br><span class=\"line\">  <span class=\"attribute\">width</span>: round(<span class=\"number\">1.5</span>)/<span class=\"number\">2</span>;        <span class=\"comment\">// 使用了函数，是除法运算</span></span><br><span class=\"line\">  <span class=\"attribute\">height</span>: (<span class=\"number\">500px</span>/<span class=\"number\">2</span>);          <span class=\"comment\">// 使用了括号，是除法运算</span></span><br><span class=\"line\">  <span class=\"attribute\">margin-left</span>: <span class=\"number\">5px</span> + <span class=\"number\">8px</span>/<span class=\"number\">2px</span>; <span class=\"comment\">// 使用了加号，是除法运算</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>编译为</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">p</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">font</span>: <span class=\"number\">10px</span>/<span class=\"number\">8px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">width</span>: <span class=\"number\">500px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">height</span>: <span class=\"number\">250px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">margin-left</span>: <span class=\"number\">9px</span>; &#125;</span><br></pre></td></tr></table></figure>\n<p>如果需要使用变量，同时又要确保 <code>/</code> 不做除法运算而是完整地编译到 CSS 文件中，只需要用 <code>#{}</code> 插值语句将变量包裹。</p>\n<figure class=\"highlight scss\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">p</span> &#123;</span><br><span class=\"line\">  <span class=\"variable\">$font-size</span>: <span class=\"number\">12px</span>;</span><br><span class=\"line\">  <span class=\"variable\">$line-height</span>: <span class=\"number\">30px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">font</span>: #&#123;<span class=\"variable\">$font-size</span>&#125;/#&#123;<span class=\"variable\">$line-height</span>&#125;;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>编译为</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">p</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">font</span>: <span class=\"number\">12px</span>/<span class=\"number\">30px</span>; &#125;</span><br></pre></td></tr></table></figure>\n<h4 id=\"颜色值运算\"><a href=\"#颜色值运算\" class=\"headerlink\" title=\"颜色值运算\"></a>颜色值运算</h4><p>颜色值的运算是分段计算进行的，也就是分别计算红色，绿色，以及蓝色的值</p>\n<figure class=\"highlight scss\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">p</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">color</span>: <span class=\"number\">#010203</span> + <span class=\"number\">#040506</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>计算 <code>01 + 04 = 05 02 + 05 = 07 03 + 06 = 09</code>，然后编译为</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">p</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">color</span>: <span class=\"number\">#050709</span>; &#125;</span><br></pre></td></tr></table></figure>\n<p>使用 <code>color functions</code> 比计算颜色值更方便一些。</p>\n<p>数字与颜色值之间也可以进行算数运算，同样也是分段计算的，比如</p>\n<figure class=\"highlight scss\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">p</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">color</span>: <span class=\"number\">#010203</span> * <span class=\"number\">2</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>计算 <code>01 * 2 = 02 02 * 2 = 04 03 * 2 = 06</code>，然后编译为</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">p</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">color</span>: <span class=\"number\">#020406</span>; &#125;</span><br></pre></td></tr></table></figure>\n<p>需要注意的是，如果颜色值包含 alpha channel（rgba 或 hsla 两种颜色值），必须拥有相等的 alpha 值才能进行运算，因为算术运算不会作用于 alpha 值。</p>\n<figure class=\"highlight scss\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">p</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">color</span>: rgba(<span class=\"number\">255</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">0.75</span>) + rgba(<span class=\"number\">0</span>, <span class=\"number\">255</span>, <span class=\"number\">0</span>, <span class=\"number\">0.75</span>);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>编译为</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">p</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">color</span>: <span class=\"built_in\">rgba</span>(<span class=\"number\">255</span>, <span class=\"number\">255</span>, <span class=\"number\">0</span>, <span class=\"number\">0.75</span>); &#125;</span><br></pre></td></tr></table></figure>\n<p>颜色值的 alpha channel 可以通过 opacify 或 transparentize 两个函数进行调整。</p>\n<figure class=\"highlight scss\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$translucent-red</span>: rgba(<span class=\"number\">255</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">0.5</span>);</span><br><span class=\"line\"><span class=\"selector-tag\">p</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">color</span>: opacify(<span class=\"variable\">$translucent-red</span>, <span class=\"number\">0.3</span>);</span><br><span class=\"line\">  <span class=\"attribute\">background-color</span>: transparentize(<span class=\"variable\">$translucent-red</span>, <span class=\"number\">0.25</span>);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>编译为</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">p</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">color</span>: <span class=\"built_in\">rgba</span>(<span class=\"number\">255</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">0.8</span>);</span><br><span class=\"line\">  <span class=\"attribute\">background-color</span>: <span class=\"built_in\">rgba</span>(<span class=\"number\">255</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">0.25</span>); &#125;</span><br></pre></td></tr></table></figure>\n<h4 id=\"字符串运算\"><a href=\"#字符串运算\" class=\"headerlink\" title=\"字符串运算\"></a>字符串运算</h4><p><code>+</code> 可用于连接字符串</p>\n<figure class=\"highlight scss\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">p</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">cursor</span>: e + -resize;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>编译为</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">p</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">cursor</span>: e-resize; &#125;</span><br></pre></td></tr></table></figure>\n<p>注意，如果有引号字符串（位于 + 左侧）连接无引号字符串，运算结果是有引号的，相反，无引号字符串（位于 + 左侧）连接有引号字符串，运算结果则没有引号。</p>\n<figure class=\"highlight scss\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">p</span><span class=\"selector-pseudo\">:before</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">content</span>: <span class=\"string\">\"Foo \"</span> + Bar;</span><br><span class=\"line\">  <span class=\"attribute\">font-family</span>: sans- + <span class=\"string\">\"serif\"</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>编译为</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">p</span><span class=\"selector-pseudo\">:before</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">content</span>: <span class=\"string\">\"Foo Bar\"</span>;</span><br><span class=\"line\">  <span class=\"attribute\">font-family</span>: sans-serif; &#125;</span><br></pre></td></tr></table></figure>\n<p>运算表达式与其他值连用时，用空格做连接符：</p>\n<figure class=\"highlight scss\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">p</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">margin</span>: <span class=\"number\">3px</span> + <span class=\"number\">4px</span> auto;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>编译为</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">p</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">margin</span>: <span class=\"number\">7px</span> auto; &#125;</span><br></pre></td></tr></table></figure>\n<p>在有引号的文本字符串中使用 <code>#{}</code> 插值语句可以添加动态的值：</p>\n<figure class=\"highlight scss\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">p</span><span class=\"selector-pseudo\">:before</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">content</span>: <span class=\"string\">\"I ate #&#123;5 + 10&#125; pies!\"</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>编译为</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">p</span><span class=\"selector-pseudo\">:before</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">content</span>: <span class=\"string\">\"I ate 15 pies!\"</span>; &#125;</span><br></pre></td></tr></table></figure>\n<h4 id=\"圆括号运算\"><a href=\"#圆括号运算\" class=\"headerlink\" title=\"圆括号运算\"></a>圆括号运算</h4><p>圆括号可以用来影响运算的顺序：</p>\n<figure class=\"highlight scss\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">p</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">width</span>: <span class=\"number\">1em</span> + (<span class=\"number\">2em</span> * <span class=\"number\">3</span>);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>编译为</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">p</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">width</span>: <span class=\"number\">7em</span>; &#125;</span><br></pre></td></tr></table></figure>\n<h4 id=\"函数运算\"><a href=\"#函数运算\" class=\"headerlink\" title=\"函数运算\"></a>函数运算</h4><p>SassScript 定义了多种函数，有些甚至可以通过普通的 CSS 语句调用<br><!-- 把下面的函数直接粘贴上来 --></p>\n<h2 id=\"Rules-amp-amp-指令\"><a href=\"#Rules-amp-amp-指令\" class=\"headerlink\" title=\"@Rules &amp;&amp; 指令\"></a>@Rules &amp;&amp; 指令</h2><p>Sass 支持所有的 CSS3 @-Rules，以及 Sass 特有的 “指令”（directives）。这一节会详细解释，更多资料请查看 <a href=\"#controlDirectives\">控制指令</a> 与 <a href=\"mixinDirectives\">混合指令</a> 两个部分。</p>\n<h3 id=\"import\"><a href=\"#import\" class=\"headerlink\" title=\"@import\"></a>@import</h3><p>Sass 拓展了 <code>@import</code> 的功能，允许其导入 SCSS 或 Sass 文件。被导入的文件将合并编译到同一个 CSS 文件中，另外，被导入的文件中所包含的变量或者混合指令 (mixin) 都可以在导入的文件中使用。</p>\n<p>Sass 在当前地址，或 Rack, Rails, Merb 的 Sass 文件地址寻找 Sass 文件，如果需要设定其他地址，可以用 <code>:load_paths</code> 选项，或者在命令行中输入 <code>--load-path</code> 命令。</p>\n<p>通常，<code>@import</code> 寻找 Sass 文件并将其导入，但在以下情况下，<code>@import</code> 仅作为普通的 CSS 语句，不会导入任何 Sass 文件:</p>\n<ul>\n<li>文件拓展名是 <code>.css</code></li>\n<li>文件名以 <code>http://</code> 开头</li>\n<li>文件名是 <code>url()</code></li>\n<li><code>@import</code> 包含 <code>media queries</code></li>\n</ul>\n<p>如果不在上述情况内，文件的拓展名是 <code>.scss</code> 或 <code>.sass</code>，则导入成功。没有指定拓展名，Sass 将会试着寻找文件名相同，拓展名为 <code>.scss</code> 或 <code>.sass</code> 的文件并将其导入。</p>\n<figure class=\"highlight scss\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">@import</span> <span class=\"string\">\"foo.scss\"</span>;</span><br></pre></td></tr></table></figure>\n<p>或</p>\n<figure class=\"highlight scss\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">@import</span> <span class=\"string\">\"foo\"</span>;</span><br></pre></td></tr></table></figure>\n<p>都会导入文件 <code>foo.scss</code>，但是</p>\n<figure class=\"highlight scss\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">@import</span> <span class=\"string\">\"foo.css\"</span>;</span><br><span class=\"line\"><span class=\"keyword\">@import</span> <span class=\"string\">\"foo\"</span> screen;</span><br><span class=\"line\"><span class=\"keyword\">@import</span> <span class=\"string\">\"http://foo.com/bar\"</span>;</span><br><span class=\"line\"><span class=\"keyword\">@import</span> url(foo);</span><br></pre></td></tr></table></figure>\n<p>编译为</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">@import</span> <span class=\"string\">\"foo.css\"</span>;</span><br><span class=\"line\"><span class=\"keyword\">@import</span> <span class=\"string\">\"foo\"</span> screen;</span><br><span class=\"line\"><span class=\"keyword\">@import</span> <span class=\"string\">\"http://foo.com/bar\"</span>;</span><br><span class=\"line\"><span class=\"keyword\">@import</span> url(foo);</span><br></pre></td></tr></table></figure>\n<p>Sass 允许同时导入多个文件，例如同时导入 <code>rounded-corners</code> 与 <code>text-shadow</code> 两个文件：</p>\n<figure class=\"highlight scss\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">@import</span> <span class=\"string\">\"rounded-corners\"</span>, <span class=\"string\">\"text-shadow\"</span>;</span><br></pre></td></tr></table></figure>\n<p>导入文件也可以使用 <code>#{ }</code> 插值语句，但不是通过变量动态导入 Sass 文件，只能作用于 CSS 的 <code>url()</code> 导入方式：</p>\n<figure class=\"highlight scss\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$family</span>: unquote(<span class=\"string\">\"Droid+Sans\"</span>);</span><br><span class=\"line\"><span class=\"keyword\">@import</span> url(<span class=\"string\">\"http://fonts.googleapis.com/css?family=\\#&#123;$family&#125;\"</span>);</span><br></pre></td></tr></table></figure>\n<p>编译为</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">@import</span> url(<span class=\"string\">\"http://fonts.googleapis.com/css?family=Droid+Sans\"</span>);</span><br></pre></td></tr></table></figure>\n<h4 id=\"分音\"><a href=\"#分音\" class=\"headerlink\" title=\"分音\"></a>分音</h4><p>如果需要导入 SCSS 或者 Sass 文件，但又不希望将其编译为 CSS，只需要在文件名前添加下划线，这样会告诉 Sass 不要编译这些文件，但导入语句中却不需要添加下划线。</p>\n<p>例如，将文件命名为 <code>_colors.scss</code>，便不会编译 <code>_colours.css</code> 文件。</p>\n<figure class=\"highlight scss\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">@import</span> <span class=\"string\">\"colors\"</span>;</span><br></pre></td></tr></table></figure>\n<p>上面的例子，导入的其实是 <code>_colors.scss</code> 文件</p>\n<p>注意，不可以同时存在添加下划线与未添加下划线的同名文件，添加下划线的文件将会被忽略。</p>\n<h4 id=\"嵌套-import\"><a href=\"#嵌套-import\" class=\"headerlink\" title=\"嵌套 @import\"></a>嵌套 @import</h4><p>大多数情况下，一般在文件的最外层（不在嵌套规则内）使用 <code>@import</code>，其实，也可以将 <code>@import</code> 嵌套进 CSS 样式或者 <code>@media</code> 中，与平时的用法效果相同，只是这样导入的样式只能出现在嵌套的层中。</p>\n<p>假设 <code>example.scss</code> 文件包含以下样式：</p>\n<figure class=\"highlight scss\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.example</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">color</span>: red;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>然后导入到 <code>#main</code> 样式内</p>\n<figure class=\"highlight scss\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-id\">#main</span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">@import</span> <span class=\"string\">\"example\"</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>将会被编译为</p>\n<figure class=\"highlight scss\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-id\">#main</span> <span class=\"selector-class\">.example</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">color</span>: red;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>不可以在混合指令 (mixin) 或控制指令 (control directives) 中嵌套 @import。</p>\n<h3 id=\"media\"><a href=\"#media\" class=\"headerlink\" title=\"@media\"></a>@media</h3><p>Sass 中 <code>@media</code> 指令与 CSS 中用法一样，只是增加了一点额外的功能：允许其在 CSS 规则中嵌套。如果 <code>@media</code> 嵌套在 CSS 规则内，编译时，<code>@media</code> 将被编译到文件的最外层，包含嵌套的父选择器。这个功能让 <code>@media</code> 用起来更方便，不需要重复使用选择器，也不会打乱 CSS 的书写流程。</p>\n<figure class=\"highlight scss\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.sidebar</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">width</span>: <span class=\"number\">300px</span>;</span><br><span class=\"line\">  <span class=\"keyword\">@media</span> screen <span class=\"keyword\">and</span> (orientation: landscape) &#123;</span><br><span class=\"line\">    <span class=\"attribute\">width</span>: <span class=\"number\">500px</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>编译为</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.sidebar</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">width</span>: <span class=\"number\">300px</span>; &#125;</span><br><span class=\"line\">  <span class=\"keyword\">@media</span> screen <span class=\"keyword\">and</span> (<span class=\"attribute\">orientation:</span> landscape) &#123;</span><br><span class=\"line\">    <span class=\"selector-class\">.sidebar</span> &#123;</span><br><span class=\"line\">      <span class=\"attribute\">width</span>: <span class=\"number\">500px</span>; &#125; &#125;</span><br></pre></td></tr></table></figure>\n<p><code>@media</code> 的 queries 允许互相嵌套使用，编译时，Sass 自动添加 <code>and</code></p>\n<figure class=\"highlight scss\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">@media</span> screen &#123;</span><br><span class=\"line\">  <span class=\"selector-class\">.sidebar</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">@media</span> (orientation: landscape) &#123;</span><br><span class=\"line\">      <span class=\"attribute\">width</span>: <span class=\"number\">500px</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>编译为</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">@media</span> screen <span class=\"keyword\">and</span> (<span class=\"attribute\">orientation:</span> landscape) &#123;</span><br><span class=\"line\">  <span class=\"selector-class\">.sidebar</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">width</span>: <span class=\"number\">500px</span>; &#125; &#125;</span><br></pre></td></tr></table></figure>\n<p><code>@media</code> 甚至可以使用 SassScript（比如变量，函数，以及运算符）代替条件的名称或者值：</p>\n<figure class=\"highlight scss\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$media</span>: screen;</span><br><span class=\"line\"><span class=\"variable\">$feature</span>: -webkit-min-device-pixel-ratio;</span><br><span class=\"line\"><span class=\"variable\">$value</span>: <span class=\"number\">1.5</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">@media</span> #&#123;<span class=\"variable\">$media</span>&#125; and (<span class=\"variable\">$feature</span>: <span class=\"variable\">$value</span>) &#123;</span><br><span class=\"line\">  .sidebar &#123;</span><br><span class=\"line\">    width: <span class=\"number\">500px</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>编译为</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">@media</span> screen <span class=\"keyword\">and</span> (<span class=\"attribute\">-webkit-min-device-pixel-ratio:</span> <span class=\"number\">1.5</span>) &#123;</span><br><span class=\"line\">  <span class=\"selector-class\">.sidebar</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">width</span>: <span class=\"number\">500px</span>; &#125; &#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"extend\"><a href=\"#extend\" class=\"headerlink\" title=\"@extend\"></a>@extend</h3><p>在设计网页的时候常常遇到这种情况：一个元素使用的样式与另一个元素完全相同，但又添加了额外的样式。通常会在 HTML 中给元素定义两个 class，一个通用样式，一个特殊样式。假设现在要设计一个普通错误样式与一个严重错误样式，一般会这样写：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"error seriousError\"</span>&gt;</span></span><br><span class=\"line\">  Oh no! You've been hacked!</span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>样式如下</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.error</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">border</span>: <span class=\"number\">1px</span> <span class=\"number\">#f00</span>;</span><br><span class=\"line\">  <span class=\"attribute\">background-color</span>: <span class=\"number\">#fdd</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-class\">.seriousError</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">border-width</span>: <span class=\"number\">3px</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>麻烦的是，这样做必须时刻记住使用 <code>.seriousError</code> 时需要参考 <code>.error</code> 的样式，带来了很多不便：比如加重维护负担，导致 bug，或者给 HTML 添加无语意的样式。使用 @extend 可以避免上述情况，告诉 Sass 将一个选择器下的所有样式继承给另一个选择器。</p>\n<figure class=\"highlight scss\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.error</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">border</span>: <span class=\"number\">1px</span> <span class=\"number\">#f00</span>;</span><br><span class=\"line\">  <span class=\"attribute\">background-color</span>: <span class=\"number\">#fdd</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-class\">.seriousError</span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">@extend</span> .error;</span><br><span class=\"line\">  <span class=\"attribute\">border-width</span>: <span class=\"number\">3px</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>上面代码的意思是将 <code>.error</code> 下的所有样式继承给 <code>.seriousError，border-width: 3px;</code> 是单独给 <code>.seriousError</code> 设定特殊样式，这样，使用 <code>.seriousError</code> 的地方可以不再使用 <code>.error</code>。</p>\n<p>其他使用到 <code>.error</code> 的样式也会同样继承给 <code>.seriousError</code>，例如，另一个样式 <code>.error.intrusion</code> 使用了 <code>hacked.png</code> 做背景，<code>&lt;div class=&quot;seriousError intrusion&quot;&gt;</code> 也同样会使用 hacked.png 背景。</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.error</span><span class=\"selector-class\">.intrusion</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">background-image</span>: <span class=\"built_in\">url</span>(<span class=\"string\">\"/image/hacked.png\"</span>);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h4 id=\"How-it-works\"><a href=\"#How-it-works\" class=\"headerlink\" title=\"How it works\"></a>How it works</h4><p><code>@extend</code> 的作用是将重复使用的样式 <code>(.error)</code> 延伸 <code>(extend)</code> 给需要包含这个样式的特殊样式<code>（.seriousError）</code>，刚刚的例子：</p>\n<figure class=\"highlight scss\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.error</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">border</span>: <span class=\"number\">1px</span> <span class=\"number\">#f00</span>;</span><br><span class=\"line\">  <span class=\"attribute\">background-color</span>: <span class=\"number\">#fdd</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-class\">.error</span><span class=\"selector-class\">.intrusion</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">background-image</span>: url(<span class=\"string\">\"/image/hacked.png\"</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-class\">.seriousError</span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">@extend</span> .error;</span><br><span class=\"line\">  <span class=\"attribute\">border-width</span>: <span class=\"number\">3px</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>编译为</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.error</span>, <span class=\"selector-class\">.seriousError</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">border</span>: <span class=\"number\">1px</span> <span class=\"number\">#f00</span>;</span><br><span class=\"line\">  <span class=\"attribute\">background-color</span>: <span class=\"number\">#fdd</span>; &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-class\">.error</span><span class=\"selector-class\">.intrusion</span>, <span class=\"selector-class\">.seriousError</span><span class=\"selector-class\">.intrusion</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">background-image</span>: <span class=\"built_in\">url</span>(<span class=\"string\">\"/image/hacked.png\"</span>); &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-class\">.seriousError</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">border-width</span>: <span class=\"number\">3px</span>; &#125;</span><br></pre></td></tr></table></figure>\n<p>当合并选择器时，<code>@extend</code> 会很聪明地避免无谓的重复，<code>.seriousError.seriousError</code> 将编译为 <code>.seriousError</code>，不能匹配任何元素的选择器（比如 <code>#main#footer</code> ）也会删除。</p>\n<h4 id=\"延伸复杂的选择器\"><a href=\"#延伸复杂的选择器\" class=\"headerlink\" title=\"延伸复杂的选择器\"></a>延伸复杂的选择器</h4><p>Class 选择器并不是唯一可以被延伸 (extend) 的，Sass 允许延伸任何定义给单个元素的选择器，比如 <code>.special.cool</code>，<code>a:hover</code> 或者 <code>a.user[href^=&quot;http://&quot;]</code> 等，例如：</p>\n<figure class=\"highlight scss\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.hoverlink</span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">@extend</span> a:hover;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>同 class 元素一样，<code>a:hover</code> 的样式将继承给 <code>.hoverlink</code>。</p>\n<figure class=\"highlight scss\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.hoverlink</span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">@extend</span> a:hover;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-tag\">a</span><span class=\"selector-pseudo\">:hover</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">text-decoration</span>: underline;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>编译为</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">a</span><span class=\"selector-pseudo\">:hover</span>, <span class=\"selector-class\">.hoverlink</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">text-decoration</span>: underline; &#125;</span><br></pre></td></tr></table></figure>\n<p>与上面 <code>.error.intrusion</code> 的例子一样，所有 <code>a:hover</code> 的样式将继承给 <code>.hoverlink</code>，包括其他使用到 <code>a:hover</code> 的样式，例如：</p>\n<figure class=\"highlight scss\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.hoverlink</span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">@extend</span> a:hover;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-class\">.comment</span> <span class=\"selector-tag\">a</span><span class=\"selector-class\">.user</span><span class=\"selector-pseudo\">:hover</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">font-weight</span>: bold;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>编译为</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.comment</span> <span class=\"selector-tag\">a</span><span class=\"selector-class\">.user</span><span class=\"selector-pseudo\">:hover</span>, <span class=\"selector-class\">.comment</span> <span class=\"selector-class\">.user</span><span class=\"selector-class\">.hoverlink</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">font-weight</span>: bold; &#125;</span><br></pre></td></tr></table></figure>\n<h4 id=\"多重延伸\"><a href=\"#多重延伸\" class=\"headerlink\" title=\"多重延伸\"></a>多重延伸</h4><p>同一个选择器可以延伸给多个选择器，它所包含的属性将继承给所有被延伸的选择器：</p>\n<figure class=\"highlight scss\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.error</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">border</span>: <span class=\"number\">1px</span> <span class=\"number\">#f00</span>;</span><br><span class=\"line\">  <span class=\"attribute\">background-color</span>: <span class=\"number\">#fdd</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-class\">.attention</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">font-size</span>: <span class=\"number\">3em</span>;</span><br><span class=\"line\">  <span class=\"attribute\">background-color</span>: <span class=\"number\">#ff0</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-class\">.seriousError</span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">@extend</span> .error;</span><br><span class=\"line\">  <span class=\"keyword\">@extend</span> .attention;</span><br><span class=\"line\">  <span class=\"attribute\">border-width</span>: <span class=\"number\">3px</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>编译为</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.error</span>, <span class=\"selector-class\">.seriousError</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">border</span>: <span class=\"number\">1px</span> <span class=\"number\">#f00</span>;</span><br><span class=\"line\">  <span class=\"attribute\">background-color</span>: <span class=\"number\">#fdd</span>; &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-class\">.attention</span>, <span class=\"selector-class\">.seriousError</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">font-size</span>: <span class=\"number\">3em</span>;</span><br><span class=\"line\">  <span class=\"attribute\">background-color</span>: <span class=\"number\">#ff0</span>; &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-class\">.seriousError</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">border-width</span>: <span class=\"number\">3px</span>; &#125;</span><br></pre></td></tr></table></figure>\n<p>每个 <code>.seriousError</code> 将包含 <code>.error</code> 与 <code>.attention</code> 下的所有样式，这时，后定义的样式享有优先权：<code>.seriousError</code> 的背景颜色是 <code>#ff0</code> 而不是 <code>#fdd</code>，因为 <code>.attention</code> 在 <code>.error</code> 之后定义。</p>\n<p>多重延伸可以使用逗号分隔选择器名，比如 <code>@extend .error, .attention;</code> 与 <code>@extend .error; @extend.attention</code> 有相同的效果。</p>\n<h4 id=\"继续延伸\"><a href=\"#继续延伸\" class=\"headerlink\" title=\"继续延伸\"></a>继续延伸</h4><p>当一个选择器延伸给第二个后，可以继续将第二个选择器延伸给第三个，例如：</p>\n<figure class=\"highlight scss\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.error</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">border</span>: <span class=\"number\">1px</span> <span class=\"number\">#f00</span>;</span><br><span class=\"line\">  <span class=\"attribute\">background-color</span>: <span class=\"number\">#fdd</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-class\">.seriousError</span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">@extend</span> .error;</span><br><span class=\"line\">  <span class=\"attribute\">border-width</span>: <span class=\"number\">3px</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-class\">.criticalError</span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">@extend</span> .seriousError;</span><br><span class=\"line\">  <span class=\"attribute\">position</span>: fixed;</span><br><span class=\"line\">  <span class=\"attribute\">top</span>: <span class=\"number\">10%</span>;</span><br><span class=\"line\">  <span class=\"attribute\">bottom</span>: <span class=\"number\">10%</span>;</span><br><span class=\"line\">  <span class=\"attribute\">left</span>: <span class=\"number\">10%</span>;</span><br><span class=\"line\">  <span class=\"attribute\">right</span>: <span class=\"number\">10%</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>现在，每个 <code>.seriousError</code> 选择器将包含 <code>.error</code> 的样式，而 <code>.criticalError</code> 不仅包含 <code>.seriousError</code> 的样式也会同时包含 <code>.error</code> 的所有样式，上面的代码编译为：</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.error</span>, <span class=\"selector-class\">.seriousError</span>, <span class=\"selector-class\">.criticalError</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">border</span>: <span class=\"number\">1px</span> <span class=\"number\">#f00</span>;</span><br><span class=\"line\">  <span class=\"attribute\">background-color</span>: <span class=\"number\">#fdd</span>; &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-class\">.seriousError</span>, <span class=\"selector-class\">.criticalError</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">border-width</span>: <span class=\"number\">3px</span>; &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-class\">.criticalError</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">position</span>: fixed;</span><br><span class=\"line\">  <span class=\"attribute\">top</span>: <span class=\"number\">10%</span>;</span><br><span class=\"line\">  <span class=\"attribute\">bottom</span>: <span class=\"number\">10%</span>;</span><br><span class=\"line\">  <span class=\"attribute\">left</span>: <span class=\"number\">10%</span>;</span><br><span class=\"line\">  <span class=\"attribute\">right</span>: <span class=\"number\">10%</span>; &#125;</span><br></pre></td></tr></table></figure>\n<h4 id=\"选择器列\"><a href=\"#选择器列\" class=\"headerlink\" title=\"选择器列\"></a>选择器列</h4><p>不可以将选择器列（比如 <code>.foo .bar</code> 或 <code>.foo + .bar</code>）延伸给其他元素，但是，却可以将其他元素延伸给选择器列：</p>\n<figure class=\"highlight scss\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-id\">#fake-links</span> <span class=\"selector-class\">.link</span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">@extend</span> a;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-tag\">a</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">color</span>: blue;</span><br><span class=\"line\">  &amp;<span class=\"selector-pseudo\">:hover</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">text-decoration</span>: underline;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>编译为</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">a</span>, <span class=\"selector-id\">#fake-links</span> <span class=\"selector-class\">.link</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">color</span>: blue; &#125;</span><br><span class=\"line\">  <span class=\"selector-tag\">a</span><span class=\"selector-pseudo\">:hover</span>, <span class=\"selector-id\">#fake-links</span> <span class=\"selector-class\">.link</span><span class=\"selector-pseudo\">:hover</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">text-decoration</span>: underline; &#125;</span><br></pre></td></tr></table></figure>\n<h5 id=\"合并选择器列\"><a href=\"#合并选择器列\" class=\"headerlink\" title=\"合并选择器列\"></a>合并选择器列</h5><p>有时会遇到复杂的情况，比如选择器列中的某个元素需要延伸给另一个选择器列，这种情况下，两个选择器列需要合并，比如：</p>\n<figure class=\"highlight scss\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-id\">#admin</span> <span class=\"selector-class\">.tabbar</span> <span class=\"selector-tag\">a</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">font-weight</span>: bold;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-id\">#demo</span> <span class=\"selector-class\">.overview</span> <span class=\"selector-class\">.fakelink</span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">@extend</span> a;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>技术上讲能够生成所有匹配条件的结果，但是这样生成的样式表太复杂了，上面这个简单的例子就可能有 10 种结果。所以，Sass 只会编译输出有用的选择器。</p>\n<p>当两个列 (sequence) 合并时，如果没有包含相同的选择器，将生成两个新选择器：第一列出现在第二列之前，或者第二列出现在第一列之前：</p>\n<figure class=\"highlight scss\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-id\">#admin</span> <span class=\"selector-class\">.tabbar</span> <span class=\"selector-tag\">a</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">font-weight</span>: bold;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-id\">#demo</span> <span class=\"selector-class\">.overview</span> <span class=\"selector-class\">.fakelink</span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">@extend</span> a;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>编译为</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-id\">#admin</span> <span class=\"selector-class\">.tabbar</span> <span class=\"selector-tag\">a</span>,</span><br><span class=\"line\"><span class=\"selector-id\">#admin</span> <span class=\"selector-class\">.tabbar</span> <span class=\"selector-id\">#demo</span> <span class=\"selector-class\">.overview</span> <span class=\"selector-class\">.fakelink</span>,</span><br><span class=\"line\"><span class=\"selector-id\">#demo</span> <span class=\"selector-class\">.overview</span> <span class=\"selector-id\">#admin</span> <span class=\"selector-class\">.tabbar</span> <span class=\"selector-class\">.fakelink</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">font-weight</span>: bold; &#125;</span><br></pre></td></tr></table></figure>\n<p>如果两个列 (sequence) 包含了相同的选择器，相同部分将会合并在一起，其他部分交替输出。在下面的例子里，两个列都包含 <code>#admin</code>，输出结果中它们合并在了一起：</p>\n<figure class=\"highlight scss\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-id\">#admin</span> <span class=\"selector-class\">.tabbar</span> <span class=\"selector-tag\">a</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">font-weight</span>: bold;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-id\">#admin</span> <span class=\"selector-class\">.overview</span> <span class=\"selector-class\">.fakelink</span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">@extend</span> a;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>编译为</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-id\">#admin</span> <span class=\"selector-class\">.tabbar</span> <span class=\"selector-tag\">a</span>,</span><br><span class=\"line\"><span class=\"selector-id\">#admin</span> <span class=\"selector-class\">.tabbar</span> <span class=\"selector-class\">.overview</span> <span class=\"selector-class\">.fakelink</span>,</span><br><span class=\"line\"><span class=\"selector-id\">#admin</span> <span class=\"selector-class\">.overview</span> <span class=\"selector-class\">.tabbar</span> <span class=\"selector-class\">.fakelink</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">font-weight</span>: bold; &#125;</span><br></pre></td></tr></table></figure>\n<h4 id=\"extend-Only-选择器\"><a href=\"#extend-Only-选择器\" class=\"headerlink\" title=\"@extend-Only 选择器\"></a>@extend-Only 选择器</h4><p>有时，需要定义一套样式并不是给某个元素用，而是只通过 <code>@extend</code> 指令使用，尤其是在制作 <code>Sass</code> 样式库的时候，希望 <code>Sass</code> 能够忽略用不到的样式。</p>\n<p>如果使用普通的 CSS 规则，最后会编译出很多用不到的样式，也容易与其他样式名冲突，所以，Sass 引入了“占位符选择器” (placeholder selectors)，看起来很像普通的 <code>id</code> 或 <code>class</code> 选择器，只是 <code>#</code> 或 <code>.</code> 被替换成了 <code>%</code>。可以像 <code>class</code> 或者 <code>id</code> 选择器那样使用，当它们单独使用时，不会被编译到 CSS 文件中。</p>\n<figure class=\"highlight scss\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// This ruleset won't be rendered on its own.</span></span><br><span class=\"line\"><span class=\"selector-id\">#context</span> <span class=\"selector-tag\">a</span>%extreme &#123;</span><br><span class=\"line\">  <span class=\"attribute\">color</span>: blue;</span><br><span class=\"line\">  <span class=\"attribute\">font-weight</span>: bold;</span><br><span class=\"line\">  <span class=\"attribute\">font-size</span>: <span class=\"number\">2em</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>占位符选择器需要通过延伸指令使用，用法与 <code>class</code> 或者 <code>id</code> 选择器一样，被延伸后，占位符选择器本身不会被编译。</p>\n<figure class=\"highlight scss\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.notice</span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">@extend</span> %extreme;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>编译为</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-id\">#context</span> <span class=\"selector-tag\">a</span><span class=\"selector-class\">.notice</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">color</span>: blue;</span><br><span class=\"line\">  <span class=\"attribute\">font-weight</span>: bold;</span><br><span class=\"line\">  <span class=\"attribute\">font-size</span>: <span class=\"number\">2em</span>; &#125;</span><br></pre></td></tr></table></figure>\n<h4 id=\"在指令之延伸\"><a href=\"#在指令之延伸\" class=\"headerlink\" title=\"在指令之延伸\"></a>在指令之延伸</h4><p>在指令中使用 <code>@extend</code> 时（比如在 @media 中）有一些限制：Sass 不可以将 <code>@media</code> 层外的 CSS 规则延伸给指令层内的 CSS，这样会生成大量的无用代码。也就是说，如果在 <code>@media</code> （或者其他 CSS 指令）中使用 <code>@extend</code>，必须延伸给相同指令层中的选择器。</p>\n<p>下面的例子是可行的：</p>\n<figure class=\"highlight scss\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">@media</span> print &#123;</span><br><span class=\"line\">  <span class=\"selector-class\">.error</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">border</span>: <span class=\"number\">1px</span> <span class=\"number\">#f00</span>;</span><br><span class=\"line\">    <span class=\"attribute\">background-color</span>: <span class=\"number\">#fdd</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"selector-class\">.seriousError</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">@extend</span> .error;</span><br><span class=\"line\">    <span class=\"attribute\">border-width</span>: <span class=\"number\">3px</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>但不可以这样：</p>\n<figure class=\"highlight scss\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.error</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">border</span>: <span class=\"number\">1px</span> <span class=\"number\">#f00</span>;</span><br><span class=\"line\">  <span class=\"attribute\">background-color</span>: <span class=\"number\">#fdd</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">@media</span> print &#123;</span><br><span class=\"line\">  <span class=\"selector-class\">.seriousError</span> &#123;</span><br><span class=\"line\">    <span class=\"comment\">// INVALID EXTEND: .error is used outside of the \"@media print\" directive</span></span><br><span class=\"line\">    <span class=\"keyword\">@extend</span> .error;</span><br><span class=\"line\">    <span class=\"attribute\">border-width</span>: <span class=\"number\">3px</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>希望有一天，浏览器可以原生支持 <code>@extend</code> 指令，这样就可以在任何指令中使用延伸功能，不再受限制了。</p>\n<h2 id=\"控制指令\"><a href=\"#控制指令\" class=\"headerlink\" title=\"控制指令\"></a>控制指令</h2><p>SassScript 提供了一些基础的控制指令，比如在满足一定条件时引用样式，或者设定范围重复输出格式。控制指令是一种高级功能，日常编写过程中并不常用到，主要与混合指令 (mixin) 配合使用。</p>\n<h3 id=\"if\"><a href=\"#if\" class=\"headerlink\" title=\"@if\"></a>@if</h3><p>当 @if 的表达式返回值不是 <code>false</code> 或者 <code>null</code> 时，条件成立，输出 <code>{}</code> 内的代码：</p>\n<figure class=\"highlight scss\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">p</span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">@if</span> <span class=\"number\">1</span> + <span class=\"number\">1</span> == <span class=\"number\">2</span> &#123; <span class=\"attribute\">border</span>: <span class=\"number\">1px</span> solid; &#125;</span><br><span class=\"line\">  <span class=\"keyword\">@if</span> <span class=\"number\">5</span> &lt; <span class=\"number\">3</span> &#123; <span class=\"attribute\">border</span>: <span class=\"number\">2px</span> dotted; &#125;</span><br><span class=\"line\">  <span class=\"keyword\">@if</span> null  &#123; <span class=\"attribute\">border</span>: <span class=\"number\">3px</span> double; &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>编译为</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">p</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">border</span>: <span class=\"number\">1px</span> solid; &#125;</span><br></pre></td></tr></table></figure>\n<p><code>@if</code> 声明后面可以跟多个 <code>@else if</code> 声明，或者一个 <code>@else</code> 声明。如果 <code>@if</code> 声明失败，Sass 将逐条执行 <code>@else if</code> 声明，如果全部失败，最后执行 <code>@else</code> 声明，例如：</p>\n<figure class=\"highlight scss\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$type</span>: monster;</span><br><span class=\"line\"><span class=\"selector-tag\">p</span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">@if</span> <span class=\"variable\">$type</span> == ocean &#123;</span><br><span class=\"line\">    <span class=\"attribute\">color</span>: blue;</span><br><span class=\"line\">  &#125; <span class=\"keyword\">@else</span> if <span class=\"variable\">$type</span> == matador &#123;</span><br><span class=\"line\">    <span class=\"attribute\">color</span>: red;</span><br><span class=\"line\">  &#125; <span class=\"keyword\">@else</span> if <span class=\"variable\">$type</span> == monster &#123;</span><br><span class=\"line\">    <span class=\"attribute\">color</span>: green;</span><br><span class=\"line\">  &#125; <span class=\"keyword\">@else</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">color</span>: black;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>编译为</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">p</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">color</span>: green; &#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"for\"><a href=\"#for\" class=\"headerlink\" title=\"@for\"></a>@for</h3><p><code>@for</code> 指令可以在限制的范围内重复输出格式，每次按要求（变量的值）对输出结果做出变动。这个指令包含两种格式：<code>@for $var from &lt;start&gt; through &lt;end&gt;</code>，或者 <code>@for $var from &lt;start&gt; to &lt;end&gt;</code>，区别在于 <code>through</code> 与 <code>to</code> 的含义：当使用 <code>through</code> 时，条件范围包含 <code>&lt;start&gt;</code> 与 <code>&lt;end&gt;</code> 的值，而使用 <code>to</code> 时条件范围只包含 <code>&lt;start&gt;</code> 的值不包含 <code>&lt;end&gt;</code> 的值。另外，<code>$var</code> 可以是任何变量，比如 <code>$i</code>；<code>&lt;start&gt;</code> 和 <code>&lt;end&gt;</code> 必须是整数值。</p>\n<figure class=\"highlight scss\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">@for</span> <span class=\"variable\">$i</span> from <span class=\"number\">1</span> through <span class=\"number\">3</span> &#123;</span><br><span class=\"line\">  <span class=\"selector-class\">.item-</span>#&#123;<span class=\"variable\">$i</span>&#125; &#123; <span class=\"attribute\">width</span>: <span class=\"number\">2em</span> * <span class=\"variable\">$i</span>; &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>编译为</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.item-1</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">width</span>: <span class=\"number\">2em</span>; &#125;</span><br><span class=\"line\"><span class=\"selector-class\">.item-2</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">width</span>: <span class=\"number\">4em</span>; &#125;</span><br><span class=\"line\"><span class=\"selector-class\">.item-3</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">width</span>: <span class=\"number\">6em</span>; &#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"each\"><a href=\"#each\" class=\"headerlink\" title=\"@each\"></a>@each</h3><p><code>@each</code> 指令的格式是 <code>$var in &lt;list&gt;</code>, <code>$var</code> 可以是任何变量名，比如 <code>$length</code> 或者 <code>$name</code>，而 <code>&lt;list&gt;</code> 是一连串的值，也就是值列表。</p>\n<p><code>@each</code> 将变量 <code>$var</code> 作用于值列表中的每一个项目，然后输出结果，例如：</p>\n<figure class=\"highlight scss\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">@each</span> <span class=\"variable\">$animal</span> in puma, sea-slug, egret, salamander &#123;</span><br><span class=\"line\">  .#&#123;<span class=\"variable\">$animal</span>&#125;-<span class=\"attribute\">icon</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">background-image</span>: url(<span class=\"string\">'/images/#&#123;$animal&#125;.png'</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>编译为</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.puma-icon</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">background-image</span>: <span class=\"built_in\">url</span>(<span class=\"string\">'/images/puma.png'</span>); &#125;</span><br><span class=\"line\"><span class=\"selector-class\">.sea-slug-icon</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">background-image</span>: <span class=\"built_in\">url</span>(<span class=\"string\">'/images/sea-slug.png'</span>); &#125;</span><br><span class=\"line\"><span class=\"selector-class\">.egret-icon</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">background-image</span>: <span class=\"built_in\">url</span>(<span class=\"string\">'/images/egret.png'</span>); &#125;</span><br><span class=\"line\"><span class=\"selector-class\">.salamander-icon</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">background-image</span>: <span class=\"built_in\">url</span>(<span class=\"string\">'/images/salamander.png'</span>); &#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"while\"><a href=\"#while\" class=\"headerlink\" title=\"@while\"></a>@while</h3><p><code>@while</code> 指令重复输出格式直到表达式返回结果为 <code>false</code>。这样可以实现比 <code>@for</code> 更复杂的循环，只是很少会用到。例如：</p>\n<figure class=\"highlight scss\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$i</span>: <span class=\"number\">6</span>;</span><br><span class=\"line\"><span class=\"keyword\">@while</span> <span class=\"variable\">$i</span> &gt; <span class=\"number\">0</span> &#123;</span><br><span class=\"line\">  <span class=\"selector-class\">.item-</span>#&#123;<span class=\"variable\">$i</span>&#125; &#123; <span class=\"attribute\">width</span>: <span class=\"number\">2em</span> * <span class=\"variable\">$i</span>; &#125;</span><br><span class=\"line\">  <span class=\"variable\">$i</span>: <span class=\"variable\">$i</span> - <span class=\"number\">2</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>编译为</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.item-6</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">width</span>: <span class=\"number\">12em</span>; &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-class\">.item-4</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">width</span>: <span class=\"number\">8em</span>; &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-class\">.item-2</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">width</span>: <span class=\"number\">4em</span>; &#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"混合指令\"><a href=\"#混合指令\" class=\"headerlink\" title=\"混合指令\"></a>混合指令</h2><p>混合指令（Mixin）用于定义可重复使用的样式，避免了使用无语意的 class，比如 <code>.float-left</code>。混合指令可以包含所有的 CSS 规则，绝大部分 Sass 规则，甚至通过参数功能引入变量，输出多样化的样式。</p>\n<h3 id=\"定义混合指令-mixin\"><a href=\"#定义混合指令-mixin\" class=\"headerlink\" title=\"定义混合指令 @mixin\"></a>定义混合指令 <code>@mixin</code></h3><p>混合指令的用法是在 <code>@mixin</code> 后添加名称与样式，比如名为 <code>large-text</code> 的混合通过下面的代码定义</p>\n<figure class=\"highlight scss\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">@mixin</span> large-text &#123;</span><br><span class=\"line\">  <span class=\"attribute\">font</span>: &#123;</span><br><span class=\"line\">    family: Arial;</span><br><span class=\"line\">    size: <span class=\"number\">20px</span>;</span><br><span class=\"line\">    weight: bold;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>混合指令也可以包含选择器和属性，甚至可以用 <code>&amp;</code> 引用父选择器</p>\n<figure class=\"highlight scss\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">@mixin</span> clearfix &#123;</span><br><span class=\"line\">  <span class=\"attribute\">display</span>: inline-block;</span><br><span class=\"line\">  &amp;<span class=\"selector-pseudo\">:after</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">content</span>: <span class=\"string\">\".\"</span>;</span><br><span class=\"line\">    <span class=\"attribute\">display</span>: block;</span><br><span class=\"line\">    <span class=\"attribute\">height</span>: <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"attribute\">clear</span>: both;</span><br><span class=\"line\">    <span class=\"attribute\">visibility</span>: hidden;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  * <span class=\"selector-tag\">html</span> &amp; &#123; <span class=\"attribute\">height</span>: <span class=\"number\">1px</span> &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"引用混合指令-include\"><a href=\"#引用混合指令-include\" class=\"headerlink\" title=\"引用混合指令 @include\"></a>引用混合指令 <code>@include</code></h3><p>使用 <code>@include</code> 指令引用混合样式</p>\n<figure class=\"highlight scss\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.page-title</span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">@include</span> large-text;</span><br><span class=\"line\">  <span class=\"attribute\">padding</span>: <span class=\"number\">4px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">margin-top</span>: <span class=\"number\">10px</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>编译为</p>\n<figure class=\"highlight scss\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.page-title</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">font-family</span>: Arial;</span><br><span class=\"line\">  <span class=\"attribute\">font-size</span>: <span class=\"number\">20px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">font-weight</span>: bold;</span><br><span class=\"line\">  <span class=\"attribute\">padding</span>: <span class=\"number\">4px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">margin-top</span>: <span class=\"number\">10px</span>; &#125;</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>混合指令类似于 javascript 函数,除非引用，否则不会出现在结果中**</p>\n</blockquote>\n<p>也可以不使用父选择器在最外层直接引用混合样式</p>\n<figure class=\"highlight scss\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">@mixin</span> silly-links &#123;</span><br><span class=\"line\">  <span class=\"selector-tag\">a</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">color</span>: blue;</span><br><span class=\"line\">    <span class=\"attribute\">background-color</span>: red;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">@include</span> silly-links;</span><br></pre></td></tr></table></figure>\n<p>编译为</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">a</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">color</span>: blue;</span><br><span class=\"line\">  <span class=\"attribute\">background-color</span>: red; &#125;</span><br></pre></td></tr></table></figure>\n<p>混合样式中也可以包含其他混合样式，比如</p>\n<figure class=\"highlight scss\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">@mixin</span> compound &#123;</span><br><span class=\"line\">  <span class=\"keyword\">@include</span> highlighted-background;</span><br><span class=\"line\">  <span class=\"keyword\">@include</span> header-text;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">@mixin</span> highlighted-background &#123; <span class=\"attribute\">background-color</span>: <span class=\"number\">#fc0</span>; &#125;</span><br><span class=\"line\"><span class=\"keyword\">@mixin</span> header-text &#123; <span class=\"attribute\">font-size</span>: <span class=\"number\">20px</span>; &#125;</span><br></pre></td></tr></table></figure>\n<p>混合样式中应该只定义后代选择器，这样可以安全的导入到文件的任何位置。</p>\n<h3 id=\"参数\"><a href=\"#参数\" class=\"headerlink\" title=\"参数\"></a>参数</h3><p>参数用于给混合指令中的样式设定变量，并且赋值使用。在定义混合指令的时候，按照变量的格式，通过逗号分隔，将参数写进圆括号里。引用指令时，按照参数的顺序，再将所赋的值对应写进括号</p>\n<figure class=\"highlight scss\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">@mixin</span> sexy-border(<span class=\"variable\">$color</span>, <span class=\"variable\">$width</span>) &#123;</span><br><span class=\"line\">  <span class=\"attribute\">border</span>: &#123;</span><br><span class=\"line\">    color: <span class=\"variable\">$color</span>;</span><br><span class=\"line\">    <span class=\"attribute\">width</span>: <span class=\"variable\">$width</span>;</span><br><span class=\"line\">    <span class=\"selector-tag\">style</span>: dashed;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-tag\">p</span> &#123; <span class=\"keyword\">@include</span> sexy-border(blue, <span class=\"number\">1in</span>); &#125;</span><br></pre></td></tr></table></figure>\n<p>编译为</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">p</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">border-color</span>: blue;</span><br><span class=\"line\">  <span class=\"attribute\">border-width</span>: <span class=\"number\">1in</span>;</span><br><span class=\"line\">  <span class=\"attribute\">border-style</span>: dashed; &#125;</span><br></pre></td></tr></table></figure>\n<p>混合指令也可以使用给变量赋值的方法给参数设定默认值，然后，当这个指令被引用的时候，如果没有给参数赋值，则自动使用默认值：</p>\n<figure class=\"highlight scss\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">@mixin</span> sexy-border(<span class=\"variable\">$color</span>, <span class=\"variable\">$width</span>: <span class=\"number\">1in</span>) &#123;</span><br><span class=\"line\">  <span class=\"attribute\">border</span>: &#123;</span><br><span class=\"line\">    color: <span class=\"variable\">$color</span>;</span><br><span class=\"line\">    <span class=\"attribute\">width</span>: <span class=\"variable\">$width</span>;</span><br><span class=\"line\">    <span class=\"selector-tag\">style</span>: dashed;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-tag\">p</span> &#123; <span class=\"keyword\">@include</span> sexy-border(blue); &#125;</span><br><span class=\"line\"><span class=\"selector-tag\">h1</span> &#123; <span class=\"keyword\">@include</span> sexy-border(blue, <span class=\"number\">2in</span>); &#125;</span><br></pre></td></tr></table></figure>\n<p>编译为</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">p</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">border-color</span>: blue;</span><br><span class=\"line\">  <span class=\"attribute\">border-width</span>: <span class=\"number\">1in</span>;</span><br><span class=\"line\">  <span class=\"attribute\">border-style</span>: dashed; &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-tag\">h1</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">border-color</span>: blue;</span><br><span class=\"line\">  <span class=\"attribute\">border-width</span>: <span class=\"number\">2in</span>;</span><br><span class=\"line\">  <span class=\"attribute\">border-style</span>: dashed; &#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"关键词参数\"><a href=\"#关键词参数\" class=\"headerlink\" title=\"关键词参数\"></a>关键词参数</h3><p>混合指令也可以使用关键词参数，上面的例子也可以写成：</p>\n<figure class=\"highlight scss\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">p</span> &#123; <span class=\"keyword\">@include</span> sexy-border(<span class=\"variable\">$color</span>: blue); &#125;</span><br><span class=\"line\"><span class=\"selector-tag\">h1</span> &#123; <span class=\"keyword\">@include</span> sexy-border(<span class=\"variable\">$color</span>: blue, <span class=\"variable\">$width</span>: <span class=\"number\">2in</span>); &#125;</span><br></pre></td></tr></table></figure>\n<p>虽然不够简明，但是阅读起来会更方便。关键词参数给函数提供了更灵活的接口，以及容易调用的参数。关键词参数可以打乱顺序使用，如果使用默认值也可以省缺，另外，参数名被视为变量名，下划线、短横线可以互换使用。</p>\n<h3 id=\"可变参数\"><a href=\"#可变参数\" class=\"headerlink\" title=\"可变参数\"></a>可变参数</h3><p>有时，不能确定混合指令需要使用多少个参数，比如一个关于 <code>box-shadow</code> 的混合指令不能确定有多少个 ‘shadow’ 会被用到。这时，可以使用参数变量 <code>…</code> 声明（写在参数的最后方）告诉 Sass 将这些参数视为值列表处理</p>\n<figure class=\"highlight scss\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">@mixin</span> box-shadow(<span class=\"variable\">$shadows</span>...) &#123;</span><br><span class=\"line\">  <span class=\"attribute\">box-shadow</span>: <span class=\"variable\">$shadows</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-class\">.shadows</span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">@include</span> box-shadow(<span class=\"number\">0px</span> <span class=\"number\">4px</span> <span class=\"number\">5px</span> <span class=\"number\">#666</span>, <span class=\"number\">2px</span> <span class=\"number\">6px</span> <span class=\"number\">10px</span> <span class=\"number\">#999</span>);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>编译为</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.shadows</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">box-shadow</span>: <span class=\"number\">0px</span> <span class=\"number\">4px</span> <span class=\"number\">5px</span> <span class=\"number\">#666</span>, <span class=\"number\">2px</span> <span class=\"number\">6px</span> <span class=\"number\">10px</span> <span class=\"number\">#999</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>有时，我们可以确定混合指令中的部分参数，其余的参数数不确定的</p>\n<figure class=\"highlight scss\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">@mixin</span> test(<span class=\"variable\">$color</span>, <span class=\"variable\">$shadows</span>...) &#123;</span><br><span class=\"line\">  <span class=\"selector-tag\">a</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">color</span>: <span class=\"variable\">$color</span>;</span><br><span class=\"line\">    <span class=\"attribute\">box-shadow</span>: <span class=\"variable\">$shadows</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"variable\">$color</span>: red;</span><br><span class=\"line\"><span class=\"variable\">$shadows</span>: <span class=\"number\">0px</span> <span class=\"number\">4px</span> <span class=\"number\">5px</span> <span class=\"number\">#666</span>, <span class=\"number\">2px</span> <span class=\"number\">6px</span> <span class=\"number\">10px</span> <span class=\"number\">#999</span>;</span><br><span class=\"line\"><span class=\"keyword\">@include</span> test(<span class=\"variable\">$color</span>, <span class=\"variable\">$shadows</span>)</span><br></pre></td></tr></table></figure>\n<p>编译为</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">a</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">color</span>: red;</span><br><span class=\"line\">  <span class=\"attribute\">box-shadow</span>: <span class=\"number\">0px</span> <span class=\"number\">4px</span> <span class=\"number\">5px</span> <span class=\"number\">#666</span>, <span class=\"number\">2px</span> <span class=\"number\">6px</span> <span class=\"number\">10px</span> <span class=\"number\">#999</span>; &#125;</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p><strong>一定要注意，可变参数必须放在最后</strong></p>\n</blockquote>\n<h3 id=\"向混合样式中导入内容\"><a href=\"#向混合样式中导入内容\" class=\"headerlink\" title=\"向混合样式中导入内容\"></a>向混合样式中导入内容</h3><p>在引用混合样式的时候，可以先将一段代码导入到混合指令中，然后再输出混合样式，额外导入的部分将出现在 <code>@content</code> 标志的地方：</p>\n<figure class=\"highlight scss\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">@mixin</span> apply-to-ie6-<span class=\"keyword\">only</span> &#123;</span><br><span class=\"line\">  * <span class=\"selector-tag\">html</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">@content</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">@include</span> apply-to-ie6-<span class=\"keyword\">only</span> &#123;</span><br><span class=\"line\">  <span class=\"selector-id\">#logo</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">background-image</span>: url(<span class=\"string\">'/logo.gif'</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>编译为</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">* <span class=\"selector-tag\">html</span> <span class=\"selector-id\">#logo</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">background-image</span>: <span class=\"built_in\">url</span>(/logo.gif);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>当 @content 在指令中出现过多次或者出现在循环中时，额外的代码将被导入到每一个地方。</p>\n</blockquote>\n<h2 id=\"函数指令\"><a href=\"#函数指令\" class=\"headerlink\" title=\"函数指令\"></a>函数指令</h2><h3 id=\"自定义函数\"><a href=\"#自定义函数\" class=\"headerlink\" title=\"自定义函数\"></a>自定义函数</h3><p>Sass 支持自定义函数，并能在任何属性值或 SassScript 中使用：</p>\n<figure class=\"highlight scss\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$grid-width</span>: <span class=\"number\">40px</span>;</span><br><span class=\"line\"><span class=\"variable\">$gutter-width</span>: <span class=\"number\">10px</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">@function</span> grid-width(<span class=\"variable\">$n</span>) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">@return</span> <span class=\"variable\">$n</span> * <span class=\"variable\">$grid-width</span> + (<span class=\"variable\">$n</span> - <span class=\"number\">1</span>) * <span class=\"variable\">$gutter-width</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-id\">#sidebar</span> &#123; <span class=\"attribute\">width</span>: grid-width(<span class=\"number\">5</span>); &#125;</span><br></pre></td></tr></table></figure>\n<p>编译为</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-id\">#sidebar</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">width</span>: <span class=\"number\">240px</span>; &#125;</span><br></pre></td></tr></table></figure>\n<p>与 mixin 相同，也可以传递若干个全局变量给函数作为参数。一个函数可以含有多条语句，需要调用 <code>@return</code> 输出结果。</p>\n<p>自定义的函数也可以使用关键词参数，上面的例子还可以这样写：</p>\n<figure class=\"highlight scss\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-id\">#sidebar</span> &#123; <span class=\"attribute\">width</span>: grid-width(<span class=\"variable\">$n</span>: <span class=\"number\">5</span>); &#125;</span><br></pre></td></tr></table></figure>\n<p>建议在自定义函数前添加前缀避免命名冲突，其他人阅读代码时也会知道这不是 Sass 或者 CSS 的自带功能。</p>\n<h3 id=\"sass-中内置的函数\"><a href=\"#sass-中内置的函数\" class=\"headerlink\" title=\"sass 中内置的函数\"></a>sass 中内置的函数</h3><ul>\n<li>字符串函数<ul>\n<li>unquote</li>\n<li>quote</li>\n<li>To-upper-case</li>\n<li>To-lower-case</li>\n<li>percentage</li>\n<li>round</li>\n<li>ceil</li>\n<li>floor</li>\n<li>abs</li>\n<li>min</li>\n<li>max</li>\n<li>random</li>\n</ul>\n</li>\n<li>列表函数<ul>\n<li>length  列表数据的长度</li>\n<li>nth  (10px 20px 30px, 1)</li>\n<li>join  join(10px 20px, 30px 40px)</li>\n<li>append  append(10px 20px ,30px)</li>\n<li>zip  zip(1px 2px 3px,solid dashed dotted,green blue red)</li>\n<li>index  index(1px solid red, solid)</li>\n<li>type-of  type-of(100)</li>\n<li>unit  取单位</li>\n<li>unitless  判断一个值是否带有单位</li>\n<li>comparable  判断两个数是否可以进行加减合并</li>\n<li>if(true,1px,2px)</li>\n</ul>\n</li>\n<li>Maps函数<ul>\n<li>map-get</li>\n<li>map-has-key</li>\n<li>map-keys</li>\n<li>map-values</li>\n<li>map-merge</li>\n<li>map-remove</li>\n<li>keywords</li>\n</ul>\n</li>\n<li>颜色函数<ul>\n<li>rgb</li>\n<li>rgba</li>\n<li>red</li>\n<li>green</li>\n<li>blue</li>\n<li>mix  混合两种颜色 第三个参数为第一种颜色的比例  mix(blue,red,20%)</li>\n<li>lighten  lighten(red, 20%)</li>\n<li>darken  darken(red,30%)</li>\n<li>saturate  改变颜色的饱和度 参数单位为百分比 saturate(blue,20%)</li>\n<li>desaturate</li>\n<li>adjust-hue  通过调整色相 adjust-hue(blue,30deg)</li>\n<li>grayscale  直接让饱和度为0  grayscale(blue)</li>\n<li>alpha  获取透明度</li>\n<li>opacity  获取透明度</li>\n<li>rgba</li>\n<li>fade-in  增加透明度</li>\n<li>transparentize  减少透明度</li>\n<li>fade-out  减少透明度</li>\n</ul>\n</li>\n</ul>\n<figure class=\"highlight scss\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$map</span>: (</span><br><span class=\"line\">  <span class=\"variable\">$key1</span>: value1,</span><br><span class=\"line\">  <span class=\"variable\">$key2</span>: value2,</span><br><span class=\"line\">  <span class=\"variable\">$key3</span>: value3</span><br><span class=\"line\">);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable\">$map</span>: (</span><br><span class=\"line\">  key1: value1,</span><br><span class=\"line\">  key2: (</span><br><span class=\"line\">    key-<span class=\"number\">1</span>: value-<span class=\"number\">1</span>,</span><br><span class=\"line\">    key-<span class=\"number\">2</span>: value-<span class=\"number\">2</span>,</span><br><span class=\"line\">  ),</span><br><span class=\"line\">key3: value3</span><br><span class=\"line\">);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable\">$theme-color</span>: (</span><br><span class=\"line\">  default: (</span><br><span class=\"line\">      bgcolor: <span class=\"number\">#fff</span>,</span><br><span class=\"line\">      text-color: <span class=\"number\">#444</span>,</span><br><span class=\"line\">      link-color: <span class=\"number\">#39f</span></span><br><span class=\"line\">  ),</span><br><span class=\"line\">  primary:(</span><br><span class=\"line\">      bgcolor: <span class=\"number\">#000</span>,</span><br><span class=\"line\">      text-color:<span class=\"number\">#fff</span>,</span><br><span class=\"line\">      link-color: <span class=\"number\">#93f</span></span><br><span class=\"line\">  ),</span><br><span class=\"line\">  negative: (</span><br><span class=\"line\">      bgcolor: <span class=\"number\">#f36</span>,</span><br><span class=\"line\">      text-color: <span class=\"number\">#fefefe</span>,</span><br><span class=\"line\">      link-color: <span class=\"number\">#d4e</span></span><br><span class=\"line\">  )</span><br><span class=\"line\">);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/* map-get */</span></span><br><span class=\"line\"><span class=\"variable\">$social-colors</span>: (</span><br><span class=\"line\">  dribble: <span class=\"number\">#ea4c89</span>,</span><br><span class=\"line\">  facebook: <span class=\"number\">#3b5998</span>,</span><br><span class=\"line\">  github: <span class=\"number\">#171515</span>,</span><br><span class=\"line\">  google: <span class=\"number\">#db4437</span>,</span><br><span class=\"line\">  twitter: <span class=\"number\">#55acee</span></span><br><span class=\"line\">);</span><br><span class=\"line\"><span class=\"selector-class\">.btn-dribble</span>&#123;</span><br><span class=\"line\">  <span class=\"attribute\">color</span>: map-get(<span class=\"variable\">$social-colors</span>,facebook);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">/* 没有值不会报错 */</span></span><br><span class=\"line\"><span class=\"selector-class\">.btn-weibo</span>&#123;</span><br><span class=\"line\">  <span class=\"attribute\">font-size</span>: <span class=\"number\">12px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">color</span>: map-get(<span class=\"variable\">$social-colors</span>,weibo);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/* map中的容错函数 */</span></span><br><span class=\"line\">   <span class=\"keyword\">@function</span> colors(<span class=\"variable\">$color</span>)&#123;</span><br><span class=\"line\">     <span class=\"keyword\">@if</span> <span class=\"keyword\">not</span> map-has-key(<span class=\"variable\">$social-colors</span>,<span class=\"variable\">$color</span>)&#123;</span><br><span class=\"line\">         <span class=\"keyword\">@warn</span> <span class=\"string\">\"No color found for `#&#123;$color&#125;` in $social-colors map. Property omitted.\"</span>;</span><br><span class=\"line\">     &#125;</span><br><span class=\"line\">     <span class=\"keyword\">@return</span> map-get(<span class=\"variable\">$social-colors</span>,<span class=\"variable\">$color</span>);</span><br><span class=\"line\">   &#125;</span><br><span class=\"line\">   <span class=\"selector-class\">.btn-dribble</span> &#123;</span><br><span class=\"line\">     <span class=\"attribute\">color</span>: colors(dribble);</span><br><span class=\"line\">   &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/* each 遍历 map */</span></span><br><span class=\"line\"><span class=\"keyword\">@each</span> <span class=\"variable\">$name</span> in map-keys(<span class=\"variable\">$social-colors</span>)&#123;</span><br><span class=\"line\">  <span class=\"selector-class\">.btn-</span>#&#123;<span class=\"variable\">$name</span>&#125;&#123;</span><br><span class=\"line\">      <span class=\"attribute\">color</span>: colors(<span class=\"variable\">$name</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">@for</span> <span class=\"variable\">$i</span> from <span class=\"number\">1</span> through length(map-keys(<span class=\"variable\">$social-colors</span>))&#123;</span><br><span class=\"line\">  <span class=\"selector-class\">.btn-</span>#&#123;nth(<span class=\"selector-tag\">map</span>-keys(<span class=\"variable\">$social-colors</span>),<span class=\"variable\">$i</span>)&#125; &#123;</span><br><span class=\"line\">    <span class=\"attribute\">color</span>: colors(nth(map-keys(<span class=\"variable\">$social-colors</span>),<span class=\"variable\">$i</span>));</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/*得到所有的值*/</span></span><br><span class=\"line\"><span class=\"variable\">$values</span>: map-values(<span class=\"variable\">$social-colors</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable\">$color</span>: (</span><br><span class=\"line\">  text: <span class=\"number\">#f36</span>,</span><br><span class=\"line\">  link: <span class=\"number\">#f63</span>,</span><br><span class=\"line\">  border: <span class=\"number\">#ddd</span>,</span><br><span class=\"line\">  backround: <span class=\"number\">#fff</span></span><br><span class=\"line\">);</span><br><span class=\"line\"><span class=\"variable\">$typo</span>:(</span><br><span class=\"line\">  font-size: <span class=\"number\">12px</span>,</span><br><span class=\"line\">  line-height: <span class=\"number\">1.6</span></span><br><span class=\"line\">);</span><br><span class=\"line\"><span class=\"variable\">$newcolor</span>: map-merge(<span class=\"variable\">$color</span>, <span class=\"variable\">$typo</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/* 得到新值 */</span></span><br><span class=\"line\"><span class=\"variable\">$map</span>:map-remove(<span class=\"variable\">$social-colors</span>,dribble);</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">ul</span> <span class=\"attr\">class</span>=<span class=\"string\">\"swatches red\"</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">  ...</span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">ul</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">ul</span> <span class=\"attr\">class</span>=<span class=\"string\">\"swatches orange\"</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">  …</span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">ul</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">ul</span> <span class=\"attr\">class</span>=<span class=\"string\">\"swatches yellow\"</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">  …</span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">ul</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">ul</span> <span class=\"attr\">class</span>=<span class=\"string\">\"swatches green\"</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">  …</span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">ul</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">ul</span> <span class=\"attr\">class</span>=<span class=\"string\">\"swatches blue\"</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">  …</span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">ul</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">ul</span> <span class=\"attr\">class</span>=<span class=\"string\">\"swatches purple\"</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">  …</span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">ul</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight scss\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$redBase</span>: <span class=\"number\">#DC143C</span>;</span><br><span class=\"line\"><span class=\"variable\">$orangeBase</span>: saturate(lighten(adjust_hue(<span class=\"variable\">$redBase</span>, <span class=\"number\">39</span>), <span class=\"number\">5</span>), <span class=\"number\">7</span>);<span class=\"comment\">//#f37a16</span></span><br><span class=\"line\"><span class=\"variable\">$yellowBase</span>: saturate(lighten(adjust_hue(<span class=\"variable\">$redBase</span>, <span class=\"number\">64</span>), <span class=\"number\">6</span>), <span class=\"number\">13</span>);<span class=\"comment\">//#fbdc14</span></span><br><span class=\"line\"><span class=\"variable\">$greenBase</span>: desaturate(darken(adjust_hue(<span class=\"variable\">$redBase</span>, <span class=\"number\">102</span>), <span class=\"number\">2</span>), <span class=\"number\">11</span>);<span class=\"comment\">//#73c620</span></span><br><span class=\"line\"><span class=\"variable\">$blueBase</span>: saturate(darken(adjust_hue(<span class=\"variable\">$redBase</span>, <span class=\"number\">201</span>), <span class=\"number\">2</span>), <span class=\"number\">1</span>);<span class=\"comment\">//#12b7d4</span></span><br><span class=\"line\"><span class=\"variable\">$purpleBase</span>: saturate(darken(adjust_hue(<span class=\"variable\">$redBase</span>, <span class=\"number\">296</span>), <span class=\"number\">2</span>), <span class=\"number\">1</span>);<span class=\"comment\">//#a012d4</span></span><br><span class=\"line\"><span class=\"variable\">$blackBase</span>: <span class=\"number\">#777</span>;</span><br><span class=\"line\"><span class=\"variable\">$bgc</span>: <span class=\"number\">#fff</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//定义颜色变暗的 mixin</span></span><br><span class=\"line\"><span class=\"keyword\">@mixin</span> swatchesDarken(<span class=\"variable\">$color</span>) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">@for</span> <span class=\"variable\">$i</span> from <span class=\"number\">1</span> through <span class=\"number\">10</span> &#123;</span><br><span class=\"line\">    <span class=\"variable\">$x</span>:<span class=\"variable\">$i</span>+<span class=\"number\">11</span>;</span><br><span class=\"line\">    <span class=\"selector-tag\">li</span><span class=\"selector-pseudo\">:nth-child</span>(#&#123;<span class=\"variable\">$x</span>&#125;) &#123;</span><br><span class=\"line\">      <span class=\"variable\">$n</span>:<span class=\"variable\">$i</span>*<span class=\"number\">5</span>;</span><br><span class=\"line\">      <span class=\"variable\">$bgc</span>:darken(<span class=\"variable\">$color</span>,<span class=\"variable\">$n</span>); <span class=\"comment\">//颜色变暗</span></span><br><span class=\"line\">      <span class=\"attribute\">background-color</span>: <span class=\"variable\">$bgc</span>;</span><br><span class=\"line\">      &amp;<span class=\"selector-pseudo\">:hover</span><span class=\"selector-pseudo\">:before</span> &#123; <span class=\"comment\">//hover状态显示颜色编号</span></span><br><span class=\"line\">        <span class=\"attribute\">content</span>: <span class=\"string\">\"#&#123;$bgc&#125;\"</span>;</span><br><span class=\"line\">        <span class=\"attribute\">color</span>: lighten(<span class=\"variable\">$bgc</span>,<span class=\"number\">40</span>);</span><br><span class=\"line\">        <span class=\"attribute\">font-family</span>: verdana;</span><br><span class=\"line\">        <span class=\"attribute\">font-size</span>: <span class=\"number\">8px</span>;</span><br><span class=\"line\">        <span class=\"attribute\">padding</span>: <span class=\"number\">2px</span>;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">//定义颜色变亮的 mixin</span></span><br><span class=\"line\"><span class=\"keyword\">@mixin</span> swatchesLighten(<span class=\"variable\">$color</span>) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">@for</span> <span class=\"variable\">$i</span> from <span class=\"number\">1</span> through <span class=\"number\">10</span> &#123;</span><br><span class=\"line\">    <span class=\"variable\">$x</span>:<span class=\"number\">11</span>-<span class=\"variable\">$i</span>;</span><br><span class=\"line\">    <span class=\"selector-tag\">li</span><span class=\"selector-pseudo\">:nth-child</span>(#&#123;<span class=\"variable\">$x</span>&#125;) &#123;</span><br><span class=\"line\">      <span class=\"variable\">$n</span>:<span class=\"variable\">$i</span>*<span class=\"number\">5</span>;</span><br><span class=\"line\">      <span class=\"variable\">$bgc</span>:lighten(<span class=\"variable\">$color</span>,<span class=\"variable\">$n</span>);</span><br><span class=\"line\">      <span class=\"attribute\">background-color</span>: <span class=\"variable\">$bgc</span>;</span><br><span class=\"line\">      &amp;<span class=\"selector-pseudo\">:hover</span><span class=\"selector-pseudo\">:before</span> &#123;</span><br><span class=\"line\">        <span class=\"attribute\">content</span>: <span class=\"string\">\"#&#123;$bgc&#125;\"</span>;</span><br><span class=\"line\">        <span class=\"attribute\">color</span>: darken(<span class=\"variable\">$bgc</span>,<span class=\"number\">40</span>);</span><br><span class=\"line\">        <span class=\"attribute\">font-family</span>: verdana;</span><br><span class=\"line\">        <span class=\"attribute\">font-size</span>: <span class=\"number\">8px</span>;</span><br><span class=\"line\">        <span class=\"attribute\">padding</span>: <span class=\"number\">2px</span>;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-class\">.swatches</span> <span class=\"selector-tag\">li</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">width</span>: <span class=\"number\">4.7619047619%</span>;</span><br><span class=\"line\">  <span class=\"attribute\">float</span>: left;</span><br><span class=\"line\">  <span class=\"attribute\">height</span>: <span class=\"number\">60px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">list-style</span>: none outside none;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-tag\">ul</span><span class=\"selector-class\">.red</span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">@include</span> swatchesLighten(<span class=\"variable\">$redBase</span>);</span><br><span class=\"line\">  <span class=\"keyword\">@include</span> swatchesDarken(<span class=\"variable\">$redBase</span>);</span><br><span class=\"line\">  <span class=\"selector-tag\">li</span><span class=\"selector-pseudo\">:nth-child</span>(11) &#123;</span><br><span class=\"line\">    <span class=\"attribute\">background-color</span>: <span class=\"variable\">$redBase</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-tag\">ul</span><span class=\"selector-class\">.orange</span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">@include</span> swatchesLighten(<span class=\"variable\">$orangeBase</span>);</span><br><span class=\"line\">  <span class=\"keyword\">@include</span> swatchesDarken(<span class=\"variable\">$orangeBase</span>);</span><br><span class=\"line\">  <span class=\"selector-tag\">li</span><span class=\"selector-pseudo\">:nth-child</span>(11) &#123;</span><br><span class=\"line\">    <span class=\"attribute\">background-color</span>: <span class=\"variable\">$orangeBase</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-tag\">ul</span><span class=\"selector-class\">.yellow</span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">@include</span> swatchesLighten(<span class=\"variable\">$yellowBase</span>);</span><br><span class=\"line\">  <span class=\"keyword\">@include</span> swatchesDarken(<span class=\"variable\">$yellowBase</span>);</span><br><span class=\"line\">  <span class=\"selector-tag\">li</span><span class=\"selector-pseudo\">:nth-child</span>(11) &#123;</span><br><span class=\"line\">    <span class=\"attribute\">background-color</span>: <span class=\"variable\">$yellowBase</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-tag\">ul</span><span class=\"selector-class\">.green</span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">@include</span> swatchesLighten(<span class=\"variable\">$greenBase</span>);</span><br><span class=\"line\">  <span class=\"keyword\">@include</span> swatchesDarken(<span class=\"variable\">$greenBase</span>);</span><br><span class=\"line\">  <span class=\"selector-tag\">li</span><span class=\"selector-pseudo\">:nth-child</span>(11) &#123;</span><br><span class=\"line\">    <span class=\"attribute\">background-color</span>: <span class=\"variable\">$greenBase</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-tag\">ul</span><span class=\"selector-class\">.blue</span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">@include</span> swatchesLighten(<span class=\"variable\">$blueBase</span>);</span><br><span class=\"line\">  <span class=\"keyword\">@include</span> swatchesDarken(<span class=\"variable\">$blueBase</span>);</span><br><span class=\"line\">  <span class=\"selector-tag\">li</span><span class=\"selector-pseudo\">:nth-child</span>(11) &#123;</span><br><span class=\"line\">    <span class=\"attribute\">background-color</span>: <span class=\"variable\">$blueBase</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-tag\">ul</span><span class=\"selector-class\">.purple</span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">@include</span> swatchesLighten(<span class=\"variable\">$purpleBase</span>);</span><br><span class=\"line\">  <span class=\"keyword\">@include</span> swatchesDarken(<span class=\"variable\">$purpleBase</span>);</span><br><span class=\"line\">  <span class=\"selector-tag\">li</span><span class=\"selector-pseudo\">:nth-child</span>(11) &#123;</span><br><span class=\"line\">    <span class=\"attribute\">background-color</span>: <span class=\"variable\">$purpleBase</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-tag\">ul</span><span class=\"selector-class\">.black</span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">@include</span> swatchesLighten(<span class=\"variable\">$blackBase</span>);</span><br><span class=\"line\">  <span class=\"keyword\">@include</span> swatchesDarken(<span class=\"variable\">$blackBase</span>);</span><br><span class=\"line\">  <span class=\"selector-tag\">li</span><span class=\"selector-pseudo\">:nth-child</span>(11) &#123;</span><br><span class=\"line\">    <span class=\"attribute\">background-color</span>: <span class=\"variable\">$blackBase</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"最后附上一个rem的例子\"><a href=\"#最后附上一个rem的例子\" class=\"headerlink\" title=\"最后附上一个rem的例子\"></a>最后附上一个rem的例子</h2><figure class=\"highlight scss\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//以750px( iphone6 )为基准定义其他分辨率下的rem</span></span><br><span class=\"line\"><span class=\"keyword\">@mixin</span> useRem(<span class=\"variable\">$size</span>)&#123;</span><br><span class=\"line\">  <span class=\"variable\">$device-list</span> : <span class=\"number\">320px</span>, <span class=\"number\">375px</span> , <span class=\"number\">414px</span>;</span><br><span class=\"line\">  <span class=\"selector-tag\">html</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">@each</span> <span class=\"variable\">$device</span> in <span class=\"variable\">$device-list</span>&#123;</span><br><span class=\"line\">      <span class=\"keyword\">@media</span> screen <span class=\"keyword\">and</span> (min-width: <span class=\"variable\">$device</span>)&#123;</span><br><span class=\"line\">        <span class=\"attribute\">font-size</span>: <span class=\"number\">100px</span> * (<span class=\"variable\">$device</span>/<span class=\"variable\">$size</span>);</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">@include</span> useRem(<span class=\"number\">750px</span>);</span><br></pre></td></tr></table></figure>\n"},{"title":"从零搭建Vue UI组件库(四)","date":"2021-04-16T03:32:26.000Z","description":"尝试搭建自己的Vue UI 组件库, 持续更新(大概)","_content":"\n## 写在前面\n\n顺便调整了 build 文件夹结构，公共的webpack 配置单独提了出来；为了方便区分，把开发服务运行在了 3100 端口（8080 默认 vue 服务占用， 3000默认 vite 服务占用，5000 默认博客服务占用）\n\n> 这篇主要添加项目的代码检查和提交校验，不得不说，这一环节的配置真是又多又杂，所以就不详尽的分布赘述了，本人也是直接使用了 [我自己 vite 脚手架](https://github.com/lost-dream/vite-template)中的配置。\n\n## 加入 eslint/prettier/stylelint 支持\n\n### 安装依赖\n\n```\nnpm install babel-eslint eslint prettier eslint-config-prettier eslint-import-resolver-alias  eslint-plugin-prettier  eslint-plugin-vue @typescript-eslint/eslint-plugin @typescript-eslint/parser -D -W\n```\n\n```\nnpm install -D stylelint stylelint-config-prettier stylelint-config-standard stylelint-order stylelint-scss -W\n```\n\n### 创建`.eslintrc.js`\n\n```js\nmodule.exports = {\n  root: true,\n  env: {\n    browser: true,\n    node: true,\n    es6: true\n  },\n  parser: 'vue-eslint-parser',\n  parserOptions: {\n    parser: '@typescript-eslint/parser',\n    ecmaVersion: 2020,\n    sourceType: 'module',\n    jsxPragma: 'React',\n    ecmaFeatures: {\n      jsx: true,\n      tsx: true,\n      modules: true\n    }\n  },\n  extends: [\n    'plugin:vue/vue3-recommended',\n    'plugin:@typescript-eslint/recommended',\n    'prettier',\n    'plugin:prettier/recommended'\n  ],\n  plugins: ['vue', 'prettier', '@typescript-eslint'],\n  settings: {\n    'import/resolver': {\n      alias: {\n        map: [['@packages', '@website', './packages', './website']],\n        extensions: ['.ts', '.js', '.vue', '.json']\n      }\n    }\n  },\n  rules: {\n    '@typescript-eslint/no-explicit-any': 0,\n    '@typescript-eslint/no-var-requires': 2,\n    '@typescript-eslint/no-empty-function': 2,\n    'vue/custom-event-name-casing': 2,\n    'no-use-before-define': 2,\n    '@typescript-eslint/no-use-before-define': 2,\n    '@typescript-eslint/ban-ts-comment': 2,\n    '@typescript-eslint/ban-types': 2,\n    '@typescript-eslint/no-non-null-assertion': 2,\n    '@typescript-eslint/explicit-module-boundary-types': 0,\n    '@typescript-eslint/no-unused-vars': [\n      'error',\n      {\n        argsIgnorePattern: '^h$',\n        varsIgnorePattern: '^h$'\n      }\n    ],\n    'no-unused-vars': [\n      'error',\n      {\n        argsIgnorePattern: '^h$',\n        varsIgnorePattern: '^h$'\n      }\n    ],\n    'vue/attributes-order': 2,\n    'vue/one-component-per-file': 2,\n    'vue/html-closing-bracket-newline': 2,\n    'vue/max-attributes-per-line': [\n      'error',\n      {\n        singleline: 10,\n        multiline: {\n          max: 10,\n          allowFirstLine: true\n        }\n      }\n    ],\n    // 组件 name 首字母必须大写\n    'vue/component-definition-name-casing': 2,\n    'vue/multiline-html-element-content-newline': 2,\n    'vue/attribute-hyphenation': 2,\n    'vue/require-default-prop': 2,\n    'vue/html-self-closing': [\n      'error',\n      {\n        html: {\n          void: 'always',\n          normal: 'never',\n          component: 'always'\n        },\n        svg: 'always',\n        math: 'always'\n      }\n    ],\n    'prettier/prettier': 'warn'\n  }\n}\n```\n\n### 创建`.prettierrc`\n\n```json\n{\n  \"singleQuote\": true,\n  \"printWidth\": 100,\n  \"tabWidth\": 2,\n  \"useTabs\": false,\n  \"trailingComma\": \"none\",\n  \"bracketSpacing\": true,\n  \"jsxBracketSameLine\": false,\n  \"arrowParens\": \"avoid\",\n  \"semi\": false\n}\n```\n\n### 创建`.eslintignore`\n\n```md\n# Editor\n.vscode\n.idea\n\n# Project\n*.md\n/lib\n/build\n\n# typescript\n*.d.ts\n\n# file\n*.scss\n*.html\n\n# Others\nnode_modules\n```\n\n### 添加`stylelint.config.js`\n\n```js\nmodule.exports = {\n  root: true,\n  plugins: ['stylelint-order', 'stylelint-scss'],\n  extends: ['stylelint-config-standard', 'stylelint-config-prettier'],\n  rules: {\n    'selector-pseudo-class-no-unknown': [\n      true,\n      {\n        ignorePseudoClasses: ['global']\n      }\n    ],\n    'no-empty-source': null,\n    'named-grid-areas-no-invalid': null,\n    'unicode-bom': 'never',\n    'no-descending-specificity': null,\n    'font-family-no-missing-generic-family-keyword': null,\n    'declaration-colon-space-after': 'always-single-line',\n    'declaration-colon-space-before': 'never',\n    'declaration-block-trailing-semicolon': [\n      'always',\n      {\n        ignore: ['single-declaration']\n      }\n    ],\n    'rule-empty-line-before': [\n      'always',\n      {\n        ignore: ['after-comment', 'first-nested']\n      }\n    ],\n    'unit-no-unknown': [true, { ignoreUnits: ['rpx'] }],\n    // Specify the alphabetical order of the attributes in the declaration block\n    'order/properties-order': [\n      'position',\n      'top',\n      'right',\n      'bottom',\n      'left',\n      'z-index',\n      'display',\n      'float',\n      'width',\n      'height',\n      'max-width',\n      'max-height',\n      'min-width',\n      'min-height',\n      'padding',\n      'padding-top',\n      'padding-right',\n      'padding-bottom',\n      'padding-left',\n      'margin',\n      'margin-top',\n      'margin-right',\n      'margin-bottom',\n      'margin-left',\n      'margin-collapse',\n      'margin-top-collapse',\n      'margin-right-collapse',\n      'margin-bottom-collapse',\n      'margin-left-collapse',\n      'overflow',\n      'overflow-x',\n      'overflow-y',\n      'clip',\n      'clear',\n      'font',\n      'font-family',\n      'font-size',\n      'font-smoothing',\n      'osx-font-smoothing',\n      'font-style',\n      'font-weight',\n      'hyphens',\n      'src',\n      'line-height',\n      'letter-spacing',\n      'word-spacing',\n      'color',\n      'text-align',\n      'text-decoration',\n      'text-indent',\n      'text-overflow',\n      'text-rendering',\n      'text-size-adjust',\n      'text-shadow',\n      'text-transform',\n      'word-break',\n      'word-wrap',\n      'white-space',\n      'vertical-align',\n      'list-style',\n      'list-style-type',\n      'list-style-position',\n      'list-style-image',\n      'pointer-events',\n      'cursor',\n      'background',\n      'background-attachment',\n      'background-color',\n      'background-image',\n      'background-position',\n      'background-repeat',\n      'background-size',\n      'border',\n      'border-collapse',\n      'border-top',\n      'border-right',\n      'border-bottom',\n      'border-left',\n      'border-color',\n      'border-image',\n      'border-top-color',\n      'border-right-color',\n      'border-bottom-color',\n      'border-left-color',\n      'border-spacing',\n      'border-style',\n      'border-top-style',\n      'border-right-style',\n      'border-bottom-style',\n      'border-left-style',\n      'border-width',\n      'border-top-width',\n      'border-right-width',\n      'border-bottom-width',\n      'border-left-width',\n      'border-radius',\n      'border-top-right-radius',\n      'border-bottom-right-radius',\n      'border-bottom-left-radius',\n      'border-top-left-radius',\n      'border-radius-topright',\n      'border-radius-bottomright',\n      'border-radius-bottomleft',\n      'border-radius-topleft',\n      'content',\n      'quotes',\n      'outline',\n      'outline-offset',\n      'opacity',\n      'filter',\n      'visibility',\n      'size',\n      'zoom',\n      'transform',\n      'box-align',\n      'box-flex',\n      'box-orient',\n      'box-pack',\n      'box-shadow',\n      'box-sizing',\n      'table-layout',\n      'animation',\n      'animation-delay',\n      'animation-duration',\n      'animation-iteration-count',\n      'animation-name',\n      'animation-play-state',\n      'animation-timing-function',\n      'animation-fill-mode',\n      'transition',\n      'transition-delay',\n      'transition-duration',\n      'transition-property',\n      'transition-timing-function',\n      'background-clip',\n      'backface-visibility',\n      'resize',\n      'appearance',\n      'user-select',\n      'interpolation-mode',\n      'direction',\n      'marks',\n      'page',\n      'set-link-source',\n      'unicode-bidi',\n      'speak'\n    ],\n    'at-rule-no-unknown': null,\n    // [scss-rules](https://www.npmjs.com/package/stylelint-scss)\n    'scss/at-rule-no-unknown': true\n  },\n  ignoreFiles: ['**/*.js', '**/*.jsx', '**/*.tsx', '**/*.ts']\n}\n```\n\n### 添加 lint 脚本\n\n```diff\n{\n  \"scripts\": {\n    \"list\": \"lerna list\",\n    \"dev\": \"webpack-dev-server --progress --config build/webpack.config.dev.js\",\n    \"build\": \"webpack --config build/webpack.config.prod.js\",\n-    \"reinstall\": \"rimraf node_modules && yarn\"\n+    \"reinstall\": \"rimraf node_modules && yarn\",\n+    \"lint:packages\": \"eslint --ext .ts,.js,.vue,.css,.json,.scss packages --fix\",\n+    \"lint:website\": \"eslint --ext .ts,.js,.vue,.css,.json,.scss website --fix\",\n+    \"lint\": \"yarn lint:packages && yarn lint:website\"\n  },\n}\n```\n\n重启服务和编辑器，运行`yarn lint`，就会发现有报错了，按照 lint 规则规范代码即可\n\n> **以上是我自己的规则，可以根据自己和团队的习惯更改相应 rules**\n\n### 添加`git hook`\n\n```\nyarn add -D lint-staged yorkie -W\n```\n\n修改`package.json`\n\n```diff\n{\n+  \"gitHooks\": {\n+   \"pre-commit\": \"lint-staged\",\n+   \"pre-push\": \"yarn lint\"\n+  },\n+  \"lint-staged\": {\n+   \"*.{js,jsx,vue,ts,tsx}\": [\n+      \"yarn lint\",\n+      \"prettier --write\",\n+      \"git add\"\n+    ]\n+  }\n}\n```\n\n改完收工！\n","source":"_posts/从零搭建Vue UI组件库(四).md","raw":"---\ntitle: 从零搭建Vue UI组件库(四)\ndate: 2021-04-16 11:32:26\ntags: [Vue, adminUI]\ncategories: [adminUI]\ndescription: 尝试搭建自己的Vue UI 组件库, 持续更新(大概)\n---\n\n## 写在前面\n\n顺便调整了 build 文件夹结构，公共的webpack 配置单独提了出来；为了方便区分，把开发服务运行在了 3100 端口（8080 默认 vue 服务占用， 3000默认 vite 服务占用，5000 默认博客服务占用）\n\n> 这篇主要添加项目的代码检查和提交校验，不得不说，这一环节的配置真是又多又杂，所以就不详尽的分布赘述了，本人也是直接使用了 [我自己 vite 脚手架](https://github.com/lost-dream/vite-template)中的配置。\n\n## 加入 eslint/prettier/stylelint 支持\n\n### 安装依赖\n\n```\nnpm install babel-eslint eslint prettier eslint-config-prettier eslint-import-resolver-alias  eslint-plugin-prettier  eslint-plugin-vue @typescript-eslint/eslint-plugin @typescript-eslint/parser -D -W\n```\n\n```\nnpm install -D stylelint stylelint-config-prettier stylelint-config-standard stylelint-order stylelint-scss -W\n```\n\n### 创建`.eslintrc.js`\n\n```js\nmodule.exports = {\n  root: true,\n  env: {\n    browser: true,\n    node: true,\n    es6: true\n  },\n  parser: 'vue-eslint-parser',\n  parserOptions: {\n    parser: '@typescript-eslint/parser',\n    ecmaVersion: 2020,\n    sourceType: 'module',\n    jsxPragma: 'React',\n    ecmaFeatures: {\n      jsx: true,\n      tsx: true,\n      modules: true\n    }\n  },\n  extends: [\n    'plugin:vue/vue3-recommended',\n    'plugin:@typescript-eslint/recommended',\n    'prettier',\n    'plugin:prettier/recommended'\n  ],\n  plugins: ['vue', 'prettier', '@typescript-eslint'],\n  settings: {\n    'import/resolver': {\n      alias: {\n        map: [['@packages', '@website', './packages', './website']],\n        extensions: ['.ts', '.js', '.vue', '.json']\n      }\n    }\n  },\n  rules: {\n    '@typescript-eslint/no-explicit-any': 0,\n    '@typescript-eslint/no-var-requires': 2,\n    '@typescript-eslint/no-empty-function': 2,\n    'vue/custom-event-name-casing': 2,\n    'no-use-before-define': 2,\n    '@typescript-eslint/no-use-before-define': 2,\n    '@typescript-eslint/ban-ts-comment': 2,\n    '@typescript-eslint/ban-types': 2,\n    '@typescript-eslint/no-non-null-assertion': 2,\n    '@typescript-eslint/explicit-module-boundary-types': 0,\n    '@typescript-eslint/no-unused-vars': [\n      'error',\n      {\n        argsIgnorePattern: '^h$',\n        varsIgnorePattern: '^h$'\n      }\n    ],\n    'no-unused-vars': [\n      'error',\n      {\n        argsIgnorePattern: '^h$',\n        varsIgnorePattern: '^h$'\n      }\n    ],\n    'vue/attributes-order': 2,\n    'vue/one-component-per-file': 2,\n    'vue/html-closing-bracket-newline': 2,\n    'vue/max-attributes-per-line': [\n      'error',\n      {\n        singleline: 10,\n        multiline: {\n          max: 10,\n          allowFirstLine: true\n        }\n      }\n    ],\n    // 组件 name 首字母必须大写\n    'vue/component-definition-name-casing': 2,\n    'vue/multiline-html-element-content-newline': 2,\n    'vue/attribute-hyphenation': 2,\n    'vue/require-default-prop': 2,\n    'vue/html-self-closing': [\n      'error',\n      {\n        html: {\n          void: 'always',\n          normal: 'never',\n          component: 'always'\n        },\n        svg: 'always',\n        math: 'always'\n      }\n    ],\n    'prettier/prettier': 'warn'\n  }\n}\n```\n\n### 创建`.prettierrc`\n\n```json\n{\n  \"singleQuote\": true,\n  \"printWidth\": 100,\n  \"tabWidth\": 2,\n  \"useTabs\": false,\n  \"trailingComma\": \"none\",\n  \"bracketSpacing\": true,\n  \"jsxBracketSameLine\": false,\n  \"arrowParens\": \"avoid\",\n  \"semi\": false\n}\n```\n\n### 创建`.eslintignore`\n\n```md\n# Editor\n.vscode\n.idea\n\n# Project\n*.md\n/lib\n/build\n\n# typescript\n*.d.ts\n\n# file\n*.scss\n*.html\n\n# Others\nnode_modules\n```\n\n### 添加`stylelint.config.js`\n\n```js\nmodule.exports = {\n  root: true,\n  plugins: ['stylelint-order', 'stylelint-scss'],\n  extends: ['stylelint-config-standard', 'stylelint-config-prettier'],\n  rules: {\n    'selector-pseudo-class-no-unknown': [\n      true,\n      {\n        ignorePseudoClasses: ['global']\n      }\n    ],\n    'no-empty-source': null,\n    'named-grid-areas-no-invalid': null,\n    'unicode-bom': 'never',\n    'no-descending-specificity': null,\n    'font-family-no-missing-generic-family-keyword': null,\n    'declaration-colon-space-after': 'always-single-line',\n    'declaration-colon-space-before': 'never',\n    'declaration-block-trailing-semicolon': [\n      'always',\n      {\n        ignore: ['single-declaration']\n      }\n    ],\n    'rule-empty-line-before': [\n      'always',\n      {\n        ignore: ['after-comment', 'first-nested']\n      }\n    ],\n    'unit-no-unknown': [true, { ignoreUnits: ['rpx'] }],\n    // Specify the alphabetical order of the attributes in the declaration block\n    'order/properties-order': [\n      'position',\n      'top',\n      'right',\n      'bottom',\n      'left',\n      'z-index',\n      'display',\n      'float',\n      'width',\n      'height',\n      'max-width',\n      'max-height',\n      'min-width',\n      'min-height',\n      'padding',\n      'padding-top',\n      'padding-right',\n      'padding-bottom',\n      'padding-left',\n      'margin',\n      'margin-top',\n      'margin-right',\n      'margin-bottom',\n      'margin-left',\n      'margin-collapse',\n      'margin-top-collapse',\n      'margin-right-collapse',\n      'margin-bottom-collapse',\n      'margin-left-collapse',\n      'overflow',\n      'overflow-x',\n      'overflow-y',\n      'clip',\n      'clear',\n      'font',\n      'font-family',\n      'font-size',\n      'font-smoothing',\n      'osx-font-smoothing',\n      'font-style',\n      'font-weight',\n      'hyphens',\n      'src',\n      'line-height',\n      'letter-spacing',\n      'word-spacing',\n      'color',\n      'text-align',\n      'text-decoration',\n      'text-indent',\n      'text-overflow',\n      'text-rendering',\n      'text-size-adjust',\n      'text-shadow',\n      'text-transform',\n      'word-break',\n      'word-wrap',\n      'white-space',\n      'vertical-align',\n      'list-style',\n      'list-style-type',\n      'list-style-position',\n      'list-style-image',\n      'pointer-events',\n      'cursor',\n      'background',\n      'background-attachment',\n      'background-color',\n      'background-image',\n      'background-position',\n      'background-repeat',\n      'background-size',\n      'border',\n      'border-collapse',\n      'border-top',\n      'border-right',\n      'border-bottom',\n      'border-left',\n      'border-color',\n      'border-image',\n      'border-top-color',\n      'border-right-color',\n      'border-bottom-color',\n      'border-left-color',\n      'border-spacing',\n      'border-style',\n      'border-top-style',\n      'border-right-style',\n      'border-bottom-style',\n      'border-left-style',\n      'border-width',\n      'border-top-width',\n      'border-right-width',\n      'border-bottom-width',\n      'border-left-width',\n      'border-radius',\n      'border-top-right-radius',\n      'border-bottom-right-radius',\n      'border-bottom-left-radius',\n      'border-top-left-radius',\n      'border-radius-topright',\n      'border-radius-bottomright',\n      'border-radius-bottomleft',\n      'border-radius-topleft',\n      'content',\n      'quotes',\n      'outline',\n      'outline-offset',\n      'opacity',\n      'filter',\n      'visibility',\n      'size',\n      'zoom',\n      'transform',\n      'box-align',\n      'box-flex',\n      'box-orient',\n      'box-pack',\n      'box-shadow',\n      'box-sizing',\n      'table-layout',\n      'animation',\n      'animation-delay',\n      'animation-duration',\n      'animation-iteration-count',\n      'animation-name',\n      'animation-play-state',\n      'animation-timing-function',\n      'animation-fill-mode',\n      'transition',\n      'transition-delay',\n      'transition-duration',\n      'transition-property',\n      'transition-timing-function',\n      'background-clip',\n      'backface-visibility',\n      'resize',\n      'appearance',\n      'user-select',\n      'interpolation-mode',\n      'direction',\n      'marks',\n      'page',\n      'set-link-source',\n      'unicode-bidi',\n      'speak'\n    ],\n    'at-rule-no-unknown': null,\n    // [scss-rules](https://www.npmjs.com/package/stylelint-scss)\n    'scss/at-rule-no-unknown': true\n  },\n  ignoreFiles: ['**/*.js', '**/*.jsx', '**/*.tsx', '**/*.ts']\n}\n```\n\n### 添加 lint 脚本\n\n```diff\n{\n  \"scripts\": {\n    \"list\": \"lerna list\",\n    \"dev\": \"webpack-dev-server --progress --config build/webpack.config.dev.js\",\n    \"build\": \"webpack --config build/webpack.config.prod.js\",\n-    \"reinstall\": \"rimraf node_modules && yarn\"\n+    \"reinstall\": \"rimraf node_modules && yarn\",\n+    \"lint:packages\": \"eslint --ext .ts,.js,.vue,.css,.json,.scss packages --fix\",\n+    \"lint:website\": \"eslint --ext .ts,.js,.vue,.css,.json,.scss website --fix\",\n+    \"lint\": \"yarn lint:packages && yarn lint:website\"\n  },\n}\n```\n\n重启服务和编辑器，运行`yarn lint`，就会发现有报错了，按照 lint 规则规范代码即可\n\n> **以上是我自己的规则，可以根据自己和团队的习惯更改相应 rules**\n\n### 添加`git hook`\n\n```\nyarn add -D lint-staged yorkie -W\n```\n\n修改`package.json`\n\n```diff\n{\n+  \"gitHooks\": {\n+   \"pre-commit\": \"lint-staged\",\n+   \"pre-push\": \"yarn lint\"\n+  },\n+  \"lint-staged\": {\n+   \"*.{js,jsx,vue,ts,tsx}\": [\n+      \"yarn lint\",\n+      \"prettier --write\",\n+      \"git add\"\n+    ]\n+  }\n}\n```\n\n改完收工！\n","slug":"从零搭建Vue UI组件库(四)","published":1,"updated":"2021-06-25T11:19:55.445Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckqc904p9001vwotvnv2smul8","content":"<h2 id=\"写在前面\"><a href=\"#写在前面\" class=\"headerlink\" title=\"写在前面\"></a>写在前面</h2><p>顺便调整了 build 文件夹结构，公共的webpack 配置单独提了出来；为了方便区分，把开发服务运行在了 3100 端口（8080 默认 vue 服务占用， 3000默认 vite 服务占用，5000 默认博客服务占用）</p>\n<blockquote>\n<p>这篇主要添加项目的代码检查和提交校验，不得不说，这一环节的配置真是又多又杂，所以就不详尽的分布赘述了，本人也是直接使用了 <a href=\"https://github.com/lost-dream/vite-template\" target=\"_blank\" rel=\"noopener\">我自己 vite 脚手架</a>中的配置。</p>\n</blockquote>\n<h2 id=\"加入-eslint-prettier-stylelint-支持\"><a href=\"#加入-eslint-prettier-stylelint-支持\" class=\"headerlink\" title=\"加入 eslint/prettier/stylelint 支持\"></a>加入 eslint/prettier/stylelint 支持</h2><h3 id=\"安装依赖\"><a href=\"#安装依赖\" class=\"headerlink\" title=\"安装依赖\"></a>安装依赖</h3><div class=\"code-panel__wrapper\" autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\"><header class=\"mac-panel\"><span class=\"doc-path\"></span><span class=\"mac-panel__language\">PLAIN</span></header><figure class=\"iseeu highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install babel-eslint eslint prettier eslint-config-prettier eslint-import-resolver-alias  eslint-plugin-prettier  eslint-plugin-vue @typescript-eslint/eslint-plugin @typescript-eslint/parser -D -W</span><br></pre></td></tr></table></figure></div>\n<div class=\"code-panel__wrapper\" autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\"><header class=\"mac-panel\"><span class=\"doc-path\"></span><span class=\"mac-panel__language\">PLAIN</span></header><figure class=\"iseeu highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install -D stylelint stylelint-config-prettier stylelint-config-standard stylelint-order stylelint-scss -W</span><br></pre></td></tr></table></figure></div>\n<h3 id=\"创建-eslintrc-js\"><a href=\"#创建-eslintrc-js\" class=\"headerlink\" title=\"创建.eslintrc.js\"></a>创建<code>.eslintrc.js</code></h3><div class=\"code-panel__wrapper\" autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\"><header class=\"mac-panel\"><span class=\"doc-path\"></span><span class=\"mac-panel__language\">JS</span></header><figure class=\"iseeu highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">module</span>.exports = &#123;</span><br><span class=\"line\">  root: <span class=\"literal\">true</span>,</span><br><span class=\"line\">  env: &#123;</span><br><span class=\"line\">    browser: <span class=\"literal\">true</span>,</span><br><span class=\"line\">    node: <span class=\"literal\">true</span>,</span><br><span class=\"line\">    es6: <span class=\"literal\">true</span></span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  parser: <span class=\"string\">'vue-eslint-parser'</span>,</span><br><span class=\"line\">  parserOptions: &#123;</span><br><span class=\"line\">    parser: <span class=\"string\">'@typescript-eslint/parser'</span>,</span><br><span class=\"line\">    ecmaVersion: <span class=\"number\">2020</span>,</span><br><span class=\"line\">    sourceType: <span class=\"string\">'module'</span>,</span><br><span class=\"line\">    jsxPragma: <span class=\"string\">'React'</span>,</span><br><span class=\"line\">    ecmaFeatures: &#123;</span><br><span class=\"line\">      jsx: <span class=\"literal\">true</span>,</span><br><span class=\"line\">      tsx: <span class=\"literal\">true</span>,</span><br><span class=\"line\">      modules: <span class=\"literal\">true</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  extends: [</span><br><span class=\"line\">    <span class=\"string\">'plugin:vue/vue3-recommended'</span>,</span><br><span class=\"line\">    <span class=\"string\">'plugin:@typescript-eslint/recommended'</span>,</span><br><span class=\"line\">    <span class=\"string\">'prettier'</span>,</span><br><span class=\"line\">    <span class=\"string\">'plugin:prettier/recommended'</span></span><br><span class=\"line\">  ],</span><br><span class=\"line\">  plugins: [<span class=\"string\">'vue'</span>, <span class=\"string\">'prettier'</span>, <span class=\"string\">'@typescript-eslint'</span>],</span><br><span class=\"line\">  settings: &#123;</span><br><span class=\"line\">    <span class=\"string\">'import/resolver'</span>: &#123;</span><br><span class=\"line\">      alias: &#123;</span><br><span class=\"line\">        map: [[<span class=\"string\">'@packages'</span>, <span class=\"string\">'@website'</span>, <span class=\"string\">'./packages'</span>, <span class=\"string\">'./website'</span>]],</span><br><span class=\"line\">        extensions: [<span class=\"string\">'.ts'</span>, <span class=\"string\">'.js'</span>, <span class=\"string\">'.vue'</span>, <span class=\"string\">'.json'</span>]</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  rules: &#123;</span><br><span class=\"line\">    <span class=\"string\">'@typescript-eslint/no-explicit-any'</span>: <span class=\"number\">0</span>,</span><br><span class=\"line\">    <span class=\"string\">'@typescript-eslint/no-var-requires'</span>: <span class=\"number\">2</span>,</span><br><span class=\"line\">    <span class=\"string\">'@typescript-eslint/no-empty-function'</span>: <span class=\"number\">2</span>,</span><br><span class=\"line\">    <span class=\"string\">'vue/custom-event-name-casing'</span>: <span class=\"number\">2</span>,</span><br><span class=\"line\">    <span class=\"string\">'no-use-before-define'</span>: <span class=\"number\">2</span>,</span><br><span class=\"line\">    <span class=\"string\">'@typescript-eslint/no-use-before-define'</span>: <span class=\"number\">2</span>,</span><br><span class=\"line\">    <span class=\"string\">'@typescript-eslint/ban-ts-comment'</span>: <span class=\"number\">2</span>,</span><br><span class=\"line\">    <span class=\"string\">'@typescript-eslint/ban-types'</span>: <span class=\"number\">2</span>,</span><br><span class=\"line\">    <span class=\"string\">'@typescript-eslint/no-non-null-assertion'</span>: <span class=\"number\">2</span>,</span><br><span class=\"line\">    <span class=\"string\">'@typescript-eslint/explicit-module-boundary-types'</span>: <span class=\"number\">0</span>,</span><br><span class=\"line\">    <span class=\"string\">'@typescript-eslint/no-unused-vars'</span>: [</span><br><span class=\"line\">      <span class=\"string\">'error'</span>,</span><br><span class=\"line\">      &#123;</span><br><span class=\"line\">        argsIgnorePattern: <span class=\"string\">'^h$'</span>,</span><br><span class=\"line\">        varsIgnorePattern: <span class=\"string\">'^h$'</span></span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    ],</span><br><span class=\"line\">    <span class=\"string\">'no-unused-vars'</span>: [</span><br><span class=\"line\">      <span class=\"string\">'error'</span>,</span><br><span class=\"line\">      &#123;</span><br><span class=\"line\">        argsIgnorePattern: <span class=\"string\">'^h$'</span>,</span><br><span class=\"line\">        varsIgnorePattern: <span class=\"string\">'^h$'</span></span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    ],</span><br><span class=\"line\">    <span class=\"string\">'vue/attributes-order'</span>: <span class=\"number\">2</span>,</span><br><span class=\"line\">    <span class=\"string\">'vue/one-component-per-file'</span>: <span class=\"number\">2</span>,</span><br><span class=\"line\">    <span class=\"string\">'vue/html-closing-bracket-newline'</span>: <span class=\"number\">2</span>,</span><br><span class=\"line\">    <span class=\"string\">'vue/max-attributes-per-line'</span>: [</span><br><span class=\"line\">      <span class=\"string\">'error'</span>,</span><br><span class=\"line\">      &#123;</span><br><span class=\"line\">        singleline: <span class=\"number\">10</span>,</span><br><span class=\"line\">        multiline: &#123;</span><br><span class=\"line\">          max: <span class=\"number\">10</span>,</span><br><span class=\"line\">          allowFirstLine: <span class=\"literal\">true</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    ],</span><br><span class=\"line\">    <span class=\"comment\">// 组件 name 首字母必须大写</span></span><br><span class=\"line\">    <span class=\"string\">'vue/component-definition-name-casing'</span>: <span class=\"number\">2</span>,</span><br><span class=\"line\">    <span class=\"string\">'vue/multiline-html-element-content-newline'</span>: <span class=\"number\">2</span>,</span><br><span class=\"line\">    <span class=\"string\">'vue/attribute-hyphenation'</span>: <span class=\"number\">2</span>,</span><br><span class=\"line\">    <span class=\"string\">'vue/require-default-prop'</span>: <span class=\"number\">2</span>,</span><br><span class=\"line\">    <span class=\"string\">'vue/html-self-closing'</span>: [</span><br><span class=\"line\">      <span class=\"string\">'error'</span>,</span><br><span class=\"line\">      &#123;</span><br><span class=\"line\">        html: &#123;</span><br><span class=\"line\">          <span class=\"keyword\">void</span>: <span class=\"string\">'always'</span>,</span><br><span class=\"line\">          normal: <span class=\"string\">'never'</span>,</span><br><span class=\"line\">          component: <span class=\"string\">'always'</span></span><br><span class=\"line\">        &#125;,</span><br><span class=\"line\">        svg: <span class=\"string\">'always'</span>,</span><br><span class=\"line\">        math: <span class=\"string\">'always'</span></span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    ],</span><br><span class=\"line\">    <span class=\"string\">'prettier/prettier'</span>: <span class=\"string\">'warn'</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></div>\n<h3 id=\"创建-prettierrc\"><a href=\"#创建-prettierrc\" class=\"headerlink\" title=\"创建.prettierrc\"></a>创建<code>.prettierrc</code></h3><div class=\"code-panel__wrapper\" autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\"><header class=\"mac-panel\"><span class=\"doc-path\"></span><span class=\"mac-panel__language\">JSON</span></header><figure class=\"iseeu highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"attr\">\"singleQuote\"</span>: <span class=\"literal\">true</span>,</span><br><span class=\"line\">  <span class=\"attr\">\"printWidth\"</span>: <span class=\"number\">100</span>,</span><br><span class=\"line\">  <span class=\"attr\">\"tabWidth\"</span>: <span class=\"number\">2</span>,</span><br><span class=\"line\">  <span class=\"attr\">\"useTabs\"</span>: <span class=\"literal\">false</span>,</span><br><span class=\"line\">  <span class=\"attr\">\"trailingComma\"</span>: <span class=\"string\">\"none\"</span>,</span><br><span class=\"line\">  <span class=\"attr\">\"bracketSpacing\"</span>: <span class=\"literal\">true</span>,</span><br><span class=\"line\">  <span class=\"attr\">\"jsxBracketSameLine\"</span>: <span class=\"literal\">false</span>,</span><br><span class=\"line\">  <span class=\"attr\">\"arrowParens\"</span>: <span class=\"string\">\"avoid\"</span>,</span><br><span class=\"line\">  <span class=\"attr\">\"semi\"</span>: <span class=\"literal\">false</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></div>\n<h3 id=\"创建-eslintignore\"><a href=\"#创建-eslintignore\" class=\"headerlink\" title=\"创建.eslintignore\"></a>创建<code>.eslintignore</code></h3><div class=\"code-panel__wrapper\" autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\"><header class=\"mac-panel\"><span class=\"doc-path\"></span><span class=\"mac-panel__language\">MD</span></header><figure class=\"iseeu highlight md\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"section\"># Editor</span></span><br><span class=\"line\">.vscode</span><br><span class=\"line\">.idea</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"section\"># Project</span></span><br><span class=\"line\">*.md</span><br><span class=\"line\">/lib</span><br><span class=\"line\">/build</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"section\"># typescript</span></span><br><span class=\"line\">*.d.ts</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"section\"># file</span></span><br><span class=\"line\">*.scss</span><br><span class=\"line\">*.html</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"section\"># Others</span></span><br><span class=\"line\">node_modules</span><br></pre></td></tr></table></figure></div>\n<h3 id=\"添加stylelint-config-js\"><a href=\"#添加stylelint-config-js\" class=\"headerlink\" title=\"添加stylelint.config.js\"></a>添加<code>stylelint.config.js</code></h3><div class=\"code-panel__wrapper\" autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\"><header class=\"mac-panel\"><span class=\"doc-path\"></span><span class=\"mac-panel__language\">JS</span></header><figure class=\"iseeu highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br><span class=\"line\">165</span><br><span class=\"line\">166</span><br><span class=\"line\">167</span><br><span class=\"line\">168</span><br><span class=\"line\">169</span><br><span class=\"line\">170</span><br><span class=\"line\">171</span><br><span class=\"line\">172</span><br><span class=\"line\">173</span><br><span class=\"line\">174</span><br><span class=\"line\">175</span><br><span class=\"line\">176</span><br><span class=\"line\">177</span><br><span class=\"line\">178</span><br><span class=\"line\">179</span><br><span class=\"line\">180</span><br><span class=\"line\">181</span><br><span class=\"line\">182</span><br><span class=\"line\">183</span><br><span class=\"line\">184</span><br><span class=\"line\">185</span><br><span class=\"line\">186</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">module</span>.exports = &#123;</span><br><span class=\"line\">  root: <span class=\"literal\">true</span>,</span><br><span class=\"line\">  plugins: [<span class=\"string\">'stylelint-order'</span>, <span class=\"string\">'stylelint-scss'</span>],</span><br><span class=\"line\">  extends: [<span class=\"string\">'stylelint-config-standard'</span>, <span class=\"string\">'stylelint-config-prettier'</span>],</span><br><span class=\"line\">  rules: &#123;</span><br><span class=\"line\">    <span class=\"string\">'selector-pseudo-class-no-unknown'</span>: [</span><br><span class=\"line\">      <span class=\"literal\">true</span>,</span><br><span class=\"line\">      &#123;</span><br><span class=\"line\">        ignorePseudoClasses: [<span class=\"string\">'global'</span>]</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    ],</span><br><span class=\"line\">    <span class=\"string\">'no-empty-source'</span>: <span class=\"literal\">null</span>,</span><br><span class=\"line\">    <span class=\"string\">'named-grid-areas-no-invalid'</span>: <span class=\"literal\">null</span>,</span><br><span class=\"line\">    <span class=\"string\">'unicode-bom'</span>: <span class=\"string\">'never'</span>,</span><br><span class=\"line\">    <span class=\"string\">'no-descending-specificity'</span>: <span class=\"literal\">null</span>,</span><br><span class=\"line\">    <span class=\"string\">'font-family-no-missing-generic-family-keyword'</span>: <span class=\"literal\">null</span>,</span><br><span class=\"line\">    <span class=\"string\">'declaration-colon-space-after'</span>: <span class=\"string\">'always-single-line'</span>,</span><br><span class=\"line\">    <span class=\"string\">'declaration-colon-space-before'</span>: <span class=\"string\">'never'</span>,</span><br><span class=\"line\">    <span class=\"string\">'declaration-block-trailing-semicolon'</span>: [</span><br><span class=\"line\">      <span class=\"string\">'always'</span>,</span><br><span class=\"line\">      &#123;</span><br><span class=\"line\">        ignore: [<span class=\"string\">'single-declaration'</span>]</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    ],</span><br><span class=\"line\">    <span class=\"string\">'rule-empty-line-before'</span>: [</span><br><span class=\"line\">      <span class=\"string\">'always'</span>,</span><br><span class=\"line\">      &#123;</span><br><span class=\"line\">        ignore: [<span class=\"string\">'after-comment'</span>, <span class=\"string\">'first-nested'</span>]</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    ],</span><br><span class=\"line\">    <span class=\"string\">'unit-no-unknown'</span>: [<span class=\"literal\">true</span>, &#123; <span class=\"attr\">ignoreUnits</span>: [<span class=\"string\">'rpx'</span>] &#125;],</span><br><span class=\"line\">    <span class=\"comment\">// Specify the alphabetical order of the attributes in the declaration block</span></span><br><span class=\"line\">    <span class=\"string\">'order/properties-order'</span>: [</span><br><span class=\"line\">      <span class=\"string\">'position'</span>,</span><br><span class=\"line\">      <span class=\"string\">'top'</span>,</span><br><span class=\"line\">      <span class=\"string\">'right'</span>,</span><br><span class=\"line\">      <span class=\"string\">'bottom'</span>,</span><br><span class=\"line\">      <span class=\"string\">'left'</span>,</span><br><span class=\"line\">      <span class=\"string\">'z-index'</span>,</span><br><span class=\"line\">      <span class=\"string\">'display'</span>,</span><br><span class=\"line\">      <span class=\"string\">'float'</span>,</span><br><span class=\"line\">      <span class=\"string\">'width'</span>,</span><br><span class=\"line\">      <span class=\"string\">'height'</span>,</span><br><span class=\"line\">      <span class=\"string\">'max-width'</span>,</span><br><span class=\"line\">      <span class=\"string\">'max-height'</span>,</span><br><span class=\"line\">      <span class=\"string\">'min-width'</span>,</span><br><span class=\"line\">      <span class=\"string\">'min-height'</span>,</span><br><span class=\"line\">      <span class=\"string\">'padding'</span>,</span><br><span class=\"line\">      <span class=\"string\">'padding-top'</span>,</span><br><span class=\"line\">      <span class=\"string\">'padding-right'</span>,</span><br><span class=\"line\">      <span class=\"string\">'padding-bottom'</span>,</span><br><span class=\"line\">      <span class=\"string\">'padding-left'</span>,</span><br><span class=\"line\">      <span class=\"string\">'margin'</span>,</span><br><span class=\"line\">      <span class=\"string\">'margin-top'</span>,</span><br><span class=\"line\">      <span class=\"string\">'margin-right'</span>,</span><br><span class=\"line\">      <span class=\"string\">'margin-bottom'</span>,</span><br><span class=\"line\">      <span class=\"string\">'margin-left'</span>,</span><br><span class=\"line\">      <span class=\"string\">'margin-collapse'</span>,</span><br><span class=\"line\">      <span class=\"string\">'margin-top-collapse'</span>,</span><br><span class=\"line\">      <span class=\"string\">'margin-right-collapse'</span>,</span><br><span class=\"line\">      <span class=\"string\">'margin-bottom-collapse'</span>,</span><br><span class=\"line\">      <span class=\"string\">'margin-left-collapse'</span>,</span><br><span class=\"line\">      <span class=\"string\">'overflow'</span>,</span><br><span class=\"line\">      <span class=\"string\">'overflow-x'</span>,</span><br><span class=\"line\">      <span class=\"string\">'overflow-y'</span>,</span><br><span class=\"line\">      <span class=\"string\">'clip'</span>,</span><br><span class=\"line\">      <span class=\"string\">'clear'</span>,</span><br><span class=\"line\">      <span class=\"string\">'font'</span>,</span><br><span class=\"line\">      <span class=\"string\">'font-family'</span>,</span><br><span class=\"line\">      <span class=\"string\">'font-size'</span>,</span><br><span class=\"line\">      <span class=\"string\">'font-smoothing'</span>,</span><br><span class=\"line\">      <span class=\"string\">'osx-font-smoothing'</span>,</span><br><span class=\"line\">      <span class=\"string\">'font-style'</span>,</span><br><span class=\"line\">      <span class=\"string\">'font-weight'</span>,</span><br><span class=\"line\">      <span class=\"string\">'hyphens'</span>,</span><br><span class=\"line\">      <span class=\"string\">'src'</span>,</span><br><span class=\"line\">      <span class=\"string\">'line-height'</span>,</span><br><span class=\"line\">      <span class=\"string\">'letter-spacing'</span>,</span><br><span class=\"line\">      <span class=\"string\">'word-spacing'</span>,</span><br><span class=\"line\">      <span class=\"string\">'color'</span>,</span><br><span class=\"line\">      <span class=\"string\">'text-align'</span>,</span><br><span class=\"line\">      <span class=\"string\">'text-decoration'</span>,</span><br><span class=\"line\">      <span class=\"string\">'text-indent'</span>,</span><br><span class=\"line\">      <span class=\"string\">'text-overflow'</span>,</span><br><span class=\"line\">      <span class=\"string\">'text-rendering'</span>,</span><br><span class=\"line\">      <span class=\"string\">'text-size-adjust'</span>,</span><br><span class=\"line\">      <span class=\"string\">'text-shadow'</span>,</span><br><span class=\"line\">      <span class=\"string\">'text-transform'</span>,</span><br><span class=\"line\">      <span class=\"string\">'word-break'</span>,</span><br><span class=\"line\">      <span class=\"string\">'word-wrap'</span>,</span><br><span class=\"line\">      <span class=\"string\">'white-space'</span>,</span><br><span class=\"line\">      <span class=\"string\">'vertical-align'</span>,</span><br><span class=\"line\">      <span class=\"string\">'list-style'</span>,</span><br><span class=\"line\">      <span class=\"string\">'list-style-type'</span>,</span><br><span class=\"line\">      <span class=\"string\">'list-style-position'</span>,</span><br><span class=\"line\">      <span class=\"string\">'list-style-image'</span>,</span><br><span class=\"line\">      <span class=\"string\">'pointer-events'</span>,</span><br><span class=\"line\">      <span class=\"string\">'cursor'</span>,</span><br><span class=\"line\">      <span class=\"string\">'background'</span>,</span><br><span class=\"line\">      <span class=\"string\">'background-attachment'</span>,</span><br><span class=\"line\">      <span class=\"string\">'background-color'</span>,</span><br><span class=\"line\">      <span class=\"string\">'background-image'</span>,</span><br><span class=\"line\">      <span class=\"string\">'background-position'</span>,</span><br><span class=\"line\">      <span class=\"string\">'background-repeat'</span>,</span><br><span class=\"line\">      <span class=\"string\">'background-size'</span>,</span><br><span class=\"line\">      <span class=\"string\">'border'</span>,</span><br><span class=\"line\">      <span class=\"string\">'border-collapse'</span>,</span><br><span class=\"line\">      <span class=\"string\">'border-top'</span>,</span><br><span class=\"line\">      <span class=\"string\">'border-right'</span>,</span><br><span class=\"line\">      <span class=\"string\">'border-bottom'</span>,</span><br><span class=\"line\">      <span class=\"string\">'border-left'</span>,</span><br><span class=\"line\">      <span class=\"string\">'border-color'</span>,</span><br><span class=\"line\">      <span class=\"string\">'border-image'</span>,</span><br><span class=\"line\">      <span class=\"string\">'border-top-color'</span>,</span><br><span class=\"line\">      <span class=\"string\">'border-right-color'</span>,</span><br><span class=\"line\">      <span class=\"string\">'border-bottom-color'</span>,</span><br><span class=\"line\">      <span class=\"string\">'border-left-color'</span>,</span><br><span class=\"line\">      <span class=\"string\">'border-spacing'</span>,</span><br><span class=\"line\">      <span class=\"string\">'border-style'</span>,</span><br><span class=\"line\">      <span class=\"string\">'border-top-style'</span>,</span><br><span class=\"line\">      <span class=\"string\">'border-right-style'</span>,</span><br><span class=\"line\">      <span class=\"string\">'border-bottom-style'</span>,</span><br><span class=\"line\">      <span class=\"string\">'border-left-style'</span>,</span><br><span class=\"line\">      <span class=\"string\">'border-width'</span>,</span><br><span class=\"line\">      <span class=\"string\">'border-top-width'</span>,</span><br><span class=\"line\">      <span class=\"string\">'border-right-width'</span>,</span><br><span class=\"line\">      <span class=\"string\">'border-bottom-width'</span>,</span><br><span class=\"line\">      <span class=\"string\">'border-left-width'</span>,</span><br><span class=\"line\">      <span class=\"string\">'border-radius'</span>,</span><br><span class=\"line\">      <span class=\"string\">'border-top-right-radius'</span>,</span><br><span class=\"line\">      <span class=\"string\">'border-bottom-right-radius'</span>,</span><br><span class=\"line\">      <span class=\"string\">'border-bottom-left-radius'</span>,</span><br><span class=\"line\">      <span class=\"string\">'border-top-left-radius'</span>,</span><br><span class=\"line\">      <span class=\"string\">'border-radius-topright'</span>,</span><br><span class=\"line\">      <span class=\"string\">'border-radius-bottomright'</span>,</span><br><span class=\"line\">      <span class=\"string\">'border-radius-bottomleft'</span>,</span><br><span class=\"line\">      <span class=\"string\">'border-radius-topleft'</span>,</span><br><span class=\"line\">      <span class=\"string\">'content'</span>,</span><br><span class=\"line\">      <span class=\"string\">'quotes'</span>,</span><br><span class=\"line\">      <span class=\"string\">'outline'</span>,</span><br><span class=\"line\">      <span class=\"string\">'outline-offset'</span>,</span><br><span class=\"line\">      <span class=\"string\">'opacity'</span>,</span><br><span class=\"line\">      <span class=\"string\">'filter'</span>,</span><br><span class=\"line\">      <span class=\"string\">'visibility'</span>,</span><br><span class=\"line\">      <span class=\"string\">'size'</span>,</span><br><span class=\"line\">      <span class=\"string\">'zoom'</span>,</span><br><span class=\"line\">      <span class=\"string\">'transform'</span>,</span><br><span class=\"line\">      <span class=\"string\">'box-align'</span>,</span><br><span class=\"line\">      <span class=\"string\">'box-flex'</span>,</span><br><span class=\"line\">      <span class=\"string\">'box-orient'</span>,</span><br><span class=\"line\">      <span class=\"string\">'box-pack'</span>,</span><br><span class=\"line\">      <span class=\"string\">'box-shadow'</span>,</span><br><span class=\"line\">      <span class=\"string\">'box-sizing'</span>,</span><br><span class=\"line\">      <span class=\"string\">'table-layout'</span>,</span><br><span class=\"line\">      <span class=\"string\">'animation'</span>,</span><br><span class=\"line\">      <span class=\"string\">'animation-delay'</span>,</span><br><span class=\"line\">      <span class=\"string\">'animation-duration'</span>,</span><br><span class=\"line\">      <span class=\"string\">'animation-iteration-count'</span>,</span><br><span class=\"line\">      <span class=\"string\">'animation-name'</span>,</span><br><span class=\"line\">      <span class=\"string\">'animation-play-state'</span>,</span><br><span class=\"line\">      <span class=\"string\">'animation-timing-function'</span>,</span><br><span class=\"line\">      <span class=\"string\">'animation-fill-mode'</span>,</span><br><span class=\"line\">      <span class=\"string\">'transition'</span>,</span><br><span class=\"line\">      <span class=\"string\">'transition-delay'</span>,</span><br><span class=\"line\">      <span class=\"string\">'transition-duration'</span>,</span><br><span class=\"line\">      <span class=\"string\">'transition-property'</span>,</span><br><span class=\"line\">      <span class=\"string\">'transition-timing-function'</span>,</span><br><span class=\"line\">      <span class=\"string\">'background-clip'</span>,</span><br><span class=\"line\">      <span class=\"string\">'backface-visibility'</span>,</span><br><span class=\"line\">      <span class=\"string\">'resize'</span>,</span><br><span class=\"line\">      <span class=\"string\">'appearance'</span>,</span><br><span class=\"line\">      <span class=\"string\">'user-select'</span>,</span><br><span class=\"line\">      <span class=\"string\">'interpolation-mode'</span>,</span><br><span class=\"line\">      <span class=\"string\">'direction'</span>,</span><br><span class=\"line\">      <span class=\"string\">'marks'</span>,</span><br><span class=\"line\">      <span class=\"string\">'page'</span>,</span><br><span class=\"line\">      <span class=\"string\">'set-link-source'</span>,</span><br><span class=\"line\">      <span class=\"string\">'unicode-bidi'</span>,</span><br><span class=\"line\">      <span class=\"string\">'speak'</span></span><br><span class=\"line\">    ],</span><br><span class=\"line\">    <span class=\"string\">'at-rule-no-unknown'</span>: <span class=\"literal\">null</span>,</span><br><span class=\"line\">    <span class=\"comment\">// [scss-rules](https://www.npmjs.com/package/stylelint-scss)</span></span><br><span class=\"line\">    <span class=\"string\">'scss/at-rule-no-unknown'</span>: <span class=\"literal\">true</span></span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  ignoreFiles: [<span class=\"string\">'**/*.js'</span>, <span class=\"string\">'**/*.jsx'</span>, <span class=\"string\">'**/*.tsx'</span>, <span class=\"string\">'**/*.ts'</span>]</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></div>\n<h3 id=\"添加-lint-脚本\"><a href=\"#添加-lint-脚本\" class=\"headerlink\" title=\"添加 lint 脚本\"></a>添加 lint 脚本</h3><div class=\"code-panel__wrapper\" autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\"><header class=\"mac-panel\"><span class=\"doc-path\"></span><span class=\"mac-panel__language\">DIFF</span></header><figure class=\"iseeu highlight diff\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">  \"scripts\": &#123;</span><br><span class=\"line\">    \"list\": \"lerna list\",</span><br><span class=\"line\">    \"dev\": \"webpack-dev-server --progress --config build/webpack.config.dev.js\",</span><br><span class=\"line\">    \"build\": \"webpack --config build/webpack.config.prod.js\",</span><br><span class=\"line\"><span class=\"deletion\">-    \"reinstall\": \"rimraf node_modules &amp;&amp; yarn\"</span></span><br><span class=\"line\"><span class=\"addition\">+    \"reinstall\": \"rimraf node_modules &amp;&amp; yarn\",</span></span><br><span class=\"line\"><span class=\"addition\">+    \"lint:packages\": \"eslint --ext .ts,.js,.vue,.css,.json,.scss packages --fix\",</span></span><br><span class=\"line\"><span class=\"addition\">+    \"lint:website\": \"eslint --ext .ts,.js,.vue,.css,.json,.scss website --fix\",</span></span><br><span class=\"line\"><span class=\"addition\">+    \"lint\": \"yarn lint:packages &amp;&amp; yarn lint:website\"</span></span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></div>\n<p>重启服务和编辑器，运行<code>yarn lint</code>，就会发现有报错了，按照 lint 规则规范代码即可</p>\n<blockquote>\n<p><strong>以上是我自己的规则，可以根据自己和团队的习惯更改相应 rules</strong></p>\n</blockquote>\n<h3 id=\"添加git-hook\"><a href=\"#添加git-hook\" class=\"headerlink\" title=\"添加git hook\"></a>添加<code>git hook</code></h3><div class=\"code-panel__wrapper\" autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\"><header class=\"mac-panel\"><span class=\"doc-path\"></span><span class=\"mac-panel__language\">PLAIN</span></header><figure class=\"iseeu highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">yarn add -D lint-staged yorkie -W</span><br></pre></td></tr></table></figure></div>\n<p>修改<code>package.json</code></p>\n<div class=\"code-panel__wrapper\" autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\"><header class=\"mac-panel\"><span class=\"doc-path\"></span><span class=\"mac-panel__language\">DIFF</span></header><figure class=\"iseeu highlight diff\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\"><span class=\"addition\">+  \"gitHooks\": &#123;</span></span><br><span class=\"line\"><span class=\"addition\">+   \"pre-commit\": \"lint-staged\",</span></span><br><span class=\"line\"><span class=\"addition\">+   \"pre-push\": \"yarn lint\"</span></span><br><span class=\"line\"><span class=\"addition\">+  &#125;,</span></span><br><span class=\"line\"><span class=\"addition\">+  \"lint-staged\": &#123;</span></span><br><span class=\"line\"><span class=\"addition\">+   \"*.&#123;js,jsx,vue,ts,tsx&#125;\": [</span></span><br><span class=\"line\"><span class=\"addition\">+      \"yarn lint\",</span></span><br><span class=\"line\"><span class=\"addition\">+      \"prettier --write\",</span></span><br><span class=\"line\"><span class=\"addition\">+      \"git add\"</span></span><br><span class=\"line\"><span class=\"addition\">+    ]</span></span><br><span class=\"line\"><span class=\"addition\">+  &#125;</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></div>\n<p>改完收工！</p>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"写在前面\"><a href=\"#写在前面\" class=\"headerlink\" title=\"写在前面\"></a>写在前面</h2><p>顺便调整了 build 文件夹结构，公共的webpack 配置单独提了出来；为了方便区分，把开发服务运行在了 3100 端口（8080 默认 vue 服务占用， 3000默认 vite 服务占用，5000 默认博客服务占用）</p>\n<blockquote>\n<p>这篇主要添加项目的代码检查和提交校验，不得不说，这一环节的配置真是又多又杂，所以就不详尽的分布赘述了，本人也是直接使用了 <a href=\"https://github.com/lost-dream/vite-template\" target=\"_blank\" rel=\"noopener\">我自己 vite 脚手架</a>中的配置。</p>\n</blockquote>\n<h2 id=\"加入-eslint-prettier-stylelint-支持\"><a href=\"#加入-eslint-prettier-stylelint-支持\" class=\"headerlink\" title=\"加入 eslint/prettier/stylelint 支持\"></a>加入 eslint/prettier/stylelint 支持</h2><h3 id=\"安装依赖\"><a href=\"#安装依赖\" class=\"headerlink\" title=\"安装依赖\"></a>安装依赖</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install babel-eslint eslint prettier eslint-config-prettier eslint-import-resolver-alias  eslint-plugin-prettier  eslint-plugin-vue @typescript-eslint/eslint-plugin @typescript-eslint/parser -D -W</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install -D stylelint stylelint-config-prettier stylelint-config-standard stylelint-order stylelint-scss -W</span><br></pre></td></tr></table></figure>\n<h3 id=\"创建-eslintrc-js\"><a href=\"#创建-eslintrc-js\" class=\"headerlink\" title=\"创建.eslintrc.js\"></a>创建<code>.eslintrc.js</code></h3><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">module</span>.exports = &#123;</span><br><span class=\"line\">  root: <span class=\"literal\">true</span>,</span><br><span class=\"line\">  env: &#123;</span><br><span class=\"line\">    browser: <span class=\"literal\">true</span>,</span><br><span class=\"line\">    node: <span class=\"literal\">true</span>,</span><br><span class=\"line\">    es6: <span class=\"literal\">true</span></span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  parser: <span class=\"string\">'vue-eslint-parser'</span>,</span><br><span class=\"line\">  parserOptions: &#123;</span><br><span class=\"line\">    parser: <span class=\"string\">'@typescript-eslint/parser'</span>,</span><br><span class=\"line\">    ecmaVersion: <span class=\"number\">2020</span>,</span><br><span class=\"line\">    sourceType: <span class=\"string\">'module'</span>,</span><br><span class=\"line\">    jsxPragma: <span class=\"string\">'React'</span>,</span><br><span class=\"line\">    ecmaFeatures: &#123;</span><br><span class=\"line\">      jsx: <span class=\"literal\">true</span>,</span><br><span class=\"line\">      tsx: <span class=\"literal\">true</span>,</span><br><span class=\"line\">      modules: <span class=\"literal\">true</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  extends: [</span><br><span class=\"line\">    <span class=\"string\">'plugin:vue/vue3-recommended'</span>,</span><br><span class=\"line\">    <span class=\"string\">'plugin:@typescript-eslint/recommended'</span>,</span><br><span class=\"line\">    <span class=\"string\">'prettier'</span>,</span><br><span class=\"line\">    <span class=\"string\">'plugin:prettier/recommended'</span></span><br><span class=\"line\">  ],</span><br><span class=\"line\">  plugins: [<span class=\"string\">'vue'</span>, <span class=\"string\">'prettier'</span>, <span class=\"string\">'@typescript-eslint'</span>],</span><br><span class=\"line\">  settings: &#123;</span><br><span class=\"line\">    <span class=\"string\">'import/resolver'</span>: &#123;</span><br><span class=\"line\">      alias: &#123;</span><br><span class=\"line\">        map: [[<span class=\"string\">'@packages'</span>, <span class=\"string\">'@website'</span>, <span class=\"string\">'./packages'</span>, <span class=\"string\">'./website'</span>]],</span><br><span class=\"line\">        extensions: [<span class=\"string\">'.ts'</span>, <span class=\"string\">'.js'</span>, <span class=\"string\">'.vue'</span>, <span class=\"string\">'.json'</span>]</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  rules: &#123;</span><br><span class=\"line\">    <span class=\"string\">'@typescript-eslint/no-explicit-any'</span>: <span class=\"number\">0</span>,</span><br><span class=\"line\">    <span class=\"string\">'@typescript-eslint/no-var-requires'</span>: <span class=\"number\">2</span>,</span><br><span class=\"line\">    <span class=\"string\">'@typescript-eslint/no-empty-function'</span>: <span class=\"number\">2</span>,</span><br><span class=\"line\">    <span class=\"string\">'vue/custom-event-name-casing'</span>: <span class=\"number\">2</span>,</span><br><span class=\"line\">    <span class=\"string\">'no-use-before-define'</span>: <span class=\"number\">2</span>,</span><br><span class=\"line\">    <span class=\"string\">'@typescript-eslint/no-use-before-define'</span>: <span class=\"number\">2</span>,</span><br><span class=\"line\">    <span class=\"string\">'@typescript-eslint/ban-ts-comment'</span>: <span class=\"number\">2</span>,</span><br><span class=\"line\">    <span class=\"string\">'@typescript-eslint/ban-types'</span>: <span class=\"number\">2</span>,</span><br><span class=\"line\">    <span class=\"string\">'@typescript-eslint/no-non-null-assertion'</span>: <span class=\"number\">2</span>,</span><br><span class=\"line\">    <span class=\"string\">'@typescript-eslint/explicit-module-boundary-types'</span>: <span class=\"number\">0</span>,</span><br><span class=\"line\">    <span class=\"string\">'@typescript-eslint/no-unused-vars'</span>: [</span><br><span class=\"line\">      <span class=\"string\">'error'</span>,</span><br><span class=\"line\">      &#123;</span><br><span class=\"line\">        argsIgnorePattern: <span class=\"string\">'^h$'</span>,</span><br><span class=\"line\">        varsIgnorePattern: <span class=\"string\">'^h$'</span></span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    ],</span><br><span class=\"line\">    <span class=\"string\">'no-unused-vars'</span>: [</span><br><span class=\"line\">      <span class=\"string\">'error'</span>,</span><br><span class=\"line\">      &#123;</span><br><span class=\"line\">        argsIgnorePattern: <span class=\"string\">'^h$'</span>,</span><br><span class=\"line\">        varsIgnorePattern: <span class=\"string\">'^h$'</span></span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    ],</span><br><span class=\"line\">    <span class=\"string\">'vue/attributes-order'</span>: <span class=\"number\">2</span>,</span><br><span class=\"line\">    <span class=\"string\">'vue/one-component-per-file'</span>: <span class=\"number\">2</span>,</span><br><span class=\"line\">    <span class=\"string\">'vue/html-closing-bracket-newline'</span>: <span class=\"number\">2</span>,</span><br><span class=\"line\">    <span class=\"string\">'vue/max-attributes-per-line'</span>: [</span><br><span class=\"line\">      <span class=\"string\">'error'</span>,</span><br><span class=\"line\">      &#123;</span><br><span class=\"line\">        singleline: <span class=\"number\">10</span>,</span><br><span class=\"line\">        multiline: &#123;</span><br><span class=\"line\">          max: <span class=\"number\">10</span>,</span><br><span class=\"line\">          allowFirstLine: <span class=\"literal\">true</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    ],</span><br><span class=\"line\">    <span class=\"comment\">// 组件 name 首字母必须大写</span></span><br><span class=\"line\">    <span class=\"string\">'vue/component-definition-name-casing'</span>: <span class=\"number\">2</span>,</span><br><span class=\"line\">    <span class=\"string\">'vue/multiline-html-element-content-newline'</span>: <span class=\"number\">2</span>,</span><br><span class=\"line\">    <span class=\"string\">'vue/attribute-hyphenation'</span>: <span class=\"number\">2</span>,</span><br><span class=\"line\">    <span class=\"string\">'vue/require-default-prop'</span>: <span class=\"number\">2</span>,</span><br><span class=\"line\">    <span class=\"string\">'vue/html-self-closing'</span>: [</span><br><span class=\"line\">      <span class=\"string\">'error'</span>,</span><br><span class=\"line\">      &#123;</span><br><span class=\"line\">        html: &#123;</span><br><span class=\"line\">          <span class=\"keyword\">void</span>: <span class=\"string\">'always'</span>,</span><br><span class=\"line\">          normal: <span class=\"string\">'never'</span>,</span><br><span class=\"line\">          component: <span class=\"string\">'always'</span></span><br><span class=\"line\">        &#125;,</span><br><span class=\"line\">        svg: <span class=\"string\">'always'</span>,</span><br><span class=\"line\">        math: <span class=\"string\">'always'</span></span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    ],</span><br><span class=\"line\">    <span class=\"string\">'prettier/prettier'</span>: <span class=\"string\">'warn'</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"创建-prettierrc\"><a href=\"#创建-prettierrc\" class=\"headerlink\" title=\"创建.prettierrc\"></a>创建<code>.prettierrc</code></h3><figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"attr\">\"singleQuote\"</span>: <span class=\"literal\">true</span>,</span><br><span class=\"line\">  <span class=\"attr\">\"printWidth\"</span>: <span class=\"number\">100</span>,</span><br><span class=\"line\">  <span class=\"attr\">\"tabWidth\"</span>: <span class=\"number\">2</span>,</span><br><span class=\"line\">  <span class=\"attr\">\"useTabs\"</span>: <span class=\"literal\">false</span>,</span><br><span class=\"line\">  <span class=\"attr\">\"trailingComma\"</span>: <span class=\"string\">\"none\"</span>,</span><br><span class=\"line\">  <span class=\"attr\">\"bracketSpacing\"</span>: <span class=\"literal\">true</span>,</span><br><span class=\"line\">  <span class=\"attr\">\"jsxBracketSameLine\"</span>: <span class=\"literal\">false</span>,</span><br><span class=\"line\">  <span class=\"attr\">\"arrowParens\"</span>: <span class=\"string\">\"avoid\"</span>,</span><br><span class=\"line\">  <span class=\"attr\">\"semi\"</span>: <span class=\"literal\">false</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"创建-eslintignore\"><a href=\"#创建-eslintignore\" class=\"headerlink\" title=\"创建.eslintignore\"></a>创建<code>.eslintignore</code></h3><figure class=\"highlight md\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"section\"># Editor</span></span><br><span class=\"line\">.vscode</span><br><span class=\"line\">.idea</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"section\"># Project</span></span><br><span class=\"line\">*.md</span><br><span class=\"line\">/lib</span><br><span class=\"line\">/build</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"section\"># typescript</span></span><br><span class=\"line\">*.d.ts</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"section\"># file</span></span><br><span class=\"line\">*.scss</span><br><span class=\"line\">*.html</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"section\"># Others</span></span><br><span class=\"line\">node_modules</span><br></pre></td></tr></table></figure>\n<h3 id=\"添加stylelint-config-js\"><a href=\"#添加stylelint-config-js\" class=\"headerlink\" title=\"添加stylelint.config.js\"></a>添加<code>stylelint.config.js</code></h3><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br><span class=\"line\">165</span><br><span class=\"line\">166</span><br><span class=\"line\">167</span><br><span class=\"line\">168</span><br><span class=\"line\">169</span><br><span class=\"line\">170</span><br><span class=\"line\">171</span><br><span class=\"line\">172</span><br><span class=\"line\">173</span><br><span class=\"line\">174</span><br><span class=\"line\">175</span><br><span class=\"line\">176</span><br><span class=\"line\">177</span><br><span class=\"line\">178</span><br><span class=\"line\">179</span><br><span class=\"line\">180</span><br><span class=\"line\">181</span><br><span class=\"line\">182</span><br><span class=\"line\">183</span><br><span class=\"line\">184</span><br><span class=\"line\">185</span><br><span class=\"line\">186</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">module</span>.exports = &#123;</span><br><span class=\"line\">  root: <span class=\"literal\">true</span>,</span><br><span class=\"line\">  plugins: [<span class=\"string\">'stylelint-order'</span>, <span class=\"string\">'stylelint-scss'</span>],</span><br><span class=\"line\">  extends: [<span class=\"string\">'stylelint-config-standard'</span>, <span class=\"string\">'stylelint-config-prettier'</span>],</span><br><span class=\"line\">  rules: &#123;</span><br><span class=\"line\">    <span class=\"string\">'selector-pseudo-class-no-unknown'</span>: [</span><br><span class=\"line\">      <span class=\"literal\">true</span>,</span><br><span class=\"line\">      &#123;</span><br><span class=\"line\">        ignorePseudoClasses: [<span class=\"string\">'global'</span>]</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    ],</span><br><span class=\"line\">    <span class=\"string\">'no-empty-source'</span>: <span class=\"literal\">null</span>,</span><br><span class=\"line\">    <span class=\"string\">'named-grid-areas-no-invalid'</span>: <span class=\"literal\">null</span>,</span><br><span class=\"line\">    <span class=\"string\">'unicode-bom'</span>: <span class=\"string\">'never'</span>,</span><br><span class=\"line\">    <span class=\"string\">'no-descending-specificity'</span>: <span class=\"literal\">null</span>,</span><br><span class=\"line\">    <span class=\"string\">'font-family-no-missing-generic-family-keyword'</span>: <span class=\"literal\">null</span>,</span><br><span class=\"line\">    <span class=\"string\">'declaration-colon-space-after'</span>: <span class=\"string\">'always-single-line'</span>,</span><br><span class=\"line\">    <span class=\"string\">'declaration-colon-space-before'</span>: <span class=\"string\">'never'</span>,</span><br><span class=\"line\">    <span class=\"string\">'declaration-block-trailing-semicolon'</span>: [</span><br><span class=\"line\">      <span class=\"string\">'always'</span>,</span><br><span class=\"line\">      &#123;</span><br><span class=\"line\">        ignore: [<span class=\"string\">'single-declaration'</span>]</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    ],</span><br><span class=\"line\">    <span class=\"string\">'rule-empty-line-before'</span>: [</span><br><span class=\"line\">      <span class=\"string\">'always'</span>,</span><br><span class=\"line\">      &#123;</span><br><span class=\"line\">        ignore: [<span class=\"string\">'after-comment'</span>, <span class=\"string\">'first-nested'</span>]</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    ],</span><br><span class=\"line\">    <span class=\"string\">'unit-no-unknown'</span>: [<span class=\"literal\">true</span>, &#123; <span class=\"attr\">ignoreUnits</span>: [<span class=\"string\">'rpx'</span>] &#125;],</span><br><span class=\"line\">    <span class=\"comment\">// Specify the alphabetical order of the attributes in the declaration block</span></span><br><span class=\"line\">    <span class=\"string\">'order/properties-order'</span>: [</span><br><span class=\"line\">      <span class=\"string\">'position'</span>,</span><br><span class=\"line\">      <span class=\"string\">'top'</span>,</span><br><span class=\"line\">      <span class=\"string\">'right'</span>,</span><br><span class=\"line\">      <span class=\"string\">'bottom'</span>,</span><br><span class=\"line\">      <span class=\"string\">'left'</span>,</span><br><span class=\"line\">      <span class=\"string\">'z-index'</span>,</span><br><span class=\"line\">      <span class=\"string\">'display'</span>,</span><br><span class=\"line\">      <span class=\"string\">'float'</span>,</span><br><span class=\"line\">      <span class=\"string\">'width'</span>,</span><br><span class=\"line\">      <span class=\"string\">'height'</span>,</span><br><span class=\"line\">      <span class=\"string\">'max-width'</span>,</span><br><span class=\"line\">      <span class=\"string\">'max-height'</span>,</span><br><span class=\"line\">      <span class=\"string\">'min-width'</span>,</span><br><span class=\"line\">      <span class=\"string\">'min-height'</span>,</span><br><span class=\"line\">      <span class=\"string\">'padding'</span>,</span><br><span class=\"line\">      <span class=\"string\">'padding-top'</span>,</span><br><span class=\"line\">      <span class=\"string\">'padding-right'</span>,</span><br><span class=\"line\">      <span class=\"string\">'padding-bottom'</span>,</span><br><span class=\"line\">      <span class=\"string\">'padding-left'</span>,</span><br><span class=\"line\">      <span class=\"string\">'margin'</span>,</span><br><span class=\"line\">      <span class=\"string\">'margin-top'</span>,</span><br><span class=\"line\">      <span class=\"string\">'margin-right'</span>,</span><br><span class=\"line\">      <span class=\"string\">'margin-bottom'</span>,</span><br><span class=\"line\">      <span class=\"string\">'margin-left'</span>,</span><br><span class=\"line\">      <span class=\"string\">'margin-collapse'</span>,</span><br><span class=\"line\">      <span class=\"string\">'margin-top-collapse'</span>,</span><br><span class=\"line\">      <span class=\"string\">'margin-right-collapse'</span>,</span><br><span class=\"line\">      <span class=\"string\">'margin-bottom-collapse'</span>,</span><br><span class=\"line\">      <span class=\"string\">'margin-left-collapse'</span>,</span><br><span class=\"line\">      <span class=\"string\">'overflow'</span>,</span><br><span class=\"line\">      <span class=\"string\">'overflow-x'</span>,</span><br><span class=\"line\">      <span class=\"string\">'overflow-y'</span>,</span><br><span class=\"line\">      <span class=\"string\">'clip'</span>,</span><br><span class=\"line\">      <span class=\"string\">'clear'</span>,</span><br><span class=\"line\">      <span class=\"string\">'font'</span>,</span><br><span class=\"line\">      <span class=\"string\">'font-family'</span>,</span><br><span class=\"line\">      <span class=\"string\">'font-size'</span>,</span><br><span class=\"line\">      <span class=\"string\">'font-smoothing'</span>,</span><br><span class=\"line\">      <span class=\"string\">'osx-font-smoothing'</span>,</span><br><span class=\"line\">      <span class=\"string\">'font-style'</span>,</span><br><span class=\"line\">      <span class=\"string\">'font-weight'</span>,</span><br><span class=\"line\">      <span class=\"string\">'hyphens'</span>,</span><br><span class=\"line\">      <span class=\"string\">'src'</span>,</span><br><span class=\"line\">      <span class=\"string\">'line-height'</span>,</span><br><span class=\"line\">      <span class=\"string\">'letter-spacing'</span>,</span><br><span class=\"line\">      <span class=\"string\">'word-spacing'</span>,</span><br><span class=\"line\">      <span class=\"string\">'color'</span>,</span><br><span class=\"line\">      <span class=\"string\">'text-align'</span>,</span><br><span class=\"line\">      <span class=\"string\">'text-decoration'</span>,</span><br><span class=\"line\">      <span class=\"string\">'text-indent'</span>,</span><br><span class=\"line\">      <span class=\"string\">'text-overflow'</span>,</span><br><span class=\"line\">      <span class=\"string\">'text-rendering'</span>,</span><br><span class=\"line\">      <span class=\"string\">'text-size-adjust'</span>,</span><br><span class=\"line\">      <span class=\"string\">'text-shadow'</span>,</span><br><span class=\"line\">      <span class=\"string\">'text-transform'</span>,</span><br><span class=\"line\">      <span class=\"string\">'word-break'</span>,</span><br><span class=\"line\">      <span class=\"string\">'word-wrap'</span>,</span><br><span class=\"line\">      <span class=\"string\">'white-space'</span>,</span><br><span class=\"line\">      <span class=\"string\">'vertical-align'</span>,</span><br><span class=\"line\">      <span class=\"string\">'list-style'</span>,</span><br><span class=\"line\">      <span class=\"string\">'list-style-type'</span>,</span><br><span class=\"line\">      <span class=\"string\">'list-style-position'</span>,</span><br><span class=\"line\">      <span class=\"string\">'list-style-image'</span>,</span><br><span class=\"line\">      <span class=\"string\">'pointer-events'</span>,</span><br><span class=\"line\">      <span class=\"string\">'cursor'</span>,</span><br><span class=\"line\">      <span class=\"string\">'background'</span>,</span><br><span class=\"line\">      <span class=\"string\">'background-attachment'</span>,</span><br><span class=\"line\">      <span class=\"string\">'background-color'</span>,</span><br><span class=\"line\">      <span class=\"string\">'background-image'</span>,</span><br><span class=\"line\">      <span class=\"string\">'background-position'</span>,</span><br><span class=\"line\">      <span class=\"string\">'background-repeat'</span>,</span><br><span class=\"line\">      <span class=\"string\">'background-size'</span>,</span><br><span class=\"line\">      <span class=\"string\">'border'</span>,</span><br><span class=\"line\">      <span class=\"string\">'border-collapse'</span>,</span><br><span class=\"line\">      <span class=\"string\">'border-top'</span>,</span><br><span class=\"line\">      <span class=\"string\">'border-right'</span>,</span><br><span class=\"line\">      <span class=\"string\">'border-bottom'</span>,</span><br><span class=\"line\">      <span class=\"string\">'border-left'</span>,</span><br><span class=\"line\">      <span class=\"string\">'border-color'</span>,</span><br><span class=\"line\">      <span class=\"string\">'border-image'</span>,</span><br><span class=\"line\">      <span class=\"string\">'border-top-color'</span>,</span><br><span class=\"line\">      <span class=\"string\">'border-right-color'</span>,</span><br><span class=\"line\">      <span class=\"string\">'border-bottom-color'</span>,</span><br><span class=\"line\">      <span class=\"string\">'border-left-color'</span>,</span><br><span class=\"line\">      <span class=\"string\">'border-spacing'</span>,</span><br><span class=\"line\">      <span class=\"string\">'border-style'</span>,</span><br><span class=\"line\">      <span class=\"string\">'border-top-style'</span>,</span><br><span class=\"line\">      <span class=\"string\">'border-right-style'</span>,</span><br><span class=\"line\">      <span class=\"string\">'border-bottom-style'</span>,</span><br><span class=\"line\">      <span class=\"string\">'border-left-style'</span>,</span><br><span class=\"line\">      <span class=\"string\">'border-width'</span>,</span><br><span class=\"line\">      <span class=\"string\">'border-top-width'</span>,</span><br><span class=\"line\">      <span class=\"string\">'border-right-width'</span>,</span><br><span class=\"line\">      <span class=\"string\">'border-bottom-width'</span>,</span><br><span class=\"line\">      <span class=\"string\">'border-left-width'</span>,</span><br><span class=\"line\">      <span class=\"string\">'border-radius'</span>,</span><br><span class=\"line\">      <span class=\"string\">'border-top-right-radius'</span>,</span><br><span class=\"line\">      <span class=\"string\">'border-bottom-right-radius'</span>,</span><br><span class=\"line\">      <span class=\"string\">'border-bottom-left-radius'</span>,</span><br><span class=\"line\">      <span class=\"string\">'border-top-left-radius'</span>,</span><br><span class=\"line\">      <span class=\"string\">'border-radius-topright'</span>,</span><br><span class=\"line\">      <span class=\"string\">'border-radius-bottomright'</span>,</span><br><span class=\"line\">      <span class=\"string\">'border-radius-bottomleft'</span>,</span><br><span class=\"line\">      <span class=\"string\">'border-radius-topleft'</span>,</span><br><span class=\"line\">      <span class=\"string\">'content'</span>,</span><br><span class=\"line\">      <span class=\"string\">'quotes'</span>,</span><br><span class=\"line\">      <span class=\"string\">'outline'</span>,</span><br><span class=\"line\">      <span class=\"string\">'outline-offset'</span>,</span><br><span class=\"line\">      <span class=\"string\">'opacity'</span>,</span><br><span class=\"line\">      <span class=\"string\">'filter'</span>,</span><br><span class=\"line\">      <span class=\"string\">'visibility'</span>,</span><br><span class=\"line\">      <span class=\"string\">'size'</span>,</span><br><span class=\"line\">      <span class=\"string\">'zoom'</span>,</span><br><span class=\"line\">      <span class=\"string\">'transform'</span>,</span><br><span class=\"line\">      <span class=\"string\">'box-align'</span>,</span><br><span class=\"line\">      <span class=\"string\">'box-flex'</span>,</span><br><span class=\"line\">      <span class=\"string\">'box-orient'</span>,</span><br><span class=\"line\">      <span class=\"string\">'box-pack'</span>,</span><br><span class=\"line\">      <span class=\"string\">'box-shadow'</span>,</span><br><span class=\"line\">      <span class=\"string\">'box-sizing'</span>,</span><br><span class=\"line\">      <span class=\"string\">'table-layout'</span>,</span><br><span class=\"line\">      <span class=\"string\">'animation'</span>,</span><br><span class=\"line\">      <span class=\"string\">'animation-delay'</span>,</span><br><span class=\"line\">      <span class=\"string\">'animation-duration'</span>,</span><br><span class=\"line\">      <span class=\"string\">'animation-iteration-count'</span>,</span><br><span class=\"line\">      <span class=\"string\">'animation-name'</span>,</span><br><span class=\"line\">      <span class=\"string\">'animation-play-state'</span>,</span><br><span class=\"line\">      <span class=\"string\">'animation-timing-function'</span>,</span><br><span class=\"line\">      <span class=\"string\">'animation-fill-mode'</span>,</span><br><span class=\"line\">      <span class=\"string\">'transition'</span>,</span><br><span class=\"line\">      <span class=\"string\">'transition-delay'</span>,</span><br><span class=\"line\">      <span class=\"string\">'transition-duration'</span>,</span><br><span class=\"line\">      <span class=\"string\">'transition-property'</span>,</span><br><span class=\"line\">      <span class=\"string\">'transition-timing-function'</span>,</span><br><span class=\"line\">      <span class=\"string\">'background-clip'</span>,</span><br><span class=\"line\">      <span class=\"string\">'backface-visibility'</span>,</span><br><span class=\"line\">      <span class=\"string\">'resize'</span>,</span><br><span class=\"line\">      <span class=\"string\">'appearance'</span>,</span><br><span class=\"line\">      <span class=\"string\">'user-select'</span>,</span><br><span class=\"line\">      <span class=\"string\">'interpolation-mode'</span>,</span><br><span class=\"line\">      <span class=\"string\">'direction'</span>,</span><br><span class=\"line\">      <span class=\"string\">'marks'</span>,</span><br><span class=\"line\">      <span class=\"string\">'page'</span>,</span><br><span class=\"line\">      <span class=\"string\">'set-link-source'</span>,</span><br><span class=\"line\">      <span class=\"string\">'unicode-bidi'</span>,</span><br><span class=\"line\">      <span class=\"string\">'speak'</span></span><br><span class=\"line\">    ],</span><br><span class=\"line\">    <span class=\"string\">'at-rule-no-unknown'</span>: <span class=\"literal\">null</span>,</span><br><span class=\"line\">    <span class=\"comment\">// [scss-rules](https://www.npmjs.com/package/stylelint-scss)</span></span><br><span class=\"line\">    <span class=\"string\">'scss/at-rule-no-unknown'</span>: <span class=\"literal\">true</span></span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  ignoreFiles: [<span class=\"string\">'**/*.js'</span>, <span class=\"string\">'**/*.jsx'</span>, <span class=\"string\">'**/*.tsx'</span>, <span class=\"string\">'**/*.ts'</span>]</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"添加-lint-脚本\"><a href=\"#添加-lint-脚本\" class=\"headerlink\" title=\"添加 lint 脚本\"></a>添加 lint 脚本</h3><figure class=\"highlight diff\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">  \"scripts\": &#123;</span><br><span class=\"line\">    \"list\": \"lerna list\",</span><br><span class=\"line\">    \"dev\": \"webpack-dev-server --progress --config build/webpack.config.dev.js\",</span><br><span class=\"line\">    \"build\": \"webpack --config build/webpack.config.prod.js\",</span><br><span class=\"line\"><span class=\"deletion\">-    \"reinstall\": \"rimraf node_modules &amp;&amp; yarn\"</span></span><br><span class=\"line\"><span class=\"addition\">+    \"reinstall\": \"rimraf node_modules &amp;&amp; yarn\",</span></span><br><span class=\"line\"><span class=\"addition\">+    \"lint:packages\": \"eslint --ext .ts,.js,.vue,.css,.json,.scss packages --fix\",</span></span><br><span class=\"line\"><span class=\"addition\">+    \"lint:website\": \"eslint --ext .ts,.js,.vue,.css,.json,.scss website --fix\",</span></span><br><span class=\"line\"><span class=\"addition\">+    \"lint\": \"yarn lint:packages &amp;&amp; yarn lint:website\"</span></span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>重启服务和编辑器，运行<code>yarn lint</code>，就会发现有报错了，按照 lint 规则规范代码即可</p>\n<blockquote>\n<p><strong>以上是我自己的规则，可以根据自己和团队的习惯更改相应 rules</strong></p>\n</blockquote>\n<h3 id=\"添加git-hook\"><a href=\"#添加git-hook\" class=\"headerlink\" title=\"添加git hook\"></a>添加<code>git hook</code></h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">yarn add -D lint-staged yorkie -W</span><br></pre></td></tr></table></figure>\n<p>修改<code>package.json</code></p>\n<figure class=\"highlight diff\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\"><span class=\"addition\">+  \"gitHooks\": &#123;</span></span><br><span class=\"line\"><span class=\"addition\">+   \"pre-commit\": \"lint-staged\",</span></span><br><span class=\"line\"><span class=\"addition\">+   \"pre-push\": \"yarn lint\"</span></span><br><span class=\"line\"><span class=\"addition\">+  &#125;,</span></span><br><span class=\"line\"><span class=\"addition\">+  \"lint-staged\": &#123;</span></span><br><span class=\"line\"><span class=\"addition\">+   \"*.&#123;js,jsx,vue,ts,tsx&#125;\": [</span></span><br><span class=\"line\"><span class=\"addition\">+      \"yarn lint\",</span></span><br><span class=\"line\"><span class=\"addition\">+      \"prettier --write\",</span></span><br><span class=\"line\"><span class=\"addition\">+      \"git add\"</span></span><br><span class=\"line\"><span class=\"addition\">+    ]</span></span><br><span class=\"line\"><span class=\"addition\">+  &#125;</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>改完收工！</p>\n"},{"title":"使用webstrom","date":"2017-08-28T08:51:51.000Z","description":"详细的webstorm使用文档","_content":"我本人从事前端开发也有很长一段时间了。从一开始的[editplus](https://www.editplus.com/)，到后来用到[nodepad++](https://notepad-plus-plus.org/),之后还使用过一些其他的编辑器以及IDE，但我个人最钟爱的还是[webstrom](http://www.jetbrains.com/webstorm/)。相比[phpstrom](http://www.jetbrains.com/phpstorm/)他更倾向于前端方向的开发模式，相比[hbuilder](http://www.dcloud.io/)有简明的操作方式和更直观的操作面板。在我个人看来webstrom的缺点很少，如果能够用的顺手，相信会让你的效率提升数倍。\n## 下载\nwebstrom下载选择官网[http://www.jetbrains.com/webstorm/](http://www.jetbrains.com/webstorm/)下载。虽然有各种破解版本以及汉化版本满天飞，但相比正版的webstrom少了很多功能和使用的乐趣。可是如果从官网渠道下载webstrom我只能使用30天怎么办？其实只要你在安装时选择**license server**，然后输入`http://idea.imsxm.com/`，就可以正常使用了。\n## 从设置开始说起\n你可以点击**File - Settings...** 或者通过快捷键 **ctrl + alt + shift**进入设置（本文所有快捷键仅限于window系统，如果是mac可以在右下角**LF**选项中选择window或者自行查找mac系统快捷键）。\n### Appearance & Behavior\n这一栏的设置不建议修改，但还是应该注意**System Settings**这一栏，这一栏中可以设置一些IDE的行为。例如开启webstorm时是否自动显示上一次的项目、打开新项目时覆盖当前项目还是重新打开一页之类的。事实上这些设置在处开始使用时IDE本身也会有弹框提示，但也可以之后修改。另外，在**Appearance**中可以设置IDE背景（Background Image...），不知道你是否注意到了呢？\n### Keymap\n这一栏通常用来设置和修改快捷键。你可以修改或者新加某项功能的快捷键，目录为顶部目录，找到双击即可修改和新增，简单方便。\n### Editor\n这一栏负责编辑器的编辑模块，重要的有以下几个设置\n#### General\n这一栏主要设置**ctrl + 鼠标滚轮**调节字号大小、**自动换行**。\n![1.png](/blog/img/1.png)\n#### Color Scheme\n这一栏可以更换浏览器主题。你可以使用自带的几种主题，也可以下载其他主题。下载地址：[http://color-themes.com/?view=index](http://color-themes.com/?view=index)，方式很简单，点击图片可以进行主题预览，选中自己喜欢的主题，下载出来。下载很快，几乎是点击下载的瞬间完成，然后我们就可以安装到自己webstrom中。安装方法：点击左上角的**File--Setting**，选中**Import Settings**，进入选择界面，选择你下载好的主题文件（后缀为.jar），编辑器会经过俩次提示，全部选择同意，然后重启，你就会发现主题安装成功了。在这里有一个小插曲，如果你之前已经打开了webstrom，那么在选择文件的时候有可能会无法找到那个文件，这是因为webstrom本身的缓存在作怪，只要你保证进入到了正确的文件夹，点击刷新，那个文件一定会出现在你的视线中。\n![img2](/blog/img/2.jpg)![img3](/blog/img/3.jpg)\n####  Code Style\n可以设置每种类型文件的格式化参数\n#### File and Code Templates\n这一栏可以设置自定义的模板，这样在新建文件时可以省去重复操作。\n### Plugins\n这里可以设置IDE插件。比如我在写博客时自然希望他可以支持markdown的操作（虽然博客在[atom](https://atom.io/)中编辑更爽的说）。在这里添加markdown的插件。\n![img4](/blog/img/4.png)\n当然你也可以根据需要安装其他功能的插件。\n### Version Control\n这里设置版本控制。但webstorm自动处理好了这些设置，一般我们不会在这里进行操作。除非你想添加github仓库。但这一操作比较麻烦，我不会赘述。你可以[点击这里](https://www.cnblogs.com/vanstrict/p/5677716.html)进行配置。\n关于git的操作我们通常直接进行操作\n* 如果你想克隆一个仓库，你可以点击导航**VCS - git - clone**直接克隆并打开一个项目。\n* 对于已被管理的项目，右键鼠标同样有**git**选项，可以进行所有的git操作。值得注意的是\n    + 使用快捷键ctrl + k可以进行commit操作，ctrl + shift + k 可以进行push操作\n    + 右下角有git: master 之类选项，可以在这里更方便的切换和创建分支\n\n### Language && Frameworks\n#### JavaScript\n在这里可以设置js的版本，在子选项中通常使用的是**Libraries**，可以设置IDE支持的语法和提示。\n你可以选择下载需要的语法支持（jquery之类）。\n#### Node.js and NPM\nwebstrom会主动去寻找nodeJs程序而不用你手动添加，之后你就可以在IDE中享受编辑器的自动补全以及错误提示等方便的功能，并且下方会显示你安装过的packages，并可以搜索版本是否为最新版本并提示升级。另外，在新创建项目时，我们可以指定文件为**Node.js express App**,非常方便。\n![img5](/blog/img/5.png)![img6](/blog/img/6.png)\n### Tools\n#### File watchers\n这里可以设置自动编译。比如很多前端比较前沿的技术（babel、sass之类），在不需要非常复杂配置的情况下webstorm提供自动编译，省去配置文件这一环节。这一功能的前提是你向webstorm添加了编译功能：点击加号，在program中填入安装文件的.cmd文件，在argument中定义你想要的编译方式就可以了。\n## 底部操作栏\n如果你的底部没有操作栏，点击左下角的小电脑。\n### TODO\n你可以在webstorm中使用TODO注释，这样做的好处是你可以通过底部的TODO功能随时找到他。\n### Terminal\n不解释，所有开发者都懂得\n### run\n运行js文件的利器。尤其在nodejs开发时更为明显。\n## 侧边栏\n### npm\n如果你是运行nodejs项目，会出现这一栏，可以让你方便的运行script。修改script时别忘了点击刷新按钮进行更新\n## 其他方便的操作\n其他方便的功能\n+ 按住shift，鼠标移入图片链接中可以显示出图像及其具体信息。\n+ 右键点击最右侧区域，选择**customize highlight level**可以选择IDE的高亮规则。由低到高分别为不检查、只检查语法、全检查\n+ 配合浏览器插件可以使用debug，在webstorm中直接打断点不知道有多爽。\n+ 基于NodeJS开发大型项目时，由于node_modules文件夹过于庞大导致的项目加载缓慢甚至卡死，可以在File--setting--Editor--File Types中的ignore files and folders增加一项node_modules（注意后面加分号）;可以让webstorm忽略这个文件夹。","source":"_posts/使用webstrom.md","raw":"title: 使用webstrom\ndate: 2017-08-28 16:51:51\ntags: [webstorm]\ncategories: [editor]\ndescription: 详细的webstorm使用文档\n---\n我本人从事前端开发也有很长一段时间了。从一开始的[editplus](https://www.editplus.com/)，到后来用到[nodepad++](https://notepad-plus-plus.org/),之后还使用过一些其他的编辑器以及IDE，但我个人最钟爱的还是[webstrom](http://www.jetbrains.com/webstorm/)。相比[phpstrom](http://www.jetbrains.com/phpstorm/)他更倾向于前端方向的开发模式，相比[hbuilder](http://www.dcloud.io/)有简明的操作方式和更直观的操作面板。在我个人看来webstrom的缺点很少，如果能够用的顺手，相信会让你的效率提升数倍。\n## 下载\nwebstrom下载选择官网[http://www.jetbrains.com/webstorm/](http://www.jetbrains.com/webstorm/)下载。虽然有各种破解版本以及汉化版本满天飞，但相比正版的webstrom少了很多功能和使用的乐趣。可是如果从官网渠道下载webstrom我只能使用30天怎么办？其实只要你在安装时选择**license server**，然后输入`http://idea.imsxm.com/`，就可以正常使用了。\n## 从设置开始说起\n你可以点击**File - Settings...** 或者通过快捷键 **ctrl + alt + shift**进入设置（本文所有快捷键仅限于window系统，如果是mac可以在右下角**LF**选项中选择window或者自行查找mac系统快捷键）。\n### Appearance & Behavior\n这一栏的设置不建议修改，但还是应该注意**System Settings**这一栏，这一栏中可以设置一些IDE的行为。例如开启webstorm时是否自动显示上一次的项目、打开新项目时覆盖当前项目还是重新打开一页之类的。事实上这些设置在处开始使用时IDE本身也会有弹框提示，但也可以之后修改。另外，在**Appearance**中可以设置IDE背景（Background Image...），不知道你是否注意到了呢？\n### Keymap\n这一栏通常用来设置和修改快捷键。你可以修改或者新加某项功能的快捷键，目录为顶部目录，找到双击即可修改和新增，简单方便。\n### Editor\n这一栏负责编辑器的编辑模块，重要的有以下几个设置\n#### General\n这一栏主要设置**ctrl + 鼠标滚轮**调节字号大小、**自动换行**。\n![1.png](/blog/img/1.png)\n#### Color Scheme\n这一栏可以更换浏览器主题。你可以使用自带的几种主题，也可以下载其他主题。下载地址：[http://color-themes.com/?view=index](http://color-themes.com/?view=index)，方式很简单，点击图片可以进行主题预览，选中自己喜欢的主题，下载出来。下载很快，几乎是点击下载的瞬间完成，然后我们就可以安装到自己webstrom中。安装方法：点击左上角的**File--Setting**，选中**Import Settings**，进入选择界面，选择你下载好的主题文件（后缀为.jar），编辑器会经过俩次提示，全部选择同意，然后重启，你就会发现主题安装成功了。在这里有一个小插曲，如果你之前已经打开了webstrom，那么在选择文件的时候有可能会无法找到那个文件，这是因为webstrom本身的缓存在作怪，只要你保证进入到了正确的文件夹，点击刷新，那个文件一定会出现在你的视线中。\n![img2](/blog/img/2.jpg)![img3](/blog/img/3.jpg)\n####  Code Style\n可以设置每种类型文件的格式化参数\n#### File and Code Templates\n这一栏可以设置自定义的模板，这样在新建文件时可以省去重复操作。\n### Plugins\n这里可以设置IDE插件。比如我在写博客时自然希望他可以支持markdown的操作（虽然博客在[atom](https://atom.io/)中编辑更爽的说）。在这里添加markdown的插件。\n![img4](/blog/img/4.png)\n当然你也可以根据需要安装其他功能的插件。\n### Version Control\n这里设置版本控制。但webstorm自动处理好了这些设置，一般我们不会在这里进行操作。除非你想添加github仓库。但这一操作比较麻烦，我不会赘述。你可以[点击这里](https://www.cnblogs.com/vanstrict/p/5677716.html)进行配置。\n关于git的操作我们通常直接进行操作\n* 如果你想克隆一个仓库，你可以点击导航**VCS - git - clone**直接克隆并打开一个项目。\n* 对于已被管理的项目，右键鼠标同样有**git**选项，可以进行所有的git操作。值得注意的是\n    + 使用快捷键ctrl + k可以进行commit操作，ctrl + shift + k 可以进行push操作\n    + 右下角有git: master 之类选项，可以在这里更方便的切换和创建分支\n\n### Language && Frameworks\n#### JavaScript\n在这里可以设置js的版本，在子选项中通常使用的是**Libraries**，可以设置IDE支持的语法和提示。\n你可以选择下载需要的语法支持（jquery之类）。\n#### Node.js and NPM\nwebstrom会主动去寻找nodeJs程序而不用你手动添加，之后你就可以在IDE中享受编辑器的自动补全以及错误提示等方便的功能，并且下方会显示你安装过的packages，并可以搜索版本是否为最新版本并提示升级。另外，在新创建项目时，我们可以指定文件为**Node.js express App**,非常方便。\n![img5](/blog/img/5.png)![img6](/blog/img/6.png)\n### Tools\n#### File watchers\n这里可以设置自动编译。比如很多前端比较前沿的技术（babel、sass之类），在不需要非常复杂配置的情况下webstorm提供自动编译，省去配置文件这一环节。这一功能的前提是你向webstorm添加了编译功能：点击加号，在program中填入安装文件的.cmd文件，在argument中定义你想要的编译方式就可以了。\n## 底部操作栏\n如果你的底部没有操作栏，点击左下角的小电脑。\n### TODO\n你可以在webstorm中使用TODO注释，这样做的好处是你可以通过底部的TODO功能随时找到他。\n### Terminal\n不解释，所有开发者都懂得\n### run\n运行js文件的利器。尤其在nodejs开发时更为明显。\n## 侧边栏\n### npm\n如果你是运行nodejs项目，会出现这一栏，可以让你方便的运行script。修改script时别忘了点击刷新按钮进行更新\n## 其他方便的操作\n其他方便的功能\n+ 按住shift，鼠标移入图片链接中可以显示出图像及其具体信息。\n+ 右键点击最右侧区域，选择**customize highlight level**可以选择IDE的高亮规则。由低到高分别为不检查、只检查语法、全检查\n+ 配合浏览器插件可以使用debug，在webstorm中直接打断点不知道有多爽。\n+ 基于NodeJS开发大型项目时，由于node_modules文件夹过于庞大导致的项目加载缓慢甚至卡死，可以在File--setting--Editor--File Types中的ignore files and folders增加一项node_modules（注意后面加分号）;可以让webstorm忽略这个文件夹。","slug":"使用webstrom","published":1,"updated":"2021-06-25T11:19:55.446Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckqc904pa001ywotvhe7ypgdx","content":"<p>我本人从事前端开发也有很长一段时间了。从一开始的<a href=\"https://www.editplus.com/\" target=\"_blank\" rel=\"noopener\">editplus</a>，到后来用到<a href=\"https://notepad-plus-plus.org/\" target=\"_blank\" rel=\"noopener\">nodepad++</a>,之后还使用过一些其他的编辑器以及IDE，但我个人最钟爱的还是<a href=\"http://www.jetbrains.com/webstorm/\" target=\"_blank\" rel=\"noopener\">webstrom</a>。相比<a href=\"http://www.jetbrains.com/phpstorm/\" target=\"_blank\" rel=\"noopener\">phpstrom</a>他更倾向于前端方向的开发模式，相比<a href=\"http://www.dcloud.io/\" target=\"_blank\" rel=\"noopener\">hbuilder</a>有简明的操作方式和更直观的操作面板。在我个人看来webstrom的缺点很少，如果能够用的顺手，相信会让你的效率提升数倍。</p>\n<h2 id=\"下载\"><a href=\"#下载\" class=\"headerlink\" title=\"下载\"></a>下载</h2><p>webstrom下载选择官网<a href=\"http://www.jetbrains.com/webstorm/\" target=\"_blank\" rel=\"noopener\">http://www.jetbrains.com/webstorm/</a>下载。虽然有各种破解版本以及汉化版本满天飞，但相比正版的webstrom少了很多功能和使用的乐趣。可是如果从官网渠道下载webstrom我只能使用30天怎么办？其实只要你在安装时选择<strong>license server</strong>，然后输入<code>http://idea.imsxm.com/</code>，就可以正常使用了。</p>\n<h2 id=\"从设置开始说起\"><a href=\"#从设置开始说起\" class=\"headerlink\" title=\"从设置开始说起\"></a>从设置开始说起</h2><p>你可以点击<strong>File - Settings…</strong> 或者通过快捷键 <strong>ctrl + alt + shift</strong>进入设置（本文所有快捷键仅限于window系统，如果是mac可以在右下角<strong>LF</strong>选项中选择window或者自行查找mac系统快捷键）。</p>\n<h3 id=\"Appearance-amp-Behavior\"><a href=\"#Appearance-amp-Behavior\" class=\"headerlink\" title=\"Appearance &amp; Behavior\"></a>Appearance &amp; Behavior</h3><p>这一栏的设置不建议修改，但还是应该注意<strong>System Settings</strong>这一栏，这一栏中可以设置一些IDE的行为。例如开启webstorm时是否自动显示上一次的项目、打开新项目时覆盖当前项目还是重新打开一页之类的。事实上这些设置在处开始使用时IDE本身也会有弹框提示，但也可以之后修改。另外，在<strong>Appearance</strong>中可以设置IDE背景（Background Image…），不知道你是否注意到了呢？</p>\n<h3 id=\"Keymap\"><a href=\"#Keymap\" class=\"headerlink\" title=\"Keymap\"></a>Keymap</h3><p>这一栏通常用来设置和修改快捷键。你可以修改或者新加某项功能的快捷键，目录为顶部目录，找到双击即可修改和新增，简单方便。</p>\n<h3 id=\"Editor\"><a href=\"#Editor\" class=\"headerlink\" title=\"Editor\"></a>Editor</h3><p>这一栏负责编辑器的编辑模块，重要的有以下几个设置</p>\n<h4 id=\"General\"><a href=\"#General\" class=\"headerlink\" title=\"General\"></a>General</h4><p>这一栏主要设置<strong>ctrl + 鼠标滚轮</strong>调节字号大小、<strong>自动换行</strong>。<br><img src=\"/blog/img/1.png\" alt=\"1.png\"></p>\n<h4 id=\"Color-Scheme\"><a href=\"#Color-Scheme\" class=\"headerlink\" title=\"Color Scheme\"></a>Color Scheme</h4><p>这一栏可以更换浏览器主题。你可以使用自带的几种主题，也可以下载其他主题。下载地址：<a href=\"http://color-themes.com/?view=index\" target=\"_blank\" rel=\"noopener\">http://color-themes.com/?view=index</a>，方式很简单，点击图片可以进行主题预览，选中自己喜欢的主题，下载出来。下载很快，几乎是点击下载的瞬间完成，然后我们就可以安装到自己webstrom中。安装方法：点击左上角的<strong>File–Setting</strong>，选中<strong>Import Settings</strong>，进入选择界面，选择你下载好的主题文件（后缀为.jar），编辑器会经过俩次提示，全部选择同意，然后重启，你就会发现主题安装成功了。在这里有一个小插曲，如果你之前已经打开了webstrom，那么在选择文件的时候有可能会无法找到那个文件，这是因为webstrom本身的缓存在作怪，只要你保证进入到了正确的文件夹，点击刷新，那个文件一定会出现在你的视线中。<br><img src=\"/blog/img/2.jpg\" alt=\"img2\"><img src=\"/blog/img/3.jpg\" alt=\"img3\"></p>\n<h4 id=\"Code-Style\"><a href=\"#Code-Style\" class=\"headerlink\" title=\"Code Style\"></a>Code Style</h4><p>可以设置每种类型文件的格式化参数</p>\n<h4 id=\"File-and-Code-Templates\"><a href=\"#File-and-Code-Templates\" class=\"headerlink\" title=\"File and Code Templates\"></a>File and Code Templates</h4><p>这一栏可以设置自定义的模板，这样在新建文件时可以省去重复操作。</p>\n<h3 id=\"Plugins\"><a href=\"#Plugins\" class=\"headerlink\" title=\"Plugins\"></a>Plugins</h3><p>这里可以设置IDE插件。比如我在写博客时自然希望他可以支持markdown的操作（虽然博客在<a href=\"https://atom.io/\" target=\"_blank\" rel=\"noopener\">atom</a>中编辑更爽的说）。在这里添加markdown的插件。<br><img src=\"/blog/img/4.png\" alt=\"img4\"><br>当然你也可以根据需要安装其他功能的插件。</p>\n<h3 id=\"Version-Control\"><a href=\"#Version-Control\" class=\"headerlink\" title=\"Version Control\"></a>Version Control</h3><p>这里设置版本控制。但webstorm自动处理好了这些设置，一般我们不会在这里进行操作。除非你想添加github仓库。但这一操作比较麻烦，我不会赘述。你可以<a href=\"https://www.cnblogs.com/vanstrict/p/5677716.html\" target=\"_blank\" rel=\"noopener\">点击这里</a>进行配置。<br>关于git的操作我们通常直接进行操作</p>\n<ul>\n<li>如果你想克隆一个仓库，你可以点击导航<strong>VCS - git - clone</strong>直接克隆并打开一个项目。</li>\n<li>对于已被管理的项目，右键鼠标同样有<strong>git</strong>选项，可以进行所有的git操作。值得注意的是<ul>\n<li>使用快捷键ctrl + k可以进行commit操作，ctrl + shift + k 可以进行push操作</li>\n<li>右下角有git: master 之类选项，可以在这里更方便的切换和创建分支</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"Language-amp-amp-Frameworks\"><a href=\"#Language-amp-amp-Frameworks\" class=\"headerlink\" title=\"Language &amp;&amp; Frameworks\"></a>Language &amp;&amp; Frameworks</h3><h4 id=\"JavaScript\"><a href=\"#JavaScript\" class=\"headerlink\" title=\"JavaScript\"></a>JavaScript</h4><p>在这里可以设置js的版本，在子选项中通常使用的是<strong>Libraries</strong>，可以设置IDE支持的语法和提示。<br>你可以选择下载需要的语法支持（jquery之类）。</p>\n<h4 id=\"Node-js-and-NPM\"><a href=\"#Node-js-and-NPM\" class=\"headerlink\" title=\"Node.js and NPM\"></a>Node.js and NPM</h4><p>webstrom会主动去寻找nodeJs程序而不用你手动添加，之后你就可以在IDE中享受编辑器的自动补全以及错误提示等方便的功能，并且下方会显示你安装过的packages，并可以搜索版本是否为最新版本并提示升级。另外，在新创建项目时，我们可以指定文件为<strong>Node.js express App</strong>,非常方便。<br><img src=\"/blog/img/5.png\" alt=\"img5\"><img src=\"/blog/img/6.png\" alt=\"img6\"></p>\n<h3 id=\"Tools\"><a href=\"#Tools\" class=\"headerlink\" title=\"Tools\"></a>Tools</h3><h4 id=\"File-watchers\"><a href=\"#File-watchers\" class=\"headerlink\" title=\"File watchers\"></a>File watchers</h4><p>这里可以设置自动编译。比如很多前端比较前沿的技术（babel、sass之类），在不需要非常复杂配置的情况下webstorm提供自动编译，省去配置文件这一环节。这一功能的前提是你向webstorm添加了编译功能：点击加号，在program中填入安装文件的.cmd文件，在argument中定义你想要的编译方式就可以了。</p>\n<h2 id=\"底部操作栏\"><a href=\"#底部操作栏\" class=\"headerlink\" title=\"底部操作栏\"></a>底部操作栏</h2><p>如果你的底部没有操作栏，点击左下角的小电脑。</p>\n<h3 id=\"TODO\"><a href=\"#TODO\" class=\"headerlink\" title=\"TODO\"></a>TODO</h3><p>你可以在webstorm中使用TODO注释，这样做的好处是你可以通过底部的TODO功能随时找到他。</p>\n<h3 id=\"Terminal\"><a href=\"#Terminal\" class=\"headerlink\" title=\"Terminal\"></a>Terminal</h3><p>不解释，所有开发者都懂得</p>\n<h3 id=\"run\"><a href=\"#run\" class=\"headerlink\" title=\"run\"></a>run</h3><p>运行js文件的利器。尤其在nodejs开发时更为明显。</p>\n<h2 id=\"侧边栏\"><a href=\"#侧边栏\" class=\"headerlink\" title=\"侧边栏\"></a>侧边栏</h2><h3 id=\"npm\"><a href=\"#npm\" class=\"headerlink\" title=\"npm\"></a>npm</h3><p>如果你是运行nodejs项目，会出现这一栏，可以让你方便的运行script。修改script时别忘了点击刷新按钮进行更新</p>\n<h2 id=\"其他方便的操作\"><a href=\"#其他方便的操作\" class=\"headerlink\" title=\"其他方便的操作\"></a>其他方便的操作</h2><p>其他方便的功能</p>\n<ul>\n<li>按住shift，鼠标移入图片链接中可以显示出图像及其具体信息。</li>\n<li>右键点击最右侧区域，选择<strong>customize highlight level</strong>可以选择IDE的高亮规则。由低到高分别为不检查、只检查语法、全检查</li>\n<li>配合浏览器插件可以使用debug，在webstorm中直接打断点不知道有多爽。</li>\n<li>基于NodeJS开发大型项目时，由于node_modules文件夹过于庞大导致的项目加载缓慢甚至卡死，可以在File–setting–Editor–File Types中的ignore files and folders增加一项node_modules（注意后面加分号）;可以让webstorm忽略这个文件夹。</li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<p>我本人从事前端开发也有很长一段时间了。从一开始的<a href=\"https://www.editplus.com/\" target=\"_blank\" rel=\"noopener\">editplus</a>，到后来用到<a href=\"https://notepad-plus-plus.org/\" target=\"_blank\" rel=\"noopener\">nodepad++</a>,之后还使用过一些其他的编辑器以及IDE，但我个人最钟爱的还是<a href=\"http://www.jetbrains.com/webstorm/\" target=\"_blank\" rel=\"noopener\">webstrom</a>。相比<a href=\"http://www.jetbrains.com/phpstorm/\" target=\"_blank\" rel=\"noopener\">phpstrom</a>他更倾向于前端方向的开发模式，相比<a href=\"http://www.dcloud.io/\" target=\"_blank\" rel=\"noopener\">hbuilder</a>有简明的操作方式和更直观的操作面板。在我个人看来webstrom的缺点很少，如果能够用的顺手，相信会让你的效率提升数倍。</p>\n<h2 id=\"下载\"><a href=\"#下载\" class=\"headerlink\" title=\"下载\"></a>下载</h2><p>webstrom下载选择官网<a href=\"http://www.jetbrains.com/webstorm/\" target=\"_blank\" rel=\"noopener\">http://www.jetbrains.com/webstorm/</a>下载。虽然有各种破解版本以及汉化版本满天飞，但相比正版的webstrom少了很多功能和使用的乐趣。可是如果从官网渠道下载webstrom我只能使用30天怎么办？其实只要你在安装时选择<strong>license server</strong>，然后输入<code>http://idea.imsxm.com/</code>，就可以正常使用了。</p>\n<h2 id=\"从设置开始说起\"><a href=\"#从设置开始说起\" class=\"headerlink\" title=\"从设置开始说起\"></a>从设置开始说起</h2><p>你可以点击<strong>File - Settings…</strong> 或者通过快捷键 <strong>ctrl + alt + shift</strong>进入设置（本文所有快捷键仅限于window系统，如果是mac可以在右下角<strong>LF</strong>选项中选择window或者自行查找mac系统快捷键）。</p>\n<h3 id=\"Appearance-amp-Behavior\"><a href=\"#Appearance-amp-Behavior\" class=\"headerlink\" title=\"Appearance &amp; Behavior\"></a>Appearance &amp; Behavior</h3><p>这一栏的设置不建议修改，但还是应该注意<strong>System Settings</strong>这一栏，这一栏中可以设置一些IDE的行为。例如开启webstorm时是否自动显示上一次的项目、打开新项目时覆盖当前项目还是重新打开一页之类的。事实上这些设置在处开始使用时IDE本身也会有弹框提示，但也可以之后修改。另外，在<strong>Appearance</strong>中可以设置IDE背景（Background Image…），不知道你是否注意到了呢？</p>\n<h3 id=\"Keymap\"><a href=\"#Keymap\" class=\"headerlink\" title=\"Keymap\"></a>Keymap</h3><p>这一栏通常用来设置和修改快捷键。你可以修改或者新加某项功能的快捷键，目录为顶部目录，找到双击即可修改和新增，简单方便。</p>\n<h3 id=\"Editor\"><a href=\"#Editor\" class=\"headerlink\" title=\"Editor\"></a>Editor</h3><p>这一栏负责编辑器的编辑模块，重要的有以下几个设置</p>\n<h4 id=\"General\"><a href=\"#General\" class=\"headerlink\" title=\"General\"></a>General</h4><p>这一栏主要设置<strong>ctrl + 鼠标滚轮</strong>调节字号大小、<strong>自动换行</strong>。<br><img src=\"/blog/img/1.png\" alt=\"1.png\"></p>\n<h4 id=\"Color-Scheme\"><a href=\"#Color-Scheme\" class=\"headerlink\" title=\"Color Scheme\"></a>Color Scheme</h4><p>这一栏可以更换浏览器主题。你可以使用自带的几种主题，也可以下载其他主题。下载地址：<a href=\"http://color-themes.com/?view=index\" target=\"_blank\" rel=\"noopener\">http://color-themes.com/?view=index</a>，方式很简单，点击图片可以进行主题预览，选中自己喜欢的主题，下载出来。下载很快，几乎是点击下载的瞬间完成，然后我们就可以安装到自己webstrom中。安装方法：点击左上角的<strong>File–Setting</strong>，选中<strong>Import Settings</strong>，进入选择界面，选择你下载好的主题文件（后缀为.jar），编辑器会经过俩次提示，全部选择同意，然后重启，你就会发现主题安装成功了。在这里有一个小插曲，如果你之前已经打开了webstrom，那么在选择文件的时候有可能会无法找到那个文件，这是因为webstrom本身的缓存在作怪，只要你保证进入到了正确的文件夹，点击刷新，那个文件一定会出现在你的视线中。<br><img src=\"/blog/img/2.jpg\" alt=\"img2\"><img src=\"/blog/img/3.jpg\" alt=\"img3\"></p>\n<h4 id=\"Code-Style\"><a href=\"#Code-Style\" class=\"headerlink\" title=\"Code Style\"></a>Code Style</h4><p>可以设置每种类型文件的格式化参数</p>\n<h4 id=\"File-and-Code-Templates\"><a href=\"#File-and-Code-Templates\" class=\"headerlink\" title=\"File and Code Templates\"></a>File and Code Templates</h4><p>这一栏可以设置自定义的模板，这样在新建文件时可以省去重复操作。</p>\n<h3 id=\"Plugins\"><a href=\"#Plugins\" class=\"headerlink\" title=\"Plugins\"></a>Plugins</h3><p>这里可以设置IDE插件。比如我在写博客时自然希望他可以支持markdown的操作（虽然博客在<a href=\"https://atom.io/\" target=\"_blank\" rel=\"noopener\">atom</a>中编辑更爽的说）。在这里添加markdown的插件。<br><img src=\"/blog/img/4.png\" alt=\"img4\"><br>当然你也可以根据需要安装其他功能的插件。</p>\n<h3 id=\"Version-Control\"><a href=\"#Version-Control\" class=\"headerlink\" title=\"Version Control\"></a>Version Control</h3><p>这里设置版本控制。但webstorm自动处理好了这些设置，一般我们不会在这里进行操作。除非你想添加github仓库。但这一操作比较麻烦，我不会赘述。你可以<a href=\"https://www.cnblogs.com/vanstrict/p/5677716.html\" target=\"_blank\" rel=\"noopener\">点击这里</a>进行配置。<br>关于git的操作我们通常直接进行操作</p>\n<ul>\n<li>如果你想克隆一个仓库，你可以点击导航<strong>VCS - git - clone</strong>直接克隆并打开一个项目。</li>\n<li>对于已被管理的项目，右键鼠标同样有<strong>git</strong>选项，可以进行所有的git操作。值得注意的是<ul>\n<li>使用快捷键ctrl + k可以进行commit操作，ctrl + shift + k 可以进行push操作</li>\n<li>右下角有git: master 之类选项，可以在这里更方便的切换和创建分支</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"Language-amp-amp-Frameworks\"><a href=\"#Language-amp-amp-Frameworks\" class=\"headerlink\" title=\"Language &amp;&amp; Frameworks\"></a>Language &amp;&amp; Frameworks</h3><h4 id=\"JavaScript\"><a href=\"#JavaScript\" class=\"headerlink\" title=\"JavaScript\"></a>JavaScript</h4><p>在这里可以设置js的版本，在子选项中通常使用的是<strong>Libraries</strong>，可以设置IDE支持的语法和提示。<br>你可以选择下载需要的语法支持（jquery之类）。</p>\n<h4 id=\"Node-js-and-NPM\"><a href=\"#Node-js-and-NPM\" class=\"headerlink\" title=\"Node.js and NPM\"></a>Node.js and NPM</h4><p>webstrom会主动去寻找nodeJs程序而不用你手动添加，之后你就可以在IDE中享受编辑器的自动补全以及错误提示等方便的功能，并且下方会显示你安装过的packages，并可以搜索版本是否为最新版本并提示升级。另外，在新创建项目时，我们可以指定文件为<strong>Node.js express App</strong>,非常方便。<br><img src=\"/blog/img/5.png\" alt=\"img5\"><img src=\"/blog/img/6.png\" alt=\"img6\"></p>\n<h3 id=\"Tools\"><a href=\"#Tools\" class=\"headerlink\" title=\"Tools\"></a>Tools</h3><h4 id=\"File-watchers\"><a href=\"#File-watchers\" class=\"headerlink\" title=\"File watchers\"></a>File watchers</h4><p>这里可以设置自动编译。比如很多前端比较前沿的技术（babel、sass之类），在不需要非常复杂配置的情况下webstorm提供自动编译，省去配置文件这一环节。这一功能的前提是你向webstorm添加了编译功能：点击加号，在program中填入安装文件的.cmd文件，在argument中定义你想要的编译方式就可以了。</p>\n<h2 id=\"底部操作栏\"><a href=\"#底部操作栏\" class=\"headerlink\" title=\"底部操作栏\"></a>底部操作栏</h2><p>如果你的底部没有操作栏，点击左下角的小电脑。</p>\n<h3 id=\"TODO\"><a href=\"#TODO\" class=\"headerlink\" title=\"TODO\"></a>TODO</h3><p>你可以在webstorm中使用TODO注释，这样做的好处是你可以通过底部的TODO功能随时找到他。</p>\n<h3 id=\"Terminal\"><a href=\"#Terminal\" class=\"headerlink\" title=\"Terminal\"></a>Terminal</h3><p>不解释，所有开发者都懂得</p>\n<h3 id=\"run\"><a href=\"#run\" class=\"headerlink\" title=\"run\"></a>run</h3><p>运行js文件的利器。尤其在nodejs开发时更为明显。</p>\n<h2 id=\"侧边栏\"><a href=\"#侧边栏\" class=\"headerlink\" title=\"侧边栏\"></a>侧边栏</h2><h3 id=\"npm\"><a href=\"#npm\" class=\"headerlink\" title=\"npm\"></a>npm</h3><p>如果你是运行nodejs项目，会出现这一栏，可以让你方便的运行script。修改script时别忘了点击刷新按钮进行更新</p>\n<h2 id=\"其他方便的操作\"><a href=\"#其他方便的操作\" class=\"headerlink\" title=\"其他方便的操作\"></a>其他方便的操作</h2><p>其他方便的功能</p>\n<ul>\n<li>按住shift，鼠标移入图片链接中可以显示出图像及其具体信息。</li>\n<li>右键点击最右侧区域，选择<strong>customize highlight level</strong>可以选择IDE的高亮规则。由低到高分别为不检查、只检查语法、全检查</li>\n<li>配合浏览器插件可以使用debug，在webstorm中直接打断点不知道有多爽。</li>\n<li>基于NodeJS开发大型项目时，由于node_modules文件夹过于庞大导致的项目加载缓慢甚至卡死，可以在File–setting–Editor–File Types中的ignore files and folders增加一项node_modules（注意后面加分号）;可以让webstorm忽略这个文件夹。</li>\n</ul>\n"},{"title":"全局设置npm镜像","date":"2017-11-15T00:43:46.000Z","description":"全局设置npm镜像","_content":"通过命令`npm config set registry https://registry.npm.taobao.org`设置\n或者通过命令`npm config ls -s`查看详细的全局配置\n留意一个选项`globalconfig`，地址指向一个文件npmrc；一个`userconfig`，地址指向一个文件.npmrc（如果没有新建一个），添加以下内容即可\n\n```shell\nregistry=https://registry.npm.taobao.org/\n```\n","source":"_posts/全局设置npm镜像.md","raw":"---\ntitle: 全局设置npm镜像\ntags: [NodeJs]\ndate: 2017-11-15 08:43:46\ncategories: [NodeJs]\ndescription: 全局设置npm镜像\n---\n通过命令`npm config set registry https://registry.npm.taobao.org`设置\n或者通过命令`npm config ls -s`查看详细的全局配置\n留意一个选项`globalconfig`，地址指向一个文件npmrc；一个`userconfig`，地址指向一个文件.npmrc（如果没有新建一个），添加以下内容即可\n\n```shell\nregistry=https://registry.npm.taobao.org/\n```\n","slug":"全局设置npm镜像","published":1,"updated":"2021-06-25T11:19:55.447Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckqc904pb0020wotv0x1thsj2","content":"<p>通过命令<code>npm config set registry https://registry.npm.taobao.org</code>设置<br>或者通过命令<code>npm config ls -s</code>查看详细的全局配置<br>留意一个选项<code>globalconfig</code>，地址指向一个文件npmrc；一个<code>userconfig</code>，地址指向一个文件.npmrc（如果没有新建一个），添加以下内容即可</p>\n<div class=\"code-panel__wrapper\" autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\"><header class=\"mac-panel\"><span class=\"doc-path\"></span><span class=\"mac-panel__language\">SHELL</span></header><figure class=\"iseeu highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">registry=https://registry.npm.taobao.org/</span><br></pre></td></tr></table></figure></div>\n","site":{"data":{}},"excerpt":"","more":"<p>通过命令<code>npm config set registry https://registry.npm.taobao.org</code>设置<br>或者通过命令<code>npm config ls -s</code>查看详细的全局配置<br>留意一个选项<code>globalconfig</code>，地址指向一个文件npmrc；一个<code>userconfig</code>，地址指向一个文件.npmrc（如果没有新建一个），添加以下内容即可</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">registry=https://registry.npm.taobao.org/</span><br></pre></td></tr></table></figure>\n"},{"title":"关于sticky-footer兼容性最好的一种解决方案","date":"2017-10-31T01:16:58.000Z","description":"sticky-footer解决方案","_content":"## 什么是 sticky-footer？\nsticky-footer是一种最古老的同时也最常见的网页效果，具体表现为：当内容足够时，页脚被内容向下推送，如果内容不足以撑开高度，页脚应当粘贴在窗口底部。这种效果非常常见且看似简单，但实际上实现起来比想象中要复杂得多。目前为止至少有5种方式可以实现sticky-footer布局，但各有优势和劣势，这里介绍兼容性最强的一种写法。\n```\n/* html */\n<body>\n  <div class=\"wrapper\">\n    <div class=\"content\">这是内容部分</div>\n  </div>\n  <div class=\"footer\">这是页脚部分</div>\n</body>\n\n/* css */\nhtml,body{\n  height:100%;\n  margin:0;\n  padding:0\n}\n.wrapper{\n  min-height: 100%;\n  background: #ace;\n}\n.wrapper .content{\n  padding-bottom: 100px;\n}\n.footer{\n  position: relative;\n  height:100px;\n  background: #333;\n  margin-top: -100px;\n}\n```\n以防万一，需要清除浮动\n```\n.clearfix {\n  display:inline-block;\n}\n.clearfix:after {\n  content: \"\";\n  display: block;\n  clear: both;\n}\n```\n","source":"_posts/关于sticky-footer兼容性最好的一种解决方案.md","raw":"title: 关于sticky-footer兼容性最好的一种解决方案\ntags: [css]\ndate: 2017-10-31 09:16:58\ncategories: [css]\ndescription: sticky-footer解决方案\n---\n## 什么是 sticky-footer？\nsticky-footer是一种最古老的同时也最常见的网页效果，具体表现为：当内容足够时，页脚被内容向下推送，如果内容不足以撑开高度，页脚应当粘贴在窗口底部。这种效果非常常见且看似简单，但实际上实现起来比想象中要复杂得多。目前为止至少有5种方式可以实现sticky-footer布局，但各有优势和劣势，这里介绍兼容性最强的一种写法。\n```\n/* html */\n<body>\n  <div class=\"wrapper\">\n    <div class=\"content\">这是内容部分</div>\n  </div>\n  <div class=\"footer\">这是页脚部分</div>\n</body>\n\n/* css */\nhtml,body{\n  height:100%;\n  margin:0;\n  padding:0\n}\n.wrapper{\n  min-height: 100%;\n  background: #ace;\n}\n.wrapper .content{\n  padding-bottom: 100px;\n}\n.footer{\n  position: relative;\n  height:100px;\n  background: #333;\n  margin-top: -100px;\n}\n```\n以防万一，需要清除浮动\n```\n.clearfix {\n  display:inline-block;\n}\n.clearfix:after {\n  content: \"\";\n  display: block;\n  clear: both;\n}\n```\n","slug":"关于sticky-footer兼容性最好的一种解决方案","published":1,"updated":"2021-06-25T11:19:55.447Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckqc904pe0024wotvoye18153","content":"<h2 id=\"什么是-sticky-footer？\"><a href=\"#什么是-sticky-footer？\" class=\"headerlink\" title=\"什么是 sticky-footer？\"></a>什么是 sticky-footer？</h2><p>sticky-footer是一种最古老的同时也最常见的网页效果，具体表现为：当内容足够时，页脚被内容向下推送，如果内容不足以撑开高度，页脚应当粘贴在窗口底部。这种效果非常常见且看似简单，但实际上实现起来比想象中要复杂得多。目前为止至少有5种方式可以实现sticky-footer布局，但各有优势和劣势，这里介绍兼容性最强的一种写法。<br><div class=\"code-panel__wrapper\" autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\"><header class=\"mac-panel\"><span class=\"doc-path\"></span><span class=\"mac-panel__language\">PLAIN</span></header><figure class=\"iseeu highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/* html */</span><br><span class=\"line\">&lt;body&gt;</span><br><span class=\"line\">  &lt;div class=&quot;wrapper&quot;&gt;</span><br><span class=\"line\">    &lt;div class=&quot;content&quot;&gt;这是内容部分&lt;/div&gt;</span><br><span class=\"line\">  &lt;/div&gt;</span><br><span class=\"line\">  &lt;div class=&quot;footer&quot;&gt;这是页脚部分&lt;/div&gt;</span><br><span class=\"line\">&lt;/body&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">/* css */</span><br><span class=\"line\">html,body&#123;</span><br><span class=\"line\">  height:100%;</span><br><span class=\"line\">  margin:0;</span><br><span class=\"line\">  padding:0</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">.wrapper&#123;</span><br><span class=\"line\">  min-height: 100%;</span><br><span class=\"line\">  background: #ace;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">.wrapper .content&#123;</span><br><span class=\"line\">  padding-bottom: 100px;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">.footer&#123;</span><br><span class=\"line\">  position: relative;</span><br><span class=\"line\">  height:100px;</span><br><span class=\"line\">  background: #333;</span><br><span class=\"line\">  margin-top: -100px;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></div></p>\n<p>以防万一，需要清除浮动<br><div class=\"code-panel__wrapper\" autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\"><header class=\"mac-panel\"><span class=\"doc-path\"></span><span class=\"mac-panel__language\">PLAIN</span></header><figure class=\"iseeu highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">.clearfix &#123;</span><br><span class=\"line\">  display:inline-block;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">.clearfix:after &#123;</span><br><span class=\"line\">  content: &quot;&quot;;</span><br><span class=\"line\">  display: block;</span><br><span class=\"line\">  clear: both;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></div></p>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"什么是-sticky-footer？\"><a href=\"#什么是-sticky-footer？\" class=\"headerlink\" title=\"什么是 sticky-footer？\"></a>什么是 sticky-footer？</h2><p>sticky-footer是一种最古老的同时也最常见的网页效果，具体表现为：当内容足够时，页脚被内容向下推送，如果内容不足以撑开高度，页脚应当粘贴在窗口底部。这种效果非常常见且看似简单，但实际上实现起来比想象中要复杂得多。目前为止至少有5种方式可以实现sticky-footer布局，但各有优势和劣势，这里介绍兼容性最强的一种写法。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/* html */</span><br><span class=\"line\">&lt;body&gt;</span><br><span class=\"line\">  &lt;div class=&quot;wrapper&quot;&gt;</span><br><span class=\"line\">    &lt;div class=&quot;content&quot;&gt;这是内容部分&lt;/div&gt;</span><br><span class=\"line\">  &lt;/div&gt;</span><br><span class=\"line\">  &lt;div class=&quot;footer&quot;&gt;这是页脚部分&lt;/div&gt;</span><br><span class=\"line\">&lt;/body&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">/* css */</span><br><span class=\"line\">html,body&#123;</span><br><span class=\"line\">  height:100%;</span><br><span class=\"line\">  margin:0;</span><br><span class=\"line\">  padding:0</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">.wrapper&#123;</span><br><span class=\"line\">  min-height: 100%;</span><br><span class=\"line\">  background: #ace;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">.wrapper .content&#123;</span><br><span class=\"line\">  padding-bottom: 100px;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">.footer&#123;</span><br><span class=\"line\">  position: relative;</span><br><span class=\"line\">  height:100px;</span><br><span class=\"line\">  background: #333;</span><br><span class=\"line\">  margin-top: -100px;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>以防万一，需要清除浮动<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">.clearfix &#123;</span><br><span class=\"line\">  display:inline-block;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">.clearfix:after &#123;</span><br><span class=\"line\">  content: &quot;&quot;;</span><br><span class=\"line\">  display: block;</span><br><span class=\"line\">  clear: both;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n"},{"title":"关于vue-awesome-swiper以及vue-cli升级随笔","date":"2017-12-10T01:58:04.000Z","description":"解决一些关于升级带来的困扰","_content":"## 关于 vue-cli\nvue-cli 在最近更新到了2.9.x版本，新的 vue-lci 模板使用了更高版本的webpack进行打包，因而弃用了 express并改变了构建结构，对我本人目前遇到的问题：\n### 如何在基础上设置自己的接口\n在之前版本可以在 dev-server.js 中通过express方便的设计路由并插入，而现有版本移除了express并且删除了dev-server.js文件，应该怎么做？新版本中使用了webpack-dev-server，查找文档后发现有一个接口方法为 devServer.before ,可以在这个方法中定义api接口。\n```\n// webpack.dev.conf.js\n\ndevServer: {\n  ......\n  before(app){\n    app.get('/api',function (req, res) {\n      res.json({\n        author: 'lost-dream',\n        age: 24,\n        sex: 'man'\n      })\n    });\n  }\n}\n```\n### 使用css预处理器sass\n新版本中想使用sass(其他预处理器我没有尝试)编译，需要手动配置。\n+ 安装依赖 `cnpm install -D node-sass sass-loader`\n+ 添加loader\n```\nrules: [\n  ...\n  {\n    test: /\\.(scss|sass)$/,\n    loaders: ['style-loader', 'css-loader', 'sass-loader']\n  }\n]\n```\n## 关于vue-awesome-swiper\n由于 swiper 更新到 swiper4，因此该插件在最近也得到了升级。首先他优化了文档（之前版本文档不全，为我带来了不少困扰），其次更新了使用的结构和方式，不过无论如何变化，vue-awesome-swiper始终坚持使用swpierAPI，因此有其他问题，还是要到swiper官网寻找答案。","source":"_posts/关于vue-awesome-swiper以及vue-cli升级随笔.md","raw":"title: 关于vue-awesome-swiper以及vue-cli升级随笔\ntags: [vue,carousel]\ndate: 2017-12-10 09:58:04\ncategories: [swiper]\ndescription: 解决一些关于升级带来的困扰\n---\n## 关于 vue-cli\nvue-cli 在最近更新到了2.9.x版本，新的 vue-lci 模板使用了更高版本的webpack进行打包，因而弃用了 express并改变了构建结构，对我本人目前遇到的问题：\n### 如何在基础上设置自己的接口\n在之前版本可以在 dev-server.js 中通过express方便的设计路由并插入，而现有版本移除了express并且删除了dev-server.js文件，应该怎么做？新版本中使用了webpack-dev-server，查找文档后发现有一个接口方法为 devServer.before ,可以在这个方法中定义api接口。\n```\n// webpack.dev.conf.js\n\ndevServer: {\n  ......\n  before(app){\n    app.get('/api',function (req, res) {\n      res.json({\n        author: 'lost-dream',\n        age: 24,\n        sex: 'man'\n      })\n    });\n  }\n}\n```\n### 使用css预处理器sass\n新版本中想使用sass(其他预处理器我没有尝试)编译，需要手动配置。\n+ 安装依赖 `cnpm install -D node-sass sass-loader`\n+ 添加loader\n```\nrules: [\n  ...\n  {\n    test: /\\.(scss|sass)$/,\n    loaders: ['style-loader', 'css-loader', 'sass-loader']\n  }\n]\n```\n## 关于vue-awesome-swiper\n由于 swiper 更新到 swiper4，因此该插件在最近也得到了升级。首先他优化了文档（之前版本文档不全，为我带来了不少困扰），其次更新了使用的结构和方式，不过无论如何变化，vue-awesome-swiper始终坚持使用swpierAPI，因此有其他问题，还是要到swiper官网寻找答案。","slug":"关于vue-awesome-swiper以及vue-cli升级随笔","published":1,"updated":"2021-06-25T11:19:55.447Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckqc904pe0025wotv3iaqlqzg","content":"<h2 id=\"关于-vue-cli\"><a href=\"#关于-vue-cli\" class=\"headerlink\" title=\"关于 vue-cli\"></a>关于 vue-cli</h2><p>vue-cli 在最近更新到了2.9.x版本，新的 vue-lci 模板使用了更高版本的webpack进行打包，因而弃用了 express并改变了构建结构，对我本人目前遇到的问题：</p>\n<h3 id=\"如何在基础上设置自己的接口\"><a href=\"#如何在基础上设置自己的接口\" class=\"headerlink\" title=\"如何在基础上设置自己的接口\"></a>如何在基础上设置自己的接口</h3><p>在之前版本可以在 dev-server.js 中通过express方便的设计路由并插入，而现有版本移除了express并且删除了dev-server.js文件，应该怎么做？新版本中使用了webpack-dev-server，查找文档后发现有一个接口方法为 devServer.before ,可以在这个方法中定义api接口。<br><div class=\"code-panel__wrapper\" autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\"><header class=\"mac-panel\"><span class=\"doc-path\"></span><span class=\"mac-panel__language\">PLAIN</span></header><figure class=\"iseeu highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">// webpack.dev.conf.js</span><br><span class=\"line\"></span><br><span class=\"line\">devServer: &#123;</span><br><span class=\"line\">  ......</span><br><span class=\"line\">  before(app)&#123;</span><br><span class=\"line\">    app.get(&apos;/api&apos;,function (req, res) &#123;</span><br><span class=\"line\">      res.json(&#123;</span><br><span class=\"line\">        author: &apos;lost-dream&apos;,</span><br><span class=\"line\">        age: 24,</span><br><span class=\"line\">        sex: &apos;man&apos;</span><br><span class=\"line\">      &#125;)</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></div></p>\n<h3 id=\"使用css预处理器sass\"><a href=\"#使用css预处理器sass\" class=\"headerlink\" title=\"使用css预处理器sass\"></a>使用css预处理器sass</h3><p>新版本中想使用sass(其他预处理器我没有尝试)编译，需要手动配置。</p>\n<ul>\n<li>安装依赖 <code>cnpm install -D node-sass sass-loader</code></li>\n<li>添加loader<div class=\"code-panel__wrapper\" autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\"><header class=\"mac-panel\"><span class=\"doc-path\"></span><span class=\"mac-panel__language\">PLAIN</span></header><figure class=\"iseeu highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">rules: [</span><br><span class=\"line\">  ...</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    test: /\\.(scss|sass)$/,</span><br><span class=\"line\">    loaders: [&apos;style-loader&apos;, &apos;css-loader&apos;, &apos;sass-loader&apos;]</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">]</span><br></pre></td></tr></table></figure></div>\n</li>\n</ul>\n<h2 id=\"关于vue-awesome-swiper\"><a href=\"#关于vue-awesome-swiper\" class=\"headerlink\" title=\"关于vue-awesome-swiper\"></a>关于vue-awesome-swiper</h2><p>由于 swiper 更新到 swiper4，因此该插件在最近也得到了升级。首先他优化了文档（之前版本文档不全，为我带来了不少困扰），其次更新了使用的结构和方式，不过无论如何变化，vue-awesome-swiper始终坚持使用swpierAPI，因此有其他问题，还是要到swiper官网寻找答案。</p>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"关于-vue-cli\"><a href=\"#关于-vue-cli\" class=\"headerlink\" title=\"关于 vue-cli\"></a>关于 vue-cli</h2><p>vue-cli 在最近更新到了2.9.x版本，新的 vue-lci 模板使用了更高版本的webpack进行打包，因而弃用了 express并改变了构建结构，对我本人目前遇到的问题：</p>\n<h3 id=\"如何在基础上设置自己的接口\"><a href=\"#如何在基础上设置自己的接口\" class=\"headerlink\" title=\"如何在基础上设置自己的接口\"></a>如何在基础上设置自己的接口</h3><p>在之前版本可以在 dev-server.js 中通过express方便的设计路由并插入，而现有版本移除了express并且删除了dev-server.js文件，应该怎么做？新版本中使用了webpack-dev-server，查找文档后发现有一个接口方法为 devServer.before ,可以在这个方法中定义api接口。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">// webpack.dev.conf.js</span><br><span class=\"line\"></span><br><span class=\"line\">devServer: &#123;</span><br><span class=\"line\">  ......</span><br><span class=\"line\">  before(app)&#123;</span><br><span class=\"line\">    app.get(&apos;/api&apos;,function (req, res) &#123;</span><br><span class=\"line\">      res.json(&#123;</span><br><span class=\"line\">        author: &apos;lost-dream&apos;,</span><br><span class=\"line\">        age: 24,</span><br><span class=\"line\">        sex: &apos;man&apos;</span><br><span class=\"line\">      &#125;)</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"使用css预处理器sass\"><a href=\"#使用css预处理器sass\" class=\"headerlink\" title=\"使用css预处理器sass\"></a>使用css预处理器sass</h3><p>新版本中想使用sass(其他预处理器我没有尝试)编译，需要手动配置。</p>\n<ul>\n<li>安装依赖 <code>cnpm install -D node-sass sass-loader</code></li>\n<li>添加loader<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">rules: [</span><br><span class=\"line\">  ...</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    test: /\\.(scss|sass)$/,</span><br><span class=\"line\">    loaders: [&apos;style-loader&apos;, &apos;css-loader&apos;, &apos;sass-loader&apos;]</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">]</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<h2 id=\"关于vue-awesome-swiper\"><a href=\"#关于vue-awesome-swiper\" class=\"headerlink\" title=\"关于vue-awesome-swiper\"></a>关于vue-awesome-swiper</h2><p>由于 swiper 更新到 swiper4，因此该插件在最近也得到了升级。首先他优化了文档（之前版本文档不全，为我带来了不少困扰），其次更新了使用的结构和方式，不过无论如何变化，vue-awesome-swiper始终坚持使用swpierAPI，因此有其他问题，还是要到swiper官网寻找答案。</p>\n"},{"title":"关于vue（全家桶）的一些使用心得","date":"2018-07-15T07:28:46.000Z","description":"vue重够jquery项目之后的一些心得","_content":"# 写在前面\n最早之前开发的项目随着业务逻辑的迭代，到达现在实在让人无法接受，于是不得不进行了重构，紧锣密鼓的几个月之后终于完成。在这里说一下自己的一些感受。\n# 关于vue-cli\nvue-cli对vue进行了非常多的处理，尽量让开发者可以专心处理业务的逻辑而不用关心底层的部分。尽管如此，还是需要另外配置很多东西。\n## 预处理器（eg:sass）\n+ 新版本的脚手架工具配置好了预处理器的部分，但没有集成预处理语言，也就是说，你不再需要配置预处理器，但还是应该install它。\n+ 在一些情况下， sass的编译会出现异常。如果你能确信自己写的没有错，那问题确实出现在sass上，一般情况下sass的语法无法处理多层级的样式叠加。例如：我的项目引用了swiper，并全局使用swiper。.css。之后，又将swiper封装为组件，并给组件一些额外的样式，最后在组件调用时第三次添加特殊的样式，如此叠加css导致sass处理出现了问题。这个时候需要`deep`模式。\n    ```css\n        /deep/ .my-swiper{\n            ...\n        }\n    ```\n    \n## webpack\n+ host 0.0.0.0          \n开发移动应用，需要随时在手机上观察效果。在`package.json`添加\n    ```\n      \"scripts\": {\n        \"dev\": \"webpack-dev-server --inline --progress --config build/webpack.dev.conf.js --host 0.0.0.0\",\n       },\n    ```\n    \n+ 关于背景图打包后出错的问题\n    开发大型项目当然需要对src目录做一些修改，但添加层级也会导致webpack打包出错。我的项目通过分割组件构成，组建内部专属的图片直接放在组件文件内部。具体结构是这样的\n    ```\n    ├─src\n    │  ├─assets\n    │  │  ├─images\n    │  │  ├─js\n    │  │  ├─css\n    │  │  ├─font\n    │  ├─ pages\n    │  │  ├─Index\n    │  │  │ ├─Index.vue\n    │  │  │ ├─1.jpg\n    │  │  ├─Mine\n    │  │  ├─...\n    ```\n    这个时候图片打包需要重新配置\n    ```\n        build/utils.js\n        function generateLoaders (loader, loaderOptions) {\n            ...\n            if (options.extract) {\n                  return ExtractTextPlugin.extract({\n                    use: loaders,\n                    fallback: 'vue-style-loader',\n                    publicPath: '../../' // add\n                  })\n                } else {\n                  return ['vue-style-loader'].concat(loaders)\n                }\n        }\n    ```\n    \n## 关于axios\naxios的配置我想说的只有拦截器。可以在请求或响应被 then 或 catch 处理前拦截它们\n```js\nimport axios from 'axios'\nimport {Base64} from 'js-base64'\n\nimport Router from '@/router/index'\n\nconst $axios = axios.create({\n  baseURL: hostURL + 'TouchStoneServiceNew'\n})\n\n$axios.interceptors.request.use(function (config) {\n\n  config.headers['Content-Type'] = 'application/x-www-form-urlencoded'\n  config.headers['Authorization'] = authorization\n  return config\n}, function (error) {\n  return Promise.reject(error)\n})\n\n$axios.interceptors.response.use(\n  response => {\n    if (response.data.resultCode === '505' || response.data.resultCode === '506') {\n      setTimeout(() => {\n     \n        Router.push({\n          name: 'loginRegister',\n\n        })\n      }, 2000)\n    }\n    return response\n  },\n  error => {\n    if (error.response) {\n      switch (error.response.status) {\n        case 401: // 返回 401 跳转到登录页面\n      \n            Router.push({\n              path: 'loginRegister',\n              query: {redirect: Router.currentRoute.fullPath}\n            })\n   \n      }\n    }\n    return Promise.reject(error) // 返回接口返回的错误信息\n  })\n\n\n\n```\n在请求发送之前向header添加content-type和authorization                      \n请求返回之后拦截状态做处理\n\n## vuex\nvuex用来管理vue状态确实很方便，但**只能在组件中需要共享的数据才使用vuex，简单地说就是路由不会跳转**。因为vuex虽然保存数据，但因为vue本身就是单页项目，如果用户刷新网页就全部丢失了。一些重要的信息海慧寺因该保存在cookie和localstorage里。至于语法可以到官网查看，非常详细。","source":"_posts/关于vue（全家桶）的一些使用心得.md","raw":"title: 关于vue（全家桶）的一些使用心得\ntags: [vue, vuex, axios, webpack, es6+]\ndate: 2018-07-15 15:28:46\ncategories: [vue]\ndescription: vue重够jquery项目之后的一些心得\n---\n# 写在前面\n最早之前开发的项目随着业务逻辑的迭代，到达现在实在让人无法接受，于是不得不进行了重构，紧锣密鼓的几个月之后终于完成。在这里说一下自己的一些感受。\n# 关于vue-cli\nvue-cli对vue进行了非常多的处理，尽量让开发者可以专心处理业务的逻辑而不用关心底层的部分。尽管如此，还是需要另外配置很多东西。\n## 预处理器（eg:sass）\n+ 新版本的脚手架工具配置好了预处理器的部分，但没有集成预处理语言，也就是说，你不再需要配置预处理器，但还是应该install它。\n+ 在一些情况下， sass的编译会出现异常。如果你能确信自己写的没有错，那问题确实出现在sass上，一般情况下sass的语法无法处理多层级的样式叠加。例如：我的项目引用了swiper，并全局使用swiper。.css。之后，又将swiper封装为组件，并给组件一些额外的样式，最后在组件调用时第三次添加特殊的样式，如此叠加css导致sass处理出现了问题。这个时候需要`deep`模式。\n    ```css\n        /deep/ .my-swiper{\n            ...\n        }\n    ```\n    \n## webpack\n+ host 0.0.0.0          \n开发移动应用，需要随时在手机上观察效果。在`package.json`添加\n    ```\n      \"scripts\": {\n        \"dev\": \"webpack-dev-server --inline --progress --config build/webpack.dev.conf.js --host 0.0.0.0\",\n       },\n    ```\n    \n+ 关于背景图打包后出错的问题\n    开发大型项目当然需要对src目录做一些修改，但添加层级也会导致webpack打包出错。我的项目通过分割组件构成，组建内部专属的图片直接放在组件文件内部。具体结构是这样的\n    ```\n    ├─src\n    │  ├─assets\n    │  │  ├─images\n    │  │  ├─js\n    │  │  ├─css\n    │  │  ├─font\n    │  ├─ pages\n    │  │  ├─Index\n    │  │  │ ├─Index.vue\n    │  │  │ ├─1.jpg\n    │  │  ├─Mine\n    │  │  ├─...\n    ```\n    这个时候图片打包需要重新配置\n    ```\n        build/utils.js\n        function generateLoaders (loader, loaderOptions) {\n            ...\n            if (options.extract) {\n                  return ExtractTextPlugin.extract({\n                    use: loaders,\n                    fallback: 'vue-style-loader',\n                    publicPath: '../../' // add\n                  })\n                } else {\n                  return ['vue-style-loader'].concat(loaders)\n                }\n        }\n    ```\n    \n## 关于axios\naxios的配置我想说的只有拦截器。可以在请求或响应被 then 或 catch 处理前拦截它们\n```js\nimport axios from 'axios'\nimport {Base64} from 'js-base64'\n\nimport Router from '@/router/index'\n\nconst $axios = axios.create({\n  baseURL: hostURL + 'TouchStoneServiceNew'\n})\n\n$axios.interceptors.request.use(function (config) {\n\n  config.headers['Content-Type'] = 'application/x-www-form-urlencoded'\n  config.headers['Authorization'] = authorization\n  return config\n}, function (error) {\n  return Promise.reject(error)\n})\n\n$axios.interceptors.response.use(\n  response => {\n    if (response.data.resultCode === '505' || response.data.resultCode === '506') {\n      setTimeout(() => {\n     \n        Router.push({\n          name: 'loginRegister',\n\n        })\n      }, 2000)\n    }\n    return response\n  },\n  error => {\n    if (error.response) {\n      switch (error.response.status) {\n        case 401: // 返回 401 跳转到登录页面\n      \n            Router.push({\n              path: 'loginRegister',\n              query: {redirect: Router.currentRoute.fullPath}\n            })\n   \n      }\n    }\n    return Promise.reject(error) // 返回接口返回的错误信息\n  })\n\n\n\n```\n在请求发送之前向header添加content-type和authorization                      \n请求返回之后拦截状态做处理\n\n## vuex\nvuex用来管理vue状态确实很方便，但**只能在组件中需要共享的数据才使用vuex，简单地说就是路由不会跳转**。因为vuex虽然保存数据，但因为vue本身就是单页项目，如果用户刷新网页就全部丢失了。一些重要的信息海慧寺因该保存在cookie和localstorage里。至于语法可以到官网查看，非常详细。","slug":"关于vue（全家桶）的一些使用心得","published":1,"updated":"2021-06-25T11:19:55.448Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckqc904pg002awotv8mofm2dd","content":"<h1 id=\"写在前面\"><a href=\"#写在前面\" class=\"headerlink\" title=\"写在前面\"></a>写在前面</h1><p>最早之前开发的项目随着业务逻辑的迭代，到达现在实在让人无法接受，于是不得不进行了重构，紧锣密鼓的几个月之后终于完成。在这里说一下自己的一些感受。</p>\n<h1 id=\"关于vue-cli\"><a href=\"#关于vue-cli\" class=\"headerlink\" title=\"关于vue-cli\"></a>关于vue-cli</h1><p>vue-cli对vue进行了非常多的处理，尽量让开发者可以专心处理业务的逻辑而不用关心底层的部分。尽管如此，还是需要另外配置很多东西。</p>\n<h2 id=\"预处理器（eg-sass）\"><a href=\"#预处理器（eg-sass）\" class=\"headerlink\" title=\"预处理器（eg:sass）\"></a>预处理器（eg:sass）</h2><ul>\n<li>新版本的脚手架工具配置好了预处理器的部分，但没有集成预处理语言，也就是说，你不再需要配置预处理器，但还是应该install它。</li>\n<li>在一些情况下， sass的编译会出现异常。如果你能确信自己写的没有错，那问题确实出现在sass上，一般情况下sass的语法无法处理多层级的样式叠加。例如：我的项目引用了swiper，并全局使用swiper。.css。之后，又将swiper封装为组件，并给组件一些额外的样式，最后在组件调用时第三次添加特殊的样式，如此叠加css导致sass处理出现了问题。这个时候需要<code>deep</code>模式。  <div class=\"code-panel__wrapper\" autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\"><header class=\"mac-panel\"><span class=\"doc-path\"></span><span class=\"mac-panel__language\">CSS</span></header><figure class=\"iseeu highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/deep/ .my-swiper&#123;</span><br><span class=\"line\">    ...</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></div>\n</li>\n</ul>\n<h2 id=\"webpack\"><a href=\"#webpack\" class=\"headerlink\" title=\"webpack\"></a>webpack</h2><ul>\n<li>host 0.0.0.0<br>开发移动应用，需要随时在手机上观察效果。在<code>package.json</code>添加  <div class=\"code-panel__wrapper\" autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\"><header class=\"mac-panel\"><span class=\"doc-path\"></span><span class=\"mac-panel__language\">PLAIN</span></header><figure class=\"iseeu highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&quot;scripts&quot;: &#123;</span><br><span class=\"line\">  &quot;dev&quot;: &quot;webpack-dev-server --inline --progress --config build/webpack.dev.conf.js --host 0.0.0.0&quot;,</span><br><span class=\"line\"> &#125;,</span><br></pre></td></tr></table></figure></div>\n</li>\n</ul>\n<ul>\n<li><p>关于背景图打包后出错的问题<br>  开发大型项目当然需要对src目录做一些修改，但添加层级也会导致webpack打包出错。我的项目通过分割组件构成，组建内部专属的图片直接放在组件文件内部。具体结构是这样的</p>\n  <div class=\"code-panel__wrapper\" autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\"><header class=\"mac-panel\"><span class=\"doc-path\"></span><span class=\"mac-panel__language\">PLAIN</span></header><figure class=\"iseeu highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">├─src</span><br><span class=\"line\">│  ├─assets</span><br><span class=\"line\">│  │  ├─images</span><br><span class=\"line\">│  │  ├─js</span><br><span class=\"line\">│  │  ├─css</span><br><span class=\"line\">│  │  ├─font</span><br><span class=\"line\">│  ├─ pages</span><br><span class=\"line\">│  │  ├─Index</span><br><span class=\"line\">│  │  │ ├─Index.vue</span><br><span class=\"line\">│  │  │ ├─1.jpg</span><br><span class=\"line\">│  │  ├─Mine</span><br><span class=\"line\">│  │  ├─...</span><br></pre></td></tr></table></figure></div>\n<p>  这个时候图片打包需要重新配置</p>\n  <div class=\"code-panel__wrapper\" autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\"><header class=\"mac-panel\"><span class=\"doc-path\"></span><span class=\"mac-panel__language\">PLAIN</span></header><figure class=\"iseeu highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">build/utils.js</span><br><span class=\"line\">function generateLoaders (loader, loaderOptions) &#123;</span><br><span class=\"line\">    ...</span><br><span class=\"line\">    if (options.extract) &#123;</span><br><span class=\"line\">          return ExtractTextPlugin.extract(&#123;</span><br><span class=\"line\">            use: loaders,</span><br><span class=\"line\">            fallback: &apos;vue-style-loader&apos;,</span><br><span class=\"line\">            publicPath: &apos;../../&apos; // add</span><br><span class=\"line\">          &#125;)</span><br><span class=\"line\">        &#125; else &#123;</span><br><span class=\"line\">          return [&apos;vue-style-loader&apos;].concat(loaders)</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></div>\n</li>\n</ul>\n<h2 id=\"关于axios\"><a href=\"#关于axios\" class=\"headerlink\" title=\"关于axios\"></a>关于axios</h2><p>axios的配置我想说的只有拦截器。可以在请求或响应被 then 或 catch 处理前拦截它们<br><div class=\"code-panel__wrapper\" autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\"><header class=\"mac-panel\"><span class=\"doc-path\"></span><span class=\"mac-panel__language\">JS</span></header><figure class=\"iseeu highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> axios <span class=\"keyword\">from</span> <span class=\"string\">'axios'</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> &#123;Base64&#125; <span class=\"keyword\">from</span> <span class=\"string\">'js-base64'</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> Router <span class=\"keyword\">from</span> <span class=\"string\">'@/router/index'</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> $axios = axios.create(&#123;</span><br><span class=\"line\">  baseURL: hostURL + <span class=\"string\">'TouchStoneServiceNew'</span></span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\">$axios.interceptors.request.use(<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">config</span>) </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">  config.headers[<span class=\"string\">'Content-Type'</span>] = <span class=\"string\">'application/x-www-form-urlencoded'</span></span><br><span class=\"line\">  config.headers[<span class=\"string\">'Authorization'</span>] = authorization</span><br><span class=\"line\">  <span class=\"keyword\">return</span> config</span><br><span class=\"line\">&#125;, <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">error</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"built_in\">Promise</span>.reject(error)</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\">$axios.interceptors.response.use(</span><br><span class=\"line\">  response =&gt; &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (response.data.resultCode === <span class=\"string\">'505'</span> || response.data.resultCode === <span class=\"string\">'506'</span>) &#123;</span><br><span class=\"line\">      setTimeout(<span class=\"function\"><span class=\"params\">()</span> =&gt;</span> &#123;</span><br><span class=\"line\">     </span><br><span class=\"line\">        Router.push(&#123;</span><br><span class=\"line\">          name: <span class=\"string\">'loginRegister'</span>,</span><br><span class=\"line\"></span><br><span class=\"line\">        &#125;)</span><br><span class=\"line\">      &#125;, <span class=\"number\">2000</span>)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> response</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  error =&gt; &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (error.response) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">switch</span> (error.response.status) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">case</span> <span class=\"number\">401</span>: <span class=\"comment\">// 返回 401 跳转到登录页面</span></span><br><span class=\"line\">      </span><br><span class=\"line\">            Router.push(&#123;</span><br><span class=\"line\">              path: <span class=\"string\">'loginRegister'</span>,</span><br><span class=\"line\">              query: &#123;<span class=\"attr\">redirect</span>: Router.currentRoute.fullPath&#125;</span><br><span class=\"line\">            &#125;)</span><br><span class=\"line\">   </span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"built_in\">Promise</span>.reject(error) <span class=\"comment\">// 返回接口返回的错误信息</span></span><br><span class=\"line\">  &#125;)</span><br></pre></td></tr></table></figure></div></p>\n<p>在请求发送之前向header添加content-type和authorization<br>请求返回之后拦截状态做处理</p>\n<h2 id=\"vuex\"><a href=\"#vuex\" class=\"headerlink\" title=\"vuex\"></a>vuex</h2><p>vuex用来管理vue状态确实很方便，但<strong>只能在组件中需要共享的数据才使用vuex，简单地说就是路由不会跳转</strong>。因为vuex虽然保存数据，但因为vue本身就是单页项目，如果用户刷新网页就全部丢失了。一些重要的信息海慧寺因该保存在cookie和localstorage里。至于语法可以到官网查看，非常详细。</p>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"写在前面\"><a href=\"#写在前面\" class=\"headerlink\" title=\"写在前面\"></a>写在前面</h1><p>最早之前开发的项目随着业务逻辑的迭代，到达现在实在让人无法接受，于是不得不进行了重构，紧锣密鼓的几个月之后终于完成。在这里说一下自己的一些感受。</p>\n<h1 id=\"关于vue-cli\"><a href=\"#关于vue-cli\" class=\"headerlink\" title=\"关于vue-cli\"></a>关于vue-cli</h1><p>vue-cli对vue进行了非常多的处理，尽量让开发者可以专心处理业务的逻辑而不用关心底层的部分。尽管如此，还是需要另外配置很多东西。</p>\n<h2 id=\"预处理器（eg-sass）\"><a href=\"#预处理器（eg-sass）\" class=\"headerlink\" title=\"预处理器（eg:sass）\"></a>预处理器（eg:sass）</h2><ul>\n<li>新版本的脚手架工具配置好了预处理器的部分，但没有集成预处理语言，也就是说，你不再需要配置预处理器，但还是应该install它。</li>\n<li>在一些情况下， sass的编译会出现异常。如果你能确信自己写的没有错，那问题确实出现在sass上，一般情况下sass的语法无法处理多层级的样式叠加。例如：我的项目引用了swiper，并全局使用swiper。.css。之后，又将swiper封装为组件，并给组件一些额外的样式，最后在组件调用时第三次添加特殊的样式，如此叠加css导致sass处理出现了问题。这个时候需要<code>deep</code>模式。  <figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/deep/ .my-swiper&#123;</span><br><span class=\"line\">    ...</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<h2 id=\"webpack\"><a href=\"#webpack\" class=\"headerlink\" title=\"webpack\"></a>webpack</h2><ul>\n<li>host 0.0.0.0<br>开发移动应用，需要随时在手机上观察效果。在<code>package.json</code>添加  <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&quot;scripts&quot;: &#123;</span><br><span class=\"line\">  &quot;dev&quot;: &quot;webpack-dev-server --inline --progress --config build/webpack.dev.conf.js --host 0.0.0.0&quot;,</span><br><span class=\"line\"> &#125;,</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<ul>\n<li><p>关于背景图打包后出错的问题<br>  开发大型项目当然需要对src目录做一些修改，但添加层级也会导致webpack打包出错。我的项目通过分割组件构成，组建内部专属的图片直接放在组件文件内部。具体结构是这样的</p>\n  <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">├─src</span><br><span class=\"line\">│  ├─assets</span><br><span class=\"line\">│  │  ├─images</span><br><span class=\"line\">│  │  ├─js</span><br><span class=\"line\">│  │  ├─css</span><br><span class=\"line\">│  │  ├─font</span><br><span class=\"line\">│  ├─ pages</span><br><span class=\"line\">│  │  ├─Index</span><br><span class=\"line\">│  │  │ ├─Index.vue</span><br><span class=\"line\">│  │  │ ├─1.jpg</span><br><span class=\"line\">│  │  ├─Mine</span><br><span class=\"line\">│  │  ├─...</span><br></pre></td></tr></table></figure>\n<p>  这个时候图片打包需要重新配置</p>\n  <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">build/utils.js</span><br><span class=\"line\">function generateLoaders (loader, loaderOptions) &#123;</span><br><span class=\"line\">    ...</span><br><span class=\"line\">    if (options.extract) &#123;</span><br><span class=\"line\">          return ExtractTextPlugin.extract(&#123;</span><br><span class=\"line\">            use: loaders,</span><br><span class=\"line\">            fallback: &apos;vue-style-loader&apos;,</span><br><span class=\"line\">            publicPath: &apos;../../&apos; // add</span><br><span class=\"line\">          &#125;)</span><br><span class=\"line\">        &#125; else &#123;</span><br><span class=\"line\">          return [&apos;vue-style-loader&apos;].concat(loaders)</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<h2 id=\"关于axios\"><a href=\"#关于axios\" class=\"headerlink\" title=\"关于axios\"></a>关于axios</h2><p>axios的配置我想说的只有拦截器。可以在请求或响应被 then 或 catch 处理前拦截它们<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> axios <span class=\"keyword\">from</span> <span class=\"string\">'axios'</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> &#123;Base64&#125; <span class=\"keyword\">from</span> <span class=\"string\">'js-base64'</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> Router <span class=\"keyword\">from</span> <span class=\"string\">'@/router/index'</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> $axios = axios.create(&#123;</span><br><span class=\"line\">  baseURL: hostURL + <span class=\"string\">'TouchStoneServiceNew'</span></span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\">$axios.interceptors.request.use(<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">config</span>) </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">  config.headers[<span class=\"string\">'Content-Type'</span>] = <span class=\"string\">'application/x-www-form-urlencoded'</span></span><br><span class=\"line\">  config.headers[<span class=\"string\">'Authorization'</span>] = authorization</span><br><span class=\"line\">  <span class=\"keyword\">return</span> config</span><br><span class=\"line\">&#125;, <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">error</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"built_in\">Promise</span>.reject(error)</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\">$axios.interceptors.response.use(</span><br><span class=\"line\">  response =&gt; &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (response.data.resultCode === <span class=\"string\">'505'</span> || response.data.resultCode === <span class=\"string\">'506'</span>) &#123;</span><br><span class=\"line\">      setTimeout(<span class=\"function\"><span class=\"params\">()</span> =&gt;</span> &#123;</span><br><span class=\"line\">     </span><br><span class=\"line\">        Router.push(&#123;</span><br><span class=\"line\">          name: <span class=\"string\">'loginRegister'</span>,</span><br><span class=\"line\"></span><br><span class=\"line\">        &#125;)</span><br><span class=\"line\">      &#125;, <span class=\"number\">2000</span>)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> response</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  error =&gt; &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (error.response) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">switch</span> (error.response.status) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">case</span> <span class=\"number\">401</span>: <span class=\"comment\">// 返回 401 跳转到登录页面</span></span><br><span class=\"line\">      </span><br><span class=\"line\">            Router.push(&#123;</span><br><span class=\"line\">              path: <span class=\"string\">'loginRegister'</span>,</span><br><span class=\"line\">              query: &#123;<span class=\"attr\">redirect</span>: Router.currentRoute.fullPath&#125;</span><br><span class=\"line\">            &#125;)</span><br><span class=\"line\">   </span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"built_in\">Promise</span>.reject(error) <span class=\"comment\">// 返回接口返回的错误信息</span></span><br><span class=\"line\">  &#125;)</span><br></pre></td></tr></table></figure></p>\n<p>在请求发送之前向header添加content-type和authorization<br>请求返回之后拦截状态做处理</p>\n<h2 id=\"vuex\"><a href=\"#vuex\" class=\"headerlink\" title=\"vuex\"></a>vuex</h2><p>vuex用来管理vue状态确实很方便，但<strong>只能在组件中需要共享的数据才使用vuex，简单地说就是路由不会跳转</strong>。因为vuex虽然保存数据，但因为vue本身就是单页项目，如果用户刷新网页就全部丢失了。一些重要的信息海慧寺因该保存在cookie和localstorage里。至于语法可以到官网查看，非常详细。</p>\n"},{"title":"关于webpack的那些事","date":"2018-03-22T02:37:40.000Z","description":"一篇webpack笔记","_content":"## Entry - 配置模块入口\n```\n//  配置多入口文件\nconst glob = require('glob');\nconst pagePath = path.resolve(__dirname,'./src')\nfunction entries() {\n  let entryFiles = glob.sync(pagePath + '/*/*.js');\n  let map = {};\n  entryFiles.forEach((filePath)=>{\n    let filename = filePath.substring(filePath.lastIndexOf('\\/') + 1, filePath.lastIndexOf('.'));\n  map[filename] = filePath\n});\n  return map\n}\n```\n## Output - 配置模块如何输出成为结果\n```\n//  配置多个文件打包\nconst glob = require('glob');\nconst pagePath = path.resolve(__dirname,'./src')\nconst HtmlWebpackPlugin = require('html-webpack-plugin');\nfunction htmlPlugin(options) {  //  options: 自定义缺省的htmlWebpackPlugin参数\n  let entryHtml = glob.sync(pagePath + '/*/*.html');\n  let arr = [];\n  entryHtml.forEach((filePath) =>{\n    let filename = filePath.substring(filePath.lastIndexOf('\\/') + 1, filePath.lastIndexOf('.')); //  获取文件名\n    let conf = {    //  htmlWebpackPlugin配置选项\n      template: filePath,\n      filename: filename + '.html',   //  文件名\n      chunks: ['manifest', 'vendor', filename],    // 页面模板需要加对应的js脚本，如果不加这行则每个页面都会引入所有的js脚本\n      title:options.title,    // 文章标题\n      inject: true,\n      hash:true,\n      minify: { //压缩HTML文件\n        removeComments: true, //移除HTML中的注释\n        collapseWhitespace: false //删除空白符与换行符\n      }\n    };\n    arr.push(new HtmlWebpackPlugin(conf))\n  });\n  return arr\n}\n```\n## Module - 配置模块的处理规则\n```\nmodule:{\n  rules:[\n    {\n       test: /\\.(png|jpe?g|gif|svg)(\\?.*)?$/,\n       use: 'url-loader?limit=2000&name=images/[hash:8].[name].[ext]',  //  使用url-loader处理图像文件，小于2000转为base64，否则打包到images文件夹下名为[hash:8].[name].[ext]\n       include:path.resolve(__dirname,'src'),  //  打包时包含src文件夹\n         exclude:path.resolve(__dirname,'node_modules'),  // 打包时排除node_modules文件夹\n    },\n    {\n      test: /\\.scss$/,\n      use: [{   //  loader的另一种配置方式(loader解析顺序从后往前)\n          loader: \"style-loader\",\n          options: {}\n        },\n        {\n          loader: \"css-loader?minimize\",\n        },\n        {\n          loader: \"postcss-loader\",\n          options: {\n            postcss(){\n              require('autorefixer')({\n                browsers:['ie>8','>1% in CN']\n              })\n            }\n          }\n        },\n        {\n          loader: \"sass-loader\"\n        }],\n        exclude:path.resolve(__dirname,'node_modules'),\n        include:path.resolve(__dirname,'src')\n    },\n  ]\n}\n```\n##  Resolve - 自定义模块的解析方式\n```\n resolve: {\n    //  导入文件没有后缀时，webpack尝试自动补全，顺序由前到后\n    extensions: ['.js', '.vue', '.json'],\n    //  允许自定义模块。以下例子中导入@/foo.js实际上是导入src/foo.js；并且支持使用$结尾缩小搜索范围(命中vue结尾的模块，及只会将 import vue 转换为 import vue/dist/vue.esm.js)\n    alias: {\n      'vue$': 'vue/dist/vue.esm.js',\n      '@': resolve('src')\n    }\n  }\n```\n## Plugin - 简单粗暴地解释：如果你遇到一个webpack无法处理的操作，那他一定可以通过插件来解决\n> 该配置简单到无法解释，接受一个数组，添加插件即可。所有插件及用法[看这里](https://doc.webpack-china.org/plugins/)\n```\nplugin:[\n  new webpack.ProvidePlugin({ //  这个插件用来配置全局jquery\n    $: \"jquery\",\n    jQuery: \"jquery\",\n    jquery: \"jquery\",\n    \"window.jQuery\": \"jquery\"\n  }),\n  new CleanWebpackPlugin(['dist']), //  这个插件用来清空dist文件夹\n  ...\n]\n```\n## DevSever - 构建本地开发环境\n> 具体配置[移步这里](https://doc.webpack-china.org/configuration/dev-server/)\n## 一些问题\n### 项目中使用sass\nwebpack.base.conf.js中的module新加一项：\n```\n{\n  test: /\\.scss$/,\n  use: [\"style-loader\",\"css-loader?minimize\",\"sass-loader\"],\n  exclude:path.resolve(__dirname,'node_modules')\n}\n```\n### 项目中使用jquery插件\nwebpack.base.conf.js中的module新加plugin：\n```\nplugins: [\n  new webpack.ProvidePlugin({\n    $: \"jquery\",\n    jQuery: \"jquery\",\n    jquery: \"jquery\",\n    \"window.jQuery\": \"jquery\"\n    }),\n  ]\n```","source":"_posts/关于webpack的那些事.md","raw":"title: 关于webpack的那些事\ntags: [webpack]\ndate: 2018-03-22 10:37:40\ncategories: [webpack]\ndescription: 一篇webpack笔记\n---\n## Entry - 配置模块入口\n```\n//  配置多入口文件\nconst glob = require('glob');\nconst pagePath = path.resolve(__dirname,'./src')\nfunction entries() {\n  let entryFiles = glob.sync(pagePath + '/*/*.js');\n  let map = {};\n  entryFiles.forEach((filePath)=>{\n    let filename = filePath.substring(filePath.lastIndexOf('\\/') + 1, filePath.lastIndexOf('.'));\n  map[filename] = filePath\n});\n  return map\n}\n```\n## Output - 配置模块如何输出成为结果\n```\n//  配置多个文件打包\nconst glob = require('glob');\nconst pagePath = path.resolve(__dirname,'./src')\nconst HtmlWebpackPlugin = require('html-webpack-plugin');\nfunction htmlPlugin(options) {  //  options: 自定义缺省的htmlWebpackPlugin参数\n  let entryHtml = glob.sync(pagePath + '/*/*.html');\n  let arr = [];\n  entryHtml.forEach((filePath) =>{\n    let filename = filePath.substring(filePath.lastIndexOf('\\/') + 1, filePath.lastIndexOf('.')); //  获取文件名\n    let conf = {    //  htmlWebpackPlugin配置选项\n      template: filePath,\n      filename: filename + '.html',   //  文件名\n      chunks: ['manifest', 'vendor', filename],    // 页面模板需要加对应的js脚本，如果不加这行则每个页面都会引入所有的js脚本\n      title:options.title,    // 文章标题\n      inject: true,\n      hash:true,\n      minify: { //压缩HTML文件\n        removeComments: true, //移除HTML中的注释\n        collapseWhitespace: false //删除空白符与换行符\n      }\n    };\n    arr.push(new HtmlWebpackPlugin(conf))\n  });\n  return arr\n}\n```\n## Module - 配置模块的处理规则\n```\nmodule:{\n  rules:[\n    {\n       test: /\\.(png|jpe?g|gif|svg)(\\?.*)?$/,\n       use: 'url-loader?limit=2000&name=images/[hash:8].[name].[ext]',  //  使用url-loader处理图像文件，小于2000转为base64，否则打包到images文件夹下名为[hash:8].[name].[ext]\n       include:path.resolve(__dirname,'src'),  //  打包时包含src文件夹\n         exclude:path.resolve(__dirname,'node_modules'),  // 打包时排除node_modules文件夹\n    },\n    {\n      test: /\\.scss$/,\n      use: [{   //  loader的另一种配置方式(loader解析顺序从后往前)\n          loader: \"style-loader\",\n          options: {}\n        },\n        {\n          loader: \"css-loader?minimize\",\n        },\n        {\n          loader: \"postcss-loader\",\n          options: {\n            postcss(){\n              require('autorefixer')({\n                browsers:['ie>8','>1% in CN']\n              })\n            }\n          }\n        },\n        {\n          loader: \"sass-loader\"\n        }],\n        exclude:path.resolve(__dirname,'node_modules'),\n        include:path.resolve(__dirname,'src')\n    },\n  ]\n}\n```\n##  Resolve - 自定义模块的解析方式\n```\n resolve: {\n    //  导入文件没有后缀时，webpack尝试自动补全，顺序由前到后\n    extensions: ['.js', '.vue', '.json'],\n    //  允许自定义模块。以下例子中导入@/foo.js实际上是导入src/foo.js；并且支持使用$结尾缩小搜索范围(命中vue结尾的模块，及只会将 import vue 转换为 import vue/dist/vue.esm.js)\n    alias: {\n      'vue$': 'vue/dist/vue.esm.js',\n      '@': resolve('src')\n    }\n  }\n```\n## Plugin - 简单粗暴地解释：如果你遇到一个webpack无法处理的操作，那他一定可以通过插件来解决\n> 该配置简单到无法解释，接受一个数组，添加插件即可。所有插件及用法[看这里](https://doc.webpack-china.org/plugins/)\n```\nplugin:[\n  new webpack.ProvidePlugin({ //  这个插件用来配置全局jquery\n    $: \"jquery\",\n    jQuery: \"jquery\",\n    jquery: \"jquery\",\n    \"window.jQuery\": \"jquery\"\n  }),\n  new CleanWebpackPlugin(['dist']), //  这个插件用来清空dist文件夹\n  ...\n]\n```\n## DevSever - 构建本地开发环境\n> 具体配置[移步这里](https://doc.webpack-china.org/configuration/dev-server/)\n## 一些问题\n### 项目中使用sass\nwebpack.base.conf.js中的module新加一项：\n```\n{\n  test: /\\.scss$/,\n  use: [\"style-loader\",\"css-loader?minimize\",\"sass-loader\"],\n  exclude:path.resolve(__dirname,'node_modules')\n}\n```\n### 项目中使用jquery插件\nwebpack.base.conf.js中的module新加plugin：\n```\nplugins: [\n  new webpack.ProvidePlugin({\n    $: \"jquery\",\n    jQuery: \"jquery\",\n    jquery: \"jquery\",\n    \"window.jQuery\": \"jquery\"\n    }),\n  ]\n```","slug":"关于webpack的那些事","published":1,"updated":"2021-06-25T11:19:55.448Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckqc904ph002cwotvf1t8yako","content":"<h2 id=\"Entry-配置模块入口\"><a href=\"#Entry-配置模块入口\" class=\"headerlink\" title=\"Entry - 配置模块入口\"></a>Entry - 配置模块入口</h2><div class=\"code-panel__wrapper\" autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\"><header class=\"mac-panel\"><span class=\"doc-path\"></span><span class=\"mac-panel__language\">PLAIN</span></header><figure class=\"iseeu highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">//  配置多入口文件</span><br><span class=\"line\">const glob = require(&apos;glob&apos;);</span><br><span class=\"line\">const pagePath = path.resolve(__dirname,&apos;./src&apos;)</span><br><span class=\"line\">function entries() &#123;</span><br><span class=\"line\">  let entryFiles = glob.sync(pagePath + &apos;/*/*.js&apos;);</span><br><span class=\"line\">  let map = &#123;&#125;;</span><br><span class=\"line\">  entryFiles.forEach((filePath)=&gt;&#123;</span><br><span class=\"line\">    let filename = filePath.substring(filePath.lastIndexOf(&apos;\\/&apos;) + 1, filePath.lastIndexOf(&apos;.&apos;));</span><br><span class=\"line\">  map[filename] = filePath</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\">  return map</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></div>\n<h2 id=\"Output-配置模块如何输出成为结果\"><a href=\"#Output-配置模块如何输出成为结果\" class=\"headerlink\" title=\"Output - 配置模块如何输出成为结果\"></a>Output - 配置模块如何输出成为结果</h2><div class=\"code-panel__wrapper\" autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\"><header class=\"mac-panel\"><span class=\"doc-path\"></span><span class=\"mac-panel__language\">PLAIN</span></header><figure class=\"iseeu highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">//  配置多个文件打包</span><br><span class=\"line\">const glob = require(&apos;glob&apos;);</span><br><span class=\"line\">const pagePath = path.resolve(__dirname,&apos;./src&apos;)</span><br><span class=\"line\">const HtmlWebpackPlugin = require(&apos;html-webpack-plugin&apos;);</span><br><span class=\"line\">function htmlPlugin(options) &#123;  //  options: 自定义缺省的htmlWebpackPlugin参数</span><br><span class=\"line\">  let entryHtml = glob.sync(pagePath + &apos;/*/*.html&apos;);</span><br><span class=\"line\">  let arr = [];</span><br><span class=\"line\">  entryHtml.forEach((filePath) =&gt;&#123;</span><br><span class=\"line\">    let filename = filePath.substring(filePath.lastIndexOf(&apos;\\/&apos;) + 1, filePath.lastIndexOf(&apos;.&apos;)); //  获取文件名</span><br><span class=\"line\">    let conf = &#123;    //  htmlWebpackPlugin配置选项</span><br><span class=\"line\">      template: filePath,</span><br><span class=\"line\">      filename: filename + &apos;.html&apos;,   //  文件名</span><br><span class=\"line\">      chunks: [&apos;manifest&apos;, &apos;vendor&apos;, filename],    // 页面模板需要加对应的js脚本，如果不加这行则每个页面都会引入所有的js脚本</span><br><span class=\"line\">      title:options.title,    // 文章标题</span><br><span class=\"line\">      inject: true,</span><br><span class=\"line\">      hash:true,</span><br><span class=\"line\">      minify: &#123; //压缩HTML文件</span><br><span class=\"line\">        removeComments: true, //移除HTML中的注释</span><br><span class=\"line\">        collapseWhitespace: false //删除空白符与换行符</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;;</span><br><span class=\"line\">    arr.push(new HtmlWebpackPlugin(conf))</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\">  return arr</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></div>\n<h2 id=\"Module-配置模块的处理规则\"><a href=\"#Module-配置模块的处理规则\" class=\"headerlink\" title=\"Module - 配置模块的处理规则\"></a>Module - 配置模块的处理规则</h2><div class=\"code-panel__wrapper\" autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\"><header class=\"mac-panel\"><span class=\"doc-path\"></span><span class=\"mac-panel__language\">PLAIN</span></header><figure class=\"iseeu highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">module:&#123;</span><br><span class=\"line\">  rules:[</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">       test: /\\.(png|jpe?g|gif|svg)(\\?.*)?$/,</span><br><span class=\"line\">       use: &apos;url-loader?limit=2000&amp;name=images/[hash:8].[name].[ext]&apos;,  //  使用url-loader处理图像文件，小于2000转为base64，否则打包到images文件夹下名为[hash:8].[name].[ext]</span><br><span class=\"line\">       include:path.resolve(__dirname,&apos;src&apos;),  //  打包时包含src文件夹</span><br><span class=\"line\">         exclude:path.resolve(__dirname,&apos;node_modules&apos;),  // 打包时排除node_modules文件夹</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">      test: /\\.scss$/,</span><br><span class=\"line\">      use: [&#123;   //  loader的另一种配置方式(loader解析顺序从后往前)</span><br><span class=\"line\">          loader: &quot;style-loader&quot;,</span><br><span class=\"line\">          options: &#123;&#125;</span><br><span class=\"line\">        &#125;,</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">          loader: &quot;css-loader?minimize&quot;,</span><br><span class=\"line\">        &#125;,</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">          loader: &quot;postcss-loader&quot;,</span><br><span class=\"line\">          options: &#123;</span><br><span class=\"line\">            postcss()&#123;</span><br><span class=\"line\">              require(&apos;autorefixer&apos;)(&#123;</span><br><span class=\"line\">                browsers:[&apos;ie&gt;8&apos;,&apos;&gt;1% in CN&apos;]</span><br><span class=\"line\">              &#125;)</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">          &#125;</span><br><span class=\"line\">        &#125;,</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">          loader: &quot;sass-loader&quot;</span><br><span class=\"line\">        &#125;],</span><br><span class=\"line\">        exclude:path.resolve(__dirname,&apos;node_modules&apos;),</span><br><span class=\"line\">        include:path.resolve(__dirname,&apos;src&apos;)</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">  ]</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></div>\n<h2 id=\"Resolve-自定义模块的解析方式\"><a href=\"#Resolve-自定义模块的解析方式\" class=\"headerlink\" title=\"Resolve - 自定义模块的解析方式\"></a>Resolve - 自定义模块的解析方式</h2><div class=\"code-panel__wrapper\" autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\"><header class=\"mac-panel\"><span class=\"doc-path\"></span><span class=\"mac-panel__language\">PLAIN</span></header><figure class=\"iseeu highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">resolve: &#123;</span><br><span class=\"line\">   //  导入文件没有后缀时，webpack尝试自动补全，顺序由前到后</span><br><span class=\"line\">   extensions: [&apos;.js&apos;, &apos;.vue&apos;, &apos;.json&apos;],</span><br><span class=\"line\">   //  允许自定义模块。以下例子中导入@/foo.js实际上是导入src/foo.js；并且支持使用$结尾缩小搜索范围(命中vue结尾的模块，及只会将 import vue 转换为 import vue/dist/vue.esm.js)</span><br><span class=\"line\">   alias: &#123;</span><br><span class=\"line\">     &apos;vue$&apos;: &apos;vue/dist/vue.esm.js&apos;,</span><br><span class=\"line\">     &apos;@&apos;: resolve(&apos;src&apos;)</span><br><span class=\"line\">   &#125;</span><br><span class=\"line\"> &#125;</span><br></pre></td></tr></table></figure></div>\n<h2 id=\"Plugin-简单粗暴地解释：如果你遇到一个webpack无法处理的操作，那他一定可以通过插件来解决\"><a href=\"#Plugin-简单粗暴地解释：如果你遇到一个webpack无法处理的操作，那他一定可以通过插件来解决\" class=\"headerlink\" title=\"Plugin - 简单粗暴地解释：如果你遇到一个webpack无法处理的操作，那他一定可以通过插件来解决\"></a>Plugin - 简单粗暴地解释：如果你遇到一个webpack无法处理的操作，那他一定可以通过插件来解决</h2><blockquote>\n<p>该配置简单到无法解释，接受一个数组，添加插件即可。所有插件及用法<a href=\"https://doc.webpack-china.org/plugins/\" target=\"_blank\" rel=\"noopener\">看这里</a><br><div class=\"code-panel__wrapper\" autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\"><header class=\"mac-panel\"><span class=\"doc-path\"></span><span class=\"mac-panel__language\">PLAIN</span></header><figure class=\"iseeu highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">plugin:[</span><br><span class=\"line\">  new webpack.ProvidePlugin(&#123; //  这个插件用来配置全局jquery</span><br><span class=\"line\">    $: &quot;jquery&quot;,</span><br><span class=\"line\">    jQuery: &quot;jquery&quot;,</span><br><span class=\"line\">    jquery: &quot;jquery&quot;,</span><br><span class=\"line\">    &quot;window.jQuery&quot;: &quot;jquery&quot;</span><br><span class=\"line\">  &#125;),</span><br><span class=\"line\">  new CleanWebpackPlugin([&apos;dist&apos;]), //  这个插件用来清空dist文件夹</span><br><span class=\"line\">  ...</span><br><span class=\"line\">]</span><br></pre></td></tr></table></figure></div></p>\n</blockquote>\n<h2 id=\"DevSever-构建本地开发环境\"><a href=\"#DevSever-构建本地开发环境\" class=\"headerlink\" title=\"DevSever - 构建本地开发环境\"></a>DevSever - 构建本地开发环境</h2><blockquote>\n<p>具体配置<a href=\"https://doc.webpack-china.org/configuration/dev-server/\" target=\"_blank\" rel=\"noopener\">移步这里</a></p>\n</blockquote>\n<h2 id=\"一些问题\"><a href=\"#一些问题\" class=\"headerlink\" title=\"一些问题\"></a>一些问题</h2><h3 id=\"项目中使用sass\"><a href=\"#项目中使用sass\" class=\"headerlink\" title=\"项目中使用sass\"></a>项目中使用sass</h3><p>webpack.base.conf.js中的module新加一项：<br><div class=\"code-panel__wrapper\" autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\"><header class=\"mac-panel\"><span class=\"doc-path\"></span><span class=\"mac-panel__language\">PLAIN</span></header><figure class=\"iseeu highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">  test: /\\.scss$/,</span><br><span class=\"line\">  use: [&quot;style-loader&quot;,&quot;css-loader?minimize&quot;,&quot;sass-loader&quot;],</span><br><span class=\"line\">  exclude:path.resolve(__dirname,&apos;node_modules&apos;)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></div></p>\n<h3 id=\"项目中使用jquery插件\"><a href=\"#项目中使用jquery插件\" class=\"headerlink\" title=\"项目中使用jquery插件\"></a>项目中使用jquery插件</h3><p>webpack.base.conf.js中的module新加plugin：<br><div class=\"code-panel__wrapper\" autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\"><header class=\"mac-panel\"><span class=\"doc-path\"></span><span class=\"mac-panel__language\">PLAIN</span></header><figure class=\"iseeu highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">plugins: [</span><br><span class=\"line\">  new webpack.ProvidePlugin(&#123;</span><br><span class=\"line\">    $: &quot;jquery&quot;,</span><br><span class=\"line\">    jQuery: &quot;jquery&quot;,</span><br><span class=\"line\">    jquery: &quot;jquery&quot;,</span><br><span class=\"line\">    &quot;window.jQuery&quot;: &quot;jquery&quot;</span><br><span class=\"line\">    &#125;),</span><br><span class=\"line\">  ]</span><br></pre></td></tr></table></figure></div></p>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"Entry-配置模块入口\"><a href=\"#Entry-配置模块入口\" class=\"headerlink\" title=\"Entry - 配置模块入口\"></a>Entry - 配置模块入口</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">//  配置多入口文件</span><br><span class=\"line\">const glob = require(&apos;glob&apos;);</span><br><span class=\"line\">const pagePath = path.resolve(__dirname,&apos;./src&apos;)</span><br><span class=\"line\">function entries() &#123;</span><br><span class=\"line\">  let entryFiles = glob.sync(pagePath + &apos;/*/*.js&apos;);</span><br><span class=\"line\">  let map = &#123;&#125;;</span><br><span class=\"line\">  entryFiles.forEach((filePath)=&gt;&#123;</span><br><span class=\"line\">    let filename = filePath.substring(filePath.lastIndexOf(&apos;\\/&apos;) + 1, filePath.lastIndexOf(&apos;.&apos;));</span><br><span class=\"line\">  map[filename] = filePath</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\">  return map</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"Output-配置模块如何输出成为结果\"><a href=\"#Output-配置模块如何输出成为结果\" class=\"headerlink\" title=\"Output - 配置模块如何输出成为结果\"></a>Output - 配置模块如何输出成为结果</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">//  配置多个文件打包</span><br><span class=\"line\">const glob = require(&apos;glob&apos;);</span><br><span class=\"line\">const pagePath = path.resolve(__dirname,&apos;./src&apos;)</span><br><span class=\"line\">const HtmlWebpackPlugin = require(&apos;html-webpack-plugin&apos;);</span><br><span class=\"line\">function htmlPlugin(options) &#123;  //  options: 自定义缺省的htmlWebpackPlugin参数</span><br><span class=\"line\">  let entryHtml = glob.sync(pagePath + &apos;/*/*.html&apos;);</span><br><span class=\"line\">  let arr = [];</span><br><span class=\"line\">  entryHtml.forEach((filePath) =&gt;&#123;</span><br><span class=\"line\">    let filename = filePath.substring(filePath.lastIndexOf(&apos;\\/&apos;) + 1, filePath.lastIndexOf(&apos;.&apos;)); //  获取文件名</span><br><span class=\"line\">    let conf = &#123;    //  htmlWebpackPlugin配置选项</span><br><span class=\"line\">      template: filePath,</span><br><span class=\"line\">      filename: filename + &apos;.html&apos;,   //  文件名</span><br><span class=\"line\">      chunks: [&apos;manifest&apos;, &apos;vendor&apos;, filename],    // 页面模板需要加对应的js脚本，如果不加这行则每个页面都会引入所有的js脚本</span><br><span class=\"line\">      title:options.title,    // 文章标题</span><br><span class=\"line\">      inject: true,</span><br><span class=\"line\">      hash:true,</span><br><span class=\"line\">      minify: &#123; //压缩HTML文件</span><br><span class=\"line\">        removeComments: true, //移除HTML中的注释</span><br><span class=\"line\">        collapseWhitespace: false //删除空白符与换行符</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;;</span><br><span class=\"line\">    arr.push(new HtmlWebpackPlugin(conf))</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\">  return arr</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"Module-配置模块的处理规则\"><a href=\"#Module-配置模块的处理规则\" class=\"headerlink\" title=\"Module - 配置模块的处理规则\"></a>Module - 配置模块的处理规则</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">module:&#123;</span><br><span class=\"line\">  rules:[</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">       test: /\\.(png|jpe?g|gif|svg)(\\?.*)?$/,</span><br><span class=\"line\">       use: &apos;url-loader?limit=2000&amp;name=images/[hash:8].[name].[ext]&apos;,  //  使用url-loader处理图像文件，小于2000转为base64，否则打包到images文件夹下名为[hash:8].[name].[ext]</span><br><span class=\"line\">       include:path.resolve(__dirname,&apos;src&apos;),  //  打包时包含src文件夹</span><br><span class=\"line\">         exclude:path.resolve(__dirname,&apos;node_modules&apos;),  // 打包时排除node_modules文件夹</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">      test: /\\.scss$/,</span><br><span class=\"line\">      use: [&#123;   //  loader的另一种配置方式(loader解析顺序从后往前)</span><br><span class=\"line\">          loader: &quot;style-loader&quot;,</span><br><span class=\"line\">          options: &#123;&#125;</span><br><span class=\"line\">        &#125;,</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">          loader: &quot;css-loader?minimize&quot;,</span><br><span class=\"line\">        &#125;,</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">          loader: &quot;postcss-loader&quot;,</span><br><span class=\"line\">          options: &#123;</span><br><span class=\"line\">            postcss()&#123;</span><br><span class=\"line\">              require(&apos;autorefixer&apos;)(&#123;</span><br><span class=\"line\">                browsers:[&apos;ie&gt;8&apos;,&apos;&gt;1% in CN&apos;]</span><br><span class=\"line\">              &#125;)</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">          &#125;</span><br><span class=\"line\">        &#125;,</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">          loader: &quot;sass-loader&quot;</span><br><span class=\"line\">        &#125;],</span><br><span class=\"line\">        exclude:path.resolve(__dirname,&apos;node_modules&apos;),</span><br><span class=\"line\">        include:path.resolve(__dirname,&apos;src&apos;)</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">  ]</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"Resolve-自定义模块的解析方式\"><a href=\"#Resolve-自定义模块的解析方式\" class=\"headerlink\" title=\"Resolve - 自定义模块的解析方式\"></a>Resolve - 自定义模块的解析方式</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">resolve: &#123;</span><br><span class=\"line\">   //  导入文件没有后缀时，webpack尝试自动补全，顺序由前到后</span><br><span class=\"line\">   extensions: [&apos;.js&apos;, &apos;.vue&apos;, &apos;.json&apos;],</span><br><span class=\"line\">   //  允许自定义模块。以下例子中导入@/foo.js实际上是导入src/foo.js；并且支持使用$结尾缩小搜索范围(命中vue结尾的模块，及只会将 import vue 转换为 import vue/dist/vue.esm.js)</span><br><span class=\"line\">   alias: &#123;</span><br><span class=\"line\">     &apos;vue$&apos;: &apos;vue/dist/vue.esm.js&apos;,</span><br><span class=\"line\">     &apos;@&apos;: resolve(&apos;src&apos;)</span><br><span class=\"line\">   &#125;</span><br><span class=\"line\"> &#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"Plugin-简单粗暴地解释：如果你遇到一个webpack无法处理的操作，那他一定可以通过插件来解决\"><a href=\"#Plugin-简单粗暴地解释：如果你遇到一个webpack无法处理的操作，那他一定可以通过插件来解决\" class=\"headerlink\" title=\"Plugin - 简单粗暴地解释：如果你遇到一个webpack无法处理的操作，那他一定可以通过插件来解决\"></a>Plugin - 简单粗暴地解释：如果你遇到一个webpack无法处理的操作，那他一定可以通过插件来解决</h2><blockquote>\n<p>该配置简单到无法解释，接受一个数组，添加插件即可。所有插件及用法<a href=\"https://doc.webpack-china.org/plugins/\" target=\"_blank\" rel=\"noopener\">看这里</a><br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">plugin:[</span><br><span class=\"line\">  new webpack.ProvidePlugin(&#123; //  这个插件用来配置全局jquery</span><br><span class=\"line\">    $: &quot;jquery&quot;,</span><br><span class=\"line\">    jQuery: &quot;jquery&quot;,</span><br><span class=\"line\">    jquery: &quot;jquery&quot;,</span><br><span class=\"line\">    &quot;window.jQuery&quot;: &quot;jquery&quot;</span><br><span class=\"line\">  &#125;),</span><br><span class=\"line\">  new CleanWebpackPlugin([&apos;dist&apos;]), //  这个插件用来清空dist文件夹</span><br><span class=\"line\">  ...</span><br><span class=\"line\">]</span><br></pre></td></tr></table></figure></p>\n</blockquote>\n<h2 id=\"DevSever-构建本地开发环境\"><a href=\"#DevSever-构建本地开发环境\" class=\"headerlink\" title=\"DevSever - 构建本地开发环境\"></a>DevSever - 构建本地开发环境</h2><blockquote>\n<p>具体配置<a href=\"https://doc.webpack-china.org/configuration/dev-server/\" target=\"_blank\" rel=\"noopener\">移步这里</a></p>\n</blockquote>\n<h2 id=\"一些问题\"><a href=\"#一些问题\" class=\"headerlink\" title=\"一些问题\"></a>一些问题</h2><h3 id=\"项目中使用sass\"><a href=\"#项目中使用sass\" class=\"headerlink\" title=\"项目中使用sass\"></a>项目中使用sass</h3><p>webpack.base.conf.js中的module新加一项：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">  test: /\\.scss$/,</span><br><span class=\"line\">  use: [&quot;style-loader&quot;,&quot;css-loader?minimize&quot;,&quot;sass-loader&quot;],</span><br><span class=\"line\">  exclude:path.resolve(__dirname,&apos;node_modules&apos;)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"项目中使用jquery插件\"><a href=\"#项目中使用jquery插件\" class=\"headerlink\" title=\"项目中使用jquery插件\"></a>项目中使用jquery插件</h3><p>webpack.base.conf.js中的module新加plugin：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">plugins: [</span><br><span class=\"line\">  new webpack.ProvidePlugin(&#123;</span><br><span class=\"line\">    $: &quot;jquery&quot;,</span><br><span class=\"line\">    jQuery: &quot;jquery&quot;,</span><br><span class=\"line\">    jquery: &quot;jquery&quot;,</span><br><span class=\"line\">    &quot;window.jQuery&quot;: &quot;jquery&quot;</span><br><span class=\"line\">    &#125;),</span><br><span class=\"line\">  ]</span><br></pre></td></tr></table></figure></p>\n"},{"title":"关于蜂窝状图片的实现","date":"2018-03-29T08:20:09.000Z","description":"论实现蜂窝状图片墙的几种方法","_content":"![img5](/blog/img/comb.png)\n\n## 使用三个元素实现六边形效果\n\n> + 思路：使用三个同样大小的div相互叠加，形成正六边形区域\n+ 优点：兼容性最好\n+ 缺点：结构繁琐，难以扩展\n\n准备三个同样大小的div，其中一个逆时针旋转60deg,另一个顺时针旋转60deg,三个div叠加的部分刚好是正六边形。\n```html\n<!DOCTYPE html>\n<html>\n<head>\n  <meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\"/>\n  <title>CSS3 实现六边形图片展示效果</title>\n  <style>\n    .boxF, .boxS, .boxT {\n      width: 200px;\n      height: 250px;\n      overflow: hidden;\n      position: relative;\n    }\n    .boxF, .boxS {\n      visibility: hidden;\n    }\n    .boxF {\n      transform: rotate(120deg);\n      float: left;\n      margin-left: 10px;\n    }\n    .boxS {\n      transform: rotate(-60deg);\n    }\n    .boxT {\n      transform: rotate(-60deg);\n      background: no-repeat 50% center;\n      visibility: visible;\n    }\n    .boxF:hover {\n      z-index: 999;\n    }\n    .boxF:hover .boxT {\n      background-size: 400%;\n    }\n  </style>\n</head>\n<body>\n    <div class=\"boxF\">\n      <div class=\"boxS\">\n        <div class=\"boxT\" style=\"background-image: url('1.jpg');\">\n        </div>\n      </div>\n    </div>\n  </div>\n</body>\n</html>\n```\n## 使用一个元素配合css变形得到六边形\n> + 思路：利用旋转、斜切和位移达到六边形效果\n+ 优点：方便扩展，结构清晰\n+ 缺点：理解困难，曲线陡峭\n  \n```html\n<!DOCTYPE html>\n<html>\n<head>\n\t<title></title>\n</head>\n<body>\n<!DOCTYPE html>\n<html lang=\"zh\">\n<head>\n<meta charset=\"UTF-8\">\n<meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge,chrome=1\">\n<meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n<title></title>\n<link rel=\"stylesheet\" type=\"text/css\" href=\"index.css\">\n</head>\n<body>\n<ul id=\"hexGrid\">\n\t<li class=\"hex\"> \n\t\t<a class=\"hexIn\" href=\"#\"> \n  \t\t<img src=\"1.png\" alt=\"\" />\n    \t<h1>title</h1>\n    \t<p>Some description about this module</p>\n  \t</a> \n\t</li>\n\t<li class=\"hex\"> \n\t\t<a class=\"hexIn\" href=\"#\"> \n  \t\t<img src=\"1.png\" alt=\"\" />\n    \t<h1>title</h1>\n    \t<p>Some description about this module</p>\n  \t</a> \n\t</li>\n\t<li class=\"hex\"> \n\t\t<a class=\"hexIn\" href=\"#\"> \n  \t\t<img src=\"1.png\" alt=\"\" />\n    \t<h1>title</h1>\n    \t<p>Some description about this module</p>\n  \t</a> \n\t</li>\n\t<li class=\"hex\"> \n\t\t<a class=\"hexIn\" href=\"#\"> \n  \t    <img src=\"1.png\" alt=\"\" />\n    \t<h1>title</h1>\n    \t<p>Some description about this module</p>\n  \t</a> \n\t</li>\n\t<li class=\"hex\"> \n\t\t<a class=\"hexIn\" href=\"#\"> \n  \t\t<img src=\"1.png\" alt=\"\" />\n    \t<h1>title</h1>\n    \t<p>Some description about this module</p>\n  \t</a> \n\t</li>\n\t<li class=\"hex\"> \n\t\t<a class=\"hexIn\" href=\"#\"> \n  \t\t<img src=\"1.png\" alt=\"\" />\n    \t<h1>title</h1>\n    \t<p>Some description about this module</p>\n  \t</a> \n\t</li>\n\t<li class=\"hex\"> \n\t\t<a class=\"hexIn\" href=\"#\"> \n  \t\t<img src=\"1.png\" alt=\"\" />\n    \t<h1>title</h1>\n    \t<p>Some description about this module</p>\n  \t</a> \n\t</li>\n\t<li class=\"hex\"> \n\t\t<a class=\"hexIn\" href=\"#\"> \n  \t\t<img src=\"1.png\" alt=\"\" />\n    \t<h1>title</h1>\n    \t<p>Some description about this module</p>\n  \t</a> \n\t</li>\n\t<li class=\"hex\"> \n\t\t<a class=\"hexIn\" href=\"#\"> \n  \t\t<img src=\"1.png\" alt=\"\" />\n    \t<h1>title</h1>\n    \t<p>Some description about this module</p>\n  \t</a> \n\t</li>\n\t<li class=\"hex\"> \n\t\t<a class=\"hexIn\" href=\"#\"> \n  \t\t<img src=\"1.png\" alt=\"\" />\n    \t<h1>title</h1>\n    \t<p>Some description about this module</p>\n  \t</a> \n\t</li>\n</ul>\n</body>\n</html>\n</body>\n</html>\n```\n```css\n* {\n    margin: 0;\n    padding: 0;\n}\n#hexGrid {\n    overflow: hidden;\n    width: 90%;\n    margin: 0 auto;\n    padding:0.866% 0;\n    font-family: 'Raleway', sans-serif;\n    font-size: 15px;\n}\n#hexGrid:after {\n    content: \"\";\n    display: block;\n    clear: both;\n}\n.hex {\n    position: relative;\n    list-style-type: none;\n    float: left;\n    overflow: hidden;\n    visibility: hidden;\n    outline:1px solid transparent;\n            transform: rotate(-60deg) skewY(30deg) translatez(-1px);\n}\n.hex * {\n    position: absolute;\n    visibility: visible;\n    outline:1px solid transparent; /* fix for jagged edges in FF on hover transition */\n}\n.hexIn {\n    display:block;\n    width: 100%;\n    height: 100%;\n    text-align: center;\n    color: #fff;\n    overflow: hidden;\n    -webkit-transform: skewY(-30deg) rotate(60deg);\n        -ms-transform: skewY(-30deg) rotate(60deg);\n            transform: skewY(-30deg) rotate(60deg);\n}\n\n/*** HEX CONTENT **********************************************************************/\n.hex img {\n    left: -100%;\n    right: -100%;\n    width: auto;\n    height: 100%;\n    margin: 0 auto;\n}\n\n.hex h1, .hex p {\n    width: 102%;\n    left:-1%; /* prevent line on the right where background doesn't cover image */\n    padding: 5%;\n    box-sizing:border-box;\n    background-color: rgba(0, 128, 128, 0.8);\n    font-weight: 300;\n    -webkit-transition:  -webkit-transform .2s ease-out, opacity .3s ease-out;\n            transition:          transform .2s ease-out, opacity .3s ease-out;\n}\n.hex h1 {\n    bottom: 50%;\n    padding-top:50%;\n    font-size: 1.5em;\n    z-index: 1;\n    -webkit-transform:translateY(-100%) translatez(-1px);\n        -ms-transform:translateY(-100%) translatez(-1px);\n            transform:translateY(-100%) translatez(-1px);\n}\n.hex h1:after {\n    content: '';\n    position: absolute;\n    bottom: 0;\n    left: 45%;\n    width: 10%;\n    text-align: center;\n    border-bottom: 1px solid #fff;\n}\n.hex p {\n    top: 50%;\n    padding-bottom:50%;\n    -webkit-transform:translateY(100%) translatez(-1px);\n        -ms-transform:translateY(100%) translatez(-1px);\n            transform:translateY(100%) translatez(-1px);\n}\n\n.hexIn:hover h1, .hexIn:focus h1,\n.hexIn:hover p, .hexIn:focus p{\n    -webkit-transform:translateY(0%) translatez(-1px);\n        -ms-transform:translateY(0%) translatez(-1px);\n            transform:translateY(0%) translatez(-1px);\n}\n\n@media (min-width:1201px) { /* <- 5-4  hexagons per row */\n    .hex {\n        width: 19.2%; /* = (100-4) / 5 */\n        padding-bottom: 22.170%; /* =  width / sin(60deg) */\n    }\n    .hex:nth-child(9n+6),\n    .hex:nth-child(9n+7),\n    .hex:nth-child(9n+8),\n    .hex:nth-child(9n+9) {\n        margin-top: -4.676%;\n        margin-bottom: -4.676%;\n        -webkit-transform: translateX(50%) rotate(-60deg) skewY(30deg);\n            -ms-transform: translateX(50%) rotate(-60deg) skewY(30deg);\n                transform: translateX(50%) rotate(-60deg) skewY(30deg);\n    }\n    .hex:nth-child(9n+6):last-child,\n    .hex:nth-child(9n+7):last-child,\n    .hex:nth-child(9n+8):last-child,\n    .hex:nth-child(9n+9):last-child {\n        margin-bottom: 0;\n    }\n    .hex:nth-child(9n+6) {\n        margin-left: 0.5%;\n        clear: left;\n    }\n    .hex:nth-child(9n+10) {\n        clear: left;\n    }\n    .hex:nth-child(9n+2),\n    .hex:nth-child(9n+ 7) {\n        margin-left: 1%;\n        margin-right: 1%;\n    }\n    .hex:nth-child(9n+3),\n    .hex:nth-child(9n+4),\n    .hex:nth-child(9n+8) {\n        margin-right: 1%;\n    }\n}\n@media (max-width: 1200px) and (min-width:901px) {/* <- 4-3  hexagons per row */\n    .hex {\n        width: 24.25%; /* = (100-3) / 4 */\n        padding-bottom: 28.001%; /* =  width / sin(60deg) */\n    }\n    .hex:nth-child(7n+5),\n    .hex:nth-child(7n+6),\n    .hex:nth-child(7n+7) {\n        margin-top: -6.134%;\n        margin-bottom: -6.134%;\n        -webkit-transform: translateX(50%) rotate(-60deg) skewY(30deg);\n            -ms-transform: translateX(50%) rotate(-60deg) skewY(30deg);\n                transform: translateX(50%) rotate(-60deg) skewY(30deg);\n    }\n    .hex:nth-child(7n+5):last-child,\n    .hex:nth-child(7n+6):last-child,\n    .hex:nth-child(7n+7):last-child {\n        margin-bottom: 0;\n    }\n    .hex:nth-child(7n+2),\n    .hex:nth-child(7n+6) {\n        margin-left: 1%;\n        margin-right: 1%;\n    }\n    .hex:nth-child(7n+3) {\n        margin-right: 1%;\n    }\n    .hex:nth-child(7n+8) {\n        clear: left;\n    }\n    .hex:nth-child(7n+5) {\n        clear: left;\n        margin-left: 0.5%;\n    }\n}\n@media (max-width: 900px) and (min-width:601px) { /* <- 3-2  hexagons per row */\n    .hex {\n        width: 32.666%; /* = (100-2) / 3 */\n        padding-bottom: 37.720%; /* =  width / sin(60) */\n    }\n    .hex:nth-child(5n+4),\n    .hex:nth-child(5n+5) {\n        margin-top: -8.564%;\n        margin-bottom: -8.564%;\n        -webkit-transform: translateX(50%) rotate(-60deg) skewY(30deg);\n            -ms-transform: translateX(50%) rotate(-60deg) skewY(30deg);\n                transform: translateX(50%) rotate(-60deg) skewY(30deg);\n    }\n    .hex:nth-child(5n+4):last-child,\n    .hex:nth-child(5n+5):last-child {\n        margin-bottom: 0;\n    }\n    .hex:nth-child(5n+4) {\n        margin-right: 1%;\n        margin-left: 0.5%;\n    }\n    .hex:nth-child(5n+2) {\n        margin-left: 1%;\n        margin-right: 1%;\n    }\n    .hex:nth-child(5n+6) {\n        clear: left;\n    }\n}\n@media (max-width: 600px) { /* <- 2-1  hexagons per row */\n    .hex {\n        width: 49.5%; /* = (100-1) / 2 */\n        padding-bottom: 57.158%; /* =  width / sin(60) */\n    }\n    .hex:nth-child(3n+3) {\n        margin-top: -13.423%;\n        margin-bottom: -13.423%;\n        -webkit-transform: translateX(50%) rotate(-60deg) skewY(30deg);\n            -ms-transform: translateX(50%) rotate(-60deg) skewY(30deg);\n                transform: translateX(50%) rotate(-60deg) skewY(30deg);\n    }\n    .hex:nth-child(3n+3):last-child {\n        margin-bottom: 0;\n    }\n    .hex:nth-child(3n+3) {\n        margin-left: 0.5%;\n    }\n    .hex:nth-child(3n+2) {\n        margin-left: 1%;\n    }\n    .hex:nth-child(3n+4) {\n        clear: left;\n    }\n}\n@media (max-width: 400px) {\n    #hexGrid {\n        font-size: 13px;\n    }\n}\n```\n## 通过css切片实现\n> + 思路：利用css切片实现六边形\n+ 优点：方便扩展，结构简单\n+ 缺点：兼容性差，学习曲线陡峭\n\n```html\n<!DOCTYPE html>\n<html>\n<head>\n  <title></title>\n  <style type=\"text/css\">\n    img{\n      clip-path: polygon(25.8% 0,75.8% 0,100% 44%,75.8% 87.8%,25.8% 87.8%, 0 50%,25.8% 0);\n    }\n  </style>\n</head>\n<body>\n<img src=\"http://www.jq22.com/demo/css3-image-grid-layout201703082234/img/6.png\">\n</body>\n</html>\n```\n## others\n还有另外svg、canvas的解决办法，可以自行学习。\n+ [svg](https://developer.mozilla.org/zh-CN/docs/Web/SVG/Tutorial)\n+ [canvas](https://developer.mozilla.org/zh-CN/docs/Web/API/Canvas_API)\n+ ","source":"_posts/关于蜂窝状图片的实现.md","raw":"---\ntitle: 关于蜂窝状图片的实现\ntags: [css]\ndate: 2018-03-29 16:20:09\ncategories: [css]\ndescription: 论实现蜂窝状图片墙的几种方法\n---\n![img5](/blog/img/comb.png)\n\n## 使用三个元素实现六边形效果\n\n> + 思路：使用三个同样大小的div相互叠加，形成正六边形区域\n+ 优点：兼容性最好\n+ 缺点：结构繁琐，难以扩展\n\n准备三个同样大小的div，其中一个逆时针旋转60deg,另一个顺时针旋转60deg,三个div叠加的部分刚好是正六边形。\n```html\n<!DOCTYPE html>\n<html>\n<head>\n  <meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\"/>\n  <title>CSS3 实现六边形图片展示效果</title>\n  <style>\n    .boxF, .boxS, .boxT {\n      width: 200px;\n      height: 250px;\n      overflow: hidden;\n      position: relative;\n    }\n    .boxF, .boxS {\n      visibility: hidden;\n    }\n    .boxF {\n      transform: rotate(120deg);\n      float: left;\n      margin-left: 10px;\n    }\n    .boxS {\n      transform: rotate(-60deg);\n    }\n    .boxT {\n      transform: rotate(-60deg);\n      background: no-repeat 50% center;\n      visibility: visible;\n    }\n    .boxF:hover {\n      z-index: 999;\n    }\n    .boxF:hover .boxT {\n      background-size: 400%;\n    }\n  </style>\n</head>\n<body>\n    <div class=\"boxF\">\n      <div class=\"boxS\">\n        <div class=\"boxT\" style=\"background-image: url('1.jpg');\">\n        </div>\n      </div>\n    </div>\n  </div>\n</body>\n</html>\n```\n## 使用一个元素配合css变形得到六边形\n> + 思路：利用旋转、斜切和位移达到六边形效果\n+ 优点：方便扩展，结构清晰\n+ 缺点：理解困难，曲线陡峭\n  \n```html\n<!DOCTYPE html>\n<html>\n<head>\n\t<title></title>\n</head>\n<body>\n<!DOCTYPE html>\n<html lang=\"zh\">\n<head>\n<meta charset=\"UTF-8\">\n<meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge,chrome=1\">\n<meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n<title></title>\n<link rel=\"stylesheet\" type=\"text/css\" href=\"index.css\">\n</head>\n<body>\n<ul id=\"hexGrid\">\n\t<li class=\"hex\"> \n\t\t<a class=\"hexIn\" href=\"#\"> \n  \t\t<img src=\"1.png\" alt=\"\" />\n    \t<h1>title</h1>\n    \t<p>Some description about this module</p>\n  \t</a> \n\t</li>\n\t<li class=\"hex\"> \n\t\t<a class=\"hexIn\" href=\"#\"> \n  \t\t<img src=\"1.png\" alt=\"\" />\n    \t<h1>title</h1>\n    \t<p>Some description about this module</p>\n  \t</a> \n\t</li>\n\t<li class=\"hex\"> \n\t\t<a class=\"hexIn\" href=\"#\"> \n  \t\t<img src=\"1.png\" alt=\"\" />\n    \t<h1>title</h1>\n    \t<p>Some description about this module</p>\n  \t</a> \n\t</li>\n\t<li class=\"hex\"> \n\t\t<a class=\"hexIn\" href=\"#\"> \n  \t    <img src=\"1.png\" alt=\"\" />\n    \t<h1>title</h1>\n    \t<p>Some description about this module</p>\n  \t</a> \n\t</li>\n\t<li class=\"hex\"> \n\t\t<a class=\"hexIn\" href=\"#\"> \n  \t\t<img src=\"1.png\" alt=\"\" />\n    \t<h1>title</h1>\n    \t<p>Some description about this module</p>\n  \t</a> \n\t</li>\n\t<li class=\"hex\"> \n\t\t<a class=\"hexIn\" href=\"#\"> \n  \t\t<img src=\"1.png\" alt=\"\" />\n    \t<h1>title</h1>\n    \t<p>Some description about this module</p>\n  \t</a> \n\t</li>\n\t<li class=\"hex\"> \n\t\t<a class=\"hexIn\" href=\"#\"> \n  \t\t<img src=\"1.png\" alt=\"\" />\n    \t<h1>title</h1>\n    \t<p>Some description about this module</p>\n  \t</a> \n\t</li>\n\t<li class=\"hex\"> \n\t\t<a class=\"hexIn\" href=\"#\"> \n  \t\t<img src=\"1.png\" alt=\"\" />\n    \t<h1>title</h1>\n    \t<p>Some description about this module</p>\n  \t</a> \n\t</li>\n\t<li class=\"hex\"> \n\t\t<a class=\"hexIn\" href=\"#\"> \n  \t\t<img src=\"1.png\" alt=\"\" />\n    \t<h1>title</h1>\n    \t<p>Some description about this module</p>\n  \t</a> \n\t</li>\n\t<li class=\"hex\"> \n\t\t<a class=\"hexIn\" href=\"#\"> \n  \t\t<img src=\"1.png\" alt=\"\" />\n    \t<h1>title</h1>\n    \t<p>Some description about this module</p>\n  \t</a> \n\t</li>\n</ul>\n</body>\n</html>\n</body>\n</html>\n```\n```css\n* {\n    margin: 0;\n    padding: 0;\n}\n#hexGrid {\n    overflow: hidden;\n    width: 90%;\n    margin: 0 auto;\n    padding:0.866% 0;\n    font-family: 'Raleway', sans-serif;\n    font-size: 15px;\n}\n#hexGrid:after {\n    content: \"\";\n    display: block;\n    clear: both;\n}\n.hex {\n    position: relative;\n    list-style-type: none;\n    float: left;\n    overflow: hidden;\n    visibility: hidden;\n    outline:1px solid transparent;\n            transform: rotate(-60deg) skewY(30deg) translatez(-1px);\n}\n.hex * {\n    position: absolute;\n    visibility: visible;\n    outline:1px solid transparent; /* fix for jagged edges in FF on hover transition */\n}\n.hexIn {\n    display:block;\n    width: 100%;\n    height: 100%;\n    text-align: center;\n    color: #fff;\n    overflow: hidden;\n    -webkit-transform: skewY(-30deg) rotate(60deg);\n        -ms-transform: skewY(-30deg) rotate(60deg);\n            transform: skewY(-30deg) rotate(60deg);\n}\n\n/*** HEX CONTENT **********************************************************************/\n.hex img {\n    left: -100%;\n    right: -100%;\n    width: auto;\n    height: 100%;\n    margin: 0 auto;\n}\n\n.hex h1, .hex p {\n    width: 102%;\n    left:-1%; /* prevent line on the right where background doesn't cover image */\n    padding: 5%;\n    box-sizing:border-box;\n    background-color: rgba(0, 128, 128, 0.8);\n    font-weight: 300;\n    -webkit-transition:  -webkit-transform .2s ease-out, opacity .3s ease-out;\n            transition:          transform .2s ease-out, opacity .3s ease-out;\n}\n.hex h1 {\n    bottom: 50%;\n    padding-top:50%;\n    font-size: 1.5em;\n    z-index: 1;\n    -webkit-transform:translateY(-100%) translatez(-1px);\n        -ms-transform:translateY(-100%) translatez(-1px);\n            transform:translateY(-100%) translatez(-1px);\n}\n.hex h1:after {\n    content: '';\n    position: absolute;\n    bottom: 0;\n    left: 45%;\n    width: 10%;\n    text-align: center;\n    border-bottom: 1px solid #fff;\n}\n.hex p {\n    top: 50%;\n    padding-bottom:50%;\n    -webkit-transform:translateY(100%) translatez(-1px);\n        -ms-transform:translateY(100%) translatez(-1px);\n            transform:translateY(100%) translatez(-1px);\n}\n\n.hexIn:hover h1, .hexIn:focus h1,\n.hexIn:hover p, .hexIn:focus p{\n    -webkit-transform:translateY(0%) translatez(-1px);\n        -ms-transform:translateY(0%) translatez(-1px);\n            transform:translateY(0%) translatez(-1px);\n}\n\n@media (min-width:1201px) { /* <- 5-4  hexagons per row */\n    .hex {\n        width: 19.2%; /* = (100-4) / 5 */\n        padding-bottom: 22.170%; /* =  width / sin(60deg) */\n    }\n    .hex:nth-child(9n+6),\n    .hex:nth-child(9n+7),\n    .hex:nth-child(9n+8),\n    .hex:nth-child(9n+9) {\n        margin-top: -4.676%;\n        margin-bottom: -4.676%;\n        -webkit-transform: translateX(50%) rotate(-60deg) skewY(30deg);\n            -ms-transform: translateX(50%) rotate(-60deg) skewY(30deg);\n                transform: translateX(50%) rotate(-60deg) skewY(30deg);\n    }\n    .hex:nth-child(9n+6):last-child,\n    .hex:nth-child(9n+7):last-child,\n    .hex:nth-child(9n+8):last-child,\n    .hex:nth-child(9n+9):last-child {\n        margin-bottom: 0;\n    }\n    .hex:nth-child(9n+6) {\n        margin-left: 0.5%;\n        clear: left;\n    }\n    .hex:nth-child(9n+10) {\n        clear: left;\n    }\n    .hex:nth-child(9n+2),\n    .hex:nth-child(9n+ 7) {\n        margin-left: 1%;\n        margin-right: 1%;\n    }\n    .hex:nth-child(9n+3),\n    .hex:nth-child(9n+4),\n    .hex:nth-child(9n+8) {\n        margin-right: 1%;\n    }\n}\n@media (max-width: 1200px) and (min-width:901px) {/* <- 4-3  hexagons per row */\n    .hex {\n        width: 24.25%; /* = (100-3) / 4 */\n        padding-bottom: 28.001%; /* =  width / sin(60deg) */\n    }\n    .hex:nth-child(7n+5),\n    .hex:nth-child(7n+6),\n    .hex:nth-child(7n+7) {\n        margin-top: -6.134%;\n        margin-bottom: -6.134%;\n        -webkit-transform: translateX(50%) rotate(-60deg) skewY(30deg);\n            -ms-transform: translateX(50%) rotate(-60deg) skewY(30deg);\n                transform: translateX(50%) rotate(-60deg) skewY(30deg);\n    }\n    .hex:nth-child(7n+5):last-child,\n    .hex:nth-child(7n+6):last-child,\n    .hex:nth-child(7n+7):last-child {\n        margin-bottom: 0;\n    }\n    .hex:nth-child(7n+2),\n    .hex:nth-child(7n+6) {\n        margin-left: 1%;\n        margin-right: 1%;\n    }\n    .hex:nth-child(7n+3) {\n        margin-right: 1%;\n    }\n    .hex:nth-child(7n+8) {\n        clear: left;\n    }\n    .hex:nth-child(7n+5) {\n        clear: left;\n        margin-left: 0.5%;\n    }\n}\n@media (max-width: 900px) and (min-width:601px) { /* <- 3-2  hexagons per row */\n    .hex {\n        width: 32.666%; /* = (100-2) / 3 */\n        padding-bottom: 37.720%; /* =  width / sin(60) */\n    }\n    .hex:nth-child(5n+4),\n    .hex:nth-child(5n+5) {\n        margin-top: -8.564%;\n        margin-bottom: -8.564%;\n        -webkit-transform: translateX(50%) rotate(-60deg) skewY(30deg);\n            -ms-transform: translateX(50%) rotate(-60deg) skewY(30deg);\n                transform: translateX(50%) rotate(-60deg) skewY(30deg);\n    }\n    .hex:nth-child(5n+4):last-child,\n    .hex:nth-child(5n+5):last-child {\n        margin-bottom: 0;\n    }\n    .hex:nth-child(5n+4) {\n        margin-right: 1%;\n        margin-left: 0.5%;\n    }\n    .hex:nth-child(5n+2) {\n        margin-left: 1%;\n        margin-right: 1%;\n    }\n    .hex:nth-child(5n+6) {\n        clear: left;\n    }\n}\n@media (max-width: 600px) { /* <- 2-1  hexagons per row */\n    .hex {\n        width: 49.5%; /* = (100-1) / 2 */\n        padding-bottom: 57.158%; /* =  width / sin(60) */\n    }\n    .hex:nth-child(3n+3) {\n        margin-top: -13.423%;\n        margin-bottom: -13.423%;\n        -webkit-transform: translateX(50%) rotate(-60deg) skewY(30deg);\n            -ms-transform: translateX(50%) rotate(-60deg) skewY(30deg);\n                transform: translateX(50%) rotate(-60deg) skewY(30deg);\n    }\n    .hex:nth-child(3n+3):last-child {\n        margin-bottom: 0;\n    }\n    .hex:nth-child(3n+3) {\n        margin-left: 0.5%;\n    }\n    .hex:nth-child(3n+2) {\n        margin-left: 1%;\n    }\n    .hex:nth-child(3n+4) {\n        clear: left;\n    }\n}\n@media (max-width: 400px) {\n    #hexGrid {\n        font-size: 13px;\n    }\n}\n```\n## 通过css切片实现\n> + 思路：利用css切片实现六边形\n+ 优点：方便扩展，结构简单\n+ 缺点：兼容性差，学习曲线陡峭\n\n```html\n<!DOCTYPE html>\n<html>\n<head>\n  <title></title>\n  <style type=\"text/css\">\n    img{\n      clip-path: polygon(25.8% 0,75.8% 0,100% 44%,75.8% 87.8%,25.8% 87.8%, 0 50%,25.8% 0);\n    }\n  </style>\n</head>\n<body>\n<img src=\"http://www.jq22.com/demo/css3-image-grid-layout201703082234/img/6.png\">\n</body>\n</html>\n```\n## others\n还有另外svg、canvas的解决办法，可以自行学习。\n+ [svg](https://developer.mozilla.org/zh-CN/docs/Web/SVG/Tutorial)\n+ [canvas](https://developer.mozilla.org/zh-CN/docs/Web/API/Canvas_API)\n+ ","slug":"关于蜂窝状图片的实现","published":1,"updated":"2021-06-25T11:19:55.448Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckqc904pi002hwotveh6jtqiv","content":"<p><img src=\"/blog/img/comb.png\" alt=\"img5\"></p>\n<h2 id=\"使用三个元素实现六边形效果\"><a href=\"#使用三个元素实现六边形效果\" class=\"headerlink\" title=\"使用三个元素实现六边形效果\"></a>使用三个元素实现六边形效果</h2><blockquote>\n<ul>\n<li>思路：使用三个同样大小的div相互叠加，形成正六边形区域</li>\n<li>优点：兼容性最好</li>\n<li>缺点：结构繁琐，难以扩展</li>\n</ul>\n</blockquote>\n<p>准备三个同样大小的div，其中一个逆时针旋转60deg,另一个顺时针旋转60deg,三个div叠加的部分刚好是正六边形。<br><div class=\"code-panel__wrapper\" autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\"><header class=\"mac-panel\"><span class=\"doc-path\"></span><span class=\"mac-panel__language\">HTML</span></header><figure class=\"iseeu highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"meta-keyword\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">http-equiv</span>=<span class=\"string\">\"Content-Type\"</span> <span class=\"attr\">content</span>=<span class=\"string\">\"text/html; charset=utf-8\"</span>/&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>CSS3 实现六边形图片展示效果<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">style</span>&gt;</span></span><br><span class=\"line\"><span class=\"css\">    <span class=\"selector-class\">.boxF</span>, <span class=\"selector-class\">.boxS</span>, <span class=\"selector-class\">.boxT</span> &#123;</span></span><br><span class=\"line\">      width: 200px;</span><br><span class=\"line\">      height: 250px;</span><br><span class=\"line\">      overflow: hidden;</span><br><span class=\"line\">      position: relative;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"><span class=\"css\">    <span class=\"selector-class\">.boxF</span>, <span class=\"selector-class\">.boxS</span> &#123;</span></span><br><span class=\"line\">      visibility: hidden;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"><span class=\"css\">    <span class=\"selector-class\">.boxF</span> &#123;</span></span><br><span class=\"line\">      transform: rotate(120deg);</span><br><span class=\"line\">      float: left;</span><br><span class=\"line\">      margin-left: 10px;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"><span class=\"css\">    <span class=\"selector-class\">.boxS</span> &#123;</span></span><br><span class=\"line\">      transform: rotate(-60deg);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"><span class=\"css\">    <span class=\"selector-class\">.boxT</span> &#123;</span></span><br><span class=\"line\">      transform: rotate(-60deg);</span><br><span class=\"line\">      background: no-repeat 50% center;</span><br><span class=\"line\">      visibility: visible;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"><span class=\"css\">    <span class=\"selector-class\">.boxF</span><span class=\"selector-pseudo\">:hover</span> &#123;</span></span><br><span class=\"line\">      z-index: 999;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"><span class=\"css\">    <span class=\"selector-class\">.boxF</span><span class=\"selector-pseudo\">:hover</span> <span class=\"selector-class\">.boxT</span> &#123;</span></span><br><span class=\"line\">      background-size: 400%;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"boxF\"</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"boxS\"</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"boxT\"</span> <span class=\"attr\">style</span>=<span class=\"string\">\"background-image: url('1.jpg');\"</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure></div></p>\n<h2 id=\"使用一个元素配合css变形得到六边形\"><a href=\"#使用一个元素配合css变形得到六边形\" class=\"headerlink\" title=\"使用一个元素配合css变形得到六边形\"></a>使用一个元素配合css变形得到六边形</h2><blockquote>\n<ul>\n<li>思路：利用旋转、斜切和位移达到六边形效果</li>\n<li>优点：方便扩展，结构清晰</li>\n<li>缺点：理解困难，曲线陡峭</li>\n</ul>\n</blockquote>\n<div class=\"code-panel__wrapper\" autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\"><header class=\"mac-panel\"><span class=\"doc-path\"></span><span class=\"mac-panel__language\">HTML</span></header><figure class=\"iseeu highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"meta-keyword\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"meta-keyword\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span> <span class=\"attr\">lang</span>=<span class=\"string\">\"zh\"</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">\"UTF-8\"</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">http-equiv</span>=<span class=\"string\">\"X-UA-Compatible\"</span> <span class=\"attr\">content</span>=<span class=\"string\">\"IE=edge,chrome=1\"</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">name</span>=<span class=\"string\">\"viewport\"</span> <span class=\"attr\">content</span>=<span class=\"string\">\"width=device-width, initial-scale=1.0\"</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">link</span> <span class=\"attr\">rel</span>=<span class=\"string\">\"stylesheet\"</span> <span class=\"attr\">type</span>=<span class=\"string\">\"text/css\"</span> <span class=\"attr\">href</span>=<span class=\"string\">\"index.css\"</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">ul</span> <span class=\"attr\">id</span>=<span class=\"string\">\"hexGrid\"</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">li</span> <span class=\"attr\">class</span>=<span class=\"string\">\"hex\"</span>&gt;</span> </span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">class</span>=<span class=\"string\">\"hexIn\"</span> <span class=\"attr\">href</span>=<span class=\"string\">\"#\"</span>&gt;</span> </span><br><span class=\"line\">  \t\t<span class=\"tag\">&lt;<span class=\"name\">img</span> <span class=\"attr\">src</span>=<span class=\"string\">\"1.png\"</span> <span class=\"attr\">alt</span>=<span class=\"string\">\"\"</span> /&gt;</span></span><br><span class=\"line\">    \t<span class=\"tag\">&lt;<span class=\"name\">h1</span>&gt;</span>title<span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span><br><span class=\"line\">    \t<span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>Some description about this module<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">  \t<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span> </span><br><span class=\"line\">\t<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">li</span> <span class=\"attr\">class</span>=<span class=\"string\">\"hex\"</span>&gt;</span> </span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">class</span>=<span class=\"string\">\"hexIn\"</span> <span class=\"attr\">href</span>=<span class=\"string\">\"#\"</span>&gt;</span> </span><br><span class=\"line\">  \t\t<span class=\"tag\">&lt;<span class=\"name\">img</span> <span class=\"attr\">src</span>=<span class=\"string\">\"1.png\"</span> <span class=\"attr\">alt</span>=<span class=\"string\">\"\"</span> /&gt;</span></span><br><span class=\"line\">    \t<span class=\"tag\">&lt;<span class=\"name\">h1</span>&gt;</span>title<span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span><br><span class=\"line\">    \t<span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>Some description about this module<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">  \t<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span> </span><br><span class=\"line\">\t<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">li</span> <span class=\"attr\">class</span>=<span class=\"string\">\"hex\"</span>&gt;</span> </span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">class</span>=<span class=\"string\">\"hexIn\"</span> <span class=\"attr\">href</span>=<span class=\"string\">\"#\"</span>&gt;</span> </span><br><span class=\"line\">  \t\t<span class=\"tag\">&lt;<span class=\"name\">img</span> <span class=\"attr\">src</span>=<span class=\"string\">\"1.png\"</span> <span class=\"attr\">alt</span>=<span class=\"string\">\"\"</span> /&gt;</span></span><br><span class=\"line\">    \t<span class=\"tag\">&lt;<span class=\"name\">h1</span>&gt;</span>title<span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span><br><span class=\"line\">    \t<span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>Some description about this module<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">  \t<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span> </span><br><span class=\"line\">\t<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">li</span> <span class=\"attr\">class</span>=<span class=\"string\">\"hex\"</span>&gt;</span> </span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">class</span>=<span class=\"string\">\"hexIn\"</span> <span class=\"attr\">href</span>=<span class=\"string\">\"#\"</span>&gt;</span> </span><br><span class=\"line\">  \t    <span class=\"tag\">&lt;<span class=\"name\">img</span> <span class=\"attr\">src</span>=<span class=\"string\">\"1.png\"</span> <span class=\"attr\">alt</span>=<span class=\"string\">\"\"</span> /&gt;</span></span><br><span class=\"line\">    \t<span class=\"tag\">&lt;<span class=\"name\">h1</span>&gt;</span>title<span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span><br><span class=\"line\">    \t<span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>Some description about this module<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">  \t<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span> </span><br><span class=\"line\">\t<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">li</span> <span class=\"attr\">class</span>=<span class=\"string\">\"hex\"</span>&gt;</span> </span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">class</span>=<span class=\"string\">\"hexIn\"</span> <span class=\"attr\">href</span>=<span class=\"string\">\"#\"</span>&gt;</span> </span><br><span class=\"line\">  \t\t<span class=\"tag\">&lt;<span class=\"name\">img</span> <span class=\"attr\">src</span>=<span class=\"string\">\"1.png\"</span> <span class=\"attr\">alt</span>=<span class=\"string\">\"\"</span> /&gt;</span></span><br><span class=\"line\">    \t<span class=\"tag\">&lt;<span class=\"name\">h1</span>&gt;</span>title<span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span><br><span class=\"line\">    \t<span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>Some description about this module<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">  \t<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span> </span><br><span class=\"line\">\t<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">li</span> <span class=\"attr\">class</span>=<span class=\"string\">\"hex\"</span>&gt;</span> </span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">class</span>=<span class=\"string\">\"hexIn\"</span> <span class=\"attr\">href</span>=<span class=\"string\">\"#\"</span>&gt;</span> </span><br><span class=\"line\">  \t\t<span class=\"tag\">&lt;<span class=\"name\">img</span> <span class=\"attr\">src</span>=<span class=\"string\">\"1.png\"</span> <span class=\"attr\">alt</span>=<span class=\"string\">\"\"</span> /&gt;</span></span><br><span class=\"line\">    \t<span class=\"tag\">&lt;<span class=\"name\">h1</span>&gt;</span>title<span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span><br><span class=\"line\">    \t<span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>Some description about this module<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">  \t<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span> </span><br><span class=\"line\">\t<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">li</span> <span class=\"attr\">class</span>=<span class=\"string\">\"hex\"</span>&gt;</span> </span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">class</span>=<span class=\"string\">\"hexIn\"</span> <span class=\"attr\">href</span>=<span class=\"string\">\"#\"</span>&gt;</span> </span><br><span class=\"line\">  \t\t<span class=\"tag\">&lt;<span class=\"name\">img</span> <span class=\"attr\">src</span>=<span class=\"string\">\"1.png\"</span> <span class=\"attr\">alt</span>=<span class=\"string\">\"\"</span> /&gt;</span></span><br><span class=\"line\">    \t<span class=\"tag\">&lt;<span class=\"name\">h1</span>&gt;</span>title<span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span><br><span class=\"line\">    \t<span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>Some description about this module<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">  \t<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span> </span><br><span class=\"line\">\t<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">li</span> <span class=\"attr\">class</span>=<span class=\"string\">\"hex\"</span>&gt;</span> </span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">class</span>=<span class=\"string\">\"hexIn\"</span> <span class=\"attr\">href</span>=<span class=\"string\">\"#\"</span>&gt;</span> </span><br><span class=\"line\">  \t\t<span class=\"tag\">&lt;<span class=\"name\">img</span> <span class=\"attr\">src</span>=<span class=\"string\">\"1.png\"</span> <span class=\"attr\">alt</span>=<span class=\"string\">\"\"</span> /&gt;</span></span><br><span class=\"line\">    \t<span class=\"tag\">&lt;<span class=\"name\">h1</span>&gt;</span>title<span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span><br><span class=\"line\">    \t<span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>Some description about this module<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">  \t<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span> </span><br><span class=\"line\">\t<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">li</span> <span class=\"attr\">class</span>=<span class=\"string\">\"hex\"</span>&gt;</span> </span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">class</span>=<span class=\"string\">\"hexIn\"</span> <span class=\"attr\">href</span>=<span class=\"string\">\"#\"</span>&gt;</span> </span><br><span class=\"line\">  \t\t<span class=\"tag\">&lt;<span class=\"name\">img</span> <span class=\"attr\">src</span>=<span class=\"string\">\"1.png\"</span> <span class=\"attr\">alt</span>=<span class=\"string\">\"\"</span> /&gt;</span></span><br><span class=\"line\">    \t<span class=\"tag\">&lt;<span class=\"name\">h1</span>&gt;</span>title<span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span><br><span class=\"line\">    \t<span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>Some description about this module<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">  \t<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span> </span><br><span class=\"line\">\t<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">li</span> <span class=\"attr\">class</span>=<span class=\"string\">\"hex\"</span>&gt;</span> </span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">class</span>=<span class=\"string\">\"hexIn\"</span> <span class=\"attr\">href</span>=<span class=\"string\">\"#\"</span>&gt;</span> </span><br><span class=\"line\">  \t\t<span class=\"tag\">&lt;<span class=\"name\">img</span> <span class=\"attr\">src</span>=<span class=\"string\">\"1.png\"</span> <span class=\"attr\">alt</span>=<span class=\"string\">\"\"</span> /&gt;</span></span><br><span class=\"line\">    \t<span class=\"tag\">&lt;<span class=\"name\">h1</span>&gt;</span>title<span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span><br><span class=\"line\">    \t<span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>Some description about this module<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">  \t<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span> </span><br><span class=\"line\">\t<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">ul</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure></div>\n<div class=\"code-panel__wrapper\" autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\"><header class=\"mac-panel\"><span class=\"doc-path\"></span><span class=\"mac-panel__language\">CSS</span></header><figure class=\"iseeu highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br><span class=\"line\">165</span><br><span class=\"line\">166</span><br><span class=\"line\">167</span><br><span class=\"line\">168</span><br><span class=\"line\">169</span><br><span class=\"line\">170</span><br><span class=\"line\">171</span><br><span class=\"line\">172</span><br><span class=\"line\">173</span><br><span class=\"line\">174</span><br><span class=\"line\">175</span><br><span class=\"line\">176</span><br><span class=\"line\">177</span><br><span class=\"line\">178</span><br><span class=\"line\">179</span><br><span class=\"line\">180</span><br><span class=\"line\">181</span><br><span class=\"line\">182</span><br><span class=\"line\">183</span><br><span class=\"line\">184</span><br><span class=\"line\">185</span><br><span class=\"line\">186</span><br><span class=\"line\">187</span><br><span class=\"line\">188</span><br><span class=\"line\">189</span><br><span class=\"line\">190</span><br><span class=\"line\">191</span><br><span class=\"line\">192</span><br><span class=\"line\">193</span><br><span class=\"line\">194</span><br><span class=\"line\">195</span><br><span class=\"line\">196</span><br><span class=\"line\">197</span><br><span class=\"line\">198</span><br><span class=\"line\">199</span><br><span class=\"line\">200</span><br><span class=\"line\">201</span><br><span class=\"line\">202</span><br><span class=\"line\">203</span><br><span class=\"line\">204</span><br><span class=\"line\">205</span><br><span class=\"line\">206</span><br><span class=\"line\">207</span><br><span class=\"line\">208</span><br><span class=\"line\">209</span><br><span class=\"line\">210</span><br><span class=\"line\">211</span><br><span class=\"line\">212</span><br><span class=\"line\">213</span><br><span class=\"line\">214</span><br><span class=\"line\">215</span><br><span class=\"line\">216</span><br><span class=\"line\">217</span><br><span class=\"line\">218</span><br><span class=\"line\">219</span><br><span class=\"line\">220</span><br><span class=\"line\">221</span><br><span class=\"line\">222</span><br><span class=\"line\">223</span><br><span class=\"line\">224</span><br><span class=\"line\">225</span><br><span class=\"line\">226</span><br><span class=\"line\">227</span><br><span class=\"line\">228</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">* &#123;</span><br><span class=\"line\">    <span class=\"attribute\">margin</span>: <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"attribute\">padding</span>: <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-id\">#hexGrid</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">overflow</span>: hidden;</span><br><span class=\"line\">    <span class=\"attribute\">width</span>: <span class=\"number\">90%</span>;</span><br><span class=\"line\">    <span class=\"attribute\">margin</span>: <span class=\"number\">0</span> auto;</span><br><span class=\"line\">    <span class=\"attribute\">padding</span>:<span class=\"number\">0.866%</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"attribute\">font-family</span>: <span class=\"string\">'Raleway'</span>, sans-serif;</span><br><span class=\"line\">    <span class=\"attribute\">font-size</span>: <span class=\"number\">15px</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-id\">#hexGrid</span><span class=\"selector-pseudo\">:after</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">content</span>: <span class=\"string\">\"\"</span>;</span><br><span class=\"line\">    <span class=\"attribute\">display</span>: block;</span><br><span class=\"line\">    <span class=\"attribute\">clear</span>: both;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-class\">.hex</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">position</span>: relative;</span><br><span class=\"line\">    <span class=\"attribute\">list-style-type</span>: none;</span><br><span class=\"line\">    <span class=\"attribute\">float</span>: left;</span><br><span class=\"line\">    <span class=\"attribute\">overflow</span>: hidden;</span><br><span class=\"line\">    <span class=\"attribute\">visibility</span>: hidden;</span><br><span class=\"line\">    <span class=\"attribute\">outline</span>:<span class=\"number\">1px</span> solid transparent;</span><br><span class=\"line\">            <span class=\"attribute\">transform</span>: <span class=\"built_in\">rotate</span>(-<span class=\"number\">60deg</span>) <span class=\"built_in\">skewY</span>(<span class=\"number\">30deg</span>) <span class=\"built_in\">translatez</span>(-<span class=\"number\">1px</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-class\">.hex</span> * &#123;</span><br><span class=\"line\">    <span class=\"attribute\">position</span>: absolute;</span><br><span class=\"line\">    <span class=\"attribute\">visibility</span>: visible;</span><br><span class=\"line\">    <span class=\"attribute\">outline</span>:<span class=\"number\">1px</span> solid transparent; <span class=\"comment\">/* fix for jagged edges in FF on hover transition */</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-class\">.hexIn</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">display</span>:block;</span><br><span class=\"line\">    <span class=\"attribute\">width</span>: <span class=\"number\">100%</span>;</span><br><span class=\"line\">    <span class=\"attribute\">height</span>: <span class=\"number\">100%</span>;</span><br><span class=\"line\">    <span class=\"attribute\">text-align</span>: center;</span><br><span class=\"line\">    <span class=\"attribute\">color</span>: <span class=\"number\">#fff</span>;</span><br><span class=\"line\">    <span class=\"attribute\">overflow</span>: hidden;</span><br><span class=\"line\">    <span class=\"attribute\">-webkit-transform</span>: <span class=\"built_in\">skewY</span>(-<span class=\"number\">30deg</span>) <span class=\"built_in\">rotate</span>(<span class=\"number\">60deg</span>);</span><br><span class=\"line\">        <span class=\"attribute\">-ms-transform</span>: <span class=\"built_in\">skewY</span>(-<span class=\"number\">30deg</span>) <span class=\"built_in\">rotate</span>(<span class=\"number\">60deg</span>);</span><br><span class=\"line\">            <span class=\"attribute\">transform</span>: <span class=\"built_in\">skewY</span>(-<span class=\"number\">30deg</span>) <span class=\"built_in\">rotate</span>(<span class=\"number\">60deg</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/*** HEX CONTENT **********************************************************************/</span></span><br><span class=\"line\"><span class=\"selector-class\">.hex</span> <span class=\"selector-tag\">img</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">left</span>: -<span class=\"number\">100%</span>;</span><br><span class=\"line\">    <span class=\"attribute\">right</span>: -<span class=\"number\">100%</span>;</span><br><span class=\"line\">    <span class=\"attribute\">width</span>: auto;</span><br><span class=\"line\">    <span class=\"attribute\">height</span>: <span class=\"number\">100%</span>;</span><br><span class=\"line\">    <span class=\"attribute\">margin</span>: <span class=\"number\">0</span> auto;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-class\">.hex</span> <span class=\"selector-tag\">h1</span>, <span class=\"selector-class\">.hex</span> <span class=\"selector-tag\">p</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">width</span>: <span class=\"number\">102%</span>;</span><br><span class=\"line\">    <span class=\"attribute\">left</span>:-<span class=\"number\">1%</span>; <span class=\"comment\">/* prevent line on the right where background doesn't cover image */</span></span><br><span class=\"line\">    <span class=\"attribute\">padding</span>: <span class=\"number\">5%</span>;</span><br><span class=\"line\">    <span class=\"attribute\">box-sizing</span>:border-box;</span><br><span class=\"line\">    <span class=\"attribute\">background-color</span>: <span class=\"built_in\">rgba</span>(<span class=\"number\">0</span>, <span class=\"number\">128</span>, <span class=\"number\">128</span>, <span class=\"number\">0.8</span>);</span><br><span class=\"line\">    <span class=\"attribute\">font-weight</span>: <span class=\"number\">300</span>;</span><br><span class=\"line\">    <span class=\"attribute\">-webkit-transition</span>:  -webkit-transform .<span class=\"number\">2s</span> ease-out, opacity .<span class=\"number\">3s</span> ease-out;</span><br><span class=\"line\">            <span class=\"attribute\">transition</span>:          transform .<span class=\"number\">2s</span> ease-out, opacity .<span class=\"number\">3s</span> ease-out;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-class\">.hex</span> <span class=\"selector-tag\">h1</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">bottom</span>: <span class=\"number\">50%</span>;</span><br><span class=\"line\">    <span class=\"attribute\">padding-top</span>:<span class=\"number\">50%</span>;</span><br><span class=\"line\">    <span class=\"attribute\">font-size</span>: <span class=\"number\">1.5em</span>;</span><br><span class=\"line\">    <span class=\"attribute\">z-index</span>: <span class=\"number\">1</span>;</span><br><span class=\"line\">    <span class=\"attribute\">-webkit-transform</span>:<span class=\"built_in\">translateY</span>(-<span class=\"number\">100%</span>) <span class=\"built_in\">translatez</span>(-<span class=\"number\">1px</span>);</span><br><span class=\"line\">        <span class=\"attribute\">-ms-transform</span>:<span class=\"built_in\">translateY</span>(-<span class=\"number\">100%</span>) <span class=\"built_in\">translatez</span>(-<span class=\"number\">1px</span>);</span><br><span class=\"line\">            <span class=\"attribute\">transform</span>:<span class=\"built_in\">translateY</span>(-<span class=\"number\">100%</span>) <span class=\"built_in\">translatez</span>(-<span class=\"number\">1px</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-class\">.hex</span> <span class=\"selector-tag\">h1</span><span class=\"selector-pseudo\">:after</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">content</span>: <span class=\"string\">''</span>;</span><br><span class=\"line\">    <span class=\"attribute\">position</span>: absolute;</span><br><span class=\"line\">    <span class=\"attribute\">bottom</span>: <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"attribute\">left</span>: <span class=\"number\">45%</span>;</span><br><span class=\"line\">    <span class=\"attribute\">width</span>: <span class=\"number\">10%</span>;</span><br><span class=\"line\">    <span class=\"attribute\">text-align</span>: center;</span><br><span class=\"line\">    <span class=\"attribute\">border-bottom</span>: <span class=\"number\">1px</span> solid <span class=\"number\">#fff</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-class\">.hex</span> <span class=\"selector-tag\">p</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">top</span>: <span class=\"number\">50%</span>;</span><br><span class=\"line\">    <span class=\"attribute\">padding-bottom</span>:<span class=\"number\">50%</span>;</span><br><span class=\"line\">    <span class=\"attribute\">-webkit-transform</span>:<span class=\"built_in\">translateY</span>(<span class=\"number\">100%</span>) <span class=\"built_in\">translatez</span>(-<span class=\"number\">1px</span>);</span><br><span class=\"line\">        <span class=\"attribute\">-ms-transform</span>:<span class=\"built_in\">translateY</span>(<span class=\"number\">100%</span>) <span class=\"built_in\">translatez</span>(-<span class=\"number\">1px</span>);</span><br><span class=\"line\">            <span class=\"attribute\">transform</span>:<span class=\"built_in\">translateY</span>(<span class=\"number\">100%</span>) <span class=\"built_in\">translatez</span>(-<span class=\"number\">1px</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-class\">.hexIn</span><span class=\"selector-pseudo\">:hover</span> <span class=\"selector-tag\">h1</span>, <span class=\"selector-class\">.hexIn</span><span class=\"selector-pseudo\">:focus</span> <span class=\"selector-tag\">h1</span>,</span><br><span class=\"line\"><span class=\"selector-class\">.hexIn</span><span class=\"selector-pseudo\">:hover</span> <span class=\"selector-tag\">p</span>, <span class=\"selector-class\">.hexIn</span><span class=\"selector-pseudo\">:focus</span> <span class=\"selector-tag\">p</span>&#123;</span><br><span class=\"line\">    <span class=\"attribute\">-webkit-transform</span>:<span class=\"built_in\">translateY</span>(<span class=\"number\">0%</span>) <span class=\"built_in\">translatez</span>(-<span class=\"number\">1px</span>);</span><br><span class=\"line\">        <span class=\"attribute\">-ms-transform</span>:<span class=\"built_in\">translateY</span>(<span class=\"number\">0%</span>) <span class=\"built_in\">translatez</span>(-<span class=\"number\">1px</span>);</span><br><span class=\"line\">            <span class=\"attribute\">transform</span>:<span class=\"built_in\">translateY</span>(<span class=\"number\">0%</span>) <span class=\"built_in\">translatez</span>(-<span class=\"number\">1px</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">@media</span> (<span class=\"attribute\">min-width:</span><span class=\"number\">1201px</span>) &#123; <span class=\"comment\">/* &lt;- 5-4  hexagons per row */</span></span><br><span class=\"line\">    <span class=\"selector-class\">.hex</span> &#123;</span><br><span class=\"line\">        <span class=\"attribute\">width</span>: <span class=\"number\">19.2%</span>; <span class=\"comment\">/* = (100-4) / 5 */</span></span><br><span class=\"line\">        <span class=\"attribute\">padding-bottom</span>: <span class=\"number\">22.170%</span>; <span class=\"comment\">/* =  width / sin(60deg) */</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"selector-class\">.hex</span><span class=\"selector-pseudo\">:nth-child(9n+6)</span>,</span><br><span class=\"line\">    <span class=\"selector-class\">.hex</span><span class=\"selector-pseudo\">:nth-child(9n+7)</span>,</span><br><span class=\"line\">    <span class=\"selector-class\">.hex</span><span class=\"selector-pseudo\">:nth-child(9n+8)</span>,</span><br><span class=\"line\">    <span class=\"selector-class\">.hex</span><span class=\"selector-pseudo\">:nth-child(9n+9)</span> &#123;</span><br><span class=\"line\">        <span class=\"attribute\">margin-top</span>: -<span class=\"number\">4.676%</span>;</span><br><span class=\"line\">        <span class=\"attribute\">margin-bottom</span>: -<span class=\"number\">4.676%</span>;</span><br><span class=\"line\">        <span class=\"attribute\">-webkit-transform</span>: <span class=\"built_in\">translateX</span>(<span class=\"number\">50%</span>) <span class=\"built_in\">rotate</span>(-<span class=\"number\">60deg</span>) <span class=\"built_in\">skewY</span>(<span class=\"number\">30deg</span>);</span><br><span class=\"line\">            <span class=\"attribute\">-ms-transform</span>: <span class=\"built_in\">translateX</span>(<span class=\"number\">50%</span>) <span class=\"built_in\">rotate</span>(-<span class=\"number\">60deg</span>) <span class=\"built_in\">skewY</span>(<span class=\"number\">30deg</span>);</span><br><span class=\"line\">                <span class=\"attribute\">transform</span>: <span class=\"built_in\">translateX</span>(<span class=\"number\">50%</span>) <span class=\"built_in\">rotate</span>(-<span class=\"number\">60deg</span>) <span class=\"built_in\">skewY</span>(<span class=\"number\">30deg</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"selector-class\">.hex</span><span class=\"selector-pseudo\">:nth-child(9n+6)</span><span class=\"selector-pseudo\">:last-child</span>,</span><br><span class=\"line\">    <span class=\"selector-class\">.hex</span><span class=\"selector-pseudo\">:nth-child(9n+7)</span><span class=\"selector-pseudo\">:last-child</span>,</span><br><span class=\"line\">    <span class=\"selector-class\">.hex</span><span class=\"selector-pseudo\">:nth-child(9n+8)</span><span class=\"selector-pseudo\">:last-child</span>,</span><br><span class=\"line\">    <span class=\"selector-class\">.hex</span><span class=\"selector-pseudo\">:nth-child(9n+9)</span><span class=\"selector-pseudo\">:last-child</span> &#123;</span><br><span class=\"line\">        <span class=\"attribute\">margin-bottom</span>: <span class=\"number\">0</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"selector-class\">.hex</span><span class=\"selector-pseudo\">:nth-child(9n+6)</span> &#123;</span><br><span class=\"line\">        <span class=\"attribute\">margin-left</span>: <span class=\"number\">0.5%</span>;</span><br><span class=\"line\">        <span class=\"attribute\">clear</span>: left;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"selector-class\">.hex</span><span class=\"selector-pseudo\">:nth-child(9n+10)</span> &#123;</span><br><span class=\"line\">        <span class=\"attribute\">clear</span>: left;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"selector-class\">.hex</span><span class=\"selector-pseudo\">:nth-child(9n+2)</span>,</span><br><span class=\"line\">    <span class=\"selector-class\">.hex</span><span class=\"selector-pseudo\">:nth-child(9n+</span> 7) &#123;</span><br><span class=\"line\">        <span class=\"attribute\">margin-left</span>: <span class=\"number\">1%</span>;</span><br><span class=\"line\">        <span class=\"attribute\">margin-right</span>: <span class=\"number\">1%</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"selector-class\">.hex</span><span class=\"selector-pseudo\">:nth-child(9n+3)</span>,</span><br><span class=\"line\">    <span class=\"selector-class\">.hex</span><span class=\"selector-pseudo\">:nth-child(9n+4)</span>,</span><br><span class=\"line\">    <span class=\"selector-class\">.hex</span><span class=\"selector-pseudo\">:nth-child(9n+8)</span> &#123;</span><br><span class=\"line\">        <span class=\"attribute\">margin-right</span>: <span class=\"number\">1%</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">@media</span> (<span class=\"attribute\">max-width:</span> <span class=\"number\">1200px</span>) <span class=\"keyword\">and</span> (<span class=\"attribute\">min-width:</span><span class=\"number\">901px</span>) &#123;<span class=\"comment\">/* &lt;- 4-3  hexagons per row */</span></span><br><span class=\"line\">    <span class=\"selector-class\">.hex</span> &#123;</span><br><span class=\"line\">        <span class=\"attribute\">width</span>: <span class=\"number\">24.25%</span>; <span class=\"comment\">/* = (100-3) / 4 */</span></span><br><span class=\"line\">        <span class=\"attribute\">padding-bottom</span>: <span class=\"number\">28.001%</span>; <span class=\"comment\">/* =  width / sin(60deg) */</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"selector-class\">.hex</span><span class=\"selector-pseudo\">:nth-child(7n+5)</span>,</span><br><span class=\"line\">    <span class=\"selector-class\">.hex</span><span class=\"selector-pseudo\">:nth-child(7n+6)</span>,</span><br><span class=\"line\">    <span class=\"selector-class\">.hex</span><span class=\"selector-pseudo\">:nth-child(7n+7)</span> &#123;</span><br><span class=\"line\">        <span class=\"attribute\">margin-top</span>: -<span class=\"number\">6.134%</span>;</span><br><span class=\"line\">        <span class=\"attribute\">margin-bottom</span>: -<span class=\"number\">6.134%</span>;</span><br><span class=\"line\">        <span class=\"attribute\">-webkit-transform</span>: <span class=\"built_in\">translateX</span>(<span class=\"number\">50%</span>) <span class=\"built_in\">rotate</span>(-<span class=\"number\">60deg</span>) <span class=\"built_in\">skewY</span>(<span class=\"number\">30deg</span>);</span><br><span class=\"line\">            <span class=\"attribute\">-ms-transform</span>: <span class=\"built_in\">translateX</span>(<span class=\"number\">50%</span>) <span class=\"built_in\">rotate</span>(-<span class=\"number\">60deg</span>) <span class=\"built_in\">skewY</span>(<span class=\"number\">30deg</span>);</span><br><span class=\"line\">                <span class=\"attribute\">transform</span>: <span class=\"built_in\">translateX</span>(<span class=\"number\">50%</span>) <span class=\"built_in\">rotate</span>(-<span class=\"number\">60deg</span>) <span class=\"built_in\">skewY</span>(<span class=\"number\">30deg</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"selector-class\">.hex</span><span class=\"selector-pseudo\">:nth-child(7n+5)</span><span class=\"selector-pseudo\">:last-child</span>,</span><br><span class=\"line\">    <span class=\"selector-class\">.hex</span><span class=\"selector-pseudo\">:nth-child(7n+6)</span><span class=\"selector-pseudo\">:last-child</span>,</span><br><span class=\"line\">    <span class=\"selector-class\">.hex</span><span class=\"selector-pseudo\">:nth-child(7n+7)</span><span class=\"selector-pseudo\">:last-child</span> &#123;</span><br><span class=\"line\">        <span class=\"attribute\">margin-bottom</span>: <span class=\"number\">0</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"selector-class\">.hex</span><span class=\"selector-pseudo\">:nth-child(7n+2)</span>,</span><br><span class=\"line\">    <span class=\"selector-class\">.hex</span><span class=\"selector-pseudo\">:nth-child(7n+6)</span> &#123;</span><br><span class=\"line\">        <span class=\"attribute\">margin-left</span>: <span class=\"number\">1%</span>;</span><br><span class=\"line\">        <span class=\"attribute\">margin-right</span>: <span class=\"number\">1%</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"selector-class\">.hex</span><span class=\"selector-pseudo\">:nth-child(7n+3)</span> &#123;</span><br><span class=\"line\">        <span class=\"attribute\">margin-right</span>: <span class=\"number\">1%</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"selector-class\">.hex</span><span class=\"selector-pseudo\">:nth-child(7n+8)</span> &#123;</span><br><span class=\"line\">        <span class=\"attribute\">clear</span>: left;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"selector-class\">.hex</span><span class=\"selector-pseudo\">:nth-child(7n+5)</span> &#123;</span><br><span class=\"line\">        <span class=\"attribute\">clear</span>: left;</span><br><span class=\"line\">        <span class=\"attribute\">margin-left</span>: <span class=\"number\">0.5%</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">@media</span> (<span class=\"attribute\">max-width:</span> <span class=\"number\">900px</span>) <span class=\"keyword\">and</span> (<span class=\"attribute\">min-width:</span><span class=\"number\">601px</span>) &#123; <span class=\"comment\">/* &lt;- 3-2  hexagons per row */</span></span><br><span class=\"line\">    <span class=\"selector-class\">.hex</span> &#123;</span><br><span class=\"line\">        <span class=\"attribute\">width</span>: <span class=\"number\">32.666%</span>; <span class=\"comment\">/* = (100-2) / 3 */</span></span><br><span class=\"line\">        <span class=\"attribute\">padding-bottom</span>: <span class=\"number\">37.720%</span>; <span class=\"comment\">/* =  width / sin(60) */</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"selector-class\">.hex</span><span class=\"selector-pseudo\">:nth-child(5n+4)</span>,</span><br><span class=\"line\">    <span class=\"selector-class\">.hex</span><span class=\"selector-pseudo\">:nth-child(5n+5)</span> &#123;</span><br><span class=\"line\">        <span class=\"attribute\">margin-top</span>: -<span class=\"number\">8.564%</span>;</span><br><span class=\"line\">        <span class=\"attribute\">margin-bottom</span>: -<span class=\"number\">8.564%</span>;</span><br><span class=\"line\">        <span class=\"attribute\">-webkit-transform</span>: <span class=\"built_in\">translateX</span>(<span class=\"number\">50%</span>) <span class=\"built_in\">rotate</span>(-<span class=\"number\">60deg</span>) <span class=\"built_in\">skewY</span>(<span class=\"number\">30deg</span>);</span><br><span class=\"line\">            <span class=\"attribute\">-ms-transform</span>: <span class=\"built_in\">translateX</span>(<span class=\"number\">50%</span>) <span class=\"built_in\">rotate</span>(-<span class=\"number\">60deg</span>) <span class=\"built_in\">skewY</span>(<span class=\"number\">30deg</span>);</span><br><span class=\"line\">                <span class=\"attribute\">transform</span>: <span class=\"built_in\">translateX</span>(<span class=\"number\">50%</span>) <span class=\"built_in\">rotate</span>(-<span class=\"number\">60deg</span>) <span class=\"built_in\">skewY</span>(<span class=\"number\">30deg</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"selector-class\">.hex</span><span class=\"selector-pseudo\">:nth-child(5n+4)</span><span class=\"selector-pseudo\">:last-child</span>,</span><br><span class=\"line\">    <span class=\"selector-class\">.hex</span><span class=\"selector-pseudo\">:nth-child(5n+5)</span><span class=\"selector-pseudo\">:last-child</span> &#123;</span><br><span class=\"line\">        <span class=\"attribute\">margin-bottom</span>: <span class=\"number\">0</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"selector-class\">.hex</span><span class=\"selector-pseudo\">:nth-child(5n+4)</span> &#123;</span><br><span class=\"line\">        <span class=\"attribute\">margin-right</span>: <span class=\"number\">1%</span>;</span><br><span class=\"line\">        <span class=\"attribute\">margin-left</span>: <span class=\"number\">0.5%</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"selector-class\">.hex</span><span class=\"selector-pseudo\">:nth-child(5n+2)</span> &#123;</span><br><span class=\"line\">        <span class=\"attribute\">margin-left</span>: <span class=\"number\">1%</span>;</span><br><span class=\"line\">        <span class=\"attribute\">margin-right</span>: <span class=\"number\">1%</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"selector-class\">.hex</span><span class=\"selector-pseudo\">:nth-child(5n+6)</span> &#123;</span><br><span class=\"line\">        <span class=\"attribute\">clear</span>: left;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">@media</span> (<span class=\"attribute\">max-width:</span> <span class=\"number\">600px</span>) &#123; <span class=\"comment\">/* &lt;- 2-1  hexagons per row */</span></span><br><span class=\"line\">    <span class=\"selector-class\">.hex</span> &#123;</span><br><span class=\"line\">        <span class=\"attribute\">width</span>: <span class=\"number\">49.5%</span>; <span class=\"comment\">/* = (100-1) / 2 */</span></span><br><span class=\"line\">        <span class=\"attribute\">padding-bottom</span>: <span class=\"number\">57.158%</span>; <span class=\"comment\">/* =  width / sin(60) */</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"selector-class\">.hex</span><span class=\"selector-pseudo\">:nth-child(3n+3)</span> &#123;</span><br><span class=\"line\">        <span class=\"attribute\">margin-top</span>: -<span class=\"number\">13.423%</span>;</span><br><span class=\"line\">        <span class=\"attribute\">margin-bottom</span>: -<span class=\"number\">13.423%</span>;</span><br><span class=\"line\">        <span class=\"attribute\">-webkit-transform</span>: <span class=\"built_in\">translateX</span>(<span class=\"number\">50%</span>) <span class=\"built_in\">rotate</span>(-<span class=\"number\">60deg</span>) <span class=\"built_in\">skewY</span>(<span class=\"number\">30deg</span>);</span><br><span class=\"line\">            <span class=\"attribute\">-ms-transform</span>: <span class=\"built_in\">translateX</span>(<span class=\"number\">50%</span>) <span class=\"built_in\">rotate</span>(-<span class=\"number\">60deg</span>) <span class=\"built_in\">skewY</span>(<span class=\"number\">30deg</span>);</span><br><span class=\"line\">                <span class=\"attribute\">transform</span>: <span class=\"built_in\">translateX</span>(<span class=\"number\">50%</span>) <span class=\"built_in\">rotate</span>(-<span class=\"number\">60deg</span>) <span class=\"built_in\">skewY</span>(<span class=\"number\">30deg</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"selector-class\">.hex</span><span class=\"selector-pseudo\">:nth-child(3n+3)</span><span class=\"selector-pseudo\">:last-child</span> &#123;</span><br><span class=\"line\">        <span class=\"attribute\">margin-bottom</span>: <span class=\"number\">0</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"selector-class\">.hex</span><span class=\"selector-pseudo\">:nth-child(3n+3)</span> &#123;</span><br><span class=\"line\">        <span class=\"attribute\">margin-left</span>: <span class=\"number\">0.5%</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"selector-class\">.hex</span><span class=\"selector-pseudo\">:nth-child(3n+2)</span> &#123;</span><br><span class=\"line\">        <span class=\"attribute\">margin-left</span>: <span class=\"number\">1%</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"selector-class\">.hex</span><span class=\"selector-pseudo\">:nth-child(3n+4)</span> &#123;</span><br><span class=\"line\">        <span class=\"attribute\">clear</span>: left;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">@media</span> (<span class=\"attribute\">max-width:</span> <span class=\"number\">400px</span>) &#123;</span><br><span class=\"line\">    <span class=\"selector-id\">#hexGrid</span> &#123;</span><br><span class=\"line\">        <span class=\"attribute\">font-size</span>: <span class=\"number\">13px</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></div>\n<h2 id=\"通过css切片实现\"><a href=\"#通过css切片实现\" class=\"headerlink\" title=\"通过css切片实现\"></a>通过css切片实现</h2><blockquote>\n<ul>\n<li>思路：利用css切片实现六边形</li>\n<li>优点：方便扩展，结构简单</li>\n<li>缺点：兼容性差，学习曲线陡峭</li>\n</ul>\n</blockquote>\n<div class=\"code-panel__wrapper\" autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\"><header class=\"mac-panel\"><span class=\"doc-path\"></span><span class=\"mac-panel__language\">HTML</span></header><figure class=\"iseeu highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"meta-keyword\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">style</span> <span class=\"attr\">type</span>=<span class=\"string\">\"text/css\"</span>&gt;</span></span><br><span class=\"line\">    img&#123;</span><br><span class=\"line\"><span class=\"css\">      <span class=\"selector-tag\">clip-path</span>: <span class=\"selector-tag\">polygon</span>(25<span class=\"selector-class\">.8</span>% 0,75<span class=\"selector-class\">.8</span>% 0,100% 44%,75<span class=\"selector-class\">.8</span>% 87<span class=\"selector-class\">.8</span>%,25<span class=\"selector-class\">.8</span>% 87<span class=\"selector-class\">.8</span>%, 0 50%,25<span class=\"selector-class\">.8</span>% 0);</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">img</span> <span class=\"attr\">src</span>=<span class=\"string\">\"http://www.jq22.com/demo/css3-image-grid-layout201703082234/img/6.png\"</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure></div>\n<h2 id=\"others\"><a href=\"#others\" class=\"headerlink\" title=\"others\"></a>others</h2><p>还有另外svg、canvas的解决办法，可以自行学习。</p>\n<ul>\n<li><a href=\"https://developer.mozilla.org/zh-CN/docs/Web/SVG/Tutorial\" target=\"_blank\" rel=\"noopener\">svg</a></li>\n<li><a href=\"https://developer.mozilla.org/zh-CN/docs/Web/API/Canvas_API\" target=\"_blank\" rel=\"noopener\">canvas</a></li>\n<li></li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<p><img src=\"/blog/img/comb.png\" alt=\"img5\"></p>\n<h2 id=\"使用三个元素实现六边形效果\"><a href=\"#使用三个元素实现六边形效果\" class=\"headerlink\" title=\"使用三个元素实现六边形效果\"></a>使用三个元素实现六边形效果</h2><blockquote>\n<ul>\n<li>思路：使用三个同样大小的div相互叠加，形成正六边形区域</li>\n<li>优点：兼容性最好</li>\n<li>缺点：结构繁琐，难以扩展</li>\n</ul>\n</blockquote>\n<p>准备三个同样大小的div，其中一个逆时针旋转60deg,另一个顺时针旋转60deg,三个div叠加的部分刚好是正六边形。<br><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"meta-keyword\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">http-equiv</span>=<span class=\"string\">\"Content-Type\"</span> <span class=\"attr\">content</span>=<span class=\"string\">\"text/html; charset=utf-8\"</span>/&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>CSS3 实现六边形图片展示效果<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">style</span>&gt;</span></span><br><span class=\"line\"><span class=\"css\">    <span class=\"selector-class\">.boxF</span>, <span class=\"selector-class\">.boxS</span>, <span class=\"selector-class\">.boxT</span> &#123;</span></span><br><span class=\"line\">      width: 200px;</span><br><span class=\"line\">      height: 250px;</span><br><span class=\"line\">      overflow: hidden;</span><br><span class=\"line\">      position: relative;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"><span class=\"css\">    <span class=\"selector-class\">.boxF</span>, <span class=\"selector-class\">.boxS</span> &#123;</span></span><br><span class=\"line\">      visibility: hidden;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"><span class=\"css\">    <span class=\"selector-class\">.boxF</span> &#123;</span></span><br><span class=\"line\">      transform: rotate(120deg);</span><br><span class=\"line\">      float: left;</span><br><span class=\"line\">      margin-left: 10px;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"><span class=\"css\">    <span class=\"selector-class\">.boxS</span> &#123;</span></span><br><span class=\"line\">      transform: rotate(-60deg);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"><span class=\"css\">    <span class=\"selector-class\">.boxT</span> &#123;</span></span><br><span class=\"line\">      transform: rotate(-60deg);</span><br><span class=\"line\">      background: no-repeat 50% center;</span><br><span class=\"line\">      visibility: visible;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"><span class=\"css\">    <span class=\"selector-class\">.boxF</span><span class=\"selector-pseudo\">:hover</span> &#123;</span></span><br><span class=\"line\">      z-index: 999;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"><span class=\"css\">    <span class=\"selector-class\">.boxF</span><span class=\"selector-pseudo\">:hover</span> <span class=\"selector-class\">.boxT</span> &#123;</span></span><br><span class=\"line\">      background-size: 400%;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"boxF\"</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"boxS\"</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"boxT\"</span> <span class=\"attr\">style</span>=<span class=\"string\">\"background-image: url('1.jpg');\"</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure></p>\n<h2 id=\"使用一个元素配合css变形得到六边形\"><a href=\"#使用一个元素配合css变形得到六边形\" class=\"headerlink\" title=\"使用一个元素配合css变形得到六边形\"></a>使用一个元素配合css变形得到六边形</h2><blockquote>\n<ul>\n<li>思路：利用旋转、斜切和位移达到六边形效果</li>\n<li>优点：方便扩展，结构清晰</li>\n<li>缺点：理解困难，曲线陡峭</li>\n</ul>\n</blockquote>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"meta-keyword\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"meta-keyword\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span> <span class=\"attr\">lang</span>=<span class=\"string\">\"zh\"</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">\"UTF-8\"</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">http-equiv</span>=<span class=\"string\">\"X-UA-Compatible\"</span> <span class=\"attr\">content</span>=<span class=\"string\">\"IE=edge,chrome=1\"</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">name</span>=<span class=\"string\">\"viewport\"</span> <span class=\"attr\">content</span>=<span class=\"string\">\"width=device-width, initial-scale=1.0\"</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">link</span> <span class=\"attr\">rel</span>=<span class=\"string\">\"stylesheet\"</span> <span class=\"attr\">type</span>=<span class=\"string\">\"text/css\"</span> <span class=\"attr\">href</span>=<span class=\"string\">\"index.css\"</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">ul</span> <span class=\"attr\">id</span>=<span class=\"string\">\"hexGrid\"</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">li</span> <span class=\"attr\">class</span>=<span class=\"string\">\"hex\"</span>&gt;</span> </span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">class</span>=<span class=\"string\">\"hexIn\"</span> <span class=\"attr\">href</span>=<span class=\"string\">\"#\"</span>&gt;</span> </span><br><span class=\"line\">  \t\t<span class=\"tag\">&lt;<span class=\"name\">img</span> <span class=\"attr\">src</span>=<span class=\"string\">\"1.png\"</span> <span class=\"attr\">alt</span>=<span class=\"string\">\"\"</span> /&gt;</span></span><br><span class=\"line\">    \t<span class=\"tag\">&lt;<span class=\"name\">h1</span>&gt;</span>title<span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span><br><span class=\"line\">    \t<span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>Some description about this module<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">  \t<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span> </span><br><span class=\"line\">\t<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">li</span> <span class=\"attr\">class</span>=<span class=\"string\">\"hex\"</span>&gt;</span> </span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">class</span>=<span class=\"string\">\"hexIn\"</span> <span class=\"attr\">href</span>=<span class=\"string\">\"#\"</span>&gt;</span> </span><br><span class=\"line\">  \t\t<span class=\"tag\">&lt;<span class=\"name\">img</span> <span class=\"attr\">src</span>=<span class=\"string\">\"1.png\"</span> <span class=\"attr\">alt</span>=<span class=\"string\">\"\"</span> /&gt;</span></span><br><span class=\"line\">    \t<span class=\"tag\">&lt;<span class=\"name\">h1</span>&gt;</span>title<span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span><br><span class=\"line\">    \t<span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>Some description about this module<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">  \t<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span> </span><br><span class=\"line\">\t<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">li</span> <span class=\"attr\">class</span>=<span class=\"string\">\"hex\"</span>&gt;</span> </span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">class</span>=<span class=\"string\">\"hexIn\"</span> <span class=\"attr\">href</span>=<span class=\"string\">\"#\"</span>&gt;</span> </span><br><span class=\"line\">  \t\t<span class=\"tag\">&lt;<span class=\"name\">img</span> <span class=\"attr\">src</span>=<span class=\"string\">\"1.png\"</span> <span class=\"attr\">alt</span>=<span class=\"string\">\"\"</span> /&gt;</span></span><br><span class=\"line\">    \t<span class=\"tag\">&lt;<span class=\"name\">h1</span>&gt;</span>title<span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span><br><span class=\"line\">    \t<span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>Some description about this module<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">  \t<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span> </span><br><span class=\"line\">\t<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">li</span> <span class=\"attr\">class</span>=<span class=\"string\">\"hex\"</span>&gt;</span> </span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">class</span>=<span class=\"string\">\"hexIn\"</span> <span class=\"attr\">href</span>=<span class=\"string\">\"#\"</span>&gt;</span> </span><br><span class=\"line\">  \t    <span class=\"tag\">&lt;<span class=\"name\">img</span> <span class=\"attr\">src</span>=<span class=\"string\">\"1.png\"</span> <span class=\"attr\">alt</span>=<span class=\"string\">\"\"</span> /&gt;</span></span><br><span class=\"line\">    \t<span class=\"tag\">&lt;<span class=\"name\">h1</span>&gt;</span>title<span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span><br><span class=\"line\">    \t<span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>Some description about this module<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">  \t<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span> </span><br><span class=\"line\">\t<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">li</span> <span class=\"attr\">class</span>=<span class=\"string\">\"hex\"</span>&gt;</span> </span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">class</span>=<span class=\"string\">\"hexIn\"</span> <span class=\"attr\">href</span>=<span class=\"string\">\"#\"</span>&gt;</span> </span><br><span class=\"line\">  \t\t<span class=\"tag\">&lt;<span class=\"name\">img</span> <span class=\"attr\">src</span>=<span class=\"string\">\"1.png\"</span> <span class=\"attr\">alt</span>=<span class=\"string\">\"\"</span> /&gt;</span></span><br><span class=\"line\">    \t<span class=\"tag\">&lt;<span class=\"name\">h1</span>&gt;</span>title<span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span><br><span class=\"line\">    \t<span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>Some description about this module<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">  \t<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span> </span><br><span class=\"line\">\t<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">li</span> <span class=\"attr\">class</span>=<span class=\"string\">\"hex\"</span>&gt;</span> </span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">class</span>=<span class=\"string\">\"hexIn\"</span> <span class=\"attr\">href</span>=<span class=\"string\">\"#\"</span>&gt;</span> </span><br><span class=\"line\">  \t\t<span class=\"tag\">&lt;<span class=\"name\">img</span> <span class=\"attr\">src</span>=<span class=\"string\">\"1.png\"</span> <span class=\"attr\">alt</span>=<span class=\"string\">\"\"</span> /&gt;</span></span><br><span class=\"line\">    \t<span class=\"tag\">&lt;<span class=\"name\">h1</span>&gt;</span>title<span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span><br><span class=\"line\">    \t<span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>Some description about this module<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">  \t<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span> </span><br><span class=\"line\">\t<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">li</span> <span class=\"attr\">class</span>=<span class=\"string\">\"hex\"</span>&gt;</span> </span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">class</span>=<span class=\"string\">\"hexIn\"</span> <span class=\"attr\">href</span>=<span class=\"string\">\"#\"</span>&gt;</span> </span><br><span class=\"line\">  \t\t<span class=\"tag\">&lt;<span class=\"name\">img</span> <span class=\"attr\">src</span>=<span class=\"string\">\"1.png\"</span> <span class=\"attr\">alt</span>=<span class=\"string\">\"\"</span> /&gt;</span></span><br><span class=\"line\">    \t<span class=\"tag\">&lt;<span class=\"name\">h1</span>&gt;</span>title<span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span><br><span class=\"line\">    \t<span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>Some description about this module<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">  \t<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span> </span><br><span class=\"line\">\t<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">li</span> <span class=\"attr\">class</span>=<span class=\"string\">\"hex\"</span>&gt;</span> </span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">class</span>=<span class=\"string\">\"hexIn\"</span> <span class=\"attr\">href</span>=<span class=\"string\">\"#\"</span>&gt;</span> </span><br><span class=\"line\">  \t\t<span class=\"tag\">&lt;<span class=\"name\">img</span> <span class=\"attr\">src</span>=<span class=\"string\">\"1.png\"</span> <span class=\"attr\">alt</span>=<span class=\"string\">\"\"</span> /&gt;</span></span><br><span class=\"line\">    \t<span class=\"tag\">&lt;<span class=\"name\">h1</span>&gt;</span>title<span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span><br><span class=\"line\">    \t<span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>Some description about this module<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">  \t<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span> </span><br><span class=\"line\">\t<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">li</span> <span class=\"attr\">class</span>=<span class=\"string\">\"hex\"</span>&gt;</span> </span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">class</span>=<span class=\"string\">\"hexIn\"</span> <span class=\"attr\">href</span>=<span class=\"string\">\"#\"</span>&gt;</span> </span><br><span class=\"line\">  \t\t<span class=\"tag\">&lt;<span class=\"name\">img</span> <span class=\"attr\">src</span>=<span class=\"string\">\"1.png\"</span> <span class=\"attr\">alt</span>=<span class=\"string\">\"\"</span> /&gt;</span></span><br><span class=\"line\">    \t<span class=\"tag\">&lt;<span class=\"name\">h1</span>&gt;</span>title<span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span><br><span class=\"line\">    \t<span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>Some description about this module<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">  \t<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span> </span><br><span class=\"line\">\t<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">li</span> <span class=\"attr\">class</span>=<span class=\"string\">\"hex\"</span>&gt;</span> </span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">class</span>=<span class=\"string\">\"hexIn\"</span> <span class=\"attr\">href</span>=<span class=\"string\">\"#\"</span>&gt;</span> </span><br><span class=\"line\">  \t\t<span class=\"tag\">&lt;<span class=\"name\">img</span> <span class=\"attr\">src</span>=<span class=\"string\">\"1.png\"</span> <span class=\"attr\">alt</span>=<span class=\"string\">\"\"</span> /&gt;</span></span><br><span class=\"line\">    \t<span class=\"tag\">&lt;<span class=\"name\">h1</span>&gt;</span>title<span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span><br><span class=\"line\">    \t<span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>Some description about this module<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">  \t<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span> </span><br><span class=\"line\">\t<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">ul</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br><span class=\"line\">165</span><br><span class=\"line\">166</span><br><span class=\"line\">167</span><br><span class=\"line\">168</span><br><span class=\"line\">169</span><br><span class=\"line\">170</span><br><span class=\"line\">171</span><br><span class=\"line\">172</span><br><span class=\"line\">173</span><br><span class=\"line\">174</span><br><span class=\"line\">175</span><br><span class=\"line\">176</span><br><span class=\"line\">177</span><br><span class=\"line\">178</span><br><span class=\"line\">179</span><br><span class=\"line\">180</span><br><span class=\"line\">181</span><br><span class=\"line\">182</span><br><span class=\"line\">183</span><br><span class=\"line\">184</span><br><span class=\"line\">185</span><br><span class=\"line\">186</span><br><span class=\"line\">187</span><br><span class=\"line\">188</span><br><span class=\"line\">189</span><br><span class=\"line\">190</span><br><span class=\"line\">191</span><br><span class=\"line\">192</span><br><span class=\"line\">193</span><br><span class=\"line\">194</span><br><span class=\"line\">195</span><br><span class=\"line\">196</span><br><span class=\"line\">197</span><br><span class=\"line\">198</span><br><span class=\"line\">199</span><br><span class=\"line\">200</span><br><span class=\"line\">201</span><br><span class=\"line\">202</span><br><span class=\"line\">203</span><br><span class=\"line\">204</span><br><span class=\"line\">205</span><br><span class=\"line\">206</span><br><span class=\"line\">207</span><br><span class=\"line\">208</span><br><span class=\"line\">209</span><br><span class=\"line\">210</span><br><span class=\"line\">211</span><br><span class=\"line\">212</span><br><span class=\"line\">213</span><br><span class=\"line\">214</span><br><span class=\"line\">215</span><br><span class=\"line\">216</span><br><span class=\"line\">217</span><br><span class=\"line\">218</span><br><span class=\"line\">219</span><br><span class=\"line\">220</span><br><span class=\"line\">221</span><br><span class=\"line\">222</span><br><span class=\"line\">223</span><br><span class=\"line\">224</span><br><span class=\"line\">225</span><br><span class=\"line\">226</span><br><span class=\"line\">227</span><br><span class=\"line\">228</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">* &#123;</span><br><span class=\"line\">    <span class=\"attribute\">margin</span>: <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"attribute\">padding</span>: <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-id\">#hexGrid</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">overflow</span>: hidden;</span><br><span class=\"line\">    <span class=\"attribute\">width</span>: <span class=\"number\">90%</span>;</span><br><span class=\"line\">    <span class=\"attribute\">margin</span>: <span class=\"number\">0</span> auto;</span><br><span class=\"line\">    <span class=\"attribute\">padding</span>:<span class=\"number\">0.866%</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"attribute\">font-family</span>: <span class=\"string\">'Raleway'</span>, sans-serif;</span><br><span class=\"line\">    <span class=\"attribute\">font-size</span>: <span class=\"number\">15px</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-id\">#hexGrid</span><span class=\"selector-pseudo\">:after</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">content</span>: <span class=\"string\">\"\"</span>;</span><br><span class=\"line\">    <span class=\"attribute\">display</span>: block;</span><br><span class=\"line\">    <span class=\"attribute\">clear</span>: both;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-class\">.hex</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">position</span>: relative;</span><br><span class=\"line\">    <span class=\"attribute\">list-style-type</span>: none;</span><br><span class=\"line\">    <span class=\"attribute\">float</span>: left;</span><br><span class=\"line\">    <span class=\"attribute\">overflow</span>: hidden;</span><br><span class=\"line\">    <span class=\"attribute\">visibility</span>: hidden;</span><br><span class=\"line\">    <span class=\"attribute\">outline</span>:<span class=\"number\">1px</span> solid transparent;</span><br><span class=\"line\">            <span class=\"attribute\">transform</span>: <span class=\"built_in\">rotate</span>(-<span class=\"number\">60deg</span>) <span class=\"built_in\">skewY</span>(<span class=\"number\">30deg</span>) <span class=\"built_in\">translatez</span>(-<span class=\"number\">1px</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-class\">.hex</span> * &#123;</span><br><span class=\"line\">    <span class=\"attribute\">position</span>: absolute;</span><br><span class=\"line\">    <span class=\"attribute\">visibility</span>: visible;</span><br><span class=\"line\">    <span class=\"attribute\">outline</span>:<span class=\"number\">1px</span> solid transparent; <span class=\"comment\">/* fix for jagged edges in FF on hover transition */</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-class\">.hexIn</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">display</span>:block;</span><br><span class=\"line\">    <span class=\"attribute\">width</span>: <span class=\"number\">100%</span>;</span><br><span class=\"line\">    <span class=\"attribute\">height</span>: <span class=\"number\">100%</span>;</span><br><span class=\"line\">    <span class=\"attribute\">text-align</span>: center;</span><br><span class=\"line\">    <span class=\"attribute\">color</span>: <span class=\"number\">#fff</span>;</span><br><span class=\"line\">    <span class=\"attribute\">overflow</span>: hidden;</span><br><span class=\"line\">    <span class=\"attribute\">-webkit-transform</span>: <span class=\"built_in\">skewY</span>(-<span class=\"number\">30deg</span>) <span class=\"built_in\">rotate</span>(<span class=\"number\">60deg</span>);</span><br><span class=\"line\">        <span class=\"attribute\">-ms-transform</span>: <span class=\"built_in\">skewY</span>(-<span class=\"number\">30deg</span>) <span class=\"built_in\">rotate</span>(<span class=\"number\">60deg</span>);</span><br><span class=\"line\">            <span class=\"attribute\">transform</span>: <span class=\"built_in\">skewY</span>(-<span class=\"number\">30deg</span>) <span class=\"built_in\">rotate</span>(<span class=\"number\">60deg</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/*** HEX CONTENT **********************************************************************/</span></span><br><span class=\"line\"><span class=\"selector-class\">.hex</span> <span class=\"selector-tag\">img</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">left</span>: -<span class=\"number\">100%</span>;</span><br><span class=\"line\">    <span class=\"attribute\">right</span>: -<span class=\"number\">100%</span>;</span><br><span class=\"line\">    <span class=\"attribute\">width</span>: auto;</span><br><span class=\"line\">    <span class=\"attribute\">height</span>: <span class=\"number\">100%</span>;</span><br><span class=\"line\">    <span class=\"attribute\">margin</span>: <span class=\"number\">0</span> auto;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-class\">.hex</span> <span class=\"selector-tag\">h1</span>, <span class=\"selector-class\">.hex</span> <span class=\"selector-tag\">p</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">width</span>: <span class=\"number\">102%</span>;</span><br><span class=\"line\">    <span class=\"attribute\">left</span>:-<span class=\"number\">1%</span>; <span class=\"comment\">/* prevent line on the right where background doesn't cover image */</span></span><br><span class=\"line\">    <span class=\"attribute\">padding</span>: <span class=\"number\">5%</span>;</span><br><span class=\"line\">    <span class=\"attribute\">box-sizing</span>:border-box;</span><br><span class=\"line\">    <span class=\"attribute\">background-color</span>: <span class=\"built_in\">rgba</span>(<span class=\"number\">0</span>, <span class=\"number\">128</span>, <span class=\"number\">128</span>, <span class=\"number\">0.8</span>);</span><br><span class=\"line\">    <span class=\"attribute\">font-weight</span>: <span class=\"number\">300</span>;</span><br><span class=\"line\">    <span class=\"attribute\">-webkit-transition</span>:  -webkit-transform .<span class=\"number\">2s</span> ease-out, opacity .<span class=\"number\">3s</span> ease-out;</span><br><span class=\"line\">            <span class=\"attribute\">transition</span>:          transform .<span class=\"number\">2s</span> ease-out, opacity .<span class=\"number\">3s</span> ease-out;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-class\">.hex</span> <span class=\"selector-tag\">h1</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">bottom</span>: <span class=\"number\">50%</span>;</span><br><span class=\"line\">    <span class=\"attribute\">padding-top</span>:<span class=\"number\">50%</span>;</span><br><span class=\"line\">    <span class=\"attribute\">font-size</span>: <span class=\"number\">1.5em</span>;</span><br><span class=\"line\">    <span class=\"attribute\">z-index</span>: <span class=\"number\">1</span>;</span><br><span class=\"line\">    <span class=\"attribute\">-webkit-transform</span>:<span class=\"built_in\">translateY</span>(-<span class=\"number\">100%</span>) <span class=\"built_in\">translatez</span>(-<span class=\"number\">1px</span>);</span><br><span class=\"line\">        <span class=\"attribute\">-ms-transform</span>:<span class=\"built_in\">translateY</span>(-<span class=\"number\">100%</span>) <span class=\"built_in\">translatez</span>(-<span class=\"number\">1px</span>);</span><br><span class=\"line\">            <span class=\"attribute\">transform</span>:<span class=\"built_in\">translateY</span>(-<span class=\"number\">100%</span>) <span class=\"built_in\">translatez</span>(-<span class=\"number\">1px</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-class\">.hex</span> <span class=\"selector-tag\">h1</span><span class=\"selector-pseudo\">:after</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">content</span>: <span class=\"string\">''</span>;</span><br><span class=\"line\">    <span class=\"attribute\">position</span>: absolute;</span><br><span class=\"line\">    <span class=\"attribute\">bottom</span>: <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"attribute\">left</span>: <span class=\"number\">45%</span>;</span><br><span class=\"line\">    <span class=\"attribute\">width</span>: <span class=\"number\">10%</span>;</span><br><span class=\"line\">    <span class=\"attribute\">text-align</span>: center;</span><br><span class=\"line\">    <span class=\"attribute\">border-bottom</span>: <span class=\"number\">1px</span> solid <span class=\"number\">#fff</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-class\">.hex</span> <span class=\"selector-tag\">p</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">top</span>: <span class=\"number\">50%</span>;</span><br><span class=\"line\">    <span class=\"attribute\">padding-bottom</span>:<span class=\"number\">50%</span>;</span><br><span class=\"line\">    <span class=\"attribute\">-webkit-transform</span>:<span class=\"built_in\">translateY</span>(<span class=\"number\">100%</span>) <span class=\"built_in\">translatez</span>(-<span class=\"number\">1px</span>);</span><br><span class=\"line\">        <span class=\"attribute\">-ms-transform</span>:<span class=\"built_in\">translateY</span>(<span class=\"number\">100%</span>) <span class=\"built_in\">translatez</span>(-<span class=\"number\">1px</span>);</span><br><span class=\"line\">            <span class=\"attribute\">transform</span>:<span class=\"built_in\">translateY</span>(<span class=\"number\">100%</span>) <span class=\"built_in\">translatez</span>(-<span class=\"number\">1px</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-class\">.hexIn</span><span class=\"selector-pseudo\">:hover</span> <span class=\"selector-tag\">h1</span>, <span class=\"selector-class\">.hexIn</span><span class=\"selector-pseudo\">:focus</span> <span class=\"selector-tag\">h1</span>,</span><br><span class=\"line\"><span class=\"selector-class\">.hexIn</span><span class=\"selector-pseudo\">:hover</span> <span class=\"selector-tag\">p</span>, <span class=\"selector-class\">.hexIn</span><span class=\"selector-pseudo\">:focus</span> <span class=\"selector-tag\">p</span>&#123;</span><br><span class=\"line\">    <span class=\"attribute\">-webkit-transform</span>:<span class=\"built_in\">translateY</span>(<span class=\"number\">0%</span>) <span class=\"built_in\">translatez</span>(-<span class=\"number\">1px</span>);</span><br><span class=\"line\">        <span class=\"attribute\">-ms-transform</span>:<span class=\"built_in\">translateY</span>(<span class=\"number\">0%</span>) <span class=\"built_in\">translatez</span>(-<span class=\"number\">1px</span>);</span><br><span class=\"line\">            <span class=\"attribute\">transform</span>:<span class=\"built_in\">translateY</span>(<span class=\"number\">0%</span>) <span class=\"built_in\">translatez</span>(-<span class=\"number\">1px</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">@media</span> (<span class=\"attribute\">min-width:</span><span class=\"number\">1201px</span>) &#123; <span class=\"comment\">/* &lt;- 5-4  hexagons per row */</span></span><br><span class=\"line\">    <span class=\"selector-class\">.hex</span> &#123;</span><br><span class=\"line\">        <span class=\"attribute\">width</span>: <span class=\"number\">19.2%</span>; <span class=\"comment\">/* = (100-4) / 5 */</span></span><br><span class=\"line\">        <span class=\"attribute\">padding-bottom</span>: <span class=\"number\">22.170%</span>; <span class=\"comment\">/* =  width / sin(60deg) */</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"selector-class\">.hex</span><span class=\"selector-pseudo\">:nth-child(9n+6)</span>,</span><br><span class=\"line\">    <span class=\"selector-class\">.hex</span><span class=\"selector-pseudo\">:nth-child(9n+7)</span>,</span><br><span class=\"line\">    <span class=\"selector-class\">.hex</span><span class=\"selector-pseudo\">:nth-child(9n+8)</span>,</span><br><span class=\"line\">    <span class=\"selector-class\">.hex</span><span class=\"selector-pseudo\">:nth-child(9n+9)</span> &#123;</span><br><span class=\"line\">        <span class=\"attribute\">margin-top</span>: -<span class=\"number\">4.676%</span>;</span><br><span class=\"line\">        <span class=\"attribute\">margin-bottom</span>: -<span class=\"number\">4.676%</span>;</span><br><span class=\"line\">        <span class=\"attribute\">-webkit-transform</span>: <span class=\"built_in\">translateX</span>(<span class=\"number\">50%</span>) <span class=\"built_in\">rotate</span>(-<span class=\"number\">60deg</span>) <span class=\"built_in\">skewY</span>(<span class=\"number\">30deg</span>);</span><br><span class=\"line\">            <span class=\"attribute\">-ms-transform</span>: <span class=\"built_in\">translateX</span>(<span class=\"number\">50%</span>) <span class=\"built_in\">rotate</span>(-<span class=\"number\">60deg</span>) <span class=\"built_in\">skewY</span>(<span class=\"number\">30deg</span>);</span><br><span class=\"line\">                <span class=\"attribute\">transform</span>: <span class=\"built_in\">translateX</span>(<span class=\"number\">50%</span>) <span class=\"built_in\">rotate</span>(-<span class=\"number\">60deg</span>) <span class=\"built_in\">skewY</span>(<span class=\"number\">30deg</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"selector-class\">.hex</span><span class=\"selector-pseudo\">:nth-child(9n+6)</span><span class=\"selector-pseudo\">:last-child</span>,</span><br><span class=\"line\">    <span class=\"selector-class\">.hex</span><span class=\"selector-pseudo\">:nth-child(9n+7)</span><span class=\"selector-pseudo\">:last-child</span>,</span><br><span class=\"line\">    <span class=\"selector-class\">.hex</span><span class=\"selector-pseudo\">:nth-child(9n+8)</span><span class=\"selector-pseudo\">:last-child</span>,</span><br><span class=\"line\">    <span class=\"selector-class\">.hex</span><span class=\"selector-pseudo\">:nth-child(9n+9)</span><span class=\"selector-pseudo\">:last-child</span> &#123;</span><br><span class=\"line\">        <span class=\"attribute\">margin-bottom</span>: <span class=\"number\">0</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"selector-class\">.hex</span><span class=\"selector-pseudo\">:nth-child(9n+6)</span> &#123;</span><br><span class=\"line\">        <span class=\"attribute\">margin-left</span>: <span class=\"number\">0.5%</span>;</span><br><span class=\"line\">        <span class=\"attribute\">clear</span>: left;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"selector-class\">.hex</span><span class=\"selector-pseudo\">:nth-child(9n+10)</span> &#123;</span><br><span class=\"line\">        <span class=\"attribute\">clear</span>: left;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"selector-class\">.hex</span><span class=\"selector-pseudo\">:nth-child(9n+2)</span>,</span><br><span class=\"line\">    <span class=\"selector-class\">.hex</span><span class=\"selector-pseudo\">:nth-child(9n+</span> 7) &#123;</span><br><span class=\"line\">        <span class=\"attribute\">margin-left</span>: <span class=\"number\">1%</span>;</span><br><span class=\"line\">        <span class=\"attribute\">margin-right</span>: <span class=\"number\">1%</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"selector-class\">.hex</span><span class=\"selector-pseudo\">:nth-child(9n+3)</span>,</span><br><span class=\"line\">    <span class=\"selector-class\">.hex</span><span class=\"selector-pseudo\">:nth-child(9n+4)</span>,</span><br><span class=\"line\">    <span class=\"selector-class\">.hex</span><span class=\"selector-pseudo\">:nth-child(9n+8)</span> &#123;</span><br><span class=\"line\">        <span class=\"attribute\">margin-right</span>: <span class=\"number\">1%</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">@media</span> (<span class=\"attribute\">max-width:</span> <span class=\"number\">1200px</span>) <span class=\"keyword\">and</span> (<span class=\"attribute\">min-width:</span><span class=\"number\">901px</span>) &#123;<span class=\"comment\">/* &lt;- 4-3  hexagons per row */</span></span><br><span class=\"line\">    <span class=\"selector-class\">.hex</span> &#123;</span><br><span class=\"line\">        <span class=\"attribute\">width</span>: <span class=\"number\">24.25%</span>; <span class=\"comment\">/* = (100-3) / 4 */</span></span><br><span class=\"line\">        <span class=\"attribute\">padding-bottom</span>: <span class=\"number\">28.001%</span>; <span class=\"comment\">/* =  width / sin(60deg) */</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"selector-class\">.hex</span><span class=\"selector-pseudo\">:nth-child(7n+5)</span>,</span><br><span class=\"line\">    <span class=\"selector-class\">.hex</span><span class=\"selector-pseudo\">:nth-child(7n+6)</span>,</span><br><span class=\"line\">    <span class=\"selector-class\">.hex</span><span class=\"selector-pseudo\">:nth-child(7n+7)</span> &#123;</span><br><span class=\"line\">        <span class=\"attribute\">margin-top</span>: -<span class=\"number\">6.134%</span>;</span><br><span class=\"line\">        <span class=\"attribute\">margin-bottom</span>: -<span class=\"number\">6.134%</span>;</span><br><span class=\"line\">        <span class=\"attribute\">-webkit-transform</span>: <span class=\"built_in\">translateX</span>(<span class=\"number\">50%</span>) <span class=\"built_in\">rotate</span>(-<span class=\"number\">60deg</span>) <span class=\"built_in\">skewY</span>(<span class=\"number\">30deg</span>);</span><br><span class=\"line\">            <span class=\"attribute\">-ms-transform</span>: <span class=\"built_in\">translateX</span>(<span class=\"number\">50%</span>) <span class=\"built_in\">rotate</span>(-<span class=\"number\">60deg</span>) <span class=\"built_in\">skewY</span>(<span class=\"number\">30deg</span>);</span><br><span class=\"line\">                <span class=\"attribute\">transform</span>: <span class=\"built_in\">translateX</span>(<span class=\"number\">50%</span>) <span class=\"built_in\">rotate</span>(-<span class=\"number\">60deg</span>) <span class=\"built_in\">skewY</span>(<span class=\"number\">30deg</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"selector-class\">.hex</span><span class=\"selector-pseudo\">:nth-child(7n+5)</span><span class=\"selector-pseudo\">:last-child</span>,</span><br><span class=\"line\">    <span class=\"selector-class\">.hex</span><span class=\"selector-pseudo\">:nth-child(7n+6)</span><span class=\"selector-pseudo\">:last-child</span>,</span><br><span class=\"line\">    <span class=\"selector-class\">.hex</span><span class=\"selector-pseudo\">:nth-child(7n+7)</span><span class=\"selector-pseudo\">:last-child</span> &#123;</span><br><span class=\"line\">        <span class=\"attribute\">margin-bottom</span>: <span class=\"number\">0</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"selector-class\">.hex</span><span class=\"selector-pseudo\">:nth-child(7n+2)</span>,</span><br><span class=\"line\">    <span class=\"selector-class\">.hex</span><span class=\"selector-pseudo\">:nth-child(7n+6)</span> &#123;</span><br><span class=\"line\">        <span class=\"attribute\">margin-left</span>: <span class=\"number\">1%</span>;</span><br><span class=\"line\">        <span class=\"attribute\">margin-right</span>: <span class=\"number\">1%</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"selector-class\">.hex</span><span class=\"selector-pseudo\">:nth-child(7n+3)</span> &#123;</span><br><span class=\"line\">        <span class=\"attribute\">margin-right</span>: <span class=\"number\">1%</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"selector-class\">.hex</span><span class=\"selector-pseudo\">:nth-child(7n+8)</span> &#123;</span><br><span class=\"line\">        <span class=\"attribute\">clear</span>: left;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"selector-class\">.hex</span><span class=\"selector-pseudo\">:nth-child(7n+5)</span> &#123;</span><br><span class=\"line\">        <span class=\"attribute\">clear</span>: left;</span><br><span class=\"line\">        <span class=\"attribute\">margin-left</span>: <span class=\"number\">0.5%</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">@media</span> (<span class=\"attribute\">max-width:</span> <span class=\"number\">900px</span>) <span class=\"keyword\">and</span> (<span class=\"attribute\">min-width:</span><span class=\"number\">601px</span>) &#123; <span class=\"comment\">/* &lt;- 3-2  hexagons per row */</span></span><br><span class=\"line\">    <span class=\"selector-class\">.hex</span> &#123;</span><br><span class=\"line\">        <span class=\"attribute\">width</span>: <span class=\"number\">32.666%</span>; <span class=\"comment\">/* = (100-2) / 3 */</span></span><br><span class=\"line\">        <span class=\"attribute\">padding-bottom</span>: <span class=\"number\">37.720%</span>; <span class=\"comment\">/* =  width / sin(60) */</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"selector-class\">.hex</span><span class=\"selector-pseudo\">:nth-child(5n+4)</span>,</span><br><span class=\"line\">    <span class=\"selector-class\">.hex</span><span class=\"selector-pseudo\">:nth-child(5n+5)</span> &#123;</span><br><span class=\"line\">        <span class=\"attribute\">margin-top</span>: -<span class=\"number\">8.564%</span>;</span><br><span class=\"line\">        <span class=\"attribute\">margin-bottom</span>: -<span class=\"number\">8.564%</span>;</span><br><span class=\"line\">        <span class=\"attribute\">-webkit-transform</span>: <span class=\"built_in\">translateX</span>(<span class=\"number\">50%</span>) <span class=\"built_in\">rotate</span>(-<span class=\"number\">60deg</span>) <span class=\"built_in\">skewY</span>(<span class=\"number\">30deg</span>);</span><br><span class=\"line\">            <span class=\"attribute\">-ms-transform</span>: <span class=\"built_in\">translateX</span>(<span class=\"number\">50%</span>) <span class=\"built_in\">rotate</span>(-<span class=\"number\">60deg</span>) <span class=\"built_in\">skewY</span>(<span class=\"number\">30deg</span>);</span><br><span class=\"line\">                <span class=\"attribute\">transform</span>: <span class=\"built_in\">translateX</span>(<span class=\"number\">50%</span>) <span class=\"built_in\">rotate</span>(-<span class=\"number\">60deg</span>) <span class=\"built_in\">skewY</span>(<span class=\"number\">30deg</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"selector-class\">.hex</span><span class=\"selector-pseudo\">:nth-child(5n+4)</span><span class=\"selector-pseudo\">:last-child</span>,</span><br><span class=\"line\">    <span class=\"selector-class\">.hex</span><span class=\"selector-pseudo\">:nth-child(5n+5)</span><span class=\"selector-pseudo\">:last-child</span> &#123;</span><br><span class=\"line\">        <span class=\"attribute\">margin-bottom</span>: <span class=\"number\">0</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"selector-class\">.hex</span><span class=\"selector-pseudo\">:nth-child(5n+4)</span> &#123;</span><br><span class=\"line\">        <span class=\"attribute\">margin-right</span>: <span class=\"number\">1%</span>;</span><br><span class=\"line\">        <span class=\"attribute\">margin-left</span>: <span class=\"number\">0.5%</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"selector-class\">.hex</span><span class=\"selector-pseudo\">:nth-child(5n+2)</span> &#123;</span><br><span class=\"line\">        <span class=\"attribute\">margin-left</span>: <span class=\"number\">1%</span>;</span><br><span class=\"line\">        <span class=\"attribute\">margin-right</span>: <span class=\"number\">1%</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"selector-class\">.hex</span><span class=\"selector-pseudo\">:nth-child(5n+6)</span> &#123;</span><br><span class=\"line\">        <span class=\"attribute\">clear</span>: left;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">@media</span> (<span class=\"attribute\">max-width:</span> <span class=\"number\">600px</span>) &#123; <span class=\"comment\">/* &lt;- 2-1  hexagons per row */</span></span><br><span class=\"line\">    <span class=\"selector-class\">.hex</span> &#123;</span><br><span class=\"line\">        <span class=\"attribute\">width</span>: <span class=\"number\">49.5%</span>; <span class=\"comment\">/* = (100-1) / 2 */</span></span><br><span class=\"line\">        <span class=\"attribute\">padding-bottom</span>: <span class=\"number\">57.158%</span>; <span class=\"comment\">/* =  width / sin(60) */</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"selector-class\">.hex</span><span class=\"selector-pseudo\">:nth-child(3n+3)</span> &#123;</span><br><span class=\"line\">        <span class=\"attribute\">margin-top</span>: -<span class=\"number\">13.423%</span>;</span><br><span class=\"line\">        <span class=\"attribute\">margin-bottom</span>: -<span class=\"number\">13.423%</span>;</span><br><span class=\"line\">        <span class=\"attribute\">-webkit-transform</span>: <span class=\"built_in\">translateX</span>(<span class=\"number\">50%</span>) <span class=\"built_in\">rotate</span>(-<span class=\"number\">60deg</span>) <span class=\"built_in\">skewY</span>(<span class=\"number\">30deg</span>);</span><br><span class=\"line\">            <span class=\"attribute\">-ms-transform</span>: <span class=\"built_in\">translateX</span>(<span class=\"number\">50%</span>) <span class=\"built_in\">rotate</span>(-<span class=\"number\">60deg</span>) <span class=\"built_in\">skewY</span>(<span class=\"number\">30deg</span>);</span><br><span class=\"line\">                <span class=\"attribute\">transform</span>: <span class=\"built_in\">translateX</span>(<span class=\"number\">50%</span>) <span class=\"built_in\">rotate</span>(-<span class=\"number\">60deg</span>) <span class=\"built_in\">skewY</span>(<span class=\"number\">30deg</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"selector-class\">.hex</span><span class=\"selector-pseudo\">:nth-child(3n+3)</span><span class=\"selector-pseudo\">:last-child</span> &#123;</span><br><span class=\"line\">        <span class=\"attribute\">margin-bottom</span>: <span class=\"number\">0</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"selector-class\">.hex</span><span class=\"selector-pseudo\">:nth-child(3n+3)</span> &#123;</span><br><span class=\"line\">        <span class=\"attribute\">margin-left</span>: <span class=\"number\">0.5%</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"selector-class\">.hex</span><span class=\"selector-pseudo\">:nth-child(3n+2)</span> &#123;</span><br><span class=\"line\">        <span class=\"attribute\">margin-left</span>: <span class=\"number\">1%</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"selector-class\">.hex</span><span class=\"selector-pseudo\">:nth-child(3n+4)</span> &#123;</span><br><span class=\"line\">        <span class=\"attribute\">clear</span>: left;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">@media</span> (<span class=\"attribute\">max-width:</span> <span class=\"number\">400px</span>) &#123;</span><br><span class=\"line\">    <span class=\"selector-id\">#hexGrid</span> &#123;</span><br><span class=\"line\">        <span class=\"attribute\">font-size</span>: <span class=\"number\">13px</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"通过css切片实现\"><a href=\"#通过css切片实现\" class=\"headerlink\" title=\"通过css切片实现\"></a>通过css切片实现</h2><blockquote>\n<ul>\n<li>思路：利用css切片实现六边形</li>\n<li>优点：方便扩展，结构简单</li>\n<li>缺点：兼容性差，学习曲线陡峭</li>\n</ul>\n</blockquote>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"meta-keyword\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">style</span> <span class=\"attr\">type</span>=<span class=\"string\">\"text/css\"</span>&gt;</span></span><br><span class=\"line\">    img&#123;</span><br><span class=\"line\"><span class=\"css\">      <span class=\"selector-tag\">clip-path</span>: <span class=\"selector-tag\">polygon</span>(25<span class=\"selector-class\">.8</span>% 0,75<span class=\"selector-class\">.8</span>% 0,100% 44%,75<span class=\"selector-class\">.8</span>% 87<span class=\"selector-class\">.8</span>%,25<span class=\"selector-class\">.8</span>% 87<span class=\"selector-class\">.8</span>%, 0 50%,25<span class=\"selector-class\">.8</span>% 0);</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">img</span> <span class=\"attr\">src</span>=<span class=\"string\">\"http://www.jq22.com/demo/css3-image-grid-layout201703082234/img/6.png\"</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"others\"><a href=\"#others\" class=\"headerlink\" title=\"others\"></a>others</h2><p>还有另外svg、canvas的解决办法，可以自行学习。</p>\n<ul>\n<li><a href=\"https://developer.mozilla.org/zh-CN/docs/Web/SVG/Tutorial\" target=\"_blank\" rel=\"noopener\">svg</a></li>\n<li><a href=\"https://developer.mozilla.org/zh-CN/docs/Web/API/Canvas_API\" target=\"_blank\" rel=\"noopener\">canvas</a></li>\n<li></li>\n</ul>\n"},{"title":"前端配合微信授权","date":"2018-01-12T08:21:52.000Z","description":"微信授权前端配合工作小记","_content":"## 写在前面\n最近做了一个微信的活动，功能主要是好友之间互相投票。所以需要进行微信的授权。因为是第一次接触，所以记录下来备不时之需。**这篇博客主要参考官方[微信公众平台技术文档](https://mp.weixin.qq.com/wiki)，由于官方文档前后端教程混杂不方便阅读。所以整理出来这一篇。** \n### 关于网页授权回调域名的说明\n+ 在微信公众号请求用户网页授权之前，开发者需要先到公众平台官网中的“开发 - 接口权限 - 网页服务 - 网页帐号 - 网页授权获取用户基本信息”的配置选项中，修改授权回调域名。请注意，这里填写的是域名（是一个字符串），而不是URL，因此请勿加 http:// 等协议头。\n+ 授权回调域名配置规范为全域名，比如需要网页授权的域名为：www.qq.com，配置以后此域名下面的页面http://www.qq.com/music.html 、 http://www.qq.com/login.html 都可以进行OAuth2.0鉴权。但http://pay.qq.com 、 http://music.qq.com 、 http://qq.com无法进行OAuth2.0鉴权。\n\n### 关于网页授权的两种scope的区别说明\n+ 以snsapi_base为scope发起的网页授权，是用来获取进入页面的用户的openid的，并且是静默授权并自动跳转到回调页的。用户感知的就是直接进入了回调页（往往是业务页面）\n+ 以snsapi_userinfo为scope发起的网页授权，是用来获取用户的基本信息的。但这种授权需要用户手动同意，并且由于用户同意过，所以无须关注，就可在授权后获取该用户的基本信息。\n\n### 关于网页授权access_token和普通access_token的区别\n+ 微信网页授权是通过OAuth2.0机制实现的，在用户授权给公众号后，公众号可以获取到一个网页授权特有的接口调用凭证（网页授权access_token），通过网页授权access_token可以进行授权后接口调用，如获取用户基本信息；\n+ 其他微信接口，需要通过基础支持中的“获取access_token”接口来获取到的普通access_token调用。\n\n## 授权步骤\n### 用户同意授权，获取code\n在确保微信公众账号拥有授权作用域（scope参数）的权限的前提下（服务号获得高级接口后，默认拥有scope参数中的snsapi_base和snsapi_userinfo），引导关注者打开如下页面：\n`https://open.weixin.qq.com/connect/oauth2/authorize?appid=APPID&redirect_uri=REDIRECT_URI&response_type=code&scope=SCOPE&state=STATE#wechat_redirect`。若提示“该链接无法访问”，请检查参数是否填写错误，是否拥有scope参数对应的授权作用域权限；并且由于授权操作安全等级较高，所以在发起授权请求时，微信会对授权链接做正则强匹配校验，如果链接的参数顺序不对，授权页面将无法正常访问。\n \n| 参数| 是否必填|参数说明/\n|:---:|:---:|:---:|\n| appid | 是 | 公众号的唯一标识 |\n| redirect_uri | 是\t| 授权后重定向的回调链接地址， 需要使用[urlEncode](http://tool.chinaz.com/Tools/urlencode.aspx)对链接进行处理 |\n| response_type | 是 | 返回类型，请填写code |\n| scope | 是 | 应用授权作用域，snsapi_base （不弹出授权页面，直接跳转，只能获取用户openid），snsapi_userinfo （弹出授权页面，可通过openid拿到昵称、性别、所在地。并且， 即使在未关注的情况下，只要用户授权，也能获取其信息 ） |\n| state | 否 | 重定向后会带上state参数，开发者可以填写a-zA-Z0-9的参数值，最多128字节 |\n| #wechat_redirect | 是 | 无论直接打开还是做页面302重定向时候，必须带此参数 |\n\n参考链接\n```\nscope为snsapi_base\nhttps://open.weixin.qq.com/connect/oauth2/authorize?\nappid=wx520c15f417810387\n&redirect_uri=https%3A%2F%2Fchong.qq.com%2Fphp%2Findex.php%3Fd%3D%26c%3DwxAdapter%26m%3DmobileDeal%26showwxpaytitle%3D1%26vb2ctag%3D4_2030_5_1194_60\n&response_type=code\n&scope=snsapi_base\n&state=123\n#wechat_redirect\n \n\nscope为snsapi_userinfo\nhttps://open.weixin.qq.com/connect/oauth2/authorize?\nappid=wx6ec33e01876afb1e\n&redirect_uri=http%3a%2f%2fh5.dpandora.cn%2fpromote%2fhelp_index.html\n&response_type=code\n&scope=snsapi_userinfo\n&state=STATE\n#wechat_redirect\n```\n如果同意授权，页面将跳转至 redirect_uri/?code=CODE&state=STATE。 把code传给server，server会通过code获取授权access_token，获取用户信息。\n\n### 使用jssdk\n#### 步骤一：绑定域名\n先登录微信公众平台进入“公众号设置”的“功能设置”里填写“JS接口安全域名”。\n\n#### 步骤二：引入JS文件\n在需要调用JS接口的页面引入如下JS文件，（支持https）：http://res.wx.qq.com/open/js/jweixin-1.2.0.js\n\n#### 步骤三：通过config接口注入权限验证配置\n所有需要使用JS-SDK的页面必须先注入配置信息，否则将无法调用（同一个url仅需调用一次，对于变化url的SPA的web app可在每次url变化时进行调用,目前Android微信客户端不支持pushState的H5新特性，所以使用pushState来实现web app的页面会导致签名失败，此问题会在Android6.2中修复）。通过接口获取签名。\n\n```\nwx.config({\n    debug: true, // 开启调试模式,调用的所有api的返回值会在客户端alert出来。\n    appId: '', // 必填，公众号的唯一标识\n    timestamp: , // 必填，生成签名的时间戳\n    nonceStr: '', // 必填，生成签名的随机串\n    signature: '',// 必填，签名\n    jsApiList: [] // 必填，需要使用的JS接口列表\n});\n```\n#### 步骤四：通过ready接口处理成功验证\nconfig信息验证后会执行ready方法，所有接口调用都必须在config接口获得结果之后，config是一个客户端的异步操作，所以如果需要在页面加载时就调用相关接口，则须把相关接口放在ready函数中调用来确保正确执行。对于用户触发时才调用的接口，则可以直接调用，不需要放在ready函数中。\n## 其他问题\n### config:invalid signature\n出现这个错误的原因一定是签名错误。原因可能有以下几种情况，可以逐一排查：\n+ 确认签名算法是否正确，可用 http://mp.weixin.qq.com/debug/cgi-bin/sandbox?t=jsapisign 页面工具进行校验。\n+ 确认config中nonceStr（js中驼峰标准大写S）, timestamp（没有驼峰标准）。\n+ 确认url格式。签名的url是页面完整的url，包括'http(s)://'部分以及'？'后面的GET参数部分,但不包括'#'hash后面的部分。\n+ 确认 config 中的 appid 与用来获取 jsapi_ticket 的 appid 一致。\n+ 确保一定缓存access_token和jsapi_ticket。\n+ 确保你获取用来签名的url是动态获取的，动态页面可参见实例代码中php的实现方式。如果是html的静态页面在前端通过ajax将url传到后台签名，前端需要用js获取当前页面除去'#'hash部分的链接（可用location.href.split('#')[0]获取,而且需要encodeURIComponent），因为页面一旦分享，微信客户端会在你的链接末尾加入其它参数，如果不是动态获取当前链接，将导致分享后的页面签名失败。\n\n### 获取用户昵称的特殊符号\n有些用户的昵称中包含有非ASCLL字符，包括编码外的图像以及文字。可以使用base64进行处理。","source":"_posts/前端配合微信授权.md","raw":"title: 前端配合微信授权\ntags: [WeChat]\ndate: 2018-01-12 16:21:52\ncategories: [WeChat]\ndescription: 微信授权前端配合工作小记\n---\n## 写在前面\n最近做了一个微信的活动，功能主要是好友之间互相投票。所以需要进行微信的授权。因为是第一次接触，所以记录下来备不时之需。**这篇博客主要参考官方[微信公众平台技术文档](https://mp.weixin.qq.com/wiki)，由于官方文档前后端教程混杂不方便阅读。所以整理出来这一篇。** \n### 关于网页授权回调域名的说明\n+ 在微信公众号请求用户网页授权之前，开发者需要先到公众平台官网中的“开发 - 接口权限 - 网页服务 - 网页帐号 - 网页授权获取用户基本信息”的配置选项中，修改授权回调域名。请注意，这里填写的是域名（是一个字符串），而不是URL，因此请勿加 http:// 等协议头。\n+ 授权回调域名配置规范为全域名，比如需要网页授权的域名为：www.qq.com，配置以后此域名下面的页面http://www.qq.com/music.html 、 http://www.qq.com/login.html 都可以进行OAuth2.0鉴权。但http://pay.qq.com 、 http://music.qq.com 、 http://qq.com无法进行OAuth2.0鉴权。\n\n### 关于网页授权的两种scope的区别说明\n+ 以snsapi_base为scope发起的网页授权，是用来获取进入页面的用户的openid的，并且是静默授权并自动跳转到回调页的。用户感知的就是直接进入了回调页（往往是业务页面）\n+ 以snsapi_userinfo为scope发起的网页授权，是用来获取用户的基本信息的。但这种授权需要用户手动同意，并且由于用户同意过，所以无须关注，就可在授权后获取该用户的基本信息。\n\n### 关于网页授权access_token和普通access_token的区别\n+ 微信网页授权是通过OAuth2.0机制实现的，在用户授权给公众号后，公众号可以获取到一个网页授权特有的接口调用凭证（网页授权access_token），通过网页授权access_token可以进行授权后接口调用，如获取用户基本信息；\n+ 其他微信接口，需要通过基础支持中的“获取access_token”接口来获取到的普通access_token调用。\n\n## 授权步骤\n### 用户同意授权，获取code\n在确保微信公众账号拥有授权作用域（scope参数）的权限的前提下（服务号获得高级接口后，默认拥有scope参数中的snsapi_base和snsapi_userinfo），引导关注者打开如下页面：\n`https://open.weixin.qq.com/connect/oauth2/authorize?appid=APPID&redirect_uri=REDIRECT_URI&response_type=code&scope=SCOPE&state=STATE#wechat_redirect`。若提示“该链接无法访问”，请检查参数是否填写错误，是否拥有scope参数对应的授权作用域权限；并且由于授权操作安全等级较高，所以在发起授权请求时，微信会对授权链接做正则强匹配校验，如果链接的参数顺序不对，授权页面将无法正常访问。\n \n| 参数| 是否必填|参数说明/\n|:---:|:---:|:---:|\n| appid | 是 | 公众号的唯一标识 |\n| redirect_uri | 是\t| 授权后重定向的回调链接地址， 需要使用[urlEncode](http://tool.chinaz.com/Tools/urlencode.aspx)对链接进行处理 |\n| response_type | 是 | 返回类型，请填写code |\n| scope | 是 | 应用授权作用域，snsapi_base （不弹出授权页面，直接跳转，只能获取用户openid），snsapi_userinfo （弹出授权页面，可通过openid拿到昵称、性别、所在地。并且， 即使在未关注的情况下，只要用户授权，也能获取其信息 ） |\n| state | 否 | 重定向后会带上state参数，开发者可以填写a-zA-Z0-9的参数值，最多128字节 |\n| #wechat_redirect | 是 | 无论直接打开还是做页面302重定向时候，必须带此参数 |\n\n参考链接\n```\nscope为snsapi_base\nhttps://open.weixin.qq.com/connect/oauth2/authorize?\nappid=wx520c15f417810387\n&redirect_uri=https%3A%2F%2Fchong.qq.com%2Fphp%2Findex.php%3Fd%3D%26c%3DwxAdapter%26m%3DmobileDeal%26showwxpaytitle%3D1%26vb2ctag%3D4_2030_5_1194_60\n&response_type=code\n&scope=snsapi_base\n&state=123\n#wechat_redirect\n \n\nscope为snsapi_userinfo\nhttps://open.weixin.qq.com/connect/oauth2/authorize?\nappid=wx6ec33e01876afb1e\n&redirect_uri=http%3a%2f%2fh5.dpandora.cn%2fpromote%2fhelp_index.html\n&response_type=code\n&scope=snsapi_userinfo\n&state=STATE\n#wechat_redirect\n```\n如果同意授权，页面将跳转至 redirect_uri/?code=CODE&state=STATE。 把code传给server，server会通过code获取授权access_token，获取用户信息。\n\n### 使用jssdk\n#### 步骤一：绑定域名\n先登录微信公众平台进入“公众号设置”的“功能设置”里填写“JS接口安全域名”。\n\n#### 步骤二：引入JS文件\n在需要调用JS接口的页面引入如下JS文件，（支持https）：http://res.wx.qq.com/open/js/jweixin-1.2.0.js\n\n#### 步骤三：通过config接口注入权限验证配置\n所有需要使用JS-SDK的页面必须先注入配置信息，否则将无法调用（同一个url仅需调用一次，对于变化url的SPA的web app可在每次url变化时进行调用,目前Android微信客户端不支持pushState的H5新特性，所以使用pushState来实现web app的页面会导致签名失败，此问题会在Android6.2中修复）。通过接口获取签名。\n\n```\nwx.config({\n    debug: true, // 开启调试模式,调用的所有api的返回值会在客户端alert出来。\n    appId: '', // 必填，公众号的唯一标识\n    timestamp: , // 必填，生成签名的时间戳\n    nonceStr: '', // 必填，生成签名的随机串\n    signature: '',// 必填，签名\n    jsApiList: [] // 必填，需要使用的JS接口列表\n});\n```\n#### 步骤四：通过ready接口处理成功验证\nconfig信息验证后会执行ready方法，所有接口调用都必须在config接口获得结果之后，config是一个客户端的异步操作，所以如果需要在页面加载时就调用相关接口，则须把相关接口放在ready函数中调用来确保正确执行。对于用户触发时才调用的接口，则可以直接调用，不需要放在ready函数中。\n## 其他问题\n### config:invalid signature\n出现这个错误的原因一定是签名错误。原因可能有以下几种情况，可以逐一排查：\n+ 确认签名算法是否正确，可用 http://mp.weixin.qq.com/debug/cgi-bin/sandbox?t=jsapisign 页面工具进行校验。\n+ 确认config中nonceStr（js中驼峰标准大写S）, timestamp（没有驼峰标准）。\n+ 确认url格式。签名的url是页面完整的url，包括'http(s)://'部分以及'？'后面的GET参数部分,但不包括'#'hash后面的部分。\n+ 确认 config 中的 appid 与用来获取 jsapi_ticket 的 appid 一致。\n+ 确保一定缓存access_token和jsapi_ticket。\n+ 确保你获取用来签名的url是动态获取的，动态页面可参见实例代码中php的实现方式。如果是html的静态页面在前端通过ajax将url传到后台签名，前端需要用js获取当前页面除去'#'hash部分的链接（可用location.href.split('#')[0]获取,而且需要encodeURIComponent），因为页面一旦分享，微信客户端会在你的链接末尾加入其它参数，如果不是动态获取当前链接，将导致分享后的页面签名失败。\n\n### 获取用户昵称的特殊符号\n有些用户的昵称中包含有非ASCLL字符，包括编码外的图像以及文字。可以使用base64进行处理。","slug":"前端配合微信授权","published":1,"updated":"2021-06-25T11:19:55.449Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckqc904pj002jwotvrtjqbmpl","content":"<h2 id=\"写在前面\"><a href=\"#写在前面\" class=\"headerlink\" title=\"写在前面\"></a>写在前面</h2><p>最近做了一个微信的活动，功能主要是好友之间互相投票。所以需要进行微信的授权。因为是第一次接触，所以记录下来备不时之需。<strong>这篇博客主要参考官方<a href=\"https://mp.weixin.qq.com/wiki\" target=\"_blank\" rel=\"noopener\">微信公众平台技术文档</a>，由于官方文档前后端教程混杂不方便阅读。所以整理出来这一篇。</strong> </p>\n<h3 id=\"关于网页授权回调域名的说明\"><a href=\"#关于网页授权回调域名的说明\" class=\"headerlink\" title=\"关于网页授权回调域名的说明\"></a>关于网页授权回调域名的说明</h3><ul>\n<li>在微信公众号请求用户网页授权之前，开发者需要先到公众平台官网中的“开发 - 接口权限 - 网页服务 - 网页帐号 - 网页授权获取用户基本信息”的配置选项中，修改授权回调域名。请注意，这里填写的是域名（是一个字符串），而不是URL，因此请勿加 http:// 等协议头。</li>\n<li>授权回调域名配置规范为全域名，比如需要网页授权的域名为：<a href=\"http://www.qq.com，配置以后此域名下面的页面http://www.qq.com/music.html\" target=\"_blank\" rel=\"noopener\">www.qq.com，配置以后此域名下面的页面http://www.qq.com/music.html</a> 、 <a href=\"http://www.qq.com/login.html\" target=\"_blank\" rel=\"noopener\">http://www.qq.com/login.html</a> 都可以进行OAuth2.0鉴权。但<a href=\"http://pay.qq.com\" target=\"_blank\" rel=\"noopener\">http://pay.qq.com</a> 、 <a href=\"http://music.qq.com\" target=\"_blank\" rel=\"noopener\">http://music.qq.com</a> 、 <a href=\"http://qq.com无法进行OAuth2.0鉴权。\" target=\"_blank\" rel=\"noopener\">http://qq.com无法进行OAuth2.0鉴权。</a></li>\n</ul>\n<h3 id=\"关于网页授权的两种scope的区别说明\"><a href=\"#关于网页授权的两种scope的区别说明\" class=\"headerlink\" title=\"关于网页授权的两种scope的区别说明\"></a>关于网页授权的两种scope的区别说明</h3><ul>\n<li>以snsapi_base为scope发起的网页授权，是用来获取进入页面的用户的openid的，并且是静默授权并自动跳转到回调页的。用户感知的就是直接进入了回调页（往往是业务页面）</li>\n<li>以snsapi_userinfo为scope发起的网页授权，是用来获取用户的基本信息的。但这种授权需要用户手动同意，并且由于用户同意过，所以无须关注，就可在授权后获取该用户的基本信息。</li>\n</ul>\n<h3 id=\"关于网页授权access-token和普通access-token的区别\"><a href=\"#关于网页授权access-token和普通access-token的区别\" class=\"headerlink\" title=\"关于网页授权access_token和普通access_token的区别\"></a>关于网页授权access_token和普通access_token的区别</h3><ul>\n<li>微信网页授权是通过OAuth2.0机制实现的，在用户授权给公众号后，公众号可以获取到一个网页授权特有的接口调用凭证（网页授权access_token），通过网页授权access_token可以进行授权后接口调用，如获取用户基本信息；</li>\n<li>其他微信接口，需要通过基础支持中的“获取access_token”接口来获取到的普通access_token调用。</li>\n</ul>\n<h2 id=\"授权步骤\"><a href=\"#授权步骤\" class=\"headerlink\" title=\"授权步骤\"></a>授权步骤</h2><h3 id=\"用户同意授权，获取code\"><a href=\"#用户同意授权，获取code\" class=\"headerlink\" title=\"用户同意授权，获取code\"></a>用户同意授权，获取code</h3><p>在确保微信公众账号拥有授权作用域（scope参数）的权限的前提下（服务号获得高级接口后，默认拥有scope参数中的snsapi_base和snsapi_userinfo），引导关注者打开如下页面：<br><code>https://open.weixin.qq.com/connect/oauth2/authorize?appid=APPID&amp;redirect_uri=REDIRECT_URI&amp;response_type=code&amp;scope=SCOPE&amp;state=STATE#wechat_redirect</code>。若提示“该链接无法访问”，请检查参数是否填写错误，是否拥有scope参数对应的授权作用域权限；并且由于授权操作安全等级较高，所以在发起授权请求时，微信会对授权链接做正则强匹配校验，如果链接的参数顺序不对，授权页面将无法正常访问。</p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">参数</th>\n<th style=\"text-align:center\">是否必填</th>\n<th style=\"text-align:center\">参数说明/</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">appid</td>\n<td style=\"text-align:center\">是</td>\n<td style=\"text-align:center\">公众号的唯一标识</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">redirect_uri</td>\n<td style=\"text-align:center\">是</td>\n<td style=\"text-align:center\">授权后重定向的回调链接地址， 需要使用<a href=\"http://tool.chinaz.com/Tools/urlencode.aspx\" target=\"_blank\" rel=\"noopener\">urlEncode</a>对链接进行处理</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">response_type</td>\n<td style=\"text-align:center\">是</td>\n<td style=\"text-align:center\">返回类型，请填写code</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">scope</td>\n<td style=\"text-align:center\">是</td>\n<td style=\"text-align:center\">应用授权作用域，snsapi_base （不弹出授权页面，直接跳转，只能获取用户openid），snsapi_userinfo （弹出授权页面，可通过openid拿到昵称、性别、所在地。并且， 即使在未关注的情况下，只要用户授权，也能获取其信息 ）</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">state</td>\n<td style=\"text-align:center\">否</td>\n<td style=\"text-align:center\">重定向后会带上state参数，开发者可以填写a-zA-Z0-9的参数值，最多128字节</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">#wechat_redirect</td>\n<td style=\"text-align:center\">是</td>\n<td style=\"text-align:center\">无论直接打开还是做页面302重定向时候，必须带此参数</td>\n</tr>\n</tbody>\n</table>\n<p>参考链接<br><div class=\"code-panel__wrapper\" autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\"><header class=\"mac-panel\"><span class=\"doc-path\"></span><span class=\"mac-panel__language\">PLAIN</span></header><figure class=\"iseeu highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">scope为snsapi_base</span><br><span class=\"line\">https://open.weixin.qq.com/connect/oauth2/authorize?</span><br><span class=\"line\">appid=wx520c15f417810387</span><br><span class=\"line\">&amp;redirect_uri=https%3A%2F%2Fchong.qq.com%2Fphp%2Findex.php%3Fd%3D%26c%3DwxAdapter%26m%3DmobileDeal%26showwxpaytitle%3D1%26vb2ctag%3D4_2030_5_1194_60</span><br><span class=\"line\">&amp;response_type=code</span><br><span class=\"line\">&amp;scope=snsapi_base</span><br><span class=\"line\">&amp;state=123</span><br><span class=\"line\">#wechat_redirect</span><br><span class=\"line\"> </span><br><span class=\"line\"></span><br><span class=\"line\">scope为snsapi_userinfo</span><br><span class=\"line\">https://open.weixin.qq.com/connect/oauth2/authorize?</span><br><span class=\"line\">appid=wx6ec33e01876afb1e</span><br><span class=\"line\">&amp;redirect_uri=http%3a%2f%2fh5.dpandora.cn%2fpromote%2fhelp_index.html</span><br><span class=\"line\">&amp;response_type=code</span><br><span class=\"line\">&amp;scope=snsapi_userinfo</span><br><span class=\"line\">&amp;state=STATE</span><br><span class=\"line\">#wechat_redirect</span><br></pre></td></tr></table></figure></div></p>\n<p>如果同意授权，页面将跳转至 redirect_uri/?code=CODE&amp;state=STATE。 把code传给server，server会通过code获取授权access_token，获取用户信息。</p>\n<h3 id=\"使用jssdk\"><a href=\"#使用jssdk\" class=\"headerlink\" title=\"使用jssdk\"></a>使用jssdk</h3><h4 id=\"步骤一：绑定域名\"><a href=\"#步骤一：绑定域名\" class=\"headerlink\" title=\"步骤一：绑定域名\"></a>步骤一：绑定域名</h4><p>先登录微信公众平台进入“公众号设置”的“功能设置”里填写“JS接口安全域名”。</p>\n<h4 id=\"步骤二：引入JS文件\"><a href=\"#步骤二：引入JS文件\" class=\"headerlink\" title=\"步骤二：引入JS文件\"></a>步骤二：引入JS文件</h4><p>在需要调用JS接口的页面引入如下JS文件，（支持https）：<a href=\"http://res.wx.qq.com/open/js/jweixin-1.2.0.js\" target=\"_blank\" rel=\"noopener\">http://res.wx.qq.com/open/js/jweixin-1.2.0.js</a></p>\n<h4 id=\"步骤三：通过config接口注入权限验证配置\"><a href=\"#步骤三：通过config接口注入权限验证配置\" class=\"headerlink\" title=\"步骤三：通过config接口注入权限验证配置\"></a>步骤三：通过config接口注入权限验证配置</h4><p>所有需要使用JS-SDK的页面必须先注入配置信息，否则将无法调用（同一个url仅需调用一次，对于变化url的SPA的web app可在每次url变化时进行调用,目前Android微信客户端不支持pushState的H5新特性，所以使用pushState来实现web app的页面会导致签名失败，此问题会在Android6.2中修复）。通过接口获取签名。</p>\n<div class=\"code-panel__wrapper\" autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\"><header class=\"mac-panel\"><span class=\"doc-path\"></span><span class=\"mac-panel__language\">PLAIN</span></header><figure class=\"iseeu highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">wx.config(&#123;</span><br><span class=\"line\">    debug: true, // 开启调试模式,调用的所有api的返回值会在客户端alert出来。</span><br><span class=\"line\">    appId: &apos;&apos;, // 必填，公众号的唯一标识</span><br><span class=\"line\">    timestamp: , // 必填，生成签名的时间戳</span><br><span class=\"line\">    nonceStr: &apos;&apos;, // 必填，生成签名的随机串</span><br><span class=\"line\">    signature: &apos;&apos;,// 必填，签名</span><br><span class=\"line\">    jsApiList: [] // 必填，需要使用的JS接口列表</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure></div>\n<h4 id=\"步骤四：通过ready接口处理成功验证\"><a href=\"#步骤四：通过ready接口处理成功验证\" class=\"headerlink\" title=\"步骤四：通过ready接口处理成功验证\"></a>步骤四：通过ready接口处理成功验证</h4><p>config信息验证后会执行ready方法，所有接口调用都必须在config接口获得结果之后，config是一个客户端的异步操作，所以如果需要在页面加载时就调用相关接口，则须把相关接口放在ready函数中调用来确保正确执行。对于用户触发时才调用的接口，则可以直接调用，不需要放在ready函数中。</p>\n<h2 id=\"其他问题\"><a href=\"#其他问题\" class=\"headerlink\" title=\"其他问题\"></a>其他问题</h2><h3 id=\"config-invalid-signature\"><a href=\"#config-invalid-signature\" class=\"headerlink\" title=\"config:invalid signature\"></a>config:invalid signature</h3><p>出现这个错误的原因一定是签名错误。原因可能有以下几种情况，可以逐一排查：</p>\n<ul>\n<li>确认签名算法是否正确，可用 <a href=\"http://mp.weixin.qq.com/debug/cgi-bin/sandbox?t=jsapisign\" target=\"_blank\" rel=\"noopener\">http://mp.weixin.qq.com/debug/cgi-bin/sandbox?t=jsapisign</a> 页面工具进行校验。</li>\n<li>确认config中nonceStr（js中驼峰标准大写S）, timestamp（没有驼峰标准）。</li>\n<li>确认url格式。签名的url是页面完整的url，包括’http(s)://‘部分以及’？’后面的GET参数部分,但不包括’#’hash后面的部分。</li>\n<li>确认 config 中的 appid 与用来获取 jsapi_ticket 的 appid 一致。</li>\n<li>确保一定缓存access_token和jsapi_ticket。</li>\n<li>确保你获取用来签名的url是动态获取的，动态页面可参见实例代码中php的实现方式。如果是html的静态页面在前端通过ajax将url传到后台签名，前端需要用js获取当前页面除去’#’hash部分的链接（可用location.href.split(‘#’)[0]获取,而且需要encodeURIComponent），因为页面一旦分享，微信客户端会在你的链接末尾加入其它参数，如果不是动态获取当前链接，将导致分享后的页面签名失败。</li>\n</ul>\n<h3 id=\"获取用户昵称的特殊符号\"><a href=\"#获取用户昵称的特殊符号\" class=\"headerlink\" title=\"获取用户昵称的特殊符号\"></a>获取用户昵称的特殊符号</h3><p>有些用户的昵称中包含有非ASCLL字符，包括编码外的图像以及文字。可以使用base64进行处理。</p>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"写在前面\"><a href=\"#写在前面\" class=\"headerlink\" title=\"写在前面\"></a>写在前面</h2><p>最近做了一个微信的活动，功能主要是好友之间互相投票。所以需要进行微信的授权。因为是第一次接触，所以记录下来备不时之需。<strong>这篇博客主要参考官方<a href=\"https://mp.weixin.qq.com/wiki\" target=\"_blank\" rel=\"noopener\">微信公众平台技术文档</a>，由于官方文档前后端教程混杂不方便阅读。所以整理出来这一篇。</strong> </p>\n<h3 id=\"关于网页授权回调域名的说明\"><a href=\"#关于网页授权回调域名的说明\" class=\"headerlink\" title=\"关于网页授权回调域名的说明\"></a>关于网页授权回调域名的说明</h3><ul>\n<li>在微信公众号请求用户网页授权之前，开发者需要先到公众平台官网中的“开发 - 接口权限 - 网页服务 - 网页帐号 - 网页授权获取用户基本信息”的配置选项中，修改授权回调域名。请注意，这里填写的是域名（是一个字符串），而不是URL，因此请勿加 http:// 等协议头。</li>\n<li>授权回调域名配置规范为全域名，比如需要网页授权的域名为：<a href=\"http://www.qq.com，配置以后此域名下面的页面http://www.qq.com/music.html\" target=\"_blank\" rel=\"noopener\">www.qq.com，配置以后此域名下面的页面http://www.qq.com/music.html</a> 、 <a href=\"http://www.qq.com/login.html\" target=\"_blank\" rel=\"noopener\">http://www.qq.com/login.html</a> 都可以进行OAuth2.0鉴权。但<a href=\"http://pay.qq.com\" target=\"_blank\" rel=\"noopener\">http://pay.qq.com</a> 、 <a href=\"http://music.qq.com\" target=\"_blank\" rel=\"noopener\">http://music.qq.com</a> 、 <a href=\"http://qq.com无法进行OAuth2.0鉴权。\" target=\"_blank\" rel=\"noopener\">http://qq.com无法进行OAuth2.0鉴权。</a></li>\n</ul>\n<h3 id=\"关于网页授权的两种scope的区别说明\"><a href=\"#关于网页授权的两种scope的区别说明\" class=\"headerlink\" title=\"关于网页授权的两种scope的区别说明\"></a>关于网页授权的两种scope的区别说明</h3><ul>\n<li>以snsapi_base为scope发起的网页授权，是用来获取进入页面的用户的openid的，并且是静默授权并自动跳转到回调页的。用户感知的就是直接进入了回调页（往往是业务页面）</li>\n<li>以snsapi_userinfo为scope发起的网页授权，是用来获取用户的基本信息的。但这种授权需要用户手动同意，并且由于用户同意过，所以无须关注，就可在授权后获取该用户的基本信息。</li>\n</ul>\n<h3 id=\"关于网页授权access-token和普通access-token的区别\"><a href=\"#关于网页授权access-token和普通access-token的区别\" class=\"headerlink\" title=\"关于网页授权access_token和普通access_token的区别\"></a>关于网页授权access_token和普通access_token的区别</h3><ul>\n<li>微信网页授权是通过OAuth2.0机制实现的，在用户授权给公众号后，公众号可以获取到一个网页授权特有的接口调用凭证（网页授权access_token），通过网页授权access_token可以进行授权后接口调用，如获取用户基本信息；</li>\n<li>其他微信接口，需要通过基础支持中的“获取access_token”接口来获取到的普通access_token调用。</li>\n</ul>\n<h2 id=\"授权步骤\"><a href=\"#授权步骤\" class=\"headerlink\" title=\"授权步骤\"></a>授权步骤</h2><h3 id=\"用户同意授权，获取code\"><a href=\"#用户同意授权，获取code\" class=\"headerlink\" title=\"用户同意授权，获取code\"></a>用户同意授权，获取code</h3><p>在确保微信公众账号拥有授权作用域（scope参数）的权限的前提下（服务号获得高级接口后，默认拥有scope参数中的snsapi_base和snsapi_userinfo），引导关注者打开如下页面：<br><code>https://open.weixin.qq.com/connect/oauth2/authorize?appid=APPID&amp;redirect_uri=REDIRECT_URI&amp;response_type=code&amp;scope=SCOPE&amp;state=STATE#wechat_redirect</code>。若提示“该链接无法访问”，请检查参数是否填写错误，是否拥有scope参数对应的授权作用域权限；并且由于授权操作安全等级较高，所以在发起授权请求时，微信会对授权链接做正则强匹配校验，如果链接的参数顺序不对，授权页面将无法正常访问。</p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">参数</th>\n<th style=\"text-align:center\">是否必填</th>\n<th style=\"text-align:center\">参数说明/</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">appid</td>\n<td style=\"text-align:center\">是</td>\n<td style=\"text-align:center\">公众号的唯一标识</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">redirect_uri</td>\n<td style=\"text-align:center\">是</td>\n<td style=\"text-align:center\">授权后重定向的回调链接地址， 需要使用<a href=\"http://tool.chinaz.com/Tools/urlencode.aspx\" target=\"_blank\" rel=\"noopener\">urlEncode</a>对链接进行处理</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">response_type</td>\n<td style=\"text-align:center\">是</td>\n<td style=\"text-align:center\">返回类型，请填写code</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">scope</td>\n<td style=\"text-align:center\">是</td>\n<td style=\"text-align:center\">应用授权作用域，snsapi_base （不弹出授权页面，直接跳转，只能获取用户openid），snsapi_userinfo （弹出授权页面，可通过openid拿到昵称、性别、所在地。并且， 即使在未关注的情况下，只要用户授权，也能获取其信息 ）</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">state</td>\n<td style=\"text-align:center\">否</td>\n<td style=\"text-align:center\">重定向后会带上state参数，开发者可以填写a-zA-Z0-9的参数值，最多128字节</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">#wechat_redirect</td>\n<td style=\"text-align:center\">是</td>\n<td style=\"text-align:center\">无论直接打开还是做页面302重定向时候，必须带此参数</td>\n</tr>\n</tbody>\n</table>\n<p>参考链接<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">scope为snsapi_base</span><br><span class=\"line\">https://open.weixin.qq.com/connect/oauth2/authorize?</span><br><span class=\"line\">appid=wx520c15f417810387</span><br><span class=\"line\">&amp;redirect_uri=https%3A%2F%2Fchong.qq.com%2Fphp%2Findex.php%3Fd%3D%26c%3DwxAdapter%26m%3DmobileDeal%26showwxpaytitle%3D1%26vb2ctag%3D4_2030_5_1194_60</span><br><span class=\"line\">&amp;response_type=code</span><br><span class=\"line\">&amp;scope=snsapi_base</span><br><span class=\"line\">&amp;state=123</span><br><span class=\"line\">#wechat_redirect</span><br><span class=\"line\"> </span><br><span class=\"line\"></span><br><span class=\"line\">scope为snsapi_userinfo</span><br><span class=\"line\">https://open.weixin.qq.com/connect/oauth2/authorize?</span><br><span class=\"line\">appid=wx6ec33e01876afb1e</span><br><span class=\"line\">&amp;redirect_uri=http%3a%2f%2fh5.dpandora.cn%2fpromote%2fhelp_index.html</span><br><span class=\"line\">&amp;response_type=code</span><br><span class=\"line\">&amp;scope=snsapi_userinfo</span><br><span class=\"line\">&amp;state=STATE</span><br><span class=\"line\">#wechat_redirect</span><br></pre></td></tr></table></figure></p>\n<p>如果同意授权，页面将跳转至 redirect_uri/?code=CODE&amp;state=STATE。 把code传给server，server会通过code获取授权access_token，获取用户信息。</p>\n<h3 id=\"使用jssdk\"><a href=\"#使用jssdk\" class=\"headerlink\" title=\"使用jssdk\"></a>使用jssdk</h3><h4 id=\"步骤一：绑定域名\"><a href=\"#步骤一：绑定域名\" class=\"headerlink\" title=\"步骤一：绑定域名\"></a>步骤一：绑定域名</h4><p>先登录微信公众平台进入“公众号设置”的“功能设置”里填写“JS接口安全域名”。</p>\n<h4 id=\"步骤二：引入JS文件\"><a href=\"#步骤二：引入JS文件\" class=\"headerlink\" title=\"步骤二：引入JS文件\"></a>步骤二：引入JS文件</h4><p>在需要调用JS接口的页面引入如下JS文件，（支持https）：<a href=\"http://res.wx.qq.com/open/js/jweixin-1.2.0.js\" target=\"_blank\" rel=\"noopener\">http://res.wx.qq.com/open/js/jweixin-1.2.0.js</a></p>\n<h4 id=\"步骤三：通过config接口注入权限验证配置\"><a href=\"#步骤三：通过config接口注入权限验证配置\" class=\"headerlink\" title=\"步骤三：通过config接口注入权限验证配置\"></a>步骤三：通过config接口注入权限验证配置</h4><p>所有需要使用JS-SDK的页面必须先注入配置信息，否则将无法调用（同一个url仅需调用一次，对于变化url的SPA的web app可在每次url变化时进行调用,目前Android微信客户端不支持pushState的H5新特性，所以使用pushState来实现web app的页面会导致签名失败，此问题会在Android6.2中修复）。通过接口获取签名。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">wx.config(&#123;</span><br><span class=\"line\">    debug: true, // 开启调试模式,调用的所有api的返回值会在客户端alert出来。</span><br><span class=\"line\">    appId: &apos;&apos;, // 必填，公众号的唯一标识</span><br><span class=\"line\">    timestamp: , // 必填，生成签名的时间戳</span><br><span class=\"line\">    nonceStr: &apos;&apos;, // 必填，生成签名的随机串</span><br><span class=\"line\">    signature: &apos;&apos;,// 必填，签名</span><br><span class=\"line\">    jsApiList: [] // 必填，需要使用的JS接口列表</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<h4 id=\"步骤四：通过ready接口处理成功验证\"><a href=\"#步骤四：通过ready接口处理成功验证\" class=\"headerlink\" title=\"步骤四：通过ready接口处理成功验证\"></a>步骤四：通过ready接口处理成功验证</h4><p>config信息验证后会执行ready方法，所有接口调用都必须在config接口获得结果之后，config是一个客户端的异步操作，所以如果需要在页面加载时就调用相关接口，则须把相关接口放在ready函数中调用来确保正确执行。对于用户触发时才调用的接口，则可以直接调用，不需要放在ready函数中。</p>\n<h2 id=\"其他问题\"><a href=\"#其他问题\" class=\"headerlink\" title=\"其他问题\"></a>其他问题</h2><h3 id=\"config-invalid-signature\"><a href=\"#config-invalid-signature\" class=\"headerlink\" title=\"config:invalid signature\"></a>config:invalid signature</h3><p>出现这个错误的原因一定是签名错误。原因可能有以下几种情况，可以逐一排查：</p>\n<ul>\n<li>确认签名算法是否正确，可用 <a href=\"http://mp.weixin.qq.com/debug/cgi-bin/sandbox?t=jsapisign\" target=\"_blank\" rel=\"noopener\">http://mp.weixin.qq.com/debug/cgi-bin/sandbox?t=jsapisign</a> 页面工具进行校验。</li>\n<li>确认config中nonceStr（js中驼峰标准大写S）, timestamp（没有驼峰标准）。</li>\n<li>确认url格式。签名的url是页面完整的url，包括’http(s)://‘部分以及’？’后面的GET参数部分,但不包括’#’hash后面的部分。</li>\n<li>确认 config 中的 appid 与用来获取 jsapi_ticket 的 appid 一致。</li>\n<li>确保一定缓存access_token和jsapi_ticket。</li>\n<li>确保你获取用来签名的url是动态获取的，动态页面可参见实例代码中php的实现方式。如果是html的静态页面在前端通过ajax将url传到后台签名，前端需要用js获取当前页面除去’#’hash部分的链接（可用location.href.split(‘#’)[0]获取,而且需要encodeURIComponent），因为页面一旦分享，微信客户端会在你的链接末尾加入其它参数，如果不是动态获取当前链接，将导致分享后的页面签名失败。</li>\n</ul>\n<h3 id=\"获取用户昵称的特殊符号\"><a href=\"#获取用户昵称的特殊符号\" class=\"headerlink\" title=\"获取用户昵称的特殊符号\"></a>获取用户昵称的特殊符号</h3><p>有些用户的昵称中包含有非ASCLL字符，包括编码外的图像以及文字。可以使用base64进行处理。</p>\n"},{"title":"建立前端开发规范","date":"2021-05-18T03:58:11.000Z","description":"一步一步建立完整的前端开发规范","top":10,"_content":"\n> 文中部分规则适用于 Vue 项目，用 Vue标记说明\n\n## 基本原则\n\n我认为开发规范的基本原则是：**约定大于规则，习惯大于文档。**\n首先，开发的规范必须遵循基本语法的语法约定，包括但不限于：\n\n+ 引用的模块默认命名为`index`\n+ 工具类函数命名为`utils`，静态文件存放在`assets`或`public`,配置选项命名`config`......\n+ 类的声明首字母必须大写\n\n  ```js\n    // good\n    class Animal {}\n    // bad\n    class person extends Animal {}\n  ```\n\n+ 常量的定义使用全字母大写 + 下划线\n\n  ```js\n    // good\n    const BASE_REQUEST_URL = 'www.baidu.com'\n    // bad\n    const baseSocketUrl = 'www.google.com'\n  ```\n\n这些是常见的编程语言均认可的编写规范，遵循基本规范，可以保证代码的可读性。在此之上，才可以培养其他的开发习惯，并且**不能违背基本规范。**文档的存在是为了更有效的约束不同的编码习惯，保证代码和开发行为的一致性，提升团队合作的效率。\n\n","source":"_posts/建立前端开发规范.md","raw":"---\ntitle: 建立前端开发规范\ndate: 2021-05-18 11:58:11\ndescription: 一步一步建立完整的前端开发规范\ntop: 10\n---\n\n> 文中部分规则适用于 Vue 项目，用 Vue标记说明\n\n## 基本原则\n\n我认为开发规范的基本原则是：**约定大于规则，习惯大于文档。**\n首先，开发的规范必须遵循基本语法的语法约定，包括但不限于：\n\n+ 引用的模块默认命名为`index`\n+ 工具类函数命名为`utils`，静态文件存放在`assets`或`public`,配置选项命名`config`......\n+ 类的声明首字母必须大写\n\n  ```js\n    // good\n    class Animal {}\n    // bad\n    class person extends Animal {}\n  ```\n\n+ 常量的定义使用全字母大写 + 下划线\n\n  ```js\n    // good\n    const BASE_REQUEST_URL = 'www.baidu.com'\n    // bad\n    const baseSocketUrl = 'www.google.com'\n  ```\n\n这些是常见的编程语言均认可的编写规范，遵循基本规范，可以保证代码的可读性。在此之上，才可以培养其他的开发习惯，并且**不能违背基本规范。**文档的存在是为了更有效的约束不同的编码习惯，保证代码和开发行为的一致性，提升团队合作的效率。\n\n","slug":"建立前端开发规范","published":1,"updated":"2021-06-25T11:19:55.449Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckqc904pk002owotvvwvdbwb7","content":"<blockquote>\n<p>文中部分规则适用于 Vue 项目，用 Vue标记说明</p>\n</blockquote>\n<h2 id=\"基本原则\"><a href=\"#基本原则\" class=\"headerlink\" title=\"基本原则\"></a>基本原则</h2><p>我认为开发规范的基本原则是：<strong>约定大于规则，习惯大于文档。</strong><br>首先，开发的规范必须遵循基本语法的语法约定，包括但不限于：</p>\n<ul>\n<li>引用的模块默认命名为<code>index</code></li>\n<li>工具类函数命名为<code>utils</code>，静态文件存放在<code>assets</code>或<code>public</code>,配置选项命名<code>config</code>……</li>\n<li><p>类的声明首字母必须大写</p>\n<div class=\"code-panel__wrapper\" autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\"><header class=\"mac-panel\"><span class=\"doc-path\"></span><span class=\"mac-panel__language\">JS</span></header><figure class=\"iseeu highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// good</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Animal</span> </span>&#123;&#125;</span><br><span class=\"line\"><span class=\"comment\">// bad</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">person</span> <span class=\"keyword\">extends</span> <span class=\"title\">Animal</span> </span>&#123;&#125;</span><br></pre></td></tr></table></figure></div>\n</li>\n<li><p>常量的定义使用全字母大写 + 下划线</p>\n<div class=\"code-panel__wrapper\" autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\"><header class=\"mac-panel\"><span class=\"doc-path\"></span><span class=\"mac-panel__language\">JS</span></header><figure class=\"iseeu highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// good</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> BASE_REQUEST_URL = <span class=\"string\">'www.baidu.com'</span></span><br><span class=\"line\"><span class=\"comment\">// bad</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> baseSocketUrl = <span class=\"string\">'www.google.com'</span></span><br></pre></td></tr></table></figure></div>\n</li>\n</ul>\n<p>这些是常见的编程语言均认可的编写规范，遵循基本规范，可以保证代码的可读性。在此之上，才可以培养其他的开发习惯，并且<strong>不能违背基本规范。</strong>文档的存在是为了更有效的约束不同的编码习惯，保证代码和开发行为的一致性，提升团队合作的效率。</p>\n","site":{"data":{}},"excerpt":"","more":"<blockquote>\n<p>文中部分规则适用于 Vue 项目，用 Vue标记说明</p>\n</blockquote>\n<h2 id=\"基本原则\"><a href=\"#基本原则\" class=\"headerlink\" title=\"基本原则\"></a>基本原则</h2><p>我认为开发规范的基本原则是：<strong>约定大于规则，习惯大于文档。</strong><br>首先，开发的规范必须遵循基本语法的语法约定，包括但不限于：</p>\n<ul>\n<li>引用的模块默认命名为<code>index</code></li>\n<li>工具类函数命名为<code>utils</code>，静态文件存放在<code>assets</code>或<code>public</code>,配置选项命名<code>config</code>……</li>\n<li><p>类的声明首字母必须大写</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// good</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Animal</span> </span>&#123;&#125;</span><br><span class=\"line\"><span class=\"comment\">// bad</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">person</span> <span class=\"keyword\">extends</span> <span class=\"title\">Animal</span> </span>&#123;&#125;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>常量的定义使用全字母大写 + 下划线</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// good</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> BASE_REQUEST_URL = <span class=\"string\">'www.baidu.com'</span></span><br><span class=\"line\"><span class=\"comment\">// bad</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> baseSocketUrl = <span class=\"string\">'www.google.com'</span></span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<p>这些是常见的编程语言均认可的编写规范，遵循基本规范，可以保证代码的可读性。在此之上，才可以培养其他的开发习惯，并且<strong>不能违背基本规范。</strong>文档的存在是为了更有效的约束不同的编码习惯，保证代码和开发行为的一致性，提升团队合作的效率。</p>\n"},{"title":"微信浏览器播放音乐的坑","date":"2017-10-30T07:37:36.000Z","description":"解决微信浏览器播放音乐的问题","_content":"## 如果只是简单的希望向微信环境下添加默认播放的背景音乐而不需要其他操作\n### 给你的 js绑定微信浏览器特有的事件\n```\n/* html */\n <audio id=\"audio\" class=\"media-audio\" autoplay preload loop=\"loop\">\n   <source src=\"music.ogg\" type=\"audio/ogg\">\n   <source src=\"music.mp3\" type=\"audio/mpeg\">\n   ...\n </audio>\n \n /* js */\n function audioAutoPlay(ID){\n   var audio = document.getElementById(ID);\n   audio.play();\n   document.addEventListener(\"WeixinJSBridgeReady\", function () {\n     audio.play();\n   }, false);\n   document.addEventListener('YixinJSBridgeReady', function() {\n     audio.play();\n   }, false);\n }\n audioAutoPlay('audio');\n```\n\n## 如果有关于微信SDK的操作，将这段逻辑放在SDK中也是极好的\n### 博主默认你已经正确的引用了 SDK，如果无法引用请查找其他文档\n```\n/* js */\n...\nwx.config({\n  ...\n})\nwx.ready(function(){\n  ...\n  audio.play();\n  ...\n})\n...\n```","source":"_posts/微信浏览器播放音乐的坑.md","raw":"title: 微信浏览器播放音乐的坑\ntags: [WeChat, audio]\ndate: 2017-10-30 15:37:36\ncategories: [WeChat]\ndescription: 解决微信浏览器播放音乐的问题\n---\n## 如果只是简单的希望向微信环境下添加默认播放的背景音乐而不需要其他操作\n### 给你的 js绑定微信浏览器特有的事件\n```\n/* html */\n <audio id=\"audio\" class=\"media-audio\" autoplay preload loop=\"loop\">\n   <source src=\"music.ogg\" type=\"audio/ogg\">\n   <source src=\"music.mp3\" type=\"audio/mpeg\">\n   ...\n </audio>\n \n /* js */\n function audioAutoPlay(ID){\n   var audio = document.getElementById(ID);\n   audio.play();\n   document.addEventListener(\"WeixinJSBridgeReady\", function () {\n     audio.play();\n   }, false);\n   document.addEventListener('YixinJSBridgeReady', function() {\n     audio.play();\n   }, false);\n }\n audioAutoPlay('audio');\n```\n\n## 如果有关于微信SDK的操作，将这段逻辑放在SDK中也是极好的\n### 博主默认你已经正确的引用了 SDK，如果无法引用请查找其他文档\n```\n/* js */\n...\nwx.config({\n  ...\n})\nwx.ready(function(){\n  ...\n  audio.play();\n  ...\n})\n...\n```","slug":"微信浏览器播放音乐的坑","published":1,"updated":"2021-06-25T11:19:55.449Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckqc904pm002rwotvnejfcbwg","content":"<h2 id=\"如果只是简单的希望向微信环境下添加默认播放的背景音乐而不需要其他操作\"><a href=\"#如果只是简单的希望向微信环境下添加默认播放的背景音乐而不需要其他操作\" class=\"headerlink\" title=\"如果只是简单的希望向微信环境下添加默认播放的背景音乐而不需要其他操作\"></a>如果只是简单的希望向微信环境下添加默认播放的背景音乐而不需要其他操作</h2><h3 id=\"给你的-js绑定微信浏览器特有的事件\"><a href=\"#给你的-js绑定微信浏览器特有的事件\" class=\"headerlink\" title=\"给你的 js绑定微信浏览器特有的事件\"></a>给你的 js绑定微信浏览器特有的事件</h3><div class=\"code-panel__wrapper\" autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\"><header class=\"mac-panel\"><span class=\"doc-path\"></span><span class=\"mac-panel__language\">PLAIN</span></header><figure class=\"iseeu highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/* html */</span><br><span class=\"line\"> &lt;audio id=&quot;audio&quot; class=&quot;media-audio&quot; autoplay preload loop=&quot;loop&quot;&gt;</span><br><span class=\"line\">   &lt;source src=&quot;music.ogg&quot; type=&quot;audio/ogg&quot;&gt;</span><br><span class=\"line\">   &lt;source src=&quot;music.mp3&quot; type=&quot;audio/mpeg&quot;&gt;</span><br><span class=\"line\">   ...</span><br><span class=\"line\"> &lt;/audio&gt;</span><br><span class=\"line\"> </span><br><span class=\"line\"> /* js */</span><br><span class=\"line\"> function audioAutoPlay(ID)&#123;</span><br><span class=\"line\">   var audio = document.getElementById(ID);</span><br><span class=\"line\">   audio.play();</span><br><span class=\"line\">   document.addEventListener(&quot;WeixinJSBridgeReady&quot;, function () &#123;</span><br><span class=\"line\">     audio.play();</span><br><span class=\"line\">   &#125;, false);</span><br><span class=\"line\">   document.addEventListener(&apos;YixinJSBridgeReady&apos;, function() &#123;</span><br><span class=\"line\">     audio.play();</span><br><span class=\"line\">   &#125;, false);</span><br><span class=\"line\"> &#125;</span><br><span class=\"line\"> audioAutoPlay(&apos;audio&apos;);</span><br></pre></td></tr></table></figure></div>\n<h2 id=\"如果有关于微信SDK的操作，将这段逻辑放在SDK中也是极好的\"><a href=\"#如果有关于微信SDK的操作，将这段逻辑放在SDK中也是极好的\" class=\"headerlink\" title=\"如果有关于微信SDK的操作，将这段逻辑放在SDK中也是极好的\"></a>如果有关于微信SDK的操作，将这段逻辑放在SDK中也是极好的</h2><h3 id=\"博主默认你已经正确的引用了-SDK，如果无法引用请查找其他文档\"><a href=\"#博主默认你已经正确的引用了-SDK，如果无法引用请查找其他文档\" class=\"headerlink\" title=\"博主默认你已经正确的引用了 SDK，如果无法引用请查找其他文档\"></a>博主默认你已经正确的引用了 SDK，如果无法引用请查找其他文档</h3><div class=\"code-panel__wrapper\" autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\"><header class=\"mac-panel\"><span class=\"doc-path\"></span><span class=\"mac-panel__language\">PLAIN</span></header><figure class=\"iseeu highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/* js */</span><br><span class=\"line\">...</span><br><span class=\"line\">wx.config(&#123;</span><br><span class=\"line\">  ...</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\">wx.ready(function()&#123;</span><br><span class=\"line\">  ...</span><br><span class=\"line\">  audio.play();</span><br><span class=\"line\">  ...</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\">...</span><br></pre></td></tr></table></figure></div>","site":{"data":{}},"excerpt":"","more":"<h2 id=\"如果只是简单的希望向微信环境下添加默认播放的背景音乐而不需要其他操作\"><a href=\"#如果只是简单的希望向微信环境下添加默认播放的背景音乐而不需要其他操作\" class=\"headerlink\" title=\"如果只是简单的希望向微信环境下添加默认播放的背景音乐而不需要其他操作\"></a>如果只是简单的希望向微信环境下添加默认播放的背景音乐而不需要其他操作</h2><h3 id=\"给你的-js绑定微信浏览器特有的事件\"><a href=\"#给你的-js绑定微信浏览器特有的事件\" class=\"headerlink\" title=\"给你的 js绑定微信浏览器特有的事件\"></a>给你的 js绑定微信浏览器特有的事件</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/* html */</span><br><span class=\"line\"> &lt;audio id=&quot;audio&quot; class=&quot;media-audio&quot; autoplay preload loop=&quot;loop&quot;&gt;</span><br><span class=\"line\">   &lt;source src=&quot;music.ogg&quot; type=&quot;audio/ogg&quot;&gt;</span><br><span class=\"line\">   &lt;source src=&quot;music.mp3&quot; type=&quot;audio/mpeg&quot;&gt;</span><br><span class=\"line\">   ...</span><br><span class=\"line\"> &lt;/audio&gt;</span><br><span class=\"line\"> </span><br><span class=\"line\"> /* js */</span><br><span class=\"line\"> function audioAutoPlay(ID)&#123;</span><br><span class=\"line\">   var audio = document.getElementById(ID);</span><br><span class=\"line\">   audio.play();</span><br><span class=\"line\">   document.addEventListener(&quot;WeixinJSBridgeReady&quot;, function () &#123;</span><br><span class=\"line\">     audio.play();</span><br><span class=\"line\">   &#125;, false);</span><br><span class=\"line\">   document.addEventListener(&apos;YixinJSBridgeReady&apos;, function() &#123;</span><br><span class=\"line\">     audio.play();</span><br><span class=\"line\">   &#125;, false);</span><br><span class=\"line\"> &#125;</span><br><span class=\"line\"> audioAutoPlay(&apos;audio&apos;);</span><br></pre></td></tr></table></figure>\n<h2 id=\"如果有关于微信SDK的操作，将这段逻辑放在SDK中也是极好的\"><a href=\"#如果有关于微信SDK的操作，将这段逻辑放在SDK中也是极好的\" class=\"headerlink\" title=\"如果有关于微信SDK的操作，将这段逻辑放在SDK中也是极好的\"></a>如果有关于微信SDK的操作，将这段逻辑放在SDK中也是极好的</h2><h3 id=\"博主默认你已经正确的引用了-SDK，如果无法引用请查找其他文档\"><a href=\"#博主默认你已经正确的引用了-SDK，如果无法引用请查找其他文档\" class=\"headerlink\" title=\"博主默认你已经正确的引用了 SDK，如果无法引用请查找其他文档\"></a>博主默认你已经正确的引用了 SDK，如果无法引用请查找其他文档</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/* js */</span><br><span class=\"line\">...</span><br><span class=\"line\">wx.config(&#123;</span><br><span class=\"line\">  ...</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\">wx.ready(function()&#123;</span><br><span class=\"line\">  ...</span><br><span class=\"line\">  audio.play();</span><br><span class=\"line\">  ...</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\">...</span><br></pre></td></tr></table></figure>"},{"title":"nodejs随笔--fs模块","date":"2017-10-20T06:11:27.000Z","description":"顺手 copy 一份项目...","top":true,"_content":"事情要从我的工作说起，可能出于安全考虑，公司的开发环境类似内网开发，电脑上安装了加密软件，电脑上的东西无法上传到外网的 git 工具，而且直接上传之后的文件打开是无法恢复的乱码。但是作为程序员，自然有其他方法，把东西拿出来\n> 因为公司的加密软件是按文件格式加密的，前端的文件，只加密了 vue 文件。所以思路就是把文件复制出来，再把 .vue 结尾的文件保存成为 txt 格式，我们的目的就达到了\n\n其实这个功能比较简单，但是我平时的工作偏向前端，没有写过这种纯粹的后台逻辑，所以用了较长的时间才实现，记录下来加深一下印象。最后我也会把例子发出来，有想研究或者嘲讽的都可以下载试试（当然项目源码是不能发出来的）\n\n## 目录结构\n\n首先创建拷贝的项目，初始化 npm，安装`empty-folder`，用来清空文件夹，创建一个 `source`文件夹用来存放源码，创建`target`文件夹用来保存处理后的文件。创建一个`copy.js`文件，把项目拷贝进`source`文件夹，创建一个`do.js`用来把`source`文件夹中的文件处理完保存到`target`文件夹中，创建一个`undo.js`用来把`target`中的文件还原回来。\n目录结构如下\n\n```shell\nsrc\n  - source -- 源文件夹\n  - target -- 目标文件夹\n  - copy.js -- 复制文件\n  - do.js -- 保存文件\n  - undo.js -- 恢复文件\n  - package.json -- 安装了`empty-folder`\n```\n\n## copy.js\n\n```js\nvar fs = require('fs');\nvar stat = fs.stat;\nvar empty = require('empty-folder')\n\nvar copy = function (src, dst) {\n    //读取目录\n    fs.readdir(src, function (err, paths) {\n        if (err) throw err;\n        paths.forEach(function (path) {\n            var _src = src + '/' + path;\n            var _dst = dst + '/' + path;\n            var readable;\n            var writable;\n            stat(_src, function (err, st) {\n                if (err) {\n                    throw err;\n                }\n\n                if (st.isFile()) {\n                    readable = fs.createReadStream(_src);//创建读取流\n                    writable = fs.createWriteStream(_dst);//创建写入流\n                    readable.pipe(writable);\n                } else if (st.isDirectory()) {\n                  // 不需要拷贝的文件夹\n                  const exclude = ['node_modules', '.idea', '.git', '.vscode']\n                  let flag = exclude.reduce((res,cur)=> {\n                    res = res || _src.includes(cur)\n                    return res\n                  }, false)\n\n                  if (!flag) {\n                    exists(_src, _dst, copy);\n                  }\n                }\n            });\n        });\n    });\n}\n\nvar exists = function (src, dst, callback) {\n    //测试某个路径下文件是否存在\n    fs.exists(dst, function (exists) {\n        if (exists) {//不存在\n            callback(src, dst);\n        } else {//存在\n            fs.mkdir(dst, function () {//创建目录\n                callback(src, dst)\n            })\n        }\n    })\n}\n\n// 先清空 source 文件夹\nempty('./source', false, () => {\n  console.log('clean folder')\n  // 拷贝D盘中的项目 A 到 source文件夹\n  new Promise(resolve=> {\n    resolve(exists('D:/workspace/yunsa_cloud_fre', './source/yunsa_cloud_fre', copy))\n  }).then(()=> {\n    console.log('copy yunsa_cloud_fre success')\n    // 拷贝桌面上的项目二到 source 文件夹\n    return new Promise(resolve=> {\n      resolve(exists('../vue-form-making@1.2.13', './source/vue-form-making', copy))\n    })\n  }).then(()=> {\n    console.log('copy vue-form-making success')\n    // 拷贝桌面上的项目三到 source 文件夹\n    return new Promise(resolve=> {\n      resolve(exists('../vue-g6-editor', './source/vue-g6-editor', copy))\n    })\n  })\n  .then(() => {\n    console.log('copy vue-g6-editor success')\n  })\n})\n```\n\n## do.js\n\n```js\nconst fs = require('fs')\nconst stat = fs.stat\nconst path = require('path')\nvar empty = require('empty-folder')\n\nfunction copy(src, dst) {\n  //读取目录\n  fs.readdir(src, (err, paths) => {\n    if (err) throw err\n    paths.forEach((val) => {\n      const _src = src + '/' + val\n      const _dst = dst + '/' + val\n      stat(_src, (err, st) => {\n        if (err) throw err\n        if (st.isFile()) {\n          const name = path.basename(_src)\n          const readable = fs.createReadStream(_src) //创建读取流\n          let writable\n\n          // 如果文件是以.vue 结尾的，读取流数据，再写入到目标文件，并更名为.vue.txt\n          if (/\\.vue$/.test(name)) {\n            writable = fs.createWriteStream(_dst + '.txt') //创建写入流\n          } else {\n            writable = fs.createWriteStream(_dst) //创建写入流\n          }\n\n          readable.pipe(writable)\n        } else if (st.isDirectory()) {\n          exists(_src, _dst, copy)\n        }\n      })\n    })\n  })\n}\n\n//测试某个路径下文件是否存在\nfunction exists(src, dst, callback) {\n  fs.exists(dst, (exists) => {\n    if (exists) {\n      //不存在\n      callback(src, dst)\n    } else {\n      //存在\n      fs.mkdir(dst, () => {\n        //创建目录\n        callback(src, dst)\n      })\n    }\n  })\n}\n\n\n// 清空 target 文件夹\nempty('./target', false, () => {\n  console.log('clean folder')\n  exists('./source', './target', copy)\n})\n```\n\n## undo.js\n\n```js\nconst fs = require('fs')\nconst stat = fs.stat\nconst path = require('path')\n\nfunction copy(src, dst) {\n  //读取目录\n  fs.readdir(src, (err, paths) => {\n    if (err) throw err\n    paths.forEach((val) => {\n      const _src = src + '/' + val\n      const _dst = dst + '/' + val\n      stat(_src, (err, st) => {\n        if (err) throw err\n        if (st.isFile()) {\n          const name = path.basename(_src)\n          const readable = fs.createReadStream(_src) //创建读取流\n          let writable\n\n          if (/\\.vue.txt$/.test(name)) {\n          \t// 如果是.vue.txt 的文件，改名成.vue\n            writable = fs.createWriteStream(_dst.split('.txt')[0]) //创建写入流\n          } else {\n            writable = fs.createWriteStream(_dst) //创建写入流\n          }\n\n          readable.pipe(writable)\n        } else if (st.isDirectory()) {\n          exists(_src, _dst, copy)\n        }\n      })\n    })\n  })\n}\n\n//测试某个路径下文件是否存在\nfunction exists(src, dst, callback) {\n  fs.exists(dst, (exists) => {\n    if (exists) {\n      //不存在\n      callback(src, dst)\n    } else {\n      //存在\n      fs.mkdir(dst, () => {\n        //创建目录\n        callback(src, dst)\n      })\n    }\n  })\n}\n\nexists('./target', './source', copy)\n```\n","source":"_posts/模块.md","raw":"---\ntitle: nodejs随笔--fs模块\ntags: [nodeJs, fs模块]\ndate: 2017-10-20 14:11:27\ncategories: [NodeJs]\ndescription: 顺手 copy 一份项目...\ntop: true\n---\n事情要从我的工作说起，可能出于安全考虑，公司的开发环境类似内网开发，电脑上安装了加密软件，电脑上的东西无法上传到外网的 git 工具，而且直接上传之后的文件打开是无法恢复的乱码。但是作为程序员，自然有其他方法，把东西拿出来\n> 因为公司的加密软件是按文件格式加密的，前端的文件，只加密了 vue 文件。所以思路就是把文件复制出来，再把 .vue 结尾的文件保存成为 txt 格式，我们的目的就达到了\n\n其实这个功能比较简单，但是我平时的工作偏向前端，没有写过这种纯粹的后台逻辑，所以用了较长的时间才实现，记录下来加深一下印象。最后我也会把例子发出来，有想研究或者嘲讽的都可以下载试试（当然项目源码是不能发出来的）\n\n## 目录结构\n\n首先创建拷贝的项目，初始化 npm，安装`empty-folder`，用来清空文件夹，创建一个 `source`文件夹用来存放源码，创建`target`文件夹用来保存处理后的文件。创建一个`copy.js`文件，把项目拷贝进`source`文件夹，创建一个`do.js`用来把`source`文件夹中的文件处理完保存到`target`文件夹中，创建一个`undo.js`用来把`target`中的文件还原回来。\n目录结构如下\n\n```shell\nsrc\n  - source -- 源文件夹\n  - target -- 目标文件夹\n  - copy.js -- 复制文件\n  - do.js -- 保存文件\n  - undo.js -- 恢复文件\n  - package.json -- 安装了`empty-folder`\n```\n\n## copy.js\n\n```js\nvar fs = require('fs');\nvar stat = fs.stat;\nvar empty = require('empty-folder')\n\nvar copy = function (src, dst) {\n    //读取目录\n    fs.readdir(src, function (err, paths) {\n        if (err) throw err;\n        paths.forEach(function (path) {\n            var _src = src + '/' + path;\n            var _dst = dst + '/' + path;\n            var readable;\n            var writable;\n            stat(_src, function (err, st) {\n                if (err) {\n                    throw err;\n                }\n\n                if (st.isFile()) {\n                    readable = fs.createReadStream(_src);//创建读取流\n                    writable = fs.createWriteStream(_dst);//创建写入流\n                    readable.pipe(writable);\n                } else if (st.isDirectory()) {\n                  // 不需要拷贝的文件夹\n                  const exclude = ['node_modules', '.idea', '.git', '.vscode']\n                  let flag = exclude.reduce((res,cur)=> {\n                    res = res || _src.includes(cur)\n                    return res\n                  }, false)\n\n                  if (!flag) {\n                    exists(_src, _dst, copy);\n                  }\n                }\n            });\n        });\n    });\n}\n\nvar exists = function (src, dst, callback) {\n    //测试某个路径下文件是否存在\n    fs.exists(dst, function (exists) {\n        if (exists) {//不存在\n            callback(src, dst);\n        } else {//存在\n            fs.mkdir(dst, function () {//创建目录\n                callback(src, dst)\n            })\n        }\n    })\n}\n\n// 先清空 source 文件夹\nempty('./source', false, () => {\n  console.log('clean folder')\n  // 拷贝D盘中的项目 A 到 source文件夹\n  new Promise(resolve=> {\n    resolve(exists('D:/workspace/yunsa_cloud_fre', './source/yunsa_cloud_fre', copy))\n  }).then(()=> {\n    console.log('copy yunsa_cloud_fre success')\n    // 拷贝桌面上的项目二到 source 文件夹\n    return new Promise(resolve=> {\n      resolve(exists('../vue-form-making@1.2.13', './source/vue-form-making', copy))\n    })\n  }).then(()=> {\n    console.log('copy vue-form-making success')\n    // 拷贝桌面上的项目三到 source 文件夹\n    return new Promise(resolve=> {\n      resolve(exists('../vue-g6-editor', './source/vue-g6-editor', copy))\n    })\n  })\n  .then(() => {\n    console.log('copy vue-g6-editor success')\n  })\n})\n```\n\n## do.js\n\n```js\nconst fs = require('fs')\nconst stat = fs.stat\nconst path = require('path')\nvar empty = require('empty-folder')\n\nfunction copy(src, dst) {\n  //读取目录\n  fs.readdir(src, (err, paths) => {\n    if (err) throw err\n    paths.forEach((val) => {\n      const _src = src + '/' + val\n      const _dst = dst + '/' + val\n      stat(_src, (err, st) => {\n        if (err) throw err\n        if (st.isFile()) {\n          const name = path.basename(_src)\n          const readable = fs.createReadStream(_src) //创建读取流\n          let writable\n\n          // 如果文件是以.vue 结尾的，读取流数据，再写入到目标文件，并更名为.vue.txt\n          if (/\\.vue$/.test(name)) {\n            writable = fs.createWriteStream(_dst + '.txt') //创建写入流\n          } else {\n            writable = fs.createWriteStream(_dst) //创建写入流\n          }\n\n          readable.pipe(writable)\n        } else if (st.isDirectory()) {\n          exists(_src, _dst, copy)\n        }\n      })\n    })\n  })\n}\n\n//测试某个路径下文件是否存在\nfunction exists(src, dst, callback) {\n  fs.exists(dst, (exists) => {\n    if (exists) {\n      //不存在\n      callback(src, dst)\n    } else {\n      //存在\n      fs.mkdir(dst, () => {\n        //创建目录\n        callback(src, dst)\n      })\n    }\n  })\n}\n\n\n// 清空 target 文件夹\nempty('./target', false, () => {\n  console.log('clean folder')\n  exists('./source', './target', copy)\n})\n```\n\n## undo.js\n\n```js\nconst fs = require('fs')\nconst stat = fs.stat\nconst path = require('path')\n\nfunction copy(src, dst) {\n  //读取目录\n  fs.readdir(src, (err, paths) => {\n    if (err) throw err\n    paths.forEach((val) => {\n      const _src = src + '/' + val\n      const _dst = dst + '/' + val\n      stat(_src, (err, st) => {\n        if (err) throw err\n        if (st.isFile()) {\n          const name = path.basename(_src)\n          const readable = fs.createReadStream(_src) //创建读取流\n          let writable\n\n          if (/\\.vue.txt$/.test(name)) {\n          \t// 如果是.vue.txt 的文件，改名成.vue\n            writable = fs.createWriteStream(_dst.split('.txt')[0]) //创建写入流\n          } else {\n            writable = fs.createWriteStream(_dst) //创建写入流\n          }\n\n          readable.pipe(writable)\n        } else if (st.isDirectory()) {\n          exists(_src, _dst, copy)\n        }\n      })\n    })\n  })\n}\n\n//测试某个路径下文件是否存在\nfunction exists(src, dst, callback) {\n  fs.exists(dst, (exists) => {\n    if (exists) {\n      //不存在\n      callback(src, dst)\n    } else {\n      //存在\n      fs.mkdir(dst, () => {\n        //创建目录\n        callback(src, dst)\n      })\n    }\n  })\n}\n\nexists('./target', './source', copy)\n```\n","slug":"模块","published":1,"updated":"2021-06-25T11:19:55.449Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckqc904pn002vwotv6breeo0k","content":"<p>事情要从我的工作说起，可能出于安全考虑，公司的开发环境类似内网开发，电脑上安装了加密软件，电脑上的东西无法上传到外网的 git 工具，而且直接上传之后的文件打开是无法恢复的乱码。但是作为程序员，自然有其他方法，把东西拿出来</p>\n<blockquote>\n<p>因为公司的加密软件是按文件格式加密的，前端的文件，只加密了 vue 文件。所以思路就是把文件复制出来，再把 .vue 结尾的文件保存成为 txt 格式，我们的目的就达到了</p>\n</blockquote>\n<p>其实这个功能比较简单，但是我平时的工作偏向前端，没有写过这种纯粹的后台逻辑，所以用了较长的时间才实现，记录下来加深一下印象。最后我也会把例子发出来，有想研究或者嘲讽的都可以下载试试（当然项目源码是不能发出来的）</p>\n<h2 id=\"目录结构\"><a href=\"#目录结构\" class=\"headerlink\" title=\"目录结构\"></a>目录结构</h2><p>首先创建拷贝的项目，初始化 npm，安装<code>empty-folder</code>，用来清空文件夹，创建一个 <code>source</code>文件夹用来存放源码，创建<code>target</code>文件夹用来保存处理后的文件。创建一个<code>copy.js</code>文件，把项目拷贝进<code>source</code>文件夹，创建一个<code>do.js</code>用来把<code>source</code>文件夹中的文件处理完保存到<code>target</code>文件夹中，创建一个<code>undo.js</code>用来把<code>target</code>中的文件还原回来。<br>目录结构如下</p>\n<div class=\"code-panel__wrapper\" autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\"><header class=\"mac-panel\"><span class=\"doc-path\"></span><span class=\"mac-panel__language\">SHELL</span></header><figure class=\"iseeu highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">src</span><br><span class=\"line\">  - source -- 源文件夹</span><br><span class=\"line\">  - target -- 目标文件夹</span><br><span class=\"line\">  - copy.js -- 复制文件</span><br><span class=\"line\">  - do.js -- 保存文件</span><br><span class=\"line\">  - undo.js -- 恢复文件</span><br><span class=\"line\">  - package.json -- 安装了`empty-folder`</span><br></pre></td></tr></table></figure></div>\n<h2 id=\"copy-js\"><a href=\"#copy-js\" class=\"headerlink\" title=\"copy.js\"></a>copy.js</h2><div class=\"code-panel__wrapper\" autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\"><header class=\"mac-panel\"><span class=\"doc-path\"></span><span class=\"mac-panel__language\">JS</span></header><figure class=\"iseeu highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> fs = <span class=\"built_in\">require</span>(<span class=\"string\">'fs'</span>);</span><br><span class=\"line\"><span class=\"keyword\">var</span> stat = fs.stat;</span><br><span class=\"line\"><span class=\"keyword\">var</span> empty = <span class=\"built_in\">require</span>(<span class=\"string\">'empty-folder'</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> copy = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">src, dst</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">//读取目录</span></span><br><span class=\"line\">    fs.readdir(src, <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">err, paths</span>) </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (err) <span class=\"keyword\">throw</span> err;</span><br><span class=\"line\">        paths.forEach(<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">path</span>) </span>&#123;</span><br><span class=\"line\">            <span class=\"keyword\">var</span> _src = src + <span class=\"string\">'/'</span> + path;</span><br><span class=\"line\">            <span class=\"keyword\">var</span> _dst = dst + <span class=\"string\">'/'</span> + path;</span><br><span class=\"line\">            <span class=\"keyword\">var</span> readable;</span><br><span class=\"line\">            <span class=\"keyword\">var</span> writable;</span><br><span class=\"line\">            stat(_src, <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">err, st</span>) </span>&#123;</span><br><span class=\"line\">                <span class=\"keyword\">if</span> (err) &#123;</span><br><span class=\"line\">                    <span class=\"keyword\">throw</span> err;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">                <span class=\"keyword\">if</span> (st.isFile()) &#123;</span><br><span class=\"line\">                    readable = fs.createReadStream(_src);<span class=\"comment\">//创建读取流</span></span><br><span class=\"line\">                    writable = fs.createWriteStream(_dst);<span class=\"comment\">//创建写入流</span></span><br><span class=\"line\">                    readable.pipe(writable);</span><br><span class=\"line\">                &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (st.isDirectory()) &#123;</span><br><span class=\"line\">                  <span class=\"comment\">// 不需要拷贝的文件夹</span></span><br><span class=\"line\">                  <span class=\"keyword\">const</span> exclude = [<span class=\"string\">'node_modules'</span>, <span class=\"string\">'.idea'</span>, <span class=\"string\">'.git'</span>, <span class=\"string\">'.vscode'</span>]</span><br><span class=\"line\">                  <span class=\"keyword\">let</span> flag = exclude.reduce(<span class=\"function\">(<span class=\"params\">res,cur</span>)=&gt;</span> &#123;</span><br><span class=\"line\">                    res = res || _src.includes(cur)</span><br><span class=\"line\">                    <span class=\"keyword\">return</span> res</span><br><span class=\"line\">                  &#125;, <span class=\"literal\">false</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">                  <span class=\"keyword\">if</span> (!flag) &#123;</span><br><span class=\"line\">                    exists(_src, _dst, copy);</span><br><span class=\"line\">                  &#125;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;);</span><br><span class=\"line\">        &#125;);</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> exists = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">src, dst, callback</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">//测试某个路径下文件是否存在</span></span><br><span class=\"line\">    fs.exists(dst, <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">exists</span>) </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (exists) &#123;<span class=\"comment\">//不存在</span></span><br><span class=\"line\">            callback(src, dst);</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> &#123;<span class=\"comment\">//存在</span></span><br><span class=\"line\">            fs.mkdir(dst, <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;<span class=\"comment\">//创建目录</span></span><br><span class=\"line\">                callback(src, dst)</span><br><span class=\"line\">            &#125;)</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 先清空 source 文件夹</span></span><br><span class=\"line\">empty(<span class=\"string\">'./source'</span>, <span class=\"literal\">false</span>, () =&gt; &#123;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(<span class=\"string\">'clean folder'</span>)</span><br><span class=\"line\">  <span class=\"comment\">// 拷贝D盘中的项目 A 到 source文件夹</span></span><br><span class=\"line\">  <span class=\"keyword\">new</span> <span class=\"built_in\">Promise</span>(<span class=\"function\"><span class=\"params\">resolve</span>=&gt;</span> &#123;</span><br><span class=\"line\">    resolve(exists(<span class=\"string\">'D:/workspace/yunsa_cloud_fre'</span>, <span class=\"string\">'./source/yunsa_cloud_fre'</span>, copy))</span><br><span class=\"line\">  &#125;).then(<span class=\"function\"><span class=\"params\">()</span>=&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"string\">'copy yunsa_cloud_fre success'</span>)</span><br><span class=\"line\">    <span class=\"comment\">// 拷贝桌面上的项目二到 source 文件夹</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> <span class=\"built_in\">Promise</span>(<span class=\"function\"><span class=\"params\">resolve</span>=&gt;</span> &#123;</span><br><span class=\"line\">      resolve(exists(<span class=\"string\">'../vue-form-making@1.2.13'</span>, <span class=\"string\">'./source/vue-form-making'</span>, copy))</span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">  &#125;).then(<span class=\"function\"><span class=\"params\">()</span>=&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"string\">'copy vue-form-making success'</span>)</span><br><span class=\"line\">    <span class=\"comment\">// 拷贝桌面上的项目三到 source 文件夹</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> <span class=\"built_in\">Promise</span>(<span class=\"function\"><span class=\"params\">resolve</span>=&gt;</span> &#123;</span><br><span class=\"line\">      resolve(exists(<span class=\"string\">'../vue-g6-editor'</span>, <span class=\"string\">'./source/vue-g6-editor'</span>, copy))</span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\">  .then(<span class=\"function\"><span class=\"params\">()</span> =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"string\">'copy vue-g6-editor success'</span>)</span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure></div>\n<h2 id=\"do-js\"><a href=\"#do-js\" class=\"headerlink\" title=\"do.js\"></a>do.js</h2><div class=\"code-panel__wrapper\" autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\"><header class=\"mac-panel\"><span class=\"doc-path\"></span><span class=\"mac-panel__language\">JS</span></header><figure class=\"iseeu highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> fs = <span class=\"built_in\">require</span>(<span class=\"string\">'fs'</span>)</span><br><span class=\"line\"><span class=\"keyword\">const</span> stat = fs.stat</span><br><span class=\"line\"><span class=\"keyword\">const</span> path = <span class=\"built_in\">require</span>(<span class=\"string\">'path'</span>)</span><br><span class=\"line\"><span class=\"keyword\">var</span> empty = <span class=\"built_in\">require</span>(<span class=\"string\">'empty-folder'</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">copy</span>(<span class=\"params\">src, dst</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"comment\">//读取目录</span></span><br><span class=\"line\">  fs.readdir(src, (err, paths) =&gt; &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (err) <span class=\"keyword\">throw</span> err</span><br><span class=\"line\">    paths.forEach(<span class=\"function\">(<span class=\"params\">val</span>) =&gt;</span> &#123;</span><br><span class=\"line\">      <span class=\"keyword\">const</span> _src = src + <span class=\"string\">'/'</span> + val</span><br><span class=\"line\">      <span class=\"keyword\">const</span> _dst = dst + <span class=\"string\">'/'</span> + val</span><br><span class=\"line\">      stat(_src, (err, st) =&gt; &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (err) <span class=\"keyword\">throw</span> err</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (st.isFile()) &#123;</span><br><span class=\"line\">          <span class=\"keyword\">const</span> name = path.basename(_src)</span><br><span class=\"line\">          <span class=\"keyword\">const</span> readable = fs.createReadStream(_src) <span class=\"comment\">//创建读取流</span></span><br><span class=\"line\">          <span class=\"keyword\">let</span> writable</span><br><span class=\"line\"></span><br><span class=\"line\">          <span class=\"comment\">// 如果文件是以.vue 结尾的，读取流数据，再写入到目标文件，并更名为.vue.txt</span></span><br><span class=\"line\">          <span class=\"keyword\">if</span> (<span class=\"regexp\">/\\.vue$/</span>.test(name)) &#123;</span><br><span class=\"line\">            writable = fs.createWriteStream(_dst + <span class=\"string\">'.txt'</span>) <span class=\"comment\">//创建写入流</span></span><br><span class=\"line\">          &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            writable = fs.createWriteStream(_dst) <span class=\"comment\">//创建写入流</span></span><br><span class=\"line\">          &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">          readable.pipe(writable)</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (st.isDirectory()) &#123;</span><br><span class=\"line\">          exists(_src, _dst, copy)</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      &#125;)</span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//测试某个路径下文件是否存在</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">exists</span>(<span class=\"params\">src, dst, callback</span>) </span>&#123;</span><br><span class=\"line\">  fs.exists(dst, (exists) =&gt; &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (exists) &#123;</span><br><span class=\"line\">      <span class=\"comment\">//不存在</span></span><br><span class=\"line\">      callback(src, dst)</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">      <span class=\"comment\">//存在</span></span><br><span class=\"line\">      fs.mkdir(dst, () =&gt; &#123;</span><br><span class=\"line\">        <span class=\"comment\">//创建目录</span></span><br><span class=\"line\">        callback(src, dst)</span><br><span class=\"line\">      &#125;)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 清空 target 文件夹</span></span><br><span class=\"line\">empty(<span class=\"string\">'./target'</span>, <span class=\"literal\">false</span>, () =&gt; &#123;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(<span class=\"string\">'clean folder'</span>)</span><br><span class=\"line\">  exists(<span class=\"string\">'./source'</span>, <span class=\"string\">'./target'</span>, copy)</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure></div>\n<h2 id=\"undo-js\"><a href=\"#undo-js\" class=\"headerlink\" title=\"undo.js\"></a>undo.js</h2><div class=\"code-panel__wrapper\" autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\"><header class=\"mac-panel\"><span class=\"doc-path\"></span><span class=\"mac-panel__language\">JS</span></header><figure class=\"iseeu highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> fs = <span class=\"built_in\">require</span>(<span class=\"string\">'fs'</span>)</span><br><span class=\"line\"><span class=\"keyword\">const</span> stat = fs.stat</span><br><span class=\"line\"><span class=\"keyword\">const</span> path = <span class=\"built_in\">require</span>(<span class=\"string\">'path'</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">copy</span>(<span class=\"params\">src, dst</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"comment\">//读取目录</span></span><br><span class=\"line\">  fs.readdir(src, (err, paths) =&gt; &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (err) <span class=\"keyword\">throw</span> err</span><br><span class=\"line\">    paths.forEach(<span class=\"function\">(<span class=\"params\">val</span>) =&gt;</span> &#123;</span><br><span class=\"line\">      <span class=\"keyword\">const</span> _src = src + <span class=\"string\">'/'</span> + val</span><br><span class=\"line\">      <span class=\"keyword\">const</span> _dst = dst + <span class=\"string\">'/'</span> + val</span><br><span class=\"line\">      stat(_src, (err, st) =&gt; &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (err) <span class=\"keyword\">throw</span> err</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (st.isFile()) &#123;</span><br><span class=\"line\">          <span class=\"keyword\">const</span> name = path.basename(_src)</span><br><span class=\"line\">          <span class=\"keyword\">const</span> readable = fs.createReadStream(_src) <span class=\"comment\">//创建读取流</span></span><br><span class=\"line\">          <span class=\"keyword\">let</span> writable</span><br><span class=\"line\"></span><br><span class=\"line\">          <span class=\"keyword\">if</span> (<span class=\"regexp\">/\\.vue.txt$/</span>.test(name)) &#123;</span><br><span class=\"line\">          \t<span class=\"comment\">// 如果是.vue.txt 的文件，改名成.vue</span></span><br><span class=\"line\">            writable = fs.createWriteStream(_dst.split(<span class=\"string\">'.txt'</span>)[<span class=\"number\">0</span>]) <span class=\"comment\">//创建写入流</span></span><br><span class=\"line\">          &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            writable = fs.createWriteStream(_dst) <span class=\"comment\">//创建写入流</span></span><br><span class=\"line\">          &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">          readable.pipe(writable)</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (st.isDirectory()) &#123;</span><br><span class=\"line\">          exists(_src, _dst, copy)</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      &#125;)</span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//测试某个路径下文件是否存在</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">exists</span>(<span class=\"params\">src, dst, callback</span>) </span>&#123;</span><br><span class=\"line\">  fs.exists(dst, (exists) =&gt; &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (exists) &#123;</span><br><span class=\"line\">      <span class=\"comment\">//不存在</span></span><br><span class=\"line\">      callback(src, dst)</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">      <span class=\"comment\">//存在</span></span><br><span class=\"line\">      fs.mkdir(dst, () =&gt; &#123;</span><br><span class=\"line\">        <span class=\"comment\">//创建目录</span></span><br><span class=\"line\">        callback(src, dst)</span><br><span class=\"line\">      &#125;)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">exists(<span class=\"string\">'./target'</span>, <span class=\"string\">'./source'</span>, copy)</span><br></pre></td></tr></table></figure></div>\n","site":{"data":{}},"excerpt":"","more":"<p>事情要从我的工作说起，可能出于安全考虑，公司的开发环境类似内网开发，电脑上安装了加密软件，电脑上的东西无法上传到外网的 git 工具，而且直接上传之后的文件打开是无法恢复的乱码。但是作为程序员，自然有其他方法，把东西拿出来</p>\n<blockquote>\n<p>因为公司的加密软件是按文件格式加密的，前端的文件，只加密了 vue 文件。所以思路就是把文件复制出来，再把 .vue 结尾的文件保存成为 txt 格式，我们的目的就达到了</p>\n</blockquote>\n<p>其实这个功能比较简单，但是我平时的工作偏向前端，没有写过这种纯粹的后台逻辑，所以用了较长的时间才实现，记录下来加深一下印象。最后我也会把例子发出来，有想研究或者嘲讽的都可以下载试试（当然项目源码是不能发出来的）</p>\n<h2 id=\"目录结构\"><a href=\"#目录结构\" class=\"headerlink\" title=\"目录结构\"></a>目录结构</h2><p>首先创建拷贝的项目，初始化 npm，安装<code>empty-folder</code>，用来清空文件夹，创建一个 <code>source</code>文件夹用来存放源码，创建<code>target</code>文件夹用来保存处理后的文件。创建一个<code>copy.js</code>文件，把项目拷贝进<code>source</code>文件夹，创建一个<code>do.js</code>用来把<code>source</code>文件夹中的文件处理完保存到<code>target</code>文件夹中，创建一个<code>undo.js</code>用来把<code>target</code>中的文件还原回来。<br>目录结构如下</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">src</span><br><span class=\"line\">  - source -- 源文件夹</span><br><span class=\"line\">  - target -- 目标文件夹</span><br><span class=\"line\">  - copy.js -- 复制文件</span><br><span class=\"line\">  - do.js -- 保存文件</span><br><span class=\"line\">  - undo.js -- 恢复文件</span><br><span class=\"line\">  - package.json -- 安装了`empty-folder`</span><br></pre></td></tr></table></figure>\n<h2 id=\"copy-js\"><a href=\"#copy-js\" class=\"headerlink\" title=\"copy.js\"></a>copy.js</h2><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> fs = <span class=\"built_in\">require</span>(<span class=\"string\">'fs'</span>);</span><br><span class=\"line\"><span class=\"keyword\">var</span> stat = fs.stat;</span><br><span class=\"line\"><span class=\"keyword\">var</span> empty = <span class=\"built_in\">require</span>(<span class=\"string\">'empty-folder'</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> copy = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">src, dst</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">//读取目录</span></span><br><span class=\"line\">    fs.readdir(src, <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">err, paths</span>) </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (err) <span class=\"keyword\">throw</span> err;</span><br><span class=\"line\">        paths.forEach(<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">path</span>) </span>&#123;</span><br><span class=\"line\">            <span class=\"keyword\">var</span> _src = src + <span class=\"string\">'/'</span> + path;</span><br><span class=\"line\">            <span class=\"keyword\">var</span> _dst = dst + <span class=\"string\">'/'</span> + path;</span><br><span class=\"line\">            <span class=\"keyword\">var</span> readable;</span><br><span class=\"line\">            <span class=\"keyword\">var</span> writable;</span><br><span class=\"line\">            stat(_src, <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">err, st</span>) </span>&#123;</span><br><span class=\"line\">                <span class=\"keyword\">if</span> (err) &#123;</span><br><span class=\"line\">                    <span class=\"keyword\">throw</span> err;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">                <span class=\"keyword\">if</span> (st.isFile()) &#123;</span><br><span class=\"line\">                    readable = fs.createReadStream(_src);<span class=\"comment\">//创建读取流</span></span><br><span class=\"line\">                    writable = fs.createWriteStream(_dst);<span class=\"comment\">//创建写入流</span></span><br><span class=\"line\">                    readable.pipe(writable);</span><br><span class=\"line\">                &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (st.isDirectory()) &#123;</span><br><span class=\"line\">                  <span class=\"comment\">// 不需要拷贝的文件夹</span></span><br><span class=\"line\">                  <span class=\"keyword\">const</span> exclude = [<span class=\"string\">'node_modules'</span>, <span class=\"string\">'.idea'</span>, <span class=\"string\">'.git'</span>, <span class=\"string\">'.vscode'</span>]</span><br><span class=\"line\">                  <span class=\"keyword\">let</span> flag = exclude.reduce(<span class=\"function\">(<span class=\"params\">res,cur</span>)=&gt;</span> &#123;</span><br><span class=\"line\">                    res = res || _src.includes(cur)</span><br><span class=\"line\">                    <span class=\"keyword\">return</span> res</span><br><span class=\"line\">                  &#125;, <span class=\"literal\">false</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">                  <span class=\"keyword\">if</span> (!flag) &#123;</span><br><span class=\"line\">                    exists(_src, _dst, copy);</span><br><span class=\"line\">                  &#125;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;);</span><br><span class=\"line\">        &#125;);</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> exists = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">src, dst, callback</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">//测试某个路径下文件是否存在</span></span><br><span class=\"line\">    fs.exists(dst, <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">exists</span>) </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (exists) &#123;<span class=\"comment\">//不存在</span></span><br><span class=\"line\">            callback(src, dst);</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> &#123;<span class=\"comment\">//存在</span></span><br><span class=\"line\">            fs.mkdir(dst, <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;<span class=\"comment\">//创建目录</span></span><br><span class=\"line\">                callback(src, dst)</span><br><span class=\"line\">            &#125;)</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 先清空 source 文件夹</span></span><br><span class=\"line\">empty(<span class=\"string\">'./source'</span>, <span class=\"literal\">false</span>, () =&gt; &#123;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(<span class=\"string\">'clean folder'</span>)</span><br><span class=\"line\">  <span class=\"comment\">// 拷贝D盘中的项目 A 到 source文件夹</span></span><br><span class=\"line\">  <span class=\"keyword\">new</span> <span class=\"built_in\">Promise</span>(<span class=\"function\"><span class=\"params\">resolve</span>=&gt;</span> &#123;</span><br><span class=\"line\">    resolve(exists(<span class=\"string\">'D:/workspace/yunsa_cloud_fre'</span>, <span class=\"string\">'./source/yunsa_cloud_fre'</span>, copy))</span><br><span class=\"line\">  &#125;).then(<span class=\"function\"><span class=\"params\">()</span>=&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"string\">'copy yunsa_cloud_fre success'</span>)</span><br><span class=\"line\">    <span class=\"comment\">// 拷贝桌面上的项目二到 source 文件夹</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> <span class=\"built_in\">Promise</span>(<span class=\"function\"><span class=\"params\">resolve</span>=&gt;</span> &#123;</span><br><span class=\"line\">      resolve(exists(<span class=\"string\">'../vue-form-making@1.2.13'</span>, <span class=\"string\">'./source/vue-form-making'</span>, copy))</span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">  &#125;).then(<span class=\"function\"><span class=\"params\">()</span>=&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"string\">'copy vue-form-making success'</span>)</span><br><span class=\"line\">    <span class=\"comment\">// 拷贝桌面上的项目三到 source 文件夹</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> <span class=\"built_in\">Promise</span>(<span class=\"function\"><span class=\"params\">resolve</span>=&gt;</span> &#123;</span><br><span class=\"line\">      resolve(exists(<span class=\"string\">'../vue-g6-editor'</span>, <span class=\"string\">'./source/vue-g6-editor'</span>, copy))</span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\">  .then(<span class=\"function\"><span class=\"params\">()</span> =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"string\">'copy vue-g6-editor success'</span>)</span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n<h2 id=\"do-js\"><a href=\"#do-js\" class=\"headerlink\" title=\"do.js\"></a>do.js</h2><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> fs = <span class=\"built_in\">require</span>(<span class=\"string\">'fs'</span>)</span><br><span class=\"line\"><span class=\"keyword\">const</span> stat = fs.stat</span><br><span class=\"line\"><span class=\"keyword\">const</span> path = <span class=\"built_in\">require</span>(<span class=\"string\">'path'</span>)</span><br><span class=\"line\"><span class=\"keyword\">var</span> empty = <span class=\"built_in\">require</span>(<span class=\"string\">'empty-folder'</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">copy</span>(<span class=\"params\">src, dst</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"comment\">//读取目录</span></span><br><span class=\"line\">  fs.readdir(src, (err, paths) =&gt; &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (err) <span class=\"keyword\">throw</span> err</span><br><span class=\"line\">    paths.forEach(<span class=\"function\">(<span class=\"params\">val</span>) =&gt;</span> &#123;</span><br><span class=\"line\">      <span class=\"keyword\">const</span> _src = src + <span class=\"string\">'/'</span> + val</span><br><span class=\"line\">      <span class=\"keyword\">const</span> _dst = dst + <span class=\"string\">'/'</span> + val</span><br><span class=\"line\">      stat(_src, (err, st) =&gt; &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (err) <span class=\"keyword\">throw</span> err</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (st.isFile()) &#123;</span><br><span class=\"line\">          <span class=\"keyword\">const</span> name = path.basename(_src)</span><br><span class=\"line\">          <span class=\"keyword\">const</span> readable = fs.createReadStream(_src) <span class=\"comment\">//创建读取流</span></span><br><span class=\"line\">          <span class=\"keyword\">let</span> writable</span><br><span class=\"line\"></span><br><span class=\"line\">          <span class=\"comment\">// 如果文件是以.vue 结尾的，读取流数据，再写入到目标文件，并更名为.vue.txt</span></span><br><span class=\"line\">          <span class=\"keyword\">if</span> (<span class=\"regexp\">/\\.vue$/</span>.test(name)) &#123;</span><br><span class=\"line\">            writable = fs.createWriteStream(_dst + <span class=\"string\">'.txt'</span>) <span class=\"comment\">//创建写入流</span></span><br><span class=\"line\">          &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            writable = fs.createWriteStream(_dst) <span class=\"comment\">//创建写入流</span></span><br><span class=\"line\">          &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">          readable.pipe(writable)</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (st.isDirectory()) &#123;</span><br><span class=\"line\">          exists(_src, _dst, copy)</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      &#125;)</span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//测试某个路径下文件是否存在</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">exists</span>(<span class=\"params\">src, dst, callback</span>) </span>&#123;</span><br><span class=\"line\">  fs.exists(dst, (exists) =&gt; &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (exists) &#123;</span><br><span class=\"line\">      <span class=\"comment\">//不存在</span></span><br><span class=\"line\">      callback(src, dst)</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">      <span class=\"comment\">//存在</span></span><br><span class=\"line\">      fs.mkdir(dst, () =&gt; &#123;</span><br><span class=\"line\">        <span class=\"comment\">//创建目录</span></span><br><span class=\"line\">        callback(src, dst)</span><br><span class=\"line\">      &#125;)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 清空 target 文件夹</span></span><br><span class=\"line\">empty(<span class=\"string\">'./target'</span>, <span class=\"literal\">false</span>, () =&gt; &#123;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(<span class=\"string\">'clean folder'</span>)</span><br><span class=\"line\">  exists(<span class=\"string\">'./source'</span>, <span class=\"string\">'./target'</span>, copy)</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n<h2 id=\"undo-js\"><a href=\"#undo-js\" class=\"headerlink\" title=\"undo.js\"></a>undo.js</h2><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> fs = <span class=\"built_in\">require</span>(<span class=\"string\">'fs'</span>)</span><br><span class=\"line\"><span class=\"keyword\">const</span> stat = fs.stat</span><br><span class=\"line\"><span class=\"keyword\">const</span> path = <span class=\"built_in\">require</span>(<span class=\"string\">'path'</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">copy</span>(<span class=\"params\">src, dst</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"comment\">//读取目录</span></span><br><span class=\"line\">  fs.readdir(src, (err, paths) =&gt; &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (err) <span class=\"keyword\">throw</span> err</span><br><span class=\"line\">    paths.forEach(<span class=\"function\">(<span class=\"params\">val</span>) =&gt;</span> &#123;</span><br><span class=\"line\">      <span class=\"keyword\">const</span> _src = src + <span class=\"string\">'/'</span> + val</span><br><span class=\"line\">      <span class=\"keyword\">const</span> _dst = dst + <span class=\"string\">'/'</span> + val</span><br><span class=\"line\">      stat(_src, (err, st) =&gt; &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (err) <span class=\"keyword\">throw</span> err</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (st.isFile()) &#123;</span><br><span class=\"line\">          <span class=\"keyword\">const</span> name = path.basename(_src)</span><br><span class=\"line\">          <span class=\"keyword\">const</span> readable = fs.createReadStream(_src) <span class=\"comment\">//创建读取流</span></span><br><span class=\"line\">          <span class=\"keyword\">let</span> writable</span><br><span class=\"line\"></span><br><span class=\"line\">          <span class=\"keyword\">if</span> (<span class=\"regexp\">/\\.vue.txt$/</span>.test(name)) &#123;</span><br><span class=\"line\">          \t<span class=\"comment\">// 如果是.vue.txt 的文件，改名成.vue</span></span><br><span class=\"line\">            writable = fs.createWriteStream(_dst.split(<span class=\"string\">'.txt'</span>)[<span class=\"number\">0</span>]) <span class=\"comment\">//创建写入流</span></span><br><span class=\"line\">          &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            writable = fs.createWriteStream(_dst) <span class=\"comment\">//创建写入流</span></span><br><span class=\"line\">          &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">          readable.pipe(writable)</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (st.isDirectory()) &#123;</span><br><span class=\"line\">          exists(_src, _dst, copy)</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      &#125;)</span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//测试某个路径下文件是否存在</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">exists</span>(<span class=\"params\">src, dst, callback</span>) </span>&#123;</span><br><span class=\"line\">  fs.exists(dst, (exists) =&gt; &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (exists) &#123;</span><br><span class=\"line\">      <span class=\"comment\">//不存在</span></span><br><span class=\"line\">      callback(src, dst)</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">      <span class=\"comment\">//存在</span></span><br><span class=\"line\">      fs.mkdir(dst, () =&gt; &#123;</span><br><span class=\"line\">        <span class=\"comment\">//创建目录</span></span><br><span class=\"line\">        callback(src, dst)</span><br><span class=\"line\">      &#125;)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">exists(<span class=\"string\">'./target'</span>, <span class=\"string\">'./source'</span>, copy)</span><br></pre></td></tr></table></figure>\n"},{"title":"管理团队代码","date":"2018-10-16T08:07:51.000Z","description":"使用prettier + eslint + husky 管理团队代码","_content":"> prettier的中文意思是“漂亮的、机灵的”，也是一个流行的代码格式化工具的名称，它能够解析代码，使用你自己设定的规则来重新打印出格式规范的代码。\n>\n## 同样是代码解析工具，为什么有了eslint还需要prettier？\n\n众所周知，eslint是一款代码检查工具，但它有不足的地方。虽然提供了大量的代码检查方案，但也只是停留在了代码检查的阶段而已。他会提出警告：你的代码不符合我制定的规范，但也仅此而已。但prettier不同。prettier的处理方案是：删除所有代码原始样式，并通过既定的规则，重新生成AST，然后生成新的代码。用这种方法确保所有输出的代码都符合一致的样式。先看一个简单的例子：\n\n```js\n// foo\nfoo()\n```\n\n但或许你喜欢注释里方法远一些呢？\n\n```js\n// foo\n\nfoo()\n```\n\n事实上，如果注释和方法之间插入的都是空白行，在eslint看来，这俩种方法是完全相同的，都不会产生错误。再来看另一个例子：\n\n```js\n$(foo).css().animate().addClass().click()\n```\n\n但如果你更喜欢这样的写法呢？\n\n```js\n$(foo).css()\n      .animate()\n      .addClass()\n      .click()\n```\n\n很显然，俩种方法都有存在的可能性，但同样的，eslint还是会认为这样都是极好的，不会做任何处理。\n\n这样的例子其实有很多。因此，eslint的局限性就凸显了出来，我们需要prettier来更加规范我们的代码。prettier的处理方式如上所述，删除你的所有代码样式，然后按照约束的规则，重新生成符合标准的代码。这样一来就保证了无论你的代码以什么样的格式输入，都能保证在prettier解析之后得到的代码是完全一样的。\n\n## 为什么prettier比eslint更强大，我们我选择单独使用prettier？\n\nprettier虽然有更强大的能力，但他只提供了非常少的规则。换句话说，我们使用prettier来生成代码，但生成代码的规则还是由eslint来提供的。\n\n## 如何使用prettier？\n\n### 首先安装prettier\n\n```shell\nnpm i -D eslint-plugin-prettier eslint-config-prettier\n```\n\n### 然后编辑.eslintrc\n\n```js\nmodule.exports = {\n  ...\n  extends: [\n    ...\n    \"plugin:prettier/recommended\"\n  ],\n  plugins: [\n    'vue',\n    'prettier'\n  ],\n  rules: {\n    ...\n  }\n}\n```\n\nrules里可以填写eslint的规则或者eslint-config-prettier的规则。\n\n### 最后创建.prettierrc文件，写prettier自己的规则：\n\n```json\n{\n\"semi\": false,\n\"singleQuote\": true,\n\"printWidth\": 80,\n\"tabWidth\": 2,\n\"useTabs\": false,\n\"trailingComma\": \"all\",\n\"bracketSpacing\": true,\n\"jsxBracketSameLine\": false,\n\"arrowParens\": \"avoid\"\n// ...\n}\n```\n\n具体的规则[看这里](https://prettier.io/docs/en/options.html)。\n\n## husky 又是什么东西？\n\nhusky可以阻止git commit 和git push的操作。我们可以配合使用，只有prettier没有问题时才可以提交git操作。\n\n```shell\nnpm i -D lint-staged husky\n```\n\n```json\n// package.json\n{\n  ...\n  \"scripts\": {\n    ...\n    \"lint\": \"eslint --ext .js,.vue src\",\n    \"format\": \"prettier --write \\\"src/**/*.js\\\" \\\"src/**/*.vue\\\"\",\n    \"precommit\": \"lint-staged\"\n  },\n  \"lint-staged\": {\n    \"src/**/*.{js,json,css,vue}\": [\n      \"prettier --write\",\n      \"eslint --fix\",\n      \"git add\"\n    ]\n  },\n  \"husky\": {\n    \"hooks\": {\n      \"pre-commit\": \"npm run lint\",\n      \"pre-push\": \"npm test\",\n      \"...\": \"...\"\n    }\n  }\n}\n```\n\n这里scripts里添加了三个命令，第一个检测src目录下的js文件和vue文件是否符合eslint标准，第二个按照prettier标准格式化src文件夹中的js文件和vue文件，第三条规定在git commit之前调起lint-staged。\nlint-staged则规定了顺序执行三个命令，先按照prettier规则重写文件，再解决eslint警告，最后添加git文件。\n\nhusky则规定了在commit之前运行lint命令，不通过会报错，无法commit。同样的，push之前也可以做一些操作。更具体的细节[看这里](https://github.com/typicode/husky)。\n","source":"_posts/管理团队代码.md","raw":"---\ntitle: 管理团队代码\ntags: [Eslint, Prettier]\ndate: 2018-10-16 16:07:51\ncategories: [Eslint]\ndescription: 使用prettier + eslint + husky 管理团队代码\n---\n> prettier的中文意思是“漂亮的、机灵的”，也是一个流行的代码格式化工具的名称，它能够解析代码，使用你自己设定的规则来重新打印出格式规范的代码。\n>\n## 同样是代码解析工具，为什么有了eslint还需要prettier？\n\n众所周知，eslint是一款代码检查工具，但它有不足的地方。虽然提供了大量的代码检查方案，但也只是停留在了代码检查的阶段而已。他会提出警告：你的代码不符合我制定的规范，但也仅此而已。但prettier不同。prettier的处理方案是：删除所有代码原始样式，并通过既定的规则，重新生成AST，然后生成新的代码。用这种方法确保所有输出的代码都符合一致的样式。先看一个简单的例子：\n\n```js\n// foo\nfoo()\n```\n\n但或许你喜欢注释里方法远一些呢？\n\n```js\n// foo\n\nfoo()\n```\n\n事实上，如果注释和方法之间插入的都是空白行，在eslint看来，这俩种方法是完全相同的，都不会产生错误。再来看另一个例子：\n\n```js\n$(foo).css().animate().addClass().click()\n```\n\n但如果你更喜欢这样的写法呢？\n\n```js\n$(foo).css()\n      .animate()\n      .addClass()\n      .click()\n```\n\n很显然，俩种方法都有存在的可能性，但同样的，eslint还是会认为这样都是极好的，不会做任何处理。\n\n这样的例子其实有很多。因此，eslint的局限性就凸显了出来，我们需要prettier来更加规范我们的代码。prettier的处理方式如上所述，删除你的所有代码样式，然后按照约束的规则，重新生成符合标准的代码。这样一来就保证了无论你的代码以什么样的格式输入，都能保证在prettier解析之后得到的代码是完全一样的。\n\n## 为什么prettier比eslint更强大，我们我选择单独使用prettier？\n\nprettier虽然有更强大的能力，但他只提供了非常少的规则。换句话说，我们使用prettier来生成代码，但生成代码的规则还是由eslint来提供的。\n\n## 如何使用prettier？\n\n### 首先安装prettier\n\n```shell\nnpm i -D eslint-plugin-prettier eslint-config-prettier\n```\n\n### 然后编辑.eslintrc\n\n```js\nmodule.exports = {\n  ...\n  extends: [\n    ...\n    \"plugin:prettier/recommended\"\n  ],\n  plugins: [\n    'vue',\n    'prettier'\n  ],\n  rules: {\n    ...\n  }\n}\n```\n\nrules里可以填写eslint的规则或者eslint-config-prettier的规则。\n\n### 最后创建.prettierrc文件，写prettier自己的规则：\n\n```json\n{\n\"semi\": false,\n\"singleQuote\": true,\n\"printWidth\": 80,\n\"tabWidth\": 2,\n\"useTabs\": false,\n\"trailingComma\": \"all\",\n\"bracketSpacing\": true,\n\"jsxBracketSameLine\": false,\n\"arrowParens\": \"avoid\"\n// ...\n}\n```\n\n具体的规则[看这里](https://prettier.io/docs/en/options.html)。\n\n## husky 又是什么东西？\n\nhusky可以阻止git commit 和git push的操作。我们可以配合使用，只有prettier没有问题时才可以提交git操作。\n\n```shell\nnpm i -D lint-staged husky\n```\n\n```json\n// package.json\n{\n  ...\n  \"scripts\": {\n    ...\n    \"lint\": \"eslint --ext .js,.vue src\",\n    \"format\": \"prettier --write \\\"src/**/*.js\\\" \\\"src/**/*.vue\\\"\",\n    \"precommit\": \"lint-staged\"\n  },\n  \"lint-staged\": {\n    \"src/**/*.{js,json,css,vue}\": [\n      \"prettier --write\",\n      \"eslint --fix\",\n      \"git add\"\n    ]\n  },\n  \"husky\": {\n    \"hooks\": {\n      \"pre-commit\": \"npm run lint\",\n      \"pre-push\": \"npm test\",\n      \"...\": \"...\"\n    }\n  }\n}\n```\n\n这里scripts里添加了三个命令，第一个检测src目录下的js文件和vue文件是否符合eslint标准，第二个按照prettier标准格式化src文件夹中的js文件和vue文件，第三条规定在git commit之前调起lint-staged。\nlint-staged则规定了顺序执行三个命令，先按照prettier规则重写文件，再解决eslint警告，最后添加git文件。\n\nhusky则规定了在commit之前运行lint命令，不通过会报错，无法commit。同样的，push之前也可以做一些操作。更具体的细节[看这里](https://github.com/typicode/husky)。\n","slug":"管理团队代码","published":1,"updated":"2021-06-25T11:19:55.450Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckqc904pp002ywotvvb3dmvbl","content":"<blockquote>\n<p>prettier的中文意思是“漂亮的、机灵的”，也是一个流行的代码格式化工具的名称，它能够解析代码，使用你自己设定的规则来重新打印出格式规范的代码。</p>\n</blockquote>\n<h2 id=\"同样是代码解析工具，为什么有了eslint还需要prettier？\"><a href=\"#同样是代码解析工具，为什么有了eslint还需要prettier？\" class=\"headerlink\" title=\"同样是代码解析工具，为什么有了eslint还需要prettier？\"></a>同样是代码解析工具，为什么有了eslint还需要prettier？</h2><p>众所周知，eslint是一款代码检查工具，但它有不足的地方。虽然提供了大量的代码检查方案，但也只是停留在了代码检查的阶段而已。他会提出警告：你的代码不符合我制定的规范，但也仅此而已。但prettier不同。prettier的处理方案是：删除所有代码原始样式，并通过既定的规则，重新生成AST，然后生成新的代码。用这种方法确保所有输出的代码都符合一致的样式。先看一个简单的例子：</p>\n<div class=\"code-panel__wrapper\" autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\"><header class=\"mac-panel\"><span class=\"doc-path\"></span><span class=\"mac-panel__language\">JS</span></header><figure class=\"iseeu highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// foo</span></span><br><span class=\"line\">foo()</span><br></pre></td></tr></table></figure></div>\n<p>但或许你喜欢注释里方法远一些呢？</p>\n<div class=\"code-panel__wrapper\" autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\"><header class=\"mac-panel\"><span class=\"doc-path\"></span><span class=\"mac-panel__language\">JS</span></header><figure class=\"iseeu highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// foo</span></span><br><span class=\"line\"></span><br><span class=\"line\">foo()</span><br></pre></td></tr></table></figure></div>\n<p>事实上，如果注释和方法之间插入的都是空白行，在eslint看来，这俩种方法是完全相同的，都不会产生错误。再来看另一个例子：</p>\n<div class=\"code-panel__wrapper\" autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\"><header class=\"mac-panel\"><span class=\"doc-path\"></span><span class=\"mac-panel__language\">JS</span></header><figure class=\"iseeu highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$(foo).css().animate().addClass().click()</span><br></pre></td></tr></table></figure></div>\n<p>但如果你更喜欢这样的写法呢？</p>\n<div class=\"code-panel__wrapper\" autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\"><header class=\"mac-panel\"><span class=\"doc-path\"></span><span class=\"mac-panel__language\">JS</span></header><figure class=\"iseeu highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$(foo).css()</span><br><span class=\"line\">      .animate()</span><br><span class=\"line\">      .addClass()</span><br><span class=\"line\">      .click()</span><br></pre></td></tr></table></figure></div>\n<p>很显然，俩种方法都有存在的可能性，但同样的，eslint还是会认为这样都是极好的，不会做任何处理。</p>\n<p>这样的例子其实有很多。因此，eslint的局限性就凸显了出来，我们需要prettier来更加规范我们的代码。prettier的处理方式如上所述，删除你的所有代码样式，然后按照约束的规则，重新生成符合标准的代码。这样一来就保证了无论你的代码以什么样的格式输入，都能保证在prettier解析之后得到的代码是完全一样的。</p>\n<h2 id=\"为什么prettier比eslint更强大，我们我选择单独使用prettier？\"><a href=\"#为什么prettier比eslint更强大，我们我选择单独使用prettier？\" class=\"headerlink\" title=\"为什么prettier比eslint更强大，我们我选择单独使用prettier？\"></a>为什么prettier比eslint更强大，我们我选择单独使用prettier？</h2><p>prettier虽然有更强大的能力，但他只提供了非常少的规则。换句话说，我们使用prettier来生成代码，但生成代码的规则还是由eslint来提供的。</p>\n<h2 id=\"如何使用prettier？\"><a href=\"#如何使用prettier？\" class=\"headerlink\" title=\"如何使用prettier？\"></a>如何使用prettier？</h2><h3 id=\"首先安装prettier\"><a href=\"#首先安装prettier\" class=\"headerlink\" title=\"首先安装prettier\"></a>首先安装prettier</h3><div class=\"code-panel__wrapper\" autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\"><header class=\"mac-panel\"><span class=\"doc-path\"></span><span class=\"mac-panel__language\">SHELL</span></header><figure class=\"iseeu highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm i -D eslint-plugin-prettier eslint-config-prettier</span><br></pre></td></tr></table></figure></div>\n<h3 id=\"然后编辑-eslintrc\"><a href=\"#然后编辑-eslintrc\" class=\"headerlink\" title=\"然后编辑.eslintrc\"></a>然后编辑.eslintrc</h3><div class=\"code-panel__wrapper\" autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\"><header class=\"mac-panel\"><span class=\"doc-path\"></span><span class=\"mac-panel__language\">JS</span></header><figure class=\"iseeu highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">module</span>.exports = &#123;</span><br><span class=\"line\">  ...</span><br><span class=\"line\">  extends: [</span><br><span class=\"line\">    ...</span><br><span class=\"line\">    <span class=\"string\">\"plugin:prettier/recommended\"</span></span><br><span class=\"line\">  ],</span><br><span class=\"line\">  plugins: [</span><br><span class=\"line\">    <span class=\"string\">'vue'</span>,</span><br><span class=\"line\">    <span class=\"string\">'prettier'</span></span><br><span class=\"line\">  ],</span><br><span class=\"line\">  rules: &#123;</span><br><span class=\"line\">    ...</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></div>\n<p>rules里可以填写eslint的规则或者eslint-config-prettier的规则。</p>\n<h3 id=\"最后创建-prettierrc文件，写prettier自己的规则：\"><a href=\"#最后创建-prettierrc文件，写prettier自己的规则：\" class=\"headerlink\" title=\"最后创建.prettierrc文件，写prettier自己的规则：\"></a>最后创建.prettierrc文件，写prettier自己的规则：</h3><div class=\"code-panel__wrapper\" autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\"><header class=\"mac-panel\"><span class=\"doc-path\"></span><span class=\"mac-panel__language\">JSON</span></header><figure class=\"iseeu highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\"><span class=\"attr\">\"semi\"</span>: <span class=\"literal\">false</span>,</span><br><span class=\"line\"><span class=\"attr\">\"singleQuote\"</span>: <span class=\"literal\">true</span>,</span><br><span class=\"line\"><span class=\"attr\">\"printWidth\"</span>: <span class=\"number\">80</span>,</span><br><span class=\"line\"><span class=\"attr\">\"tabWidth\"</span>: <span class=\"number\">2</span>,</span><br><span class=\"line\"><span class=\"attr\">\"useTabs\"</span>: <span class=\"literal\">false</span>,</span><br><span class=\"line\"><span class=\"attr\">\"trailingComma\"</span>: <span class=\"string\">\"all\"</span>,</span><br><span class=\"line\"><span class=\"attr\">\"bracketSpacing\"</span>: <span class=\"literal\">true</span>,</span><br><span class=\"line\"><span class=\"attr\">\"jsxBracketSameLine\"</span>: <span class=\"literal\">false</span>,</span><br><span class=\"line\"><span class=\"attr\">\"arrowParens\"</span>: <span class=\"string\">\"avoid\"</span></span><br><span class=\"line\"><span class=\"comment\">// ...</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></div>\n<p>具体的规则<a href=\"https://prettier.io/docs/en/options.html\" target=\"_blank\" rel=\"noopener\">看这里</a>。</p>\n<h2 id=\"husky-又是什么东西？\"><a href=\"#husky-又是什么东西？\" class=\"headerlink\" title=\"husky 又是什么东西？\"></a>husky 又是什么东西？</h2><p>husky可以阻止git commit 和git push的操作。我们可以配合使用，只有prettier没有问题时才可以提交git操作。</p>\n<div class=\"code-panel__wrapper\" autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\"><header class=\"mac-panel\"><span class=\"doc-path\"></span><span class=\"mac-panel__language\">SHELL</span></header><figure class=\"iseeu highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm i -D lint-staged husky</span><br></pre></td></tr></table></figure></div>\n<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// package.json</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">  ...</span><br><span class=\"line\">  \"scripts\": &#123;</span><br><span class=\"line\">    ...</span><br><span class=\"line\">    \"lint\": \"eslint --ext .js,.vue src\",</span><br><span class=\"line\">    \"format\": \"prettier --write \\\"src/**/*.js\\\" \\\"src/**/*.vue\\\"\",</span><br><span class=\"line\">    \"precommit\": \"lint-staged\"</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  \"lint-staged\": &#123;</span><br><span class=\"line\">    \"src/**/*.&#123;js,json,css,vue&#125;\": [</span><br><span class=\"line\">      \"prettier --write\",</span><br><span class=\"line\">      \"eslint --fix\",</span><br><span class=\"line\">      <span class=\"string\">\"git add\"</span></span><br><span class=\"line\">    ]</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  \"husky\": &#123;</span><br><span class=\"line\">    \"hooks\": &#123;</span><br><span class=\"line\">      \"pre-commit\": \"npm run lint\",</span><br><span class=\"line\">      \"pre-push\": \"npm test\",</span><br><span class=\"line\">      \"...\": \"...\"</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>这里scripts里添加了三个命令，第一个检测src目录下的js文件和vue文件是否符合eslint标准，第二个按照prettier标准格式化src文件夹中的js文件和vue文件，第三条规定在git commit之前调起lint-staged。<br>lint-staged则规定了顺序执行三个命令，先按照prettier规则重写文件，再解决eslint警告，最后添加git文件。</p>\n<p>husky则规定了在commit之前运行lint命令，不通过会报错，无法commit。同样的，push之前也可以做一些操作。更具体的细节<a href=\"https://github.com/typicode/husky\" target=\"_blank\" rel=\"noopener\">看这里</a>。</p>\n","site":{"data":{}},"excerpt":"","more":"<blockquote>\n<p>prettier的中文意思是“漂亮的、机灵的”，也是一个流行的代码格式化工具的名称，它能够解析代码，使用你自己设定的规则来重新打印出格式规范的代码。</p>\n</blockquote>\n<h2 id=\"同样是代码解析工具，为什么有了eslint还需要prettier？\"><a href=\"#同样是代码解析工具，为什么有了eslint还需要prettier？\" class=\"headerlink\" title=\"同样是代码解析工具，为什么有了eslint还需要prettier？\"></a>同样是代码解析工具，为什么有了eslint还需要prettier？</h2><p>众所周知，eslint是一款代码检查工具，但它有不足的地方。虽然提供了大量的代码检查方案，但也只是停留在了代码检查的阶段而已。他会提出警告：你的代码不符合我制定的规范，但也仅此而已。但prettier不同。prettier的处理方案是：删除所有代码原始样式，并通过既定的规则，重新生成AST，然后生成新的代码。用这种方法确保所有输出的代码都符合一致的样式。先看一个简单的例子：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// foo</span></span><br><span class=\"line\">foo()</span><br></pre></td></tr></table></figure>\n<p>但或许你喜欢注释里方法远一些呢？</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// foo</span></span><br><span class=\"line\"></span><br><span class=\"line\">foo()</span><br></pre></td></tr></table></figure>\n<p>事实上，如果注释和方法之间插入的都是空白行，在eslint看来，这俩种方法是完全相同的，都不会产生错误。再来看另一个例子：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$(foo).css().animate().addClass().click()</span><br></pre></td></tr></table></figure>\n<p>但如果你更喜欢这样的写法呢？</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$(foo).css()</span><br><span class=\"line\">      .animate()</span><br><span class=\"line\">      .addClass()</span><br><span class=\"line\">      .click()</span><br></pre></td></tr></table></figure>\n<p>很显然，俩种方法都有存在的可能性，但同样的，eslint还是会认为这样都是极好的，不会做任何处理。</p>\n<p>这样的例子其实有很多。因此，eslint的局限性就凸显了出来，我们需要prettier来更加规范我们的代码。prettier的处理方式如上所述，删除你的所有代码样式，然后按照约束的规则，重新生成符合标准的代码。这样一来就保证了无论你的代码以什么样的格式输入，都能保证在prettier解析之后得到的代码是完全一样的。</p>\n<h2 id=\"为什么prettier比eslint更强大，我们我选择单独使用prettier？\"><a href=\"#为什么prettier比eslint更强大，我们我选择单独使用prettier？\" class=\"headerlink\" title=\"为什么prettier比eslint更强大，我们我选择单独使用prettier？\"></a>为什么prettier比eslint更强大，我们我选择单独使用prettier？</h2><p>prettier虽然有更强大的能力，但他只提供了非常少的规则。换句话说，我们使用prettier来生成代码，但生成代码的规则还是由eslint来提供的。</p>\n<h2 id=\"如何使用prettier？\"><a href=\"#如何使用prettier？\" class=\"headerlink\" title=\"如何使用prettier？\"></a>如何使用prettier？</h2><h3 id=\"首先安装prettier\"><a href=\"#首先安装prettier\" class=\"headerlink\" title=\"首先安装prettier\"></a>首先安装prettier</h3><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm i -D eslint-plugin-prettier eslint-config-prettier</span><br></pre></td></tr></table></figure>\n<h3 id=\"然后编辑-eslintrc\"><a href=\"#然后编辑-eslintrc\" class=\"headerlink\" title=\"然后编辑.eslintrc\"></a>然后编辑.eslintrc</h3><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">module</span>.exports = &#123;</span><br><span class=\"line\">  ...</span><br><span class=\"line\">  extends: [</span><br><span class=\"line\">    ...</span><br><span class=\"line\">    <span class=\"string\">\"plugin:prettier/recommended\"</span></span><br><span class=\"line\">  ],</span><br><span class=\"line\">  plugins: [</span><br><span class=\"line\">    <span class=\"string\">'vue'</span>,</span><br><span class=\"line\">    <span class=\"string\">'prettier'</span></span><br><span class=\"line\">  ],</span><br><span class=\"line\">  rules: &#123;</span><br><span class=\"line\">    ...</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>rules里可以填写eslint的规则或者eslint-config-prettier的规则。</p>\n<h3 id=\"最后创建-prettierrc文件，写prettier自己的规则：\"><a href=\"#最后创建-prettierrc文件，写prettier自己的规则：\" class=\"headerlink\" title=\"最后创建.prettierrc文件，写prettier自己的规则：\"></a>最后创建.prettierrc文件，写prettier自己的规则：</h3><figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\"><span class=\"attr\">\"semi\"</span>: <span class=\"literal\">false</span>,</span><br><span class=\"line\"><span class=\"attr\">\"singleQuote\"</span>: <span class=\"literal\">true</span>,</span><br><span class=\"line\"><span class=\"attr\">\"printWidth\"</span>: <span class=\"number\">80</span>,</span><br><span class=\"line\"><span class=\"attr\">\"tabWidth\"</span>: <span class=\"number\">2</span>,</span><br><span class=\"line\"><span class=\"attr\">\"useTabs\"</span>: <span class=\"literal\">false</span>,</span><br><span class=\"line\"><span class=\"attr\">\"trailingComma\"</span>: <span class=\"string\">\"all\"</span>,</span><br><span class=\"line\"><span class=\"attr\">\"bracketSpacing\"</span>: <span class=\"literal\">true</span>,</span><br><span class=\"line\"><span class=\"attr\">\"jsxBracketSameLine\"</span>: <span class=\"literal\">false</span>,</span><br><span class=\"line\"><span class=\"attr\">\"arrowParens\"</span>: <span class=\"string\">\"avoid\"</span></span><br><span class=\"line\"><span class=\"comment\">// ...</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>具体的规则<a href=\"https://prettier.io/docs/en/options.html\" target=\"_blank\" rel=\"noopener\">看这里</a>。</p>\n<h2 id=\"husky-又是什么东西？\"><a href=\"#husky-又是什么东西？\" class=\"headerlink\" title=\"husky 又是什么东西？\"></a>husky 又是什么东西？</h2><p>husky可以阻止git commit 和git push的操作。我们可以配合使用，只有prettier没有问题时才可以提交git操作。</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm i -D lint-staged husky</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// package.json</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">  ...</span><br><span class=\"line\">  \"scripts\": &#123;</span><br><span class=\"line\">    ...</span><br><span class=\"line\">    \"lint\": \"eslint --ext .js,.vue src\",</span><br><span class=\"line\">    \"format\": \"prettier --write \\\"src/**/*.js\\\" \\\"src/**/*.vue\\\"\",</span><br><span class=\"line\">    \"precommit\": \"lint-staged\"</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  \"lint-staged\": &#123;</span><br><span class=\"line\">    \"src/**/*.&#123;js,json,css,vue&#125;\": [</span><br><span class=\"line\">      \"prettier --write\",</span><br><span class=\"line\">      \"eslint --fix\",</span><br><span class=\"line\">      <span class=\"string\">\"git add\"</span></span><br><span class=\"line\">    ]</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  \"husky\": &#123;</span><br><span class=\"line\">    \"hooks\": &#123;</span><br><span class=\"line\">      \"pre-commit\": \"npm run lint\",</span><br><span class=\"line\">      \"pre-push\": \"npm test\",</span><br><span class=\"line\">      \"...\": \"...\"</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>这里scripts里添加了三个命令，第一个检测src目录下的js文件和vue文件是否符合eslint标准，第二个按照prettier标准格式化src文件夹中的js文件和vue文件，第三条规定在git commit之前调起lint-staged。<br>lint-staged则规定了顺序执行三个命令，先按照prettier规则重写文件，再解决eslint警告，最后添加git文件。</p>\n<p>husky则规定了在commit之前运行lint命令，不通过会报错，无法commit。同样的，push之前也可以做一些操作。更具体的细节<a href=\"https://github.com/typicode/husky\" target=\"_blank\" rel=\"noopener\">看这里</a>。</p>\n"},{"title":"监听vuex中state变化","date":"2021-03-09T06:46:08.000Z","description":"业务中遇到的监听 vuex 变化的功能","_content":"书说简短,直接开整.需求是这样的: 点击变更联系人按钮,跳转到选人列表,点击人员,回到前一页,触发更换联系人功能.\n\n+ 点击更改按钮\n![点击按钮](/blog/img/vuex-state-1.png)\n+ 选择具体成员\n![选择人员](/blog/img/vuex-state-2.png)\n+ 触发更改操作\n![ 执行操作](/blog/img/vuex-state-3.png)\n\n因为涉及到路由跳转,所以我的实现方法是,第二步中选择的人员信息保存在了 vuex 里,因此整个过程遇到的难点如下:\n\n+ vuex 中 state 的值怎么监听到变化?\n\nvuex 中的数据监听有两种方式,一种可以放在 `watch`中直接监听\n\n```javascript\n<script>\n  export default {\n    // ...\n    watch: {\n      '$store.state.user'(val) {\n        console.log(val)\n      }\n    }\n  }\n</script>\n```\n\n但在本业务中,比较新旧联系人是否是同一个,以及文案的拼接,都逻辑依赖接口返回的数据信息,单号`PC20210308002`和原有联系人`admin1`是需要等接口返回值的,这样的话就不能写在 `watch`里,所以使用了第二种方法:[使用 vuex 自带的 watch 功能](https://vuex.vuejs.org/zh/api/#watch)\n\n```JavaScript\nTEST_API().then(res => {\n  // 返回需要的信息 res...\n\n  this.$store.watch(\n    state => {\n      return state.user\n    },\n    value => {\n      // 变化的值 value\n      // do something..\n    },\n    {\n      // 类似 vue 的 watch 参数,如果有需要的话\n      deep: true,\n      immediate: true\n    }\n  )\n})\n```\n\n这样可以保证触发的逻辑是在数据渲染后,但是任然存在问题: **watch方法会随着路由的 history 多次触发,现象类似于 EventBus 的触发**. 其实文档有提到, 该`watch`方法会返回一个 function,调用此方法即可停止监听,所以只要再稍加修改:\n\n```JavaScript\nmounted() {\n  TEST_API().then(res=> {\n     this.eventHub = this.$store(/* ... */)\n  })\n},\nbeforeDestroy() {\n  this.eventHub()\n}\n```\n\n其实还是 eventBus 的思想啦...\n","source":"_posts/监听vuex中state变化.md","raw":"---\ntitle: 监听vuex中state变化\ntags: [Vue, Vuex]\ndate: 2021-03-09 14:46:08\ncategories: [Vue, Vuex]\ndescription: 业务中遇到的监听 vuex 变化的功能\n---\n书说简短,直接开整.需求是这样的: 点击变更联系人按钮,跳转到选人列表,点击人员,回到前一页,触发更换联系人功能.\n\n+ 点击更改按钮\n![点击按钮](/blog/img/vuex-state-1.png)\n+ 选择具体成员\n![选择人员](/blog/img/vuex-state-2.png)\n+ 触发更改操作\n![ 执行操作](/blog/img/vuex-state-3.png)\n\n因为涉及到路由跳转,所以我的实现方法是,第二步中选择的人员信息保存在了 vuex 里,因此整个过程遇到的难点如下:\n\n+ vuex 中 state 的值怎么监听到变化?\n\nvuex 中的数据监听有两种方式,一种可以放在 `watch`中直接监听\n\n```javascript\n<script>\n  export default {\n    // ...\n    watch: {\n      '$store.state.user'(val) {\n        console.log(val)\n      }\n    }\n  }\n</script>\n```\n\n但在本业务中,比较新旧联系人是否是同一个,以及文案的拼接,都逻辑依赖接口返回的数据信息,单号`PC20210308002`和原有联系人`admin1`是需要等接口返回值的,这样的话就不能写在 `watch`里,所以使用了第二种方法:[使用 vuex 自带的 watch 功能](https://vuex.vuejs.org/zh/api/#watch)\n\n```JavaScript\nTEST_API().then(res => {\n  // 返回需要的信息 res...\n\n  this.$store.watch(\n    state => {\n      return state.user\n    },\n    value => {\n      // 变化的值 value\n      // do something..\n    },\n    {\n      // 类似 vue 的 watch 参数,如果有需要的话\n      deep: true,\n      immediate: true\n    }\n  )\n})\n```\n\n这样可以保证触发的逻辑是在数据渲染后,但是任然存在问题: **watch方法会随着路由的 history 多次触发,现象类似于 EventBus 的触发**. 其实文档有提到, 该`watch`方法会返回一个 function,调用此方法即可停止监听,所以只要再稍加修改:\n\n```JavaScript\nmounted() {\n  TEST_API().then(res=> {\n     this.eventHub = this.$store(/* ... */)\n  })\n},\nbeforeDestroy() {\n  this.eventHub()\n}\n```\n\n其实还是 eventBus 的思想啦...\n","slug":"监听vuex中state变化","published":1,"updated":"2021-06-25T11:19:55.450Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckqc904pq002zwotv7g901dlu","content":"<p>书说简短,直接开整.需求是这样的: 点击变更联系人按钮,跳转到选人列表,点击人员,回到前一页,触发更换联系人功能.</p>\n<ul>\n<li>点击更改按钮<br><img src=\"/blog/img/vuex-state-1.png\" alt=\"点击按钮\"></li>\n<li>选择具体成员<br><img src=\"/blog/img/vuex-state-2.png\" alt=\"选择人员\"></li>\n<li>触发更改操作<br><img src=\"/blog/img/vuex-state-3.png\" alt=\" 执行操作\"></li>\n</ul>\n<p>因为涉及到路由跳转,所以我的实现方法是,第二步中选择的人员信息保存在了 vuex 里,因此整个过程遇到的难点如下:</p>\n<ul>\n<li>vuex 中 state 的值怎么监听到变化?</li>\n</ul>\n<p>vuex 中的数据监听有两种方式,一种可以放在 <code>watch</code>中直接监听</p>\n<div class=\"code-panel__wrapper\" autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\"><header class=\"mac-panel\"><span class=\"doc-path\"></span><span class=\"mac-panel__language\">JAVASCRIPT</span></header><figure class=\"iseeu highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;script&gt;</span><br><span class=\"line\">  <span class=\"keyword\">export</span> <span class=\"keyword\">default</span> &#123;</span><br><span class=\"line\">    <span class=\"comment\">// ...</span></span><br><span class=\"line\">    watch: &#123;</span><br><span class=\"line\">      <span class=\"string\">'$store.state.user'</span>(val) &#123;</span><br><span class=\"line\">        <span class=\"built_in\">console</span>.log(val)</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&lt;<span class=\"regexp\">/script&gt;</span></span><br></pre></td></tr></table></figure></div>\n<p>但在本业务中,比较新旧联系人是否是同一个,以及文案的拼接,都逻辑依赖接口返回的数据信息,单号<code>PC20210308002</code>和原有联系人<code>admin1</code>是需要等接口返回值的,这样的话就不能写在 <code>watch</code>里,所以使用了第二种方法:<a href=\"https://vuex.vuejs.org/zh/api/#watch\" target=\"_blank\" rel=\"noopener\">使用 vuex 自带的 watch 功能</a></p>\n<div class=\"code-panel__wrapper\" autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\"><header class=\"mac-panel\"><span class=\"doc-path\"></span><span class=\"mac-panel__language\">JAVASCRIPT</span></header><figure class=\"iseeu highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">TEST_API().then(<span class=\"function\"><span class=\"params\">res</span> =&gt;</span> &#123;</span><br><span class=\"line\">  <span class=\"comment\">// 返回需要的信息 res...</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">this</span>.$store.watch(</span><br><span class=\"line\">    state =&gt; &#123;</span><br><span class=\"line\">      <span class=\"keyword\">return</span> state.user</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    value =&gt; &#123;</span><br><span class=\"line\">      <span class=\"comment\">// 变化的值 value</span></span><br><span class=\"line\">      <span class=\"comment\">// do something..</span></span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">      <span class=\"comment\">// 类似 vue 的 watch 参数,如果有需要的话</span></span><br><span class=\"line\">      deep: <span class=\"literal\">true</span>,</span><br><span class=\"line\">      immediate: <span class=\"literal\">true</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  )</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure></div>\n<p>这样可以保证触发的逻辑是在数据渲染后,但是任然存在问题: <strong>watch方法会随着路由的 history 多次触发,现象类似于 EventBus 的触发</strong>. 其实文档有提到, 该<code>watch</code>方法会返回一个 function,调用此方法即可停止监听,所以只要再稍加修改:</p>\n<div class=\"code-panel__wrapper\" autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\"><header class=\"mac-panel\"><span class=\"doc-path\"></span><span class=\"mac-panel__language\">JAVASCRIPT</span></header><figure class=\"iseeu highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mounted() &#123;</span><br><span class=\"line\">  TEST_API().then(<span class=\"function\"><span class=\"params\">res</span>=&gt;</span> &#123;</span><br><span class=\"line\">     <span class=\"keyword\">this</span>.eventHub = <span class=\"keyword\">this</span>.$store(<span class=\"comment\">/* ... */</span>)</span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\">&#125;,</span><br><span class=\"line\">beforeDestroy() &#123;</span><br><span class=\"line\">  <span class=\"keyword\">this</span>.eventHub()</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></div>\n<p>其实还是 eventBus 的思想啦…</p>\n","site":{"data":{}},"excerpt":"","more":"<p>书说简短,直接开整.需求是这样的: 点击变更联系人按钮,跳转到选人列表,点击人员,回到前一页,触发更换联系人功能.</p>\n<ul>\n<li>点击更改按钮<br><img src=\"/blog/img/vuex-state-1.png\" alt=\"点击按钮\"></li>\n<li>选择具体成员<br><img src=\"/blog/img/vuex-state-2.png\" alt=\"选择人员\"></li>\n<li>触发更改操作<br><img src=\"/blog/img/vuex-state-3.png\" alt=\" 执行操作\"></li>\n</ul>\n<p>因为涉及到路由跳转,所以我的实现方法是,第二步中选择的人员信息保存在了 vuex 里,因此整个过程遇到的难点如下:</p>\n<ul>\n<li>vuex 中 state 的值怎么监听到变化?</li>\n</ul>\n<p>vuex 中的数据监听有两种方式,一种可以放在 <code>watch</code>中直接监听</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;script&gt;</span><br><span class=\"line\">  <span class=\"keyword\">export</span> <span class=\"keyword\">default</span> &#123;</span><br><span class=\"line\">    <span class=\"comment\">// ...</span></span><br><span class=\"line\">    watch: &#123;</span><br><span class=\"line\">      <span class=\"string\">'$store.state.user'</span>(val) &#123;</span><br><span class=\"line\">        <span class=\"built_in\">console</span>.log(val)</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&lt;<span class=\"regexp\">/script&gt;</span></span><br></pre></td></tr></table></figure>\n<p>但在本业务中,比较新旧联系人是否是同一个,以及文案的拼接,都逻辑依赖接口返回的数据信息,单号<code>PC20210308002</code>和原有联系人<code>admin1</code>是需要等接口返回值的,这样的话就不能写在 <code>watch</code>里,所以使用了第二种方法:<a href=\"https://vuex.vuejs.org/zh/api/#watch\" target=\"_blank\" rel=\"noopener\">使用 vuex 自带的 watch 功能</a></p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">TEST_API().then(<span class=\"function\"><span class=\"params\">res</span> =&gt;</span> &#123;</span><br><span class=\"line\">  <span class=\"comment\">// 返回需要的信息 res...</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">this</span>.$store.watch(</span><br><span class=\"line\">    state =&gt; &#123;</span><br><span class=\"line\">      <span class=\"keyword\">return</span> state.user</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    value =&gt; &#123;</span><br><span class=\"line\">      <span class=\"comment\">// 变化的值 value</span></span><br><span class=\"line\">      <span class=\"comment\">// do something..</span></span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">      <span class=\"comment\">// 类似 vue 的 watch 参数,如果有需要的话</span></span><br><span class=\"line\">      deep: <span class=\"literal\">true</span>,</span><br><span class=\"line\">      immediate: <span class=\"literal\">true</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  )</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n<p>这样可以保证触发的逻辑是在数据渲染后,但是任然存在问题: <strong>watch方法会随着路由的 history 多次触发,现象类似于 EventBus 的触发</strong>. 其实文档有提到, 该<code>watch</code>方法会返回一个 function,调用此方法即可停止监听,所以只要再稍加修改:</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mounted() &#123;</span><br><span class=\"line\">  TEST_API().then(<span class=\"function\"><span class=\"params\">res</span>=&gt;</span> &#123;</span><br><span class=\"line\">     <span class=\"keyword\">this</span>.eventHub = <span class=\"keyword\">this</span>.$store(<span class=\"comment\">/* ... */</span>)</span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\">&#125;,</span><br><span class=\"line\">beforeDestroy() &#123;</span><br><span class=\"line\">  <span class=\"keyword\">this</span>.eventHub()</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>其实还是 eventBus 的思想啦…</p>\n"},{"title":"试图详解Array.reduce","date":"2020-01-15T09:07:34.000Z","description":"reduce 方法介绍 && 示例","_content":"## 概念\n\n众所周知，reduce 方法是 js 数组中比较高级的用法之一。使用他可以更方便的对数组进行操作。\n首先来看看 reduce 的官方解释\n> reduce() 方法对数组中的每个元素执行一个由您提供的reducer函数(升序执行)，将其结果汇总为单个返回值。\n\n这个解释比较晦涩，但却很精确，在这里你可能依然不懂他要表达什么，但我依然把它写在了开头，希望看完整篇文章后，回头再看这个解释，你能读懂它的意义。\n\n## 语法详解\n\n同样的，我们首先引用官方文档\n\n```javascript\narr.reduce(callback(accumulator, currentValue[, index[, array]])[, initialValue])\n\n/*\n  callback: 执行数组中每个值 (如果没有提供 initialValue则第一个值除外)的函数，包含四个参数\n    accumulator: 累计器累计回调的返回值; 它是上一次调用回调时返回的累积值\n    currentValue: 数组中正在处理的元素\n    index: 数组中正在处理的当前元素的索引(可选)。 如果提供了initialValue，则起始索引号为0，否则从索引1起始。\n    array: 调用reduce()的数组（可选）\n  initialValue: 可选。作为第一次调用 callback函数时的第一个参数的值。 如果没有提供初始值，则将使用数组中的第一个元素。 在没有初始值的空数组上调用 reduce 将报错。\n*/\n```\n\n对应上面的定义，抛去可选参数，一个简单地使用方式就是这样的\n\n```javascript\nconst arr = [1,2,3,4];\narr.reduce(function(sum, current) {\n  return sum + current\n})\n// or\narr.reduce((sum, current) => sum + current)\n// output 10\n```\n\n上面例子的结果会返回十。我们来看看发生了什么。reduce 函数会将整个操作分步骤来执行。你可以理解为 for 循环。他会把每一个步骤拆解开来去运算，把每一步的结果 return，作为下一步操作的初始值。上面例子在第一步操作时，首先返回了`arr`中的第一个值（你可以理解为 for 循环的第一步），也就是1。之后，函数将第一步 return 的值累计到初始值中，作为下一步操作的初始值，这是，`sum`的值已经变成了 1，而 current 的值也变成了循环中的下一个，也就是 2。在这一步骤中，函数执行了加法处理，返回了`1 + 2`，这个值又变成了下一个步骤中的 sum，而 current 也变成了 arr[3]，之后又会执行上述的操作。没错，说了这么多，上面的例子只是 `1+2+3+4`而已。\n\n```javascript\n// step1: sum = 0, current = 1\nreturn sum + current  // 1\n// step2: sum = 1, current = 2\nreturn sum + current // 1 + 2\n// step3: sum = 1 + 2, current = 3\nreturn sum + current // 1 + 2 + 3\n// step4: sum = 1 + 2 + 3, current = 4\nreturn sum + current // 1 + 2 + 3 + 4\n```\n\n就是这样。\n而`initialValue`则表示运算的初始值。假如上面的例子加上一个初始值\n\n```javascript\narr.reduce((sum, current) => sum + current, 10)\n//output 10+1+2+3+4 = 20\n```\n\n这就是初始值的用法。reduce 的用法其实就已经说完了。你可以滑到最开始定义的地方，重新去看一下定义，是不是有点理解了？\n\n## 难点\n\nreduce 当然不止可以处理加法运算，事实上任何数组相关的操作都可以用 reduce 来解决。面对更加复杂的场景，有两点点是新手容易理解错误的：一是 reduce 函数必须要有返回值，二是**accumulator的值是上一次的初始值，currentValue才是被迭代数组的每一项**。\n新手常会和 js 中循环的概念混淆。这里回调函数中的两个参数并不是都是操作的数组中的值。这也是后续在复杂场景中使用 reduce 唯一需要注意的地方，再举一个例子\n\n```javascript\n// 假设有一张人员表，你需要把所有女性保存出来（sex: 0 => 女; 1 => 男）\nconst person = [\n  { name: '张三', sex: 0 },\n  { name: '李四', sex: 1 },\n  { name: '王五', sex: 0 },\n  { name: '赵六', sex: 0 },\n  { name: '马七', sex: 1 }\n]\nperson.reduce((res, current) => {\n  if (current.sex === 0) {\n    res.push(current.name)\n  }\n  return res\n}, [])\n// output ['张三', '王五', '赵六']\n```\n\n上面例子中，需要注意的是，回调函数中的`current`指的是`person`中被迭代的每一项，而 `res`指的是被赋予的初始值`[]`，这样你能理解了吗？\n\n## 几个例子，加固理解\n\n正如我上面所说，reduce的用法异常广泛，几乎任何场景都可以使用。所以我没有办法对应应用场景作解释，只能附加几个比较复杂的场景供你参考和巩固，希望对你有些许帮助。\n\n### 还是上面人名的例子，比如现在有一张单独的成绩单，我们需要将两个数组整合为一个数组\n\n```javascript\nconst person = [\n  { name: 'aa', sex: 0 },\n  { name: 'bb', sex: 1 },\n  { name: 'cc', sex: 0 },\n  { name: 'dd', sex: 0 },\n  { name: 'ee', sex: 1 },\n  { name: 'ff', sex: 0 }\n]\nconst score = {\n  aa: 60,\n  bb: 70,\n  cc: 80,\n  dd: 90,\n  ee: 100\n}\n\nperson.reduce((res, current) => {\n  const key = current.name\n  if (score[key]) {\n    // 如果 score 中有对应人名的分数，添加到 score 字段上，否则 score = 0\n    current.score = score[key]\n  } else {\n    current.score = 0\n  }\n  res.push(current)\n  return res\n}, [])\n// output\n[\n  {\"name\":\"aa\",\"sex\":0,\"score\":60},\n  {\"name\":\"bb\",\"sex\":1,\"score\":70},\n  {\"name\":\"cc\",\"sex\":0,\"score\":80},\n  {\"name\":\"dd\",\"sex\":0,\"score\":90},\n  {\"name\":\"ee\",\"sex\":1,\"score\":100},\n  {\"name\":\"ff\",\"sex\":0,\"score\":0}\n]\n```\n\n### 使用 reduce 实现 groupBy方法\n\nlodash 有一个方法叫做 groupBy\n\n```javascript\nvar numbers = [6.1, 4.2, 6.3];\n_.groupBy(numbers, Math.floor);\n// 返回 {'4': [4.2], '6': [6.1, 6.3]}\n\nvar words = ['one', 'two', 'three'];\n\n_.groupBy(words, 'length');\n// 返回 {'3': ['one', 'two'], '5': ['three']}\n```\n\n使用 reduce 实现同样的效果\n\n```javascript\nfunction groupBy (arr, criteria) {\n  return arr.reduce((obj, item) => {\n    // 判断criteria是函数还是属性名\n    var key = typeof criteria === 'function' ? criteria(item) : item[criteria]\n    // 如果属性不存在，则创建一个\n    if (!obj.hasOwnProperty(key)) {\n      obj[key] = []\n    }\n    // 将元素加入数组\n    obj[key].push(item)\n    // 返回这个对象\n    return obj\n  }, {});\n};\n```\n","source":"_posts/试图详解Array.reduce.md","raw":"---\ntitle: 试图详解Array.reduce\ntags: [javascript]\ndate: 2020-01-15 17:07:34\ncategories: [javascript]\ndescription: reduce 方法介绍 && 示例\n---\n## 概念\n\n众所周知，reduce 方法是 js 数组中比较高级的用法之一。使用他可以更方便的对数组进行操作。\n首先来看看 reduce 的官方解释\n> reduce() 方法对数组中的每个元素执行一个由您提供的reducer函数(升序执行)，将其结果汇总为单个返回值。\n\n这个解释比较晦涩，但却很精确，在这里你可能依然不懂他要表达什么，但我依然把它写在了开头，希望看完整篇文章后，回头再看这个解释，你能读懂它的意义。\n\n## 语法详解\n\n同样的，我们首先引用官方文档\n\n```javascript\narr.reduce(callback(accumulator, currentValue[, index[, array]])[, initialValue])\n\n/*\n  callback: 执行数组中每个值 (如果没有提供 initialValue则第一个值除外)的函数，包含四个参数\n    accumulator: 累计器累计回调的返回值; 它是上一次调用回调时返回的累积值\n    currentValue: 数组中正在处理的元素\n    index: 数组中正在处理的当前元素的索引(可选)。 如果提供了initialValue，则起始索引号为0，否则从索引1起始。\n    array: 调用reduce()的数组（可选）\n  initialValue: 可选。作为第一次调用 callback函数时的第一个参数的值。 如果没有提供初始值，则将使用数组中的第一个元素。 在没有初始值的空数组上调用 reduce 将报错。\n*/\n```\n\n对应上面的定义，抛去可选参数，一个简单地使用方式就是这样的\n\n```javascript\nconst arr = [1,2,3,4];\narr.reduce(function(sum, current) {\n  return sum + current\n})\n// or\narr.reduce((sum, current) => sum + current)\n// output 10\n```\n\n上面例子的结果会返回十。我们来看看发生了什么。reduce 函数会将整个操作分步骤来执行。你可以理解为 for 循环。他会把每一个步骤拆解开来去运算，把每一步的结果 return，作为下一步操作的初始值。上面例子在第一步操作时，首先返回了`arr`中的第一个值（你可以理解为 for 循环的第一步），也就是1。之后，函数将第一步 return 的值累计到初始值中，作为下一步操作的初始值，这是，`sum`的值已经变成了 1，而 current 的值也变成了循环中的下一个，也就是 2。在这一步骤中，函数执行了加法处理，返回了`1 + 2`，这个值又变成了下一个步骤中的 sum，而 current 也变成了 arr[3]，之后又会执行上述的操作。没错，说了这么多，上面的例子只是 `1+2+3+4`而已。\n\n```javascript\n// step1: sum = 0, current = 1\nreturn sum + current  // 1\n// step2: sum = 1, current = 2\nreturn sum + current // 1 + 2\n// step3: sum = 1 + 2, current = 3\nreturn sum + current // 1 + 2 + 3\n// step4: sum = 1 + 2 + 3, current = 4\nreturn sum + current // 1 + 2 + 3 + 4\n```\n\n就是这样。\n而`initialValue`则表示运算的初始值。假如上面的例子加上一个初始值\n\n```javascript\narr.reduce((sum, current) => sum + current, 10)\n//output 10+1+2+3+4 = 20\n```\n\n这就是初始值的用法。reduce 的用法其实就已经说完了。你可以滑到最开始定义的地方，重新去看一下定义，是不是有点理解了？\n\n## 难点\n\nreduce 当然不止可以处理加法运算，事实上任何数组相关的操作都可以用 reduce 来解决。面对更加复杂的场景，有两点点是新手容易理解错误的：一是 reduce 函数必须要有返回值，二是**accumulator的值是上一次的初始值，currentValue才是被迭代数组的每一项**。\n新手常会和 js 中循环的概念混淆。这里回调函数中的两个参数并不是都是操作的数组中的值。这也是后续在复杂场景中使用 reduce 唯一需要注意的地方，再举一个例子\n\n```javascript\n// 假设有一张人员表，你需要把所有女性保存出来（sex: 0 => 女; 1 => 男）\nconst person = [\n  { name: '张三', sex: 0 },\n  { name: '李四', sex: 1 },\n  { name: '王五', sex: 0 },\n  { name: '赵六', sex: 0 },\n  { name: '马七', sex: 1 }\n]\nperson.reduce((res, current) => {\n  if (current.sex === 0) {\n    res.push(current.name)\n  }\n  return res\n}, [])\n// output ['张三', '王五', '赵六']\n```\n\n上面例子中，需要注意的是，回调函数中的`current`指的是`person`中被迭代的每一项，而 `res`指的是被赋予的初始值`[]`，这样你能理解了吗？\n\n## 几个例子，加固理解\n\n正如我上面所说，reduce的用法异常广泛，几乎任何场景都可以使用。所以我没有办法对应应用场景作解释，只能附加几个比较复杂的场景供你参考和巩固，希望对你有些许帮助。\n\n### 还是上面人名的例子，比如现在有一张单独的成绩单，我们需要将两个数组整合为一个数组\n\n```javascript\nconst person = [\n  { name: 'aa', sex: 0 },\n  { name: 'bb', sex: 1 },\n  { name: 'cc', sex: 0 },\n  { name: 'dd', sex: 0 },\n  { name: 'ee', sex: 1 },\n  { name: 'ff', sex: 0 }\n]\nconst score = {\n  aa: 60,\n  bb: 70,\n  cc: 80,\n  dd: 90,\n  ee: 100\n}\n\nperson.reduce((res, current) => {\n  const key = current.name\n  if (score[key]) {\n    // 如果 score 中有对应人名的分数，添加到 score 字段上，否则 score = 0\n    current.score = score[key]\n  } else {\n    current.score = 0\n  }\n  res.push(current)\n  return res\n}, [])\n// output\n[\n  {\"name\":\"aa\",\"sex\":0,\"score\":60},\n  {\"name\":\"bb\",\"sex\":1,\"score\":70},\n  {\"name\":\"cc\",\"sex\":0,\"score\":80},\n  {\"name\":\"dd\",\"sex\":0,\"score\":90},\n  {\"name\":\"ee\",\"sex\":1,\"score\":100},\n  {\"name\":\"ff\",\"sex\":0,\"score\":0}\n]\n```\n\n### 使用 reduce 实现 groupBy方法\n\nlodash 有一个方法叫做 groupBy\n\n```javascript\nvar numbers = [6.1, 4.2, 6.3];\n_.groupBy(numbers, Math.floor);\n// 返回 {'4': [4.2], '6': [6.1, 6.3]}\n\nvar words = ['one', 'two', 'three'];\n\n_.groupBy(words, 'length');\n// 返回 {'3': ['one', 'two'], '5': ['three']}\n```\n\n使用 reduce 实现同样的效果\n\n```javascript\nfunction groupBy (arr, criteria) {\n  return arr.reduce((obj, item) => {\n    // 判断criteria是函数还是属性名\n    var key = typeof criteria === 'function' ? criteria(item) : item[criteria]\n    // 如果属性不存在，则创建一个\n    if (!obj.hasOwnProperty(key)) {\n      obj[key] = []\n    }\n    // 将元素加入数组\n    obj[key].push(item)\n    // 返回这个对象\n    return obj\n  }, {});\n};\n```\n","slug":"试图详解Array.reduce","published":1,"updated":"2021-06-25T11:19:55.450Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckqc904pr0032wotv77jrbw7p","content":"<h2 id=\"概念\"><a href=\"#概念\" class=\"headerlink\" title=\"概念\"></a>概念</h2><p>众所周知，reduce 方法是 js 数组中比较高级的用法之一。使用他可以更方便的对数组进行操作。<br>首先来看看 reduce 的官方解释</p>\n<blockquote>\n<p>reduce() 方法对数组中的每个元素执行一个由您提供的reducer函数(升序执行)，将其结果汇总为单个返回值。</p>\n</blockquote>\n<p>这个解释比较晦涩，但却很精确，在这里你可能依然不懂他要表达什么，但我依然把它写在了开头，希望看完整篇文章后，回头再看这个解释，你能读懂它的意义。</p>\n<h2 id=\"语法详解\"><a href=\"#语法详解\" class=\"headerlink\" title=\"语法详解\"></a>语法详解</h2><p>同样的，我们首先引用官方文档</p>\n<div class=\"code-panel__wrapper\" autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\"><header class=\"mac-panel\"><span class=\"doc-path\"></span><span class=\"mac-panel__language\">JAVASCRIPT</span></header><figure class=\"iseeu highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">arr.reduce(callback(accumulator, currentValue[, index[, array]])[, initialValue])</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">  callback: 执行数组中每个值 (如果没有提供 initialValue则第一个值除外)的函数，包含四个参数</span></span><br><span class=\"line\"><span class=\"comment\">    accumulator: 累计器累计回调的返回值; 它是上一次调用回调时返回的累积值</span></span><br><span class=\"line\"><span class=\"comment\">    currentValue: 数组中正在处理的元素</span></span><br><span class=\"line\"><span class=\"comment\">    index: 数组中正在处理的当前元素的索引(可选)。 如果提供了initialValue，则起始索引号为0，否则从索引1起始。</span></span><br><span class=\"line\"><span class=\"comment\">    array: 调用reduce()的数组（可选）</span></span><br><span class=\"line\"><span class=\"comment\">  initialValue: 可选。作为第一次调用 callback函数时的第一个参数的值。 如果没有提供初始值，则将使用数组中的第一个元素。 在没有初始值的空数组上调用 reduce 将报错。</span></span><br><span class=\"line\"><span class=\"comment\">*/</span></span><br></pre></td></tr></table></figure></div>\n<p>对应上面的定义，抛去可选参数，一个简单地使用方式就是这样的</p>\n<div class=\"code-panel__wrapper\" autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\"><header class=\"mac-panel\"><span class=\"doc-path\"></span><span class=\"mac-panel__language\">JAVASCRIPT</span></header><figure class=\"iseeu highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> arr = [<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>,<span class=\"number\">4</span>];</span><br><span class=\"line\">arr.reduce(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">sum, current</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> sum + current</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"><span class=\"comment\">// or</span></span><br><span class=\"line\">arr.reduce(<span class=\"function\">(<span class=\"params\">sum, current</span>) =&gt;</span> sum + current)</span><br><span class=\"line\"><span class=\"comment\">// output 10</span></span><br></pre></td></tr></table></figure></div>\n<p>上面例子的结果会返回十。我们来看看发生了什么。reduce 函数会将整个操作分步骤来执行。你可以理解为 for 循环。他会把每一个步骤拆解开来去运算，把每一步的结果 return，作为下一步操作的初始值。上面例子在第一步操作时，首先返回了<code>arr</code>中的第一个值（你可以理解为 for 循环的第一步），也就是1。之后，函数将第一步 return 的值累计到初始值中，作为下一步操作的初始值，这是，<code>sum</code>的值已经变成了 1，而 current 的值也变成了循环中的下一个，也就是 2。在这一步骤中，函数执行了加法处理，返回了<code>1 + 2</code>，这个值又变成了下一个步骤中的 sum，而 current 也变成了 arr[3]，之后又会执行上述的操作。没错，说了这么多，上面的例子只是 <code>1+2+3+4</code>而已。</p>\n<div class=\"code-panel__wrapper\" autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\"><header class=\"mac-panel\"><span class=\"doc-path\"></span><span class=\"mac-panel__language\">JAVASCRIPT</span></header><figure class=\"iseeu highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// step1: sum = 0, current = 1</span></span><br><span class=\"line\"><span class=\"keyword\">return</span> sum + current  <span class=\"comment\">// 1</span></span><br><span class=\"line\"><span class=\"comment\">// step2: sum = 1, current = 2</span></span><br><span class=\"line\"><span class=\"keyword\">return</span> sum + current <span class=\"comment\">// 1 + 2</span></span><br><span class=\"line\"><span class=\"comment\">// step3: sum = 1 + 2, current = 3</span></span><br><span class=\"line\"><span class=\"keyword\">return</span> sum + current <span class=\"comment\">// 1 + 2 + 3</span></span><br><span class=\"line\"><span class=\"comment\">// step4: sum = 1 + 2 + 3, current = 4</span></span><br><span class=\"line\"><span class=\"keyword\">return</span> sum + current <span class=\"comment\">// 1 + 2 + 3 + 4</span></span><br></pre></td></tr></table></figure></div>\n<p>就是这样。<br>而<code>initialValue</code>则表示运算的初始值。假如上面的例子加上一个初始值</p>\n<div class=\"code-panel__wrapper\" autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\"><header class=\"mac-panel\"><span class=\"doc-path\"></span><span class=\"mac-panel__language\">JAVASCRIPT</span></header><figure class=\"iseeu highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">arr.reduce(<span class=\"function\">(<span class=\"params\">sum, current</span>) =&gt;</span> sum + current, <span class=\"number\">10</span>)</span><br><span class=\"line\"><span class=\"comment\">//output 10+1+2+3+4 = 20</span></span><br></pre></td></tr></table></figure></div>\n<p>这就是初始值的用法。reduce 的用法其实就已经说完了。你可以滑到最开始定义的地方，重新去看一下定义，是不是有点理解了？</p>\n<h2 id=\"难点\"><a href=\"#难点\" class=\"headerlink\" title=\"难点\"></a>难点</h2><p>reduce 当然不止可以处理加法运算，事实上任何数组相关的操作都可以用 reduce 来解决。面对更加复杂的场景，有两点点是新手容易理解错误的：一是 reduce 函数必须要有返回值，二是<strong>accumulator的值是上一次的初始值，currentValue才是被迭代数组的每一项</strong>。<br>新手常会和 js 中循环的概念混淆。这里回调函数中的两个参数并不是都是操作的数组中的值。这也是后续在复杂场景中使用 reduce 唯一需要注意的地方，再举一个例子</p>\n<div class=\"code-panel__wrapper\" autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\"><header class=\"mac-panel\"><span class=\"doc-path\"></span><span class=\"mac-panel__language\">JAVASCRIPT</span></header><figure class=\"iseeu highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 假设有一张人员表，你需要把所有女性保存出来（sex: 0 =&gt; 女; 1 =&gt; 男）</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> person = [</span><br><span class=\"line\">  &#123; <span class=\"attr\">name</span>: <span class=\"string\">'张三'</span>, <span class=\"attr\">sex</span>: <span class=\"number\">0</span> &#125;,</span><br><span class=\"line\">  &#123; <span class=\"attr\">name</span>: <span class=\"string\">'李四'</span>, <span class=\"attr\">sex</span>: <span class=\"number\">1</span> &#125;,</span><br><span class=\"line\">  &#123; <span class=\"attr\">name</span>: <span class=\"string\">'王五'</span>, <span class=\"attr\">sex</span>: <span class=\"number\">0</span> &#125;,</span><br><span class=\"line\">  &#123; <span class=\"attr\">name</span>: <span class=\"string\">'赵六'</span>, <span class=\"attr\">sex</span>: <span class=\"number\">0</span> &#125;,</span><br><span class=\"line\">  &#123; <span class=\"attr\">name</span>: <span class=\"string\">'马七'</span>, <span class=\"attr\">sex</span>: <span class=\"number\">1</span> &#125;</span><br><span class=\"line\">]</span><br><span class=\"line\">person.reduce(<span class=\"function\">(<span class=\"params\">res, current</span>) =&gt;</span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (current.sex === <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">    res.push(current.name)</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> res</span><br><span class=\"line\">&#125;, [])</span><br><span class=\"line\"><span class=\"comment\">// output ['张三', '王五', '赵六']</span></span><br></pre></td></tr></table></figure></div>\n<p>上面例子中，需要注意的是，回调函数中的<code>current</code>指的是<code>person</code>中被迭代的每一项，而 <code>res</code>指的是被赋予的初始值<code>[]</code>，这样你能理解了吗？</p>\n<h2 id=\"几个例子，加固理解\"><a href=\"#几个例子，加固理解\" class=\"headerlink\" title=\"几个例子，加固理解\"></a>几个例子，加固理解</h2><p>正如我上面所说，reduce的用法异常广泛，几乎任何场景都可以使用。所以我没有办法对应应用场景作解释，只能附加几个比较复杂的场景供你参考和巩固，希望对你有些许帮助。</p>\n<h3 id=\"还是上面人名的例子，比如现在有一张单独的成绩单，我们需要将两个数组整合为一个数组\"><a href=\"#还是上面人名的例子，比如现在有一张单独的成绩单，我们需要将两个数组整合为一个数组\" class=\"headerlink\" title=\"还是上面人名的例子，比如现在有一张单独的成绩单，我们需要将两个数组整合为一个数组\"></a>还是上面人名的例子，比如现在有一张单独的成绩单，我们需要将两个数组整合为一个数组</h3><div class=\"code-panel__wrapper\" autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\"><header class=\"mac-panel\"><span class=\"doc-path\"></span><span class=\"mac-panel__language\">JAVASCRIPT</span></header><figure class=\"iseeu highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> person = [</span><br><span class=\"line\">  &#123; <span class=\"attr\">name</span>: <span class=\"string\">'aa'</span>, <span class=\"attr\">sex</span>: <span class=\"number\">0</span> &#125;,</span><br><span class=\"line\">  &#123; <span class=\"attr\">name</span>: <span class=\"string\">'bb'</span>, <span class=\"attr\">sex</span>: <span class=\"number\">1</span> &#125;,</span><br><span class=\"line\">  &#123; <span class=\"attr\">name</span>: <span class=\"string\">'cc'</span>, <span class=\"attr\">sex</span>: <span class=\"number\">0</span> &#125;,</span><br><span class=\"line\">  &#123; <span class=\"attr\">name</span>: <span class=\"string\">'dd'</span>, <span class=\"attr\">sex</span>: <span class=\"number\">0</span> &#125;,</span><br><span class=\"line\">  &#123; <span class=\"attr\">name</span>: <span class=\"string\">'ee'</span>, <span class=\"attr\">sex</span>: <span class=\"number\">1</span> &#125;,</span><br><span class=\"line\">  &#123; <span class=\"attr\">name</span>: <span class=\"string\">'ff'</span>, <span class=\"attr\">sex</span>: <span class=\"number\">0</span> &#125;</span><br><span class=\"line\">]</span><br><span class=\"line\"><span class=\"keyword\">const</span> score = &#123;</span><br><span class=\"line\">  aa: <span class=\"number\">60</span>,</span><br><span class=\"line\">  bb: <span class=\"number\">70</span>,</span><br><span class=\"line\">  cc: <span class=\"number\">80</span>,</span><br><span class=\"line\">  dd: <span class=\"number\">90</span>,</span><br><span class=\"line\">  ee: <span class=\"number\">100</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">person.reduce(<span class=\"function\">(<span class=\"params\">res, current</span>) =&gt;</span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">const</span> key = current.name</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (score[key]) &#123;</span><br><span class=\"line\">    <span class=\"comment\">// 如果 score 中有对应人名的分数，添加到 score 字段上，否则 score = 0</span></span><br><span class=\"line\">    current.score = score[key]</span><br><span class=\"line\">  &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">    current.score = <span class=\"number\">0</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  res.push(current)</span><br><span class=\"line\">  <span class=\"keyword\">return</span> res</span><br><span class=\"line\">&#125;, [])</span><br><span class=\"line\"><span class=\"comment\">// output</span></span><br><span class=\"line\">[</span><br><span class=\"line\">  &#123;<span class=\"string\">\"name\"</span>:<span class=\"string\">\"aa\"</span>,<span class=\"string\">\"sex\"</span>:<span class=\"number\">0</span>,<span class=\"string\">\"score\"</span>:<span class=\"number\">60</span>&#125;,</span><br><span class=\"line\">  &#123;<span class=\"string\">\"name\"</span>:<span class=\"string\">\"bb\"</span>,<span class=\"string\">\"sex\"</span>:<span class=\"number\">1</span>,<span class=\"string\">\"score\"</span>:<span class=\"number\">70</span>&#125;,</span><br><span class=\"line\">  &#123;<span class=\"string\">\"name\"</span>:<span class=\"string\">\"cc\"</span>,<span class=\"string\">\"sex\"</span>:<span class=\"number\">0</span>,<span class=\"string\">\"score\"</span>:<span class=\"number\">80</span>&#125;,</span><br><span class=\"line\">  &#123;<span class=\"string\">\"name\"</span>:<span class=\"string\">\"dd\"</span>,<span class=\"string\">\"sex\"</span>:<span class=\"number\">0</span>,<span class=\"string\">\"score\"</span>:<span class=\"number\">90</span>&#125;,</span><br><span class=\"line\">  &#123;<span class=\"string\">\"name\"</span>:<span class=\"string\">\"ee\"</span>,<span class=\"string\">\"sex\"</span>:<span class=\"number\">1</span>,<span class=\"string\">\"score\"</span>:<span class=\"number\">100</span>&#125;,</span><br><span class=\"line\">  &#123;<span class=\"string\">\"name\"</span>:<span class=\"string\">\"ff\"</span>,<span class=\"string\">\"sex\"</span>:<span class=\"number\">0</span>,<span class=\"string\">\"score\"</span>:<span class=\"number\">0</span>&#125;</span><br><span class=\"line\">]</span><br></pre></td></tr></table></figure></div>\n<h3 id=\"使用-reduce-实现-groupBy方法\"><a href=\"#使用-reduce-实现-groupBy方法\" class=\"headerlink\" title=\"使用 reduce 实现 groupBy方法\"></a>使用 reduce 实现 groupBy方法</h3><p>lodash 有一个方法叫做 groupBy</p>\n<div class=\"code-panel__wrapper\" autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\"><header class=\"mac-panel\"><span class=\"doc-path\"></span><span class=\"mac-panel__language\">JAVASCRIPT</span></header><figure class=\"iseeu highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> numbers = [<span class=\"number\">6.1</span>, <span class=\"number\">4.2</span>, <span class=\"number\">6.3</span>];</span><br><span class=\"line\">_.groupBy(numbers, <span class=\"built_in\">Math</span>.floor);</span><br><span class=\"line\"><span class=\"comment\">// 返回 &#123;'4': [4.2], '6': [6.1, 6.3]&#125;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> words = [<span class=\"string\">'one'</span>, <span class=\"string\">'two'</span>, <span class=\"string\">'three'</span>];</span><br><span class=\"line\"></span><br><span class=\"line\">_.groupBy(words, <span class=\"string\">'length'</span>);</span><br><span class=\"line\"><span class=\"comment\">// 返回 &#123;'3': ['one', 'two'], '5': ['three']&#125;</span></span><br></pre></td></tr></table></figure></div>\n<p>使用 reduce 实现同样的效果</p>\n<div class=\"code-panel__wrapper\" autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\"><header class=\"mac-panel\"><span class=\"doc-path\"></span><span class=\"mac-panel__language\">JAVASCRIPT</span></header><figure class=\"iseeu highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">groupBy</span> (<span class=\"params\">arr, criteria</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> arr.reduce(<span class=\"function\">(<span class=\"params\">obj, item</span>) =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"comment\">// 判断criteria是函数还是属性名</span></span><br><span class=\"line\">    <span class=\"keyword\">var</span> key = <span class=\"keyword\">typeof</span> criteria === <span class=\"string\">'function'</span> ? criteria(item) : item[criteria]</span><br><span class=\"line\">    <span class=\"comment\">// 如果属性不存在，则创建一个</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (!obj.hasOwnProperty(key)) &#123;</span><br><span class=\"line\">      obj[key] = []</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"comment\">// 将元素加入数组</span></span><br><span class=\"line\">    obj[key].push(item)</span><br><span class=\"line\">    <span class=\"comment\">// 返回这个对象</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> obj</span><br><span class=\"line\">  &#125;, &#123;&#125;);</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure></div>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"概念\"><a href=\"#概念\" class=\"headerlink\" title=\"概念\"></a>概念</h2><p>众所周知，reduce 方法是 js 数组中比较高级的用法之一。使用他可以更方便的对数组进行操作。<br>首先来看看 reduce 的官方解释</p>\n<blockquote>\n<p>reduce() 方法对数组中的每个元素执行一个由您提供的reducer函数(升序执行)，将其结果汇总为单个返回值。</p>\n</blockquote>\n<p>这个解释比较晦涩，但却很精确，在这里你可能依然不懂他要表达什么，但我依然把它写在了开头，希望看完整篇文章后，回头再看这个解释，你能读懂它的意义。</p>\n<h2 id=\"语法详解\"><a href=\"#语法详解\" class=\"headerlink\" title=\"语法详解\"></a>语法详解</h2><p>同样的，我们首先引用官方文档</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">arr.reduce(callback(accumulator, currentValue[, index[, array]])[, initialValue])</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">  callback: 执行数组中每个值 (如果没有提供 initialValue则第一个值除外)的函数，包含四个参数</span></span><br><span class=\"line\"><span class=\"comment\">    accumulator: 累计器累计回调的返回值; 它是上一次调用回调时返回的累积值</span></span><br><span class=\"line\"><span class=\"comment\">    currentValue: 数组中正在处理的元素</span></span><br><span class=\"line\"><span class=\"comment\">    index: 数组中正在处理的当前元素的索引(可选)。 如果提供了initialValue，则起始索引号为0，否则从索引1起始。</span></span><br><span class=\"line\"><span class=\"comment\">    array: 调用reduce()的数组（可选）</span></span><br><span class=\"line\"><span class=\"comment\">  initialValue: 可选。作为第一次调用 callback函数时的第一个参数的值。 如果没有提供初始值，则将使用数组中的第一个元素。 在没有初始值的空数组上调用 reduce 将报错。</span></span><br><span class=\"line\"><span class=\"comment\">*/</span></span><br></pre></td></tr></table></figure>\n<p>对应上面的定义，抛去可选参数，一个简单地使用方式就是这样的</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> arr = [<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>,<span class=\"number\">4</span>];</span><br><span class=\"line\">arr.reduce(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">sum, current</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> sum + current</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"><span class=\"comment\">// or</span></span><br><span class=\"line\">arr.reduce(<span class=\"function\">(<span class=\"params\">sum, current</span>) =&gt;</span> sum + current)</span><br><span class=\"line\"><span class=\"comment\">// output 10</span></span><br></pre></td></tr></table></figure>\n<p>上面例子的结果会返回十。我们来看看发生了什么。reduce 函数会将整个操作分步骤来执行。你可以理解为 for 循环。他会把每一个步骤拆解开来去运算，把每一步的结果 return，作为下一步操作的初始值。上面例子在第一步操作时，首先返回了<code>arr</code>中的第一个值（你可以理解为 for 循环的第一步），也就是1。之后，函数将第一步 return 的值累计到初始值中，作为下一步操作的初始值，这是，<code>sum</code>的值已经变成了 1，而 current 的值也变成了循环中的下一个，也就是 2。在这一步骤中，函数执行了加法处理，返回了<code>1 + 2</code>，这个值又变成了下一个步骤中的 sum，而 current 也变成了 arr[3]，之后又会执行上述的操作。没错，说了这么多，上面的例子只是 <code>1+2+3+4</code>而已。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// step1: sum = 0, current = 1</span></span><br><span class=\"line\"><span class=\"keyword\">return</span> sum + current  <span class=\"comment\">// 1</span></span><br><span class=\"line\"><span class=\"comment\">// step2: sum = 1, current = 2</span></span><br><span class=\"line\"><span class=\"keyword\">return</span> sum + current <span class=\"comment\">// 1 + 2</span></span><br><span class=\"line\"><span class=\"comment\">// step3: sum = 1 + 2, current = 3</span></span><br><span class=\"line\"><span class=\"keyword\">return</span> sum + current <span class=\"comment\">// 1 + 2 + 3</span></span><br><span class=\"line\"><span class=\"comment\">// step4: sum = 1 + 2 + 3, current = 4</span></span><br><span class=\"line\"><span class=\"keyword\">return</span> sum + current <span class=\"comment\">// 1 + 2 + 3 + 4</span></span><br></pre></td></tr></table></figure>\n<p>就是这样。<br>而<code>initialValue</code>则表示运算的初始值。假如上面的例子加上一个初始值</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">arr.reduce(<span class=\"function\">(<span class=\"params\">sum, current</span>) =&gt;</span> sum + current, <span class=\"number\">10</span>)</span><br><span class=\"line\"><span class=\"comment\">//output 10+1+2+3+4 = 20</span></span><br></pre></td></tr></table></figure>\n<p>这就是初始值的用法。reduce 的用法其实就已经说完了。你可以滑到最开始定义的地方，重新去看一下定义，是不是有点理解了？</p>\n<h2 id=\"难点\"><a href=\"#难点\" class=\"headerlink\" title=\"难点\"></a>难点</h2><p>reduce 当然不止可以处理加法运算，事实上任何数组相关的操作都可以用 reduce 来解决。面对更加复杂的场景，有两点点是新手容易理解错误的：一是 reduce 函数必须要有返回值，二是<strong>accumulator的值是上一次的初始值，currentValue才是被迭代数组的每一项</strong>。<br>新手常会和 js 中循环的概念混淆。这里回调函数中的两个参数并不是都是操作的数组中的值。这也是后续在复杂场景中使用 reduce 唯一需要注意的地方，再举一个例子</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 假设有一张人员表，你需要把所有女性保存出来（sex: 0 =&gt; 女; 1 =&gt; 男）</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> person = [</span><br><span class=\"line\">  &#123; <span class=\"attr\">name</span>: <span class=\"string\">'张三'</span>, <span class=\"attr\">sex</span>: <span class=\"number\">0</span> &#125;,</span><br><span class=\"line\">  &#123; <span class=\"attr\">name</span>: <span class=\"string\">'李四'</span>, <span class=\"attr\">sex</span>: <span class=\"number\">1</span> &#125;,</span><br><span class=\"line\">  &#123; <span class=\"attr\">name</span>: <span class=\"string\">'王五'</span>, <span class=\"attr\">sex</span>: <span class=\"number\">0</span> &#125;,</span><br><span class=\"line\">  &#123; <span class=\"attr\">name</span>: <span class=\"string\">'赵六'</span>, <span class=\"attr\">sex</span>: <span class=\"number\">0</span> &#125;,</span><br><span class=\"line\">  &#123; <span class=\"attr\">name</span>: <span class=\"string\">'马七'</span>, <span class=\"attr\">sex</span>: <span class=\"number\">1</span> &#125;</span><br><span class=\"line\">]</span><br><span class=\"line\">person.reduce(<span class=\"function\">(<span class=\"params\">res, current</span>) =&gt;</span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (current.sex === <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">    res.push(current.name)</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> res</span><br><span class=\"line\">&#125;, [])</span><br><span class=\"line\"><span class=\"comment\">// output ['张三', '王五', '赵六']</span></span><br></pre></td></tr></table></figure>\n<p>上面例子中，需要注意的是，回调函数中的<code>current</code>指的是<code>person</code>中被迭代的每一项，而 <code>res</code>指的是被赋予的初始值<code>[]</code>，这样你能理解了吗？</p>\n<h2 id=\"几个例子，加固理解\"><a href=\"#几个例子，加固理解\" class=\"headerlink\" title=\"几个例子，加固理解\"></a>几个例子，加固理解</h2><p>正如我上面所说，reduce的用法异常广泛，几乎任何场景都可以使用。所以我没有办法对应应用场景作解释，只能附加几个比较复杂的场景供你参考和巩固，希望对你有些许帮助。</p>\n<h3 id=\"还是上面人名的例子，比如现在有一张单独的成绩单，我们需要将两个数组整合为一个数组\"><a href=\"#还是上面人名的例子，比如现在有一张单独的成绩单，我们需要将两个数组整合为一个数组\" class=\"headerlink\" title=\"还是上面人名的例子，比如现在有一张单独的成绩单，我们需要将两个数组整合为一个数组\"></a>还是上面人名的例子，比如现在有一张单独的成绩单，我们需要将两个数组整合为一个数组</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> person = [</span><br><span class=\"line\">  &#123; <span class=\"attr\">name</span>: <span class=\"string\">'aa'</span>, <span class=\"attr\">sex</span>: <span class=\"number\">0</span> &#125;,</span><br><span class=\"line\">  &#123; <span class=\"attr\">name</span>: <span class=\"string\">'bb'</span>, <span class=\"attr\">sex</span>: <span class=\"number\">1</span> &#125;,</span><br><span class=\"line\">  &#123; <span class=\"attr\">name</span>: <span class=\"string\">'cc'</span>, <span class=\"attr\">sex</span>: <span class=\"number\">0</span> &#125;,</span><br><span class=\"line\">  &#123; <span class=\"attr\">name</span>: <span class=\"string\">'dd'</span>, <span class=\"attr\">sex</span>: <span class=\"number\">0</span> &#125;,</span><br><span class=\"line\">  &#123; <span class=\"attr\">name</span>: <span class=\"string\">'ee'</span>, <span class=\"attr\">sex</span>: <span class=\"number\">1</span> &#125;,</span><br><span class=\"line\">  &#123; <span class=\"attr\">name</span>: <span class=\"string\">'ff'</span>, <span class=\"attr\">sex</span>: <span class=\"number\">0</span> &#125;</span><br><span class=\"line\">]</span><br><span class=\"line\"><span class=\"keyword\">const</span> score = &#123;</span><br><span class=\"line\">  aa: <span class=\"number\">60</span>,</span><br><span class=\"line\">  bb: <span class=\"number\">70</span>,</span><br><span class=\"line\">  cc: <span class=\"number\">80</span>,</span><br><span class=\"line\">  dd: <span class=\"number\">90</span>,</span><br><span class=\"line\">  ee: <span class=\"number\">100</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">person.reduce(<span class=\"function\">(<span class=\"params\">res, current</span>) =&gt;</span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">const</span> key = current.name</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (score[key]) &#123;</span><br><span class=\"line\">    <span class=\"comment\">// 如果 score 中有对应人名的分数，添加到 score 字段上，否则 score = 0</span></span><br><span class=\"line\">    current.score = score[key]</span><br><span class=\"line\">  &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">    current.score = <span class=\"number\">0</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  res.push(current)</span><br><span class=\"line\">  <span class=\"keyword\">return</span> res</span><br><span class=\"line\">&#125;, [])</span><br><span class=\"line\"><span class=\"comment\">// output</span></span><br><span class=\"line\">[</span><br><span class=\"line\">  &#123;<span class=\"string\">\"name\"</span>:<span class=\"string\">\"aa\"</span>,<span class=\"string\">\"sex\"</span>:<span class=\"number\">0</span>,<span class=\"string\">\"score\"</span>:<span class=\"number\">60</span>&#125;,</span><br><span class=\"line\">  &#123;<span class=\"string\">\"name\"</span>:<span class=\"string\">\"bb\"</span>,<span class=\"string\">\"sex\"</span>:<span class=\"number\">1</span>,<span class=\"string\">\"score\"</span>:<span class=\"number\">70</span>&#125;,</span><br><span class=\"line\">  &#123;<span class=\"string\">\"name\"</span>:<span class=\"string\">\"cc\"</span>,<span class=\"string\">\"sex\"</span>:<span class=\"number\">0</span>,<span class=\"string\">\"score\"</span>:<span class=\"number\">80</span>&#125;,</span><br><span class=\"line\">  &#123;<span class=\"string\">\"name\"</span>:<span class=\"string\">\"dd\"</span>,<span class=\"string\">\"sex\"</span>:<span class=\"number\">0</span>,<span class=\"string\">\"score\"</span>:<span class=\"number\">90</span>&#125;,</span><br><span class=\"line\">  &#123;<span class=\"string\">\"name\"</span>:<span class=\"string\">\"ee\"</span>,<span class=\"string\">\"sex\"</span>:<span class=\"number\">1</span>,<span class=\"string\">\"score\"</span>:<span class=\"number\">100</span>&#125;,</span><br><span class=\"line\">  &#123;<span class=\"string\">\"name\"</span>:<span class=\"string\">\"ff\"</span>,<span class=\"string\">\"sex\"</span>:<span class=\"number\">0</span>,<span class=\"string\">\"score\"</span>:<span class=\"number\">0</span>&#125;</span><br><span class=\"line\">]</span><br></pre></td></tr></table></figure>\n<h3 id=\"使用-reduce-实现-groupBy方法\"><a href=\"#使用-reduce-实现-groupBy方法\" class=\"headerlink\" title=\"使用 reduce 实现 groupBy方法\"></a>使用 reduce 实现 groupBy方法</h3><p>lodash 有一个方法叫做 groupBy</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> numbers = [<span class=\"number\">6.1</span>, <span class=\"number\">4.2</span>, <span class=\"number\">6.3</span>];</span><br><span class=\"line\">_.groupBy(numbers, <span class=\"built_in\">Math</span>.floor);</span><br><span class=\"line\"><span class=\"comment\">// 返回 &#123;'4': [4.2], '6': [6.1, 6.3]&#125;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> words = [<span class=\"string\">'one'</span>, <span class=\"string\">'two'</span>, <span class=\"string\">'three'</span>];</span><br><span class=\"line\"></span><br><span class=\"line\">_.groupBy(words, <span class=\"string\">'length'</span>);</span><br><span class=\"line\"><span class=\"comment\">// 返回 &#123;'3': ['one', 'two'], '5': ['three']&#125;</span></span><br></pre></td></tr></table></figure>\n<p>使用 reduce 实现同样的效果</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">groupBy</span> (<span class=\"params\">arr, criteria</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> arr.reduce(<span class=\"function\">(<span class=\"params\">obj, item</span>) =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"comment\">// 判断criteria是函数还是属性名</span></span><br><span class=\"line\">    <span class=\"keyword\">var</span> key = <span class=\"keyword\">typeof</span> criteria === <span class=\"string\">'function'</span> ? criteria(item) : item[criteria]</span><br><span class=\"line\">    <span class=\"comment\">// 如果属性不存在，则创建一个</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (!obj.hasOwnProperty(key)) &#123;</span><br><span class=\"line\">      obj[key] = []</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"comment\">// 将元素加入数组</span></span><br><span class=\"line\">    obj[key].push(item)</span><br><span class=\"line\">    <span class=\"comment\">// 返回这个对象</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> obj</span><br><span class=\"line\">  &#125;, &#123;&#125;);</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n"},{"title":"详解vue.use的使用","date":"2019-02-15T08:35:37.000Z","description":"详解vue.use的使用方法并附上例子","_content":"vue,use用来安装 Vue.js 插件。如果插件是一个对象，必须提供 install 方法。如果插件是一个函数，它会被作为 install 方法。install 方法调用时，会将 Vue 作为参数传入。因此vue.use()常需要扩展的用法有两个：添加全局的方法（插件是函数）、添加全局的组件（插件是对象）。\n\n## 添加全局方法\n> 这里举例将axios添加到全局。\n```javascript\n  // @/assets/js/request.js\n  \n  import axios from \"axios\";\n  import qs from \"qs\";\n  // 创建axios对象\n  let service = axios.create({\n    baseURL: process.env.VUE_APP_BASE_API,\n    timeout: 10000,\n    headers: {\n      autauthorization: '123456',\n      name: 'singleDogNo.1'\n      // ...\n    }\n  });\n  \n  // 需要的话加入拦截器 \n  \n  // 创建get请求\n  function get(url, params, headers) {\n    let options = {};\n    if (params) {\n      options.params = params;\n    }\n    if (headers) {\n      options.headers = headers;\n    }\n    return service.get(url, options);\n  }\n  \n  // 创建post请求\n  function post(url, data, headers) {\n    let options = {};\n    if (headers) {\n      options.headers = headers;\n    }\n    return service.post(url, qs.stringify(data), options);\n  }\n  \n  // 将请求挂载到全局\n  export default {\n    install(Vue) {\n      Object.defineProperty(Vue.prototype, \"$get\", { value: get });\n      Object.defineProperty(Vue.prototype, \"$post\", { value: post });\n    }\n  };\n\n  // ------------------------- 这里是切换文件的分割线 -------------------------\n  \n  // @/main.js\n  import request from \"@/assets/js/request\";\n  \n  Vue.use(request);\n\n```\n接下来在这个项目中的任何地方你都可以直接使用this.$get和this.$post来发送请求。\n\n## 添加全局的组件\n> 这里举例添加一个loding组件\n```vue\n  <!-- @/components/Loading.vue -->\n  <template>\n    <div class=\"loading\" v-if=\"show\" @click=\"close\">hello, {{ msg }}</div>\n  </template>\n\n  <script>\n  export default {\n    name: \"index\",\n    props: {\n      msg: {\n        default: 'loading'\n      },\n      show: {\n        default: true\n      }\n    },\n    methods: {\n      close() {\n        this.$emit('close')\n      }\n    }\n  };\n  </script>\n\n  <style lang=\"scss\" scoped></style>\n  \n  <!-- -------------- 这里是切换文件的分割线 -------------- -->\n  \n  <!-- @/plugins/loading.js -->\n  import Loading from \"@/components/Loading\";\n  \n  const loading = {\n    install(Vue, options) {\n      Vue.component(\"Loading\", Loading, options);\n    }\n  };\n  export default loading;\n  \n  <!-- -------------- 这里是切换文件的分割线 -------------- -->\n  \n  <!-- @/main.js -->\n  Vue.use(Loading, {\n    // ...\n  });\n```\n然后就可以在项目的任何地方使用`<Loading></Loading>`来引用loading组件，并且同样可以使用@close :show等组件方法，以及自定义的options。","source":"_posts/详解vue-use的使用.md","raw":"title: 详解vue.use的使用\ntags: [vue, axios]\ndate: 2019-02-15 16:35:37\ncategories: [vue]\ndescription: 详解vue.use的使用方法并附上例子\n---\nvue,use用来安装 Vue.js 插件。如果插件是一个对象，必须提供 install 方法。如果插件是一个函数，它会被作为 install 方法。install 方法调用时，会将 Vue 作为参数传入。因此vue.use()常需要扩展的用法有两个：添加全局的方法（插件是函数）、添加全局的组件（插件是对象）。\n\n## 添加全局方法\n> 这里举例将axios添加到全局。\n```javascript\n  // @/assets/js/request.js\n  \n  import axios from \"axios\";\n  import qs from \"qs\";\n  // 创建axios对象\n  let service = axios.create({\n    baseURL: process.env.VUE_APP_BASE_API,\n    timeout: 10000,\n    headers: {\n      autauthorization: '123456',\n      name: 'singleDogNo.1'\n      // ...\n    }\n  });\n  \n  // 需要的话加入拦截器 \n  \n  // 创建get请求\n  function get(url, params, headers) {\n    let options = {};\n    if (params) {\n      options.params = params;\n    }\n    if (headers) {\n      options.headers = headers;\n    }\n    return service.get(url, options);\n  }\n  \n  // 创建post请求\n  function post(url, data, headers) {\n    let options = {};\n    if (headers) {\n      options.headers = headers;\n    }\n    return service.post(url, qs.stringify(data), options);\n  }\n  \n  // 将请求挂载到全局\n  export default {\n    install(Vue) {\n      Object.defineProperty(Vue.prototype, \"$get\", { value: get });\n      Object.defineProperty(Vue.prototype, \"$post\", { value: post });\n    }\n  };\n\n  // ------------------------- 这里是切换文件的分割线 -------------------------\n  \n  // @/main.js\n  import request from \"@/assets/js/request\";\n  \n  Vue.use(request);\n\n```\n接下来在这个项目中的任何地方你都可以直接使用this.$get和this.$post来发送请求。\n\n## 添加全局的组件\n> 这里举例添加一个loding组件\n```vue\n  <!-- @/components/Loading.vue -->\n  <template>\n    <div class=\"loading\" v-if=\"show\" @click=\"close\">hello, {{ msg }}</div>\n  </template>\n\n  <script>\n  export default {\n    name: \"index\",\n    props: {\n      msg: {\n        default: 'loading'\n      },\n      show: {\n        default: true\n      }\n    },\n    methods: {\n      close() {\n        this.$emit('close')\n      }\n    }\n  };\n  </script>\n\n  <style lang=\"scss\" scoped></style>\n  \n  <!-- -------------- 这里是切换文件的分割线 -------------- -->\n  \n  <!-- @/plugins/loading.js -->\n  import Loading from \"@/components/Loading\";\n  \n  const loading = {\n    install(Vue, options) {\n      Vue.component(\"Loading\", Loading, options);\n    }\n  };\n  export default loading;\n  \n  <!-- -------------- 这里是切换文件的分割线 -------------- -->\n  \n  <!-- @/main.js -->\n  Vue.use(Loading, {\n    // ...\n  });\n```\n然后就可以在项目的任何地方使用`<Loading></Loading>`来引用loading组件，并且同样可以使用@close :show等组件方法，以及自定义的options。","slug":"详解vue-use的使用","published":1,"updated":"2021-06-25T11:19:55.451Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckqc904ps0034wotvx1rzmatu","content":"<p>vue,use用来安装 Vue.js 插件。如果插件是一个对象，必须提供 install 方法。如果插件是一个函数，它会被作为 install 方法。install 方法调用时，会将 Vue 作为参数传入。因此vue.use()常需要扩展的用法有两个：添加全局的方法（插件是函数）、添加全局的组件（插件是对象）。</p>\n<h2 id=\"添加全局方法\"><a href=\"#添加全局方法\" class=\"headerlink\" title=\"添加全局方法\"></a>添加全局方法</h2><blockquote>\n<p>这里举例将axios添加到全局。<br><div class=\"code-panel__wrapper\" autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\"><header class=\"mac-panel\"><span class=\"doc-path\"></span><span class=\"mac-panel__language\">JAVASCRIPT</span></header><figure class=\"iseeu highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// @/assets/js/request.js</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> axios <span class=\"keyword\">from</span> <span class=\"string\">\"axios\"</span>;</span><br><span class=\"line\"><span class=\"keyword\">import</span> qs <span class=\"keyword\">from</span> <span class=\"string\">\"qs\"</span>;</span><br><span class=\"line\"><span class=\"comment\">// 创建axios对象</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> service = axios.create(&#123;</span><br><span class=\"line\">  baseURL: process.env.VUE_APP_BASE_API,</span><br><span class=\"line\">  timeout: <span class=\"number\">10000</span>,</span><br><span class=\"line\">  headers: &#123;</span><br><span class=\"line\">    autauthorization: <span class=\"string\">'123456'</span>,</span><br><span class=\"line\">    name: <span class=\"string\">'singleDogNo.1'</span></span><br><span class=\"line\">    <span class=\"comment\">// ...</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 需要的话加入拦截器 </span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 创建get请求</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">get</span>(<span class=\"params\">url, params, headers</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">let</span> options = &#123;&#125;;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (params) &#123;</span><br><span class=\"line\">    options.params = params;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (headers) &#123;</span><br><span class=\"line\">    options.headers = headers;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> service.get(url, options);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 创建post请求</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">post</span>(<span class=\"params\">url, data, headers</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">let</span> options = &#123;&#125;;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (headers) &#123;</span><br><span class=\"line\">    options.headers = headers;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> service.post(url, qs.stringify(data), options);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 将请求挂载到全局</span></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> &#123;</span><br><span class=\"line\">  install(Vue) &#123;</span><br><span class=\"line\">    <span class=\"built_in\">Object</span>.defineProperty(Vue.prototype, <span class=\"string\">\"$get\"</span>, &#123; <span class=\"attr\">value</span>: <span class=\"keyword\">get</span> &#125;);</span><br><span class=\"line\">    Object.defineProperty(Vue.prototype, \"$post\", &#123; value: post &#125;);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// ------------------------- 这里是切换文件的分割线 -------------------------</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// @/main.js</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> request <span class=\"keyword\">from</span> <span class=\"string\">\"@/assets/js/request\"</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">Vue.use(request);</span><br></pre></td></tr></table></figure></div></p>\n</blockquote>\n<p>接下来在这个项目中的任何地方你都可以直接使用this.$get和this.$post来发送请求。</p>\n<h2 id=\"添加全局的组件\"><a href=\"#添加全局的组件\" class=\"headerlink\" title=\"添加全局的组件\"></a>添加全局的组件</h2><blockquote>\n<p>这里举例添加一个loding组件<br><div class=\"code-panel__wrapper\" autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\"><header class=\"mac-panel\"><span class=\"doc-path\"></span><span class=\"mac-panel__language\">PLAIN</span></header><figure class=\"iseeu highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;!-- @/components/Loading.vue --&gt;</span><br><span class=\"line\">&lt;template&gt;</span><br><span class=\"line\">  &lt;div class=&quot;loading&quot; v-if=&quot;show&quot; @click=&quot;close&quot;&gt;hello, &#123;&#123; msg &#125;&#125;&lt;/div&gt;</span><br><span class=\"line\">&lt;/template&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;script&gt;</span><br><span class=\"line\">export default &#123;</span><br><span class=\"line\">  name: &quot;index&quot;,</span><br><span class=\"line\">  props: &#123;</span><br><span class=\"line\">    msg: &#123;</span><br><span class=\"line\">      default: &apos;loading&apos;</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    show: &#123;</span><br><span class=\"line\">      default: true</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  methods: &#123;</span><br><span class=\"line\">    close() &#123;</span><br><span class=\"line\">      this.$emit(&apos;close&apos;)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\">&lt;/script&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;style lang=&quot;scss&quot; scoped&gt;&lt;/style&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;!-- -------------- 这里是切换文件的分割线 -------------- --&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;!-- @/plugins/loading.js --&gt;</span><br><span class=\"line\">import Loading from &quot;@/components/Loading&quot;;</span><br><span class=\"line\"></span><br><span class=\"line\">const loading = &#123;</span><br><span class=\"line\">  install(Vue, options) &#123;</span><br><span class=\"line\">    Vue.component(&quot;Loading&quot;, Loading, options);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\">export default loading;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;!-- -------------- 这里是切换文件的分割线 -------------- --&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;!-- @/main.js --&gt;</span><br><span class=\"line\">Vue.use(Loading, &#123;</span><br><span class=\"line\">  // ...</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure></div></p>\n</blockquote>\n<p>然后就可以在项目的任何地方使用<code>&lt;Loading&gt;&lt;/Loading&gt;</code>来引用loading组件，并且同样可以使用@close :show等组件方法，以及自定义的options。</p>\n","site":{"data":{}},"excerpt":"","more":"<p>vue,use用来安装 Vue.js 插件。如果插件是一个对象，必须提供 install 方法。如果插件是一个函数，它会被作为 install 方法。install 方法调用时，会将 Vue 作为参数传入。因此vue.use()常需要扩展的用法有两个：添加全局的方法（插件是函数）、添加全局的组件（插件是对象）。</p>\n<h2 id=\"添加全局方法\"><a href=\"#添加全局方法\" class=\"headerlink\" title=\"添加全局方法\"></a>添加全局方法</h2><blockquote>\n<p>这里举例将axios添加到全局。<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// @/assets/js/request.js</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> axios <span class=\"keyword\">from</span> <span class=\"string\">\"axios\"</span>;</span><br><span class=\"line\"><span class=\"keyword\">import</span> qs <span class=\"keyword\">from</span> <span class=\"string\">\"qs\"</span>;</span><br><span class=\"line\"><span class=\"comment\">// 创建axios对象</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> service = axios.create(&#123;</span><br><span class=\"line\">  baseURL: process.env.VUE_APP_BASE_API,</span><br><span class=\"line\">  timeout: <span class=\"number\">10000</span>,</span><br><span class=\"line\">  headers: &#123;</span><br><span class=\"line\">    autauthorization: <span class=\"string\">'123456'</span>,</span><br><span class=\"line\">    name: <span class=\"string\">'singleDogNo.1'</span></span><br><span class=\"line\">    <span class=\"comment\">// ...</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 需要的话加入拦截器 </span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 创建get请求</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">get</span>(<span class=\"params\">url, params, headers</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">let</span> options = &#123;&#125;;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (params) &#123;</span><br><span class=\"line\">    options.params = params;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (headers) &#123;</span><br><span class=\"line\">    options.headers = headers;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> service.get(url, options);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 创建post请求</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">post</span>(<span class=\"params\">url, data, headers</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">let</span> options = &#123;&#125;;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (headers) &#123;</span><br><span class=\"line\">    options.headers = headers;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> service.post(url, qs.stringify(data), options);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 将请求挂载到全局</span></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> &#123;</span><br><span class=\"line\">  install(Vue) &#123;</span><br><span class=\"line\">    <span class=\"built_in\">Object</span>.defineProperty(Vue.prototype, <span class=\"string\">\"$get\"</span>, &#123; <span class=\"attr\">value</span>: <span class=\"keyword\">get</span> &#125;);</span><br><span class=\"line\">    Object.defineProperty(Vue.prototype, \"$post\", &#123; value: post &#125;);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// ------------------------- 这里是切换文件的分割线 -------------------------</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// @/main.js</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> request <span class=\"keyword\">from</span> <span class=\"string\">\"@/assets/js/request\"</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">Vue.use(request);</span><br></pre></td></tr></table></figure></p>\n</blockquote>\n<p>接下来在这个项目中的任何地方你都可以直接使用this.$get和this.$post来发送请求。</p>\n<h2 id=\"添加全局的组件\"><a href=\"#添加全局的组件\" class=\"headerlink\" title=\"添加全局的组件\"></a>添加全局的组件</h2><blockquote>\n<p>这里举例添加一个loding组件<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;!-- @/components/Loading.vue --&gt;</span><br><span class=\"line\">&lt;template&gt;</span><br><span class=\"line\">  &lt;div class=&quot;loading&quot; v-if=&quot;show&quot; @click=&quot;close&quot;&gt;hello, &#123;&#123; msg &#125;&#125;&lt;/div&gt;</span><br><span class=\"line\">&lt;/template&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;script&gt;</span><br><span class=\"line\">export default &#123;</span><br><span class=\"line\">  name: &quot;index&quot;,</span><br><span class=\"line\">  props: &#123;</span><br><span class=\"line\">    msg: &#123;</span><br><span class=\"line\">      default: &apos;loading&apos;</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    show: &#123;</span><br><span class=\"line\">      default: true</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  methods: &#123;</span><br><span class=\"line\">    close() &#123;</span><br><span class=\"line\">      this.$emit(&apos;close&apos;)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\">&lt;/script&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;style lang=&quot;scss&quot; scoped&gt;&lt;/style&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;!-- -------------- 这里是切换文件的分割线 -------------- --&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;!-- @/plugins/loading.js --&gt;</span><br><span class=\"line\">import Loading from &quot;@/components/Loading&quot;;</span><br><span class=\"line\"></span><br><span class=\"line\">const loading = &#123;</span><br><span class=\"line\">  install(Vue, options) &#123;</span><br><span class=\"line\">    Vue.component(&quot;Loading&quot;, Loading, options);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\">export default loading;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;!-- -------------- 这里是切换文件的分割线 -------------- --&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;!-- @/main.js --&gt;</span><br><span class=\"line\">Vue.use(Loading, &#123;</span><br><span class=\"line\">  // ...</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure></p>\n</blockquote>\n<p>然后就可以在项目的任何地方使用<code>&lt;Loading&gt;&lt;/Loading&gt;</code>来引用loading组件，并且同样可以使用@close :show等组件方法，以及自定义的options。</p>\n"}],"PostAsset":[],"PostCategory":[{"post_id":"ckqc904o50000wotvf8akud0t","category_id":"ckqc904oc0004wotvhtea9f5k","_id":"ckqc904ok000fwotvm12a67kd"},{"post_id":"ckqc904o90002wotvsy0q0yqo","category_id":"ckqc904oi000awotvefr7huf6","_id":"ckqc904on000kwotvbobr103v"},{"post_id":"ckqc904od0006wotvx8gnvdx7","category_id":"ckqc904ol000gwotv70l1oqgn","_id":"ckqc904op000rwotvqi53jzg8"},{"post_id":"ckqc904oo000nwotv2h3sez04","category_id":"ckqc904oi000awotvefr7huf6","_id":"ckqc904os000xwotvoix2o386"},{"post_id":"ckqc904of0008wotvphp2r4bs","category_id":"ckqc904on000lwotvoq4mswjd","_id":"ckqc904ot000zwotvzbkrgtux"},{"post_id":"ckqc904og0009wotvy2t5hglr","category_id":"ckqc904oq000swotvscz8n4cm","_id":"ckqc904ow0015wotvhdlc26pw"},{"post_id":"ckqc904oj000dwotvbw6tgf5i","category_id":"ckqc904ot0010wotv7gd2p21s","_id":"ckqc904p1001cwotvgy9h4y9r"},{"post_id":"ckqc904ok000ewotvr3akbr8x","category_id":"ckqc904ot0010wotv7gd2p21s","_id":"ckqc904p3001gwotv9cz46pjn"},{"post_id":"ckqc904ol000iwotvqeg6lmhr","category_id":"ckqc904p0001bwotv7enmyzbv","_id":"ckqc904p5001nwotvsivj1gmq"},{"post_id":"ckqc904om000jwotvgaikvhdt","category_id":"ckqc904p0001bwotv7enmyzbv","_id":"ckqc904p8001twotvgg0jop46"},{"post_id":"ckqc904oo000pwotv1rab80db","category_id":"ckqc904p5001mwotv9xj2rqr1","_id":"ckqc904pb001zwotv6m0g3zos"},{"post_id":"ckqc904oq000uwotvorf302cq","category_id":"ckqc904p8001uwotv8wt58l1e","_id":"ckqc904pf0027wotvhybbx85p"},{"post_id":"ckqc904pe0024wotvoye18153","category_id":"ckqc904p0001bwotv7enmyzbv","_id":"ckqc904ph002dwotvvjp3jvtn"},{"post_id":"ckqc904or000wwotv62a5rt8f","category_id":"ckqc904p8001uwotv8wt58l1e","_id":"ckqc904pj002iwotvqzh5i6ee"},{"post_id":"ckqc904pg002awotv8mofm2dd","category_id":"ckqc904on000lwotvoq4mswjd","_id":"ckqc904pk002kwotvmokpgslj"},{"post_id":"ckqc904os000ywotv9plfdoxx","category_id":"ckqc904pf0026wotvyb4bq97n","_id":"ckqc904pl002pwotvuefb1zw3"},{"post_id":"ckqc904pi002hwotveh6jtqiv","category_id":"ckqc904p0001bwotv7enmyzbv","_id":"ckqc904pm002swotvta60cop7"},{"post_id":"ckqc904ot0013wotvpwrdd7of","category_id":"ckqc904pi002ewotvcn581w8n","_id":"ckqc904po002wwotvh1nvjldi"},{"post_id":"ckqc904ox0018wotvk64f8gaq","category_id":"ckqc904on000lwotvoq4mswjd","_id":"ckqc904ps0035wotv1zmq6pyg"},{"post_id":"ckqc904ox0018wotvk64f8gaq","category_id":"ckqc904pn002uwotvk0sxieod","_id":"ckqc904pt0039wotvxrajenxk"},{"post_id":"ckqc904oz001awotvec1w5zlt","category_id":"ckqc904pq0030wotvpmo34b9o","_id":"ckqc904pu003bwotvp4n951l7"},{"post_id":"ckqc904ps0034wotvx1rzmatu","category_id":"ckqc904on000lwotvoq4mswjd","_id":"ckqc904pu003dwotvfuv9cdhd"},{"post_id":"ckqc904p1001ewotv6fcst2cg","category_id":"ckqc904pk002lwotv7k9q60gg","_id":"ckqc904pv003gwotvtdhmrnbh"},{"post_id":"ckqc904p2001fwotvjq93l7wo","category_id":"ckqc904pq0030wotvpmo34b9o","_id":"ckqc904pw003kwotv8mfzgmxe"},{"post_id":"ckqc904p3001jwotv7yma46uj","category_id":"ckqc904pq0030wotvpmo34b9o","_id":"ckqc904px003owotv1574ztuy"},{"post_id":"ckqc904p5001lwotv79f8c1k2","category_id":"ckqc904pq0030wotvpmo34b9o","_id":"ckqc904py003swotvjfh6s1q5"},{"post_id":"ckqc904p6001qwotvm3lc182e","category_id":"ckqc904pq0030wotvpmo34b9o","_id":"ckqc904q0003vwotv5ylw52bw"},{"post_id":"ckqc904p7001swotvx2zbeady","category_id":"ckqc904py003rwotv26y238mr","_id":"ckqc904q1003zwotve3l9cjvp"},{"post_id":"ckqc904p9001vwotvnv2smul8","category_id":"ckqc904pq0030wotvpmo34b9o","_id":"ckqc904q60043wotviqzsv0s7"},{"post_id":"ckqc904pa001ywotvhe7ypgdx","category_id":"ckqc904q1003ywotvu8pdvm2l","_id":"ckqc904q80049wotvq8la6ox5"},{"post_id":"ckqc904pb0020wotv0x1thsj2","category_id":"ckqc904py003rwotv26y238mr","_id":"ckqc904qa004cwotvuc70p5x6"},{"post_id":"ckqc904pe0025wotv3iaqlqzg","category_id":"ckqc904pf0026wotvyb4bq97n","_id":"ckqc904qb004hwotvomwege0f"},{"post_id":"ckqc904ph002cwotvf1t8yako","category_id":"ckqc904pk002lwotv7k9q60gg","_id":"ckqc904qd004lwotvy5zir6l4"},{"post_id":"ckqc904pj002jwotvrtjqbmpl","category_id":"ckqc904qb004gwotvvpk9aop6","_id":"ckqc904qe004qwotvgex1zz7g"},{"post_id":"ckqc904pm002rwotvnejfcbwg","category_id":"ckqc904qb004gwotvvpk9aop6","_id":"ckqc904qf004uwotv5ux7wol9"},{"post_id":"ckqc904pn002vwotv6breeo0k","category_id":"ckqc904py003rwotv26y238mr","_id":"ckqc904qh0051wotvv2ufhu8q"},{"post_id":"ckqc904pp002ywotvvb3dmvbl","category_id":"ckqc904qg004xwotvkt9ivehb","_id":"ckqc904qi0054wotv98pubq0x"},{"post_id":"ckqc904pr0032wotv77jrbw7p","category_id":"ckqc904qj0056wotvf3t2h9x8","_id":"ckqc904ql005cwotvy3ran6a4"},{"post_id":"ckqc904ov0014wotvqr7m5cal","category_id":"ckqc904pk002lwotv7k9q60gg","_id":"ckqc904qm005hwotvhbgkx2pk"},{"post_id":"ckqc904ov0014wotvqr7m5cal","category_id":"ckqc904qe004pwotvrzelzxyc","_id":"ckqc904qn005jwotvmszwsvh0"},{"post_id":"ckqc904ov0014wotvqr7m5cal","category_id":"ckqc904qk0059wotv77d9oa9u","_id":"ckqc904qn005kwotv9jguurmp"},{"post_id":"ckqc904pq002zwotv7g901dlu","category_id":"ckqc904qi0052wotviq4hx2wn","_id":"ckqc904qo005mwotvrpc0jebe"},{"post_id":"ckqc904pq002zwotv7g901dlu","category_id":"ckqc904ql005dwotvikl1ncnk","_id":"ckqc904qp005owotvayi6ir7z"}],"PostTag":[{"post_id":"ckqc904o50000wotvf8akud0t","tag_id":"ckqc904od0005wotvesvq5iw8","_id":"ckqc904oi000cwotvyla5766c"},{"post_id":"ckqc904o90002wotvsy0q0yqo","tag_id":"ckqc904oi000bwotvp0t1jqbg","_id":"ckqc904oo000owotvk0oh44hd"},{"post_id":"ckqc904o90002wotvsy0q0yqo","tag_id":"ckqc904ol000hwotvati5qn47","_id":"ckqc904op000qwotvyvjz48yt"},{"post_id":"ckqc904od0006wotvx8gnvdx7","tag_id":"ckqc904on000mwotvjgw3sqgt","_id":"ckqc904or000vwotv6j6mcafk"},{"post_id":"ckqc904of0008wotvphp2r4bs","tag_id":"ckqc904oq000twotv9jyk9xjf","_id":"ckqc904ot0012wotvtrrolz6x"},{"post_id":"ckqc904og0009wotvy2t5hglr","tag_id":"ckqc904ot0011wotvkb16v7f6","_id":"ckqc904oy0019wotvpw6dfb1s"},{"post_id":"ckqc904oj000dwotvbw6tgf5i","tag_id":"ckqc904ow0017wotv8lp0ha95","_id":"ckqc904p4001kwotv915qdifi"},{"post_id":"ckqc904oj000dwotvbw6tgf5i","tag_id":"ckqc904p1001dwotvdcjmxn09","_id":"ckqc904p6001owotve6h72sip"},{"post_id":"ckqc904ok000ewotvr3akbr8x","tag_id":"ckqc904ow0017wotv8lp0ha95","_id":"ckqc904p7001rwotv174n0cyi"},{"post_id":"ckqc904ol000iwotvqeg6lmhr","tag_id":"ckqc904p6001pwotvwzpwe3hi","_id":"ckqc904pa001xwotvqkhcjtch"},{"post_id":"ckqc904om000jwotvgaikvhdt","tag_id":"ckqc904p6001pwotvwzpwe3hi","_id":"ckqc904pd0023wotv4s0dkugn"},{"post_id":"ckqc904pe0024wotvoye18153","tag_id":"ckqc904p6001pwotvwzpwe3hi","_id":"ckqc904pg0029wotvbkkaikz2"},{"post_id":"ckqc904oo000nwotv2h3sez04","tag_id":"ckqc904ol000hwotvati5qn47","_id":"ckqc904ph002bwotv3fru2f7u"},{"post_id":"ckqc904oo000nwotv2h3sez04","tag_id":"ckqc904pc0022wotvcyqof0yn","_id":"ckqc904pi002gwotvrqhchfb3"},{"post_id":"ckqc904pi002hwotveh6jtqiv","tag_id":"ckqc904p6001pwotvwzpwe3hi","_id":"ckqc904pk002mwotvrescycry"},{"post_id":"ckqc904oo000pwotv1rab80db","tag_id":"ckqc904pf0028wotvxg74v6ag","_id":"ckqc904pl002qwotvirlrfjbj"},{"post_id":"ckqc904oo000pwotv1rab80db","tag_id":"ckqc904pi002fwotvmpmcut0v","_id":"ckqc904pn002twotv5gqfj9yr"},{"post_id":"ckqc904oq000uwotvorf302cq","tag_id":"ckqc904pk002nwotvimdyplwp","_id":"ckqc904pr0033wotv82o5hszr"},{"post_id":"ckqc904oq000uwotvorf302cq","tag_id":"ckqc904po002xwotvzn0d9tis","_id":"ckqc904ps0036wotvlepwe6fr"},{"post_id":"ckqc904or000wwotv62a5rt8f","tag_id":"ckqc904pq0031wotvl1s16xod","_id":"ckqc904pv003ewotva22xr8sx"},{"post_id":"ckqc904or000wwotv62a5rt8f","tag_id":"ckqc904pt0038wotv6qp66zp1","_id":"ckqc904pv003hwotv6sf9622o"},{"post_id":"ckqc904os000ywotv9plfdoxx","tag_id":"ckqc904pu003cwotvmupd3b7g","_id":"ckqc904px003mwotvx5uzq872"},{"post_id":"ckqc904os000ywotv9plfdoxx","tag_id":"ckqc904pw003iwotvj479vfbt","_id":"ckqc904py003pwotv1isynph0"},{"post_id":"ckqc904ot0013wotvpwrdd7of","tag_id":"ckqc904px003lwotvr89muvk2","_id":"ckqc904pz003twotvwqupjm8b"},{"post_id":"ckqc904ov0014wotvqr7m5cal","tag_id":"ckqc904py003qwotv79iygy8d","_id":"ckqc904q20040wotvz0sywbb8"},{"post_id":"ckqc904ov0014wotvqr7m5cal","tag_id":"ckqc904oq000twotv9jyk9xjf","_id":"ckqc904q20041wotvvvje75u2"},{"post_id":"ckqc904ov0014wotvqr7m5cal","tag_id":"ckqc904pz003uwotv02wbtxux","_id":"ckqc904q70045wotvtp0x1xad"},{"post_id":"ckqc904ox0018wotvk64f8gaq","tag_id":"ckqc904oq000twotv9jyk9xjf","_id":"ckqc904q80046wotvovxy757t"},{"post_id":"ckqc904ox0018wotvk64f8gaq","tag_id":"ckqc904q1003xwotvylt7x2ax","_id":"ckqc904q9004awotvp7ezpkik"},{"post_id":"ckqc904oz001awotvec1w5zlt","tag_id":"ckqc904q60042wotvtu9lbdqc","_id":"ckqc904qb004ewotvx1om2pwh"},{"post_id":"ckqc904oz001awotvec1w5zlt","tag_id":"ckqc904q80047wotvitidp3ek","_id":"ckqc904qb004fwotv1i7zgv0g"},{"post_id":"ckqc904p1001ewotv6fcst2cg","tag_id":"ckqc904oq000twotv9jyk9xjf","_id":"ckqc904qc004jwotv5v4ss6t5"},{"post_id":"ckqc904p1001ewotv6fcst2cg","tag_id":"ckqc904py003qwotv79iygy8d","_id":"ckqc904qc004kwotv1w5yfhwu"},{"post_id":"ckqc904p2001fwotvjq93l7wo","tag_id":"ckqc904q60042wotvtu9lbdqc","_id":"ckqc904qf004rwotvuqghdyqk"},{"post_id":"ckqc904p2001fwotvjq93l7wo","tag_id":"ckqc904q80047wotvitidp3ek","_id":"ckqc904qf004swotv183sd5h5"},{"post_id":"ckqc904p3001jwotv7yma46uj","tag_id":"ckqc904q60042wotvtu9lbdqc","_id":"ckqc904qh004ywotv4c4z7llz"},{"post_id":"ckqc904p3001jwotv7yma46uj","tag_id":"ckqc904q80047wotvitidp3ek","_id":"ckqc904qh004zwotvw3ff9yv0"},{"post_id":"ckqc904p5001lwotv79f8c1k2","tag_id":"ckqc904q60042wotvtu9lbdqc","_id":"ckqc904qj0055wotvgd0d8jtl"},{"post_id":"ckqc904p5001lwotv79f8c1k2","tag_id":"ckqc904q80047wotvitidp3ek","_id":"ckqc904qj0057wotv9mkxvqe7"},{"post_id":"ckqc904p6001qwotvm3lc182e","tag_id":"ckqc904q60042wotvtu9lbdqc","_id":"ckqc904ql005bwotv5x4z2f93"},{"post_id":"ckqc904p6001qwotvm3lc182e","tag_id":"ckqc904q80047wotvitidp3ek","_id":"ckqc904ql005ewotvil5ez3ms"},{"post_id":"ckqc904p7001swotvx2zbeady","tag_id":"ckqc904qk005awotvtn0wno83","_id":"ckqc904qm005gwotvjcaqpd1a"},{"post_id":"ckqc904p9001vwotvnv2smul8","tag_id":"ckqc904q60042wotvtu9lbdqc","_id":"ckqc904qo005nwotv27nm8qi8"},{"post_id":"ckqc904p9001vwotvnv2smul8","tag_id":"ckqc904q80047wotvitidp3ek","_id":"ckqc904qp005pwotvry936v1l"},{"post_id":"ckqc904pa001ywotvhe7ypgdx","tag_id":"ckqc904qo005lwotvkbftiqb9","_id":"ckqc904qq005rwotvv3suybyg"},{"post_id":"ckqc904pb0020wotv0x1thsj2","tag_id":"ckqc904qp005qwotvssqutcnp","_id":"ckqc904qr005twotv2jrv2jrh"},{"post_id":"ckqc904pe0025wotv3iaqlqzg","tag_id":"ckqc904oq000twotv9jyk9xjf","_id":"ckqc904qr005vwotvw35qmzak"},{"post_id":"ckqc904pe0025wotv3iaqlqzg","tag_id":"ckqc904pu003cwotvmupd3b7g","_id":"ckqc904qs005wwotvizpv2mug"},{"post_id":"ckqc904pg002awotv8mofm2dd","tag_id":"ckqc904oq000twotv9jyk9xjf","_id":"ckqc904qu0061wotvutdqnhno"},{"post_id":"ckqc904pg002awotv8mofm2dd","tag_id":"ckqc904qr005uwotvoy61j8th","_id":"ckqc904qu0062wotvnnrvbwix"},{"post_id":"ckqc904pg002awotv8mofm2dd","tag_id":"ckqc904qs005xwotvci22p8a5","_id":"ckqc904qu0064wotv94en4kh2"},{"post_id":"ckqc904pg002awotv8mofm2dd","tag_id":"ckqc904py003qwotv79iygy8d","_id":"ckqc904qv0065wotvz877ls10"},{"post_id":"ckqc904pg002awotv8mofm2dd","tag_id":"ckqc904qt005zwotv8yxx47gi","_id":"ckqc904qw0067wotv998enng2"},{"post_id":"ckqc904ph002cwotvf1t8yako","tag_id":"ckqc904py003qwotv79iygy8d","_id":"ckqc904qw0068wotvervvsspn"},{"post_id":"ckqc904pj002jwotvrtjqbmpl","tag_id":"ckqc904qu0063wotvkwtwlr1y","_id":"ckqc904qw006awotvpa1kw9el"},{"post_id":"ckqc904pm002rwotvnejfcbwg","tag_id":"ckqc904qu0063wotvkwtwlr1y","_id":"ckqc904qx006cwotvavw25gmd"},{"post_id":"ckqc904pm002rwotvnejfcbwg","tag_id":"ckqc904qw0069wotvpxq3f09t","_id":"ckqc904qx006dwotvtxao70ge"},{"post_id":"ckqc904pn002vwotv6breeo0k","tag_id":"ckqc904qx006bwotvk301jll4","_id":"ckqc904qx006gwotv326unjha"},{"post_id":"ckqc904pn002vwotv6breeo0k","tag_id":"ckqc904qx006ewotv6rzv5ksi","_id":"ckqc904qy006hwotv4ihiylju"},{"post_id":"ckqc904pp002ywotvvb3dmvbl","tag_id":"ckqc904qx006fwotvqghvlq2y","_id":"ckqc904qy006kwotvv2t2izhx"},{"post_id":"ckqc904pp002ywotvvb3dmvbl","tag_id":"ckqc904qy006iwotv5f02z06c","_id":"ckqc904qy006lwotvi4w3xwlf"},{"post_id":"ckqc904pq002zwotv7g901dlu","tag_id":"ckqc904q60042wotvtu9lbdqc","_id":"ckqc904qz006owotv5pqckskv"},{"post_id":"ckqc904pq002zwotv7g901dlu","tag_id":"ckqc904qy006mwotvhwgw1hv5","_id":"ckqc904qz006pwotvt6j4kwf7"},{"post_id":"ckqc904pr0032wotv77jrbw7p","tag_id":"ckqc904qz006nwotvuzvnedr0","_id":"ckqc904qz006rwotvtisrcckp"},{"post_id":"ckqc904ps0034wotvx1rzmatu","tag_id":"ckqc904oq000twotv9jyk9xjf","_id":"ckqc904r0006swotvofr493dl"},{"post_id":"ckqc904ps0034wotvx1rzmatu","tag_id":"ckqc904qs005xwotvci22p8a5","_id":"ckqc904r0006twotvo7qwls4g"}],"Tag":[{"name":"mac","_id":"ckqc904od0005wotvesvq5iw8"},{"name":"draggable","_id":"ckqc904oi000bwotvp0t1jqbg"},{"name":"html5","_id":"ckqc904ol000hwotvati5qn47"},{"name":"video","_id":"ckqc904on000mwotvjgw3sqgt"},{"name":"vue","_id":"ckqc904oq000twotv9jyk9xjf"},{"name":"css3","_id":"ckqc904ot0011wotvkb16v7f6"},{"name":"git","_id":"ckqc904ow0017wotv8lp0ha95"},{"name":"GitHub","_id":"ckqc904p1001dwotvdcjmxn09"},{"name":"css","_id":"ckqc904p6001pwotvwzpwe3hi"},{"name":"cache","_id":"ckqc904pc0022wotvcyqof0yn"},{"name":"markdown","_id":"ckqc904pf0028wotvxg74v6ag"},{"name":"blog","_id":"ckqc904pi002fwotvmpmcut0v"},{"name":"canvas","_id":"ckqc904pk002nwotvimdyplwp"},{"name":"粒子动画","_id":"ckqc904po002xwotvzn0d9tis"},{"name":"es6","_id":"ckqc904pq0031wotvl1s16xod"},{"name":"promise","_id":"ckqc904pt0038wotv6qp66zp1"},{"name":"carousel","_id":"ckqc904pu003cwotvmupd3b7g"},{"name":"animate","_id":"ckqc904pw003iwotvj479vfbt"},{"name":"vscode","_id":"ckqc904px003lwotvr89muvk2"},{"name":"webpack","_id":"ckqc904py003qwotv79iygy8d"},{"name":"compress","_id":"ckqc904pz003uwotv02wbtxux"},{"name":"vue3","_id":"ckqc904q1003xwotvylt7x2ax"},{"name":"Vue","_id":"ckqc904q60042wotvtu9lbdqc"},{"name":"adminUI","_id":"ckqc904q80047wotvitidp3ek"},{"name":"sass","_id":"ckqc904qk005awotvtn0wno83"},{"name":"webstorm","_id":"ckqc904qo005lwotvkbftiqb9"},{"name":"NodeJs","_id":"ckqc904qp005qwotvssqutcnp"},{"name":"vuex","_id":"ckqc904qr005uwotvoy61j8th"},{"name":"axios","_id":"ckqc904qs005xwotvci22p8a5"},{"name":"es6+","_id":"ckqc904qt005zwotv8yxx47gi"},{"name":"WeChat","_id":"ckqc904qu0063wotvkwtwlr1y"},{"name":"audio","_id":"ckqc904qw0069wotvpxq3f09t"},{"name":"nodeJs","_id":"ckqc904qx006bwotvk301jll4"},{"name":"fs模块","_id":"ckqc904qx006ewotv6rzv5ksi"},{"name":"Eslint","_id":"ckqc904qx006fwotvqghvlq2y"},{"name":"Prettier","_id":"ckqc904qy006iwotv5f02z06c"},{"name":"Vuex","_id":"ckqc904qy006mwotvhwgw1hv5"},{"name":"javascript","_id":"ckqc904qz006nwotvuzvnedr0"}]}}