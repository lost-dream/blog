{"meta":{"version":1,"warehouse":"2.2.0"},"models":{"Asset":[{"_id":"source/img/2.jpg","path":"img/2.jpg","modified":0,"renderable":0},{"_id":"source/img/3.jpg","path":"img/3.jpg","modified":0,"renderable":0},{"_id":"source/img/6.png","path":"img/6.png","modified":0,"renderable":0},{"_id":"source/img/markdown-eg.jpeg","path":"img/markdown-eg.jpeg","modified":0,"renderable":0},{"_id":"source/img/me.jpg","path":"img/me.jpg","modified":0,"renderable":0},{"_id":"source/img/touxiang.jpg","path":"img/touxiang.jpg","modified":0,"renderable":0},{"_id":"themes/next/source/404.html","path":"404.html","modified":0,"renderable":1},{"_id":"source/img/1.png","path":"img/1.png","modified":0,"renderable":0},{"_id":"source/img/5.png","path":"img/5.png","modified":0,"renderable":0},{"_id":"source/img/4.png","path":"img/4.png","modified":0,"renderable":0},{"_id":"themes/next/source/css/main.styl","path":"css/main.styl","modified":0,"renderable":1},{"_id":"themes/next/source/images/algolia_logo.svg","path":"images/algolia_logo.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/avatar.gif","path":"images/avatar.gif","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","path":"images/cc-by-nc-nd.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","path":"images/cc-by-nc-sa.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc.svg","path":"images/cc-by-nc.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nd.svg","path":"images/cc-by-nd.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-sa.svg","path":"images/cc-by-sa.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by.svg","path":"images/cc-by.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-zero.svg","path":"images/cc-zero.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/ewm.jpg","path":"images/ewm.jpg","modified":0,"renderable":1},{"_id":"themes/next/source/images/loading.gif","path":"images/loading.gif","modified":0,"renderable":1},{"_id":"themes/next/source/images/favicon.png","path":"images/favicon.png","modified":0,"renderable":1},{"_id":"themes/next/source/images/placeholder.gif","path":"images/placeholder.gif","modified":0,"renderable":1},{"_id":"themes/next/source/images/quote-l.svg","path":"images/quote-l.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/quote-r.svg","path":"images/quote-r.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/searchicon.png","path":"images/searchicon.png","modified":0,"renderable":1},{"_id":"themes/next/source/images/touxiang.jpg","path":"images/touxiang.jpg","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/affix.js","path":"js/src/affix.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/algolia-search.js","path":"js/src/algolia-search.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/bootstrap.js","path":"js/src/bootstrap.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/exturl.js","path":"js/src/exturl.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/hook-duoshuo.js","path":"js/src/hook-duoshuo.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/js.cookie.js","path":"js/src/js.cookie.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/motion.js","path":"js/src/motion.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/post-details.js","path":"js/src/post-details.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/scroll-cookie.js","path":"js/src/scroll-cookie.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/scrollspy.js","path":"js/src/scrollspy.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/utils.js","path":"js/src/utils.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/canvas-ribbon/canvas-ribbon.js","path":"lib/canvas-ribbon/canvas-ribbon.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.css","path":"lib/algolia-instant-search/instantsearch.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/canvas-nest/canvas-nest.min.js","path":"lib/canvas-nest/canvas-nest.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fastclick/LICENSE","path":"lib/fastclick/LICENSE","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fastclick/README.md","path":"lib/fastclick/README.md","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fastclick/bower.json","path":"lib/fastclick/bower.json","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/bower.json","path":"lib/font-awesome/bower.json","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/HELP-US-OUT.txt","path":"lib/font-awesome/HELP-US-OUT.txt","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/CONTRIBUTING.md","path":"lib/jquery_lazyload/CONTRIBUTING.md","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/README.md","path":"lib/jquery_lazyload/README.md","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/bower.json","path":"lib/jquery_lazyload/bower.json","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.scrollstop.js","path":"lib/jquery_lazyload/jquery.scrollstop.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.lazyload.js","path":"lib/jquery_lazyload/jquery.lazyload.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-barber-shop.min.css","path":"lib/pace/pace-theme-barber-shop.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-big-counter.min.css","path":"lib/pace/pace-theme-big-counter.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-center-atom.min.css","path":"lib/pace/pace-theme-center-atom.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-bounce.min.css","path":"lib/pace/pace-theme-bounce.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-center-circle.min.css","path":"lib/pace/pace-theme-center-circle.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-center-radar.min.css","path":"lib/pace/pace-theme-center-radar.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-center-simple.min.css","path":"lib/pace/pace-theme-center-simple.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-corner-indicator.min.css","path":"lib/pace/pace-theme-corner-indicator.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-fill-left.min.css","path":"lib/pace/pace-theme-fill-left.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-flash.min.css","path":"lib/pace/pace-theme-flash.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-loading-bar.min.css","path":"lib/pace/pace-theme-loading-bar.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-mac-osx.min.css","path":"lib/pace/pace-theme-mac-osx.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace.min.js","path":"lib/pace/pace.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-minimal.min.css","path":"lib/pace/pace-theme-minimal.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/three/canvas_lines.min.js","path":"lib/three/canvas_lines.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/three/canvas_sphere.min.js","path":"lib/three/canvas_sphere.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/three/three-waves.min.js","path":"lib/three/three-waves.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/bower.json","path":"lib/velocity/bower.json","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.min.js","path":"lib/velocity/velocity.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.ui.js","path":"lib/velocity/velocity.ui.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.ui.min.js","path":"lib/velocity/velocity.ui.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery/index.js","path":"lib/jquery/index.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/schemes/pisces.js","path":"js/src/schemes/pisces.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/han.min.css","path":"lib/Han/dist/han.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.css","path":"lib/fancybox/source/jquery.fancybox.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.pack.js","path":"lib/fancybox/source/jquery.fancybox.pack.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.js","path":"lib/fancybox/source/jquery.fancybox.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.js","path":"lib/fastclick/lib/fastclick.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.min.js","path":"lib/fastclick/lib/fastclick.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css.map","path":"lib/font-awesome/css/font-awesome.css.map","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.min.css","path":"lib/font-awesome/css/font-awesome.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.min.js","path":"lib/ua-parser-js/dist/ua-parser.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.pack.js","path":"lib/ua-parser-js/dist/ua-parser.pack.js","modified":0,"renderable":1},{"_id":"source/img/1.jpg","path":"img/1.jpg","modified":0,"renderable":0},{"_id":"themes/next/source/lib/Han/dist/han.css","path":"lib/Han/dist/han.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/han.js","path":"lib/Han/dist/han.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/han.min.js","path":"lib/Han/dist/han.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff","path":"lib/font-awesome/fonts/fontawesome-webfont.woff","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff2","path":"lib/font-awesome/fonts/fontawesome-webfont.woff2","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han-space.otf","path":"lib/Han/dist/font/han-space.otf","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han-space.woff","path":"lib/Han/dist/font/han-space.woff","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han.woff","path":"lib/Han/dist/font/han.woff","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han.otf","path":"lib/Han/dist/font/han.otf","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han.woff2","path":"lib/Han/dist/font/han.woff2","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/FontAwesome.otf","path":"lib/font-awesome/fonts/FontAwesome.otf","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.js","path":"lib/velocity/velocity.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.eot","path":"lib/font-awesome/fonts/fontawesome-webfont.eot","modified":0,"renderable":1},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.js","path":"lib/algolia-instant-search/instantsearch.min.js","modified":0,"renderable":1},{"_id":"source/img/comb.png","path":"img/comb.png","modified":0,"renderable":0},{"_id":"themes/next/source/lib/three/three.min.js","path":"lib/three/three.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.svg","path":"lib/font-awesome/fonts/fontawesome-webfont.svg","modified":0,"renderable":1}],"Cache":[{"_id":"source/.DS_Store","hash":"2e320c52f5504ed564ad01e2794cb3c05d86fde6","modified":1574992765023},{"_id":"themes/next/.bowerrc","hash":"3228a58ed0ece9f85e1e3136352094080b8dece1","modified":1569756154563},{"_id":"themes/next/.editorconfig","hash":"792fd2bd8174ece1a75d5fd24ab16594886f3a7f","modified":1569756154563},{"_id":"themes/next/.gitattributes","hash":"44bd4729c74ccb88110804f41746fec07bf487d4","modified":1569756154563},{"_id":"themes/next/.gitignore","hash":"32ea93f21d8693d5d8fa4eef1c51a21ad0670047","modified":1569756154564},{"_id":"themes/next/.hound.yml","hash":"b76daa84c9ca3ad292c78412603370a367cc2bc3","modified":1569756154565},{"_id":"themes/next/.javascript_ignore","hash":"8a224b381155f10e6eb132a4d815c5b52962a9d1","modified":1569756154565},{"_id":"themes/next/.jshintrc","hash":"9928f81bd822f6a8d67fdbc909b517178533bca9","modified":1569756154565},{"_id":"themes/next/.stylintrc","hash":"b28e24704a5d8de08346c45286574c8e76cc109f","modified":1569756154566},{"_id":"themes/next/.travis.yml","hash":"d60d4a5375fea23d53b2156b764a99b2e56fa660","modified":1569756154566},{"_id":"themes/next/LICENSE","hash":"f293bcfcdc06c0b77ba13570bb8af55eb5c059fd","modified":1569756154566},{"_id":"themes/next/README.cn.md","hash":"6d9177e7dad87e6129760e4b559bd3f7a15429d7","modified":1569756154566},{"_id":"themes/next/README.md","hash":"950ca6e9c0fa607d290a5b1fd883df44725b36b2","modified":1569756154566},{"_id":"themes/next/_config.yml","hash":"f8e24fe1e54e93b2fdfeb4787e3eee707f599c9e","modified":1574675048605},{"_id":"themes/next/bower.json","hash":"7d7938f9da896fe710aa0e9120140e528bf058df","modified":1569756154567},{"_id":"themes/next/gulpfile.coffee","hash":"031bffc483e417b20e90eceb6cf358e7596d2e69","modified":1569756154567},{"_id":"themes/next/package.json","hash":"193dad6f59a588908fac082cc46fe067dac1b84d","modified":1569756154580},{"_id":"source/_posts/HTML5原生拖放.md","hash":"de2e02e0b7224e2df1a58ac26f3ab02042834cea","modified":1569756154498},{"_id":"source/_posts/Video小记.md","hash":"076e8b96ded71d5ca940b61f1c2dbc60b7e791f7","modified":1569756154498},{"_id":"source/_posts/Vue-Cli-3-使用感受.md","hash":"5cdc5de5cc7d58f1db9ca43c4e92e912c4da19a4","modified":1569756154498},{"_id":"source/_posts/cropper.md","hash":"3a1d7988ea91469950c55ea6118160fc363f93b2","modified":1569756154498},{"_id":"source/_posts/css伪元素.md","hash":"12f30b9ad23d9201214a50ac14febd75efa67601","modified":1569756154498},{"_id":"source/_posts/github和gitlab下fork后同步个人仓库和源仓库.md","hash":"97b853acf5e3b818851abe23232c2d74d55b6b56","modified":1569756154498},{"_id":"source/_posts/git命令.md","hash":"be6c7b7a5a1e0f7916fdbead95724353b74ab1e6","modified":1569756154498},{"_id":"source/_posts/hello-world.md","hash":"a76dc840e76d1088d1616e64627761baf85ab09c","modified":1569756154499},{"_id":"source/_posts/html清除缓存.md","hash":"eea7598068d99e368641048efe159140f7ec6f95","modified":1569756154499},{"_id":"source/_posts/markdown语法.md","hash":"ee436b9a6e91bea69b8aebbb3bd891e5127c39df","modified":1574999877806},{"_id":"source/_posts/particlesJs开发手册.md","hash":"1bc2b899dface11bcdd5f17be28d59ab8d21a1b5","modified":1569756154499},{"_id":"source/_posts/swiper-animate的使用.md","hash":"a22283d94296948ccdcaea9ac7004eca4b6d995e","modified":1569756154499},{"_id":"source/_posts/vue-awesome-swiper使用.md","hash":"fe3a62ffc6c2a253c8f0161a452e3bb7e9795853","modified":1569756154499},{"_id":"source/_posts/vue-cli3-x项目图片压缩.md","hash":"eda48738736e9d2059f6386834dbb2ef0a5fc02e","modified":1574990318105},{"_id":"source/_posts/从0开始开发vue单文件项目.md","hash":"9a69fcfee3261391be15ef415bbe7adeed101506","modified":1569756154499},{"_id":"source/_posts/使用SASS.md","hash":"6890f3e3d044d0d6b018105a5281c880e23d40e6","modified":1569756154499},{"_id":"source/_posts/使用webstrom.md","hash":"44bced2605a11805d283cd0360786dcbd8d8ab0e","modified":1569756154500},{"_id":"source/_posts/全局设置npm镜像.md","hash":"05d67a0ba9d3debd271813013f47460cf54df451","modified":1569756154500},{"_id":"source/_posts/关于sticky-footer兼容性最好的一种解决方案.md","hash":"8a2976993c79d014f34f0c0631b1617039f6e796","modified":1569756154500},{"_id":"source/_posts/关于vue-awesome-swiper以及vue-cli升级随笔.md","hash":"6025d8937450b0c13d582054e30baf1a19a838a0","modified":1569756890416},{"_id":"source/_posts/关于vue（全家桶）的一些使用心得.md","hash":"a215b5d4325aa1c72b7d51bbd46053acaff92d66","modified":1569756154500},{"_id":"source/_posts/关于webpack的那些事.md","hash":"9d8dc87b1a880b8bc040f166343c07990f4d98e4","modified":1569756154500},{"_id":"source/_posts/关于蜂窝状图片的实现.md","hash":"baa7ead53bd79258faa59fd524fc3b5f173ba1ff","modified":1569827670074},{"_id":"source/_posts/前端配合微信授权.md","hash":"d86f683aa407c25b7db7c5c2ba93054cc3e6c129","modified":1569756154501},{"_id":"source/_posts/微信浏览器播放音乐的坑.md","hash":"77374925aa1dabdd06a776d0f58c36407bbe1030","modified":1569756154501},{"_id":"source/_posts/管理团队代码.md","hash":"a2108216be1d97d20e7c0cda1f8e5301f5bcccf9","modified":1569756154501},{"_id":"source/_posts/详解vue-use的使用.md","hash":"bf48bdf9124e657370dc2c039e913f4b3de192bb","modified":1569756154502},{"_id":"source/_posts/自己动手开发vue组件库并发布到npm（持续更新）.md","hash":"3d6a7d2ba6e9001d9fc9df6154ffa1c8bb406a1a","modified":1569756154502},{"_id":"source/about/index.md","hash":"f4627b1e22300084e51c058c0639817111123111","modified":1569756154502},{"_id":"source/categories/index.md","hash":"906189b77a247335053d4ceda81020cdf29a2b62","modified":1569756154502},{"_id":"source/tags/index.md","hash":"6c4ea99a2124d125dbe11ace51d6f3488f762a8a","modified":1569756154512},{"_id":"source/img/.DS_Store","hash":"771867412105086b7acb8f6030bd51e1805efe4e","modified":1574992765022},{"_id":"source/img/2.jpg","hash":"1fe54b5d5d3fb5f788a9cdbbcecc030139d57b37","modified":1569756154505},{"_id":"source/img/3.jpg","hash":"955df2a6fe9fc308c54317281005350582d4b279","modified":1569756154505},{"_id":"source/img/6.png","hash":"f9ec58c2153ad332f3e332bb669ada6b6860c20f","modified":1569756154507},{"_id":"source/img/markdown-eg.jpeg","hash":"a279a201c1c8432b5a8bd64e836099211d1d5103","modified":1574992217557},{"_id":"source/img/me.jpg","hash":"2357ae34b48e5d1804db02f40f462601d4ebfcfb","modified":1569756154512},{"_id":"source/img/touxiang.jpg","hash":"f9c908dcdcba2356c1631a239cd7e3a881a2d6af","modified":1569756154512},{"_id":"themes/next/.github/CONTRIBUTING.md","hash":"3b5eafd32abb718e56ccf8d1cee0607ad8ce611d","modified":1569756154564},{"_id":"themes/next/.github/ISSUE_TEMPLATE.md","hash":"213d0f6c9c7ed9b035d84486b540a57e24869909","modified":1569756154564},{"_id":"themes/next/.github/PULL_REQUEST_TEMPLATE.md","hash":"902f627155a65099e0a37842ff396a58d0dc306f","modified":1569756154564},{"_id":"themes/next/.github/browserstack_logo.png","hash":"a6c43887f64a7f48a2814e3714eaa1215e542037","modified":1569756154564},{"_id":"themes/next/languages/default.yml","hash":"44ef3f26917f467459326c2c8be2f73e4d947f35","modified":1569756154567},{"_id":"themes/next/languages/de.yml","hash":"057e7df11ddeb1c8c15a5d7c5ff29430d725ec6b","modified":1569756154567},{"_id":"themes/next/languages/id.yml","hash":"b5de1ea66dd9ef54cac9a1440eaa4e3f5fc011f5","modified":1569756154568},{"_id":"themes/next/languages/en.yml","hash":"44ef3f26917f467459326c2c8be2f73e4d947f35","modified":1569756154568},{"_id":"themes/next/languages/fr-FR.yml","hash":"7e4eb7011b8feee641cfb11c6e73180b0ded1c0f","modified":1569756154568},{"_id":"themes/next/languages/it.yml","hash":"aa595f2bda029f73ef7bfa104b4c55c3f4e9fb4c","modified":1569756154568},{"_id":"themes/next/languages/ja.yml","hash":"3c76e16fd19b262864475faa6854b718bc08c4d8","modified":1569756154568},{"_id":"themes/next/languages/ko.yml","hash":"ea5b46056e73ebcee121d5551627af35cbffc900","modified":1569756154568},{"_id":"themes/next/languages/pt-BR.yml","hash":"b1694ae766ed90277bcc4daca4b1cfa19cdcb72b","modified":1569756154569},{"_id":"themes/next/languages/pt.yml","hash":"44b61f2d085b827b507909a0b8f8ce31c6ef5d04","modified":1569756154569},{"_id":"themes/next/languages/ru.yml","hash":"98ec6f0b7183282e11cffc7ff586ceb82400dd75","modified":1569756154569},{"_id":"themes/next/languages/zh-Hans.yml","hash":"80e78d79116d4027b3ce1771746d8a38a39a79d4","modified":1569756154569},{"_id":"themes/next/languages/zh-hk.yml","hash":"2ef272bcb1f325480f59f1e2ab95584de3c6b8da","modified":1569756154569},{"_id":"themes/next/languages/zh-tw.yml","hash":"c53941a2eaac8e3a2f8dacc73ed555d3c6c5bd59","modified":1569756154569},{"_id":"themes/next/layout/_layout.swig","hash":"ada7ffc71cf05e7236a19e0648bce6d6d6cbc7dc","modified":1569756154570},{"_id":"themes/next/layout/archive.swig","hash":"f0a8225feafd971419837cdb4bcfec98a4a59b2f","modified":1569756154579},{"_id":"themes/next/layout/category.swig","hash":"4472255f4a3e3dd6d79201523a9526dcabdfbf18","modified":1569756154579},{"_id":"themes/next/layout/index.swig","hash":"783611349c941848a0e26ee2f1dc44dd14879bd1","modified":1569756154579},{"_id":"themes/next/layout/page.swig","hash":"37c874cd720acf0eda8d26e063278f2b6ae8d3a6","modified":1569756154580},{"_id":"themes/next/layout/post.swig","hash":"f8221725bfe3fe52723405b524077973121f17ba","modified":1569756154580},{"_id":"themes/next/layout/schedule.swig","hash":"d86f8de4e118f8c4d778b285c140474084a271db","modified":1569756154580},{"_id":"themes/next/layout/tag.swig","hash":"7e0a7d7d832883eddb1297483ad22c184e4368de","modified":1569756154580},{"_id":"themes/next/scripts/merge-configs.js","hash":"cb617ddf692f56e6b6129564d52e302f50b28243","modified":1569756154580},{"_id":"themes/next/scripts/merge.js","hash":"9130dabe6a674c54b535f322b17d75fe6081472f","modified":1569756154581},{"_id":"themes/next/source/404.html","hash":"b5e6533bfe368e8ac136dde99b162c6b35ce9dc1","modified":1569756154582},{"_id":"themes/next/test/.jshintrc","hash":"19f93d13d1689fe033c82eb2d5f3ce30b6543cc0","modified":1569756154619},{"_id":"themes/next/test/helpers.js","hash":"a1f5de25154c3724ffc24a91ddc576cdbd60864f","modified":1569756154619},{"_id":"themes/next/test/intern.js","hash":"11fa8a4f5c3b4119a179ae0a2584c8187f907a73","modified":1569756154619},{"_id":"source/_posts/筋斗云文档.md","hash":"fbd32eee32a03ee67355a6a9e4d46c0d88009bf3","modified":1569756154501},{"_id":"source/img/1.png","hash":"6ef01df6b75c16e281ca3ba7b4157bd35cad3fba","modified":1569756154505},{"_id":"source/img/5.png","hash":"10d793d9580aa963b167395fa7a51f4ab202aca6","modified":1569756154507},{"_id":"themes/next/source/fonts/.gitkeep","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1569756154596},{"_id":"source/img/4.png","hash":"3fa31ba6f84e6ba33c980e1275ba55e844f0dbb6","modified":1569756154507},{"_id":"themes/next/layout/_custom/header.swig","hash":"adc83b19e793491b1c6ea0fd8b46cd9f32e592fc","modified":1569756154569},{"_id":"themes/next/layout/_custom/sidebar.swig","hash":"adc83b19e793491b1c6ea0fd8b46cd9f32e592fc","modified":1569756154569},{"_id":"themes/next/layout/_macro/post-collapse.swig","hash":"31322a7f57936cf2dc62e824af5490da5354cf02","modified":1569756154570},{"_id":"themes/next/layout/_macro/post-copyright.swig","hash":"53d4f83b2b7fb4387dfc9fe81519abd56fbce4ae","modified":1569756154570},{"_id":"themes/next/layout/_macro/post.swig","hash":"767e1d5503ecce85f577c8fb673a3503b65484ce","modified":1569756154570},{"_id":"themes/next/layout/_macro/reward.swig","hash":"56e8d8556cf474c56ae1bef9cb7bbd26554adb07","modified":1569756154570},{"_id":"themes/next/layout/_macro/sidebar.swig","hash":"a359421a73078eb4ef658e27afe7be59b92dae5d","modified":1574675046411},{"_id":"themes/next/layout/_macro/wechat-subscriber.swig","hash":"39852700e4084ecccffa6d4669168e5cc0514c9e","modified":1569756154570},{"_id":"themes/next/layout/_partials/comments.swig","hash":"010ef8c42d2e1a95abc60caf757293ca8eb4a68b","modified":1569756154570},{"_id":"themes/next/layout/_partials/footer.swig","hash":"8a397e62f04f60af6686a5219fcdb57fce7fba80","modified":1569756154571},{"_id":"themes/next/layout/_partials/head.swig","hash":"2cbeae795c9929ec1966b8a1fb9c058a0b547fa9","modified":1569756154571},{"_id":"themes/next/layout/_partials/header.swig","hash":"ed042be6252848058c90109236ec988e392d91d4","modified":1569756154571},{"_id":"themes/next/layout/_partials/page-header.swig","hash":"1efd925d34a5d4ba2dc0838d9c86ba911e705fc9","modified":1569756154571},{"_id":"themes/next/layout/_partials/pagination.swig","hash":"9e8e21d194ef44d271b1cca0bc1448c14d7edf4f","modified":1569756154571},{"_id":"themes/next/layout/_partials/search.swig","hash":"9dbd378e94abfcb3f864a5b8dbbf18d212ca2ee0","modified":1569756154571},{"_id":"themes/next/layout/_scripts/boostrap.swig","hash":"03aaebe9d50f6acb007ec38cc04acd1cfceb404d","modified":1569756154573},{"_id":"themes/next/layout/_scripts/commons.swig","hash":"766b2bdda29523ed6cd8d7aa197f996022f8fd94","modified":1569756154573},{"_id":"themes/next/layout/_scripts/vendors.swig","hash":"9baf90f7c40b3b10f288e9268c3191e895890cea","modified":1569756154574},{"_id":"themes/next/layout/_third-party/duoshuo-hot-articles.swig","hash":"5d4638c46aef65bf32a01681495b62416ccc98db","modified":1569756154577},{"_id":"themes/next/layout/_third-party/exturl.swig","hash":"7c04a42319d728be356746363aff8ea247791d24","modified":1569756154577},{"_id":"themes/next/layout/_third-party/mathjax.swig","hash":"6d25596d6a7c57700d37b607f8d9a62d89708683","modified":1569756154577},{"_id":"themes/next/layout/_third-party/rating.swig","hash":"fc93b1a7e6aed0dddb1f3910142b48d8ab61174e","modified":1569756154577},{"_id":"themes/next/layout/_third-party/schedule.swig","hash":"22369026c87fc23893c35a7f250b42f3bb1b60f1","modified":1569756154577},{"_id":"themes/next/layout/_third-party/scroll-cookie.swig","hash":"1ddb2336a1a19b47af3017047012c01ec5f54529","modified":1569756154577},{"_id":"themes/next/scripts/tags/button.js","hash":"62e6dbeb53d07627a048132c79630b45d9a8f2cc","modified":1569756154581},{"_id":"themes/next/scripts/tags/center-quote.js","hash":"535fc542781021c4326dec24d8495cbb1387634a","modified":1569756154581},{"_id":"themes/next/scripts/tags/exturl.js","hash":"8d7e60f60779bde050d20fd76f6fdc36fc85e06d","modified":1569756154581},{"_id":"themes/next/scripts/tags/full-image.js","hash":"8eeb3fb89540299bdbb799edfdfdac3743b50596","modified":1569756154581},{"_id":"themes/next/scripts/tags/group-pictures.js","hash":"49252824cd53184dc9b97b2f2d87ff28e1b3ef27","modified":1569756154581},{"_id":"themes/next/scripts/tags/label.js","hash":"2f8f41a7316372f0d1ed6b51190dc4acd3e16fff","modified":1569756154581},{"_id":"themes/next/scripts/tags/lazy-image.js","hash":"eeeabede68cf263de9e6593ecf682f620da16f0a","modified":1569756154581},{"_id":"themes/next/scripts/tags/note.js","hash":"64de4e9d01cf3b491ffc7d53afdf148ee5ad9779","modified":1569756154582},{"_id":"themes/next/scripts/tags/tabs.js","hash":"5786545d51c38e8ca38d1bfc7dd9e946fc70a316","modified":1569756154582},{"_id":"themes/next/source/css/main.styl","hash":"20702c48d6053c92c5bcdbc68e8d0ef1369848a0","modified":1569756154595},{"_id":"themes/next/source/images/algolia_logo.svg","hash":"ec119560b382b2624e00144ae01c137186e91621","modified":1569756154596},{"_id":"themes/next/source/images/avatar.gif","hash":"264082bb3a1af70d5499c7d22b0902cb454b6d12","modified":1569756154596},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","hash":"c6524ece3f8039a5f612feaf865d21ec8a794564","modified":1569756154596},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","hash":"3031be41e8753c70508aa88e84ed8f4f653f157e","modified":1569756154596},{"_id":"themes/next/source/images/cc-by-nc.svg","hash":"8d39b39d88f8501c0d27f8df9aae47136ebc59b7","modified":1569756154596},{"_id":"themes/next/source/images/cc-by-nd.svg","hash":"c563508ce9ced1e66948024ba1153400ac0e0621","modified":1569756154597},{"_id":"themes/next/source/images/cc-by-sa.svg","hash":"aa4742d733c8af8d38d4c183b8adbdcab045872e","modified":1569756154597},{"_id":"themes/next/source/images/cc-by.svg","hash":"28a0a4fe355a974a5e42f68031652b76798d4f7e","modified":1569756154597},{"_id":"themes/next/source/images/cc-zero.svg","hash":"87669bf8ac268a91d027a0a4802c92a1473e9030","modified":1569756154597},{"_id":"themes/next/source/images/ewm.jpg","hash":"8e68e8f0e7e2b6a0d2733716baf23c8f250ad813","modified":1569756154597},{"_id":"themes/next/source/images/loading.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1569756154598},{"_id":"themes/next/source/images/favicon.png","hash":"8c38acb491455afbe41badd8d30c0533c2fc6df2","modified":1569756154597},{"_id":"themes/next/source/images/placeholder.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1569756154598},{"_id":"themes/next/source/images/quote-l.svg","hash":"94e870b4c8c48da61d09522196d4dd40e277a98f","modified":1569756154598},{"_id":"themes/next/source/images/quote-r.svg","hash":"e60ae504f9d99b712c793c3740c6b100d057d4ec","modified":1569756154598},{"_id":"themes/next/source/images/searchicon.png","hash":"67727a6a969be0b2659b908518fa6706eed307b8","modified":1569756154598},{"_id":"themes/next/source/images/touxiang.jpg","hash":"f9c908dcdcba2356c1631a239cd7e3a881a2d6af","modified":1569756154598},{"_id":"themes/next/layout/_scripts/schemes/mist.swig","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1569756154574},{"_id":"themes/next/layout/_scripts/schemes/muse.swig","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1569756154574},{"_id":"themes/next/source/css/_mixins/Mist.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1569756154591},{"_id":"themes/next/source/css/_mixins/Muse.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1569756154591},{"_id":"themes/next/source/css/_mixins/custom.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1569756154592},{"_id":"themes/next/source/css/_variables/custom.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1569756154595},{"_id":"themes/next/source/css/_variables/Muse.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1569756154595},{"_id":"themes/next/layout/_partials/head/custom-head.swig","hash":"9e1b9666efa77f4cf8d8261bcfa445a9ac608e53","modified":1569756154571},{"_id":"themes/next/layout/_partials/head/external-fonts.swig","hash":"7ce76358411184482bb0934e70037949dd0da8ca","modified":1569756154571},{"_id":"themes/next/layout/_partials/search/localsearch.swig","hash":"957701729b85fb0c5bfcf2fb99c19d54582f91ed","modified":1569756154572},{"_id":"themes/next/layout/_partials/search/swiftype.swig","hash":"959b7e04a96a5596056e4009b73b6489c117597e","modified":1569756154572},{"_id":"themes/next/layout/_partials/search/tinysou.swig","hash":"eefe2388ff3d424694045eda21346989b123977c","modified":1569756154572},{"_id":"themes/next/layout/_partials/share/add-this.swig","hash":"23e23dc0f76ef3c631f24c65277adf7ea517b383","modified":1569756154572},{"_id":"themes/next/layout/_partials/share/baidushare.swig","hash":"1f1107468aaf03f7d0dcd7eb2b653e2813a675b4","modified":1569756154573},{"_id":"themes/next/layout/_partials/share/duoshuo_share.swig","hash":"89c5a5240ecb223acfe1d12377df5562a943fd5d","modified":1569756154573},{"_id":"themes/next/layout/_partials/share/jiathis.swig","hash":"048fd5e98149469f8c28c21ba3561a7a67952c9b","modified":1569756154573},{"_id":"themes/next/layout/_scripts/schemes/gemini.swig","hash":"a44acf9b0d0f44ef3dfc767376a95c984cc127de","modified":1569756154574},{"_id":"themes/next/layout/_scripts/pages/post-details.swig","hash":"069d1357c717572256e5cdee09574ebce529cbae","modified":1569756154574},{"_id":"themes/next/layout/_scripts/schemes/pisces.swig","hash":"a44acf9b0d0f44ef3dfc767376a95c984cc127de","modified":1569756154574},{"_id":"themes/next/layout/_third-party/analytics/analytics-with-widget.swig","hash":"98df9d72e37dd071e882f2d5623c9d817815b139","modified":1569756154574},{"_id":"themes/next/layout/_third-party/analytics/application-insights.swig","hash":"60426bf73f8a89ba61fb1be2df3ad5398e32c4ef","modified":1569756154575},{"_id":"themes/next/layout/_third-party/analytics/baidu-analytics.swig","hash":"deda6a814ed48debc694c4e0c466f06c127163d0","modified":1569756154575},{"_id":"themes/next/layout/_third-party/analytics/cnzz-analytics.swig","hash":"8160b27bee0aa372c7dc7c8476c05bae57f58d0f","modified":1569756154575},{"_id":"themes/next/layout/_third-party/analytics/facebook-sdk.swig","hash":"a234c5cd1f75ca5731e814d0dbb92fdcf9240d1b","modified":1569756154575},{"_id":"themes/next/layout/_third-party/analytics/busuanzi-counter.swig","hash":"18e7bef8923d83ea42df6c97405e515a876cede4","modified":1569756154575},{"_id":"themes/next/layout/_third-party/analytics/google-analytics.swig","hash":"5d9943d74cc2e0a91badcf4f755c6de77eab193a","modified":1569756154575},{"_id":"themes/next/layout/_third-party/analytics/index.swig","hash":"5e9bb24c750b49513d9a65799e832f07410002ac","modified":1569756154575},{"_id":"themes/next/layout/_third-party/analytics/lean-analytics.swig","hash":"fc65b9c98a0a8ab43a5e7aabff6c5f03838e09c8","modified":1569756154575},{"_id":"themes/next/layout/_third-party/analytics/tencent-analytics.swig","hash":"3658414379e0e8a34c45c40feadc3edc8dc55f88","modified":1569756154575},{"_id":"themes/next/layout/_third-party/analytics/tencent-mta.swig","hash":"0ddc94ed4ba0c19627765fdf1abc4d8efbe53d5a","modified":1569756154576},{"_id":"themes/next/layout/_third-party/analytics/vkontakte-api.swig","hash":"c3971fd154d781088e1cc665035f8561a4098f4c","modified":1569756154576},{"_id":"themes/next/layout/_third-party/comments/changyan.swig","hash":"0e3378f7c39b2b0f69638290873ede6b6b6825c0","modified":1569756154576},{"_id":"themes/next/layout/_third-party/comments/disqus.swig","hash":"c316758546dc9ba6c60cb4d852c17ca6bb6d6724","modified":1569756154576},{"_id":"themes/next/layout/_third-party/comments/hypercomments.swig","hash":"3e8dc5c6c912628a37e3b5f886bec7b2e5ed14ea","modified":1569756154576},{"_id":"themes/next/layout/_third-party/comments/index.swig","hash":"576e716893153a855eaf6d136fad7cb6d4065e09","modified":1569756154576},{"_id":"themes/next/layout/_third-party/comments/duoshuo.swig","hash":"a356b2185d40914447fde817eb3d358ab6b3e4c3","modified":1569756154576},{"_id":"themes/next/layout/_third-party/comments/livere.swig","hash":"8a2e393d2e49f7bf560766d8a07cd461bf3fce4f","modified":1569756154576},{"_id":"themes/next/layout/_third-party/comments/valine.swig","hash":"9f4ed36c73e890909b8ebbe601fb60e13d048288","modified":1569756154576},{"_id":"themes/next/layout/_third-party/comments/youyan.swig","hash":"8b6650f77fe0a824c8075b2659e0403e0c78a705","modified":1569756154577},{"_id":"themes/next/layout/_third-party/search/index.swig","hash":"c747fb5c6b1f500e8f0c583e44195878b66e4e29","modified":1569756154578},{"_id":"themes/next/layout/_third-party/search/tinysou.swig","hash":"cb3a5d36dbe1630bab84e03a52733a46df7c219b","modified":1569756154578},{"_id":"themes/next/layout/_third-party/search/localsearch.swig","hash":"385c066af96bee30be2459dbec8aae1f15d382f5","modified":1569756154578},{"_id":"themes/next/layout/_third-party/seo/baidu-push.swig","hash":"c057b17f79e8261680fbae8dc4e81317a127c799","modified":1569756154578},{"_id":"themes/next/source/css/_custom/custom.styl","hash":"328d9a9696cc2ccf59c67d3c26000d569f46344c","modified":1569756154591},{"_id":"themes/next/source/css/_mixins/Gemini.styl","hash":"2aa5b7166a85a8aa34b17792ae4f58a5a96df6cc","modified":1569756154591},{"_id":"themes/next/source/css/_mixins/Pisces.styl","hash":"9ab65361ba0a12a986edd103e56492644c2db0b8","modified":1569756154591},{"_id":"themes/next/source/css/_mixins/base.styl","hash":"82f9055955920ed88a2ab6a20ab02169abb2c634","modified":1569756154592},{"_id":"themes/next/source/css/_variables/Mist.styl","hash":"c8d35a6b9e3bff6d8fdb66de853065af9d37562d","modified":1569756154595},{"_id":"themes/next/source/css/_variables/Gemini.styl","hash":"6359c84aaa02c90be60b22abe638b737ddd69c9c","modified":1569756154595},{"_id":"themes/next/source/css/_variables/base.styl","hash":"666a32952adff1396b0d241569c6df71d83ead24","modified":1569756154595},{"_id":"themes/next/source/css/_variables/Pisces.styl","hash":"cfee25d790e4f9b7d57f0dc7e2ea9c1649f08f11","modified":1569756154595},{"_id":"themes/next/source/js/src/affix.js","hash":"978e0422b5bf1b560236d8d10ebc1adcf66392e3","modified":1569756154598},{"_id":"themes/next/source/js/src/algolia-search.js","hash":"b172f697ed339a24b1e80261075232978d164c35","modified":1569756154599},{"_id":"themes/next/source/js/src/bootstrap.js","hash":"034bc8113e0966fe2096ba5b56061bbf10ef0512","modified":1569756154599},{"_id":"themes/next/source/js/src/exturl.js","hash":"e42e2aaab7bf4c19a0c8e779140e079c6aa5c0b1","modified":1569756154599},{"_id":"themes/next/source/js/src/hook-duoshuo.js","hash":"a6119070c0119f33e08b29da7d2cce2635eb40a0","modified":1569756154599},{"_id":"themes/next/source/js/src/js.cookie.js","hash":"9b37973a90fd50e71ea91682265715e45ae82c75","modified":1569756154599},{"_id":"themes/next/source/js/src/motion.js","hash":"da146caf488078a634d961debf2a71ce4106018c","modified":1569756154599},{"_id":"themes/next/source/js/src/post-details.js","hash":"0693695a9512641daff63d99da772625a058ab18","modified":1569756154599},{"_id":"themes/next/source/js/src/scroll-cookie.js","hash":"09dc828cbf5f31158ff6250d2bf7c3cde6365c67","modified":1569756154600},{"_id":"themes/next/source/js/src/scrollspy.js","hash":"fe4da1b9fe73518226446f5f27d2831e4426fc35","modified":1569756154600},{"_id":"themes/next/source/js/src/utils.js","hash":"2917c39c75b14b6dab7e1c46ab4d87b4df9fcd5d","modified":1569756154600},{"_id":"themes/next/source/lib/canvas-ribbon/canvas-ribbon.js","hash":"7fd2f3e2773555392ef40df40cae3bedb884f17a","modified":1569756154605},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.css","hash":"90ef19edc982645b118b095615838d9c5eaba0de","modified":1569756154602},{"_id":"themes/next/source/lib/canvas-nest/canvas-nest.min.js","hash":"0387e75e23b1db108a755073fe52a0d03eb391a7","modified":1569756154605},{"_id":"themes/next/source/lib/fastclick/.bower.json","hash":"93ebd5b35e632f714dcf1753e1f6db77ec74449b","modified":1569756154606},{"_id":"themes/next/source/lib/fastclick/LICENSE","hash":"dcd5b6b43095d9e90353a28b09cb269de8d4838e","modified":1569756154606},{"_id":"themes/next/source/lib/fastclick/README.md","hash":"1decd8e1adad2cd6db0ab50cf56de6035156f4ea","modified":1569756154606},{"_id":"themes/next/source/lib/fastclick/bower.json","hash":"13379463c7463b4b96d13556b46faa4cc38d81e6","modified":1569756154606},{"_id":"themes/next/source/lib/font-awesome/.gitignore","hash":"69d152fa46b517141ec3b1114dd6134724494d83","modified":1569756154607},{"_id":"themes/next/source/lib/font-awesome/.npmignore","hash":"dcf470ab3a358103bb896a539cc03caeda10fa8b","modified":1569756154607},{"_id":"themes/next/source/lib/font-awesome/.bower.json","hash":"a2aaaf12378db56bd10596ba3daae30950eac051","modified":1569756154607},{"_id":"themes/next/source/lib/font-awesome/bower.json","hash":"279a8a718ab6c930a67c41237f0aac166c1b9440","modified":1569756154607},{"_id":"themes/next/source/lib/font-awesome/HELP-US-OUT.txt","hash":"4f7bf961f1bed448f6ba99aeb9219fabf930ba96","modified":1569756154607},{"_id":"themes/next/source/lib/jquery/.bower.json","hash":"91745c2cc6c946c7275f952b2b0760b880cea69e","modified":1569756154610},{"_id":"themes/next/source/lib/jquery_lazyload/.bower.json","hash":"b7638afc93e9cd350d0783565ee9a7da6805ad8e","modified":1569756154611},{"_id":"themes/next/source/lib/jquery_lazyload/CONTRIBUTING.md","hash":"4891864c24c28efecd81a6a8d3f261145190f901","modified":1569756154611},{"_id":"themes/next/source/lib/jquery_lazyload/README.md","hash":"895d50fa29759af7835256522e9dd7dac597765c","modified":1569756154611},{"_id":"themes/next/source/lib/jquery_lazyload/bower.json","hash":"65bc85d12197e71c40a55c0cd7f6823995a05222","modified":1569756154611},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.scrollstop.js","hash":"0e9a81785a011c98be5ea821a8ed7d411818cfd1","modified":1569756154612},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.lazyload.js","hash":"481fd478650e12b67c201a0ea41e92743f8b45a3","modified":1569756154612},{"_id":"themes/next/source/lib/pace/pace-theme-barber-shop.min.css","hash":"ee0d51446cb4ffe1bb96bd7bc8c8e046dddfcf46","modified":1569756154612},{"_id":"themes/next/source/lib/pace/pace-theme-big-counter.min.css","hash":"5b561dc328af4c4d512e20a76fe964d113a32ba8","modified":1569756154612},{"_id":"themes/next/source/lib/pace/pace-theme-center-atom.min.css","hash":"dcf79c24fe5350fb73d8038573a104e73639e9d3","modified":1569756154612},{"_id":"themes/next/source/lib/pace/pace-theme-bounce.min.css","hash":"f6bdb9a785b7979dd8ec5c60e278af955ef1e585","modified":1569756154612},{"_id":"themes/next/source/lib/pace/pace-theme-center-circle.min.css","hash":"a4066769c78affbfbc5e30a600e2c7862cd532e0","modified":1569756154612},{"_id":"themes/next/source/lib/pace/pace-theme-center-radar.min.css","hash":"ab7cba998bf4c03b13df342bf43647fa4f419783","modified":1569756154612},{"_id":"themes/next/source/lib/pace/pace-theme-center-simple.min.css","hash":"67f44c947548bd4d77e7590d3f59e236cbf9e98a","modified":1569756154612},{"_id":"themes/next/source/lib/pace/pace-theme-corner-indicator.min.css","hash":"b3c64c973f31884e3d8145989476707333406b9a","modified":1569756154612},{"_id":"themes/next/source/lib/pace/pace-theme-fill-left.min.css","hash":"0bec1e235a4a2cccda3f993b205424e1441a44ae","modified":1569756154613},{"_id":"themes/next/source/lib/pace/pace-theme-flash.min.css","hash":"13ace22c40312d7bbd8d9c1e50eff897a7a497d8","modified":1569756154613},{"_id":"themes/next/source/lib/pace/pace-theme-loading-bar.min.css","hash":"7ee28875dfc1230d76c537f6605766e8d4011e9f","modified":1569756154613},{"_id":"themes/next/source/lib/pace/pace-theme-mac-osx.min.css","hash":"9f2e7b51b084da407863826b25265b31150b3821","modified":1569756154613},{"_id":"themes/next/source/lib/pace/pace.min.js","hash":"9944dfb7814b911090e96446cea4d36e2b487234","modified":1569756154613},{"_id":"themes/next/source/lib/pace/pace-theme-minimal.min.css","hash":"9cd783cceb8a191f3c8b5d81f7a430ecc3e489d3","modified":1569756154613},{"_id":"themes/next/source/lib/three/canvas_lines.min.js","hash":"dce4a3b65f8bf958f973690caa7ec4952f353b0c","modified":1569756154613},{"_id":"themes/next/source/lib/three/canvas_sphere.min.js","hash":"d8ea241a53c135a650f7335d2b6982b899fd58a9","modified":1569756154614},{"_id":"themes/next/source/lib/three/three-waves.min.js","hash":"d968cba6b3a50b3626a02d67b544f349d83b147c","modified":1569756154614},{"_id":"themes/next/source/lib/velocity/.bower.json","hash":"05f960846f1c7a93dab1d3f9a1121e86812e8c88","modified":1569756154616},{"_id":"themes/next/source/lib/velocity/bower.json","hash":"2ec99573e84c7117368beccb9e94b6bf35d2db03","modified":1569756154616},{"_id":"themes/next/source/lib/velocity/velocity.min.js","hash":"2f1afadc12e4cf59ef3b405308d21baa97e739c6","modified":1569756154617},{"_id":"themes/next/source/lib/velocity/velocity.ui.js","hash":"6a1d101eab3de87527bb54fcc8c7b36b79d8f0df","modified":1569756154618},{"_id":"themes/next/source/lib/velocity/velocity.ui.min.js","hash":"ed5e534cd680a25d8d14429af824f38a2c7d9908","modified":1569756154618},{"_id":"themes/next/source/lib/jquery/index.js","hash":"41b4bfbaa96be6d1440db6e78004ade1c134e276","modified":1569756154611},{"_id":"themes/next/layout/_third-party/search/algolia-search/assets.swig","hash":"28ff4ed6714c59124569ffcbd10f1173d53ca923","modified":1569756154577},{"_id":"themes/next/layout/_third-party/search/algolia-search/dom.swig","hash":"ba698f49dd3a868c95b240d802f5b1b24ff287e4","modified":1569756154578},{"_id":"themes/next/source/css/_common/components/back-to-top-sidebar.styl","hash":"d026c8489f66ab6c12ad04bd37f1d5b6f2f3f0d1","modified":1569756154582},{"_id":"themes/next/source/css/_common/components/buttons.styl","hash":"0dfb4b3ba3180d7285e66f270e1d3fa0f132c3d2","modified":1569756154583},{"_id":"themes/next/source/css/_common/components/back-to-top.styl","hash":"31050fc7a25784805b4843550151c93bfa55c9c8","modified":1569756154582},{"_id":"themes/next/source/css/_common/components/comments.styl","hash":"471f1627891aca5c0e1973e09fbcb01e1510d193","modified":1569756154583},{"_id":"themes/next/source/css/_common/components/components.styl","hash":"a6bb5256be6195e76addbda12f4ed7c662d65e7a","modified":1569756154583},{"_id":"themes/next/source/css/_common/components/pagination.styl","hash":"c5d48863f332ff8ce7c88dec2c893f709d7331d3","modified":1569756154585},{"_id":"themes/next/source/css/_common/components/tag-cloud.styl","hash":"dd8a3b22fc2f222ac6e6c05bd8a773fb039169c0","modified":1569756154588},{"_id":"themes/next/source/css/_common/outline/outline.styl","hash":"2186be20e317505cd31886f1291429cc21f76703","modified":1569756154590},{"_id":"themes/next/source/css/_common/scaffolding/base.styl","hash":"f7c44b0ee46cf2cf82a4c9455ba8d8b55299976f","modified":1569756154590},{"_id":"themes/next/source/css/_common/scaffolding/helpers.styl","hash":"9c25c75311e1bd4d68df031d3f2ae6d141a90766","modified":1569756154590},{"_id":"themes/next/source/css/_common/scaffolding/mobile.styl","hash":"86b6fd7f1b1be3ae98f8af6b23a6b1299c670ce9","modified":1569756154591},{"_id":"themes/next/source/css/_common/scaffolding/normalize.styl","hash":"ece571f38180febaf02ace8187ead8318a300ea7","modified":1569756154591},{"_id":"themes/next/source/css/_common/scaffolding/scaffolding.styl","hash":"a280a583b7615e939aaddbf778f5c108ef8a2a6c","modified":1569756154591},{"_id":"themes/next/source/css/_common/scaffolding/tables.styl","hash":"64f5d56c08d74a338813df1265580ca0cbf0190b","modified":1569756154591},{"_id":"themes/next/source/css/_schemes/Gemini/index.styl","hash":"bc8c388553bbcf95897459a466ba35bffd5ec5f0","modified":1569756154592},{"_id":"themes/next/source/css/_schemes/Muse/_logo.styl","hash":"8829bc556ca38bfec4add4f15a2f028092ac6d46","modified":1569756154593},{"_id":"themes/next/source/css/_schemes/Muse/_layout.styl","hash":"0efa036a15c18f5abb058b7c0fad1dd9ac5eed4c","modified":1569756154593},{"_id":"themes/next/source/css/_schemes/Muse/_menu.styl","hash":"82bbaa6322764779a1ac2e2c8390ce901c7972e2","modified":1569756154593},{"_id":"themes/next/source/css/_schemes/Muse/index.styl","hash":"a0e2030a606c934fb2c5c7373aaae04a1caac4c5","modified":1569756154594},{"_id":"themes/next/source/css/_schemes/Muse/_search.styl","hash":"1452cbe674cc1d008e1e9640eb4283841058fc64","modified":1569756154594},{"_id":"themes/next/source/css/_schemes/Pisces/_brand.styl","hash":"c4ed249798296f60bda02351fe6404fb3ef2126f","modified":1569756154594},{"_id":"themes/next/source/css/_schemes/Pisces/_layout.styl","hash":"5b93958239d3d2bf9aeaede44eced2434d784462","modified":1569756154594},{"_id":"themes/next/source/css/_schemes/Pisces/_menu.styl","hash":"215de948be49bcf14f06d500cef9f7035e406a43","modified":1569756154594},{"_id":"themes/next/source/css/_schemes/Pisces/_posts.styl","hash":"2f878213cb24c5ddc18877f6d15ec5c5f57745ac","modified":1569756154594},{"_id":"themes/next/source/css/_schemes/Pisces/_sidebar.styl","hash":"264a52c0a7877381f9a6a87d495757a0ba7e29d6","modified":1569756154595},{"_id":"themes/next/source/css/_schemes/Pisces/index.styl","hash":"69ecd6c97e7cdfd822ac8102b45ad0ede85050db","modified":1569756154595},{"_id":"themes/next/source/css/_schemes/Mist/_base.styl","hash":"c2d079788d6fc2e9a191ccdae94e50d55bf849dc","modified":1569756154592},{"_id":"themes/next/source/css/_schemes/Mist/_header.styl","hash":"5ae7906dc7c1d9468c7f4b4a6feddddc555797a1","modified":1569756154592},{"_id":"themes/next/source/css/_schemes/Mist/_logo.styl","hash":"38e5df90c8689a71c978fd83ba74af3d4e4e5386","modified":1569756154592},{"_id":"themes/next/source/css/_schemes/Mist/_menu.styl","hash":"b0dcca862cd0cc6e732e33d975b476d744911742","modified":1569756154592},{"_id":"themes/next/source/css/_schemes/Mist/_posts-expanded.styl","hash":"5e6c9f8a730b78c7ce5572d327c2a7311c3609b9","modified":1569756154592},{"_id":"themes/next/source/css/_schemes/Mist/_search.styl","hash":"1452cbe674cc1d008e1e9640eb4283841058fc64","modified":1569756154592},{"_id":"themes/next/source/css/_schemes/Mist/index.styl","hash":"9a5581a770af8964064fef7afd3e16963e45547f","modified":1569756154593},{"_id":"themes/next/source/js/src/schemes/pisces.js","hash":"79da92119bc246fe05d1626ac98426a83ec90a94","modified":1569756154599},{"_id":"themes/next/source/lib/Han/dist/han.min.css","hash":"a0c9e32549a8b8cf327ab9227b037f323cdb60ee","modified":1569756154602},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.css","hash":"5f163444617b6cf267342f06ac166a237bb62df9","modified":1569756154605},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.pack.js","hash":"53360764b429c212f424399384417ccc233bb3be","modified":1569756154606},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.js","hash":"1cf3d47b5ccb7cb6e9019c64f2a88d03a64853e4","modified":1569756154605},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.js","hash":"06cef196733a710e77ad7e386ced6963f092dc55","modified":1569756154606},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.min.js","hash":"2cae0f5a6c5d6f3cb993015e6863f9483fc4de18","modified":1569756154607},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css.map","hash":"0189d278706509412bac4745f96c83984e1d59f4","modified":1569756154607},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.min.css","hash":"512c7d79033e3028a9be61b540cf1a6870c896f8","modified":1569756154607},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.min.js","hash":"38628e75e4412cc6f11074e03e1c6d257aae495b","modified":1569756154616},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.pack.js","hash":"214dad442a92d36af77ed0ca1d9092b16687f02f","modified":1569756154616},{"_id":"source/img/1.jpg","hash":"1bcba3c6348e2190a42bff762800bf846cf9239c","modified":1569756154504},{"_id":"themes/next/source/lib/Han/dist/han.css","hash":"bd40da3fba8735df5850956814e312bd7b3193d7","modified":1569756154601},{"_id":"themes/next/source/lib/Han/dist/han.js","hash":"e345397e0585c9fed1449e614ec13e0224acf2ab","modified":1569756154602},{"_id":"themes/next/source/lib/Han/dist/han.min.js","hash":"f559c68a25065a14f47da954a7617d87263e409d","modified":1569756154602},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff","hash":"28b782240b3e76db824e12c02754a9731a167527","modified":1569756154610},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff2","hash":"d6f48cba7d076fb6f2fd6ba993a75b9dc1ecbf0c","modified":1569756154610},{"_id":"themes/next/source/css/_common/components/footer/footer.styl","hash":"7905a7f625702b45645d8be1268cb8af3f698c70","modified":1569756154583},{"_id":"themes/next/source/css/_common/components/header/headerband.styl","hash":"d27448f199fc2f9980b601bc22b87f08b5d64dd1","modified":1569756154583},{"_id":"themes/next/source/css/_common/components/header/header.styl","hash":"ae1ca14e51de67b07dba8f61ec79ee0e2e344574","modified":1569756154583},{"_id":"themes/next/source/css/_common/components/header/menu.styl","hash":"8a2421cb9005352905fae9d41a847ae56957247e","modified":1569756154584},{"_id":"themes/next/source/css/_common/components/header/site-nav.styl","hash":"49c2b2c14a1e7fcc810c6be4b632975d0204c281","modified":1569756154584},{"_id":"themes/next/source/css/_common/components/header/site-meta.styl","hash":"6c00f6e0978f4d8f9a846a15579963728aaa6a17","modified":1569756154584},{"_id":"themes/next/source/css/_common/components/highlight/diff.styl","hash":"96f32ea6c3265a3889e6abe57587f6e2a2a40dfb","modified":1569756154584},{"_id":"themes/next/source/css/_common/components/highlight/highlight.styl","hash":"740d37f428b8f4574a76fc95cc25e50e0565f45e","modified":1569756154584},{"_id":"themes/next/source/css/_common/components/highlight/theme.styl","hash":"b76387934fb6bb75212b23c1a194486892cc495e","modified":1569756154584},{"_id":"themes/next/source/css/_common/components/pages/archive.styl","hash":"f5aa2ba3bfffc15475e7e72a55b5c9d18609fdf5","modified":1569756154585},{"_id":"themes/next/source/css/_common/components/pages/categories.styl","hash":"4eff5b252d7b614e500fc7d52c97ce325e57d3ab","modified":1569756154585},{"_id":"themes/next/source/css/_common/components/pages/pages.styl","hash":"2039590632bba3943c39319d80ef630af7928185","modified":1569756154585},{"_id":"themes/next/source/css/_common/components/pages/post-detail.styl","hash":"9bf4362a4d0ae151ada84b219d39fbe5bb8c790e","modified":1569756154585},{"_id":"themes/next/source/css/_common/components/pages/schedule.styl","hash":"a82afbb72d83ee394aedc7b37ac0008a9823b4f4","modified":1569756154585},{"_id":"themes/next/source/css/_common/components/post/post-button.styl","hash":"beccb53dcd658136fb91a0c5678dea8f37d6e0b6","modified":1569756154585},{"_id":"themes/next/source/css/_common/components/post/post-collapse.styl","hash":"0f7f522cc6bfb3401d5afd62b0fcdf48bb2d604b","modified":1569756154585},{"_id":"themes/next/source/css/_common/components/post/post-copyright.styl","hash":"f54367c0feda6986c030cc4d15a0ca6ceea14bcb","modified":1569756154586},{"_id":"themes/next/source/css/_common/components/post/post-eof.styl","hash":"2cdc094ecf907a02fce25ad4a607cd5c40da0f2b","modified":1569756154586},{"_id":"themes/next/source/css/_common/components/post/post-expand.styl","hash":"8bb08dcb8e5c5dcc5044ef1d8981d8dc16ec6036","modified":1569756154586},{"_id":"themes/next/source/css/_common/components/post/post-gallery.styl","hash":"387ce23bba52b22a586b2dfb4ec618fe1ffd3926","modified":1569756154586},{"_id":"themes/next/source/css/_common/components/post/post-meta.styl","hash":"aea21141015ca8c409d8b33e3e34ec505f464e93","modified":1569756154586},{"_id":"themes/next/source/css/_common/components/post/post-nav.styl","hash":"a5d8617a24d7cb6c5ad91ea621183ca2c0917331","modified":1569756154586},{"_id":"themes/next/source/css/_common/components/post/post-reward.styl","hash":"36332c8a91f089f545f3c3e8ea90d08aa4d6e60c","modified":1569756154586},{"_id":"themes/next/source/css/_common/components/post/post-rtl.styl","hash":"017074ef58166e2d69c53bb7590a0e7a8947a1ed","modified":1569756154586},{"_id":"themes/next/source/css/_common/components/post/post-tags.styl","hash":"a352ae5b1f8857393bf770d2e638bf15f0c9585d","modified":1569756154586},{"_id":"themes/next/source/css/_common/components/post/post-title.styl","hash":"d5a4e4fc17f1f7e7c3a61b52d8e2e9677e139de7","modified":1569756154586},{"_id":"themes/next/source/css/_common/components/post/post-type.styl","hash":"10251257aceecb117233c9554dcf8ecfef8e2104","modified":1569756154587},{"_id":"themes/next/source/css/_common/components/post/post-widgets.styl","hash":"08a500b2984f109b751f3697ca33172d1340591a","modified":1569756154587},{"_id":"themes/next/source/css/_common/components/post/post.styl","hash":"8c15f9a179c47c3f61e56577ece63fa8c9393ac6","modified":1569756154587},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-author-links.styl","hash":"0a6c0efffdf18bddbc1d1238feaed282b09cd0fe","modified":1569756154587},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-author.styl","hash":"920343e41c124221a17f050bbb989494d44f7a24","modified":1569756154587},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-blogroll.styl","hash":"89dd4f8b1f1cce3ad46cf2256038472712387d02","modified":1569756154587},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-dimmer.styl","hash":"efa5e5022e205b52786ce495d4879f5e7b8f84b2","modified":1569756154587},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-feed-link.styl","hash":"9486ddd2cb255227db102d09a7df4cae0fabad72","modified":1569756154587},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-nav.styl","hash":"45fa7193435a8eae9960267438750b4c9fa9587f","modified":1569756154588},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-toggle.styl","hash":"f7784aba0c1cd20d824c918c120012d57a5eaa2a","modified":1569756154588},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-toc.styl","hash":"77c92a449ce84d558d26d052681f2e0dd77c70c9","modified":1569756154588},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar.styl","hash":"57d2c8a060f5e4e1a0aef9aae11a0016cf7ac5ba","modified":1569756154588},{"_id":"themes/next/source/css/_common/components/sidebar/site-state.styl","hash":"3623e7fa4324ec1307370f33d8f287a9e20a5578","modified":1569756154588},{"_id":"themes/next/source/css/_common/components/tags/blockquote-center.styl","hash":"c2abe4d87148e23e15d49ee225bc650de60baf46","modified":1569756154588},{"_id":"themes/next/source/css/_common/components/tags/exturl.styl","hash":"1b3cc9f4e5a7f6e05b4100e9990b37b20d4a2005","modified":1569756154588},{"_id":"themes/next/source/css/_common/components/tags/full-image.styl","hash":"b8969e1654eec89a0fd10d88b337fee9cb03cd44","modified":1569756154588},{"_id":"themes/next/source/css/_common/components/tags/group-pictures.styl","hash":"4851b981020c5cbc354a1af9b831a2dcb3cf9d39","modified":1569756154589},{"_id":"themes/next/source/css/_common/components/tags/label.styl","hash":"4a457d265d62f287c63d48764ce45d9bcfc9ec5a","modified":1569756154589},{"_id":"themes/next/source/css/_common/components/tags/note-modern.styl","hash":"45df0cf4c97b47e05573bcd41028ee50f3fdf432","modified":1569756154589},{"_id":"themes/next/source/css/_common/components/tags/note.styl","hash":"32c9156bea5bac9e9ad0b4c08ffbca8b3d9aac4b","modified":1569756154589},{"_id":"themes/next/source/css/_common/components/tags/tabs.styl","hash":"4ab5deed8c3b0c338212380f678f8382672e1bcb","modified":1569756154589},{"_id":"themes/next/source/css/_common/components/tags/tags.styl","hash":"ead0d0f2321dc71505788c7f689f92257cf14947","modified":1569756154589},{"_id":"themes/next/source/css/_common/components/third-party/algolia-search.styl","hash":"fd42777b9125fd8969dc39d4f15473e2b91b4142","modified":1569756154589},{"_id":"themes/next/source/css/_common/components/third-party/busuanzi-counter.styl","hash":"d4e6d8d7b34dc69994593c208f875ae8f7e8a3ae","modified":1569756154589},{"_id":"themes/next/source/css/_common/components/third-party/baidushare.styl","hash":"93b08815c4d17e2b96fef8530ec1f1064dede6ef","modified":1569756154589},{"_id":"themes/next/source/css/_common/components/third-party/duoshuo.styl","hash":"2340dd9b3202c61d73cc708b790fac5adddbfc7f","modified":1569756154590},{"_id":"themes/next/source/css/_common/components/third-party/han.styl","hash":"cce6772e2cdb4db85d35486ae4c6c59367fbdd40","modified":1569756154590},{"_id":"themes/next/source/css/_common/components/third-party/jiathis.styl","hash":"327b5f63d55ec26f7663185c1a778440588d9803","modified":1569756154590},{"_id":"themes/next/source/css/_common/components/third-party/third-party.styl","hash":"aeff0e6e23725e8baea27c890ccbbf466024f767","modified":1569756154590},{"_id":"themes/next/source/css/_common/components/third-party/localsearch.styl","hash":"d89c4b562b528e4746696b2ad8935764d133bdae","modified":1569756154590},{"_id":"themes/next/source/css/_schemes/Muse/sidebar/sidebar-blogroll.styl","hash":"817587e46df49e819858c8ecbafa08b53d5ff040","modified":1569756154594},{"_id":"themes/next/source/css/_schemes/Mist/outline/outline.styl","hash":"5dc4859c66305f871e56cba78f64bfe3bf1b5f01","modified":1569756154593},{"_id":"themes/next/source/css/_schemes/Mist/sidebar/sidebar-blogroll.styl","hash":"817587e46df49e819858c8ecbafa08b53d5ff040","modified":1569756154593},{"_id":"themes/next/source/lib/Han/dist/font/han-space.otf","hash":"07436f011b44051f61b8329c99de4bec64e86f4b","modified":1569756154600},{"_id":"themes/next/source/lib/Han/dist/font/han-space.woff","hash":"7a635062b10bf5662ae1d218ba0980171005d060","modified":1569756154601},{"_id":"themes/next/source/lib/Han/dist/font/han.woff","hash":"f38ff9b2eecaa17b50b66aa2dae87e9e7436d195","modified":1569756154601},{"_id":"themes/next/source/lib/Han/dist/font/han.otf","hash":"f1f6bb8f461f5672e000380195d3d2358a28494c","modified":1569756154601},{"_id":"themes/next/source/lib/Han/dist/font/han.woff2","hash":"623af3ed5423371ac136a4fe0e8cc7bb7396037a","modified":1569756154601},{"_id":"themes/next/source/lib/font-awesome/fonts/FontAwesome.otf","hash":"048707bc52ac4b6563aaa383bfe8660a0ddc908c","modified":1569756154608},{"_id":"themes/next/source/lib/velocity/velocity.js","hash":"9f08181baea0cc0e906703b7e5df9111b9ef3373","modified":1569756154617},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.eot","hash":"d980c2ce873dc43af460d4d572d441304499f400","modified":1569756154609},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.js","hash":"9ccc6f8144f54e86df9a3fd33a18368d81cf3a4f","modified":1569756154604},{"_id":"source/img/comb.png","hash":"8c29fac099cb1d6a022e7d36617b3a4eec649e98","modified":1569756154511},{"_id":"themes/next/source/lib/three/three.min.js","hash":"73f4cdc17e51a72b9bf5b9291f65386d615c483b","modified":1569756154616},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.svg","hash":"98a8aa5cf7d62c2eff5f07ede8d844b874ef06ed","modified":1569756154610},{"_id":"public/categories/video/index.html","hash":"577c68ba3f6a0b43b0ecdb7dae6e90334fe9f21d","modified":1574999848486},{"_id":"public/categories/css3/index.html","hash":"aeccb9dd9d6b93db5a543373e606075da991a55d","modified":1574999848486},{"_id":"public/categories/markdown/index.html","hash":"122b5fdbd3ef43b9e0415ab96dcf51aeb88a3dd1","modified":1574999848487},{"_id":"public/categories/editor/index.html","hash":"771a31319e15c35751118c78d64fd86627ef9ee0","modified":1574999848487},{"_id":"public/categories/Eslint/index.html","hash":"5c6edcffaa02208bd313bf65b10e57f8db57054d","modified":1574999848487},{"_id":"public/categories/webpack/vue/index.html","hash":"4e35b228aa8b49e04d2eadaab5144e84eba3eb52","modified":1574999848487},{"_id":"public/categories/webpack/vue/compress/index.html","hash":"ed639c7e5effe9ab5fde17edec224091b6c3f462","modified":1574999848487},{"_id":"public/categories/JDCloud/index.html","hash":"6c8b02f50b85dea7bce3f4209b0030592da9569d","modified":1574999848487},{"_id":"public/tags/video/index.html","hash":"35d6ee93970f2293b648d6e894d1f1fa5c983a2b","modified":1574999848487},{"_id":"public/tags/GitHub/index.html","hash":"6c5baa89c26200df6b9e5d67034564a53c015f68","modified":1574999848488},{"_id":"public/tags/GitLab/index.html","hash":"4541dea064c6289244bf7f9fdb93892399577222","modified":1574999848488},{"_id":"public/tags/css3/index.html","hash":"ab7b5f6d2bb57020e76e847c1a067aacb47995cb","modified":1574999848488},{"_id":"public/tags/cache/index.html","hash":"34c6709cacd794d9f45c95d20f2a7103d3c09888","modified":1574999848488},{"_id":"public/tags/markdown/index.html","hash":"912f978720a2b81bd623ebb7dcfce15af5f661d4","modified":1574999848488},{"_id":"public/tags/blog/index.html","hash":"9c9c66135faa450cbb586b231c0de999e41aeda8","modified":1574999848488},{"_id":"public/tags/canvas/index.html","hash":"e823b3053631bf97d25a21dbbe48fcb15bfd7e87","modified":1574999848488},{"_id":"public/tags/粒子动画/index.html","hash":"99952788e46d060717096b5c518c758f8e0bd276","modified":1574999848488},{"_id":"public/tags/animate/index.html","hash":"1f32e415b39692dc49b3c376a353f74c9d2fdd69","modified":1574999848488},{"_id":"public/tags/compress/index.html","hash":"d3e1fab7c856b0390061ebaf42843036f8a3b96f","modified":1574999848488},{"_id":"public/tags/webstorm/index.html","hash":"52a8d9fdb97c1f0920ee5b576f6afc0a19f0a1b0","modified":1574999848488},{"_id":"public/tags/NodeJs/index.html","hash":"40f412da9cb04a1c6b871f7cf571f3bb449d54f9","modified":1574999848488},{"_id":"public/tags/vuex/index.html","hash":"513dac61a03c32b647231d5ffe457414e86a8c85","modified":1574999848488},{"_id":"public/tags/es6/index.html","hash":"c1f4fb08fbd934713510de853fd1cdcae0fe9a42","modified":1574999848489},{"_id":"public/tags/audio/index.html","hash":"5085818a874ba88bd03bde555c6bd157a1721091","modified":1574999848489},{"_id":"public/tags/Eslint/index.html","hash":"76abd9ad6fddc2c0949eabfc1670ec9a1264834d","modified":1574999848489},{"_id":"public/tags/Prettier/index.html","hash":"769f38eb9df0fb895a6d3702be38360d512b01d6","modified":1574999848489},{"_id":"public/tags/npm/index.html","hash":"96df1c562900c1a4f7146006f65660692c894f6f","modified":1574999848489},{"_id":"public/tags/draggable/index.html","hash":"773601384e9f1b43e53a56636cc2adf86bb80cfd","modified":1574999848489},{"_id":"public/tags/cropper/index.html","hash":"b426bdf1ad8379b26599af2b19dba6e9cfd0ae73","modified":1574999848489},{"_id":"public/tags/sass/index.html","hash":"2e8cf2e7ce23cab9fd67d5e560c54d7268c330e7","modified":1574999848489},{"_id":"public/tags/JDCloud/index.html","hash":"c85798bf77968eca5e1a6ac2e4604a16ca6cfdcd","modified":1574999848489},{"_id":"public/about/index.html","hash":"e0e99ce4617b427e2c8dfffabf9ab11de529f13b","modified":1574999848489},{"_id":"public/tags/index.html","hash":"dd1fe738d22a46122ed8bc9b27f681b8c805a394","modified":1574999848489},{"_id":"public/categories/index.html","hash":"12011e2f44a2a227e9f9a5c0243399d4d3fa33a4","modified":1574999848489},{"_id":"public/2019/05/22/自己动手开发vue组件库并发布到npm（持续更新）/index.html","hash":"bba124baccc4e19a0d3d1ddf7b4e885be77b71a1","modified":1574999848489},{"_id":"public/2019/05/07/vue-cli3-x项目图片压缩/index.html","hash":"83f3b116969496382a31852c3f9c9e6325617537","modified":1574999848490},{"_id":"public/2019/11/29/markdown语法/index.html","hash":"f4cf87427020485a3f6273f71f05c7ca5487c9d7","modified":1574999883715},{"_id":"public/2019/05/10/css伪元素/index.html","hash":"8dd454d21afbd536524b7c0ffbce8cc5bb6eb1eb","modified":1574999848490},{"_id":"public/2019/04/02/从0开始开发vue单文件项目/index.html","hash":"adb3bed0f1fe6bd1c5f0a74543acc6890ba5cd49","modified":1574999848490},{"_id":"public/2019/02/15/详解vue-use的使用/index.html","hash":"ebdc1e2d5ce98ed0b23aae777898a7cff46645bd","modified":1574999848490},{"_id":"public/2018/12/15/Vue-Cli-3-使用感受/index.html","hash":"91ee20efeba2fc878ab45fafa6b5c65dc0dc948e","modified":1574999848490},{"_id":"public/2018/10/16/管理团队代码/index.html","hash":"a0c3a2ed5d2dacdd71de2e93c95bc4c94fd8dbb1","modified":1574999848490},{"_id":"public/2018/07/15/关于vue（全家桶）的一些使用心得/index.html","hash":"5d83447c478d25f76e831792e7733bf35084863e","modified":1574999848490},{"_id":"public/2018/03/29/关于蜂窝状图片的实现/index.html","hash":"04dae0436170e6c5cc58620724a54e405bfc7061","modified":1574999848490},{"_id":"public/2018/03/22/关于webpack的那些事/index.html","hash":"60ed7a5f78006b1c209c79ac4d123d9ba05e7a9a","modified":1574999848491},{"_id":"public/2018/02/03/swiper-animate的使用/index.html","hash":"c3d75d638bcced2315dade7ea2a92e372a7694ff","modified":1574999848491},{"_id":"public/2018/01/24/Video小记/index.html","hash":"155b60fb7d853b70ee0c27bb9d1cddb8d38e4fb1","modified":1574999848491},{"_id":"public/2018/01/12/前端配合微信授权/index.html","hash":"459e26b141684e4e00b7dda2dea2f5d61c9712f5","modified":1574999848491},{"_id":"public/2017/12/20/筋斗云文档/index.html","hash":"b97568fb69cd4b7db88605ecf1149ccb82fb89da","modified":1574999848491},{"_id":"public/2017/12/10/关于vue-awesome-swiper以及vue-cli升级随笔/index.html","hash":"7308772647b9147847c5b984cdc7ebb0d454748d","modified":1574999848491},{"_id":"public/2017/11/25/html清除缓存/index.html","hash":"1277eb6b3c5bf14b793f35cf5014086b21aa5c55","modified":1574999848491},{"_id":"public/2017/11/15/全局设置npm镜像/index.html","hash":"7f38779544e5896668a20115b36a93c8384d65e3","modified":1574999848492},{"_id":"public/2017/11/07/HTML5原生拖放/index.html","hash":"f8fb6213146125563eea3094da996cc6d0c57f87","modified":1574999848492},{"_id":"public/2017/11/06/cropper/index.html","hash":"d77b9354971e2c33a597fcfa7a1d6bc1167ddd47","modified":1574999848492},{"_id":"public/2017/10/31/关于sticky-footer兼容性最好的一种解决方案/index.html","hash":"67759124fc7313df4b31ba07fe8513eeb499135c","modified":1574999848492},{"_id":"public/2017/10/30/微信浏览器播放音乐的坑/index.html","hash":"a3899e5e1776b09565becea11789abe0ca535131","modified":1574999848492},{"_id":"public/2017/10/20/使用SASS/index.html","hash":"c5ceb44855be713c30a6dd73bd053dd0eca26928","modified":1574999848492},{"_id":"public/2017/10/19/github和gitlab下fork后同步个人仓库和源仓库/index.html","hash":"fd26cafa3d33b1afd239a507c9da90e64d169204","modified":1574999848492},{"_id":"public/2017/10/17/vue-awesome-swiper使用/index.html","hash":"4a7fb89ae72785249756f1cfa4cc62ab2ae4257e","modified":1574999848492},{"_id":"public/2017/10/10/particlesJs开发手册/index.html","hash":"a9a75717f2582ae4abb0846823ffa6b11a9e2206","modified":1574999848492},{"_id":"public/2017/09/25/git命令/index.html","hash":"e545a96aec2b5ca0592d3156ed06c835381921a4","modified":1574999848493},{"_id":"public/2017/08/28/使用webstrom/index.html","hash":"1ccf22aef627d71688a2946a4708bf364092e789","modified":1574999848493},{"_id":"public/2017/08/24/hello-world/index.html","hash":"5ce867cb7e12e584ba700d9c6bb6729815d79bd5","modified":1574999848493},{"_id":"public/archives/index.html","hash":"b6fb4a5833579c53889d82750738a3014b7cf30d","modified":1574999848493},{"_id":"public/archives/page/2/index.html","hash":"25106924f8236b58bc5bd23018f1825e8c5393b6","modified":1574999848493},{"_id":"public/archives/page/3/index.html","hash":"13a6d0c0f204153be59e94208fe3aebea89dc0aa","modified":1574999848493},{"_id":"public/archives/2017/index.html","hash":"cf5914848525e076cba991b8aff7ec2eed9a8034","modified":1574999848493},{"_id":"public/archives/2017/page/2/index.html","hash":"16cdc03e15072d96756f5ac9ed7653eea4488957","modified":1574999848494},{"_id":"public/archives/2017/08/index.html","hash":"1093b433e834a197d1c14c06b6a522fbf4b46b36","modified":1574999848494},{"_id":"public/archives/2017/09/index.html","hash":"9c1c68d3f83f4c940d99036a30b685674a16ba23","modified":1574999848494},{"_id":"public/archives/2017/10/index.html","hash":"8358f13ae6229c0e3ddb32baca1c221cdf5b8645","modified":1574999848494},{"_id":"public/archives/2017/11/index.html","hash":"fb5477e5015eeb8eb2b1b7c00a3eb93b5f979b52","modified":1574999848494},{"_id":"public/archives/2017/12/index.html","hash":"7b92f0a0296f9ad12835147b12c2e3913e456b30","modified":1574999848494},{"_id":"public/archives/2018/index.html","hash":"0663c1c08c4577f6d26b4e0b7a56d7d6af960d9c","modified":1574999848494},{"_id":"public/archives/2018/01/index.html","hash":"20bd33e9f03a740cbc43b869b3092b14b5f84716","modified":1574999848494},{"_id":"public/archives/2018/02/index.html","hash":"7d5b8a7f8f1f6845f20406605483b3d5841c1c1a","modified":1574999848494},{"_id":"public/archives/2018/03/index.html","hash":"7e813d690d75364e4a8e0b13b93d268e6a561a58","modified":1574999848494},{"_id":"public/archives/2018/07/index.html","hash":"5cc89f47a965fb27f521b254ab3e41a7e99ea53f","modified":1574999848495},{"_id":"public/archives/2018/10/index.html","hash":"ca38e9438eb8edeb552eab535b194f2d62ea46a0","modified":1574999848495},{"_id":"public/archives/2018/12/index.html","hash":"6b27cc55f34fcdf31313c2b30002ca73c1a390b5","modified":1574999848495},{"_id":"public/archives/2019/index.html","hash":"09ae36fd3e5fda877f3426a5013b14fd84a958c8","modified":1574999848495},{"_id":"public/archives/2019/02/index.html","hash":"6716ba6765dc4195be5b2e152eae6d568fe04f27","modified":1574999848495},{"_id":"public/archives/2019/04/index.html","hash":"bf4f8ab167ca729a287584bdd7cef1bafbb2e38d","modified":1574999848495},{"_id":"public/archives/2019/05/index.html","hash":"a78e3d8d5658be7c3a21b3570f26245e5cb25ce3","modified":1574999848495},{"_id":"public/archives/2019/11/index.html","hash":"4c844563e68ad94c1e89c753aee2849f52e5d742","modified":1574999848495},{"_id":"public/categories/vue/index.html","hash":"871c10e97688657a3f8c10d73f4c636cd0542b51","modified":1574999848495},{"_id":"public/categories/git/index.html","hash":"d8c0c0ca390dc5771ef93d4c55210c2cc65561c3","modified":1574999848495},{"_id":"public/categories/css/index.html","hash":"0a51c80898f93c281dcce06d3c0ca788476e8171","modified":1574999848495},{"_id":"public/categories/html5/index.html","hash":"daec588aba9da92eb886dc74ec005933bb481e4f","modified":1574999848496},{"_id":"public/categories/JavaScript/index.html","hash":"66e7ccab2536057db6e3e38eff91331aa339e5c6","modified":1574999848496},{"_id":"public/categories/swiper/index.html","hash":"8cc59be0ba2bf372b33deb196f85c3961218c18e","modified":1574999848496},{"_id":"public/categories/webpack/index.html","hash":"9b6e22d0904f61f7238c890c20aef0068b9eb75c","modified":1574999848496},{"_id":"public/categories/NodeJs/index.html","hash":"73c3ea432916f1ee55d0fbaafd492012e97c774b","modified":1574999848496},{"_id":"public/categories/WeChat/index.html","hash":"3213668b7ecaf51ee8d18b9a033601d12953014e","modified":1574999848496},{"_id":"public/index.html","hash":"55fadc426acb5f0a38b6bb4b1ffe59e7130e8716","modified":1574999848496},{"_id":"public/page/2/index.html","hash":"8948823bd0f6decaba03bc740fbac1a35a3c8587","modified":1574999848496},{"_id":"public/page/3/index.html","hash":"7d12e17b7bb22c6f0c87d7e610cd56baced3dd5b","modified":1574999848496},{"_id":"public/tags/vue/index.html","hash":"da1e06ed49463bbc2fd11e9fa9bc92c1be6958cd","modified":1574999848496},{"_id":"public/tags/git/index.html","hash":"bc7a095d88c7566095191f3293f0daa2c309dfe0","modified":1574999848496},{"_id":"public/tags/css/index.html","hash":"fbd239e178e9fcf7ba716382baece04a4a7e9738","modified":1574999848496},{"_id":"public/tags/html5/index.html","hash":"e803a2d366070f259f9b73de8309e6954939c821","modified":1574999848496},{"_id":"public/tags/carousel/index.html","hash":"96c0c5e6a0fd784c9bed2168305e41f3c6172723","modified":1574999848496},{"_id":"public/tags/webpack/index.html","hash":"7239c648543349b98e5abb0e7e69fa7768cf5c3a","modified":1574999848497},{"_id":"public/tags/axios/index.html","hash":"369d1f51f85fdb87769cb450d849452fd8f32bdc","modified":1574999848497},{"_id":"public/tags/WeChat/index.html","hash":"29b0ce674e41e2166af284f28b648dea609f7485","modified":1574999848497},{"_id":"public/img/2.jpg","hash":"1fe54b5d5d3fb5f788a9cdbbcecc030139d57b37","modified":1574999848507},{"_id":"public/img/me.jpg","hash":"2357ae34b48e5d1804db02f40f462601d4ebfcfb","modified":1574999848507},{"_id":"public/img/touxiang.jpg","hash":"f9c908dcdcba2356c1631a239cd7e3a881a2d6af","modified":1574999848507},{"_id":"public/img/markdown-eg.jpeg","hash":"a279a201c1c8432b5a8bd64e836099211d1d5103","modified":1574999848507},{"_id":"public/images/avatar.gif","hash":"264082bb3a1af70d5499c7d22b0902cb454b6d12","modified":1574999848507},{"_id":"public/images/cc-by-nc-nd.svg","hash":"c6524ece3f8039a5f612feaf865d21ec8a794564","modified":1574999848507},{"_id":"public/images/algolia_logo.svg","hash":"ec119560b382b2624e00144ae01c137186e91621","modified":1574999848507},{"_id":"public/images/cc-by-nc-sa.svg","hash":"3031be41e8753c70508aa88e84ed8f4f653f157e","modified":1574999848507},{"_id":"public/images/cc-by-nd.svg","hash":"c563508ce9ced1e66948024ba1153400ac0e0621","modified":1574999848507},{"_id":"public/images/cc-by-sa.svg","hash":"aa4742d733c8af8d38d4c183b8adbdcab045872e","modified":1574999848507},{"_id":"public/images/cc-by.svg","hash":"28a0a4fe355a974a5e42f68031652b76798d4f7e","modified":1574999848507},{"_id":"public/images/cc-by-nc.svg","hash":"8d39b39d88f8501c0d27f8df9aae47136ebc59b7","modified":1574999848507},{"_id":"public/images/cc-zero.svg","hash":"87669bf8ac268a91d027a0a4802c92a1473e9030","modified":1574999848507},{"_id":"public/images/loading.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1574999848507},{"_id":"public/images/placeholder.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1574999848507},{"_id":"public/images/quote-l.svg","hash":"94e870b4c8c48da61d09522196d4dd40e277a98f","modified":1574999848507},{"_id":"public/images/ewm.jpg","hash":"8e68e8f0e7e2b6a0d2733716baf23c8f250ad813","modified":1574999848508},{"_id":"public/images/searchicon.png","hash":"67727a6a969be0b2659b908518fa6706eed307b8","modified":1574999848508},{"_id":"public/images/quote-r.svg","hash":"e60ae504f9d99b712c793c3740c6b100d057d4ec","modified":1574999848508},{"_id":"public/images/favicon.png","hash":"8c38acb491455afbe41badd8d30c0533c2fc6df2","modified":1574999848508},{"_id":"public/images/touxiang.jpg","hash":"f9c908dcdcba2356c1631a239cd7e3a881a2d6af","modified":1574999848508},{"_id":"public/lib/fastclick/LICENSE","hash":"dcd5b6b43095d9e90353a28b09cb269de8d4838e","modified":1574999848508},{"_id":"public/lib/font-awesome/HELP-US-OUT.txt","hash":"4f7bf961f1bed448f6ba99aeb9219fabf930ba96","modified":1574999848508},{"_id":"public/lib/font-awesome/css/font-awesome.css.map","hash":"0189d278706509412bac4745f96c83984e1d59f4","modified":1574999848508},{"_id":"public/lib/Han/dist/font/han-space.otf","hash":"07436f011b44051f61b8329c99de4bec64e86f4b","modified":1574999848508},{"_id":"public/lib/Han/dist/font/han-space.woff","hash":"7a635062b10bf5662ae1d218ba0980171005d060","modified":1574999848508},{"_id":"public/lib/Han/dist/font/han.woff","hash":"f38ff9b2eecaa17b50b66aa2dae87e9e7436d195","modified":1574999848508},{"_id":"public/lib/Han/dist/font/han.otf","hash":"f1f6bb8f461f5672e000380195d3d2358a28494c","modified":1574999848508},{"_id":"public/lib/Han/dist/font/han.woff2","hash":"623af3ed5423371ac136a4fe0e8cc7bb7396037a","modified":1574999848509},{"_id":"public/live2dw/assets/exp/f00.exp.json","hash":"84073a497ddb6e56c6cfc244a0fb217ba473abf9","modified":1574999848509},{"_id":"public/live2dw/assets/moc/z16.256/texture_00.png","hash":"19f22619c246067d519aa1e6e477497cc4342414","modified":1574999848509},{"_id":"public/live2dw/assets/mtn/idle.mtn","hash":"f6b879d9f1d096509a7edbc971b8fdd9697932e9","modified":1574999848509},{"_id":"public/live2dw/assets/z16.model.json","hash":"e69f3d2ecc9bf51b3972ad9df8f6aaa31956910c","modified":1574999848509},{"_id":"public/live2dw/assets/z16.physics.json","hash":"67f13f60030d7e4c7f824c001ab5254ce4b9bafd","modified":1574999848509},{"_id":"public/live2dw/assets/moc/z16.512/texture_00.png","hash":"251b9f944fb1575c01a62b8a9d7522fe76954b3b","modified":1574999848509},{"_id":"public/img/6.png","hash":"f9ec58c2153ad332f3e332bb669ada6b6860c20f","modified":1574999848964},{"_id":"public/img/1.png","hash":"6ef01df6b75c16e281ca3ba7b4157bd35cad3fba","modified":1574999848966},{"_id":"public/img/5.png","hash":"10d793d9580aa963b167395fa7a51f4ab202aca6","modified":1574999848968},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.woff2","hash":"d6f48cba7d076fb6f2fd6ba993a75b9dc1ecbf0c","modified":1574999848968},{"_id":"public/live2dw/assets/moc/z16.moc","hash":"6b0241e80e94664d694b43ad05333960de2550c1","modified":1574999848968},{"_id":"public/live2dw/lib/L2Dwidget.min.js","hash":"5f1a807437cc723bcadc3791d37add5ceed566a2","modified":1574999848968},{"_id":"public/js/src/algolia-search.js","hash":"b172f697ed339a24b1e80261075232978d164c35","modified":1574999848975},{"_id":"public/js/src/affix.js","hash":"978e0422b5bf1b560236d8d10ebc1adcf66392e3","modified":1574999848975},{"_id":"public/js/src/exturl.js","hash":"e42e2aaab7bf4c19a0c8e779140e079c6aa5c0b1","modified":1574999848976},{"_id":"public/js/src/bootstrap.js","hash":"034bc8113e0966fe2096ba5b56061bbf10ef0512","modified":1574999848976},{"_id":"public/js/src/hook-duoshuo.js","hash":"a6119070c0119f33e08b29da7d2cce2635eb40a0","modified":1574999848976},{"_id":"public/js/src/js.cookie.js","hash":"9b37973a90fd50e71ea91682265715e45ae82c75","modified":1574999848976},{"_id":"public/js/src/post-details.js","hash":"0693695a9512641daff63d99da772625a058ab18","modified":1574999848976},{"_id":"public/js/src/scroll-cookie.js","hash":"09dc828cbf5f31158ff6250d2bf7c3cde6365c67","modified":1574999848976},{"_id":"public/lib/canvas-ribbon/canvas-ribbon.js","hash":"7fd2f3e2773555392ef40df40cae3bedb884f17a","modified":1574999848976},{"_id":"public/js/src/scrollspy.js","hash":"fe4da1b9fe73518226446f5f27d2831e4426fc35","modified":1574999848976},{"_id":"public/lib/algolia-instant-search/instantsearch.min.css","hash":"90ef19edc982645b118b095615838d9c5eaba0de","modified":1574999848976},{"_id":"public/lib/canvas-nest/canvas-nest.min.js","hash":"0387e75e23b1db108a755073fe52a0d03eb391a7","modified":1574999848976},{"_id":"public/lib/font-awesome/bower.json","hash":"64394a2a9aa00f8e321d8daa5e51a420f0e96dad","modified":1574999848976},{"_id":"public/lib/fastclick/bower.json","hash":"4dcecf83afddba148464d5339c93f6d0aa9f42e9","modified":1574999848976},{"_id":"public/lib/jquery_lazyload/jquery.scrollstop.js","hash":"0e9a81785a011c98be5ea821a8ed7d411818cfd1","modified":1574999848976},{"_id":"public/lib/jquery_lazyload/bower.json","hash":"ae3c3b61e6e7f9e1d7e3585ad854380ecc04cf53","modified":1574999848976},{"_id":"public/lib/pace/pace-theme-barber-shop.min.css","hash":"ee0d51446cb4ffe1bb96bd7bc8c8e046dddfcf46","modified":1574999848976},{"_id":"public/lib/pace/pace-theme-big-counter.min.css","hash":"5b561dc328af4c4d512e20a76fe964d113a32ba8","modified":1574999848977},{"_id":"public/lib/pace/pace-theme-center-atom.min.css","hash":"dcf79c24fe5350fb73d8038573a104e73639e9d3","modified":1574999848977},{"_id":"public/lib/pace/pace-theme-bounce.min.css","hash":"f6bdb9a785b7979dd8ec5c60e278af955ef1e585","modified":1574999848977},{"_id":"public/lib/pace/pace-theme-center-radar.min.css","hash":"ab7cba998bf4c03b13df342bf43647fa4f419783","modified":1574999848977},{"_id":"public/lib/pace/pace-theme-corner-indicator.min.css","hash":"b3c64c973f31884e3d8145989476707333406b9a","modified":1574999848977},{"_id":"public/lib/pace/pace-theme-center-circle.min.css","hash":"a4066769c78affbfbc5e30a600e2c7862cd532e0","modified":1574999848977},{"_id":"public/lib/pace/pace-theme-center-simple.min.css","hash":"67f44c947548bd4d77e7590d3f59e236cbf9e98a","modified":1574999848977},{"_id":"public/lib/pace/pace-theme-fill-left.min.css","hash":"0bec1e235a4a2cccda3f993b205424e1441a44ae","modified":1574999848977},{"_id":"public/lib/pace/pace-theme-flash.min.css","hash":"13ace22c40312d7bbd8d9c1e50eff897a7a497d8","modified":1574999848977},{"_id":"public/lib/pace/pace-theme-mac-osx.min.css","hash":"9f2e7b51b084da407863826b25265b31150b3821","modified":1574999848977},{"_id":"public/lib/pace/pace-theme-minimal.min.css","hash":"9cd783cceb8a191f3c8b5d81f7a430ecc3e489d3","modified":1574999848977},{"_id":"public/lib/velocity/bower.json","hash":"0ef14e7ccdfba5db6eb3f8fc6aa3b47282c36409","modified":1574999848977},{"_id":"public/js/src/schemes/pisces.js","hash":"79da92119bc246fe05d1626ac98426a83ec90a94","modified":1574999848977},{"_id":"public/lib/fancybox/source/jquery.fancybox.css","hash":"5f163444617b6cf267342f06ac166a237bb62df9","modified":1574999848977},{"_id":"public/lib/fastclick/lib/fastclick.min.js","hash":"2cae0f5a6c5d6f3cb993015e6863f9483fc4de18","modified":1574999848977},{"_id":"public/404.html","hash":"6259f3405e5bf1c9b2eb282027b62019f8b667a5","modified":1574999848977},{"_id":"public/lib/fastclick/README.html","hash":"287b2e24cae1f7d01877dda79b76c24f81123895","modified":1574999848977},{"_id":"public/lib/jquery_lazyload/CONTRIBUTING.html","hash":"a6358170d346af13b1452ac157b60505bec7015c","modified":1574999848977},{"_id":"public/lib/jquery_lazyload/README.html","hash":"bfb6e229fc36e493d45499b4ac30a7c298786ab4","modified":1574999848979},{"_id":"public/css/main.css","hash":"7891f74fcf6dce82afe44f3978cc87ff7716ed1c","modified":1574999848979},{"_id":"public/img/3.jpg","hash":"955df2a6fe9fc308c54317281005350582d4b279","modified":1574999848979},{"_id":"public/img/4.png","hash":"3fa31ba6f84e6ba33c980e1275ba55e844f0dbb6","modified":1574999848979},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.woff","hash":"28b782240b3e76db824e12c02754a9731a167527","modified":1574999848979},{"_id":"public/lib/font-awesome/fonts/FontAwesome.otf","hash":"048707bc52ac4b6563aaa383bfe8660a0ddc908c","modified":1574999848979},{"_id":"public/live2dw/lib/L2Dwidget.0.min.js","hash":"35bb5b588b6de25c9be2dd51d3fd331feafac02d","modified":1574999848980},{"_id":"public/js/src/motion.js","hash":"da146caf488078a634d961debf2a71ce4106018c","modified":1574999848986},{"_id":"public/js/src/utils.js","hash":"2917c39c75b14b6dab7e1c46ab4d87b4df9fcd5d","modified":1574999848986},{"_id":"public/lib/jquery_lazyload/jquery.lazyload.js","hash":"481fd478650e12b67c201a0ea41e92743f8b45a3","modified":1574999848986},{"_id":"public/lib/pace/pace-theme-loading-bar.min.css","hash":"7ee28875dfc1230d76c537f6605766e8d4011e9f","modified":1574999848986},{"_id":"public/lib/pace/pace.min.js","hash":"9944dfb7814b911090e96446cea4d36e2b487234","modified":1574999848986},{"_id":"public/lib/velocity/velocity.ui.min.js","hash":"ed5e534cd680a25d8d14429af824f38a2c7d9908","modified":1574999848986},{"_id":"public/lib/ua-parser-js/dist/ua-parser.min.js","hash":"38628e75e4412cc6f11074e03e1c6d257aae495b","modified":1574999848986},{"_id":"public/lib/ua-parser-js/dist/ua-parser.pack.js","hash":"214dad442a92d36af77ed0ca1d9092b16687f02f","modified":1574999848986},{"_id":"public/live2dw/assets/moc/z16.1024/texture_00.png","hash":"c4f7c067d7d37601490554438ab801fce1feb92d","modified":1574999848986},{"_id":"public/live2dw/lib/L2Dwidget.min.js.map","hash":"3290fe2df45f065b51a1cd7b24ec325cbf9bb5ce","modified":1574999848986},{"_id":"public/lib/fancybox/source/jquery.fancybox.pack.js","hash":"53360764b429c212f424399384417ccc233bb3be","modified":1574999848991},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.eot","hash":"d980c2ce873dc43af460d4d572d441304499f400","modified":1574999848991},{"_id":"public/lib/fastclick/lib/fastclick.js","hash":"06cef196733a710e77ad7e386ced6963f092dc55","modified":1574999849000},{"_id":"public/lib/font-awesome/css/font-awesome.min.css","hash":"512c7d79033e3028a9be61b540cf1a6870c896f8","modified":1574999849000},{"_id":"public/lib/three/canvas_lines.min.js","hash":"dce4a3b65f8bf958f973690caa7ec4952f353b0c","modified":1574999849006},{"_id":"public/lib/three/three-waves.min.js","hash":"d968cba6b3a50b3626a02d67b544f349d83b147c","modified":1574999849006},{"_id":"public/lib/three/canvas_sphere.min.js","hash":"d8ea241a53c135a650f7335d2b6982b899fd58a9","modified":1574999849007},{"_id":"public/lib/velocity/velocity.ui.js","hash":"6a1d101eab3de87527bb54fcc8c7b36b79d8f0df","modified":1574999849008},{"_id":"public/lib/velocity/velocity.min.js","hash":"2f1afadc12e4cf59ef3b405308d21baa97e739c6","modified":1574999849008},{"_id":"public/lib/Han/dist/han.min.js","hash":"f559c68a25065a14f47da954a7617d87263e409d","modified":1574999849008},{"_id":"public/lib/Han/dist/han.min.css","hash":"a0c9e32549a8b8cf327ab9227b037f323cdb60ee","modified":1574999849052},{"_id":"public/lib/fancybox/source/jquery.fancybox.js","hash":"1cf3d47b5ccb7cb6e9019c64f2a88d03a64853e4","modified":1574999849052},{"_id":"public/lib/Han/dist/han.css","hash":"bd40da3fba8735df5850956814e312bd7b3193d7","modified":1574999849056},{"_id":"public/img/1.jpg","hash":"1bcba3c6348e2190a42bff762800bf846cf9239c","modified":1574999849062},{"_id":"public/lib/Han/dist/han.js","hash":"e345397e0585c9fed1449e614ec13e0224acf2ab","modified":1574999849065},{"_id":"public/live2dw/lib/L2Dwidget.0.min.js.map","hash":"35e71cc2a130199efb167b9a06939576602f0d75","modified":1574999849065},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.svg","hash":"98a8aa5cf7d62c2eff5f07ede8d844b874ef06ed","modified":1574999849065},{"_id":"public/lib/jquery/index.js","hash":"41b4bfbaa96be6d1440db6e78004ade1c134e276","modified":1574999849116},{"_id":"public/img/comb.png","hash":"8c29fac099cb1d6a022e7d36617b3a4eec649e98","modified":1574999849188},{"_id":"public/lib/velocity/velocity.js","hash":"9f08181baea0cc0e906703b7e5df9111b9ef3373","modified":1574999849190},{"_id":"public/lib/algolia-instant-search/instantsearch.min.js","hash":"9ccc6f8144f54e86df9a3fd33a18368d81cf3a4f","modified":1574999849198},{"_id":"public/lib/three/three.min.js","hash":"73f4cdc17e51a72b9bf5b9291f65386d615c483b","modified":1574999849201}],"Category":[{"name":"video","_id":"ck3jm8gvl0004z0btqygthfv2"},{"name":"vue","_id":"ck3jm8gvq000az0bteusg1fzk"},{"name":"git","_id":"ck3jm8gvt000gz0bton8h5bnl"},{"name":"css3","_id":"ck3jm8gvv000mz0bttmgjjc12"},{"name":"css","_id":"ck3jm8gw2000vz0bto1q3n0v8"},{"name":"html5","_id":"ck3jm8gw40014z0btmiknzocw"},{"name":"markdown","_id":"ck3jm8gw7001bz0btbtekk4c3"},{"name":"JavaScript","_id":"ck3jm8gw9001iz0bttiwclhj7"},{"name":"swiper","_id":"ck3jm8gwc001pz0bthy8dxq9e"},{"name":"webpack","_id":"ck3jm8gwg0020z0btm91x1dwd"},{"name":"editor","_id":"ck3jm8gwh0027z0bt7fhrw12k"},{"name":"NodeJs","_id":"ck3jm8gwi002bz0btfz74hlvk"},{"name":"WeChat","_id":"ck3jm8gwk002mz0btj8vo60ey"},{"name":"Eslint","_id":"ck3jm8gwm002vz0btvhfojcko"},{"name":"vue","parent":"ck3jm8gwg0020z0btm91x1dwd","_id":"ck3jm8gwn0030z0bty60tgviz"},{"name":"compress","parent":"ck3jm8gwn0030z0bty60tgviz","_id":"ck3jm8gwo0037z0btamxmq61y"},{"name":"JDCloud","_id":"ck3jm8h07004rz0btioyipp1a"}],"Data":[],"Page":[{"title":"了解作者","date":"2017-09-26T05:58:51.000Z","type":"about","_content":"姓名：赵晨敏\n性别：男\n年龄：不详\n性格：冷静、不爱交流\n爱好：动漫、音乐、科幻电影\n姓名：赵晨敏\n<img src=\"/blog/img/touxiang.jpg\" width=\"350\" height=\"350\" align=\"center\">\n2012年，我第二次经历了高考失利。疲惫于复读的重压和无趣，心灰意冷的我做出了人生中第一个重大的错误决定：随便选一所大学，随便选一门专业，拿到大学毕业证再做打算。大学前两年，大学生活似乎有无穷的魔力充实着我的生活，然而平静下来之后更多的却是失落和彷徨。我依然清楚的记得那一年毕业季，学长们走出大学校园的时候，他们表情凝重，眼神中透露出对未来的迷茫。从他们的眼中我似乎看到了自己不远的将来。我告诉自己绝对不能这样下去。如果做点什么，俩年后我也还是这幅模样。    \n我个人性格比较孤僻，不擅长和人交流。本身又是理科出生。很久以前就有朋友半开玩笑的说，像你这样的，不去做程序员屈才了。对他们来说可能是在开玩笑，而我觉得，这条路倒也不失为一条坦途。从那以后，我就不时的在想，不如自学编程吧！        \n大三第一学期，我开始自学编程，虽然有之前的理科基础，但荒废了俩年之后，不得不承认理解起来还是非常艰难。我曾经试图自学类似c++之类的语言，但晦涩难通，于是转而研究入门简单的语言，于是，html + css + js成为了我的首选。我承认在选择的时候是草率了一些，但不久之后我就被这三种语言迷住了。他们简单明快，各有分工却能相辅相成，对当时的我来说震撼不小。我也越来越被js的逻辑以及css的表现吸引，无法自拔。         \n再对前端有了初步的了解之后，我希望能有更多的机会接触，于是我在大三后半学期的时候向校领导提出申请：我想去找工作，不愿意在学校里继续消磨时光。当中经历了一些困难，但终于还是同意了，然后，我就暂时离开了校园，开始了我的前端路。          \n不得不说，工作还是完全不好找的。当时不是毕业季，加上专业不对还没有毕业，俩个月的时间里，我吃尽了苦头。父母提议我去参加培训，但我当时对培训是反对的，几个月的时间从零基础到月入俩万，这种事情从某种程度上和传销一样不靠谱。就在这时候，我收到了一家小公司的面试邀请，同时还有3个竞争者。山西是煤炭大省，但由于煤行业不景气，很多公司选择转型，这一家公司就是这样的情况，他们处于转型初期，要求的技术水平不高，我大致是可以胜任的，但毕竟底子比不过其他三位竞争者，无奈之下，咬咬牙：我要工资700块，算实习。       \n我有了人生的第一份工作，虽然工资不高。但我家在太原，除去中午要吃饭，其余并没有开销，倒也可以接受。好的是，我终于有更多时间来学习和提高。那一年是我接触前端第一年，纯正的前端小白，对任何功能和效果都充满了好奇。也找了很多的视频和书籍，现在想来，可能最充实的还是那段时间。         \n就这样，我度过了大学最后一年，这一年对我来说意义非凡。我真正从一个新手菜鸟变成了老资格的前段开发工程师。自学使我能更快的接受新鲜的事物，包括逐渐流行起来的各种框架、组件和工具。我也经常会和别人开玩笑，你们做开发花钱去学，还学的不得要领；我，拿着工资学开发，事半功倍。你要问我工资多少？我才不会告诉你。       \n前端的方向越来越远，生态系统也越来越完善，尤其NodeJs的横空出世，更是改变了前端开发多少年的开发模式。这一切仿佛有着一种神奇的魔力吸引着我前进。我也相信自己可以在这条路上越走越远。    ","source":"about/index.md","raw":"title: 了解作者\ndate: 2017-09-26 13:58:51\ntype: \"about\"\n---\n姓名：赵晨敏\n性别：男\n年龄：不详\n性格：冷静、不爱交流\n爱好：动漫、音乐、科幻电影\n姓名：赵晨敏\n<img src=\"/blog/img/touxiang.jpg\" width=\"350\" height=\"350\" align=\"center\">\n2012年，我第二次经历了高考失利。疲惫于复读的重压和无趣，心灰意冷的我做出了人生中第一个重大的错误决定：随便选一所大学，随便选一门专业，拿到大学毕业证再做打算。大学前两年，大学生活似乎有无穷的魔力充实着我的生活，然而平静下来之后更多的却是失落和彷徨。我依然清楚的记得那一年毕业季，学长们走出大学校园的时候，他们表情凝重，眼神中透露出对未来的迷茫。从他们的眼中我似乎看到了自己不远的将来。我告诉自己绝对不能这样下去。如果做点什么，俩年后我也还是这幅模样。    \n我个人性格比较孤僻，不擅长和人交流。本身又是理科出生。很久以前就有朋友半开玩笑的说，像你这样的，不去做程序员屈才了。对他们来说可能是在开玩笑，而我觉得，这条路倒也不失为一条坦途。从那以后，我就不时的在想，不如自学编程吧！        \n大三第一学期，我开始自学编程，虽然有之前的理科基础，但荒废了俩年之后，不得不承认理解起来还是非常艰难。我曾经试图自学类似c++之类的语言，但晦涩难通，于是转而研究入门简单的语言，于是，html + css + js成为了我的首选。我承认在选择的时候是草率了一些，但不久之后我就被这三种语言迷住了。他们简单明快，各有分工却能相辅相成，对当时的我来说震撼不小。我也越来越被js的逻辑以及css的表现吸引，无法自拔。         \n再对前端有了初步的了解之后，我希望能有更多的机会接触，于是我在大三后半学期的时候向校领导提出申请：我想去找工作，不愿意在学校里继续消磨时光。当中经历了一些困难，但终于还是同意了，然后，我就暂时离开了校园，开始了我的前端路。          \n不得不说，工作还是完全不好找的。当时不是毕业季，加上专业不对还没有毕业，俩个月的时间里，我吃尽了苦头。父母提议我去参加培训，但我当时对培训是反对的，几个月的时间从零基础到月入俩万，这种事情从某种程度上和传销一样不靠谱。就在这时候，我收到了一家小公司的面试邀请，同时还有3个竞争者。山西是煤炭大省，但由于煤行业不景气，很多公司选择转型，这一家公司就是这样的情况，他们处于转型初期，要求的技术水平不高，我大致是可以胜任的，但毕竟底子比不过其他三位竞争者，无奈之下，咬咬牙：我要工资700块，算实习。       \n我有了人生的第一份工作，虽然工资不高。但我家在太原，除去中午要吃饭，其余并没有开销，倒也可以接受。好的是，我终于有更多时间来学习和提高。那一年是我接触前端第一年，纯正的前端小白，对任何功能和效果都充满了好奇。也找了很多的视频和书籍，现在想来，可能最充实的还是那段时间。         \n就这样，我度过了大学最后一年，这一年对我来说意义非凡。我真正从一个新手菜鸟变成了老资格的前段开发工程师。自学使我能更快的接受新鲜的事物，包括逐渐流行起来的各种框架、组件和工具。我也经常会和别人开玩笑，你们做开发花钱去学，还学的不得要领；我，拿着工资学开发，事半功倍。你要问我工资多少？我才不会告诉你。       \n前端的方向越来越远，生态系统也越来越完善，尤其NodeJs的横空出世，更是改变了前端开发多少年的开发模式。这一切仿佛有着一种神奇的魔力吸引着我前进。我也相信自己可以在这条路上越走越远。    ","updated":"2019-09-29T11:22:34.502Z","path":"about/index.html","comments":1,"layout":"page","_id":"ck3jm8gvi0001z0bti5u81d3y","content":"<p>姓名：赵晨敏<br>性别：男<br>年龄：不详<br>性格：冷静、不爱交流<br>爱好：动漫、音乐、科幻电影<br>姓名：赵晨敏<br><img src=\"/blog/img/touxiang.jpg\" width=\"350\" height=\"350\" align=\"center\"><br>2012年，我第二次经历了高考失利。疲惫于复读的重压和无趣，心灰意冷的我做出了人生中第一个重大的错误决定：随便选一所大学，随便选一门专业，拿到大学毕业证再做打算。大学前两年，大学生活似乎有无穷的魔力充实着我的生活，然而平静下来之后更多的却是失落和彷徨。我依然清楚的记得那一年毕业季，学长们走出大学校园的时候，他们表情凝重，眼神中透露出对未来的迷茫。从他们的眼中我似乎看到了自己不远的将来。我告诉自己绝对不能这样下去。如果做点什么，俩年后我也还是这幅模样。<br>我个人性格比较孤僻，不擅长和人交流。本身又是理科出生。很久以前就有朋友半开玩笑的说，像你这样的，不去做程序员屈才了。对他们来说可能是在开玩笑，而我觉得，这条路倒也不失为一条坦途。从那以后，我就不时的在想，不如自学编程吧！<br>大三第一学期，我开始自学编程，虽然有之前的理科基础，但荒废了俩年之后，不得不承认理解起来还是非常艰难。我曾经试图自学类似c++之类的语言，但晦涩难通，于是转而研究入门简单的语言，于是，html + css + js成为了我的首选。我承认在选择的时候是草率了一些，但不久之后我就被这三种语言迷住了。他们简单明快，各有分工却能相辅相成，对当时的我来说震撼不小。我也越来越被js的逻辑以及css的表现吸引，无法自拔。<br>再对前端有了初步的了解之后，我希望能有更多的机会接触，于是我在大三后半学期的时候向校领导提出申请：我想去找工作，不愿意在学校里继续消磨时光。当中经历了一些困难，但终于还是同意了，然后，我就暂时离开了校园，开始了我的前端路。<br>不得不说，工作还是完全不好找的。当时不是毕业季，加上专业不对还没有毕业，俩个月的时间里，我吃尽了苦头。父母提议我去参加培训，但我当时对培训是反对的，几个月的时间从零基础到月入俩万，这种事情从某种程度上和传销一样不靠谱。就在这时候，我收到了一家小公司的面试邀请，同时还有3个竞争者。山西是煤炭大省，但由于煤行业不景气，很多公司选择转型，这一家公司就是这样的情况，他们处于转型初期，要求的技术水平不高，我大致是可以胜任的，但毕竟底子比不过其他三位竞争者，无奈之下，咬咬牙：我要工资700块，算实习。<br>我有了人生的第一份工作，虽然工资不高。但我家在太原，除去中午要吃饭，其余并没有开销，倒也可以接受。好的是，我终于有更多时间来学习和提高。那一年是我接触前端第一年，纯正的前端小白，对任何功能和效果都充满了好奇。也找了很多的视频和书籍，现在想来，可能最充实的还是那段时间。<br>就这样，我度过了大学最后一年，这一年对我来说意义非凡。我真正从一个新手菜鸟变成了老资格的前段开发工程师。自学使我能更快的接受新鲜的事物，包括逐渐流行起来的各种框架、组件和工具。我也经常会和别人开玩笑，你们做开发花钱去学，还学的不得要领；我，拿着工资学开发，事半功倍。你要问我工资多少？我才不会告诉你。<br>前端的方向越来越远，生态系统也越来越完善，尤其NodeJs的横空出世，更是改变了前端开发多少年的开发模式。这一切仿佛有着一种神奇的魔力吸引着我前进。我也相信自己可以在这条路上越走越远。    </p>\n","site":{"data":{}},"excerpt":"","more":"<p>姓名：赵晨敏<br>性别：男<br>年龄：不详<br>性格：冷静、不爱交流<br>爱好：动漫、音乐、科幻电影<br>姓名：赵晨敏<br><img src=\"/blog/img/touxiang.jpg\" width=\"350\" height=\"350\" align=\"center\"><br>2012年，我第二次经历了高考失利。疲惫于复读的重压和无趣，心灰意冷的我做出了人生中第一个重大的错误决定：随便选一所大学，随便选一门专业，拿到大学毕业证再做打算。大学前两年，大学生活似乎有无穷的魔力充实着我的生活，然而平静下来之后更多的却是失落和彷徨。我依然清楚的记得那一年毕业季，学长们走出大学校园的时候，他们表情凝重，眼神中透露出对未来的迷茫。从他们的眼中我似乎看到了自己不远的将来。我告诉自己绝对不能这样下去。如果做点什么，俩年后我也还是这幅模样。<br>我个人性格比较孤僻，不擅长和人交流。本身又是理科出生。很久以前就有朋友半开玩笑的说，像你这样的，不去做程序员屈才了。对他们来说可能是在开玩笑，而我觉得，这条路倒也不失为一条坦途。从那以后，我就不时的在想，不如自学编程吧！<br>大三第一学期，我开始自学编程，虽然有之前的理科基础，但荒废了俩年之后，不得不承认理解起来还是非常艰难。我曾经试图自学类似c++之类的语言，但晦涩难通，于是转而研究入门简单的语言，于是，html + css + js成为了我的首选。我承认在选择的时候是草率了一些，但不久之后我就被这三种语言迷住了。他们简单明快，各有分工却能相辅相成，对当时的我来说震撼不小。我也越来越被js的逻辑以及css的表现吸引，无法自拔。<br>再对前端有了初步的了解之后，我希望能有更多的机会接触，于是我在大三后半学期的时候向校领导提出申请：我想去找工作，不愿意在学校里继续消磨时光。当中经历了一些困难，但终于还是同意了，然后，我就暂时离开了校园，开始了我的前端路。<br>不得不说，工作还是完全不好找的。当时不是毕业季，加上专业不对还没有毕业，俩个月的时间里，我吃尽了苦头。父母提议我去参加培训，但我当时对培训是反对的，几个月的时间从零基础到月入俩万，这种事情从某种程度上和传销一样不靠谱。就在这时候，我收到了一家小公司的面试邀请，同时还有3个竞争者。山西是煤炭大省，但由于煤行业不景气，很多公司选择转型，这一家公司就是这样的情况，他们处于转型初期，要求的技术水平不高，我大致是可以胜任的，但毕竟底子比不过其他三位竞争者，无奈之下，咬咬牙：我要工资700块，算实习。<br>我有了人生的第一份工作，虽然工资不高。但我家在太原，除去中午要吃饭，其余并没有开销，倒也可以接受。好的是，我终于有更多时间来学习和提高。那一年是我接触前端第一年，纯正的前端小白，对任何功能和效果都充满了好奇。也找了很多的视频和书籍，现在想来，可能最充实的还是那段时间。<br>就这样，我度过了大学最后一年，这一年对我来说意义非凡。我真正从一个新手菜鸟变成了老资格的前段开发工程师。自学使我能更快的接受新鲜的事物，包括逐渐流行起来的各种框架、组件和工具。我也经常会和别人开玩笑，你们做开发花钱去学，还学的不得要领；我，拿着工资学开发，事半功倍。你要问我工资多少？我才不会告诉你。<br>前端的方向越来越远，生态系统也越来越完善，尤其NodeJs的横空出世，更是改变了前端开发多少年的开发模式。这一切仿佛有着一种神奇的魔力吸引着我前进。我也相信自己可以在这条路上越走越远。    </p>\n"},{"title":"文章分类","date":"2017-11-15T00:37:10.000Z","type":"categories","_content":"","source":"categories/index.md","raw":"title: 文章分类\ndate: 2017-11-15 08:37:10\ntype: \"categories\"\n---\n","updated":"2019-09-29T11:22:34.502Z","path":"categories/index.html","comments":1,"layout":"page","_id":"ck3jm8gvk0003z0bto7ufnxy8","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"标签","date":"2017-11-06T06:45:37.000Z","type":"tags","_content":"","source":"tags/index.md","raw":"title: 标签\ndate: 2017-11-06 14:45:37\ntype: \"tags\"\n---\n","updated":"2019-09-29T11:22:34.512Z","path":"tags/index.html","comments":1,"layout":"page","_id":"ck3jm8gvn0007z0btjwm1q9xw","content":"","site":{"data":{}},"excerpt":"","more":""}],"Post":[{"title":"video小记","date":"2018-01-24T07:43:53.000Z","description":"video标签的属性和方法","_content":"\n> html5新增的audio和video有很多的相同之处，本节中的绝大部分属性和方法在audio同样适用。\n\n## video标签的使用\n如果你想使用视频，最简单的方法:\n```\n <video id=\"video\" src=\"movie.mp4\"></video>\n```\n但在大多数情况下不建议这样使用，因为视频格式可能不支持。所以你要写成这样:\n```\n <video id=\"video\">\n    <source src=\"movie.mp4\" type=\"video/mp4\">\n    <source src=\"movie.ogg\" type=\"video/ogg\">\n    <source src=\"movie.webm\" type=\"video/webm\">\n    ...\n  </video>\n```\n这样你可以使用多种视频格式，如果不支持会尝试下一种格式。**目前，video元素支持三种视频格式：MP4、WebM、Ogg。**\n\n## video标签的属性\n本质上，video对象也是一个普通的DOM对象，你可以像选取普通的DOM对象一样选中它:\n```\n//  javascript\nvar video = document.getElementById('cideo');\n\n//  jquery\nvar video =  $('#video').get(0);\n```\nvideo标签有以下属性:\n+ autoplay: 如果出现该属性，则视频在就绪后马上播放\n+ controls: 如果出现该属性，则向用户显示控件\n+ width: 视频宽度\n+ height: 视频高度\n+ src: 视频的路径(video标签定义的路径)\n+ poster: 视频封面，没有播放时显示的图片\n+ preload: 如果出现该属性，则视频在页面加载时进行加载，并预备播放。如果使用 \"autoplay\"，则忽略该属性\n+ muted: 如果出现该属性，视频的音频输出为静音。\n+ loop: 如果出现该属性，则当媒介文件完成播放后再次开始播放\n\n## video对象的属性\n+ audioTracks: 返回表示可用音频轨道的 AudioTrackList 对象。\n+ autoplay: 设置或返回是否在就绪（加载完成）后随即播放视频。\n+ buffered: 返回表示视频已缓冲部分的 TimeRanges 对象。\n+ controller: 返回表示视频当前媒体控制器的 MediaController 对象。\n+ controls: 设置或返回视频是否应该显示控件（比如播放/暂停等）。\n+ crossOrigin: 设置或返回视频的 CORS 设置。\n+ currentSrc: 返回当前视频的 URL。\n+ currentTime: 设置或返回视频中的当前播放位置（以秒计）。\n+ defaultMuted: 设置或返回视频默认是否静音。\n+ defaultPlaybackRate: 设置或返回视频的默认播放速度。\n+ duration: 返回视频的长度（以秒计）。\n+ ended: 返回视频的播放是否已结束。\n+ error: 返回表示视频错误状态的 MediaError 对象。\n+ height: 设置或返回视频的 height 属性的值。\n+ loop: 设置或返回视频是否应在结束时再次播放。\n+ mediaGroup: 设置或返回视频所属媒介组合的名称。\n+ muted: 设置或返回是否关闭声音。\n+ networkState: 返回视频的当前网络状态。\n+ paused: 设置或返回视频是否暂停。\n+ playbackRate: 设置或返回视频播放的速度。\n+ played: 返回表示视频已播放部分的 TimeRanges 对象。\n+ poster: 设置或返回视频的 poster 属性的值。\n+ preload: 设置或返回视频的 preload 属性的值。\n+ readyState: 返回视频当前的就绪状态。\n+ seekable: 返回表示视频可寻址部分的 TimeRanges 对象。\n+ seeking: 返回用户当前是否正在视频中进行查找。\n+ src: 设置或返回视频的 src 属性的值。\n+ startDate: 返回表示当前时间偏移的 Date 对象。\n+ textTracks: 返回表示可用文本轨道的 TextTrackList 对象。\n+ videoTracks: 返回表示可用视频轨道的 VideoTrackList 对象。\n+ volume: 设置或返回视频的音量。\n+ width: 设置或返回视频的 width 属性的值。\n\n## video对象的方法\n+ video.play(): 开始播放\n+ video.pause(): 暂停播放\n\n## video对象的事件\n+ video.onloadstart = fn(): 客户端开始请求数据时触发\n+ video.onprogress = fn(): 客户端正在请求数据时触发\n+ video.onsuspend = fn(): 延迟下载时触发\n+ video.onabort = fn(): 客户端主动终止下载时触发（不是因为错误引起）\n+ video.onerror = fn(): 请求数据时遇到错误时触发\n+ video.onstalled = fn(): 网速失速时触发\n+ video.onplay = fn(): 开始播放时触发\n+ video.onpause = fn(): 暂停时触发\n+ video.onloadedmetadata = fn(): 成功获取资源长度\n+ video.onloadeddata = fn(): 当前帧的数据已加载，但没有足够的数据来播放指定视频的下一帧时触发\n+ video.onwaiting = fn(): 等待数据，并非错误\n+ video.onplaying = fn(): 开始回放时触发\n+ video.oncanplay = fn(): 可以播放，但中途可能因为加载而暂停\n+ video.oncanplaythrough = fn(): 可以播放，视屏全部加载完毕\n+ video.onseeking = fn(): 寻找资源中不断触发\n+ video.onseeked = fn(): 寻找资源完毕时触发\n+ video.ontimeupdate = fn(): 播放时间改变时触发\n+ video.onended = fn(): 播放结束时触发\n+ video.onratechange = fn(): 播放速率改变时触发\n+ video.ondurationchange = fn(): 资源长度改变时触发\n+ video.onvolumechange = fn(): 音量改变时触发\n\n当视频处于加载过程中时，会依次触发以下事件:\n+ video.onloadstart\n+ video.ondurationchange\n+ video.onloadedmetadata\n+ video.onloadeddata\n+ video.onprogress\n+ video.oncanplay\n+ video.oncanplaythrough\n","source":"_posts/Video小记.md","raw":"title: video小记\ntags: [video]\ndate: 2018-01-24 15:43:53\ncategories: [video]\ndescription: video标签的属性和方法\n---\n\n> html5新增的audio和video有很多的相同之处，本节中的绝大部分属性和方法在audio同样适用。\n\n## video标签的使用\n如果你想使用视频，最简单的方法:\n```\n <video id=\"video\" src=\"movie.mp4\"></video>\n```\n但在大多数情况下不建议这样使用，因为视频格式可能不支持。所以你要写成这样:\n```\n <video id=\"video\">\n    <source src=\"movie.mp4\" type=\"video/mp4\">\n    <source src=\"movie.ogg\" type=\"video/ogg\">\n    <source src=\"movie.webm\" type=\"video/webm\">\n    ...\n  </video>\n```\n这样你可以使用多种视频格式，如果不支持会尝试下一种格式。**目前，video元素支持三种视频格式：MP4、WebM、Ogg。**\n\n## video标签的属性\n本质上，video对象也是一个普通的DOM对象，你可以像选取普通的DOM对象一样选中它:\n```\n//  javascript\nvar video = document.getElementById('cideo');\n\n//  jquery\nvar video =  $('#video').get(0);\n```\nvideo标签有以下属性:\n+ autoplay: 如果出现该属性，则视频在就绪后马上播放\n+ controls: 如果出现该属性，则向用户显示控件\n+ width: 视频宽度\n+ height: 视频高度\n+ src: 视频的路径(video标签定义的路径)\n+ poster: 视频封面，没有播放时显示的图片\n+ preload: 如果出现该属性，则视频在页面加载时进行加载，并预备播放。如果使用 \"autoplay\"，则忽略该属性\n+ muted: 如果出现该属性，视频的音频输出为静音。\n+ loop: 如果出现该属性，则当媒介文件完成播放后再次开始播放\n\n## video对象的属性\n+ audioTracks: 返回表示可用音频轨道的 AudioTrackList 对象。\n+ autoplay: 设置或返回是否在就绪（加载完成）后随即播放视频。\n+ buffered: 返回表示视频已缓冲部分的 TimeRanges 对象。\n+ controller: 返回表示视频当前媒体控制器的 MediaController 对象。\n+ controls: 设置或返回视频是否应该显示控件（比如播放/暂停等）。\n+ crossOrigin: 设置或返回视频的 CORS 设置。\n+ currentSrc: 返回当前视频的 URL。\n+ currentTime: 设置或返回视频中的当前播放位置（以秒计）。\n+ defaultMuted: 设置或返回视频默认是否静音。\n+ defaultPlaybackRate: 设置或返回视频的默认播放速度。\n+ duration: 返回视频的长度（以秒计）。\n+ ended: 返回视频的播放是否已结束。\n+ error: 返回表示视频错误状态的 MediaError 对象。\n+ height: 设置或返回视频的 height 属性的值。\n+ loop: 设置或返回视频是否应在结束时再次播放。\n+ mediaGroup: 设置或返回视频所属媒介组合的名称。\n+ muted: 设置或返回是否关闭声音。\n+ networkState: 返回视频的当前网络状态。\n+ paused: 设置或返回视频是否暂停。\n+ playbackRate: 设置或返回视频播放的速度。\n+ played: 返回表示视频已播放部分的 TimeRanges 对象。\n+ poster: 设置或返回视频的 poster 属性的值。\n+ preload: 设置或返回视频的 preload 属性的值。\n+ readyState: 返回视频当前的就绪状态。\n+ seekable: 返回表示视频可寻址部分的 TimeRanges 对象。\n+ seeking: 返回用户当前是否正在视频中进行查找。\n+ src: 设置或返回视频的 src 属性的值。\n+ startDate: 返回表示当前时间偏移的 Date 对象。\n+ textTracks: 返回表示可用文本轨道的 TextTrackList 对象。\n+ videoTracks: 返回表示可用视频轨道的 VideoTrackList 对象。\n+ volume: 设置或返回视频的音量。\n+ width: 设置或返回视频的 width 属性的值。\n\n## video对象的方法\n+ video.play(): 开始播放\n+ video.pause(): 暂停播放\n\n## video对象的事件\n+ video.onloadstart = fn(): 客户端开始请求数据时触发\n+ video.onprogress = fn(): 客户端正在请求数据时触发\n+ video.onsuspend = fn(): 延迟下载时触发\n+ video.onabort = fn(): 客户端主动终止下载时触发（不是因为错误引起）\n+ video.onerror = fn(): 请求数据时遇到错误时触发\n+ video.onstalled = fn(): 网速失速时触发\n+ video.onplay = fn(): 开始播放时触发\n+ video.onpause = fn(): 暂停时触发\n+ video.onloadedmetadata = fn(): 成功获取资源长度\n+ video.onloadeddata = fn(): 当前帧的数据已加载，但没有足够的数据来播放指定视频的下一帧时触发\n+ video.onwaiting = fn(): 等待数据，并非错误\n+ video.onplaying = fn(): 开始回放时触发\n+ video.oncanplay = fn(): 可以播放，但中途可能因为加载而暂停\n+ video.oncanplaythrough = fn(): 可以播放，视屏全部加载完毕\n+ video.onseeking = fn(): 寻找资源中不断触发\n+ video.onseeked = fn(): 寻找资源完毕时触发\n+ video.ontimeupdate = fn(): 播放时间改变时触发\n+ video.onended = fn(): 播放结束时触发\n+ video.onratechange = fn(): 播放速率改变时触发\n+ video.ondurationchange = fn(): 资源长度改变时触发\n+ video.onvolumechange = fn(): 音量改变时触发\n\n当视频处于加载过程中时，会依次触发以下事件:\n+ video.onloadstart\n+ video.ondurationchange\n+ video.onloadedmetadata\n+ video.onloadeddata\n+ video.onprogress\n+ video.oncanplay\n+ video.oncanplaythrough\n","slug":"Video小记","published":1,"updated":"2019-09-29T11:22:34.498Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck3jm8gvd0000z0bt155jb5a2","content":"<blockquote>\n<p>html5新增的audio和video有很多的相同之处，本节中的绝大部分属性和方法在audio同样适用。</p>\n</blockquote>\n<h2 id=\"video标签的使用\"><a href=\"#video标签的使用\" class=\"headerlink\" title=\"video标签的使用\"></a>video标签的使用</h2><p>如果你想使用视频，最简单的方法:<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;video id=&quot;video&quot; src=&quot;movie.mp4&quot;&gt;&lt;/video&gt;</span><br></pre></td></tr></table></figure></p>\n<p>但在大多数情况下不建议这样使用，因为视频格式可能不支持。所以你要写成这样:<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;video id=&quot;video&quot;&gt;</span><br><span class=\"line\">   &lt;source src=&quot;movie.mp4&quot; type=&quot;video/mp4&quot;&gt;</span><br><span class=\"line\">   &lt;source src=&quot;movie.ogg&quot; type=&quot;video/ogg&quot;&gt;</span><br><span class=\"line\">   &lt;source src=&quot;movie.webm&quot; type=&quot;video/webm&quot;&gt;</span><br><span class=\"line\">   ...</span><br><span class=\"line\"> &lt;/video&gt;</span><br></pre></td></tr></table></figure></p>\n<p>这样你可以使用多种视频格式，如果不支持会尝试下一种格式。<strong>目前，video元素支持三种视频格式：MP4、WebM、Ogg。</strong></p>\n<h2 id=\"video标签的属性\"><a href=\"#video标签的属性\" class=\"headerlink\" title=\"video标签的属性\"></a>video标签的属性</h2><p>本质上，video对象也是一个普通的DOM对象，你可以像选取普通的DOM对象一样选中它:<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">//  javascript</span><br><span class=\"line\">var video = document.getElementById(&apos;cideo&apos;);</span><br><span class=\"line\"></span><br><span class=\"line\">//  jquery</span><br><span class=\"line\">var video =  $(&apos;#video&apos;).get(0);</span><br></pre></td></tr></table></figure></p>\n<p>video标签有以下属性:</p>\n<ul>\n<li>autoplay: 如果出现该属性，则视频在就绪后马上播放</li>\n<li>controls: 如果出现该属性，则向用户显示控件</li>\n<li>width: 视频宽度</li>\n<li>height: 视频高度</li>\n<li>src: 视频的路径(video标签定义的路径)</li>\n<li>poster: 视频封面，没有播放时显示的图片</li>\n<li>preload: 如果出现该属性，则视频在页面加载时进行加载，并预备播放。如果使用 “autoplay”，则忽略该属性</li>\n<li>muted: 如果出现该属性，视频的音频输出为静音。</li>\n<li>loop: 如果出现该属性，则当媒介文件完成播放后再次开始播放</li>\n</ul>\n<h2 id=\"video对象的属性\"><a href=\"#video对象的属性\" class=\"headerlink\" title=\"video对象的属性\"></a>video对象的属性</h2><ul>\n<li>audioTracks: 返回表示可用音频轨道的 AudioTrackList 对象。</li>\n<li>autoplay: 设置或返回是否在就绪（加载完成）后随即播放视频。</li>\n<li>buffered: 返回表示视频已缓冲部分的 TimeRanges 对象。</li>\n<li>controller: 返回表示视频当前媒体控制器的 MediaController 对象。</li>\n<li>controls: 设置或返回视频是否应该显示控件（比如播放/暂停等）。</li>\n<li>crossOrigin: 设置或返回视频的 CORS 设置。</li>\n<li>currentSrc: 返回当前视频的 URL。</li>\n<li>currentTime: 设置或返回视频中的当前播放位置（以秒计）。</li>\n<li>defaultMuted: 设置或返回视频默认是否静音。</li>\n<li>defaultPlaybackRate: 设置或返回视频的默认播放速度。</li>\n<li>duration: 返回视频的长度（以秒计）。</li>\n<li>ended: 返回视频的播放是否已结束。</li>\n<li>error: 返回表示视频错误状态的 MediaError 对象。</li>\n<li>height: 设置或返回视频的 height 属性的值。</li>\n<li>loop: 设置或返回视频是否应在结束时再次播放。</li>\n<li>mediaGroup: 设置或返回视频所属媒介组合的名称。</li>\n<li>muted: 设置或返回是否关闭声音。</li>\n<li>networkState: 返回视频的当前网络状态。</li>\n<li>paused: 设置或返回视频是否暂停。</li>\n<li>playbackRate: 设置或返回视频播放的速度。</li>\n<li>played: 返回表示视频已播放部分的 TimeRanges 对象。</li>\n<li>poster: 设置或返回视频的 poster 属性的值。</li>\n<li>preload: 设置或返回视频的 preload 属性的值。</li>\n<li>readyState: 返回视频当前的就绪状态。</li>\n<li>seekable: 返回表示视频可寻址部分的 TimeRanges 对象。</li>\n<li>seeking: 返回用户当前是否正在视频中进行查找。</li>\n<li>src: 设置或返回视频的 src 属性的值。</li>\n<li>startDate: 返回表示当前时间偏移的 Date 对象。</li>\n<li>textTracks: 返回表示可用文本轨道的 TextTrackList 对象。</li>\n<li>videoTracks: 返回表示可用视频轨道的 VideoTrackList 对象。</li>\n<li>volume: 设置或返回视频的音量。</li>\n<li>width: 设置或返回视频的 width 属性的值。</li>\n</ul>\n<h2 id=\"video对象的方法\"><a href=\"#video对象的方法\" class=\"headerlink\" title=\"video对象的方法\"></a>video对象的方法</h2><ul>\n<li>video.play(): 开始播放</li>\n<li>video.pause(): 暂停播放</li>\n</ul>\n<h2 id=\"video对象的事件\"><a href=\"#video对象的事件\" class=\"headerlink\" title=\"video对象的事件\"></a>video对象的事件</h2><ul>\n<li>video.onloadstart = fn(): 客户端开始请求数据时触发</li>\n<li>video.onprogress = fn(): 客户端正在请求数据时触发</li>\n<li>video.onsuspend = fn(): 延迟下载时触发</li>\n<li>video.onabort = fn(): 客户端主动终止下载时触发（不是因为错误引起）</li>\n<li>video.onerror = fn(): 请求数据时遇到错误时触发</li>\n<li>video.onstalled = fn(): 网速失速时触发</li>\n<li>video.onplay = fn(): 开始播放时触发</li>\n<li>video.onpause = fn(): 暂停时触发</li>\n<li>video.onloadedmetadata = fn(): 成功获取资源长度</li>\n<li>video.onloadeddata = fn(): 当前帧的数据已加载，但没有足够的数据来播放指定视频的下一帧时触发</li>\n<li>video.onwaiting = fn(): 等待数据，并非错误</li>\n<li>video.onplaying = fn(): 开始回放时触发</li>\n<li>video.oncanplay = fn(): 可以播放，但中途可能因为加载而暂停</li>\n<li>video.oncanplaythrough = fn(): 可以播放，视屏全部加载完毕</li>\n<li>video.onseeking = fn(): 寻找资源中不断触发</li>\n<li>video.onseeked = fn(): 寻找资源完毕时触发</li>\n<li>video.ontimeupdate = fn(): 播放时间改变时触发</li>\n<li>video.onended = fn(): 播放结束时触发</li>\n<li>video.onratechange = fn(): 播放速率改变时触发</li>\n<li>video.ondurationchange = fn(): 资源长度改变时触发</li>\n<li>video.onvolumechange = fn(): 音量改变时触发</li>\n</ul>\n<p>当视频处于加载过程中时，会依次触发以下事件:</p>\n<ul>\n<li>video.onloadstart</li>\n<li>video.ondurationchange</li>\n<li>video.onloadedmetadata</li>\n<li>video.onloadeddata</li>\n<li>video.onprogress</li>\n<li>video.oncanplay</li>\n<li>video.oncanplaythrough</li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<blockquote>\n<p>html5新增的audio和video有很多的相同之处，本节中的绝大部分属性和方法在audio同样适用。</p>\n</blockquote>\n<h2 id=\"video标签的使用\"><a href=\"#video标签的使用\" class=\"headerlink\" title=\"video标签的使用\"></a>video标签的使用</h2><p>如果你想使用视频，最简单的方法:<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;video id=&quot;video&quot; src=&quot;movie.mp4&quot;&gt;&lt;/video&gt;</span><br></pre></td></tr></table></figure></p>\n<p>但在大多数情况下不建议这样使用，因为视频格式可能不支持。所以你要写成这样:<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;video id=&quot;video&quot;&gt;</span><br><span class=\"line\">   &lt;source src=&quot;movie.mp4&quot; type=&quot;video/mp4&quot;&gt;</span><br><span class=\"line\">   &lt;source src=&quot;movie.ogg&quot; type=&quot;video/ogg&quot;&gt;</span><br><span class=\"line\">   &lt;source src=&quot;movie.webm&quot; type=&quot;video/webm&quot;&gt;</span><br><span class=\"line\">   ...</span><br><span class=\"line\"> &lt;/video&gt;</span><br></pre></td></tr></table></figure></p>\n<p>这样你可以使用多种视频格式，如果不支持会尝试下一种格式。<strong>目前，video元素支持三种视频格式：MP4、WebM、Ogg。</strong></p>\n<h2 id=\"video标签的属性\"><a href=\"#video标签的属性\" class=\"headerlink\" title=\"video标签的属性\"></a>video标签的属性</h2><p>本质上，video对象也是一个普通的DOM对象，你可以像选取普通的DOM对象一样选中它:<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">//  javascript</span><br><span class=\"line\">var video = document.getElementById(&apos;cideo&apos;);</span><br><span class=\"line\"></span><br><span class=\"line\">//  jquery</span><br><span class=\"line\">var video =  $(&apos;#video&apos;).get(0);</span><br></pre></td></tr></table></figure></p>\n<p>video标签有以下属性:</p>\n<ul>\n<li>autoplay: 如果出现该属性，则视频在就绪后马上播放</li>\n<li>controls: 如果出现该属性，则向用户显示控件</li>\n<li>width: 视频宽度</li>\n<li>height: 视频高度</li>\n<li>src: 视频的路径(video标签定义的路径)</li>\n<li>poster: 视频封面，没有播放时显示的图片</li>\n<li>preload: 如果出现该属性，则视频在页面加载时进行加载，并预备播放。如果使用 “autoplay”，则忽略该属性</li>\n<li>muted: 如果出现该属性，视频的音频输出为静音。</li>\n<li>loop: 如果出现该属性，则当媒介文件完成播放后再次开始播放</li>\n</ul>\n<h2 id=\"video对象的属性\"><a href=\"#video对象的属性\" class=\"headerlink\" title=\"video对象的属性\"></a>video对象的属性</h2><ul>\n<li>audioTracks: 返回表示可用音频轨道的 AudioTrackList 对象。</li>\n<li>autoplay: 设置或返回是否在就绪（加载完成）后随即播放视频。</li>\n<li>buffered: 返回表示视频已缓冲部分的 TimeRanges 对象。</li>\n<li>controller: 返回表示视频当前媒体控制器的 MediaController 对象。</li>\n<li>controls: 设置或返回视频是否应该显示控件（比如播放/暂停等）。</li>\n<li>crossOrigin: 设置或返回视频的 CORS 设置。</li>\n<li>currentSrc: 返回当前视频的 URL。</li>\n<li>currentTime: 设置或返回视频中的当前播放位置（以秒计）。</li>\n<li>defaultMuted: 设置或返回视频默认是否静音。</li>\n<li>defaultPlaybackRate: 设置或返回视频的默认播放速度。</li>\n<li>duration: 返回视频的长度（以秒计）。</li>\n<li>ended: 返回视频的播放是否已结束。</li>\n<li>error: 返回表示视频错误状态的 MediaError 对象。</li>\n<li>height: 设置或返回视频的 height 属性的值。</li>\n<li>loop: 设置或返回视频是否应在结束时再次播放。</li>\n<li>mediaGroup: 设置或返回视频所属媒介组合的名称。</li>\n<li>muted: 设置或返回是否关闭声音。</li>\n<li>networkState: 返回视频的当前网络状态。</li>\n<li>paused: 设置或返回视频是否暂停。</li>\n<li>playbackRate: 设置或返回视频播放的速度。</li>\n<li>played: 返回表示视频已播放部分的 TimeRanges 对象。</li>\n<li>poster: 设置或返回视频的 poster 属性的值。</li>\n<li>preload: 设置或返回视频的 preload 属性的值。</li>\n<li>readyState: 返回视频当前的就绪状态。</li>\n<li>seekable: 返回表示视频可寻址部分的 TimeRanges 对象。</li>\n<li>seeking: 返回用户当前是否正在视频中进行查找。</li>\n<li>src: 设置或返回视频的 src 属性的值。</li>\n<li>startDate: 返回表示当前时间偏移的 Date 对象。</li>\n<li>textTracks: 返回表示可用文本轨道的 TextTrackList 对象。</li>\n<li>videoTracks: 返回表示可用视频轨道的 VideoTrackList 对象。</li>\n<li>volume: 设置或返回视频的音量。</li>\n<li>width: 设置或返回视频的 width 属性的值。</li>\n</ul>\n<h2 id=\"video对象的方法\"><a href=\"#video对象的方法\" class=\"headerlink\" title=\"video对象的方法\"></a>video对象的方法</h2><ul>\n<li>video.play(): 开始播放</li>\n<li>video.pause(): 暂停播放</li>\n</ul>\n<h2 id=\"video对象的事件\"><a href=\"#video对象的事件\" class=\"headerlink\" title=\"video对象的事件\"></a>video对象的事件</h2><ul>\n<li>video.onloadstart = fn(): 客户端开始请求数据时触发</li>\n<li>video.onprogress = fn(): 客户端正在请求数据时触发</li>\n<li>video.onsuspend = fn(): 延迟下载时触发</li>\n<li>video.onabort = fn(): 客户端主动终止下载时触发（不是因为错误引起）</li>\n<li>video.onerror = fn(): 请求数据时遇到错误时触发</li>\n<li>video.onstalled = fn(): 网速失速时触发</li>\n<li>video.onplay = fn(): 开始播放时触发</li>\n<li>video.onpause = fn(): 暂停时触发</li>\n<li>video.onloadedmetadata = fn(): 成功获取资源长度</li>\n<li>video.onloadeddata = fn(): 当前帧的数据已加载，但没有足够的数据来播放指定视频的下一帧时触发</li>\n<li>video.onwaiting = fn(): 等待数据，并非错误</li>\n<li>video.onplaying = fn(): 开始回放时触发</li>\n<li>video.oncanplay = fn(): 可以播放，但中途可能因为加载而暂停</li>\n<li>video.oncanplaythrough = fn(): 可以播放，视屏全部加载完毕</li>\n<li>video.onseeking = fn(): 寻找资源中不断触发</li>\n<li>video.onseeked = fn(): 寻找资源完毕时触发</li>\n<li>video.ontimeupdate = fn(): 播放时间改变时触发</li>\n<li>video.onended = fn(): 播放结束时触发</li>\n<li>video.onratechange = fn(): 播放速率改变时触发</li>\n<li>video.ondurationchange = fn(): 资源长度改变时触发</li>\n<li>video.onvolumechange = fn(): 音量改变时触发</li>\n</ul>\n<p>当视频处于加载过程中时，会依次触发以下事件:</p>\n<ul>\n<li>video.onloadstart</li>\n<li>video.ondurationchange</li>\n<li>video.onloadedmetadata</li>\n<li>video.onloadeddata</li>\n<li>video.onprogress</li>\n<li>video.oncanplay</li>\n<li>video.oncanplaythrough</li>\n</ul>\n"},{"title":"Vue Cli 3 使用感受","date":"2018-12-15T06:44:23.000Z","description":"Vue Cli 3 使用心得","_content":"早就听说 vue-cli 有了 3.x 版本，但一直没机会实践。一直到双十一有一个小活动，尝试了一下。感觉到了极度的舒适。新的脚手架做了非常大的修改，具体为：\n+ 删除了 config 和 build 文件夹，改为使用配置文件 vue.config.js，并同时支持**分模式**、**分环境**、**分项目**进行配置，简单的说就是之前脚手架中需要配置在 config 和 build 中的配置，都靠着一个文件来配置，省去了我们在 build 和 config 文件中找配置的地方。下面总结一下主要的变化。**我这里只是做一个总结，并没有（也没必要）添加详细的讲解（反正也不可能比官网讲的清楚）**\n\n## 使用图形化界面\nvue-cli3 新增了基于 MUI 的可视化工具，开发者可以更加直观方便（傻瓜式）的创建、管理 vue 项目，输入`vue ui`就可以打开可视化窗口。\n\n## 分模式 && 分环境\nvue-cli3 增加了 .env 文件用来直观方便的区分环境，每个环境文件包含对应环境的模式和对应环境下特有的环境变量。这些环境变量会在相对环境打包中被载入。具体的方法参考[官网教程](https://cli.vuejs.org/zh/guide/mode-and-env.html#%E6%A8%A1%E5%BC%8F)。\n\n## 分项目\nvue-cli3 支持直接创建多页面应用（multi-page-app），只需要在vue.config.js中配置pages参数。\n具体的配置方法参见[官网教程](https://cli.vuejs.org/zh/config/#pages)。\n\n## 插件\nvue-cli3 使用了一套基于插件的架构。如果你查阅一个新创建项目的 package.json，就会发现依赖都是以 @vue/cli-plugin- 开头的。插件可以修改 webpack 的内部配置，也可以向 vue-cli-service 注入命令。在项目创建的过程中，绝大部分列出的特性都是通过插件来实现的。基于插件的架构使得 Vue CLI 灵活且可扩展。如果你对开发一个插件感兴趣，请翻阅插件[开发指南](https://cli.vuejs.org/zh/dev-guide/plugin-dev.html#%E6%A0%B8%E5%BF%83%E6%A6%82%E5%BF%B5)。\n","source":"_posts/Vue-Cli-3-使用感受.md","raw":"title: Vue Cli 3 使用感受\ntags: [vue]\ndate: 2018-12-15 14:44:23\ncategories: [vue]\ndescription: Vue Cli 3 使用心得\n---\n早就听说 vue-cli 有了 3.x 版本，但一直没机会实践。一直到双十一有一个小活动，尝试了一下。感觉到了极度的舒适。新的脚手架做了非常大的修改，具体为：\n+ 删除了 config 和 build 文件夹，改为使用配置文件 vue.config.js，并同时支持**分模式**、**分环境**、**分项目**进行配置，简单的说就是之前脚手架中需要配置在 config 和 build 中的配置，都靠着一个文件来配置，省去了我们在 build 和 config 文件中找配置的地方。下面总结一下主要的变化。**我这里只是做一个总结，并没有（也没必要）添加详细的讲解（反正也不可能比官网讲的清楚）**\n\n## 使用图形化界面\nvue-cli3 新增了基于 MUI 的可视化工具，开发者可以更加直观方便（傻瓜式）的创建、管理 vue 项目，输入`vue ui`就可以打开可视化窗口。\n\n## 分模式 && 分环境\nvue-cli3 增加了 .env 文件用来直观方便的区分环境，每个环境文件包含对应环境的模式和对应环境下特有的环境变量。这些环境变量会在相对环境打包中被载入。具体的方法参考[官网教程](https://cli.vuejs.org/zh/guide/mode-and-env.html#%E6%A8%A1%E5%BC%8F)。\n\n## 分项目\nvue-cli3 支持直接创建多页面应用（multi-page-app），只需要在vue.config.js中配置pages参数。\n具体的配置方法参见[官网教程](https://cli.vuejs.org/zh/config/#pages)。\n\n## 插件\nvue-cli3 使用了一套基于插件的架构。如果你查阅一个新创建项目的 package.json，就会发现依赖都是以 @vue/cli-plugin- 开头的。插件可以修改 webpack 的内部配置，也可以向 vue-cli-service 注入命令。在项目创建的过程中，绝大部分列出的特性都是通过插件来实现的。基于插件的架构使得 Vue CLI 灵活且可扩展。如果你对开发一个插件感兴趣，请翻阅插件[开发指南](https://cli.vuejs.org/zh/dev-guide/plugin-dev.html#%E6%A0%B8%E5%BF%83%E6%A6%82%E5%BF%B5)。\n","slug":"Vue-Cli-3-使用感受","published":1,"updated":"2019-09-29T11:22:34.498Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck3jm8gvj0002z0bt18kllm6u","content":"<p>早就听说 vue-cli 有了 3.x 版本，但一直没机会实践。一直到双十一有一个小活动，尝试了一下。感觉到了极度的舒适。新的脚手架做了非常大的修改，具体为：</p>\n<ul>\n<li>删除了 config 和 build 文件夹，改为使用配置文件 vue.config.js，并同时支持<strong>分模式</strong>、<strong>分环境</strong>、<strong>分项目</strong>进行配置，简单的说就是之前脚手架中需要配置在 config 和 build 中的配置，都靠着一个文件来配置，省去了我们在 build 和 config 文件中找配置的地方。下面总结一下主要的变化。<strong>我这里只是做一个总结，并没有（也没必要）添加详细的讲解（反正也不可能比官网讲的清楚）</strong></li>\n</ul>\n<h2 id=\"使用图形化界面\"><a href=\"#使用图形化界面\" class=\"headerlink\" title=\"使用图形化界面\"></a>使用图形化界面</h2><p>vue-cli3 新增了基于 MUI 的可视化工具，开发者可以更加直观方便（傻瓜式）的创建、管理 vue 项目，输入<code>vue ui</code>就可以打开可视化窗口。</p>\n<h2 id=\"分模式-amp-amp-分环境\"><a href=\"#分模式-amp-amp-分环境\" class=\"headerlink\" title=\"分模式 &amp;&amp; 分环境\"></a>分模式 &amp;&amp; 分环境</h2><p>vue-cli3 增加了 .env 文件用来直观方便的区分环境，每个环境文件包含对应环境的模式和对应环境下特有的环境变量。这些环境变量会在相对环境打包中被载入。具体的方法参考<a href=\"https://cli.vuejs.org/zh/guide/mode-and-env.html#%E6%A8%A1%E5%BC%8F\" target=\"_blank\" rel=\"noopener\">官网教程</a>。</p>\n<h2 id=\"分项目\"><a href=\"#分项目\" class=\"headerlink\" title=\"分项目\"></a>分项目</h2><p>vue-cli3 支持直接创建多页面应用（multi-page-app），只需要在vue.config.js中配置pages参数。<br>具体的配置方法参见<a href=\"https://cli.vuejs.org/zh/config/#pages\" target=\"_blank\" rel=\"noopener\">官网教程</a>。</p>\n<h2 id=\"插件\"><a href=\"#插件\" class=\"headerlink\" title=\"插件\"></a>插件</h2><p>vue-cli3 使用了一套基于插件的架构。如果你查阅一个新创建项目的 package.json，就会发现依赖都是以 @vue/cli-plugin- 开头的。插件可以修改 webpack 的内部配置，也可以向 vue-cli-service 注入命令。在项目创建的过程中，绝大部分列出的特性都是通过插件来实现的。基于插件的架构使得 Vue CLI 灵活且可扩展。如果你对开发一个插件感兴趣，请翻阅插件<a href=\"https://cli.vuejs.org/zh/dev-guide/plugin-dev.html#%E6%A0%B8%E5%BF%83%E6%A6%82%E5%BF%B5\" target=\"_blank\" rel=\"noopener\">开发指南</a>。</p>\n","site":{"data":{}},"excerpt":"","more":"<p>早就听说 vue-cli 有了 3.x 版本，但一直没机会实践。一直到双十一有一个小活动，尝试了一下。感觉到了极度的舒适。新的脚手架做了非常大的修改，具体为：</p>\n<ul>\n<li>删除了 config 和 build 文件夹，改为使用配置文件 vue.config.js，并同时支持<strong>分模式</strong>、<strong>分环境</strong>、<strong>分项目</strong>进行配置，简单的说就是之前脚手架中需要配置在 config 和 build 中的配置，都靠着一个文件来配置，省去了我们在 build 和 config 文件中找配置的地方。下面总结一下主要的变化。<strong>我这里只是做一个总结，并没有（也没必要）添加详细的讲解（反正也不可能比官网讲的清楚）</strong></li>\n</ul>\n<h2 id=\"使用图形化界面\"><a href=\"#使用图形化界面\" class=\"headerlink\" title=\"使用图形化界面\"></a>使用图形化界面</h2><p>vue-cli3 新增了基于 MUI 的可视化工具，开发者可以更加直观方便（傻瓜式）的创建、管理 vue 项目，输入<code>vue ui</code>就可以打开可视化窗口。</p>\n<h2 id=\"分模式-amp-amp-分环境\"><a href=\"#分模式-amp-amp-分环境\" class=\"headerlink\" title=\"分模式 &amp;&amp; 分环境\"></a>分模式 &amp;&amp; 分环境</h2><p>vue-cli3 增加了 .env 文件用来直观方便的区分环境，每个环境文件包含对应环境的模式和对应环境下特有的环境变量。这些环境变量会在相对环境打包中被载入。具体的方法参考<a href=\"https://cli.vuejs.org/zh/guide/mode-and-env.html#%E6%A8%A1%E5%BC%8F\" target=\"_blank\" rel=\"noopener\">官网教程</a>。</p>\n<h2 id=\"分项目\"><a href=\"#分项目\" class=\"headerlink\" title=\"分项目\"></a>分项目</h2><p>vue-cli3 支持直接创建多页面应用（multi-page-app），只需要在vue.config.js中配置pages参数。<br>具体的配置方法参见<a href=\"https://cli.vuejs.org/zh/config/#pages\" target=\"_blank\" rel=\"noopener\">官网教程</a>。</p>\n<h2 id=\"插件\"><a href=\"#插件\" class=\"headerlink\" title=\"插件\"></a>插件</h2><p>vue-cli3 使用了一套基于插件的架构。如果你查阅一个新创建项目的 package.json，就会发现依赖都是以 @vue/cli-plugin- 开头的。插件可以修改 webpack 的内部配置，也可以向 vue-cli-service 注入命令。在项目创建的过程中，绝大部分列出的特性都是通过插件来实现的。基于插件的架构使得 Vue CLI 灵活且可扩展。如果你对开发一个插件感兴趣，请翻阅插件<a href=\"https://cli.vuejs.org/zh/dev-guide/plugin-dev.html#%E6%A0%B8%E5%BF%83%E6%A6%82%E5%BF%B5\" target=\"_blank\" rel=\"noopener\">开发指南</a>。</p>\n"},{"title":"github和gitlab下fork后同步个人仓库和源仓库","date":"2017-10-19T03:16:52.000Z","description":"github和gitlab下fork后同步个人仓库和源仓库","_content":"### 首先要先确定一下是否建立了主repo的远程源\n```\ngit remote -v\n```\n### 如果里面只能看到你自己的两个源(fetch 和 push)，那就需要添加主repo的源\n```\ngit remote add upstream URL\ngit remote -v\n```\n然后你就能看到upstream了\n### 如果想与主repo合并\n```\ngit fetch upstream\ngit merge upstream/master\n```","source":"_posts/github和gitlab下fork后同步个人仓库和源仓库.md","raw":"title: github和gitlab下fork后同步个人仓库和源仓库\ntags: [git,GitHub,GitLab]\ndate: 2017-10-19 11:16:52\ncategories: [git]\ndescription: github和gitlab下fork后同步个人仓库和源仓库\n---\n### 首先要先确定一下是否建立了主repo的远程源\n```\ngit remote -v\n```\n### 如果里面只能看到你自己的两个源(fetch 和 push)，那就需要添加主repo的源\n```\ngit remote add upstream URL\ngit remote -v\n```\n然后你就能看到upstream了\n### 如果想与主repo合并\n```\ngit fetch upstream\ngit merge upstream/master\n```","slug":"github和gitlab下fork后同步个人仓库和源仓库","published":1,"updated":"2019-09-29T11:22:34.498Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck3jm8gvn0006z0btj0b5hkd2","content":"<h3 id=\"首先要先确定一下是否建立了主repo的远程源\"><a href=\"#首先要先确定一下是否建立了主repo的远程源\" class=\"headerlink\" title=\"首先要先确定一下是否建立了主repo的远程源\"></a>首先要先确定一下是否建立了主repo的远程源</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git remote -v</span><br></pre></td></tr></table></figure>\n<h3 id=\"如果里面只能看到你自己的两个源-fetch-和-push-，那就需要添加主repo的源\"><a href=\"#如果里面只能看到你自己的两个源-fetch-和-push-，那就需要添加主repo的源\" class=\"headerlink\" title=\"如果里面只能看到你自己的两个源(fetch 和 push)，那就需要添加主repo的源\"></a>如果里面只能看到你自己的两个源(fetch 和 push)，那就需要添加主repo的源</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git remote add upstream URL</span><br><span class=\"line\">git remote -v</span><br></pre></td></tr></table></figure>\n<p>然后你就能看到upstream了</p>\n<h3 id=\"如果想与主repo合并\"><a href=\"#如果想与主repo合并\" class=\"headerlink\" title=\"如果想与主repo合并\"></a>如果想与主repo合并</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git fetch upstream</span><br><span class=\"line\">git merge upstream/master</span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"","more":"<h3 id=\"首先要先确定一下是否建立了主repo的远程源\"><a href=\"#首先要先确定一下是否建立了主repo的远程源\" class=\"headerlink\" title=\"首先要先确定一下是否建立了主repo的远程源\"></a>首先要先确定一下是否建立了主repo的远程源</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git remote -v</span><br></pre></td></tr></table></figure>\n<h3 id=\"如果里面只能看到你自己的两个源-fetch-和-push-，那就需要添加主repo的源\"><a href=\"#如果里面只能看到你自己的两个源-fetch-和-push-，那就需要添加主repo的源\" class=\"headerlink\" title=\"如果里面只能看到你自己的两个源(fetch 和 push)，那就需要添加主repo的源\"></a>如果里面只能看到你自己的两个源(fetch 和 push)，那就需要添加主repo的源</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git remote add upstream URL</span><br><span class=\"line\">git remote -v</span><br></pre></td></tr></table></figure>\n<p>然后你就能看到upstream了</p>\n<h3 id=\"如果想与主repo合并\"><a href=\"#如果想与主repo合并\" class=\"headerlink\" title=\"如果想与主repo合并\"></a>如果想与主repo合并</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git fetch upstream</span><br><span class=\"line\">git merge upstream/master</span><br></pre></td></tr></table></figure>"},{"title":"css伪元素","date":"2019-05-10T07:41:04.000Z","description":"css3关于伪元素那些你可能不知道的事","_content":"## 因为一个背景图引发的思考\n在最近的项目开发中我遇到了一个并不算麻烦的需求。需求大致是这样的\n> 想要一个有特殊边框的卡片，里面展示几行文本。\n\n当时的场景有些复杂，但还原之后基本就是这样的：       \n```vue\n<template>\n  <div class=\"eg1\"></div>\n</template>\n\n<style scoped>\n.eg1 {\n  width: 200px;\n  height: 200px;\n  background: deepskyblue;\n  border: 20px dashed #333;\n}\n</style>\n```\n然后使用伪元素创建一个白色的背景，放到卡片正中心就完成了。\n```vue\n<template>\n  <div class=\"eg1\"></div>\n</template>\n\n<style lang=\"scss\" scoped>\n.eg1 {\n  box-sizing: border-box;\n  position: relative;\n  width: 200px;\n  height: 200px;\n  background: deepskyblue;\n  border: 20px dashed #333;\n  &:after {\n    content: '13123';\n    background: #fff;\n    padding: 10px;\n    position: absolute;\n    top: 0;\n    right: 0;\n    bottom: 0;\n    left: 0;\n  }\n}\n</style>\n```\n<iframe width=\"100%\" height=\"300\" src=\"//jsrun.net/FKyKp/embedded/all/light/\" allowfullscreen=\"allowfullscreen\" frameborder=\"0\"></iframe>\n\n本以为已经结束了，只要把返回的消息放在伪元素的`content`就可以了。但是消息是后端返回的呀，要怎么才能做到把文本填充进去呢？因此才去找了伪元素相关的资料。继而发现了伪元素非常多的用法。在这里总结一下。\n\n## 除了content=''之外的其他高级用法\n### 插入符号\n使用css的quotes可以在字符串两端添加自定义的字符\n```vue\n<template>\n  <h1>一段文字</h1>\n  <h2>另一段文字</h2>\n  <h3>第三段文字</h3>\n</template>\n\n<style scoped lang=\"scss\">\n  h1 {\n    quotes: \"(\"\")\";\n    &:before {\n      content: open-quote;\n    }\n    &:after {\n      content: close-quote;\n    }\n  }\n  h2 {\n    quotes: \"\\♂\"\"\\♀\";\n    &:before {\n      content: open-quote;\n    }\n    &:after {\n      content: close-quote;\n    }\n  }\n  h3 {\n    quotes:\"\\\"\" \"\\\"\";\n    &:before {\n      content: open-quote;\n    }\n    &:after {\n      content: close-quote;\n    }\n  }\n</style>\n```\n<iframe width=\"100%\" height=\"300\" src=\"//jsrun.net/jKyKp/embedded/all/light/\" allowfullscreen=\"allowfullscreen\" frameborder=\"0\"></iframe>\n\n### 插入属性\ncontent属性可以直接获取元素的属性，包括自有属性和自定义属性。本文中出现的问题也是通过这个方法解决的。\n```vue\n<template>\n  <div text=\"哈哈哈哈哈\"></div>\n</template>\n\n<style scoped lang=\"scss\">\n  div {\n    box-sizing: border-box;\n    position: relative;\n    width: 200px;\n    height: 200px;\n    background: #ace;\n    border: 20px dashed #adc;\n    &:after {\n      word-break: break-all;\n      background: #fff;\n      padding: 10px;\n      content: attr(text);\n      position: absolute;\n      top: 0;\n      right: 0;\n      bottom: 0;\n      left: 0;\n    }\n  }\n</style>\n```\n<iframe width=\"100%\" height=\"300\" src=\"//jsrun.net/BKyKp/embedded/all/light/\" allowfullscreen=\"allowfullscreen\" frameborder=\"0\"></iframe>\n\n### 插入图片\n没什么好解释的，和css引用图片类似\n```html\n  <div>这是h3</div>\n  <style>\n    div::after{\n      content:url(http://img3.imgtn.bdimg.com/it/u=169436546,622776601&fm=26&gp=0.jpg)\n    }\n  </style>\n```\n### 插入编号\n利用css的counter属性产生自增的编号，并且可以自定义和生成更复杂的编号。\n#### 插入基本的编号\n```html\n<h1>这是一个标题</h1>\n<h1>这是一个标题</h1>\n<h1>这是一个标题</h1>\n<h1>这是一个标题</h1>\n<style lang=\"scss\">\n  h1 {\n    counter-increment: list;\n    &:before {\n      content:counter(list);\n    }\n  }\n</style>\n```\n<iframe width=\"100%\" height=\"300\" src=\"//jsrun.net/uKyKp/embedded/all/light/\" allowfullscreen=\"allowfullscreen\" frameborder=\"0\"></iframe>\n\n#### 自定义编号\n```html\n<h1>这是一个标题</h1>\n<h1>这是一个标题</h1>\n<h1>这是一个标题</h1>\n<h1>这是一个标题</h1>\n<style lang=\"scss\">\n  h1 {\n    counter-increment: list;\n    &:before {\n      color:deeppink;\n      content:'第'counter(list)'章';\n    }\n  }\n</style>\n```\n<iframe width=\"100%\" height=\"300\" src=\"//jsrun.net/SKyKp/embedded/all/light/\" allowfullscreen=\"allowfullscreen\" frameborder=\"0\"></iframe>\n\n### 修改编号种类\n> 编号的种类 === ul的list-style-type属性值。\n\n```html\n<h1>这是一个标题</h1>\n<h1>这是一个标题</h1>\n<h1>这是一个标题</h1>\n<h1>这是一个标题</h1>\n<style lang=\"scss\">\n  h1 {\n    counter-increment: list;\n    &:before {\n      color:deeppink;\n      content:counter(list, upper-alpha);\n    }\n  }\n</style>\n```\n<iframe width=\"100%\" height=\"300\" src=\"//jsrun.net/KpyKp/embedded/all/light/\" allowfullscreen=\"allowfullscreen\" frameborder=\"0\"></iframe>\n\n#### 更复杂的多层嵌套编号\n> 大编号嵌套中编号嵌套小编号……\n\n```html\n<h1>大标题</h1>\n<h2>中标题</h2>\n<h3>小标题</h3>\n<h3>小标题</h3>\n<h2>中标题</h2>\n<h3>小标题</h3>\n<h3>小标题</h3>\n<h1>大标题</h1>\n<h2>中标题</h2>\n<h3>小标题</h3>\n<h3>小标题</h3>\n<h2>中标题</h2>\n<h3>小标题</h3>\n<h3>小标题</h3>\n<style lang=\"scss\">\n  h1{\n    counter-increment:h1;\n    counter-reset:h2;\n    &:before{\n      content:counter(h1)'.';\n    }\n  }\n  h2{\n    counter-increment:h2;\n    counter-reset:h3;\n    margin-left:40px;\n    &:before{\n      content:counter(h1) '-' counter(h2);\n    }\n  }\n\n  h3{\n    counter-increment:h3;\n    margin-left:80px;\n    &:before{\n      content:counter(h1) '-' counter(h2) '-' counter(h3);\n    }\n  }\n</style>\n```\n<iframe width=\"100%\" height=\"300\" src=\"//jsrun.net/kpyKp/embedded/all/light/\" allowfullscreen=\"allowfullscreen\" frameborder=\"0\"></iframe>\n\n## 结语\n最后附上张鑫旭的一篇文章： [小tip:CSS计数器+伪类实现数值动态计算与呈现](https://www.zhangxinxu.com/wordpress/2014/12/css-counters-pseudo-class-checked-numbers/)","source":"_posts/css伪元素.md","raw":"title: css伪元素\ntags: [css3]\ndate: 2019-05-10 15:41:04\ncategories: [css3]\ndescription: css3关于伪元素那些你可能不知道的事\n---\n## 因为一个背景图引发的思考\n在最近的项目开发中我遇到了一个并不算麻烦的需求。需求大致是这样的\n> 想要一个有特殊边框的卡片，里面展示几行文本。\n\n当时的场景有些复杂，但还原之后基本就是这样的：       \n```vue\n<template>\n  <div class=\"eg1\"></div>\n</template>\n\n<style scoped>\n.eg1 {\n  width: 200px;\n  height: 200px;\n  background: deepskyblue;\n  border: 20px dashed #333;\n}\n</style>\n```\n然后使用伪元素创建一个白色的背景，放到卡片正中心就完成了。\n```vue\n<template>\n  <div class=\"eg1\"></div>\n</template>\n\n<style lang=\"scss\" scoped>\n.eg1 {\n  box-sizing: border-box;\n  position: relative;\n  width: 200px;\n  height: 200px;\n  background: deepskyblue;\n  border: 20px dashed #333;\n  &:after {\n    content: '13123';\n    background: #fff;\n    padding: 10px;\n    position: absolute;\n    top: 0;\n    right: 0;\n    bottom: 0;\n    left: 0;\n  }\n}\n</style>\n```\n<iframe width=\"100%\" height=\"300\" src=\"//jsrun.net/FKyKp/embedded/all/light/\" allowfullscreen=\"allowfullscreen\" frameborder=\"0\"></iframe>\n\n本以为已经结束了，只要把返回的消息放在伪元素的`content`就可以了。但是消息是后端返回的呀，要怎么才能做到把文本填充进去呢？因此才去找了伪元素相关的资料。继而发现了伪元素非常多的用法。在这里总结一下。\n\n## 除了content=''之外的其他高级用法\n### 插入符号\n使用css的quotes可以在字符串两端添加自定义的字符\n```vue\n<template>\n  <h1>一段文字</h1>\n  <h2>另一段文字</h2>\n  <h3>第三段文字</h3>\n</template>\n\n<style scoped lang=\"scss\">\n  h1 {\n    quotes: \"(\"\")\";\n    &:before {\n      content: open-quote;\n    }\n    &:after {\n      content: close-quote;\n    }\n  }\n  h2 {\n    quotes: \"\\♂\"\"\\♀\";\n    &:before {\n      content: open-quote;\n    }\n    &:after {\n      content: close-quote;\n    }\n  }\n  h3 {\n    quotes:\"\\\"\" \"\\\"\";\n    &:before {\n      content: open-quote;\n    }\n    &:after {\n      content: close-quote;\n    }\n  }\n</style>\n```\n<iframe width=\"100%\" height=\"300\" src=\"//jsrun.net/jKyKp/embedded/all/light/\" allowfullscreen=\"allowfullscreen\" frameborder=\"0\"></iframe>\n\n### 插入属性\ncontent属性可以直接获取元素的属性，包括自有属性和自定义属性。本文中出现的问题也是通过这个方法解决的。\n```vue\n<template>\n  <div text=\"哈哈哈哈哈\"></div>\n</template>\n\n<style scoped lang=\"scss\">\n  div {\n    box-sizing: border-box;\n    position: relative;\n    width: 200px;\n    height: 200px;\n    background: #ace;\n    border: 20px dashed #adc;\n    &:after {\n      word-break: break-all;\n      background: #fff;\n      padding: 10px;\n      content: attr(text);\n      position: absolute;\n      top: 0;\n      right: 0;\n      bottom: 0;\n      left: 0;\n    }\n  }\n</style>\n```\n<iframe width=\"100%\" height=\"300\" src=\"//jsrun.net/BKyKp/embedded/all/light/\" allowfullscreen=\"allowfullscreen\" frameborder=\"0\"></iframe>\n\n### 插入图片\n没什么好解释的，和css引用图片类似\n```html\n  <div>这是h3</div>\n  <style>\n    div::after{\n      content:url(http://img3.imgtn.bdimg.com/it/u=169436546,622776601&fm=26&gp=0.jpg)\n    }\n  </style>\n```\n### 插入编号\n利用css的counter属性产生自增的编号，并且可以自定义和生成更复杂的编号。\n#### 插入基本的编号\n```html\n<h1>这是一个标题</h1>\n<h1>这是一个标题</h1>\n<h1>这是一个标题</h1>\n<h1>这是一个标题</h1>\n<style lang=\"scss\">\n  h1 {\n    counter-increment: list;\n    &:before {\n      content:counter(list);\n    }\n  }\n</style>\n```\n<iframe width=\"100%\" height=\"300\" src=\"//jsrun.net/uKyKp/embedded/all/light/\" allowfullscreen=\"allowfullscreen\" frameborder=\"0\"></iframe>\n\n#### 自定义编号\n```html\n<h1>这是一个标题</h1>\n<h1>这是一个标题</h1>\n<h1>这是一个标题</h1>\n<h1>这是一个标题</h1>\n<style lang=\"scss\">\n  h1 {\n    counter-increment: list;\n    &:before {\n      color:deeppink;\n      content:'第'counter(list)'章';\n    }\n  }\n</style>\n```\n<iframe width=\"100%\" height=\"300\" src=\"//jsrun.net/SKyKp/embedded/all/light/\" allowfullscreen=\"allowfullscreen\" frameborder=\"0\"></iframe>\n\n### 修改编号种类\n> 编号的种类 === ul的list-style-type属性值。\n\n```html\n<h1>这是一个标题</h1>\n<h1>这是一个标题</h1>\n<h1>这是一个标题</h1>\n<h1>这是一个标题</h1>\n<style lang=\"scss\">\n  h1 {\n    counter-increment: list;\n    &:before {\n      color:deeppink;\n      content:counter(list, upper-alpha);\n    }\n  }\n</style>\n```\n<iframe width=\"100%\" height=\"300\" src=\"//jsrun.net/KpyKp/embedded/all/light/\" allowfullscreen=\"allowfullscreen\" frameborder=\"0\"></iframe>\n\n#### 更复杂的多层嵌套编号\n> 大编号嵌套中编号嵌套小编号……\n\n```html\n<h1>大标题</h1>\n<h2>中标题</h2>\n<h3>小标题</h3>\n<h3>小标题</h3>\n<h2>中标题</h2>\n<h3>小标题</h3>\n<h3>小标题</h3>\n<h1>大标题</h1>\n<h2>中标题</h2>\n<h3>小标题</h3>\n<h3>小标题</h3>\n<h2>中标题</h2>\n<h3>小标题</h3>\n<h3>小标题</h3>\n<style lang=\"scss\">\n  h1{\n    counter-increment:h1;\n    counter-reset:h2;\n    &:before{\n      content:counter(h1)'.';\n    }\n  }\n  h2{\n    counter-increment:h2;\n    counter-reset:h3;\n    margin-left:40px;\n    &:before{\n      content:counter(h1) '-' counter(h2);\n    }\n  }\n\n  h3{\n    counter-increment:h3;\n    margin-left:80px;\n    &:before{\n      content:counter(h1) '-' counter(h2) '-' counter(h3);\n    }\n  }\n</style>\n```\n<iframe width=\"100%\" height=\"300\" src=\"//jsrun.net/kpyKp/embedded/all/light/\" allowfullscreen=\"allowfullscreen\" frameborder=\"0\"></iframe>\n\n## 结语\n最后附上张鑫旭的一篇文章： [小tip:CSS计数器+伪类实现数值动态计算与呈现](https://www.zhangxinxu.com/wordpress/2014/12/css-counters-pseudo-class-checked-numbers/)","slug":"css伪元素","published":1,"updated":"2019-09-29T11:22:34.498Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck3jm8gvo0008z0btgk5eikjr","content":"<h2 id=\"因为一个背景图引发的思考\"><a href=\"#因为一个背景图引发的思考\" class=\"headerlink\" title=\"因为一个背景图引发的思考\"></a>因为一个背景图引发的思考</h2><p>在最近的项目开发中我遇到了一个并不算麻烦的需求。需求大致是这样的</p>\n<blockquote>\n<p>想要一个有特殊边框的卡片，里面展示几行文本。</p>\n</blockquote>\n<p>当时的场景有些复杂，但还原之后基本就是这样的：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;template&gt;</span><br><span class=\"line\">  &lt;div class=&quot;eg1&quot;&gt;&lt;/div&gt;</span><br><span class=\"line\">&lt;/template&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;style scoped&gt;</span><br><span class=\"line\">.eg1 &#123;</span><br><span class=\"line\">  width: 200px;</span><br><span class=\"line\">  height: 200px;</span><br><span class=\"line\">  background: deepskyblue;</span><br><span class=\"line\">  border: 20px dashed #333;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">&lt;/style&gt;</span><br></pre></td></tr></table></figure></p>\n<p>然后使用伪元素创建一个白色的背景，放到卡片正中心就完成了。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;template&gt;</span><br><span class=\"line\">  &lt;div class=&quot;eg1&quot;&gt;&lt;/div&gt;</span><br><span class=\"line\">&lt;/template&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;style lang=&quot;scss&quot; scoped&gt;</span><br><span class=\"line\">.eg1 &#123;</span><br><span class=\"line\">  box-sizing: border-box;</span><br><span class=\"line\">  position: relative;</span><br><span class=\"line\">  width: 200px;</span><br><span class=\"line\">  height: 200px;</span><br><span class=\"line\">  background: deepskyblue;</span><br><span class=\"line\">  border: 20px dashed #333;</span><br><span class=\"line\">  &amp;:after &#123;</span><br><span class=\"line\">    content: &apos;13123&apos;;</span><br><span class=\"line\">    background: #fff;</span><br><span class=\"line\">    padding: 10px;</span><br><span class=\"line\">    position: absolute;</span><br><span class=\"line\">    top: 0;</span><br><span class=\"line\">    right: 0;</span><br><span class=\"line\">    bottom: 0;</span><br><span class=\"line\">    left: 0;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">&lt;/style&gt;</span><br></pre></td></tr></table></figure></p>\n<iframe width=\"100%\" height=\"300\" src=\"//jsrun.net/FKyKp/embedded/all/light/\" allowfullscreen=\"allowfullscreen\" frameborder=\"0\"></iframe>\n\n<p>本以为已经结束了，只要把返回的消息放在伪元素的<code>content</code>就可以了。但是消息是后端返回的呀，要怎么才能做到把文本填充进去呢？因此才去找了伪元素相关的资料。继而发现了伪元素非常多的用法。在这里总结一下。</p>\n<h2 id=\"除了content-’’之外的其他高级用法\"><a href=\"#除了content-’’之外的其他高级用法\" class=\"headerlink\" title=\"除了content=’’之外的其他高级用法\"></a>除了content=’’之外的其他高级用法</h2><h3 id=\"插入符号\"><a href=\"#插入符号\" class=\"headerlink\" title=\"插入符号\"></a>插入符号</h3><p>使用css的quotes可以在字符串两端添加自定义的字符<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;template&gt;</span><br><span class=\"line\">  &lt;h1&gt;一段文字&lt;/h1&gt;</span><br><span class=\"line\">  &lt;h2&gt;另一段文字&lt;/h2&gt;</span><br><span class=\"line\">  &lt;h3&gt;第三段文字&lt;/h3&gt;</span><br><span class=\"line\">&lt;/template&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;style scoped lang=&quot;scss&quot;&gt;</span><br><span class=\"line\">  h1 &#123;</span><br><span class=\"line\">    quotes: &quot;(&quot;&quot;)&quot;;</span><br><span class=\"line\">    &amp;:before &#123;</span><br><span class=\"line\">      content: open-quote;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    &amp;:after &#123;</span><br><span class=\"line\">      content: close-quote;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  h2 &#123;</span><br><span class=\"line\">    quotes: &quot;\\♂&quot;&quot;\\♀&quot;;</span><br><span class=\"line\">    &amp;:before &#123;</span><br><span class=\"line\">      content: open-quote;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    &amp;:after &#123;</span><br><span class=\"line\">      content: close-quote;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  h3 &#123;</span><br><span class=\"line\">    quotes:&quot;\\&quot;&quot; &quot;\\&quot;&quot;;</span><br><span class=\"line\">    &amp;:before &#123;</span><br><span class=\"line\">      content: open-quote;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    &amp;:after &#123;</span><br><span class=\"line\">      content: close-quote;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&lt;/style&gt;</span><br></pre></td></tr></table></figure></p>\n<iframe width=\"100%\" height=\"300\" src=\"//jsrun.net/jKyKp/embedded/all/light/\" allowfullscreen=\"allowfullscreen\" frameborder=\"0\"></iframe>\n\n<h3 id=\"插入属性\"><a href=\"#插入属性\" class=\"headerlink\" title=\"插入属性\"></a>插入属性</h3><p>content属性可以直接获取元素的属性，包括自有属性和自定义属性。本文中出现的问题也是通过这个方法解决的。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;template&gt;</span><br><span class=\"line\">  &lt;div text=&quot;哈哈哈哈哈&quot;&gt;&lt;/div&gt;</span><br><span class=\"line\">&lt;/template&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;style scoped lang=&quot;scss&quot;&gt;</span><br><span class=\"line\">  div &#123;</span><br><span class=\"line\">    box-sizing: border-box;</span><br><span class=\"line\">    position: relative;</span><br><span class=\"line\">    width: 200px;</span><br><span class=\"line\">    height: 200px;</span><br><span class=\"line\">    background: #ace;</span><br><span class=\"line\">    border: 20px dashed #adc;</span><br><span class=\"line\">    &amp;:after &#123;</span><br><span class=\"line\">      word-break: break-all;</span><br><span class=\"line\">      background: #fff;</span><br><span class=\"line\">      padding: 10px;</span><br><span class=\"line\">      content: attr(text);</span><br><span class=\"line\">      position: absolute;</span><br><span class=\"line\">      top: 0;</span><br><span class=\"line\">      right: 0;</span><br><span class=\"line\">      bottom: 0;</span><br><span class=\"line\">      left: 0;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&lt;/style&gt;</span><br></pre></td></tr></table></figure></p>\n<iframe width=\"100%\" height=\"300\" src=\"//jsrun.net/BKyKp/embedded/all/light/\" allowfullscreen=\"allowfullscreen\" frameborder=\"0\"></iframe>\n\n<h3 id=\"插入图片\"><a href=\"#插入图片\" class=\"headerlink\" title=\"插入图片\"></a>插入图片</h3><p>没什么好解释的，和css引用图片类似<br><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span>这是h3<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">style</span>&gt;</span></span><br><span class=\"line\">  div::after&#123;</span><br><span class=\"line\">    content:url(http://img3.imgtn.bdimg.com/it/u=169436546,622776601&amp;fm=26&amp;gp=0.jpg)</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span><br></pre></td></tr></table></figure></p>\n<h3 id=\"插入编号\"><a href=\"#插入编号\" class=\"headerlink\" title=\"插入编号\"></a>插入编号</h3><p>利用css的counter属性产生自增的编号，并且可以自定义和生成更复杂的编号。</p>\n<h4 id=\"插入基本的编号\"><a href=\"#插入基本的编号\" class=\"headerlink\" title=\"插入基本的编号\"></a>插入基本的编号</h4><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">h1</span>&gt;</span>这是一个标题<span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">h1</span>&gt;</span>这是一个标题<span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">h1</span>&gt;</span>这是一个标题<span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">h1</span>&gt;</span>这是一个标题<span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">style</span> <span class=\"attr\">lang</span>=<span class=\"string\">\"scss\"</span>&gt;</span></span><br><span class=\"line\">  h1 &#123;</span><br><span class=\"line\">    counter-increment: list;</span><br><span class=\"line\">    &amp;:before &#123;</span><br><span class=\"line\">      content:counter(list);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<iframe width=\"100%\" height=\"300\" src=\"//jsrun.net/uKyKp/embedded/all/light/\" allowfullscreen=\"allowfullscreen\" frameborder=\"0\"></iframe>\n\n<h4 id=\"自定义编号\"><a href=\"#自定义编号\" class=\"headerlink\" title=\"自定义编号\"></a>自定义编号</h4><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">h1</span>&gt;</span>这是一个标题<span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">h1</span>&gt;</span>这是一个标题<span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">h1</span>&gt;</span>这是一个标题<span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">h1</span>&gt;</span>这是一个标题<span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">style</span> <span class=\"attr\">lang</span>=<span class=\"string\">\"scss\"</span>&gt;</span></span><br><span class=\"line\">  h1 &#123;</span><br><span class=\"line\">    counter-increment: list;</span><br><span class=\"line\">    &amp;:before &#123;</span><br><span class=\"line\">      color:deeppink;</span><br><span class=\"line\">      content:'第'counter(list)'章';</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<iframe width=\"100%\" height=\"300\" src=\"//jsrun.net/SKyKp/embedded/all/light/\" allowfullscreen=\"allowfullscreen\" frameborder=\"0\"></iframe>\n\n<h3 id=\"修改编号种类\"><a href=\"#修改编号种类\" class=\"headerlink\" title=\"修改编号种类\"></a>修改编号种类</h3><blockquote>\n<p>编号的种类 === ul的list-style-type属性值。</p>\n</blockquote>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">h1</span>&gt;</span>这是一个标题<span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">h1</span>&gt;</span>这是一个标题<span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">h1</span>&gt;</span>这是一个标题<span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">h1</span>&gt;</span>这是一个标题<span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">style</span> <span class=\"attr\">lang</span>=<span class=\"string\">\"scss\"</span>&gt;</span></span><br><span class=\"line\">  h1 &#123;</span><br><span class=\"line\">    counter-increment: list;</span><br><span class=\"line\">    &amp;:before &#123;</span><br><span class=\"line\">      color:deeppink;</span><br><span class=\"line\">      content:counter(list, upper-alpha);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<iframe width=\"100%\" height=\"300\" src=\"//jsrun.net/KpyKp/embedded/all/light/\" allowfullscreen=\"allowfullscreen\" frameborder=\"0\"></iframe>\n\n<h4 id=\"更复杂的多层嵌套编号\"><a href=\"#更复杂的多层嵌套编号\" class=\"headerlink\" title=\"更复杂的多层嵌套编号\"></a>更复杂的多层嵌套编号</h4><blockquote>\n<p>大编号嵌套中编号嵌套小编号……</p>\n</blockquote>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">h1</span>&gt;</span>大标题<span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">h2</span>&gt;</span>中标题<span class=\"tag\">&lt;/<span class=\"name\">h2</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">h3</span>&gt;</span>小标题<span class=\"tag\">&lt;/<span class=\"name\">h3</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">h3</span>&gt;</span>小标题<span class=\"tag\">&lt;/<span class=\"name\">h3</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">h2</span>&gt;</span>中标题<span class=\"tag\">&lt;/<span class=\"name\">h2</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">h3</span>&gt;</span>小标题<span class=\"tag\">&lt;/<span class=\"name\">h3</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">h3</span>&gt;</span>小标题<span class=\"tag\">&lt;/<span class=\"name\">h3</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">h1</span>&gt;</span>大标题<span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">h2</span>&gt;</span>中标题<span class=\"tag\">&lt;/<span class=\"name\">h2</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">h3</span>&gt;</span>小标题<span class=\"tag\">&lt;/<span class=\"name\">h3</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">h3</span>&gt;</span>小标题<span class=\"tag\">&lt;/<span class=\"name\">h3</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">h2</span>&gt;</span>中标题<span class=\"tag\">&lt;/<span class=\"name\">h2</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">h3</span>&gt;</span>小标题<span class=\"tag\">&lt;/<span class=\"name\">h3</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">h3</span>&gt;</span>小标题<span class=\"tag\">&lt;/<span class=\"name\">h3</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">style</span> <span class=\"attr\">lang</span>=<span class=\"string\">\"scss\"</span>&gt;</span></span><br><span class=\"line\">  h1&#123;</span><br><span class=\"line\">    counter-increment:h1;</span><br><span class=\"line\">    counter-reset:h2;</span><br><span class=\"line\">    &amp;:before&#123;</span><br><span class=\"line\">      content:counter(h1)'.';</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  h2&#123;</span><br><span class=\"line\">    counter-increment:h2;</span><br><span class=\"line\">    counter-reset:h3;</span><br><span class=\"line\">    margin-left:40px;</span><br><span class=\"line\">    &amp;:before&#123;</span><br><span class=\"line\">      content:counter(h1) '-' counter(h2);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  h3&#123;</span><br><span class=\"line\">    counter-increment:h3;</span><br><span class=\"line\">    margin-left:80px;</span><br><span class=\"line\">    &amp;:before&#123;</span><br><span class=\"line\">      content:counter(h1) '-' counter(h2) '-' counter(h3);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<iframe width=\"100%\" height=\"300\" src=\"//jsrun.net/kpyKp/embedded/all/light/\" allowfullscreen=\"allowfullscreen\" frameborder=\"0\"></iframe>\n\n<h2 id=\"结语\"><a href=\"#结语\" class=\"headerlink\" title=\"结语\"></a>结语</h2><p>最后附上张鑫旭的一篇文章： <a href=\"https://www.zhangxinxu.com/wordpress/2014/12/css-counters-pseudo-class-checked-numbers/\" target=\"_blank\" rel=\"noopener\">小tip:CSS计数器+伪类实现数值动态计算与呈现</a></p>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"因为一个背景图引发的思考\"><a href=\"#因为一个背景图引发的思考\" class=\"headerlink\" title=\"因为一个背景图引发的思考\"></a>因为一个背景图引发的思考</h2><p>在最近的项目开发中我遇到了一个并不算麻烦的需求。需求大致是这样的</p>\n<blockquote>\n<p>想要一个有特殊边框的卡片，里面展示几行文本。</p>\n</blockquote>\n<p>当时的场景有些复杂，但还原之后基本就是这样的：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;template&gt;</span><br><span class=\"line\">  &lt;div class=&quot;eg1&quot;&gt;&lt;/div&gt;</span><br><span class=\"line\">&lt;/template&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;style scoped&gt;</span><br><span class=\"line\">.eg1 &#123;</span><br><span class=\"line\">  width: 200px;</span><br><span class=\"line\">  height: 200px;</span><br><span class=\"line\">  background: deepskyblue;</span><br><span class=\"line\">  border: 20px dashed #333;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">&lt;/style&gt;</span><br></pre></td></tr></table></figure></p>\n<p>然后使用伪元素创建一个白色的背景，放到卡片正中心就完成了。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;template&gt;</span><br><span class=\"line\">  &lt;div class=&quot;eg1&quot;&gt;&lt;/div&gt;</span><br><span class=\"line\">&lt;/template&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;style lang=&quot;scss&quot; scoped&gt;</span><br><span class=\"line\">.eg1 &#123;</span><br><span class=\"line\">  box-sizing: border-box;</span><br><span class=\"line\">  position: relative;</span><br><span class=\"line\">  width: 200px;</span><br><span class=\"line\">  height: 200px;</span><br><span class=\"line\">  background: deepskyblue;</span><br><span class=\"line\">  border: 20px dashed #333;</span><br><span class=\"line\">  &amp;:after &#123;</span><br><span class=\"line\">    content: &apos;13123&apos;;</span><br><span class=\"line\">    background: #fff;</span><br><span class=\"line\">    padding: 10px;</span><br><span class=\"line\">    position: absolute;</span><br><span class=\"line\">    top: 0;</span><br><span class=\"line\">    right: 0;</span><br><span class=\"line\">    bottom: 0;</span><br><span class=\"line\">    left: 0;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">&lt;/style&gt;</span><br></pre></td></tr></table></figure></p>\n<iframe width=\"100%\" height=\"300\" src=\"//jsrun.net/FKyKp/embedded/all/light/\" allowfullscreen=\"allowfullscreen\" frameborder=\"0\"></iframe>\n\n<p>本以为已经结束了，只要把返回的消息放在伪元素的<code>content</code>就可以了。但是消息是后端返回的呀，要怎么才能做到把文本填充进去呢？因此才去找了伪元素相关的资料。继而发现了伪元素非常多的用法。在这里总结一下。</p>\n<h2 id=\"除了content-’’之外的其他高级用法\"><a href=\"#除了content-’’之外的其他高级用法\" class=\"headerlink\" title=\"除了content=’’之外的其他高级用法\"></a>除了content=’’之外的其他高级用法</h2><h3 id=\"插入符号\"><a href=\"#插入符号\" class=\"headerlink\" title=\"插入符号\"></a>插入符号</h3><p>使用css的quotes可以在字符串两端添加自定义的字符<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;template&gt;</span><br><span class=\"line\">  &lt;h1&gt;一段文字&lt;/h1&gt;</span><br><span class=\"line\">  &lt;h2&gt;另一段文字&lt;/h2&gt;</span><br><span class=\"line\">  &lt;h3&gt;第三段文字&lt;/h3&gt;</span><br><span class=\"line\">&lt;/template&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;style scoped lang=&quot;scss&quot;&gt;</span><br><span class=\"line\">  h1 &#123;</span><br><span class=\"line\">    quotes: &quot;(&quot;&quot;)&quot;;</span><br><span class=\"line\">    &amp;:before &#123;</span><br><span class=\"line\">      content: open-quote;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    &amp;:after &#123;</span><br><span class=\"line\">      content: close-quote;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  h2 &#123;</span><br><span class=\"line\">    quotes: &quot;\\♂&quot;&quot;\\♀&quot;;</span><br><span class=\"line\">    &amp;:before &#123;</span><br><span class=\"line\">      content: open-quote;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    &amp;:after &#123;</span><br><span class=\"line\">      content: close-quote;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  h3 &#123;</span><br><span class=\"line\">    quotes:&quot;\\&quot;&quot; &quot;\\&quot;&quot;;</span><br><span class=\"line\">    &amp;:before &#123;</span><br><span class=\"line\">      content: open-quote;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    &amp;:after &#123;</span><br><span class=\"line\">      content: close-quote;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&lt;/style&gt;</span><br></pre></td></tr></table></figure></p>\n<iframe width=\"100%\" height=\"300\" src=\"//jsrun.net/jKyKp/embedded/all/light/\" allowfullscreen=\"allowfullscreen\" frameborder=\"0\"></iframe>\n\n<h3 id=\"插入属性\"><a href=\"#插入属性\" class=\"headerlink\" title=\"插入属性\"></a>插入属性</h3><p>content属性可以直接获取元素的属性，包括自有属性和自定义属性。本文中出现的问题也是通过这个方法解决的。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;template&gt;</span><br><span class=\"line\">  &lt;div text=&quot;哈哈哈哈哈&quot;&gt;&lt;/div&gt;</span><br><span class=\"line\">&lt;/template&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;style scoped lang=&quot;scss&quot;&gt;</span><br><span class=\"line\">  div &#123;</span><br><span class=\"line\">    box-sizing: border-box;</span><br><span class=\"line\">    position: relative;</span><br><span class=\"line\">    width: 200px;</span><br><span class=\"line\">    height: 200px;</span><br><span class=\"line\">    background: #ace;</span><br><span class=\"line\">    border: 20px dashed #adc;</span><br><span class=\"line\">    &amp;:after &#123;</span><br><span class=\"line\">      word-break: break-all;</span><br><span class=\"line\">      background: #fff;</span><br><span class=\"line\">      padding: 10px;</span><br><span class=\"line\">      content: attr(text);</span><br><span class=\"line\">      position: absolute;</span><br><span class=\"line\">      top: 0;</span><br><span class=\"line\">      right: 0;</span><br><span class=\"line\">      bottom: 0;</span><br><span class=\"line\">      left: 0;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&lt;/style&gt;</span><br></pre></td></tr></table></figure></p>\n<iframe width=\"100%\" height=\"300\" src=\"//jsrun.net/BKyKp/embedded/all/light/\" allowfullscreen=\"allowfullscreen\" frameborder=\"0\"></iframe>\n\n<h3 id=\"插入图片\"><a href=\"#插入图片\" class=\"headerlink\" title=\"插入图片\"></a>插入图片</h3><p>没什么好解释的，和css引用图片类似<br><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span>这是h3<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">style</span>&gt;</span></span><br><span class=\"line\">  div::after&#123;</span><br><span class=\"line\">    content:url(http://img3.imgtn.bdimg.com/it/u=169436546,622776601&amp;fm=26&amp;gp=0.jpg)</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span><br></pre></td></tr></table></figure></p>\n<h3 id=\"插入编号\"><a href=\"#插入编号\" class=\"headerlink\" title=\"插入编号\"></a>插入编号</h3><p>利用css的counter属性产生自增的编号，并且可以自定义和生成更复杂的编号。</p>\n<h4 id=\"插入基本的编号\"><a href=\"#插入基本的编号\" class=\"headerlink\" title=\"插入基本的编号\"></a>插入基本的编号</h4><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">h1</span>&gt;</span>这是一个标题<span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">h1</span>&gt;</span>这是一个标题<span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">h1</span>&gt;</span>这是一个标题<span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">h1</span>&gt;</span>这是一个标题<span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">style</span> <span class=\"attr\">lang</span>=<span class=\"string\">\"scss\"</span>&gt;</span></span><br><span class=\"line\">  h1 &#123;</span><br><span class=\"line\">    counter-increment: list;</span><br><span class=\"line\">    &amp;:before &#123;</span><br><span class=\"line\">      content:counter(list);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<iframe width=\"100%\" height=\"300\" src=\"//jsrun.net/uKyKp/embedded/all/light/\" allowfullscreen=\"allowfullscreen\" frameborder=\"0\"></iframe>\n\n<h4 id=\"自定义编号\"><a href=\"#自定义编号\" class=\"headerlink\" title=\"自定义编号\"></a>自定义编号</h4><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">h1</span>&gt;</span>这是一个标题<span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">h1</span>&gt;</span>这是一个标题<span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">h1</span>&gt;</span>这是一个标题<span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">h1</span>&gt;</span>这是一个标题<span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">style</span> <span class=\"attr\">lang</span>=<span class=\"string\">\"scss\"</span>&gt;</span></span><br><span class=\"line\">  h1 &#123;</span><br><span class=\"line\">    counter-increment: list;</span><br><span class=\"line\">    &amp;:before &#123;</span><br><span class=\"line\">      color:deeppink;</span><br><span class=\"line\">      content:'第'counter(list)'章';</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<iframe width=\"100%\" height=\"300\" src=\"//jsrun.net/SKyKp/embedded/all/light/\" allowfullscreen=\"allowfullscreen\" frameborder=\"0\"></iframe>\n\n<h3 id=\"修改编号种类\"><a href=\"#修改编号种类\" class=\"headerlink\" title=\"修改编号种类\"></a>修改编号种类</h3><blockquote>\n<p>编号的种类 === ul的list-style-type属性值。</p>\n</blockquote>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">h1</span>&gt;</span>这是一个标题<span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">h1</span>&gt;</span>这是一个标题<span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">h1</span>&gt;</span>这是一个标题<span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">h1</span>&gt;</span>这是一个标题<span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">style</span> <span class=\"attr\">lang</span>=<span class=\"string\">\"scss\"</span>&gt;</span></span><br><span class=\"line\">  h1 &#123;</span><br><span class=\"line\">    counter-increment: list;</span><br><span class=\"line\">    &amp;:before &#123;</span><br><span class=\"line\">      color:deeppink;</span><br><span class=\"line\">      content:counter(list, upper-alpha);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<iframe width=\"100%\" height=\"300\" src=\"//jsrun.net/KpyKp/embedded/all/light/\" allowfullscreen=\"allowfullscreen\" frameborder=\"0\"></iframe>\n\n<h4 id=\"更复杂的多层嵌套编号\"><a href=\"#更复杂的多层嵌套编号\" class=\"headerlink\" title=\"更复杂的多层嵌套编号\"></a>更复杂的多层嵌套编号</h4><blockquote>\n<p>大编号嵌套中编号嵌套小编号……</p>\n</blockquote>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">h1</span>&gt;</span>大标题<span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">h2</span>&gt;</span>中标题<span class=\"tag\">&lt;/<span class=\"name\">h2</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">h3</span>&gt;</span>小标题<span class=\"tag\">&lt;/<span class=\"name\">h3</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">h3</span>&gt;</span>小标题<span class=\"tag\">&lt;/<span class=\"name\">h3</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">h2</span>&gt;</span>中标题<span class=\"tag\">&lt;/<span class=\"name\">h2</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">h3</span>&gt;</span>小标题<span class=\"tag\">&lt;/<span class=\"name\">h3</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">h3</span>&gt;</span>小标题<span class=\"tag\">&lt;/<span class=\"name\">h3</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">h1</span>&gt;</span>大标题<span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">h2</span>&gt;</span>中标题<span class=\"tag\">&lt;/<span class=\"name\">h2</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">h3</span>&gt;</span>小标题<span class=\"tag\">&lt;/<span class=\"name\">h3</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">h3</span>&gt;</span>小标题<span class=\"tag\">&lt;/<span class=\"name\">h3</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">h2</span>&gt;</span>中标题<span class=\"tag\">&lt;/<span class=\"name\">h2</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">h3</span>&gt;</span>小标题<span class=\"tag\">&lt;/<span class=\"name\">h3</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">h3</span>&gt;</span>小标题<span class=\"tag\">&lt;/<span class=\"name\">h3</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">style</span> <span class=\"attr\">lang</span>=<span class=\"string\">\"scss\"</span>&gt;</span></span><br><span class=\"line\">  h1&#123;</span><br><span class=\"line\">    counter-increment:h1;</span><br><span class=\"line\">    counter-reset:h2;</span><br><span class=\"line\">    &amp;:before&#123;</span><br><span class=\"line\">      content:counter(h1)'.';</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  h2&#123;</span><br><span class=\"line\">    counter-increment:h2;</span><br><span class=\"line\">    counter-reset:h3;</span><br><span class=\"line\">    margin-left:40px;</span><br><span class=\"line\">    &amp;:before&#123;</span><br><span class=\"line\">      content:counter(h1) '-' counter(h2);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  h3&#123;</span><br><span class=\"line\">    counter-increment:h3;</span><br><span class=\"line\">    margin-left:80px;</span><br><span class=\"line\">    &amp;:before&#123;</span><br><span class=\"line\">      content:counter(h1) '-' counter(h2) '-' counter(h3);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<iframe width=\"100%\" height=\"300\" src=\"//jsrun.net/kpyKp/embedded/all/light/\" allowfullscreen=\"allowfullscreen\" frameborder=\"0\"></iframe>\n\n<h2 id=\"结语\"><a href=\"#结语\" class=\"headerlink\" title=\"结语\"></a>结语</h2><p>最后附上张鑫旭的一篇文章： <a href=\"https://www.zhangxinxu.com/wordpress/2014/12/css-counters-pseudo-class-checked-numbers/\" target=\"_blank\" rel=\"noopener\">小tip:CSS计数器+伪类实现数值动态计算与呈现</a></p>\n"},{"title":"git命令","date":"2017-09-25T02:10:23.000Z","description":"git常用命令大全","_content":"git常用命令大全  \n---   \n>本博客旨在记录常用git命令。如果希望得到更多关于git的知识，请移步到[廖雪峰的git教程](https://www.liaoxuefeng.com/wiki/0013739516305929606dd18361248578c67b8067c8c017b000)，有非常详细的教程资料。\n#### 添加文件、查看状态、删除文件、提交文件、找回文件，重置修改文件\n>git help &lt;command&gt; &nbsp;&nbsp;&nbsp;&nbsp; 显示command的帮助文档     \ngit show (commitID) &nbsp;&nbsp;&nbsp;&nbsp; 显示最近一次（某一次）提交的内容详情    \ngit co -- <file> &nbsp;&nbsp;&nbsp;&nbsp; 抛弃工作区某一文件的修改    \ngit co . &nbsp;&nbsp;&nbsp;&nbsp; 抛弃工作区修改     \ngit add <file> &nbsp;&nbsp;&nbsp;&nbsp; 将工作文件修改提交到本地暂存区      \ngit add . &nbsp;&nbsp;&nbsp;&nbsp; 将所有修改过的工作文件提交暂存区      \ngit rm <file> &nbsp;&nbsp;&nbsp;&nbsp; 从版本库中删除文件       \ngit rm <file> --cached &nbsp;&nbsp;&nbsp;&nbsp; 从版本库中删除文件，但不删除本地文件          \ngit reset <file> &nbsp;&nbsp;&nbsp;&nbsp; 从暂存区恢复到工作文件    \ngit reset -- . &nbsp;&nbsp;&nbsp;&nbsp; 从暂存区恢复到工作文件    \ngit reset --hard &nbsp;&nbsp;&nbsp;&nbsp; 恢复最近一次提交过的状态，即放弃上次提交后的所有本次修改      \ngit ci <file> git ci . git ci -a &nbsp;&nbsp;&nbsp;&nbsp; 将git add, git rm和git ci等操作都合并在一起做git ci -am \"some comments\"    \ngit ci --amend &nbsp;&nbsp;&nbsp;&nbsp; 修改最后一次提交记录        \ngit revert <commitID> &nbsp;&nbsp;&nbsp;&nbsp; 恢复某次提交的状态，恢复动作本身也创建次提交对象      \ngit revert HEAD &nbsp;&nbsp;&nbsp;&nbsp; 恢复最后一次提交的状态    \n#### 查看文件diff\n\n>git diff <file> &nbsp;&nbsp;&nbsp;&nbsp; 比较当前文件和暂存区文件差异 git diff       \ngit diff <id1><id2> &nbsp;&nbsp;&nbsp;&nbsp; 比较两次提交之间的差异        \ngit diff <branch1>..<branch2> &nbsp;&nbsp;&nbsp;&nbsp; 在两个分支之间比较     \ngit diff --staged &nbsp;&nbsp;&nbsp;&nbsp; 比较暂存区和版本库差异    \ngit diff --cached &nbsp;&nbsp;&nbsp;&nbsp; 比较暂存区和版本库差异     \ngit diff --stat &nbsp;&nbsp;&nbsp;&nbsp; 仅仅比较统计信息     \n#### 查看提交记录\n>git log git log <file> &nbsp;&nbsp;&nbsp;&nbsp; 查看该文件每次提交记录     \ngit log -p <file> &nbsp;&nbsp;&nbsp;&nbsp; 查看每次详细修改内容的diff      \ngit log -p -2 &nbsp;&nbsp;&nbsp;&nbsp; 查看最近两次详细修改内容的diff       \ngit log --stat &nbsp;&nbsp;&nbsp;&nbsp;查看提交统计信息     \n#### Git 本地分支管理\n##### 查看、切换、创建和删除分支\n>git branch -r &nbsp;&nbsp;&nbsp;&nbsp; 查看远程分支    \ngit branch <new_branch> &nbsp;&nbsp;&nbsp;&nbsp; 创建新的分支    \ngit branch -v &nbsp;&nbsp;&nbsp;&nbsp; 查看各个分支最后提交信息    \ngit branch --merged &nbsp;&nbsp;&nbsp;&nbsp; 查看已经被合并到当前分支的分支    \ngit branch --no-merged &nbsp;&nbsp;&nbsp;&nbsp; 查看尚未被合并到当前分支的分支     \ngit checkout <branch> &nbsp;&nbsp;&nbsp;&nbsp; 切换到某个分支     \ngit checkout -b <new_branch> &nbsp;&nbsp;&nbsp;&nbsp; 创建新的分支，并且切换过去     \ngit checkout -b <new_branch> <branch> &nbsp;&nbsp;&nbsp;&nbsp; 基于branch创建新的new_branch      \ngit checkout commitID &nbsp;&nbsp;&nbsp;&nbsp; 把某次历史提交记录checkout出来，但无分支信息，切换到其他分支会自动删除     \ngit checkout commitID -b <new_branch> &nbsp;&nbsp;&nbsp;&nbsp; 把某次历史提交记录checkout出来，创建成一个分支     \ngit branch -d <branch> &nbsp;&nbsp;&nbsp;&nbsp; 删除某个分支     \ngit branch -D <branch> &nbsp;&nbsp;&nbsp;&nbsp; 强制删除某个分支 (未被合并的分支被删除的时候需要强制)      \n#### 分支合并和rebase\n>git merge <branch> &nbsp;&nbsp;&nbsp;&nbsp; 将branch分支合并到当前分支        \ngit merge origin/master --no-ff &nbsp;&nbsp;&nbsp;&nbsp; 不要Fast-Foward合并，这样可以生成merge提交      \ngit rebase master <branch> &nbsp;&nbsp;&nbsp;&nbsp; 将master rebase到branch，相当于： git co <branch> && git rebase master && git co master && git merge <branch>     \n#### Git补丁管理(方便在多台机器上开发同步时用)\n>git diff > ../sync.patch &nbsp;&nbsp;&nbsp;&nbsp; 生成补丁    \ngit apply ../sync.patch &nbsp;&nbsp;&nbsp;&nbsp; 打补丁     \ngit apply --check ../sync.patch &nbsp;&nbsp;&nbsp;&nbsp;测试补丁能否成功     \n#### Git暂存管理\n>git stash &nbsp;&nbsp;&nbsp;&nbsp; 暂存      \ngit stash list &nbsp;&nbsp;&nbsp;&nbsp; 列出所有stash     \ngit stash apply &nbsp;&nbsp;&nbsp;&nbsp; 恢复暂存的内容     \ngit stash drop &nbsp;&nbsp;&nbsp;&nbsp; 删除暂存区      \n#### Git远程分支管理\n>git pull &nbsp;&nbsp;&nbsp;&nbsp; 抓取远程仓库所有分支更新并合并到本地        \ngit pull --no-ff &nbsp;&nbsp;&nbsp;&nbsp; 抓取远程仓库所有分支更新并合并到本地，不要快进合并       \ngit fetch origin &nbsp;&nbsp;&nbsp;&nbsp; 抓取远程仓库更新        \ngit merge origin/master &nbsp;&nbsp;&nbsp;&nbsp; 将远程主分支合并到本地当前分支          \ngit co --track origin/branch &nbsp;&nbsp;&nbsp;&nbsp; 跟踪某个远程分支创建相应的本地分支         \ngit co -b <local_branch> origin/<remote_branch> &nbsp;&nbsp;&nbsp;&nbsp; 基于远程分支创建本地分支，功能同上        \ngit push &nbsp;&nbsp;&nbsp;&nbsp; push所有分支            \ngit push origin master &nbsp;&nbsp;&nbsp;&nbsp; 将本地主分支推到远程主分支           \ngit push -u origin master &nbsp;&nbsp;&nbsp;&nbsp; 将本地主分支推到远程(如无远程主分支则创建，用于初始化远程仓库)    \ngit push origin <local_branch> &nbsp;&nbsp;&nbsp;&nbsp; 创建远程分支， origin是远程仓库名    \ngit push origin <local_branch>:<remote_branch> &nbsp;&nbsp;&nbsp;&nbsp; 创建远程分支       \ngit push origin :<remote_branch> &nbsp;&nbsp;&nbsp;&nbsp;先删除本地分支(git br -d <branch>)，然后再push删除远程分支\n#### Git远程仓库管理\n##### GitHub\n>git remote -v &nbsp;&nbsp;&nbsp;&nbsp; 查看远程服务器地址和仓库名称       \ngit remote show origin &nbsp;&nbsp;&nbsp;&nbsp; 查看远程服务器仓库状态      \ngit remote add origin git@ github:####/####.git &nbsp;&nbsp;&nbsp;&nbsp; 添加远程仓库地址              \ngit remote set-url origin git@ github.com:####/####.git &nbsp;&nbsp;&nbsp;&nbsp; 设置远程仓库地址(用于修改远程仓库地址)     \ngit remote rm <repository> &nbsp;&nbsp;&nbsp;&nbsp; 删除远程仓库\n\n#### 创建远程仓库\n>git clone --bare robbin_site robbin_site.git &nbsp;&nbsp;&nbsp;&nbsp; 用带版本的项目创建纯版本仓库       \nscp -r my_project.git git@ git.csdn.net:~ &nbsp;&nbsp;&nbsp;&nbsp; 将纯仓库上传到服务器上       \nmkdir robbin_site.git && cd robbin_site.git && git --bare init &nbsp;&nbsp;&nbsp;&nbsp; 在服务器创建纯仓库        \ngit remote add origin git@ github.com:robbin/robbin_site.git &nbsp;&nbsp;&nbsp;&nbsp; 设置远程仓库地址        \ngit push -u origin master &nbsp;&nbsp;&nbsp;&nbsp; 客户端首次提交      \ngit push -u origin develop &nbsp;&nbsp;&nbsp;&nbsp; 首次将本地develop分支提交到远程develop分支，并且track         \ngit remote set-head origin master &nbsp;&nbsp;&nbsp;&nbsp; 设置远程仓库的HEAD指向master分支        \n#### 设置跟踪远程库和本地库\n>git branch --set-upstream master origin/master      \ngit branch --set-upstream develop origin/develop","source":"_posts/git命令.md","raw":"title: git命令\ndate: 2017-09-25 10:10:23\ntags: [git]\ncategories: [git]\ndescription: git常用命令大全\n---\ngit常用命令大全  \n---   \n>本博客旨在记录常用git命令。如果希望得到更多关于git的知识，请移步到[廖雪峰的git教程](https://www.liaoxuefeng.com/wiki/0013739516305929606dd18361248578c67b8067c8c017b000)，有非常详细的教程资料。\n#### 添加文件、查看状态、删除文件、提交文件、找回文件，重置修改文件\n>git help &lt;command&gt; &nbsp;&nbsp;&nbsp;&nbsp; 显示command的帮助文档     \ngit show (commitID) &nbsp;&nbsp;&nbsp;&nbsp; 显示最近一次（某一次）提交的内容详情    \ngit co -- <file> &nbsp;&nbsp;&nbsp;&nbsp; 抛弃工作区某一文件的修改    \ngit co . &nbsp;&nbsp;&nbsp;&nbsp; 抛弃工作区修改     \ngit add <file> &nbsp;&nbsp;&nbsp;&nbsp; 将工作文件修改提交到本地暂存区      \ngit add . &nbsp;&nbsp;&nbsp;&nbsp; 将所有修改过的工作文件提交暂存区      \ngit rm <file> &nbsp;&nbsp;&nbsp;&nbsp; 从版本库中删除文件       \ngit rm <file> --cached &nbsp;&nbsp;&nbsp;&nbsp; 从版本库中删除文件，但不删除本地文件          \ngit reset <file> &nbsp;&nbsp;&nbsp;&nbsp; 从暂存区恢复到工作文件    \ngit reset -- . &nbsp;&nbsp;&nbsp;&nbsp; 从暂存区恢复到工作文件    \ngit reset --hard &nbsp;&nbsp;&nbsp;&nbsp; 恢复最近一次提交过的状态，即放弃上次提交后的所有本次修改      \ngit ci <file> git ci . git ci -a &nbsp;&nbsp;&nbsp;&nbsp; 将git add, git rm和git ci等操作都合并在一起做git ci -am \"some comments\"    \ngit ci --amend &nbsp;&nbsp;&nbsp;&nbsp; 修改最后一次提交记录        \ngit revert <commitID> &nbsp;&nbsp;&nbsp;&nbsp; 恢复某次提交的状态，恢复动作本身也创建次提交对象      \ngit revert HEAD &nbsp;&nbsp;&nbsp;&nbsp; 恢复最后一次提交的状态    \n#### 查看文件diff\n\n>git diff <file> &nbsp;&nbsp;&nbsp;&nbsp; 比较当前文件和暂存区文件差异 git diff       \ngit diff <id1><id2> &nbsp;&nbsp;&nbsp;&nbsp; 比较两次提交之间的差异        \ngit diff <branch1>..<branch2> &nbsp;&nbsp;&nbsp;&nbsp; 在两个分支之间比较     \ngit diff --staged &nbsp;&nbsp;&nbsp;&nbsp; 比较暂存区和版本库差异    \ngit diff --cached &nbsp;&nbsp;&nbsp;&nbsp; 比较暂存区和版本库差异     \ngit diff --stat &nbsp;&nbsp;&nbsp;&nbsp; 仅仅比较统计信息     \n#### 查看提交记录\n>git log git log <file> &nbsp;&nbsp;&nbsp;&nbsp; 查看该文件每次提交记录     \ngit log -p <file> &nbsp;&nbsp;&nbsp;&nbsp; 查看每次详细修改内容的diff      \ngit log -p -2 &nbsp;&nbsp;&nbsp;&nbsp; 查看最近两次详细修改内容的diff       \ngit log --stat &nbsp;&nbsp;&nbsp;&nbsp;查看提交统计信息     \n#### Git 本地分支管理\n##### 查看、切换、创建和删除分支\n>git branch -r &nbsp;&nbsp;&nbsp;&nbsp; 查看远程分支    \ngit branch <new_branch> &nbsp;&nbsp;&nbsp;&nbsp; 创建新的分支    \ngit branch -v &nbsp;&nbsp;&nbsp;&nbsp; 查看各个分支最后提交信息    \ngit branch --merged &nbsp;&nbsp;&nbsp;&nbsp; 查看已经被合并到当前分支的分支    \ngit branch --no-merged &nbsp;&nbsp;&nbsp;&nbsp; 查看尚未被合并到当前分支的分支     \ngit checkout <branch> &nbsp;&nbsp;&nbsp;&nbsp; 切换到某个分支     \ngit checkout -b <new_branch> &nbsp;&nbsp;&nbsp;&nbsp; 创建新的分支，并且切换过去     \ngit checkout -b <new_branch> <branch> &nbsp;&nbsp;&nbsp;&nbsp; 基于branch创建新的new_branch      \ngit checkout commitID &nbsp;&nbsp;&nbsp;&nbsp; 把某次历史提交记录checkout出来，但无分支信息，切换到其他分支会自动删除     \ngit checkout commitID -b <new_branch> &nbsp;&nbsp;&nbsp;&nbsp; 把某次历史提交记录checkout出来，创建成一个分支     \ngit branch -d <branch> &nbsp;&nbsp;&nbsp;&nbsp; 删除某个分支     \ngit branch -D <branch> &nbsp;&nbsp;&nbsp;&nbsp; 强制删除某个分支 (未被合并的分支被删除的时候需要强制)      \n#### 分支合并和rebase\n>git merge <branch> &nbsp;&nbsp;&nbsp;&nbsp; 将branch分支合并到当前分支        \ngit merge origin/master --no-ff &nbsp;&nbsp;&nbsp;&nbsp; 不要Fast-Foward合并，这样可以生成merge提交      \ngit rebase master <branch> &nbsp;&nbsp;&nbsp;&nbsp; 将master rebase到branch，相当于： git co <branch> && git rebase master && git co master && git merge <branch>     \n#### Git补丁管理(方便在多台机器上开发同步时用)\n>git diff > ../sync.patch &nbsp;&nbsp;&nbsp;&nbsp; 生成补丁    \ngit apply ../sync.patch &nbsp;&nbsp;&nbsp;&nbsp; 打补丁     \ngit apply --check ../sync.patch &nbsp;&nbsp;&nbsp;&nbsp;测试补丁能否成功     \n#### Git暂存管理\n>git stash &nbsp;&nbsp;&nbsp;&nbsp; 暂存      \ngit stash list &nbsp;&nbsp;&nbsp;&nbsp; 列出所有stash     \ngit stash apply &nbsp;&nbsp;&nbsp;&nbsp; 恢复暂存的内容     \ngit stash drop &nbsp;&nbsp;&nbsp;&nbsp; 删除暂存区      \n#### Git远程分支管理\n>git pull &nbsp;&nbsp;&nbsp;&nbsp; 抓取远程仓库所有分支更新并合并到本地        \ngit pull --no-ff &nbsp;&nbsp;&nbsp;&nbsp; 抓取远程仓库所有分支更新并合并到本地，不要快进合并       \ngit fetch origin &nbsp;&nbsp;&nbsp;&nbsp; 抓取远程仓库更新        \ngit merge origin/master &nbsp;&nbsp;&nbsp;&nbsp; 将远程主分支合并到本地当前分支          \ngit co --track origin/branch &nbsp;&nbsp;&nbsp;&nbsp; 跟踪某个远程分支创建相应的本地分支         \ngit co -b <local_branch> origin/<remote_branch> &nbsp;&nbsp;&nbsp;&nbsp; 基于远程分支创建本地分支，功能同上        \ngit push &nbsp;&nbsp;&nbsp;&nbsp; push所有分支            \ngit push origin master &nbsp;&nbsp;&nbsp;&nbsp; 将本地主分支推到远程主分支           \ngit push -u origin master &nbsp;&nbsp;&nbsp;&nbsp; 将本地主分支推到远程(如无远程主分支则创建，用于初始化远程仓库)    \ngit push origin <local_branch> &nbsp;&nbsp;&nbsp;&nbsp; 创建远程分支， origin是远程仓库名    \ngit push origin <local_branch>:<remote_branch> &nbsp;&nbsp;&nbsp;&nbsp; 创建远程分支       \ngit push origin :<remote_branch> &nbsp;&nbsp;&nbsp;&nbsp;先删除本地分支(git br -d <branch>)，然后再push删除远程分支\n#### Git远程仓库管理\n##### GitHub\n>git remote -v &nbsp;&nbsp;&nbsp;&nbsp; 查看远程服务器地址和仓库名称       \ngit remote show origin &nbsp;&nbsp;&nbsp;&nbsp; 查看远程服务器仓库状态      \ngit remote add origin git@ github:####/####.git &nbsp;&nbsp;&nbsp;&nbsp; 添加远程仓库地址              \ngit remote set-url origin git@ github.com:####/####.git &nbsp;&nbsp;&nbsp;&nbsp; 设置远程仓库地址(用于修改远程仓库地址)     \ngit remote rm <repository> &nbsp;&nbsp;&nbsp;&nbsp; 删除远程仓库\n\n#### 创建远程仓库\n>git clone --bare robbin_site robbin_site.git &nbsp;&nbsp;&nbsp;&nbsp; 用带版本的项目创建纯版本仓库       \nscp -r my_project.git git@ git.csdn.net:~ &nbsp;&nbsp;&nbsp;&nbsp; 将纯仓库上传到服务器上       \nmkdir robbin_site.git && cd robbin_site.git && git --bare init &nbsp;&nbsp;&nbsp;&nbsp; 在服务器创建纯仓库        \ngit remote add origin git@ github.com:robbin/robbin_site.git &nbsp;&nbsp;&nbsp;&nbsp; 设置远程仓库地址        \ngit push -u origin master &nbsp;&nbsp;&nbsp;&nbsp; 客户端首次提交      \ngit push -u origin develop &nbsp;&nbsp;&nbsp;&nbsp; 首次将本地develop分支提交到远程develop分支，并且track         \ngit remote set-head origin master &nbsp;&nbsp;&nbsp;&nbsp; 设置远程仓库的HEAD指向master分支        \n#### 设置跟踪远程库和本地库\n>git branch --set-upstream master origin/master      \ngit branch --set-upstream develop origin/develop","slug":"git命令","published":1,"updated":"2019-09-29T11:22:34.498Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck3jm8gvp0009z0btpg6847p3","content":"<h2 id=\"git常用命令大全\"><a href=\"#git常用命令大全\" class=\"headerlink\" title=\"git常用命令大全  \"></a>git常用命令大全  </h2><blockquote>\n<p>本博客旨在记录常用git命令。如果希望得到更多关于git的知识，请移步到<a href=\"https://www.liaoxuefeng.com/wiki/0013739516305929606dd18361248578c67b8067c8c017b000\" target=\"_blank\" rel=\"noopener\">廖雪峰的git教程</a>，有非常详细的教程资料。</p>\n</blockquote>\n<h4 id=\"添加文件、查看状态、删除文件、提交文件、找回文件，重置修改文件\"><a href=\"#添加文件、查看状态、删除文件、提交文件、找回文件，重置修改文件\" class=\"headerlink\" title=\"添加文件、查看状态、删除文件、提交文件、找回文件，重置修改文件\"></a>添加文件、查看状态、删除文件、提交文件、找回文件，重置修改文件</h4><blockquote>\n<p>git help &lt;command&gt; &nbsp;&nbsp;&nbsp;&nbsp; 显示command的帮助文档<br>git show (commitID) &nbsp;&nbsp;&nbsp;&nbsp; 显示最近一次（某一次）提交的内容详情<br>git co – <file> &nbsp;&nbsp;&nbsp;&nbsp; 抛弃工作区某一文件的修改<br>git co . &nbsp;&nbsp;&nbsp;&nbsp; 抛弃工作区修改<br>git add <file> &nbsp;&nbsp;&nbsp;&nbsp; 将工作文件修改提交到本地暂存区<br>git add . &nbsp;&nbsp;&nbsp;&nbsp; 将所有修改过的工作文件提交暂存区<br>git rm <file> &nbsp;&nbsp;&nbsp;&nbsp; 从版本库中删除文件<br>git rm <file> –cached &nbsp;&nbsp;&nbsp;&nbsp; 从版本库中删除文件，但不删除本地文件<br>git reset <file> &nbsp;&nbsp;&nbsp;&nbsp; 从暂存区恢复到工作文件<br>git reset – . &nbsp;&nbsp;&nbsp;&nbsp; 从暂存区恢复到工作文件<br>git reset –hard &nbsp;&nbsp;&nbsp;&nbsp; 恢复最近一次提交过的状态，即放弃上次提交后的所有本次修改<br>git ci <file> git ci . git ci -a &nbsp;&nbsp;&nbsp;&nbsp; 将git add, git rm和git ci等操作都合并在一起做git ci -am “some comments”<br>git ci –amend &nbsp;&nbsp;&nbsp;&nbsp; 修改最后一次提交记录<br>git revert <commitid> &nbsp;&nbsp;&nbsp;&nbsp; 恢复某次提交的状态，恢复动作本身也创建次提交对象<br>git revert HEAD &nbsp;&nbsp;&nbsp;&nbsp; 恢复最后一次提交的状态    </commitid></file></file></file></file></file></file></p>\n</blockquote>\n<h4 id=\"查看文件diff\"><a href=\"#查看文件diff\" class=\"headerlink\" title=\"查看文件diff\"></a>查看文件diff</h4><blockquote>\n<p>git diff <file> &nbsp;&nbsp;&nbsp;&nbsp; 比较当前文件和暂存区文件差异 git diff<br>git diff <id1><id2> &nbsp;&nbsp;&nbsp;&nbsp; 比较两次提交之间的差异<br>git diff <branch1>..<branch2> &nbsp;&nbsp;&nbsp;&nbsp; 在两个分支之间比较<br>git diff –staged &nbsp;&nbsp;&nbsp;&nbsp; 比较暂存区和版本库差异<br>git diff –cached &nbsp;&nbsp;&nbsp;&nbsp; 比较暂存区和版本库差异<br>git diff –stat &nbsp;&nbsp;&nbsp;&nbsp; 仅仅比较统计信息     </branch2></branch1></id2></id1></file></p>\n</blockquote>\n<h4 id=\"查看提交记录\"><a href=\"#查看提交记录\" class=\"headerlink\" title=\"查看提交记录\"></a>查看提交记录</h4><blockquote>\n<p>git log git log <file> &nbsp;&nbsp;&nbsp;&nbsp; 查看该文件每次提交记录<br>git log -p <file> &nbsp;&nbsp;&nbsp;&nbsp; 查看每次详细修改内容的diff<br>git log -p -2 &nbsp;&nbsp;&nbsp;&nbsp; 查看最近两次详细修改内容的diff<br>git log –stat &nbsp;&nbsp;&nbsp;&nbsp;查看提交统计信息     </file></file></p>\n</blockquote>\n<h4 id=\"Git-本地分支管理\"><a href=\"#Git-本地分支管理\" class=\"headerlink\" title=\"Git 本地分支管理\"></a>Git 本地分支管理</h4><h5 id=\"查看、切换、创建和删除分支\"><a href=\"#查看、切换、创建和删除分支\" class=\"headerlink\" title=\"查看、切换、创建和删除分支\"></a>查看、切换、创建和删除分支</h5><blockquote>\n<p>git branch -r &nbsp;&nbsp;&nbsp;&nbsp; 查看远程分支<br>git branch &lt;new_branch&gt; &nbsp;&nbsp;&nbsp;&nbsp; 创建新的分支<br>git branch -v &nbsp;&nbsp;&nbsp;&nbsp; 查看各个分支最后提交信息<br>git branch –merged &nbsp;&nbsp;&nbsp;&nbsp; 查看已经被合并到当前分支的分支<br>git branch –no-merged &nbsp;&nbsp;&nbsp;&nbsp; 查看尚未被合并到当前分支的分支<br>git checkout <branch> &nbsp;&nbsp;&nbsp;&nbsp; 切换到某个分支<br>git checkout -b &lt;new_branch&gt; &nbsp;&nbsp;&nbsp;&nbsp; 创建新的分支，并且切换过去<br>git checkout -b &lt;new_branch&gt; <branch> &nbsp;&nbsp;&nbsp;&nbsp; 基于branch创建新的new_branch<br>git checkout commitID &nbsp;&nbsp;&nbsp;&nbsp; 把某次历史提交记录checkout出来，但无分支信息，切换到其他分支会自动删除<br>git checkout commitID -b &lt;new_branch&gt; &nbsp;&nbsp;&nbsp;&nbsp; 把某次历史提交记录checkout出来，创建成一个分支<br>git branch -d <branch> &nbsp;&nbsp;&nbsp;&nbsp; 删除某个分支<br>git branch -D <branch> &nbsp;&nbsp;&nbsp;&nbsp; 强制删除某个分支 (未被合并的分支被删除的时候需要强制)      </branch></branch></branch></branch></p>\n</blockquote>\n<h4 id=\"分支合并和rebase\"><a href=\"#分支合并和rebase\" class=\"headerlink\" title=\"分支合并和rebase\"></a>分支合并和rebase</h4><blockquote>\n<p>git merge <branch> &nbsp;&nbsp;&nbsp;&nbsp; 将branch分支合并到当前分支<br>git merge origin/master –no-ff &nbsp;&nbsp;&nbsp;&nbsp; 不要Fast-Foward合并，这样可以生成merge提交<br>git rebase master <branch> &nbsp;&nbsp;&nbsp;&nbsp; 将master rebase到branch，相当于： git co <branch> &amp;&amp; git rebase master &amp;&amp; git co master &amp;&amp; git merge <branch>     </branch></branch></branch></branch></p>\n</blockquote>\n<h4 id=\"Git补丁管理-方便在多台机器上开发同步时用\"><a href=\"#Git补丁管理-方便在多台机器上开发同步时用\" class=\"headerlink\" title=\"Git补丁管理(方便在多台机器上开发同步时用)\"></a>Git补丁管理(方便在多台机器上开发同步时用)</h4><blockquote>\n<p>git diff &gt; ../sync.patch &nbsp;&nbsp;&nbsp;&nbsp; 生成补丁<br>git apply ../sync.patch &nbsp;&nbsp;&nbsp;&nbsp; 打补丁<br>git apply –check ../sync.patch &nbsp;&nbsp;&nbsp;&nbsp;测试补丁能否成功     </p>\n</blockquote>\n<h4 id=\"Git暂存管理\"><a href=\"#Git暂存管理\" class=\"headerlink\" title=\"Git暂存管理\"></a>Git暂存管理</h4><blockquote>\n<p>git stash &nbsp;&nbsp;&nbsp;&nbsp; 暂存<br>git stash list &nbsp;&nbsp;&nbsp;&nbsp; 列出所有stash<br>git stash apply &nbsp;&nbsp;&nbsp;&nbsp; 恢复暂存的内容<br>git stash drop &nbsp;&nbsp;&nbsp;&nbsp; 删除暂存区      </p>\n</blockquote>\n<h4 id=\"Git远程分支管理\"><a href=\"#Git远程分支管理\" class=\"headerlink\" title=\"Git远程分支管理\"></a>Git远程分支管理</h4><blockquote>\n<p>git pull &nbsp;&nbsp;&nbsp;&nbsp; 抓取远程仓库所有分支更新并合并到本地<br>git pull –no-ff &nbsp;&nbsp;&nbsp;&nbsp; 抓取远程仓库所有分支更新并合并到本地，不要快进合并<br>git fetch origin &nbsp;&nbsp;&nbsp;&nbsp; 抓取远程仓库更新<br>git merge origin/master &nbsp;&nbsp;&nbsp;&nbsp; 将远程主分支合并到本地当前分支<br>git co –track origin/branch &nbsp;&nbsp;&nbsp;&nbsp; 跟踪某个远程分支创建相应的本地分支<br>git co -b &lt;local_branch&gt; origin/&lt;remote_branch&gt; &nbsp;&nbsp;&nbsp;&nbsp; 基于远程分支创建本地分支，功能同上<br>git push &nbsp;&nbsp;&nbsp;&nbsp; push所有分支<br>git push origin master &nbsp;&nbsp;&nbsp;&nbsp; 将本地主分支推到远程主分支<br>git push -u origin master &nbsp;&nbsp;&nbsp;&nbsp; 将本地主分支推到远程(如无远程主分支则创建，用于初始化远程仓库)<br>git push origin &lt;local_branch&gt; &nbsp;&nbsp;&nbsp;&nbsp; 创建远程分支， origin是远程仓库名<br>git push origin &lt;local_branch&gt;:&lt;remote_branch&gt; &nbsp;&nbsp;&nbsp;&nbsp; 创建远程分支<br>git push origin :&lt;remote_branch&gt; &nbsp;&nbsp;&nbsp;&nbsp;先删除本地分支(git br -d <branch>)，然后再push删除远程分支</branch></p>\n</blockquote>\n<h4 id=\"Git远程仓库管理\"><a href=\"#Git远程仓库管理\" class=\"headerlink\" title=\"Git远程仓库管理\"></a>Git远程仓库管理</h4><h5 id=\"GitHub\"><a href=\"#GitHub\" class=\"headerlink\" title=\"GitHub\"></a>GitHub</h5><blockquote>\n<p>git remote -v &nbsp;&nbsp;&nbsp;&nbsp; 查看远程服务器地址和仓库名称<br>git remote show origin &nbsp;&nbsp;&nbsp;&nbsp; 查看远程服务器仓库状态<br>git remote add origin git@ github:####/####.git &nbsp;&nbsp;&nbsp;&nbsp; 添加远程仓库地址<br>git remote set-url origin git@ github.com:####/####.git &nbsp;&nbsp;&nbsp;&nbsp; 设置远程仓库地址(用于修改远程仓库地址)<br>git remote rm <repository> &nbsp;&nbsp;&nbsp;&nbsp; 删除远程仓库</repository></p>\n</blockquote>\n<h4 id=\"创建远程仓库\"><a href=\"#创建远程仓库\" class=\"headerlink\" title=\"创建远程仓库\"></a>创建远程仓库</h4><blockquote>\n<p>git clone –bare robbin_site robbin_site.git &nbsp;&nbsp;&nbsp;&nbsp; 用带版本的项目创建纯版本仓库<br>scp -r my_project.git git@ git.csdn.net:~ &nbsp;&nbsp;&nbsp;&nbsp; 将纯仓库上传到服务器上<br>mkdir robbin_site.git &amp;&amp; cd robbin_site.git &amp;&amp; git –bare init &nbsp;&nbsp;&nbsp;&nbsp; 在服务器创建纯仓库<br>git remote add origin git@ github.com:robbin/robbin_site.git &nbsp;&nbsp;&nbsp;&nbsp; 设置远程仓库地址<br>git push -u origin master &nbsp;&nbsp;&nbsp;&nbsp; 客户端首次提交<br>git push -u origin develop &nbsp;&nbsp;&nbsp;&nbsp; 首次将本地develop分支提交到远程develop分支，并且track<br>git remote set-head origin master &nbsp;&nbsp;&nbsp;&nbsp; 设置远程仓库的HEAD指向master分支        </p>\n</blockquote>\n<h4 id=\"设置跟踪远程库和本地库\"><a href=\"#设置跟踪远程库和本地库\" class=\"headerlink\" title=\"设置跟踪远程库和本地库\"></a>设置跟踪远程库和本地库</h4><blockquote>\n<p>git branch –set-upstream master origin/master<br>git branch –set-upstream develop origin/develop</p>\n</blockquote>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"git常用命令大全\"><a href=\"#git常用命令大全\" class=\"headerlink\" title=\"git常用命令大全  \"></a>git常用命令大全  </h2><blockquote>\n<p>本博客旨在记录常用git命令。如果希望得到更多关于git的知识，请移步到<a href=\"https://www.liaoxuefeng.com/wiki/0013739516305929606dd18361248578c67b8067c8c017b000\" target=\"_blank\" rel=\"noopener\">廖雪峰的git教程</a>，有非常详细的教程资料。</p>\n</blockquote>\n<h4 id=\"添加文件、查看状态、删除文件、提交文件、找回文件，重置修改文件\"><a href=\"#添加文件、查看状态、删除文件、提交文件、找回文件，重置修改文件\" class=\"headerlink\" title=\"添加文件、查看状态、删除文件、提交文件、找回文件，重置修改文件\"></a>添加文件、查看状态、删除文件、提交文件、找回文件，重置修改文件</h4><blockquote>\n<p>git help &lt;command&gt; &nbsp;&nbsp;&nbsp;&nbsp; 显示command的帮助文档<br>git show (commitID) &nbsp;&nbsp;&nbsp;&nbsp; 显示最近一次（某一次）提交的内容详情<br>git co – <file> &nbsp;&nbsp;&nbsp;&nbsp; 抛弃工作区某一文件的修改<br>git co . &nbsp;&nbsp;&nbsp;&nbsp; 抛弃工作区修改<br>git add <file> &nbsp;&nbsp;&nbsp;&nbsp; 将工作文件修改提交到本地暂存区<br>git add . &nbsp;&nbsp;&nbsp;&nbsp; 将所有修改过的工作文件提交暂存区<br>git rm <file> &nbsp;&nbsp;&nbsp;&nbsp; 从版本库中删除文件<br>git rm <file> –cached &nbsp;&nbsp;&nbsp;&nbsp; 从版本库中删除文件，但不删除本地文件<br>git reset <file> &nbsp;&nbsp;&nbsp;&nbsp; 从暂存区恢复到工作文件<br>git reset – . &nbsp;&nbsp;&nbsp;&nbsp; 从暂存区恢复到工作文件<br>git reset –hard &nbsp;&nbsp;&nbsp;&nbsp; 恢复最近一次提交过的状态，即放弃上次提交后的所有本次修改<br>git ci <file> git ci . git ci -a &nbsp;&nbsp;&nbsp;&nbsp; 将git add, git rm和git ci等操作都合并在一起做git ci -am “some comments”<br>git ci –amend &nbsp;&nbsp;&nbsp;&nbsp; 修改最后一次提交记录<br>git revert <commitid> &nbsp;&nbsp;&nbsp;&nbsp; 恢复某次提交的状态，恢复动作本身也创建次提交对象<br>git revert HEAD &nbsp;&nbsp;&nbsp;&nbsp; 恢复最后一次提交的状态    </commitid></file></file></file></file></file></file></p>\n</blockquote>\n<h4 id=\"查看文件diff\"><a href=\"#查看文件diff\" class=\"headerlink\" title=\"查看文件diff\"></a>查看文件diff</h4><blockquote>\n<p>git diff <file> &nbsp;&nbsp;&nbsp;&nbsp; 比较当前文件和暂存区文件差异 git diff<br>git diff <id1><id2> &nbsp;&nbsp;&nbsp;&nbsp; 比较两次提交之间的差异<br>git diff <branch1>..<branch2> &nbsp;&nbsp;&nbsp;&nbsp; 在两个分支之间比较<br>git diff –staged &nbsp;&nbsp;&nbsp;&nbsp; 比较暂存区和版本库差异<br>git diff –cached &nbsp;&nbsp;&nbsp;&nbsp; 比较暂存区和版本库差异<br>git diff –stat &nbsp;&nbsp;&nbsp;&nbsp; 仅仅比较统计信息     </branch2></branch1></id2></id1></file></p>\n</blockquote>\n<h4 id=\"查看提交记录\"><a href=\"#查看提交记录\" class=\"headerlink\" title=\"查看提交记录\"></a>查看提交记录</h4><blockquote>\n<p>git log git log <file> &nbsp;&nbsp;&nbsp;&nbsp; 查看该文件每次提交记录<br>git log -p <file> &nbsp;&nbsp;&nbsp;&nbsp; 查看每次详细修改内容的diff<br>git log -p -2 &nbsp;&nbsp;&nbsp;&nbsp; 查看最近两次详细修改内容的diff<br>git log –stat &nbsp;&nbsp;&nbsp;&nbsp;查看提交统计信息     </file></file></p>\n</blockquote>\n<h4 id=\"Git-本地分支管理\"><a href=\"#Git-本地分支管理\" class=\"headerlink\" title=\"Git 本地分支管理\"></a>Git 本地分支管理</h4><h5 id=\"查看、切换、创建和删除分支\"><a href=\"#查看、切换、创建和删除分支\" class=\"headerlink\" title=\"查看、切换、创建和删除分支\"></a>查看、切换、创建和删除分支</h5><blockquote>\n<p>git branch -r &nbsp;&nbsp;&nbsp;&nbsp; 查看远程分支<br>git branch &lt;new_branch&gt; &nbsp;&nbsp;&nbsp;&nbsp; 创建新的分支<br>git branch -v &nbsp;&nbsp;&nbsp;&nbsp; 查看各个分支最后提交信息<br>git branch –merged &nbsp;&nbsp;&nbsp;&nbsp; 查看已经被合并到当前分支的分支<br>git branch –no-merged &nbsp;&nbsp;&nbsp;&nbsp; 查看尚未被合并到当前分支的分支<br>git checkout <branch> &nbsp;&nbsp;&nbsp;&nbsp; 切换到某个分支<br>git checkout -b &lt;new_branch&gt; &nbsp;&nbsp;&nbsp;&nbsp; 创建新的分支，并且切换过去<br>git checkout -b &lt;new_branch&gt; <branch> &nbsp;&nbsp;&nbsp;&nbsp; 基于branch创建新的new_branch<br>git checkout commitID &nbsp;&nbsp;&nbsp;&nbsp; 把某次历史提交记录checkout出来，但无分支信息，切换到其他分支会自动删除<br>git checkout commitID -b &lt;new_branch&gt; &nbsp;&nbsp;&nbsp;&nbsp; 把某次历史提交记录checkout出来，创建成一个分支<br>git branch -d <branch> &nbsp;&nbsp;&nbsp;&nbsp; 删除某个分支<br>git branch -D <branch> &nbsp;&nbsp;&nbsp;&nbsp; 强制删除某个分支 (未被合并的分支被删除的时候需要强制)      </branch></branch></branch></branch></p>\n</blockquote>\n<h4 id=\"分支合并和rebase\"><a href=\"#分支合并和rebase\" class=\"headerlink\" title=\"分支合并和rebase\"></a>分支合并和rebase</h4><blockquote>\n<p>git merge <branch> &nbsp;&nbsp;&nbsp;&nbsp; 将branch分支合并到当前分支<br>git merge origin/master –no-ff &nbsp;&nbsp;&nbsp;&nbsp; 不要Fast-Foward合并，这样可以生成merge提交<br>git rebase master <branch> &nbsp;&nbsp;&nbsp;&nbsp; 将master rebase到branch，相当于： git co <branch> &amp;&amp; git rebase master &amp;&amp; git co master &amp;&amp; git merge <branch>     </branch></branch></branch></branch></p>\n</blockquote>\n<h4 id=\"Git补丁管理-方便在多台机器上开发同步时用\"><a href=\"#Git补丁管理-方便在多台机器上开发同步时用\" class=\"headerlink\" title=\"Git补丁管理(方便在多台机器上开发同步时用)\"></a>Git补丁管理(方便在多台机器上开发同步时用)</h4><blockquote>\n<p>git diff &gt; ../sync.patch &nbsp;&nbsp;&nbsp;&nbsp; 生成补丁<br>git apply ../sync.patch &nbsp;&nbsp;&nbsp;&nbsp; 打补丁<br>git apply –check ../sync.patch &nbsp;&nbsp;&nbsp;&nbsp;测试补丁能否成功     </p>\n</blockquote>\n<h4 id=\"Git暂存管理\"><a href=\"#Git暂存管理\" class=\"headerlink\" title=\"Git暂存管理\"></a>Git暂存管理</h4><blockquote>\n<p>git stash &nbsp;&nbsp;&nbsp;&nbsp; 暂存<br>git stash list &nbsp;&nbsp;&nbsp;&nbsp; 列出所有stash<br>git stash apply &nbsp;&nbsp;&nbsp;&nbsp; 恢复暂存的内容<br>git stash drop &nbsp;&nbsp;&nbsp;&nbsp; 删除暂存区      </p>\n</blockquote>\n<h4 id=\"Git远程分支管理\"><a href=\"#Git远程分支管理\" class=\"headerlink\" title=\"Git远程分支管理\"></a>Git远程分支管理</h4><blockquote>\n<p>git pull &nbsp;&nbsp;&nbsp;&nbsp; 抓取远程仓库所有分支更新并合并到本地<br>git pull –no-ff &nbsp;&nbsp;&nbsp;&nbsp; 抓取远程仓库所有分支更新并合并到本地，不要快进合并<br>git fetch origin &nbsp;&nbsp;&nbsp;&nbsp; 抓取远程仓库更新<br>git merge origin/master &nbsp;&nbsp;&nbsp;&nbsp; 将远程主分支合并到本地当前分支<br>git co –track origin/branch &nbsp;&nbsp;&nbsp;&nbsp; 跟踪某个远程分支创建相应的本地分支<br>git co -b &lt;local_branch&gt; origin/&lt;remote_branch&gt; &nbsp;&nbsp;&nbsp;&nbsp; 基于远程分支创建本地分支，功能同上<br>git push &nbsp;&nbsp;&nbsp;&nbsp; push所有分支<br>git push origin master &nbsp;&nbsp;&nbsp;&nbsp; 将本地主分支推到远程主分支<br>git push -u origin master &nbsp;&nbsp;&nbsp;&nbsp; 将本地主分支推到远程(如无远程主分支则创建，用于初始化远程仓库)<br>git push origin &lt;local_branch&gt; &nbsp;&nbsp;&nbsp;&nbsp; 创建远程分支， origin是远程仓库名<br>git push origin &lt;local_branch&gt;:&lt;remote_branch&gt; &nbsp;&nbsp;&nbsp;&nbsp; 创建远程分支<br>git push origin :&lt;remote_branch&gt; &nbsp;&nbsp;&nbsp;&nbsp;先删除本地分支(git br -d <branch>)，然后再push删除远程分支</branch></p>\n</blockquote>\n<h4 id=\"Git远程仓库管理\"><a href=\"#Git远程仓库管理\" class=\"headerlink\" title=\"Git远程仓库管理\"></a>Git远程仓库管理</h4><h5 id=\"GitHub\"><a href=\"#GitHub\" class=\"headerlink\" title=\"GitHub\"></a>GitHub</h5><blockquote>\n<p>git remote -v &nbsp;&nbsp;&nbsp;&nbsp; 查看远程服务器地址和仓库名称<br>git remote show origin &nbsp;&nbsp;&nbsp;&nbsp; 查看远程服务器仓库状态<br>git remote add origin git@ github:####/####.git &nbsp;&nbsp;&nbsp;&nbsp; 添加远程仓库地址<br>git remote set-url origin git@ github.com:####/####.git &nbsp;&nbsp;&nbsp;&nbsp; 设置远程仓库地址(用于修改远程仓库地址)<br>git remote rm <repository> &nbsp;&nbsp;&nbsp;&nbsp; 删除远程仓库</repository></p>\n</blockquote>\n<h4 id=\"创建远程仓库\"><a href=\"#创建远程仓库\" class=\"headerlink\" title=\"创建远程仓库\"></a>创建远程仓库</h4><blockquote>\n<p>git clone –bare robbin_site robbin_site.git &nbsp;&nbsp;&nbsp;&nbsp; 用带版本的项目创建纯版本仓库<br>scp -r my_project.git git@ git.csdn.net:~ &nbsp;&nbsp;&nbsp;&nbsp; 将纯仓库上传到服务器上<br>mkdir robbin_site.git &amp;&amp; cd robbin_site.git &amp;&amp; git –bare init &nbsp;&nbsp;&nbsp;&nbsp; 在服务器创建纯仓库<br>git remote add origin git@ github.com:robbin/robbin_site.git &nbsp;&nbsp;&nbsp;&nbsp; 设置远程仓库地址<br>git push -u origin master &nbsp;&nbsp;&nbsp;&nbsp; 客户端首次提交<br>git push -u origin develop &nbsp;&nbsp;&nbsp;&nbsp; 首次将本地develop分支提交到远程develop分支，并且track<br>git remote set-head origin master &nbsp;&nbsp;&nbsp;&nbsp; 设置远程仓库的HEAD指向master分支        </p>\n</blockquote>\n<h4 id=\"设置跟踪远程库和本地库\"><a href=\"#设置跟踪远程库和本地库\" class=\"headerlink\" title=\"设置跟踪远程库和本地库\"></a>设置跟踪远程库和本地库</h4><blockquote>\n<p>git branch –set-upstream master origin/master<br>git branch –set-upstream develop origin/develop</p>\n</blockquote>\n"},{"title":"css3选择器简介","date":"2017-08-24T11:06:28.000Z","description":"css3新加入的选择器简单介绍","_content":"作为前端开发人员，css样式永远是我们讨论的重点，毕竟在高速发展的现在，颜值的重要性不言而喻。作为网页样式的首选，一张网页的美观程度可以说完全由css来决定，其中选择器是css中的一大重点。在css3之前，对于选中正确的标签是让人头疼的工作，尤其是层次越来越深。对此，css3的新增加了很多选择器，减轻了开发者的不少负担。   \ncss3新增加的选择器大致可以分为几类\n+ 属性选择器；    \n+ 伪类选择器；    \n+ 伪元素选择器；\n\n## 属性选择器 \n顾名思义，属性选择器是通过标签的属性来捕获目标标签。属性可以是标签自己本身的属性（src、title等），也可以是自己定义的标签。具体使用方式: E[attr]:匹配含有属性attr的元素。\n```\ndiv[id]     可以匹配到<div id=\"one\"></div>以及<div id=\"two\"></div>\n```\nE[attr=value]:匹配含有属性attr,并且attr属性的值为value的元素。\n```\ndiv[id=one]     可以匹配到<div id=\"one\"></div>\n```\nE[attr~=value]:标签元素可以有多个自定义的属性，这就像可以同时拥有很多类名一样。这个选择器可以选中一条属性中具有多个空格分隔开的其中一个值为value的元素。\n```\ndiv[me~=man]    可以匹配到<div me=\" 14 man chinese\"></div> 或者 <div me=\" man chinese tianjin\"></div>\n```\nE[attr|=value]:这个选择器可以选中一条属性中有“-”分隔符并且分隔符开头是value的元素。\n```\ndiv[me|=a]   可以匹配到<div me=\" a-man\"></div>以及<div me=\"a-chinese tianjin\"></div>    \n```\nE[attr^=value]:这个选择器可以选中具有attr并且值以value开头的元素。\n```\ndiv[me^=a]   可以匹配到<div me=\" aman\"></div>以及<div me=\"achinese tianjin\"></div>    \n```\nE[attr$=value]:这个选择器可以选中具有attr并且值以value结尾的元素。\n```\ndiv[me$=a]   可以匹配到<div me=\" amana\"></div>以及<div me=\"achinesa tianjina\"></div>    \n```\nE[attr*=value]:这个选择器可以选中具有attr并且值包含value的元素，无论value在什么位置。\n```\ndiv[me*=a]   可以匹配到<div me=\" amana\"></div>以及<div me=\"chineas tian\"></div>    \n```\n## 伪类选择器\n通过操作伪类来选中目标元素也是css常用的一种手段。    \n作为经验丰富的前端开发者，你对这些伪元素已经烂熟于心：   \n+ E:first-child\t匹配元素E的第一个子元素  \n+ E:link\t匹配所有未被点击的链接      \n+ E:visited\t匹配所有已被点击的链接        \n+ E:active\t匹配鼠标已经其上按下、还没有释放的E元素    \n+ E:hover\t匹配鼠标悬停其上的E元素      \n+ E:focus\t匹配获得当前焦点的E元素    \n+ E:lang(c)\t匹配lang属性等于c的E元素      \n+ E:enabled\t匹配表单中可用的元素    \n+ E:disabled\t匹配表单中禁用的元素    \n+ E:checked\t匹配表单中被选中的radio或checkbox元素    \n+ E::selection\t匹配用户当前选中的元素    \n+ E:root\t匹配文档的根元素，对于HTML文档，就是HTML元素       \n\n在css3中提供了全新的伪类选择器，可以更方便的选取目标元素。    \n+ E:nth-child(n)匹配其父元素的第n个子元素，**第一个编号为1**    \n+ E:nth-last-child(n)匹配其父元素的倒数第n个子元素，**最后一个编号为1**    \n+ E:nth-of-type(n)与:nth-child()作用类似，但是仅匹配使用同种标签的元素       \n+ E:nth-last-of-type(n)\t与:nth-last-child() 作用类似，但是仅匹配使用同种标签的元素    \n+ E:last-child\t匹配父元素的最后一个子元素，等同于:nth-last-child(1)     \n+ E:first-of-type\t匹配父元素下使用同种标签的第一个子元素，等同于:nth-of-type(1)     \n+ E:last-of-type\t匹配父元素下使用同种标签的最后一个子元素，等同于:nth-last-of-type(1)     \n+ E:only-child\t匹配父元素下仅有的一个子元素，等同于:first-child:last-child或 :nth-child(1):nth-last-child(1)    \n+ E:only-of-type\t匹配父元素下使用同种标签的唯一一个子元素，等同于:first-of-type:last-of-type或 :nth-of-type(1):nth-last-of-type(1)    \n+ E:empty\t匹配一个不包含任何子元素的元素，文本节点也被看作子元素    \n+ E:not(selector)\t匹配不符合当前选择器的任何元素\n\n## 伪元素选择器\ncss允许我们向文档内部添加一个额外的元素而不扰乱文档本身，具体表现为在元素内部插入一个元素，并且可以通过选择器控制这个元素的行为。    \n+ E:first-line\t匹配E元素内容的第一行    \n+ E:first-letter\t匹配E元素内容的第一个字母     \n+ E:before\t在E元素之前插入生成的内容     \n+ E:after\t在E元素之后插入生成的内容     ","source":"_posts/hello-world.md","raw":"title: css3选择器简介\ndate: 2017-08-24 19:06:28\ntags: [css]\ncategories: [css]\ndescription: css3新加入的选择器简单介绍\n---\n作为前端开发人员，css样式永远是我们讨论的重点，毕竟在高速发展的现在，颜值的重要性不言而喻。作为网页样式的首选，一张网页的美观程度可以说完全由css来决定，其中选择器是css中的一大重点。在css3之前，对于选中正确的标签是让人头疼的工作，尤其是层次越来越深。对此，css3的新增加了很多选择器，减轻了开发者的不少负担。   \ncss3新增加的选择器大致可以分为几类\n+ 属性选择器；    \n+ 伪类选择器；    \n+ 伪元素选择器；\n\n## 属性选择器 \n顾名思义，属性选择器是通过标签的属性来捕获目标标签。属性可以是标签自己本身的属性（src、title等），也可以是自己定义的标签。具体使用方式: E[attr]:匹配含有属性attr的元素。\n```\ndiv[id]     可以匹配到<div id=\"one\"></div>以及<div id=\"two\"></div>\n```\nE[attr=value]:匹配含有属性attr,并且attr属性的值为value的元素。\n```\ndiv[id=one]     可以匹配到<div id=\"one\"></div>\n```\nE[attr~=value]:标签元素可以有多个自定义的属性，这就像可以同时拥有很多类名一样。这个选择器可以选中一条属性中具有多个空格分隔开的其中一个值为value的元素。\n```\ndiv[me~=man]    可以匹配到<div me=\" 14 man chinese\"></div> 或者 <div me=\" man chinese tianjin\"></div>\n```\nE[attr|=value]:这个选择器可以选中一条属性中有“-”分隔符并且分隔符开头是value的元素。\n```\ndiv[me|=a]   可以匹配到<div me=\" a-man\"></div>以及<div me=\"a-chinese tianjin\"></div>    \n```\nE[attr^=value]:这个选择器可以选中具有attr并且值以value开头的元素。\n```\ndiv[me^=a]   可以匹配到<div me=\" aman\"></div>以及<div me=\"achinese tianjin\"></div>    \n```\nE[attr$=value]:这个选择器可以选中具有attr并且值以value结尾的元素。\n```\ndiv[me$=a]   可以匹配到<div me=\" amana\"></div>以及<div me=\"achinesa tianjina\"></div>    \n```\nE[attr*=value]:这个选择器可以选中具有attr并且值包含value的元素，无论value在什么位置。\n```\ndiv[me*=a]   可以匹配到<div me=\" amana\"></div>以及<div me=\"chineas tian\"></div>    \n```\n## 伪类选择器\n通过操作伪类来选中目标元素也是css常用的一种手段。    \n作为经验丰富的前端开发者，你对这些伪元素已经烂熟于心：   \n+ E:first-child\t匹配元素E的第一个子元素  \n+ E:link\t匹配所有未被点击的链接      \n+ E:visited\t匹配所有已被点击的链接        \n+ E:active\t匹配鼠标已经其上按下、还没有释放的E元素    \n+ E:hover\t匹配鼠标悬停其上的E元素      \n+ E:focus\t匹配获得当前焦点的E元素    \n+ E:lang(c)\t匹配lang属性等于c的E元素      \n+ E:enabled\t匹配表单中可用的元素    \n+ E:disabled\t匹配表单中禁用的元素    \n+ E:checked\t匹配表单中被选中的radio或checkbox元素    \n+ E::selection\t匹配用户当前选中的元素    \n+ E:root\t匹配文档的根元素，对于HTML文档，就是HTML元素       \n\n在css3中提供了全新的伪类选择器，可以更方便的选取目标元素。    \n+ E:nth-child(n)匹配其父元素的第n个子元素，**第一个编号为1**    \n+ E:nth-last-child(n)匹配其父元素的倒数第n个子元素，**最后一个编号为1**    \n+ E:nth-of-type(n)与:nth-child()作用类似，但是仅匹配使用同种标签的元素       \n+ E:nth-last-of-type(n)\t与:nth-last-child() 作用类似，但是仅匹配使用同种标签的元素    \n+ E:last-child\t匹配父元素的最后一个子元素，等同于:nth-last-child(1)     \n+ E:first-of-type\t匹配父元素下使用同种标签的第一个子元素，等同于:nth-of-type(1)     \n+ E:last-of-type\t匹配父元素下使用同种标签的最后一个子元素，等同于:nth-last-of-type(1)     \n+ E:only-child\t匹配父元素下仅有的一个子元素，等同于:first-child:last-child或 :nth-child(1):nth-last-child(1)    \n+ E:only-of-type\t匹配父元素下使用同种标签的唯一一个子元素，等同于:first-of-type:last-of-type或 :nth-of-type(1):nth-last-of-type(1)    \n+ E:empty\t匹配一个不包含任何子元素的元素，文本节点也被看作子元素    \n+ E:not(selector)\t匹配不符合当前选择器的任何元素\n\n## 伪元素选择器\ncss允许我们向文档内部添加一个额外的元素而不扰乱文档本身，具体表现为在元素内部插入一个元素，并且可以通过选择器控制这个元素的行为。    \n+ E:first-line\t匹配E元素内容的第一行    \n+ E:first-letter\t匹配E元素内容的第一个字母     \n+ E:before\t在E元素之前插入生成的内容     \n+ E:after\t在E元素之后插入生成的内容     ","slug":"hello-world","published":1,"updated":"2019-09-29T11:22:34.499Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck3jm8gvq000dz0bt5ql5nwuh","content":"<p>作为前端开发人员，css样式永远是我们讨论的重点，毕竟在高速发展的现在，颜值的重要性不言而喻。作为网页样式的首选，一张网页的美观程度可以说完全由css来决定，其中选择器是css中的一大重点。在css3之前，对于选中正确的标签是让人头疼的工作，尤其是层次越来越深。对此，css3的新增加了很多选择器，减轻了开发者的不少负担。<br>css3新增加的选择器大致可以分为几类</p>\n<ul>\n<li>属性选择器；    </li>\n<li>伪类选择器；    </li>\n<li>伪元素选择器；</li>\n</ul>\n<h2 id=\"属性选择器\"><a href=\"#属性选择器\" class=\"headerlink\" title=\"属性选择器\"></a>属性选择器</h2><p>顾名思义，属性选择器是通过标签的属性来捕获目标标签。属性可以是标签自己本身的属性（src、title等），也可以是自己定义的标签。具体使用方式: E[attr]:匹配含有属性attr的元素。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">div[id]     可以匹配到&lt;div id=&quot;one&quot;&gt;&lt;/div&gt;以及&lt;div id=&quot;two&quot;&gt;&lt;/div&gt;</span><br></pre></td></tr></table></figure></p>\n<p>E[attr=value]:匹配含有属性attr,并且attr属性的值为value的元素。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">div[id=one]     可以匹配到&lt;div id=&quot;one&quot;&gt;&lt;/div&gt;</span><br></pre></td></tr></table></figure></p>\n<p>E[attr~=value]:标签元素可以有多个自定义的属性，这就像可以同时拥有很多类名一样。这个选择器可以选中一条属性中具有多个空格分隔开的其中一个值为value的元素。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">div[me~=man]    可以匹配到&lt;div me=&quot; 14 man chinese&quot;&gt;&lt;/div&gt; 或者 &lt;div me=&quot; man chinese tianjin&quot;&gt;&lt;/div&gt;</span><br></pre></td></tr></table></figure></p>\n<p>E[attr|=value]:这个选择器可以选中一条属性中有“-”分隔符并且分隔符开头是value的元素。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">div[me|=a]   可以匹配到&lt;div me=&quot; a-man&quot;&gt;&lt;/div&gt;以及&lt;div me=&quot;a-chinese tianjin&quot;&gt;&lt;/div&gt;</span><br></pre></td></tr></table></figure></p>\n<p>E[attr^=value]:这个选择器可以选中具有attr并且值以value开头的元素。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">div[me^=a]   可以匹配到&lt;div me=&quot; aman&quot;&gt;&lt;/div&gt;以及&lt;div me=&quot;achinese tianjin&quot;&gt;&lt;/div&gt;</span><br></pre></td></tr></table></figure></p>\n<p>E[attr$=value]:这个选择器可以选中具有attr并且值以value结尾的元素。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">div[me$=a]   可以匹配到&lt;div me=&quot; amana&quot;&gt;&lt;/div&gt;以及&lt;div me=&quot;achinesa tianjina&quot;&gt;&lt;/div&gt;</span><br></pre></td></tr></table></figure></p>\n<p>E[attr*=value]:这个选择器可以选中具有attr并且值包含value的元素，无论value在什么位置。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">div[me*=a]   可以匹配到&lt;div me=&quot; amana&quot;&gt;&lt;/div&gt;以及&lt;div me=&quot;chineas tian&quot;&gt;&lt;/div&gt;</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"伪类选择器\"><a href=\"#伪类选择器\" class=\"headerlink\" title=\"伪类选择器\"></a>伪类选择器</h2><p>通过操作伪类来选中目标元素也是css常用的一种手段。<br>作为经验丰富的前端开发者，你对这些伪元素已经烂熟于心：   </p>\n<ul>\n<li>E:first-child    匹配元素E的第一个子元素  </li>\n<li>E:link    匹配所有未被点击的链接      </li>\n<li>E:visited    匹配所有已被点击的链接        </li>\n<li>E:active    匹配鼠标已经其上按下、还没有释放的E元素    </li>\n<li>E:hover    匹配鼠标悬停其上的E元素      </li>\n<li>E:focus    匹配获得当前焦点的E元素    </li>\n<li>E:lang(c)    匹配lang属性等于c的E元素      </li>\n<li>E:enabled    匹配表单中可用的元素    </li>\n<li>E:disabled    匹配表单中禁用的元素    </li>\n<li>E:checked    匹配表单中被选中的radio或checkbox元素    </li>\n<li>E::selection    匹配用户当前选中的元素    </li>\n<li>E:root    匹配文档的根元素，对于HTML文档，就是HTML元素       </li>\n</ul>\n<p>在css3中提供了全新的伪类选择器，可以更方便的选取目标元素。    </p>\n<ul>\n<li>E:nth-child(n)匹配其父元素的第n个子元素，<strong>第一个编号为1</strong>    </li>\n<li>E:nth-last-child(n)匹配其父元素的倒数第n个子元素，<strong>最后一个编号为1</strong>    </li>\n<li>E:nth-of-type(n)与:nth-child()作用类似，但是仅匹配使用同种标签的元素       </li>\n<li>E:nth-last-of-type(n)    与:nth-last-child() 作用类似，但是仅匹配使用同种标签的元素    </li>\n<li>E:last-child    匹配父元素的最后一个子元素，等同于:nth-last-child(1)     </li>\n<li>E:first-of-type    匹配父元素下使用同种标签的第一个子元素，等同于:nth-of-type(1)     </li>\n<li>E:last-of-type    匹配父元素下使用同种标签的最后一个子元素，等同于:nth-last-of-type(1)     </li>\n<li>E:only-child    匹配父元素下仅有的一个子元素，等同于:first-child:last-child或 :nth-child(1):nth-last-child(1)    </li>\n<li>E:only-of-type    匹配父元素下使用同种标签的唯一一个子元素，等同于:first-of-type:last-of-type或 :nth-of-type(1):nth-last-of-type(1)    </li>\n<li>E:empty    匹配一个不包含任何子元素的元素，文本节点也被看作子元素    </li>\n<li>E:not(selector)    匹配不符合当前选择器的任何元素</li>\n</ul>\n<h2 id=\"伪元素选择器\"><a href=\"#伪元素选择器\" class=\"headerlink\" title=\"伪元素选择器\"></a>伪元素选择器</h2><p>css允许我们向文档内部添加一个额外的元素而不扰乱文档本身，具体表现为在元素内部插入一个元素，并且可以通过选择器控制这个元素的行为。    </p>\n<ul>\n<li>E:first-line    匹配E元素内容的第一行    </li>\n<li>E:first-letter    匹配E元素内容的第一个字母     </li>\n<li>E:before    在E元素之前插入生成的内容     </li>\n<li>E:after    在E元素之后插入生成的内容     </li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<p>作为前端开发人员，css样式永远是我们讨论的重点，毕竟在高速发展的现在，颜值的重要性不言而喻。作为网页样式的首选，一张网页的美观程度可以说完全由css来决定，其中选择器是css中的一大重点。在css3之前，对于选中正确的标签是让人头疼的工作，尤其是层次越来越深。对此，css3的新增加了很多选择器，减轻了开发者的不少负担。<br>css3新增加的选择器大致可以分为几类</p>\n<ul>\n<li>属性选择器；    </li>\n<li>伪类选择器；    </li>\n<li>伪元素选择器；</li>\n</ul>\n<h2 id=\"属性选择器\"><a href=\"#属性选择器\" class=\"headerlink\" title=\"属性选择器\"></a>属性选择器</h2><p>顾名思义，属性选择器是通过标签的属性来捕获目标标签。属性可以是标签自己本身的属性（src、title等），也可以是自己定义的标签。具体使用方式: E[attr]:匹配含有属性attr的元素。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">div[id]     可以匹配到&lt;div id=&quot;one&quot;&gt;&lt;/div&gt;以及&lt;div id=&quot;two&quot;&gt;&lt;/div&gt;</span><br></pre></td></tr></table></figure></p>\n<p>E[attr=value]:匹配含有属性attr,并且attr属性的值为value的元素。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">div[id=one]     可以匹配到&lt;div id=&quot;one&quot;&gt;&lt;/div&gt;</span><br></pre></td></tr></table></figure></p>\n<p>E[attr~=value]:标签元素可以有多个自定义的属性，这就像可以同时拥有很多类名一样。这个选择器可以选中一条属性中具有多个空格分隔开的其中一个值为value的元素。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">div[me~=man]    可以匹配到&lt;div me=&quot; 14 man chinese&quot;&gt;&lt;/div&gt; 或者 &lt;div me=&quot; man chinese tianjin&quot;&gt;&lt;/div&gt;</span><br></pre></td></tr></table></figure></p>\n<p>E[attr|=value]:这个选择器可以选中一条属性中有“-”分隔符并且分隔符开头是value的元素。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">div[me|=a]   可以匹配到&lt;div me=&quot; a-man&quot;&gt;&lt;/div&gt;以及&lt;div me=&quot;a-chinese tianjin&quot;&gt;&lt;/div&gt;</span><br></pre></td></tr></table></figure></p>\n<p>E[attr^=value]:这个选择器可以选中具有attr并且值以value开头的元素。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">div[me^=a]   可以匹配到&lt;div me=&quot; aman&quot;&gt;&lt;/div&gt;以及&lt;div me=&quot;achinese tianjin&quot;&gt;&lt;/div&gt;</span><br></pre></td></tr></table></figure></p>\n<p>E[attr$=value]:这个选择器可以选中具有attr并且值以value结尾的元素。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">div[me$=a]   可以匹配到&lt;div me=&quot; amana&quot;&gt;&lt;/div&gt;以及&lt;div me=&quot;achinesa tianjina&quot;&gt;&lt;/div&gt;</span><br></pre></td></tr></table></figure></p>\n<p>E[attr*=value]:这个选择器可以选中具有attr并且值包含value的元素，无论value在什么位置。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">div[me*=a]   可以匹配到&lt;div me=&quot; amana&quot;&gt;&lt;/div&gt;以及&lt;div me=&quot;chineas tian&quot;&gt;&lt;/div&gt;</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"伪类选择器\"><a href=\"#伪类选择器\" class=\"headerlink\" title=\"伪类选择器\"></a>伪类选择器</h2><p>通过操作伪类来选中目标元素也是css常用的一种手段。<br>作为经验丰富的前端开发者，你对这些伪元素已经烂熟于心：   </p>\n<ul>\n<li>E:first-child    匹配元素E的第一个子元素  </li>\n<li>E:link    匹配所有未被点击的链接      </li>\n<li>E:visited    匹配所有已被点击的链接        </li>\n<li>E:active    匹配鼠标已经其上按下、还没有释放的E元素    </li>\n<li>E:hover    匹配鼠标悬停其上的E元素      </li>\n<li>E:focus    匹配获得当前焦点的E元素    </li>\n<li>E:lang(c)    匹配lang属性等于c的E元素      </li>\n<li>E:enabled    匹配表单中可用的元素    </li>\n<li>E:disabled    匹配表单中禁用的元素    </li>\n<li>E:checked    匹配表单中被选中的radio或checkbox元素    </li>\n<li>E::selection    匹配用户当前选中的元素    </li>\n<li>E:root    匹配文档的根元素，对于HTML文档，就是HTML元素       </li>\n</ul>\n<p>在css3中提供了全新的伪类选择器，可以更方便的选取目标元素。    </p>\n<ul>\n<li>E:nth-child(n)匹配其父元素的第n个子元素，<strong>第一个编号为1</strong>    </li>\n<li>E:nth-last-child(n)匹配其父元素的倒数第n个子元素，<strong>最后一个编号为1</strong>    </li>\n<li>E:nth-of-type(n)与:nth-child()作用类似，但是仅匹配使用同种标签的元素       </li>\n<li>E:nth-last-of-type(n)    与:nth-last-child() 作用类似，但是仅匹配使用同种标签的元素    </li>\n<li>E:last-child    匹配父元素的最后一个子元素，等同于:nth-last-child(1)     </li>\n<li>E:first-of-type    匹配父元素下使用同种标签的第一个子元素，等同于:nth-of-type(1)     </li>\n<li>E:last-of-type    匹配父元素下使用同种标签的最后一个子元素，等同于:nth-last-of-type(1)     </li>\n<li>E:only-child    匹配父元素下仅有的一个子元素，等同于:first-child:last-child或 :nth-child(1):nth-last-child(1)    </li>\n<li>E:only-of-type    匹配父元素下使用同种标签的唯一一个子元素，等同于:first-of-type:last-of-type或 :nth-of-type(1):nth-last-of-type(1)    </li>\n<li>E:empty    匹配一个不包含任何子元素的元素，文本节点也被看作子元素    </li>\n<li>E:not(selector)    匹配不符合当前选择器的任何元素</li>\n</ul>\n<h2 id=\"伪元素选择器\"><a href=\"#伪元素选择器\" class=\"headerlink\" title=\"伪元素选择器\"></a>伪元素选择器</h2><p>css允许我们向文档内部添加一个额外的元素而不扰乱文档本身，具体表现为在元素内部插入一个元素，并且可以通过选择器控制这个元素的行为。    </p>\n<ul>\n<li>E:first-line    匹配E元素内容的第一行    </li>\n<li>E:first-letter    匹配E元素内容的第一个字母     </li>\n<li>E:before    在E元素之前插入生成的内容     </li>\n<li>E:after    在E元素之后插入生成的内容     </li>\n</ul>\n"},{"title":"html清除缓存","date":"2017-11-25T00:25:15.000Z","description":"通过前端的方法清除浏览器缓存","_content":"## 通过设置 meta 标签清除页面缓存\n通过向 header 中添加以下代码可以清除页面缓存\n```\n<meta http-equiv=\"Cache-Control\" content=\"no-cache, no-store, must-revalidate\" />\n<meta http-equiv=\"Pragma\" content=\"no-cache\" />\n<meta http-equiv=\"Expires\" content=\"0\" />\n```\n### Cache-Control头域\nCache-Control 指定请求和响应遵循的缓存机制。在请求消息或响应消息中设置Cache-Control并不会修改另一个消息处理过程中的缓存处理过程。请求时的缓存指令包括 **no-cache**、**no-store**、**max-age**、**max-stale**、**min-fresh**、**only-if-cached**，响应消息中的指令包括 **public**、**private**、**no-cache**、**no-store**、**no-transform**、**must-revalidate**、**proxy-revalidate**、**max-age**。各个消息中的指令含义如下\n+ Public指示响应可被任何缓存区缓存\n+ Private指示对于单个用户的整个或部分响应消息，不能被共享缓存处理。这允许服务器仅仅描述当用户的部分响应消息，此响应消息对于其他用户的请求无效\n+ no-cache指示请求或响应消息不能缓存\n+ no-store用于防止重要的信息被无意的发布。在请求消息中发送将使得请求和响应消息都不使用缓存。\n+ must-revalidation/proxy-revalidation如果缓存的内容失效，请求必须发送到服务器/代理以进行重新验证\n+ max-age指示客户机可以接收生存期不大于指定时间（以秒为单位）的响应\n+ min-fresh指示客户机可以接收响应时间小于当前时间加上指定时间的响应\n+ max-stale指示客户机可以接收超出超时期间的响应消息。如果指定max-stale消息的值，那么客户机可以接收超出超时期指定值之内的响应消息。\n\n更多具体信息可以移步[百度百科](https://baike.baidu.com/item/Cache-control/1885913?fr=aladdin)查看\n### pragma与no-cache用于定义页面缓存,不缓存页面\n### Expires可以用于设定网页的到期时间。一旦网页过期，必须到服务器上重新调阅。可以把该值设置为一个早已过去的时间，那么访问此网时若重复在地址栏按回车，那么每次都会重复访问。注意：必须使用GMT的时间格式\n### 如果这些还不够，就必须从代码中做文章。可以给每个文件加一个后缀，告诉浏览器这是一个新文件。这一效果通常选择在打包自动生成。\n## 通过异步请求更新数据\n### 使用ajax请求文件时加上请求头 **If-Modified-Since** 和 **Cache-Control** \n```\n$.ajax({\n  url:'/',\n  dataType:'json',\n  beforeSend :function(xmlHttp){ \n    xmlHttp.setRequestHeader(\"If-Modified-Since\",\"0\"); \n    xmlHttp.setRequestHeader(\"Cache-Control\",\"no-cache\");\n  },\n  async:false,\n  success:function(response){\n    ...\n  }\n});\n```\n### 你也可以试试直接使用 **cache:false**\n```\n$.ajax({\n  url:'/',\n  dataType:'json',\n  data:{},\n  cache:false, \n  ifModified :true,\n  async:false,\n  success:function(response){\n    ...\n  }\n});\n```","source":"_posts/html清除缓存.md","raw":"title: html清除缓存\ntags: [html5, cache]\ndate: 2017-11-25 08:25:15\ncategories: [html5]\ndescription: 通过前端的方法清除浏览器缓存\n---\n## 通过设置 meta 标签清除页面缓存\n通过向 header 中添加以下代码可以清除页面缓存\n```\n<meta http-equiv=\"Cache-Control\" content=\"no-cache, no-store, must-revalidate\" />\n<meta http-equiv=\"Pragma\" content=\"no-cache\" />\n<meta http-equiv=\"Expires\" content=\"0\" />\n```\n### Cache-Control头域\nCache-Control 指定请求和响应遵循的缓存机制。在请求消息或响应消息中设置Cache-Control并不会修改另一个消息处理过程中的缓存处理过程。请求时的缓存指令包括 **no-cache**、**no-store**、**max-age**、**max-stale**、**min-fresh**、**only-if-cached**，响应消息中的指令包括 **public**、**private**、**no-cache**、**no-store**、**no-transform**、**must-revalidate**、**proxy-revalidate**、**max-age**。各个消息中的指令含义如下\n+ Public指示响应可被任何缓存区缓存\n+ Private指示对于单个用户的整个或部分响应消息，不能被共享缓存处理。这允许服务器仅仅描述当用户的部分响应消息，此响应消息对于其他用户的请求无效\n+ no-cache指示请求或响应消息不能缓存\n+ no-store用于防止重要的信息被无意的发布。在请求消息中发送将使得请求和响应消息都不使用缓存。\n+ must-revalidation/proxy-revalidation如果缓存的内容失效，请求必须发送到服务器/代理以进行重新验证\n+ max-age指示客户机可以接收生存期不大于指定时间（以秒为单位）的响应\n+ min-fresh指示客户机可以接收响应时间小于当前时间加上指定时间的响应\n+ max-stale指示客户机可以接收超出超时期间的响应消息。如果指定max-stale消息的值，那么客户机可以接收超出超时期指定值之内的响应消息。\n\n更多具体信息可以移步[百度百科](https://baike.baidu.com/item/Cache-control/1885913?fr=aladdin)查看\n### pragma与no-cache用于定义页面缓存,不缓存页面\n### Expires可以用于设定网页的到期时间。一旦网页过期，必须到服务器上重新调阅。可以把该值设置为一个早已过去的时间，那么访问此网时若重复在地址栏按回车，那么每次都会重复访问。注意：必须使用GMT的时间格式\n### 如果这些还不够，就必须从代码中做文章。可以给每个文件加一个后缀，告诉浏览器这是一个新文件。这一效果通常选择在打包自动生成。\n## 通过异步请求更新数据\n### 使用ajax请求文件时加上请求头 **If-Modified-Since** 和 **Cache-Control** \n```\n$.ajax({\n  url:'/',\n  dataType:'json',\n  beforeSend :function(xmlHttp){ \n    xmlHttp.setRequestHeader(\"If-Modified-Since\",\"0\"); \n    xmlHttp.setRequestHeader(\"Cache-Control\",\"no-cache\");\n  },\n  async:false,\n  success:function(response){\n    ...\n  }\n});\n```\n### 你也可以试试直接使用 **cache:false**\n```\n$.ajax({\n  url:'/',\n  dataType:'json',\n  data:{},\n  cache:false, \n  ifModified :true,\n  async:false,\n  success:function(response){\n    ...\n  }\n});\n```","slug":"html清除缓存","published":1,"updated":"2019-09-29T11:22:34.499Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck3jm8gvs000ez0bttgwb0nld","content":"<h2 id=\"通过设置-meta-标签清除页面缓存\"><a href=\"#通过设置-meta-标签清除页面缓存\" class=\"headerlink\" title=\"通过设置 meta 标签清除页面缓存\"></a>通过设置 meta 标签清除页面缓存</h2><p>通过向 header 中添加以下代码可以清除页面缓存<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;meta http-equiv=&quot;Cache-Control&quot; content=&quot;no-cache, no-store, must-revalidate&quot; /&gt;</span><br><span class=\"line\">&lt;meta http-equiv=&quot;Pragma&quot; content=&quot;no-cache&quot; /&gt;</span><br><span class=\"line\">&lt;meta http-equiv=&quot;Expires&quot; content=&quot;0&quot; /&gt;</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"Cache-Control头域\"><a href=\"#Cache-Control头域\" class=\"headerlink\" title=\"Cache-Control头域\"></a>Cache-Control头域</h3><p>Cache-Control 指定请求和响应遵循的缓存机制。在请求消息或响应消息中设置Cache-Control并不会修改另一个消息处理过程中的缓存处理过程。请求时的缓存指令包括 <strong>no-cache</strong>、<strong>no-store</strong>、<strong>max-age</strong>、<strong>max-stale</strong>、<strong>min-fresh</strong>、<strong>only-if-cached</strong>，响应消息中的指令包括 <strong>public</strong>、<strong>private</strong>、<strong>no-cache</strong>、<strong>no-store</strong>、<strong>no-transform</strong>、<strong>must-revalidate</strong>、<strong>proxy-revalidate</strong>、<strong>max-age</strong>。各个消息中的指令含义如下</p>\n<ul>\n<li>Public指示响应可被任何缓存区缓存</li>\n<li>Private指示对于单个用户的整个或部分响应消息，不能被共享缓存处理。这允许服务器仅仅描述当用户的部分响应消息，此响应消息对于其他用户的请求无效</li>\n<li>no-cache指示请求或响应消息不能缓存</li>\n<li>no-store用于防止重要的信息被无意的发布。在请求消息中发送将使得请求和响应消息都不使用缓存。</li>\n<li>must-revalidation/proxy-revalidation如果缓存的内容失效，请求必须发送到服务器/代理以进行重新验证</li>\n<li>max-age指示客户机可以接收生存期不大于指定时间（以秒为单位）的响应</li>\n<li>min-fresh指示客户机可以接收响应时间小于当前时间加上指定时间的响应</li>\n<li>max-stale指示客户机可以接收超出超时期间的响应消息。如果指定max-stale消息的值，那么客户机可以接收超出超时期指定值之内的响应消息。</li>\n</ul>\n<p>更多具体信息可以移步<a href=\"https://baike.baidu.com/item/Cache-control/1885913?fr=aladdin\" target=\"_blank\" rel=\"noopener\">百度百科</a>查看</p>\n<h3 id=\"pragma与no-cache用于定义页面缓存-不缓存页面\"><a href=\"#pragma与no-cache用于定义页面缓存-不缓存页面\" class=\"headerlink\" title=\"pragma与no-cache用于定义页面缓存,不缓存页面\"></a>pragma与no-cache用于定义页面缓存,不缓存页面</h3><h3 id=\"Expires可以用于设定网页的到期时间。一旦网页过期，必须到服务器上重新调阅。可以把该值设置为一个早已过去的时间，那么访问此网时若重复在地址栏按回车，那么每次都会重复访问。注意：必须使用GMT的时间格式\"><a href=\"#Expires可以用于设定网页的到期时间。一旦网页过期，必须到服务器上重新调阅。可以把该值设置为一个早已过去的时间，那么访问此网时若重复在地址栏按回车，那么每次都会重复访问。注意：必须使用GMT的时间格式\" class=\"headerlink\" title=\"Expires可以用于设定网页的到期时间。一旦网页过期，必须到服务器上重新调阅。可以把该值设置为一个早已过去的时间，那么访问此网时若重复在地址栏按回车，那么每次都会重复访问。注意：必须使用GMT的时间格式\"></a>Expires可以用于设定网页的到期时间。一旦网页过期，必须到服务器上重新调阅。可以把该值设置为一个早已过去的时间，那么访问此网时若重复在地址栏按回车，那么每次都会重复访问。注意：必须使用GMT的时间格式</h3><h3 id=\"如果这些还不够，就必须从代码中做文章。可以给每个文件加一个后缀，告诉浏览器这是一个新文件。这一效果通常选择在打包自动生成。\"><a href=\"#如果这些还不够，就必须从代码中做文章。可以给每个文件加一个后缀，告诉浏览器这是一个新文件。这一效果通常选择在打包自动生成。\" class=\"headerlink\" title=\"如果这些还不够，就必须从代码中做文章。可以给每个文件加一个后缀，告诉浏览器这是一个新文件。这一效果通常选择在打包自动生成。\"></a>如果这些还不够，就必须从代码中做文章。可以给每个文件加一个后缀，告诉浏览器这是一个新文件。这一效果通常选择在打包自动生成。</h3><h2 id=\"通过异步请求更新数据\"><a href=\"#通过异步请求更新数据\" class=\"headerlink\" title=\"通过异步请求更新数据\"></a>通过异步请求更新数据</h2><h3 id=\"使用ajax请求文件时加上请求头-If-Modified-Since-和-Cache-Control\"><a href=\"#使用ajax请求文件时加上请求头-If-Modified-Since-和-Cache-Control\" class=\"headerlink\" title=\"使用ajax请求文件时加上请求头 If-Modified-Since 和 Cache-Control\"></a>使用ajax请求文件时加上请求头 <strong>If-Modified-Since</strong> 和 <strong>Cache-Control</strong></h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$.ajax(&#123;</span><br><span class=\"line\">  url:&apos;/&apos;,</span><br><span class=\"line\">  dataType:&apos;json&apos;,</span><br><span class=\"line\">  beforeSend :function(xmlHttp)&#123; </span><br><span class=\"line\">    xmlHttp.setRequestHeader(&quot;If-Modified-Since&quot;,&quot;0&quot;); </span><br><span class=\"line\">    xmlHttp.setRequestHeader(&quot;Cache-Control&quot;,&quot;no-cache&quot;);</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  async:false,</span><br><span class=\"line\">  success:function(response)&#123;</span><br><span class=\"line\">    ...</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<h3 id=\"你也可以试试直接使用-cache-false\"><a href=\"#你也可以试试直接使用-cache-false\" class=\"headerlink\" title=\"你也可以试试直接使用 cache:false\"></a>你也可以试试直接使用 <strong>cache:false</strong></h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$.ajax(&#123;</span><br><span class=\"line\">  url:&apos;/&apos;,</span><br><span class=\"line\">  dataType:&apos;json&apos;,</span><br><span class=\"line\">  data:&#123;&#125;,</span><br><span class=\"line\">  cache:false, </span><br><span class=\"line\">  ifModified :true,</span><br><span class=\"line\">  async:false,</span><br><span class=\"line\">  success:function(response)&#123;</span><br><span class=\"line\">    ...</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"","more":"<h2 id=\"通过设置-meta-标签清除页面缓存\"><a href=\"#通过设置-meta-标签清除页面缓存\" class=\"headerlink\" title=\"通过设置 meta 标签清除页面缓存\"></a>通过设置 meta 标签清除页面缓存</h2><p>通过向 header 中添加以下代码可以清除页面缓存<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;meta http-equiv=&quot;Cache-Control&quot; content=&quot;no-cache, no-store, must-revalidate&quot; /&gt;</span><br><span class=\"line\">&lt;meta http-equiv=&quot;Pragma&quot; content=&quot;no-cache&quot; /&gt;</span><br><span class=\"line\">&lt;meta http-equiv=&quot;Expires&quot; content=&quot;0&quot; /&gt;</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"Cache-Control头域\"><a href=\"#Cache-Control头域\" class=\"headerlink\" title=\"Cache-Control头域\"></a>Cache-Control头域</h3><p>Cache-Control 指定请求和响应遵循的缓存机制。在请求消息或响应消息中设置Cache-Control并不会修改另一个消息处理过程中的缓存处理过程。请求时的缓存指令包括 <strong>no-cache</strong>、<strong>no-store</strong>、<strong>max-age</strong>、<strong>max-stale</strong>、<strong>min-fresh</strong>、<strong>only-if-cached</strong>，响应消息中的指令包括 <strong>public</strong>、<strong>private</strong>、<strong>no-cache</strong>、<strong>no-store</strong>、<strong>no-transform</strong>、<strong>must-revalidate</strong>、<strong>proxy-revalidate</strong>、<strong>max-age</strong>。各个消息中的指令含义如下</p>\n<ul>\n<li>Public指示响应可被任何缓存区缓存</li>\n<li>Private指示对于单个用户的整个或部分响应消息，不能被共享缓存处理。这允许服务器仅仅描述当用户的部分响应消息，此响应消息对于其他用户的请求无效</li>\n<li>no-cache指示请求或响应消息不能缓存</li>\n<li>no-store用于防止重要的信息被无意的发布。在请求消息中发送将使得请求和响应消息都不使用缓存。</li>\n<li>must-revalidation/proxy-revalidation如果缓存的内容失效，请求必须发送到服务器/代理以进行重新验证</li>\n<li>max-age指示客户机可以接收生存期不大于指定时间（以秒为单位）的响应</li>\n<li>min-fresh指示客户机可以接收响应时间小于当前时间加上指定时间的响应</li>\n<li>max-stale指示客户机可以接收超出超时期间的响应消息。如果指定max-stale消息的值，那么客户机可以接收超出超时期指定值之内的响应消息。</li>\n</ul>\n<p>更多具体信息可以移步<a href=\"https://baike.baidu.com/item/Cache-control/1885913?fr=aladdin\" target=\"_blank\" rel=\"noopener\">百度百科</a>查看</p>\n<h3 id=\"pragma与no-cache用于定义页面缓存-不缓存页面\"><a href=\"#pragma与no-cache用于定义页面缓存-不缓存页面\" class=\"headerlink\" title=\"pragma与no-cache用于定义页面缓存,不缓存页面\"></a>pragma与no-cache用于定义页面缓存,不缓存页面</h3><h3 id=\"Expires可以用于设定网页的到期时间。一旦网页过期，必须到服务器上重新调阅。可以把该值设置为一个早已过去的时间，那么访问此网时若重复在地址栏按回车，那么每次都会重复访问。注意：必须使用GMT的时间格式\"><a href=\"#Expires可以用于设定网页的到期时间。一旦网页过期，必须到服务器上重新调阅。可以把该值设置为一个早已过去的时间，那么访问此网时若重复在地址栏按回车，那么每次都会重复访问。注意：必须使用GMT的时间格式\" class=\"headerlink\" title=\"Expires可以用于设定网页的到期时间。一旦网页过期，必须到服务器上重新调阅。可以把该值设置为一个早已过去的时间，那么访问此网时若重复在地址栏按回车，那么每次都会重复访问。注意：必须使用GMT的时间格式\"></a>Expires可以用于设定网页的到期时间。一旦网页过期，必须到服务器上重新调阅。可以把该值设置为一个早已过去的时间，那么访问此网时若重复在地址栏按回车，那么每次都会重复访问。注意：必须使用GMT的时间格式</h3><h3 id=\"如果这些还不够，就必须从代码中做文章。可以给每个文件加一个后缀，告诉浏览器这是一个新文件。这一效果通常选择在打包自动生成。\"><a href=\"#如果这些还不够，就必须从代码中做文章。可以给每个文件加一个后缀，告诉浏览器这是一个新文件。这一效果通常选择在打包自动生成。\" class=\"headerlink\" title=\"如果这些还不够，就必须从代码中做文章。可以给每个文件加一个后缀，告诉浏览器这是一个新文件。这一效果通常选择在打包自动生成。\"></a>如果这些还不够，就必须从代码中做文章。可以给每个文件加一个后缀，告诉浏览器这是一个新文件。这一效果通常选择在打包自动生成。</h3><h2 id=\"通过异步请求更新数据\"><a href=\"#通过异步请求更新数据\" class=\"headerlink\" title=\"通过异步请求更新数据\"></a>通过异步请求更新数据</h2><h3 id=\"使用ajax请求文件时加上请求头-If-Modified-Since-和-Cache-Control\"><a href=\"#使用ajax请求文件时加上请求头-If-Modified-Since-和-Cache-Control\" class=\"headerlink\" title=\"使用ajax请求文件时加上请求头 If-Modified-Since 和 Cache-Control\"></a>使用ajax请求文件时加上请求头 <strong>If-Modified-Since</strong> 和 <strong>Cache-Control</strong></h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$.ajax(&#123;</span><br><span class=\"line\">  url:&apos;/&apos;,</span><br><span class=\"line\">  dataType:&apos;json&apos;,</span><br><span class=\"line\">  beforeSend :function(xmlHttp)&#123; </span><br><span class=\"line\">    xmlHttp.setRequestHeader(&quot;If-Modified-Since&quot;,&quot;0&quot;); </span><br><span class=\"line\">    xmlHttp.setRequestHeader(&quot;Cache-Control&quot;,&quot;no-cache&quot;);</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  async:false,</span><br><span class=\"line\">  success:function(response)&#123;</span><br><span class=\"line\">    ...</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<h3 id=\"你也可以试试直接使用-cache-false\"><a href=\"#你也可以试试直接使用-cache-false\" class=\"headerlink\" title=\"你也可以试试直接使用 cache:false\"></a>你也可以试试直接使用 <strong>cache:false</strong></h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$.ajax(&#123;</span><br><span class=\"line\">  url:&apos;/&apos;,</span><br><span class=\"line\">  dataType:&apos;json&apos;,</span><br><span class=\"line\">  data:&#123;&#125;,</span><br><span class=\"line\">  cache:false, </span><br><span class=\"line\">  ifModified :true,</span><br><span class=\"line\">  async:false,</span><br><span class=\"line\">  success:function(response)&#123;</span><br><span class=\"line\">    ...</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>"},{"title":"markdown语法大全","date":"2019-11-29T01:22:15.000Z","description":"竟然还有开发不懂markdown？","_content":"## 引言\n\n最近新入职一家公司，目前尚没有自己的项目架构和开发规范。于是我把这块负责起来，搭建了初始的开发脚手架和一些开发规范。可是当我发布之后，让大家跟我一起修改，竟然没有一个人能懂我写的是什么！！what？？还有比markdown更简单易懂的语言吗？还能有开发人员不会markdown语法？那大家平时是怎么交流的，上传一张word文档到git仓库，大家一起改吗？这篇文章主要讲述markdown的语法，其实并不复杂，网上这类教程也挺多的，主要是写给公司开发的，同时也为了巩固markdown语法，众所周知，因为一些事情，我已经半年没有写过博客了....\n\n> 因为语法是直接生效的，导致有些地方不方便做比对。建议[拷贝源代码](https://github.com/lost-dream/blog/blob/src/source/_posts/markdown%E8%AF%AD%E6%B3%95.md)，然后放在解析工具里对比查看，学习效果翻倍。\n>> 常见的解析工具有 简书、github、MarkDownPad、有道云笔记，如果开发者使用IDE有安装markdown预览的插件也可以直接在编辑器查看。\n![1.png](/blog/img/markdown-eg.jpeg)\n\n## 基本语法\n\n### 设置字体样式\n\n```markdown\n*这是切斜文字*\n**这是加粗文字**\n***这是加粗过的斜体字***\n~~这是添加删除线的文字~~\n```\n\n*这是切斜文字*\n**这是加粗文字**\n***这是加粗过的斜体字***\n~~这是添加删除线的文字~~\n\n### 添加标题\n\n```markdown\n# 这是一级标题\n## 这是二级标题\n### 这是三级标题\n#### 这是四级标题\n##### 这是五级标题\n###### 这是六级标题\n```\n\n### 插入链接\n\n```markdown\n[百度](https://www.baidu.com)\n```\n\n[百度](https://www.baidu.com)\n\n### 插入图片\n\n```markdown\n![图片加载失败时显示的文字，等同于img标签的alt属性](1.png)\n```\n\n插入的图片地址是本地图片，也可以是网络资源。而且图片加载失败是现实的文字可以为空`![](1.png)`，就和img标签的alt属性不是必填的一样。\n\n### 插入代码\n\n`使用一个反引号标记的是一个行内的代码`\n\n```markdown\n  使用三个反引号包起来的是一大段代码块，记得在开始位置添加代码段的语法\n```\n\n### 插入分割线\n\n在单独的一行中使用至少三个星号(*)、减号(-)、下划线(_)，都可以插入一条分割线\n\n```markdown\n***\n---\n___\n```\n\n***\n---\n___\n\n### 插入引用\n\n```markdown\n> 在被引用的文本前面加入一个>就可以引用一段文本了\n\n> 引用也是可以嵌套的\n>> 用打包的大小评判代码的质量，就像用飞机的重量评判飞机的质量\n>>> 上一段是我瞎编的，其实应该是代码行数\n\n> **引用**里也可以使用*任何*`markdown`的语法\n```\n\n> 在被引用的文本前面加入一个>就可以引用一段文本了\n> 引用也是可以嵌套的\n>> 用打包的大小评判代码的质量，就像用飞机的重量评判飞机的质量\n>>> 上一段是我瞎编的，其实应该是代码行数\n\n**引用**里也可以使用*任何*`markdown`的语法\n\n### 插入列表\n\n#### 有序列表\n\n使用数字和一个英文句点表示有序列表。<font color=\"red\">英文句点后面一定要有空格。</font>\n\n```markdown\n1. list1\n2. list2\n3. list3\n```\n\n1. list1\n2. list2\n3. list3\n\n#### 无序列表\n\n使用 *，+，- 表示无序列表。<font color=\"red\">符号后面一定要有空格。</font>\n\n```markdown\n+ list1\n+ list2\n+ list3\n\n- list1\n- list2\n- list3\n\n* list1\n* list2\n* list3\n```\n\n+ list1\n+ list2\n+ list3\n\n- list1\n- list2\n- list3\n\n* list1\n* list2\n* list3\n\n无序列表是可以和无序列表、有序列表嵌套使用的\n\n* 目录\n* 第一章\n  + 第一节\n    1. 第一讲\n    2. 第二讲\n  + 第二节\n  + 第三节\n* 第二章\n* 第三章\n\n需要注意的是和html标签一样，每一层级的标识符必须是相同的，否则会有问题\n\n另外， 列表也可以包含任意markdown元素，但是要注意：\n1. 加粗效果不能直接用于列表标题里面，但是可以嵌套在列表里面混合使用。\n2. 列表中包含代码块（前面加2个tab或者8个空格，并且需要空一行，否则不显示）。\n\n### 插入表格\n\n表格的写法十分简单 {&#35;table}\n\n```markdown\n|姓名|年龄|性别|\n|---|---|---|\n|张三|1|男|\n|李四|2|女|\n```\n\n我们可以指定表格单元格的对齐方式，在表格第二行添加冒号，在左边表示左对齐，右边表示有对齐，两边都有表示居中。\n\n```markdown\n|姓名(左对齐)|年龄(居中)|性别(右对齐)|\n|:---|:---:|---:|\n|张三|1|男|\n|李四|2|女|\n```\n\n|姓名(左对齐)|年龄(居中)|性别(右对齐)|\n|:---|:---:|---:|\n|张三|1|男|\n|李四|2|女|\n\n### 插入字体、颜色和字号\n\nmarkdown本身不支持修改字体、颜色、字号等功能，但允许通过内嵌html标签来实现\n\n```markdown\n<font face=\"黑体\">黑体字</font>\n<font face=\"黑体\" color=red>黑体字，并且颜色是红色的</font>\n<font face=\"黑体\" color=red size=7>黑体字，并且颜色是红色的，并且尺寸为7</font>\n\n```\n\n<font face=\"黑体\">黑体字</font>\n<font face=\"黑体\" color=red>黑体字，并且颜色是红色的</font>\n<font face=\"黑体\" color=red size=7>黑体字，并且颜色是红色的，并且尺寸为7</font>\n\nface可以是任何可以识别的字体，color可以是任何已知的颜色名、16进制颜色值，size可以是1-7之间的数字，默认为3\n\n### 锚点\n\n一个成熟的前端应该不需要解释什么是锚点，[跳转到表格](#table)\n\n```markdown\n需要跳转的位置{#index}\n[点击跳转](#index)\n```\n\n### 注脚\n\n注脚可以放在文档的任意位置，但一般我们把它放在文档最后。而且关于注脚[^1]每个编辑器解析的方式都有所不同。\n\n```markdown\n使用markdown[^1]可以提升开发效率\n\n[^1]: markdown是一种纯文本标记语言\n```\n\n### todo-list\n\n使用带有 [ ] 或 [x] （未完成或已完成）项的列表语法撰写一个待办事宜列表。\n\n```markdown\n- [ ] 唱\n- [ ] 跳\n- [ ] rap\n- [x] 篮球\n```\n\n- [ ] 唱\n- [ ] 跳\n- [ ] rap\n- [x] 篮球\n\n### 流程图\n\n```flow\nst=>start: 开始\nop1=>operation: my operation\nc=>condition: Yes or No?\ne=>end: 结束\n```\n\nst->op1->c\nc(yes)->e\nc(no)->op1\n\n### 时序图\n\n```seq\nAlice->Bob: Hello, Bob, how are you?\nNote right of Bob: Bob thinks\nBob->Alice: I am fine, and you?\n```\n\n### 数学公式\n\n#### 行内公式\n\n使用两个`$`符号引用公式\n\n```markdown\n质能守恒方程：$E=mc^2$\n```\n\n质能守恒方程：$E=mc^2$\n\n#### 整行公式\n\n使用两个`$$`符号引用整行公式\n\n```markdown\n$$\\sum_{i=1}^n a_i=0$$\n\n$$f(x_1,x_x,\\ldots,x_n) = x_1^2 + x_2^2 + \\cdots + x_n^2$$\n\n$$\\sum^{j-1}_{k=0}{\\widehat{\\gamma}_{kj}z_k}$$\n```\n\n$$\\sum_{i=1}^n a_i=0$$\n\n$$f(x_1,x_x,\\ldots,x_n) = x_1^2 + x_2^2 + \\cdots + x_n^2$$\n\n$$\\sum^{j-1}_{k=0}{\\widehat{\\gamma}_{kj}z_k}$$\n\n\n[^1]: 这里应该是对注脚这个名词的解释，但我完全懒得解释他。\n","source":"_posts/markdown语法.md","raw":"---\ntitle: markdown语法大全\ntags: [markdown, blog]\ndate: 2019-11-29 09:22:15\ncategories: [markdown]\ndescription: 竟然还有开发不懂markdown？\n---\n## 引言\n\n最近新入职一家公司，目前尚没有自己的项目架构和开发规范。于是我把这块负责起来，搭建了初始的开发脚手架和一些开发规范。可是当我发布之后，让大家跟我一起修改，竟然没有一个人能懂我写的是什么！！what？？还有比markdown更简单易懂的语言吗？还能有开发人员不会markdown语法？那大家平时是怎么交流的，上传一张word文档到git仓库，大家一起改吗？这篇文章主要讲述markdown的语法，其实并不复杂，网上这类教程也挺多的，主要是写给公司开发的，同时也为了巩固markdown语法，众所周知，因为一些事情，我已经半年没有写过博客了....\n\n> 因为语法是直接生效的，导致有些地方不方便做比对。建议[拷贝源代码](https://github.com/lost-dream/blog/blob/src/source/_posts/markdown%E8%AF%AD%E6%B3%95.md)，然后放在解析工具里对比查看，学习效果翻倍。\n>> 常见的解析工具有 简书、github、MarkDownPad、有道云笔记，如果开发者使用IDE有安装markdown预览的插件也可以直接在编辑器查看。\n![1.png](/blog/img/markdown-eg.jpeg)\n\n## 基本语法\n\n### 设置字体样式\n\n```markdown\n*这是切斜文字*\n**这是加粗文字**\n***这是加粗过的斜体字***\n~~这是添加删除线的文字~~\n```\n\n*这是切斜文字*\n**这是加粗文字**\n***这是加粗过的斜体字***\n~~这是添加删除线的文字~~\n\n### 添加标题\n\n```markdown\n# 这是一级标题\n## 这是二级标题\n### 这是三级标题\n#### 这是四级标题\n##### 这是五级标题\n###### 这是六级标题\n```\n\n### 插入链接\n\n```markdown\n[百度](https://www.baidu.com)\n```\n\n[百度](https://www.baidu.com)\n\n### 插入图片\n\n```markdown\n![图片加载失败时显示的文字，等同于img标签的alt属性](1.png)\n```\n\n插入的图片地址是本地图片，也可以是网络资源。而且图片加载失败是现实的文字可以为空`![](1.png)`，就和img标签的alt属性不是必填的一样。\n\n### 插入代码\n\n`使用一个反引号标记的是一个行内的代码`\n\n```markdown\n  使用三个反引号包起来的是一大段代码块，记得在开始位置添加代码段的语法\n```\n\n### 插入分割线\n\n在单独的一行中使用至少三个星号(*)、减号(-)、下划线(_)，都可以插入一条分割线\n\n```markdown\n***\n---\n___\n```\n\n***\n---\n___\n\n### 插入引用\n\n```markdown\n> 在被引用的文本前面加入一个>就可以引用一段文本了\n\n> 引用也是可以嵌套的\n>> 用打包的大小评判代码的质量，就像用飞机的重量评判飞机的质量\n>>> 上一段是我瞎编的，其实应该是代码行数\n\n> **引用**里也可以使用*任何*`markdown`的语法\n```\n\n> 在被引用的文本前面加入一个>就可以引用一段文本了\n> 引用也是可以嵌套的\n>> 用打包的大小评判代码的质量，就像用飞机的重量评判飞机的质量\n>>> 上一段是我瞎编的，其实应该是代码行数\n\n**引用**里也可以使用*任何*`markdown`的语法\n\n### 插入列表\n\n#### 有序列表\n\n使用数字和一个英文句点表示有序列表。<font color=\"red\">英文句点后面一定要有空格。</font>\n\n```markdown\n1. list1\n2. list2\n3. list3\n```\n\n1. list1\n2. list2\n3. list3\n\n#### 无序列表\n\n使用 *，+，- 表示无序列表。<font color=\"red\">符号后面一定要有空格。</font>\n\n```markdown\n+ list1\n+ list2\n+ list3\n\n- list1\n- list2\n- list3\n\n* list1\n* list2\n* list3\n```\n\n+ list1\n+ list2\n+ list3\n\n- list1\n- list2\n- list3\n\n* list1\n* list2\n* list3\n\n无序列表是可以和无序列表、有序列表嵌套使用的\n\n* 目录\n* 第一章\n  + 第一节\n    1. 第一讲\n    2. 第二讲\n  + 第二节\n  + 第三节\n* 第二章\n* 第三章\n\n需要注意的是和html标签一样，每一层级的标识符必须是相同的，否则会有问题\n\n另外， 列表也可以包含任意markdown元素，但是要注意：\n1. 加粗效果不能直接用于列表标题里面，但是可以嵌套在列表里面混合使用。\n2. 列表中包含代码块（前面加2个tab或者8个空格，并且需要空一行，否则不显示）。\n\n### 插入表格\n\n表格的写法十分简单 {&#35;table}\n\n```markdown\n|姓名|年龄|性别|\n|---|---|---|\n|张三|1|男|\n|李四|2|女|\n```\n\n我们可以指定表格单元格的对齐方式，在表格第二行添加冒号，在左边表示左对齐，右边表示有对齐，两边都有表示居中。\n\n```markdown\n|姓名(左对齐)|年龄(居中)|性别(右对齐)|\n|:---|:---:|---:|\n|张三|1|男|\n|李四|2|女|\n```\n\n|姓名(左对齐)|年龄(居中)|性别(右对齐)|\n|:---|:---:|---:|\n|张三|1|男|\n|李四|2|女|\n\n### 插入字体、颜色和字号\n\nmarkdown本身不支持修改字体、颜色、字号等功能，但允许通过内嵌html标签来实现\n\n```markdown\n<font face=\"黑体\">黑体字</font>\n<font face=\"黑体\" color=red>黑体字，并且颜色是红色的</font>\n<font face=\"黑体\" color=red size=7>黑体字，并且颜色是红色的，并且尺寸为7</font>\n\n```\n\n<font face=\"黑体\">黑体字</font>\n<font face=\"黑体\" color=red>黑体字，并且颜色是红色的</font>\n<font face=\"黑体\" color=red size=7>黑体字，并且颜色是红色的，并且尺寸为7</font>\n\nface可以是任何可以识别的字体，color可以是任何已知的颜色名、16进制颜色值，size可以是1-7之间的数字，默认为3\n\n### 锚点\n\n一个成熟的前端应该不需要解释什么是锚点，[跳转到表格](#table)\n\n```markdown\n需要跳转的位置{#index}\n[点击跳转](#index)\n```\n\n### 注脚\n\n注脚可以放在文档的任意位置，但一般我们把它放在文档最后。而且关于注脚[^1]每个编辑器解析的方式都有所不同。\n\n```markdown\n使用markdown[^1]可以提升开发效率\n\n[^1]: markdown是一种纯文本标记语言\n```\n\n### todo-list\n\n使用带有 [ ] 或 [x] （未完成或已完成）项的列表语法撰写一个待办事宜列表。\n\n```markdown\n- [ ] 唱\n- [ ] 跳\n- [ ] rap\n- [x] 篮球\n```\n\n- [ ] 唱\n- [ ] 跳\n- [ ] rap\n- [x] 篮球\n\n### 流程图\n\n```flow\nst=>start: 开始\nop1=>operation: my operation\nc=>condition: Yes or No?\ne=>end: 结束\n```\n\nst->op1->c\nc(yes)->e\nc(no)->op1\n\n### 时序图\n\n```seq\nAlice->Bob: Hello, Bob, how are you?\nNote right of Bob: Bob thinks\nBob->Alice: I am fine, and you?\n```\n\n### 数学公式\n\n#### 行内公式\n\n使用两个`$`符号引用公式\n\n```markdown\n质能守恒方程：$E=mc^2$\n```\n\n质能守恒方程：$E=mc^2$\n\n#### 整行公式\n\n使用两个`$$`符号引用整行公式\n\n```markdown\n$$\\sum_{i=1}^n a_i=0$$\n\n$$f(x_1,x_x,\\ldots,x_n) = x_1^2 + x_2^2 + \\cdots + x_n^2$$\n\n$$\\sum^{j-1}_{k=0}{\\widehat{\\gamma}_{kj}z_k}$$\n```\n\n$$\\sum_{i=1}^n a_i=0$$\n\n$$f(x_1,x_x,\\ldots,x_n) = x_1^2 + x_2^2 + \\cdots + x_n^2$$\n\n$$\\sum^{j-1}_{k=0}{\\widehat{\\gamma}_{kj}z_k}$$\n\n\n[^1]: 这里应该是对注脚这个名词的解释，但我完全懒得解释他。\n","slug":"markdown语法","published":1,"updated":"2019-11-29T03:57:57.806Z","_id":"ck3jm8gvu000iz0btascwqzfh","comments":1,"layout":"post","photos":[],"link":"","content":"<h2 id=\"引言\"><a href=\"#引言\" class=\"headerlink\" title=\"引言\"></a>引言</h2><p>最近新入职一家公司，目前尚没有自己的项目架构和开发规范。于是我把这块负责起来，搭建了初始的开发脚手架和一些开发规范。可是当我发布之后，让大家跟我一起修改，竟然没有一个人能懂我写的是什么！！what？？还有比markdown更简单易懂的语言吗？还能有开发人员不会markdown语法？那大家平时是怎么交流的，上传一张word文档到git仓库，大家一起改吗？这篇文章主要讲述markdown的语法，其实并不复杂，网上这类教程也挺多的，主要是写给公司开发的，同时也为了巩固markdown语法，众所周知，因为一些事情，我已经半年没有写过博客了….</p>\n<blockquote>\n<p>因为语法是直接生效的，导致有些地方不方便做比对。建议<a href=\"https://github.com/lost-dream/blog/blob/src/source/_posts/markdown%E8%AF%AD%E6%B3%95.md\" target=\"_blank\" rel=\"noopener\">拷贝源代码</a>，然后放在解析工具里对比查看，学习效果翻倍。</p>\n<blockquote>\n<p>常见的解析工具有 简书、github、MarkDownPad、有道云笔记，如果开发者使用IDE有安装markdown预览的插件也可以直接在编辑器查看。<br><img src=\"/blog/img/markdown-eg.jpeg\" alt=\"1.png\"></p>\n</blockquote>\n</blockquote>\n<h2 id=\"基本语法\"><a href=\"#基本语法\" class=\"headerlink\" title=\"基本语法\"></a>基本语法</h2><h3 id=\"设置字体样式\"><a href=\"#设置字体样式\" class=\"headerlink\" title=\"设置字体样式\"></a>设置字体样式</h3><figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"emphasis\">*这是切斜文字*</span></span><br><span class=\"line\"><span class=\"strong\">**这是加粗文字**</span></span><br><span class=\"line\"><span class=\"strong\">***这是加粗过的斜体字**</span>*</span><br><span class=\"line\">~~这是添加删除线的文字~~</span><br></pre></td></tr></table></figure>\n<p><em>这是切斜文字</em><br><strong>这是加粗文字</strong><br><strong><em>这是加粗过的斜体字</em></strong><br><del>这是添加删除线的文字</del></p>\n<h3 id=\"添加标题\"><a href=\"#添加标题\" class=\"headerlink\" title=\"添加标题\"></a>添加标题</h3><figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"section\"># 这是一级标题</span></span><br><span class=\"line\"><span class=\"section\">## 这是二级标题</span></span><br><span class=\"line\"><span class=\"section\">### 这是三级标题</span></span><br><span class=\"line\"><span class=\"section\">#### 这是四级标题</span></span><br><span class=\"line\"><span class=\"section\">##### 这是五级标题</span></span><br><span class=\"line\"><span class=\"section\">###### 这是六级标题</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"插入链接\"><a href=\"#插入链接\" class=\"headerlink\" title=\"插入链接\"></a>插入链接</h3><figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[<span class=\"string\">百度</span>](<span class=\"link\">https://www.baidu.com</span>)</span><br></pre></td></tr></table></figure>\n<p><a href=\"https://www.baidu.com\" target=\"_blank\" rel=\"noopener\">百度</a></p>\n<h3 id=\"插入图片\"><a href=\"#插入图片\" class=\"headerlink\" title=\"插入图片\"></a>插入图片</h3><figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">![<span class=\"string\">图片加载失败时显示的文字，等同于img标签的alt属性</span>](<span class=\"link\">1.png</span>)</span><br></pre></td></tr></table></figure>\n<p>插入的图片地址是本地图片，也可以是网络资源。而且图片加载失败是现实的文字可以为空<code>![](1.png)</code>，就和img标签的alt属性不是必填的一样。</p>\n<h3 id=\"插入代码\"><a href=\"#插入代码\" class=\"headerlink\" title=\"插入代码\"></a>插入代码</h3><p><code>使用一个反引号标记的是一个行内的代码</code></p>\n<figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">使用三个反引号包起来的是一大段代码块，记得在开始位置添加代码段的语法</span><br></pre></td></tr></table></figure>\n<h3 id=\"插入分割线\"><a href=\"#插入分割线\" class=\"headerlink\" title=\"插入分割线\"></a>插入分割线</h3><p>在单独的一行中使用至少三个星号(*)、减号(-)、下划线(_)，都可以插入一条分割线</p>\n<figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"emphasis\">***</span></span><br><span class=\"line\">---</span><br><span class=\"line\"><span class=\"emphasis\">___</span></span><br></pre></td></tr></table></figure>\n<hr>\n<hr>\n<hr>\n<h3 id=\"插入引用\"><a href=\"#插入引用\" class=\"headerlink\" title=\"插入引用\"></a>插入引用</h3><figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"quote\">&gt; 在被引用的文本前面加入一个&gt;就可以引用一段文本了</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"quote\">&gt; 引用也是可以嵌套的</span></span><br><span class=\"line\">&gt;&gt; 用打包的大小评判代码的质量，就像用飞机的重量评判飞机的质量</span><br><span class=\"line\">&gt;&gt;&gt; 上一段是我瞎编的，其实应该是代码行数</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"quote\">&gt; **引用**里也可以使用*任何*`markdown`的语法</span></span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>在被引用的文本前面加入一个&gt;就可以引用一段文本了<br>引用也是可以嵌套的</p>\n<blockquote>\n<p>用打包的大小评判代码的质量，就像用飞机的重量评判飞机的质量</p>\n<blockquote>\n<p>上一段是我瞎编的，其实应该是代码行数</p>\n</blockquote>\n</blockquote>\n</blockquote>\n<p><strong>引用</strong>里也可以使用<em>任何</em><code>markdown</code>的语法</p>\n<h3 id=\"插入列表\"><a href=\"#插入列表\" class=\"headerlink\" title=\"插入列表\"></a>插入列表</h3><h4 id=\"有序列表\"><a href=\"#有序列表\" class=\"headerlink\" title=\"有序列表\"></a>有序列表</h4><p>使用数字和一个英文句点表示有序列表。<font color=\"red\">英文句点后面一定要有空格。</font></p>\n<figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"bullet\">1. </span>list1</span><br><span class=\"line\"><span class=\"bullet\">2. </span>list2</span><br><span class=\"line\"><span class=\"bullet\">3. </span>list3</span><br></pre></td></tr></table></figure>\n<ol>\n<li>list1</li>\n<li>list2</li>\n<li>list3</li>\n</ol>\n<h4 id=\"无序列表\"><a href=\"#无序列表\" class=\"headerlink\" title=\"无序列表\"></a>无序列表</h4><p>使用 *，+，- 表示无序列表。<font color=\"red\">符号后面一定要有空格。</font></p>\n<figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"bullet\">+ </span>list1</span><br><span class=\"line\"><span class=\"bullet\">+ </span>list2</span><br><span class=\"line\"><span class=\"bullet\">+ </span>list3</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"bullet\">- </span>list1</span><br><span class=\"line\"><span class=\"bullet\">- </span>list2</span><br><span class=\"line\"><span class=\"bullet\">- </span>list3</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"bullet\">* </span>list1</span><br><span class=\"line\"><span class=\"bullet\">* </span>list2</span><br><span class=\"line\"><span class=\"bullet\">* </span>list3</span><br></pre></td></tr></table></figure>\n<ul>\n<li>list1</li>\n<li>list2</li>\n<li>list3</li>\n</ul>\n<ul>\n<li>list1</li>\n<li>list2</li>\n<li>list3</li>\n</ul>\n<ul>\n<li>list1</li>\n<li>list2</li>\n<li>list3</li>\n</ul>\n<p>无序列表是可以和无序列表、有序列表嵌套使用的</p>\n<ul>\n<li>目录</li>\n<li>第一章<ul>\n<li>第一节<ol>\n<li>第一讲</li>\n<li>第二讲</li>\n</ol>\n</li>\n<li>第二节</li>\n<li>第三节</li>\n</ul>\n</li>\n<li>第二章</li>\n<li>第三章</li>\n</ul>\n<p>需要注意的是和html标签一样，每一层级的标识符必须是相同的，否则会有问题</p>\n<p>另外， 列表也可以包含任意markdown元素，但是要注意：</p>\n<ol>\n<li>加粗效果不能直接用于列表标题里面，但是可以嵌套在列表里面混合使用。</li>\n<li>列表中包含代码块（前面加2个tab或者8个空格，并且需要空一行，否则不显示）。</li>\n</ol>\n<h3 id=\"插入表格\"><a href=\"#插入表格\" class=\"headerlink\" title=\"插入表格\"></a>插入表格</h3><p>表格的写法十分简单 {&#35;table}</p>\n<figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">|姓名|年龄|性别|</span><br><span class=\"line\">|---|---|---|</span><br><span class=\"line\">|张三|1|男|</span><br><span class=\"line\">|李四|2|女|</span><br></pre></td></tr></table></figure>\n<p>我们可以指定表格单元格的对齐方式，在表格第二行添加冒号，在左边表示左对齐，右边表示有对齐，两边都有表示居中。</p>\n<figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">|姓名(左对齐)|年龄(居中)|性别(右对齐)|</span><br><span class=\"line\">|:---|:---:|---:|</span><br><span class=\"line\">|张三|1|男|</span><br><span class=\"line\">|李四|2|女|</span><br></pre></td></tr></table></figure>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">姓名(左对齐)</th>\n<th style=\"text-align:center\">年龄(居中)</th>\n<th style=\"text-align:right\">性别(右对齐)</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">张三</td>\n<td style=\"text-align:center\">1</td>\n<td style=\"text-align:right\">男</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">李四</td>\n<td style=\"text-align:center\">2</td>\n<td style=\"text-align:right\">女</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"插入字体、颜色和字号\"><a href=\"#插入字体、颜色和字号\" class=\"headerlink\" title=\"插入字体、颜色和字号\"></a>插入字体、颜色和字号</h3><p>markdown本身不支持修改字体、颜色、字号等功能，但允许通过内嵌html标签来实现</p>\n<figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;font face=\"黑体\"&gt;黑体字&lt;/font&gt;</span><br><span class=\"line\">&lt;font face=\"黑体\" color=red&gt;黑体字，并且颜色是红色的&lt;/font&gt;</span><br><span class=\"line\">&lt;font face=\"黑体\" color=red size=7&gt;黑体字，并且颜色是红色的，并且尺寸为7&lt;/font&gt;</span><br></pre></td></tr></table></figure>\n<font face=\"黑体\">黑体字</font><br><font face=\"黑体\" color=\"red\">黑体字，并且颜色是红色的</font><br><font face=\"黑体\" color=\"red\" size=\"7\">黑体字，并且颜色是红色的，并且尺寸为7</font>\n\n<p>face可以是任何可以识别的字体，color可以是任何已知的颜色名、16进制颜色值，size可以是1-7之间的数字，默认为3</p>\n<h3 id=\"锚点\"><a href=\"#锚点\" class=\"headerlink\" title=\"锚点\"></a>锚点</h3><p>一个成熟的前端应该不需要解释什么是锚点，<a href=\"#table\">跳转到表格</a></p>\n<figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">需要跳转的位置&#123;#index&#125;</span><br><span class=\"line\">[<span class=\"string\">点击跳转</span>](<span class=\"link\">#index</span>)</span><br></pre></td></tr></table></figure>\n<h3 id=\"注脚\"><a href=\"#注脚\" class=\"headerlink\" title=\"注脚\"></a>注脚</h3><p>注脚可以放在文档的任意位置，但一般我们把它放在文档最后。而且关于注脚<a href=\"这里应该是对注脚这个名词的解释，但我完全懒得解释他。\">^1</a>每个编辑器解析的方式都有所不同。</p>\n<figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">使用markdown[^1]可以提升开发效率</span><br><span class=\"line\"></span><br><span class=\"line\">[<span class=\"symbol\">^1</span>]: <span class=\"link\">markdown是一种纯文本标记语言</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"todo-list\"><a href=\"#todo-list\" class=\"headerlink\" title=\"todo-list\"></a>todo-list</h3><p>使用带有 [ ] 或 [x] （未完成或已完成）项的列表语法撰写一个待办事宜列表。</p>\n<figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"bullet\">- </span>[ ] 唱</span><br><span class=\"line\"><span class=\"bullet\">- </span>[ ] 跳</span><br><span class=\"line\"><span class=\"bullet\">- </span>[ ] rap</span><br><span class=\"line\"><span class=\"bullet\">- </span>[x] 篮球</span><br></pre></td></tr></table></figure>\n<ul>\n<li style=\"list-style: none\"><input type=\"checkbox\"> 唱</li>\n<li style=\"list-style: none\"><input type=\"checkbox\"> 跳</li>\n<li style=\"list-style: none\"><input type=\"checkbox\"> rap</li>\n<li style=\"list-style: none\"><input type=\"checkbox\" checked> 篮球</li>\n</ul>\n<h3 id=\"流程图\"><a href=\"#流程图\" class=\"headerlink\" title=\"流程图\"></a>流程图</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">st=&gt;start: 开始</span><br><span class=\"line\">op1=&gt;operation: my operation</span><br><span class=\"line\">c=&gt;condition: Yes or No?</span><br><span class=\"line\">e=&gt;end: 结束</span><br></pre></td></tr></table></figure>\n<p>st-&gt;op1-&gt;c<br>c(yes)-&gt;e<br>c(no)-&gt;op1</p>\n<h3 id=\"时序图\"><a href=\"#时序图\" class=\"headerlink\" title=\"时序图\"></a>时序图</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Alice-&gt;Bob: Hello, Bob, how are you?</span><br><span class=\"line\">Note right of Bob: Bob thinks</span><br><span class=\"line\">Bob-&gt;Alice: I am fine, and you?</span><br></pre></td></tr></table></figure>\n<h3 id=\"数学公式\"><a href=\"#数学公式\" class=\"headerlink\" title=\"数学公式\"></a>数学公式</h3><h4 id=\"行内公式\"><a href=\"#行内公式\" class=\"headerlink\" title=\"行内公式\"></a>行内公式</h4><p>使用两个<code>$</code>符号引用公式</p>\n<figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">质能守恒方程：$E=mc^2$</span><br></pre></td></tr></table></figure>\n<p>质能守恒方程：$E=mc^2$</p>\n<h4 id=\"整行公式\"><a href=\"#整行公式\" class=\"headerlink\" title=\"整行公式\"></a>整行公式</h4><p>使用两个<code>$$</code>符号引用整行公式</p>\n<figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$$\\sum<span class=\"emphasis\">_&#123;i=1&#125;^n a_</span>i=0$$</span><br><span class=\"line\"></span><br><span class=\"line\">$$f(x<span class=\"emphasis\">_1,x_</span>x,\\ldots,x<span class=\"emphasis\">_n) = x_</span>1^2 + x<span class=\"emphasis\">_2^2 + \\cdots + x_</span>n^2$$</span><br><span class=\"line\"></span><br><span class=\"line\">$$\\sum^&#123;j-1&#125;<span class=\"emphasis\">_&#123;k=0&#125;&#123;\\widehat&#123;\\gamma&#125;_</span>&#123;kj&#125;z_k&#125;$$</span><br></pre></td></tr></table></figure>\n<p>$$\\sum_{i=1}^n a_i=0$$</p>\n<p>$$f(x_1,x_x,\\ldots,x_n) = x_1^2 + x_2^2 + \\cdots + x_n^2$$</p>\n<p>$$\\sum^{j-1}<em>{k=0}{\\widehat{\\gamma}</em>{kj}z_k}$$</p>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"引言\"><a href=\"#引言\" class=\"headerlink\" title=\"引言\"></a>引言</h2><p>最近新入职一家公司，目前尚没有自己的项目架构和开发规范。于是我把这块负责起来，搭建了初始的开发脚手架和一些开发规范。可是当我发布之后，让大家跟我一起修改，竟然没有一个人能懂我写的是什么！！what？？还有比markdown更简单易懂的语言吗？还能有开发人员不会markdown语法？那大家平时是怎么交流的，上传一张word文档到git仓库，大家一起改吗？这篇文章主要讲述markdown的语法，其实并不复杂，网上这类教程也挺多的，主要是写给公司开发的，同时也为了巩固markdown语法，众所周知，因为一些事情，我已经半年没有写过博客了….</p>\n<blockquote>\n<p>因为语法是直接生效的，导致有些地方不方便做比对。建议<a href=\"https://github.com/lost-dream/blog/blob/src/source/_posts/markdown%E8%AF%AD%E6%B3%95.md\" target=\"_blank\" rel=\"noopener\">拷贝源代码</a>，然后放在解析工具里对比查看，学习效果翻倍。</p>\n<blockquote>\n<p>常见的解析工具有 简书、github、MarkDownPad、有道云笔记，如果开发者使用IDE有安装markdown预览的插件也可以直接在编辑器查看。<br><img src=\"/blog/img/markdown-eg.jpeg\" alt=\"1.png\"></p>\n</blockquote>\n</blockquote>\n<h2 id=\"基本语法\"><a href=\"#基本语法\" class=\"headerlink\" title=\"基本语法\"></a>基本语法</h2><h3 id=\"设置字体样式\"><a href=\"#设置字体样式\" class=\"headerlink\" title=\"设置字体样式\"></a>设置字体样式</h3><figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"emphasis\">*这是切斜文字*</span></span><br><span class=\"line\"><span class=\"strong\">**这是加粗文字**</span></span><br><span class=\"line\"><span class=\"strong\">***这是加粗过的斜体字**</span>*</span><br><span class=\"line\">~~这是添加删除线的文字~~</span><br></pre></td></tr></table></figure>\n<p><em>这是切斜文字</em><br><strong>这是加粗文字</strong><br><strong><em>这是加粗过的斜体字</em></strong><br><del>这是添加删除线的文字</del></p>\n<h3 id=\"添加标题\"><a href=\"#添加标题\" class=\"headerlink\" title=\"添加标题\"></a>添加标题</h3><figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"section\"># 这是一级标题</span></span><br><span class=\"line\"><span class=\"section\">## 这是二级标题</span></span><br><span class=\"line\"><span class=\"section\">### 这是三级标题</span></span><br><span class=\"line\"><span class=\"section\">#### 这是四级标题</span></span><br><span class=\"line\"><span class=\"section\">##### 这是五级标题</span></span><br><span class=\"line\"><span class=\"section\">###### 这是六级标题</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"插入链接\"><a href=\"#插入链接\" class=\"headerlink\" title=\"插入链接\"></a>插入链接</h3><figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[<span class=\"string\">百度</span>](<span class=\"link\">https://www.baidu.com</span>)</span><br></pre></td></tr></table></figure>\n<p><a href=\"https://www.baidu.com\" target=\"_blank\" rel=\"noopener\">百度</a></p>\n<h3 id=\"插入图片\"><a href=\"#插入图片\" class=\"headerlink\" title=\"插入图片\"></a>插入图片</h3><figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">![<span class=\"string\">图片加载失败时显示的文字，等同于img标签的alt属性</span>](<span class=\"link\">1.png</span>)</span><br></pre></td></tr></table></figure>\n<p>插入的图片地址是本地图片，也可以是网络资源。而且图片加载失败是现实的文字可以为空<code>![](1.png)</code>，就和img标签的alt属性不是必填的一样。</p>\n<h3 id=\"插入代码\"><a href=\"#插入代码\" class=\"headerlink\" title=\"插入代码\"></a>插入代码</h3><p><code>使用一个反引号标记的是一个行内的代码</code></p>\n<figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">使用三个反引号包起来的是一大段代码块，记得在开始位置添加代码段的语法</span><br></pre></td></tr></table></figure>\n<h3 id=\"插入分割线\"><a href=\"#插入分割线\" class=\"headerlink\" title=\"插入分割线\"></a>插入分割线</h3><p>在单独的一行中使用至少三个星号(*)、减号(-)、下划线(_)，都可以插入一条分割线</p>\n<figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"emphasis\">***</span></span><br><span class=\"line\">---</span><br><span class=\"line\"><span class=\"emphasis\">___</span></span><br></pre></td></tr></table></figure>\n<hr>\n<hr>\n<hr>\n<h3 id=\"插入引用\"><a href=\"#插入引用\" class=\"headerlink\" title=\"插入引用\"></a>插入引用</h3><figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"quote\">&gt; 在被引用的文本前面加入一个&gt;就可以引用一段文本了</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"quote\">&gt; 引用也是可以嵌套的</span></span><br><span class=\"line\">&gt;&gt; 用打包的大小评判代码的质量，就像用飞机的重量评判飞机的质量</span><br><span class=\"line\">&gt;&gt;&gt; 上一段是我瞎编的，其实应该是代码行数</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"quote\">&gt; **引用**里也可以使用*任何*`markdown`的语法</span></span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>在被引用的文本前面加入一个&gt;就可以引用一段文本了<br>引用也是可以嵌套的</p>\n<blockquote>\n<p>用打包的大小评判代码的质量，就像用飞机的重量评判飞机的质量</p>\n<blockquote>\n<p>上一段是我瞎编的，其实应该是代码行数</p>\n</blockquote>\n</blockquote>\n</blockquote>\n<p><strong>引用</strong>里也可以使用<em>任何</em><code>markdown</code>的语法</p>\n<h3 id=\"插入列表\"><a href=\"#插入列表\" class=\"headerlink\" title=\"插入列表\"></a>插入列表</h3><h4 id=\"有序列表\"><a href=\"#有序列表\" class=\"headerlink\" title=\"有序列表\"></a>有序列表</h4><p>使用数字和一个英文句点表示有序列表。<font color=\"red\">英文句点后面一定要有空格。</font></p>\n<figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"bullet\">1. </span>list1</span><br><span class=\"line\"><span class=\"bullet\">2. </span>list2</span><br><span class=\"line\"><span class=\"bullet\">3. </span>list3</span><br></pre></td></tr></table></figure>\n<ol>\n<li>list1</li>\n<li>list2</li>\n<li>list3</li>\n</ol>\n<h4 id=\"无序列表\"><a href=\"#无序列表\" class=\"headerlink\" title=\"无序列表\"></a>无序列表</h4><p>使用 *，+，- 表示无序列表。<font color=\"red\">符号后面一定要有空格。</font></p>\n<figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"bullet\">+ </span>list1</span><br><span class=\"line\"><span class=\"bullet\">+ </span>list2</span><br><span class=\"line\"><span class=\"bullet\">+ </span>list3</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"bullet\">- </span>list1</span><br><span class=\"line\"><span class=\"bullet\">- </span>list2</span><br><span class=\"line\"><span class=\"bullet\">- </span>list3</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"bullet\">* </span>list1</span><br><span class=\"line\"><span class=\"bullet\">* </span>list2</span><br><span class=\"line\"><span class=\"bullet\">* </span>list3</span><br></pre></td></tr></table></figure>\n<ul>\n<li>list1</li>\n<li>list2</li>\n<li>list3</li>\n</ul>\n<ul>\n<li>list1</li>\n<li>list2</li>\n<li>list3</li>\n</ul>\n<ul>\n<li>list1</li>\n<li>list2</li>\n<li>list3</li>\n</ul>\n<p>无序列表是可以和无序列表、有序列表嵌套使用的</p>\n<ul>\n<li>目录</li>\n<li>第一章<ul>\n<li>第一节<ol>\n<li>第一讲</li>\n<li>第二讲</li>\n</ol>\n</li>\n<li>第二节</li>\n<li>第三节</li>\n</ul>\n</li>\n<li>第二章</li>\n<li>第三章</li>\n</ul>\n<p>需要注意的是和html标签一样，每一层级的标识符必须是相同的，否则会有问题</p>\n<p>另外， 列表也可以包含任意markdown元素，但是要注意：</p>\n<ol>\n<li>加粗效果不能直接用于列表标题里面，但是可以嵌套在列表里面混合使用。</li>\n<li>列表中包含代码块（前面加2个tab或者8个空格，并且需要空一行，否则不显示）。</li>\n</ol>\n<h3 id=\"插入表格\"><a href=\"#插入表格\" class=\"headerlink\" title=\"插入表格\"></a>插入表格</h3><p>表格的写法十分简单 {&#35;table}</p>\n<figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">|姓名|年龄|性别|</span><br><span class=\"line\">|---|---|---|</span><br><span class=\"line\">|张三|1|男|</span><br><span class=\"line\">|李四|2|女|</span><br></pre></td></tr></table></figure>\n<p>我们可以指定表格单元格的对齐方式，在表格第二行添加冒号，在左边表示左对齐，右边表示有对齐，两边都有表示居中。</p>\n<figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">|姓名(左对齐)|年龄(居中)|性别(右对齐)|</span><br><span class=\"line\">|:---|:---:|---:|</span><br><span class=\"line\">|张三|1|男|</span><br><span class=\"line\">|李四|2|女|</span><br></pre></td></tr></table></figure>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">姓名(左对齐)</th>\n<th style=\"text-align:center\">年龄(居中)</th>\n<th style=\"text-align:right\">性别(右对齐)</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">张三</td>\n<td style=\"text-align:center\">1</td>\n<td style=\"text-align:right\">男</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">李四</td>\n<td style=\"text-align:center\">2</td>\n<td style=\"text-align:right\">女</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"插入字体、颜色和字号\"><a href=\"#插入字体、颜色和字号\" class=\"headerlink\" title=\"插入字体、颜色和字号\"></a>插入字体、颜色和字号</h3><p>markdown本身不支持修改字体、颜色、字号等功能，但允许通过内嵌html标签来实现</p>\n<figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;font face=\"黑体\"&gt;黑体字&lt;/font&gt;</span><br><span class=\"line\">&lt;font face=\"黑体\" color=red&gt;黑体字，并且颜色是红色的&lt;/font&gt;</span><br><span class=\"line\">&lt;font face=\"黑体\" color=red size=7&gt;黑体字，并且颜色是红色的，并且尺寸为7&lt;/font&gt;</span><br></pre></td></tr></table></figure>\n<font face=\"黑体\">黑体字</font><br><font face=\"黑体\" color=\"red\">黑体字，并且颜色是红色的</font><br><font face=\"黑体\" color=\"red\" size=\"7\">黑体字，并且颜色是红色的，并且尺寸为7</font>\n\n<p>face可以是任何可以识别的字体，color可以是任何已知的颜色名、16进制颜色值，size可以是1-7之间的数字，默认为3</p>\n<h3 id=\"锚点\"><a href=\"#锚点\" class=\"headerlink\" title=\"锚点\"></a>锚点</h3><p>一个成熟的前端应该不需要解释什么是锚点，<a href=\"#table\">跳转到表格</a></p>\n<figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">需要跳转的位置&#123;#index&#125;</span><br><span class=\"line\">[<span class=\"string\">点击跳转</span>](<span class=\"link\">#index</span>)</span><br></pre></td></tr></table></figure>\n<h3 id=\"注脚\"><a href=\"#注脚\" class=\"headerlink\" title=\"注脚\"></a>注脚</h3><p>注脚可以放在文档的任意位置，但一般我们把它放在文档最后。而且关于注脚<a href=\"这里应该是对注脚这个名词的解释，但我完全懒得解释他。\">^1</a>每个编辑器解析的方式都有所不同。</p>\n<figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">使用markdown[^1]可以提升开发效率</span><br><span class=\"line\"></span><br><span class=\"line\">[<span class=\"symbol\">^1</span>]: <span class=\"link\">markdown是一种纯文本标记语言</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"todo-list\"><a href=\"#todo-list\" class=\"headerlink\" title=\"todo-list\"></a>todo-list</h3><p>使用带有 [ ] 或 [x] （未完成或已完成）项的列表语法撰写一个待办事宜列表。</p>\n<figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"bullet\">- </span>[ ] 唱</span><br><span class=\"line\"><span class=\"bullet\">- </span>[ ] 跳</span><br><span class=\"line\"><span class=\"bullet\">- </span>[ ] rap</span><br><span class=\"line\"><span class=\"bullet\">- </span>[x] 篮球</span><br></pre></td></tr></table></figure>\n<ul>\n<li style=\"list-style: none\"><input type=\"checkbox\"> 唱</li>\n<li style=\"list-style: none\"><input type=\"checkbox\"> 跳</li>\n<li style=\"list-style: none\"><input type=\"checkbox\"> rap</li>\n<li style=\"list-style: none\"><input type=\"checkbox\" checked> 篮球</li>\n</ul>\n<h3 id=\"流程图\"><a href=\"#流程图\" class=\"headerlink\" title=\"流程图\"></a>流程图</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">st=&gt;start: 开始</span><br><span class=\"line\">op1=&gt;operation: my operation</span><br><span class=\"line\">c=&gt;condition: Yes or No?</span><br><span class=\"line\">e=&gt;end: 结束</span><br></pre></td></tr></table></figure>\n<p>st-&gt;op1-&gt;c<br>c(yes)-&gt;e<br>c(no)-&gt;op1</p>\n<h3 id=\"时序图\"><a href=\"#时序图\" class=\"headerlink\" title=\"时序图\"></a>时序图</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Alice-&gt;Bob: Hello, Bob, how are you?</span><br><span class=\"line\">Note right of Bob: Bob thinks</span><br><span class=\"line\">Bob-&gt;Alice: I am fine, and you?</span><br></pre></td></tr></table></figure>\n<h3 id=\"数学公式\"><a href=\"#数学公式\" class=\"headerlink\" title=\"数学公式\"></a>数学公式</h3><h4 id=\"行内公式\"><a href=\"#行内公式\" class=\"headerlink\" title=\"行内公式\"></a>行内公式</h4><p>使用两个<code>$</code>符号引用公式</p>\n<figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">质能守恒方程：$E=mc^2$</span><br></pre></td></tr></table></figure>\n<p>质能守恒方程：$E=mc^2$</p>\n<h4 id=\"整行公式\"><a href=\"#整行公式\" class=\"headerlink\" title=\"整行公式\"></a>整行公式</h4><p>使用两个<code>$$</code>符号引用整行公式</p>\n<figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$$\\sum<span class=\"emphasis\">_&#123;i=1&#125;^n a_</span>i=0$$</span><br><span class=\"line\"></span><br><span class=\"line\">$$f(x<span class=\"emphasis\">_1,x_</span>x,\\ldots,x<span class=\"emphasis\">_n) = x_</span>1^2 + x<span class=\"emphasis\">_2^2 + \\cdots + x_</span>n^2$$</span><br><span class=\"line\"></span><br><span class=\"line\">$$\\sum^&#123;j-1&#125;<span class=\"emphasis\">_&#123;k=0&#125;&#123;\\widehat&#123;\\gamma&#125;_</span>&#123;kj&#125;z_k&#125;$$</span><br></pre></td></tr></table></figure>\n<p>$$\\sum_{i=1}^n a_i=0$$</p>\n<p>$$f(x_1,x_x,\\ldots,x_n) = x_1^2 + x_2^2 + \\cdots + x_n^2$$</p>\n<p>$$\\sum^{j-1}<em>{k=0}{\\widehat{\\gamma}</em>{kj}z_k}$$</p>\n"},{"title":"particlesJs开发手册","date":"2017-10-10T03:29:18.000Z","description":"particles.js Api手册","_content":"quick start\n---\n首先需要引用particles.js，然后创建一个空元素。    \n```\n\t<div id=\"particles\"></div>\n\t      ......\n\t<script src=\"particles.js\"></script>\n  \n```\n然后在js中写配置就可以了\n```\nparticlesJS.load('particles', {\n\t......\n});\t\n```\n先展示完整的配置项示例，之后附上完整的api。\n```\n\t{\n          \"particles\": {\n            \"number\": {\n              \"value\": 300,\n              \"density\": {\n                \"enable\": true,\n                \"value_area\": 700\n              }\n            },\n            \"color\": {\n              \"value\": [\"#aa73ff\", \"#f8c210\", \"#83d238\", \"#33b1f8\"]\n            },\n            \"shape\": {\n              \"type\": \"edge\",\n              \"stroke\": {\n                \"width\": 0,\n                \"color\": \"#000000\"\n              },\n              \"polygon\": {\n                \"nb_sides\": 15\n              }\n            },\n            \"opacity\": {\n              \"value\": 0.5,\n              \"random\": false,\n              \"anim\": {\n                \"enable\": false,\n                \"speed\": 1.5,\n                \"opacity_min\": 0.15,\n                \"sync\": false\n              }\n            },\n            \"size\": {\n              \"value\": 2.5,\n              \"random\": false,\n              \"anim\": {\n                \"enable\": true,\n                \"speed\": 2,\n                \"size_min\": 0.15,\n                \"sync\": false\n              }\n            },\n            \"line_linked\": {\n              \"enable\": true,\n              \"distance\": 110,\n              \"color\": \"#33b1f8\",\n              \"opacity\": 0.25,\n              \"width\": 1\n            },\n            \"move\": {\n              \"enable\": true,\n              \"speed\": 1.6,\n              \"direction\": \"none\",\n              \"random\": false,\n              \"straight\": false,\n              \"out_mode\": \"out\",\n              \"bounce\": false,\n              \"attract\": {\n                \"enable\": false,\n                \"rotateX\": 600,\n                \"rotateY\": 1200\n              }\n            }\n          },\n          \"interactivity\": {\n            \"detect_on\": \"canvas\",\n            \"events\": {\n              \"onhover\": {\n                \"enable\": false,\n                \"mode\": \"repulse\"\n              },\n              \"onclick\": {\n                \"enable\": false,\n                \"mode\": \"push\"\n              },\n              \"resize\": true\n            },\n            \"modes\": {\n              \"grab\": {\n                \"distance\": 400,\n                \"line_linked\": {\n                  \"opacity\": 1\n                }\n              },\n              \"bubble\": {\n                \"distance\": 400,\n                \"size\": 40,\n                \"duration\": 2,\n                \"opacity\": 8,\n                \"speed\": 3\n              },\n              \"repulse\": {\n                \"distance\": 200,\n                \"duration\": 0.4\n              },\n              \"push\": {\n                \"particles_nb\": 4\n              },\n              \"remove\": {\n                \"particles_nb\": 2\n              }\n            }\n          },\n          \"retina_detect\": true\n        }\n```\nApi手册\n---\n| 键值| 参数说明|示例/默认值|\n| ------------- |:-------------:| :-----:|  \n| particles.number.value| number<br>数量|40|\n|particles.number.density.enable|boolean|true / false|\n|particles.number.density.value_area|number<br>区域散布密度大小|800|\n|particles.color.value\t|HEX (string)<br/>RGB (object)<br/>HSL (object)<br/> array selection (HEX) <br/>random (string)<br>原子的颜色|\"#b61924\"<br>{r:182, g:25, b:36}<br>{h:356, s:76, l:41}<br>[\"#b61924\", \"#333333\", \"999999\"]<br>\"random\"|\n|particles.shape.type|string<br>array selection<br>原子的形状| \"circle\"<br>\"edge\" <br>\"triangle\"<br>\"polygon\"<br>\"star\"<br>\"image\"<br>[\"circle\", \"triangle\", \"image\"]|\n|particles.shape.stroke.width|number<br>原理的宽度|2|\n|particles.shape.stroke.color|HEX (string)<br>原子颜色|\"#222222\"|\n|particles.shape.polygon.nb_slides|number<br>原子的多边形边数|5|\n|particles.shape.image.src|path<br>link<br>svg / png / gif / jpg<br>原子的图片可以使用自定义图片|\"assets/img/yop.svg\"<br>\"https://xxx.com/xxx.jpg\"|\n|particles.shape.image.width|number(for aspect ratio)<br>图片宽度|100|\n|particles.shape.image.height|number(for aspect ratio)<br>图片高度|100|\n|particles.opacity.value|number(0 to 1)<br>不透明度|0.75|\n|particles.opacity.random|boolean<br>随机不透明度|true / false|\n|particles.opacity.anim.enable|boolean<br>渐变动画|true / false|\n|particles.opacity.anim.speed|number<br>渐变动画速度|3|\n|particles.opacity.anim.opacity_min|number(0 to 1)<br>渐变动画不透明度|0.25|\n|particles.opacity.anim.sync|boolean|true / false|\n|particles.size.value|number<br>原子大小|20|\n|particles.size.random|boolean<br>原子大小随机|true / false|\n|particles.size.anim.enable|boolean<br>原子渐变|true / false|\n|particles.size.anim.speed|number<br>原子渐变速度|3|\n|particles.size.anim.size_min|number|0.25|\n|particles.size.anim.sync|boolean|true / false\n|particles.line_linked.enable|boolean<br>连接线|true / false\n|particles.line_linked.distance|number<br>连接线距离|150|\n|particles.line_linked.color|HEX(string)<br>连接线颜色|#ffffff|\n|particles.line_linked.opacity|number(0 to 1)<br>连接线不透明度|0.5|\n|particles.line_linked.width|number<br>连接线的宽度|1.5|\n|particles.move.enable|boolean<br>原子移动|true / false|\n|particles.move.speed|number<br>原子移动速度|4|\n|particles.move.direction|string<br>原子移动方向|\"none\"<br>\"top\"<br>\"top-right\"<br>\"right\" <br>\"bottom-right\"<br>\"bottom\"<br>\"bottom-left\"<br>\"left\"<br>\"top-left\"|\n|particles.move.random|boolean<br>移动随机方向|true / false|\n|particles.move.straight|boolean<br>直接移动|true / false|\n|particles.move.out_mode|string (out of canvas)<br>是否移动出画布|\"out\"<br>\"bounce\"|\n|particles.move.bounce|boolean<br>(between particles)是否跳动移动|true / false|\n|particles.move.attract.enable|boolean<br>原子之间吸引|true / false|\n|particles.move.attract.rotateX|number<br>原子之间吸引X水平距离|3000|\n|particles.move.attract.rotateY|number<br>y垂直距离|1500|\n|interactivity.detect_on|string<br>原子之间互动检测|\"canvas\"<br>\"window\"|\n|interactivity.events.onhover.enable|boolean<br>是否悬停|true / false|\n|interactivity.events.onhover.mode|string<br>array selection<br>悬停模式|\"grab\"&nbsp;&nbsp;&nbsp;&nbsp;抓取临近的<br>\"bubble\"&nbsp;&nbsp;&nbsp;&nbsp;泡沫球效果<br>\"repulse\"&nbsp;&nbsp;&nbsp;&nbsp;击退效果<br>[\"grab\", \"bubble\"]|\n|interactivity.events.onclick.enable|boolean<br>点击效果|true / false|\n|interactivity.events.onclick.mode|string<br>array selection<br>点击效果模式|\"push\" <br>\"remove\"<br>\"bubble\"<br>\"repulse\"<br>[\"push\", \"repulse\"]|\n|interactivity.events.resize|boolean<br>互动事件调整|true / false|\n|interactivity.events.modes.grab.distance|number<br>原子互动抓取距离|100|\n|interactivity.events.modes.grab.line_linked.opacity|number(0 to 1)<br>原子互动抓取距离连线不透明度|0.75|\n|interactivity.events.modes.bubble.distance|number<br>原子抓取泡沫效果之间的距离|100|\n|interactivity.events.modes.bubble.size|number<br>原子抓取泡沫效果之间的大小|40|\n|interactivity.events.modes.bubble.duration|number<br>原子抓取泡沫效果之间的持续事件(second)|0.4|\n|interactivity.events.modes.repulse.distance|number<br>击退效果距离|200|\n|interactivity.events.modes.repulse.duration|number<br>击退效果持续事件(second)|1.2|\n|interactivity.events.modes.push.particles_nb|number<br>粒子推出的数量|4|\n|interactivity.events.modes.push.particles_nb|number|4|\n|retina_detect|boolean|true / false|\n","source":"_posts/particlesJs开发手册.md","raw":"title: particlesJs开发手册\ndate: 2017-10-10 11:29:18\ntags: [canvas,粒子动画]\ncategories: [JavaScript]\ndescription: particles.js Api手册\n---\nquick start\n---\n首先需要引用particles.js，然后创建一个空元素。    \n```\n\t<div id=\"particles\"></div>\n\t      ......\n\t<script src=\"particles.js\"></script>\n  \n```\n然后在js中写配置就可以了\n```\nparticlesJS.load('particles', {\n\t......\n});\t\n```\n先展示完整的配置项示例，之后附上完整的api。\n```\n\t{\n          \"particles\": {\n            \"number\": {\n              \"value\": 300,\n              \"density\": {\n                \"enable\": true,\n                \"value_area\": 700\n              }\n            },\n            \"color\": {\n              \"value\": [\"#aa73ff\", \"#f8c210\", \"#83d238\", \"#33b1f8\"]\n            },\n            \"shape\": {\n              \"type\": \"edge\",\n              \"stroke\": {\n                \"width\": 0,\n                \"color\": \"#000000\"\n              },\n              \"polygon\": {\n                \"nb_sides\": 15\n              }\n            },\n            \"opacity\": {\n              \"value\": 0.5,\n              \"random\": false,\n              \"anim\": {\n                \"enable\": false,\n                \"speed\": 1.5,\n                \"opacity_min\": 0.15,\n                \"sync\": false\n              }\n            },\n            \"size\": {\n              \"value\": 2.5,\n              \"random\": false,\n              \"anim\": {\n                \"enable\": true,\n                \"speed\": 2,\n                \"size_min\": 0.15,\n                \"sync\": false\n              }\n            },\n            \"line_linked\": {\n              \"enable\": true,\n              \"distance\": 110,\n              \"color\": \"#33b1f8\",\n              \"opacity\": 0.25,\n              \"width\": 1\n            },\n            \"move\": {\n              \"enable\": true,\n              \"speed\": 1.6,\n              \"direction\": \"none\",\n              \"random\": false,\n              \"straight\": false,\n              \"out_mode\": \"out\",\n              \"bounce\": false,\n              \"attract\": {\n                \"enable\": false,\n                \"rotateX\": 600,\n                \"rotateY\": 1200\n              }\n            }\n          },\n          \"interactivity\": {\n            \"detect_on\": \"canvas\",\n            \"events\": {\n              \"onhover\": {\n                \"enable\": false,\n                \"mode\": \"repulse\"\n              },\n              \"onclick\": {\n                \"enable\": false,\n                \"mode\": \"push\"\n              },\n              \"resize\": true\n            },\n            \"modes\": {\n              \"grab\": {\n                \"distance\": 400,\n                \"line_linked\": {\n                  \"opacity\": 1\n                }\n              },\n              \"bubble\": {\n                \"distance\": 400,\n                \"size\": 40,\n                \"duration\": 2,\n                \"opacity\": 8,\n                \"speed\": 3\n              },\n              \"repulse\": {\n                \"distance\": 200,\n                \"duration\": 0.4\n              },\n              \"push\": {\n                \"particles_nb\": 4\n              },\n              \"remove\": {\n                \"particles_nb\": 2\n              }\n            }\n          },\n          \"retina_detect\": true\n        }\n```\nApi手册\n---\n| 键值| 参数说明|示例/默认值|\n| ------------- |:-------------:| :-----:|  \n| particles.number.value| number<br>数量|40|\n|particles.number.density.enable|boolean|true / false|\n|particles.number.density.value_area|number<br>区域散布密度大小|800|\n|particles.color.value\t|HEX (string)<br/>RGB (object)<br/>HSL (object)<br/> array selection (HEX) <br/>random (string)<br>原子的颜色|\"#b61924\"<br>{r:182, g:25, b:36}<br>{h:356, s:76, l:41}<br>[\"#b61924\", \"#333333\", \"999999\"]<br>\"random\"|\n|particles.shape.type|string<br>array selection<br>原子的形状| \"circle\"<br>\"edge\" <br>\"triangle\"<br>\"polygon\"<br>\"star\"<br>\"image\"<br>[\"circle\", \"triangle\", \"image\"]|\n|particles.shape.stroke.width|number<br>原理的宽度|2|\n|particles.shape.stroke.color|HEX (string)<br>原子颜色|\"#222222\"|\n|particles.shape.polygon.nb_slides|number<br>原子的多边形边数|5|\n|particles.shape.image.src|path<br>link<br>svg / png / gif / jpg<br>原子的图片可以使用自定义图片|\"assets/img/yop.svg\"<br>\"https://xxx.com/xxx.jpg\"|\n|particles.shape.image.width|number(for aspect ratio)<br>图片宽度|100|\n|particles.shape.image.height|number(for aspect ratio)<br>图片高度|100|\n|particles.opacity.value|number(0 to 1)<br>不透明度|0.75|\n|particles.opacity.random|boolean<br>随机不透明度|true / false|\n|particles.opacity.anim.enable|boolean<br>渐变动画|true / false|\n|particles.opacity.anim.speed|number<br>渐变动画速度|3|\n|particles.opacity.anim.opacity_min|number(0 to 1)<br>渐变动画不透明度|0.25|\n|particles.opacity.anim.sync|boolean|true / false|\n|particles.size.value|number<br>原子大小|20|\n|particles.size.random|boolean<br>原子大小随机|true / false|\n|particles.size.anim.enable|boolean<br>原子渐变|true / false|\n|particles.size.anim.speed|number<br>原子渐变速度|3|\n|particles.size.anim.size_min|number|0.25|\n|particles.size.anim.sync|boolean|true / false\n|particles.line_linked.enable|boolean<br>连接线|true / false\n|particles.line_linked.distance|number<br>连接线距离|150|\n|particles.line_linked.color|HEX(string)<br>连接线颜色|#ffffff|\n|particles.line_linked.opacity|number(0 to 1)<br>连接线不透明度|0.5|\n|particles.line_linked.width|number<br>连接线的宽度|1.5|\n|particles.move.enable|boolean<br>原子移动|true / false|\n|particles.move.speed|number<br>原子移动速度|4|\n|particles.move.direction|string<br>原子移动方向|\"none\"<br>\"top\"<br>\"top-right\"<br>\"right\" <br>\"bottom-right\"<br>\"bottom\"<br>\"bottom-left\"<br>\"left\"<br>\"top-left\"|\n|particles.move.random|boolean<br>移动随机方向|true / false|\n|particles.move.straight|boolean<br>直接移动|true / false|\n|particles.move.out_mode|string (out of canvas)<br>是否移动出画布|\"out\"<br>\"bounce\"|\n|particles.move.bounce|boolean<br>(between particles)是否跳动移动|true / false|\n|particles.move.attract.enable|boolean<br>原子之间吸引|true / false|\n|particles.move.attract.rotateX|number<br>原子之间吸引X水平距离|3000|\n|particles.move.attract.rotateY|number<br>y垂直距离|1500|\n|interactivity.detect_on|string<br>原子之间互动检测|\"canvas\"<br>\"window\"|\n|interactivity.events.onhover.enable|boolean<br>是否悬停|true / false|\n|interactivity.events.onhover.mode|string<br>array selection<br>悬停模式|\"grab\"&nbsp;&nbsp;&nbsp;&nbsp;抓取临近的<br>\"bubble\"&nbsp;&nbsp;&nbsp;&nbsp;泡沫球效果<br>\"repulse\"&nbsp;&nbsp;&nbsp;&nbsp;击退效果<br>[\"grab\", \"bubble\"]|\n|interactivity.events.onclick.enable|boolean<br>点击效果|true / false|\n|interactivity.events.onclick.mode|string<br>array selection<br>点击效果模式|\"push\" <br>\"remove\"<br>\"bubble\"<br>\"repulse\"<br>[\"push\", \"repulse\"]|\n|interactivity.events.resize|boolean<br>互动事件调整|true / false|\n|interactivity.events.modes.grab.distance|number<br>原子互动抓取距离|100|\n|interactivity.events.modes.grab.line_linked.opacity|number(0 to 1)<br>原子互动抓取距离连线不透明度|0.75|\n|interactivity.events.modes.bubble.distance|number<br>原子抓取泡沫效果之间的距离|100|\n|interactivity.events.modes.bubble.size|number<br>原子抓取泡沫效果之间的大小|40|\n|interactivity.events.modes.bubble.duration|number<br>原子抓取泡沫效果之间的持续事件(second)|0.4|\n|interactivity.events.modes.repulse.distance|number<br>击退效果距离|200|\n|interactivity.events.modes.repulse.duration|number<br>击退效果持续事件(second)|1.2|\n|interactivity.events.modes.push.particles_nb|number<br>粒子推出的数量|4|\n|interactivity.events.modes.push.particles_nb|number|4|\n|retina_detect|boolean|true / false|\n","slug":"particlesJs开发手册","published":1,"updated":"2019-09-29T11:22:34.499Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck3jm8gvv000kz0btjct5zz94","content":"<h2 id=\"quick-start\"><a href=\"#quick-start\" class=\"headerlink\" title=\"quick start\"></a>quick start</h2><p>首先需要引用particles.js，然后创建一个空元素。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;div id=&quot;particles&quot;&gt;&lt;/div&gt;</span><br><span class=\"line\">      ......</span><br><span class=\"line\">&lt;script src=&quot;particles.js&quot;&gt;&lt;/script&gt;</span><br></pre></td></tr></table></figure></p>\n<p>然后在js中写配置就可以了<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">particlesJS.load(&apos;particles&apos;, &#123;</span><br><span class=\"line\">\t......</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure></p>\n<p>先展示完整的配置项示例，之后附上完整的api。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">         &quot;particles&quot;: &#123;</span><br><span class=\"line\">           &quot;number&quot;: &#123;</span><br><span class=\"line\">             &quot;value&quot;: 300,</span><br><span class=\"line\">             &quot;density&quot;: &#123;</span><br><span class=\"line\">               &quot;enable&quot;: true,</span><br><span class=\"line\">               &quot;value_area&quot;: 700</span><br><span class=\"line\">             &#125;</span><br><span class=\"line\">           &#125;,</span><br><span class=\"line\">           &quot;color&quot;: &#123;</span><br><span class=\"line\">             &quot;value&quot;: [&quot;#aa73ff&quot;, &quot;#f8c210&quot;, &quot;#83d238&quot;, &quot;#33b1f8&quot;]</span><br><span class=\"line\">           &#125;,</span><br><span class=\"line\">           &quot;shape&quot;: &#123;</span><br><span class=\"line\">             &quot;type&quot;: &quot;edge&quot;,</span><br><span class=\"line\">             &quot;stroke&quot;: &#123;</span><br><span class=\"line\">               &quot;width&quot;: 0,</span><br><span class=\"line\">               &quot;color&quot;: &quot;#000000&quot;</span><br><span class=\"line\">             &#125;,</span><br><span class=\"line\">             &quot;polygon&quot;: &#123;</span><br><span class=\"line\">               &quot;nb_sides&quot;: 15</span><br><span class=\"line\">             &#125;</span><br><span class=\"line\">           &#125;,</span><br><span class=\"line\">           &quot;opacity&quot;: &#123;</span><br><span class=\"line\">             &quot;value&quot;: 0.5,</span><br><span class=\"line\">             &quot;random&quot;: false,</span><br><span class=\"line\">             &quot;anim&quot;: &#123;</span><br><span class=\"line\">               &quot;enable&quot;: false,</span><br><span class=\"line\">               &quot;speed&quot;: 1.5,</span><br><span class=\"line\">               &quot;opacity_min&quot;: 0.15,</span><br><span class=\"line\">               &quot;sync&quot;: false</span><br><span class=\"line\">             &#125;</span><br><span class=\"line\">           &#125;,</span><br><span class=\"line\">           &quot;size&quot;: &#123;</span><br><span class=\"line\">             &quot;value&quot;: 2.5,</span><br><span class=\"line\">             &quot;random&quot;: false,</span><br><span class=\"line\">             &quot;anim&quot;: &#123;</span><br><span class=\"line\">               &quot;enable&quot;: true,</span><br><span class=\"line\">               &quot;speed&quot;: 2,</span><br><span class=\"line\">               &quot;size_min&quot;: 0.15,</span><br><span class=\"line\">               &quot;sync&quot;: false</span><br><span class=\"line\">             &#125;</span><br><span class=\"line\">           &#125;,</span><br><span class=\"line\">           &quot;line_linked&quot;: &#123;</span><br><span class=\"line\">             &quot;enable&quot;: true,</span><br><span class=\"line\">             &quot;distance&quot;: 110,</span><br><span class=\"line\">             &quot;color&quot;: &quot;#33b1f8&quot;,</span><br><span class=\"line\">             &quot;opacity&quot;: 0.25,</span><br><span class=\"line\">             &quot;width&quot;: 1</span><br><span class=\"line\">           &#125;,</span><br><span class=\"line\">           &quot;move&quot;: &#123;</span><br><span class=\"line\">             &quot;enable&quot;: true,</span><br><span class=\"line\">             &quot;speed&quot;: 1.6,</span><br><span class=\"line\">             &quot;direction&quot;: &quot;none&quot;,</span><br><span class=\"line\">             &quot;random&quot;: false,</span><br><span class=\"line\">             &quot;straight&quot;: false,</span><br><span class=\"line\">             &quot;out_mode&quot;: &quot;out&quot;,</span><br><span class=\"line\">             &quot;bounce&quot;: false,</span><br><span class=\"line\">             &quot;attract&quot;: &#123;</span><br><span class=\"line\">               &quot;enable&quot;: false,</span><br><span class=\"line\">               &quot;rotateX&quot;: 600,</span><br><span class=\"line\">               &quot;rotateY&quot;: 1200</span><br><span class=\"line\">             &#125;</span><br><span class=\"line\">           &#125;</span><br><span class=\"line\">         &#125;,</span><br><span class=\"line\">         &quot;interactivity&quot;: &#123;</span><br><span class=\"line\">           &quot;detect_on&quot;: &quot;canvas&quot;,</span><br><span class=\"line\">           &quot;events&quot;: &#123;</span><br><span class=\"line\">             &quot;onhover&quot;: &#123;</span><br><span class=\"line\">               &quot;enable&quot;: false,</span><br><span class=\"line\">               &quot;mode&quot;: &quot;repulse&quot;</span><br><span class=\"line\">             &#125;,</span><br><span class=\"line\">             &quot;onclick&quot;: &#123;</span><br><span class=\"line\">               &quot;enable&quot;: false,</span><br><span class=\"line\">               &quot;mode&quot;: &quot;push&quot;</span><br><span class=\"line\">             &#125;,</span><br><span class=\"line\">             &quot;resize&quot;: true</span><br><span class=\"line\">           &#125;,</span><br><span class=\"line\">           &quot;modes&quot;: &#123;</span><br><span class=\"line\">             &quot;grab&quot;: &#123;</span><br><span class=\"line\">               &quot;distance&quot;: 400,</span><br><span class=\"line\">               &quot;line_linked&quot;: &#123;</span><br><span class=\"line\">                 &quot;opacity&quot;: 1</span><br><span class=\"line\">               &#125;</span><br><span class=\"line\">             &#125;,</span><br><span class=\"line\">             &quot;bubble&quot;: &#123;</span><br><span class=\"line\">               &quot;distance&quot;: 400,</span><br><span class=\"line\">               &quot;size&quot;: 40,</span><br><span class=\"line\">               &quot;duration&quot;: 2,</span><br><span class=\"line\">               &quot;opacity&quot;: 8,</span><br><span class=\"line\">               &quot;speed&quot;: 3</span><br><span class=\"line\">             &#125;,</span><br><span class=\"line\">             &quot;repulse&quot;: &#123;</span><br><span class=\"line\">               &quot;distance&quot;: 200,</span><br><span class=\"line\">               &quot;duration&quot;: 0.4</span><br><span class=\"line\">             &#125;,</span><br><span class=\"line\">             &quot;push&quot;: &#123;</span><br><span class=\"line\">               &quot;particles_nb&quot;: 4</span><br><span class=\"line\">             &#125;,</span><br><span class=\"line\">             &quot;remove&quot;: &#123;</span><br><span class=\"line\">               &quot;particles_nb&quot;: 2</span><br><span class=\"line\">             &#125;</span><br><span class=\"line\">           &#125;</span><br><span class=\"line\">         &#125;,</span><br><span class=\"line\">         &quot;retina_detect&quot;: true</span><br><span class=\"line\">       &#125;</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"Api手册\"><a href=\"#Api手册\" class=\"headerlink\" title=\"Api手册\"></a>Api手册</h2><table>\n<thead>\n<tr>\n<th>键值</th>\n<th style=\"text-align:center\">参数说明</th>\n<th style=\"text-align:center\">示例/默认值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>particles.number.value</td>\n<td style=\"text-align:center\">number<br>数量</td>\n<td style=\"text-align:center\">40</td>\n</tr>\n<tr>\n<td>particles.number.density.enable</td>\n<td style=\"text-align:center\">boolean</td>\n<td style=\"text-align:center\">true / false</td>\n</tr>\n<tr>\n<td>particles.number.density.value_area</td>\n<td style=\"text-align:center\">number<br>区域散布密度大小</td>\n<td style=\"text-align:center\">800</td>\n</tr>\n<tr>\n<td>particles.color.value</td>\n<td style=\"text-align:center\">HEX (string)<br>RGB (object)<br>HSL (object)<br> array selection (HEX) <br>random (string)<br>原子的颜色</td>\n<td style=\"text-align:center\">“#b61924”<br>{r:182, g:25, b:36}<br>{h:356, s:76, l:41}<br>[“#b61924”, “#333333”, “999999”]<br>“random”</td>\n</tr>\n<tr>\n<td>particles.shape.type</td>\n<td style=\"text-align:center\">string<br>array selection<br>原子的形状</td>\n<td style=\"text-align:center\">“circle”<br>“edge” <br>“triangle”<br>“polygon”<br>“star”<br>“image”<br>[“circle”, “triangle”, “image”]</td>\n</tr>\n<tr>\n<td>particles.shape.stroke.width</td>\n<td style=\"text-align:center\">number<br>原理的宽度</td>\n<td style=\"text-align:center\">2</td>\n</tr>\n<tr>\n<td>particles.shape.stroke.color</td>\n<td style=\"text-align:center\">HEX (string)<br>原子颜色</td>\n<td style=\"text-align:center\">“#222222”</td>\n</tr>\n<tr>\n<td>particles.shape.polygon.nb_slides</td>\n<td style=\"text-align:center\">number<br>原子的多边形边数</td>\n<td style=\"text-align:center\">5</td>\n</tr>\n<tr>\n<td>particles.shape.image.src</td>\n<td style=\"text-align:center\">path<br>link<br>svg / png / gif / jpg<br>原子的图片可以使用自定义图片</td>\n<td style=\"text-align:center\">“assets/img/yop.svg”<br>“<a href=\"https://xxx.com/xxx.jpg&quot;\" target=\"_blank\" rel=\"noopener\">https://xxx.com/xxx.jpg&quot;</a></td>\n</tr>\n<tr>\n<td>particles.shape.image.width</td>\n<td style=\"text-align:center\">number(for aspect ratio)<br>图片宽度</td>\n<td style=\"text-align:center\">100</td>\n</tr>\n<tr>\n<td>particles.shape.image.height</td>\n<td style=\"text-align:center\">number(for aspect ratio)<br>图片高度</td>\n<td style=\"text-align:center\">100</td>\n</tr>\n<tr>\n<td>particles.opacity.value</td>\n<td style=\"text-align:center\">number(0 to 1)<br>不透明度</td>\n<td style=\"text-align:center\">0.75</td>\n</tr>\n<tr>\n<td>particles.opacity.random</td>\n<td style=\"text-align:center\">boolean<br>随机不透明度</td>\n<td style=\"text-align:center\">true / false</td>\n</tr>\n<tr>\n<td>particles.opacity.anim.enable</td>\n<td style=\"text-align:center\">boolean<br>渐变动画</td>\n<td style=\"text-align:center\">true / false</td>\n</tr>\n<tr>\n<td>particles.opacity.anim.speed</td>\n<td style=\"text-align:center\">number<br>渐变动画速度</td>\n<td style=\"text-align:center\">3</td>\n</tr>\n<tr>\n<td>particles.opacity.anim.opacity_min</td>\n<td style=\"text-align:center\">number(0 to 1)<br>渐变动画不透明度</td>\n<td style=\"text-align:center\">0.25</td>\n</tr>\n<tr>\n<td>particles.opacity.anim.sync</td>\n<td style=\"text-align:center\">boolean</td>\n<td style=\"text-align:center\">true / false</td>\n</tr>\n<tr>\n<td>particles.size.value</td>\n<td style=\"text-align:center\">number<br>原子大小</td>\n<td style=\"text-align:center\">20</td>\n</tr>\n<tr>\n<td>particles.size.random</td>\n<td style=\"text-align:center\">boolean<br>原子大小随机</td>\n<td style=\"text-align:center\">true / false</td>\n</tr>\n<tr>\n<td>particles.size.anim.enable</td>\n<td style=\"text-align:center\">boolean<br>原子渐变</td>\n<td style=\"text-align:center\">true / false</td>\n</tr>\n<tr>\n<td>particles.size.anim.speed</td>\n<td style=\"text-align:center\">number<br>原子渐变速度</td>\n<td style=\"text-align:center\">3</td>\n</tr>\n<tr>\n<td>particles.size.anim.size_min</td>\n<td style=\"text-align:center\">number</td>\n<td style=\"text-align:center\">0.25</td>\n</tr>\n<tr>\n<td>particles.size.anim.sync</td>\n<td style=\"text-align:center\">boolean</td>\n<td style=\"text-align:center\">true / false</td>\n</tr>\n<tr>\n<td>particles.line_linked.enable</td>\n<td style=\"text-align:center\">boolean<br>连接线</td>\n<td style=\"text-align:center\">true / false</td>\n</tr>\n<tr>\n<td>particles.line_linked.distance</td>\n<td style=\"text-align:center\">number<br>连接线距离</td>\n<td style=\"text-align:center\">150</td>\n</tr>\n<tr>\n<td>particles.line_linked.color</td>\n<td style=\"text-align:center\">HEX(string)<br>连接线颜色</td>\n<td style=\"text-align:center\">#ffffff</td>\n</tr>\n<tr>\n<td>particles.line_linked.opacity</td>\n<td style=\"text-align:center\">number(0 to 1)<br>连接线不透明度</td>\n<td style=\"text-align:center\">0.5</td>\n</tr>\n<tr>\n<td>particles.line_linked.width</td>\n<td style=\"text-align:center\">number<br>连接线的宽度</td>\n<td style=\"text-align:center\">1.5</td>\n</tr>\n<tr>\n<td>particles.move.enable</td>\n<td style=\"text-align:center\">boolean<br>原子移动</td>\n<td style=\"text-align:center\">true / false</td>\n</tr>\n<tr>\n<td>particles.move.speed</td>\n<td style=\"text-align:center\">number<br>原子移动速度</td>\n<td style=\"text-align:center\">4</td>\n</tr>\n<tr>\n<td>particles.move.direction</td>\n<td style=\"text-align:center\">string<br>原子移动方向</td>\n<td style=\"text-align:center\">“none”<br>“top”<br>“top-right”<br>“right” <br>“bottom-right”<br>“bottom”<br>“bottom-left”<br>“left”<br>“top-left”</td>\n</tr>\n<tr>\n<td>particles.move.random</td>\n<td style=\"text-align:center\">boolean<br>移动随机方向</td>\n<td style=\"text-align:center\">true / false</td>\n</tr>\n<tr>\n<td>particles.move.straight</td>\n<td style=\"text-align:center\">boolean<br>直接移动</td>\n<td style=\"text-align:center\">true / false</td>\n</tr>\n<tr>\n<td>particles.move.out_mode</td>\n<td style=\"text-align:center\">string (out of canvas)<br>是否移动出画布</td>\n<td style=\"text-align:center\">“out”<br>“bounce”</td>\n</tr>\n<tr>\n<td>particles.move.bounce</td>\n<td style=\"text-align:center\">boolean<br>(between particles)是否跳动移动</td>\n<td style=\"text-align:center\">true / false</td>\n</tr>\n<tr>\n<td>particles.move.attract.enable</td>\n<td style=\"text-align:center\">boolean<br>原子之间吸引</td>\n<td style=\"text-align:center\">true / false</td>\n</tr>\n<tr>\n<td>particles.move.attract.rotateX</td>\n<td style=\"text-align:center\">number<br>原子之间吸引X水平距离</td>\n<td style=\"text-align:center\">3000</td>\n</tr>\n<tr>\n<td>particles.move.attract.rotateY</td>\n<td style=\"text-align:center\">number<br>y垂直距离</td>\n<td style=\"text-align:center\">1500</td>\n</tr>\n<tr>\n<td>interactivity.detect_on</td>\n<td style=\"text-align:center\">string<br>原子之间互动检测</td>\n<td style=\"text-align:center\">“canvas”<br>“window”</td>\n</tr>\n<tr>\n<td>interactivity.events.onhover.enable</td>\n<td style=\"text-align:center\">boolean<br>是否悬停</td>\n<td style=\"text-align:center\">true / false</td>\n</tr>\n<tr>\n<td>interactivity.events.onhover.mode</td>\n<td style=\"text-align:center\">string<br>array selection<br>悬停模式</td>\n<td style=\"text-align:center\">“grab”&nbsp;&nbsp;&nbsp;&nbsp;抓取临近的<br>“bubble”&nbsp;&nbsp;&nbsp;&nbsp;泡沫球效果<br>“repulse”&nbsp;&nbsp;&nbsp;&nbsp;击退效果<br>[“grab”, “bubble”]</td>\n</tr>\n<tr>\n<td>interactivity.events.onclick.enable</td>\n<td style=\"text-align:center\">boolean<br>点击效果</td>\n<td style=\"text-align:center\">true / false</td>\n</tr>\n<tr>\n<td>interactivity.events.onclick.mode</td>\n<td style=\"text-align:center\">string<br>array selection<br>点击效果模式</td>\n<td style=\"text-align:center\">“push” <br>“remove”<br>“bubble”<br>“repulse”<br>[“push”, “repulse”]</td>\n</tr>\n<tr>\n<td>interactivity.events.resize</td>\n<td style=\"text-align:center\">boolean<br>互动事件调整</td>\n<td style=\"text-align:center\">true / false</td>\n</tr>\n<tr>\n<td>interactivity.events.modes.grab.distance</td>\n<td style=\"text-align:center\">number<br>原子互动抓取距离</td>\n<td style=\"text-align:center\">100</td>\n</tr>\n<tr>\n<td>interactivity.events.modes.grab.line_linked.opacity</td>\n<td style=\"text-align:center\">number(0 to 1)<br>原子互动抓取距离连线不透明度</td>\n<td style=\"text-align:center\">0.75</td>\n</tr>\n<tr>\n<td>interactivity.events.modes.bubble.distance</td>\n<td style=\"text-align:center\">number<br>原子抓取泡沫效果之间的距离</td>\n<td style=\"text-align:center\">100</td>\n</tr>\n<tr>\n<td>interactivity.events.modes.bubble.size</td>\n<td style=\"text-align:center\">number<br>原子抓取泡沫效果之间的大小</td>\n<td style=\"text-align:center\">40</td>\n</tr>\n<tr>\n<td>interactivity.events.modes.bubble.duration</td>\n<td style=\"text-align:center\">number<br>原子抓取泡沫效果之间的持续事件(second)</td>\n<td style=\"text-align:center\">0.4</td>\n</tr>\n<tr>\n<td>interactivity.events.modes.repulse.distance</td>\n<td style=\"text-align:center\">number<br>击退效果距离</td>\n<td style=\"text-align:center\">200</td>\n</tr>\n<tr>\n<td>interactivity.events.modes.repulse.duration</td>\n<td style=\"text-align:center\">number<br>击退效果持续事件(second)</td>\n<td style=\"text-align:center\">1.2</td>\n</tr>\n<tr>\n<td>interactivity.events.modes.push.particles_nb</td>\n<td style=\"text-align:center\">number<br>粒子推出的数量</td>\n<td style=\"text-align:center\">4</td>\n</tr>\n<tr>\n<td>interactivity.events.modes.push.particles_nb</td>\n<td style=\"text-align:center\">number</td>\n<td style=\"text-align:center\">4</td>\n</tr>\n<tr>\n<td>retina_detect</td>\n<td style=\"text-align:center\">boolean</td>\n<td style=\"text-align:center\">true / false</td>\n</tr>\n</tbody>\n</table>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"quick-start\"><a href=\"#quick-start\" class=\"headerlink\" title=\"quick start\"></a>quick start</h2><p>首先需要引用particles.js，然后创建一个空元素。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;div id=&quot;particles&quot;&gt;&lt;/div&gt;</span><br><span class=\"line\">      ......</span><br><span class=\"line\">&lt;script src=&quot;particles.js&quot;&gt;&lt;/script&gt;</span><br></pre></td></tr></table></figure></p>\n<p>然后在js中写配置就可以了<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">particlesJS.load(&apos;particles&apos;, &#123;</span><br><span class=\"line\">\t......</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure></p>\n<p>先展示完整的配置项示例，之后附上完整的api。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">         &quot;particles&quot;: &#123;</span><br><span class=\"line\">           &quot;number&quot;: &#123;</span><br><span class=\"line\">             &quot;value&quot;: 300,</span><br><span class=\"line\">             &quot;density&quot;: &#123;</span><br><span class=\"line\">               &quot;enable&quot;: true,</span><br><span class=\"line\">               &quot;value_area&quot;: 700</span><br><span class=\"line\">             &#125;</span><br><span class=\"line\">           &#125;,</span><br><span class=\"line\">           &quot;color&quot;: &#123;</span><br><span class=\"line\">             &quot;value&quot;: [&quot;#aa73ff&quot;, &quot;#f8c210&quot;, &quot;#83d238&quot;, &quot;#33b1f8&quot;]</span><br><span class=\"line\">           &#125;,</span><br><span class=\"line\">           &quot;shape&quot;: &#123;</span><br><span class=\"line\">             &quot;type&quot;: &quot;edge&quot;,</span><br><span class=\"line\">             &quot;stroke&quot;: &#123;</span><br><span class=\"line\">               &quot;width&quot;: 0,</span><br><span class=\"line\">               &quot;color&quot;: &quot;#000000&quot;</span><br><span class=\"line\">             &#125;,</span><br><span class=\"line\">             &quot;polygon&quot;: &#123;</span><br><span class=\"line\">               &quot;nb_sides&quot;: 15</span><br><span class=\"line\">             &#125;</span><br><span class=\"line\">           &#125;,</span><br><span class=\"line\">           &quot;opacity&quot;: &#123;</span><br><span class=\"line\">             &quot;value&quot;: 0.5,</span><br><span class=\"line\">             &quot;random&quot;: false,</span><br><span class=\"line\">             &quot;anim&quot;: &#123;</span><br><span class=\"line\">               &quot;enable&quot;: false,</span><br><span class=\"line\">               &quot;speed&quot;: 1.5,</span><br><span class=\"line\">               &quot;opacity_min&quot;: 0.15,</span><br><span class=\"line\">               &quot;sync&quot;: false</span><br><span class=\"line\">             &#125;</span><br><span class=\"line\">           &#125;,</span><br><span class=\"line\">           &quot;size&quot;: &#123;</span><br><span class=\"line\">             &quot;value&quot;: 2.5,</span><br><span class=\"line\">             &quot;random&quot;: false,</span><br><span class=\"line\">             &quot;anim&quot;: &#123;</span><br><span class=\"line\">               &quot;enable&quot;: true,</span><br><span class=\"line\">               &quot;speed&quot;: 2,</span><br><span class=\"line\">               &quot;size_min&quot;: 0.15,</span><br><span class=\"line\">               &quot;sync&quot;: false</span><br><span class=\"line\">             &#125;</span><br><span class=\"line\">           &#125;,</span><br><span class=\"line\">           &quot;line_linked&quot;: &#123;</span><br><span class=\"line\">             &quot;enable&quot;: true,</span><br><span class=\"line\">             &quot;distance&quot;: 110,</span><br><span class=\"line\">             &quot;color&quot;: &quot;#33b1f8&quot;,</span><br><span class=\"line\">             &quot;opacity&quot;: 0.25,</span><br><span class=\"line\">             &quot;width&quot;: 1</span><br><span class=\"line\">           &#125;,</span><br><span class=\"line\">           &quot;move&quot;: &#123;</span><br><span class=\"line\">             &quot;enable&quot;: true,</span><br><span class=\"line\">             &quot;speed&quot;: 1.6,</span><br><span class=\"line\">             &quot;direction&quot;: &quot;none&quot;,</span><br><span class=\"line\">             &quot;random&quot;: false,</span><br><span class=\"line\">             &quot;straight&quot;: false,</span><br><span class=\"line\">             &quot;out_mode&quot;: &quot;out&quot;,</span><br><span class=\"line\">             &quot;bounce&quot;: false,</span><br><span class=\"line\">             &quot;attract&quot;: &#123;</span><br><span class=\"line\">               &quot;enable&quot;: false,</span><br><span class=\"line\">               &quot;rotateX&quot;: 600,</span><br><span class=\"line\">               &quot;rotateY&quot;: 1200</span><br><span class=\"line\">             &#125;</span><br><span class=\"line\">           &#125;</span><br><span class=\"line\">         &#125;,</span><br><span class=\"line\">         &quot;interactivity&quot;: &#123;</span><br><span class=\"line\">           &quot;detect_on&quot;: &quot;canvas&quot;,</span><br><span class=\"line\">           &quot;events&quot;: &#123;</span><br><span class=\"line\">             &quot;onhover&quot;: &#123;</span><br><span class=\"line\">               &quot;enable&quot;: false,</span><br><span class=\"line\">               &quot;mode&quot;: &quot;repulse&quot;</span><br><span class=\"line\">             &#125;,</span><br><span class=\"line\">             &quot;onclick&quot;: &#123;</span><br><span class=\"line\">               &quot;enable&quot;: false,</span><br><span class=\"line\">               &quot;mode&quot;: &quot;push&quot;</span><br><span class=\"line\">             &#125;,</span><br><span class=\"line\">             &quot;resize&quot;: true</span><br><span class=\"line\">           &#125;,</span><br><span class=\"line\">           &quot;modes&quot;: &#123;</span><br><span class=\"line\">             &quot;grab&quot;: &#123;</span><br><span class=\"line\">               &quot;distance&quot;: 400,</span><br><span class=\"line\">               &quot;line_linked&quot;: &#123;</span><br><span class=\"line\">                 &quot;opacity&quot;: 1</span><br><span class=\"line\">               &#125;</span><br><span class=\"line\">             &#125;,</span><br><span class=\"line\">             &quot;bubble&quot;: &#123;</span><br><span class=\"line\">               &quot;distance&quot;: 400,</span><br><span class=\"line\">               &quot;size&quot;: 40,</span><br><span class=\"line\">               &quot;duration&quot;: 2,</span><br><span class=\"line\">               &quot;opacity&quot;: 8,</span><br><span class=\"line\">               &quot;speed&quot;: 3</span><br><span class=\"line\">             &#125;,</span><br><span class=\"line\">             &quot;repulse&quot;: &#123;</span><br><span class=\"line\">               &quot;distance&quot;: 200,</span><br><span class=\"line\">               &quot;duration&quot;: 0.4</span><br><span class=\"line\">             &#125;,</span><br><span class=\"line\">             &quot;push&quot;: &#123;</span><br><span class=\"line\">               &quot;particles_nb&quot;: 4</span><br><span class=\"line\">             &#125;,</span><br><span class=\"line\">             &quot;remove&quot;: &#123;</span><br><span class=\"line\">               &quot;particles_nb&quot;: 2</span><br><span class=\"line\">             &#125;</span><br><span class=\"line\">           &#125;</span><br><span class=\"line\">         &#125;,</span><br><span class=\"line\">         &quot;retina_detect&quot;: true</span><br><span class=\"line\">       &#125;</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"Api手册\"><a href=\"#Api手册\" class=\"headerlink\" title=\"Api手册\"></a>Api手册</h2><table>\n<thead>\n<tr>\n<th>键值</th>\n<th style=\"text-align:center\">参数说明</th>\n<th style=\"text-align:center\">示例/默认值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>particles.number.value</td>\n<td style=\"text-align:center\">number<br>数量</td>\n<td style=\"text-align:center\">40</td>\n</tr>\n<tr>\n<td>particles.number.density.enable</td>\n<td style=\"text-align:center\">boolean</td>\n<td style=\"text-align:center\">true / false</td>\n</tr>\n<tr>\n<td>particles.number.density.value_area</td>\n<td style=\"text-align:center\">number<br>区域散布密度大小</td>\n<td style=\"text-align:center\">800</td>\n</tr>\n<tr>\n<td>particles.color.value</td>\n<td style=\"text-align:center\">HEX (string)<br>RGB (object)<br>HSL (object)<br> array selection (HEX) <br>random (string)<br>原子的颜色</td>\n<td style=\"text-align:center\">“#b61924”<br>{r:182, g:25, b:36}<br>{h:356, s:76, l:41}<br>[“#b61924”, “#333333”, “999999”]<br>“random”</td>\n</tr>\n<tr>\n<td>particles.shape.type</td>\n<td style=\"text-align:center\">string<br>array selection<br>原子的形状</td>\n<td style=\"text-align:center\">“circle”<br>“edge” <br>“triangle”<br>“polygon”<br>“star”<br>“image”<br>[“circle”, “triangle”, “image”]</td>\n</tr>\n<tr>\n<td>particles.shape.stroke.width</td>\n<td style=\"text-align:center\">number<br>原理的宽度</td>\n<td style=\"text-align:center\">2</td>\n</tr>\n<tr>\n<td>particles.shape.stroke.color</td>\n<td style=\"text-align:center\">HEX (string)<br>原子颜色</td>\n<td style=\"text-align:center\">“#222222”</td>\n</tr>\n<tr>\n<td>particles.shape.polygon.nb_slides</td>\n<td style=\"text-align:center\">number<br>原子的多边形边数</td>\n<td style=\"text-align:center\">5</td>\n</tr>\n<tr>\n<td>particles.shape.image.src</td>\n<td style=\"text-align:center\">path<br>link<br>svg / png / gif / jpg<br>原子的图片可以使用自定义图片</td>\n<td style=\"text-align:center\">“assets/img/yop.svg”<br>“<a href=\"https://xxx.com/xxx.jpg&quot;\" target=\"_blank\" rel=\"noopener\">https://xxx.com/xxx.jpg&quot;</a></td>\n</tr>\n<tr>\n<td>particles.shape.image.width</td>\n<td style=\"text-align:center\">number(for aspect ratio)<br>图片宽度</td>\n<td style=\"text-align:center\">100</td>\n</tr>\n<tr>\n<td>particles.shape.image.height</td>\n<td style=\"text-align:center\">number(for aspect ratio)<br>图片高度</td>\n<td style=\"text-align:center\">100</td>\n</tr>\n<tr>\n<td>particles.opacity.value</td>\n<td style=\"text-align:center\">number(0 to 1)<br>不透明度</td>\n<td style=\"text-align:center\">0.75</td>\n</tr>\n<tr>\n<td>particles.opacity.random</td>\n<td style=\"text-align:center\">boolean<br>随机不透明度</td>\n<td style=\"text-align:center\">true / false</td>\n</tr>\n<tr>\n<td>particles.opacity.anim.enable</td>\n<td style=\"text-align:center\">boolean<br>渐变动画</td>\n<td style=\"text-align:center\">true / false</td>\n</tr>\n<tr>\n<td>particles.opacity.anim.speed</td>\n<td style=\"text-align:center\">number<br>渐变动画速度</td>\n<td style=\"text-align:center\">3</td>\n</tr>\n<tr>\n<td>particles.opacity.anim.opacity_min</td>\n<td style=\"text-align:center\">number(0 to 1)<br>渐变动画不透明度</td>\n<td style=\"text-align:center\">0.25</td>\n</tr>\n<tr>\n<td>particles.opacity.anim.sync</td>\n<td style=\"text-align:center\">boolean</td>\n<td style=\"text-align:center\">true / false</td>\n</tr>\n<tr>\n<td>particles.size.value</td>\n<td style=\"text-align:center\">number<br>原子大小</td>\n<td style=\"text-align:center\">20</td>\n</tr>\n<tr>\n<td>particles.size.random</td>\n<td style=\"text-align:center\">boolean<br>原子大小随机</td>\n<td style=\"text-align:center\">true / false</td>\n</tr>\n<tr>\n<td>particles.size.anim.enable</td>\n<td style=\"text-align:center\">boolean<br>原子渐变</td>\n<td style=\"text-align:center\">true / false</td>\n</tr>\n<tr>\n<td>particles.size.anim.speed</td>\n<td style=\"text-align:center\">number<br>原子渐变速度</td>\n<td style=\"text-align:center\">3</td>\n</tr>\n<tr>\n<td>particles.size.anim.size_min</td>\n<td style=\"text-align:center\">number</td>\n<td style=\"text-align:center\">0.25</td>\n</tr>\n<tr>\n<td>particles.size.anim.sync</td>\n<td style=\"text-align:center\">boolean</td>\n<td style=\"text-align:center\">true / false</td>\n</tr>\n<tr>\n<td>particles.line_linked.enable</td>\n<td style=\"text-align:center\">boolean<br>连接线</td>\n<td style=\"text-align:center\">true / false</td>\n</tr>\n<tr>\n<td>particles.line_linked.distance</td>\n<td style=\"text-align:center\">number<br>连接线距离</td>\n<td style=\"text-align:center\">150</td>\n</tr>\n<tr>\n<td>particles.line_linked.color</td>\n<td style=\"text-align:center\">HEX(string)<br>连接线颜色</td>\n<td style=\"text-align:center\">#ffffff</td>\n</tr>\n<tr>\n<td>particles.line_linked.opacity</td>\n<td style=\"text-align:center\">number(0 to 1)<br>连接线不透明度</td>\n<td style=\"text-align:center\">0.5</td>\n</tr>\n<tr>\n<td>particles.line_linked.width</td>\n<td style=\"text-align:center\">number<br>连接线的宽度</td>\n<td style=\"text-align:center\">1.5</td>\n</tr>\n<tr>\n<td>particles.move.enable</td>\n<td style=\"text-align:center\">boolean<br>原子移动</td>\n<td style=\"text-align:center\">true / false</td>\n</tr>\n<tr>\n<td>particles.move.speed</td>\n<td style=\"text-align:center\">number<br>原子移动速度</td>\n<td style=\"text-align:center\">4</td>\n</tr>\n<tr>\n<td>particles.move.direction</td>\n<td style=\"text-align:center\">string<br>原子移动方向</td>\n<td style=\"text-align:center\">“none”<br>“top”<br>“top-right”<br>“right” <br>“bottom-right”<br>“bottom”<br>“bottom-left”<br>“left”<br>“top-left”</td>\n</tr>\n<tr>\n<td>particles.move.random</td>\n<td style=\"text-align:center\">boolean<br>移动随机方向</td>\n<td style=\"text-align:center\">true / false</td>\n</tr>\n<tr>\n<td>particles.move.straight</td>\n<td style=\"text-align:center\">boolean<br>直接移动</td>\n<td style=\"text-align:center\">true / false</td>\n</tr>\n<tr>\n<td>particles.move.out_mode</td>\n<td style=\"text-align:center\">string (out of canvas)<br>是否移动出画布</td>\n<td style=\"text-align:center\">“out”<br>“bounce”</td>\n</tr>\n<tr>\n<td>particles.move.bounce</td>\n<td style=\"text-align:center\">boolean<br>(between particles)是否跳动移动</td>\n<td style=\"text-align:center\">true / false</td>\n</tr>\n<tr>\n<td>particles.move.attract.enable</td>\n<td style=\"text-align:center\">boolean<br>原子之间吸引</td>\n<td style=\"text-align:center\">true / false</td>\n</tr>\n<tr>\n<td>particles.move.attract.rotateX</td>\n<td style=\"text-align:center\">number<br>原子之间吸引X水平距离</td>\n<td style=\"text-align:center\">3000</td>\n</tr>\n<tr>\n<td>particles.move.attract.rotateY</td>\n<td style=\"text-align:center\">number<br>y垂直距离</td>\n<td style=\"text-align:center\">1500</td>\n</tr>\n<tr>\n<td>interactivity.detect_on</td>\n<td style=\"text-align:center\">string<br>原子之间互动检测</td>\n<td style=\"text-align:center\">“canvas”<br>“window”</td>\n</tr>\n<tr>\n<td>interactivity.events.onhover.enable</td>\n<td style=\"text-align:center\">boolean<br>是否悬停</td>\n<td style=\"text-align:center\">true / false</td>\n</tr>\n<tr>\n<td>interactivity.events.onhover.mode</td>\n<td style=\"text-align:center\">string<br>array selection<br>悬停模式</td>\n<td style=\"text-align:center\">“grab”&nbsp;&nbsp;&nbsp;&nbsp;抓取临近的<br>“bubble”&nbsp;&nbsp;&nbsp;&nbsp;泡沫球效果<br>“repulse”&nbsp;&nbsp;&nbsp;&nbsp;击退效果<br>[“grab”, “bubble”]</td>\n</tr>\n<tr>\n<td>interactivity.events.onclick.enable</td>\n<td style=\"text-align:center\">boolean<br>点击效果</td>\n<td style=\"text-align:center\">true / false</td>\n</tr>\n<tr>\n<td>interactivity.events.onclick.mode</td>\n<td style=\"text-align:center\">string<br>array selection<br>点击效果模式</td>\n<td style=\"text-align:center\">“push” <br>“remove”<br>“bubble”<br>“repulse”<br>[“push”, “repulse”]</td>\n</tr>\n<tr>\n<td>interactivity.events.resize</td>\n<td style=\"text-align:center\">boolean<br>互动事件调整</td>\n<td style=\"text-align:center\">true / false</td>\n</tr>\n<tr>\n<td>interactivity.events.modes.grab.distance</td>\n<td style=\"text-align:center\">number<br>原子互动抓取距离</td>\n<td style=\"text-align:center\">100</td>\n</tr>\n<tr>\n<td>interactivity.events.modes.grab.line_linked.opacity</td>\n<td style=\"text-align:center\">number(0 to 1)<br>原子互动抓取距离连线不透明度</td>\n<td style=\"text-align:center\">0.75</td>\n</tr>\n<tr>\n<td>interactivity.events.modes.bubble.distance</td>\n<td style=\"text-align:center\">number<br>原子抓取泡沫效果之间的距离</td>\n<td style=\"text-align:center\">100</td>\n</tr>\n<tr>\n<td>interactivity.events.modes.bubble.size</td>\n<td style=\"text-align:center\">number<br>原子抓取泡沫效果之间的大小</td>\n<td style=\"text-align:center\">40</td>\n</tr>\n<tr>\n<td>interactivity.events.modes.bubble.duration</td>\n<td style=\"text-align:center\">number<br>原子抓取泡沫效果之间的持续事件(second)</td>\n<td style=\"text-align:center\">0.4</td>\n</tr>\n<tr>\n<td>interactivity.events.modes.repulse.distance</td>\n<td style=\"text-align:center\">number<br>击退效果距离</td>\n<td style=\"text-align:center\">200</td>\n</tr>\n<tr>\n<td>interactivity.events.modes.repulse.duration</td>\n<td style=\"text-align:center\">number<br>击退效果持续事件(second)</td>\n<td style=\"text-align:center\">1.2</td>\n</tr>\n<tr>\n<td>interactivity.events.modes.push.particles_nb</td>\n<td style=\"text-align:center\">number<br>粒子推出的数量</td>\n<td style=\"text-align:center\">4</td>\n</tr>\n<tr>\n<td>interactivity.events.modes.push.particles_nb</td>\n<td style=\"text-align:center\">number</td>\n<td style=\"text-align:center\">4</td>\n</tr>\n<tr>\n<td>retina_detect</td>\n<td style=\"text-align:center\">boolean</td>\n<td style=\"text-align:center\">true / false</td>\n</tr>\n</tbody>\n</table>\n"},{"title":"swiper-animate的使用","date":"2018-02-03T09:39:52.000Z","description":"使用swiper-animate创建自己的动画","_content":"使用swiper创建动画时，有时需要制作一些css的动画丰富你的网页。swiper提供了快速制作css动画效果的小插件，适用于所有版本swiper。\n> **该插件不适用于loop模式**\n## 引用 [swiper.animate.min.js](https://pan.baidu.com/s/1i5U4jcD) 和 [animate.css](https://cdn.bootcss.com/animate.css/3.5.2/animate.min.css)\n```\n//  使用script引入\n<head>\n    ...\n    <link rel=\"stylesheet\" href=\"swiper.min.css\">\n    <link rel=\"stylesheet\" href=\"animate.min.css\">\n    <script src=\"swiper.min.js\"></script>\n    <script src=\"swiper.animate.min.js\"></script>\n    ...\n</head>\n\n//  使用模块引入\nimport swiper from \"vue-awesome-swiper\"\nimport \"swiper/dist/css/swiper.css\"\nimport \"animate.css\"\nimport import {swiperAnimateCache, swiperAnimate, clearSwiperAnimate} from 'swiper-animate-cn'\n```\n## 在swiper配置项中加入以下内容\n```\n// swiper4.x\nswiperOptions = {\n  ...\n  on:{\n    init: function(){\n      swiperAnimateCache(this); //隐藏动画元素 \n      swiperAnimate(this); //初始化完成开始动画\n    }, \n    slideChangeTransitionEnd: function(){ \n      swiperAnimate(this); //每个slide切换结束时也运行当前slide动画\n    } \n  }\n  ...\n}\n\n// swiper3.x、swiper2.x\nswiperOptions = {\n  ...\n  onInit: function(swiper){ //Swiper2.x的初始化是onFirstInit\n    swiperAnimateCache(swiper); //隐藏动画元素 \n    swiperAnimate(swiper); //初始化完成开始动画\n  }, \n  onSlideChangeEnd: function(swiper){ \n    swiperAnimate(swiper); //每个slide切换结束时也运行当前slide动画\n  } \n  ...\n}\n```\n## 添加动画\n在需要运动的元素上面增加类名 **ani** ，和其他的类似插件相同，Swiper Animate需要指定几个参数：\n+ swiper-animate-effect：切换效果，例如 fadeInUp \n+ swiper-animate-duration：可选，动画持续时间（单位秒），例如 0.5s\n+ swiper-animate-delay：可选，动画延迟时间（单位秒），例如 0.3s\n```\n<p class=\"ani\" swiper-animate-effect=\"fadeInUp\" swiper-animate-duration=\"0.5s\" swiper-animate-delay=\"0.3s\">这个元素会在延时0.3s之后执行fadeInUp动画，整个动画持续0.5s</p>\n```\n## 添加自定义动画\n事实上，这款插件不仅支持animate.css动画，也支持自定义的动画。只需要你自己定义动画，然后将`swiper-animate-effect`设置成你的动画名就可以了。\n> 小技巧: 你可以给自己的动画定义特殊的类名，来规定动画的其他参数。\n```\n<!-- my_ani.css -->\n.my_ani{\n    animation-timing-function: linear;\n}\n@keyframes my_ani {\n  from {\n    opacity: 0\n  }\n  to{\n    opacity: 1\n  }\n}\n\n\nimport \"my_ani.css\"\n<p class=\"ani my_ani\" swiper-animate-effect=\"my_ani\" swiper-animate-duration=\"1s\" swiper-animate-delay=\"0\">这个元素会在一秒之内改变透明度，并且因为增加了my_ani类名。该动画将以匀速执行</p>\n```\n\n","source":"_posts/swiper-animate的使用.md","raw":"title: swiper-animate的使用\ntags: [carousel,animate]\ndate: 2018-02-03 17:39:52\ncategories: [swiper]\ndescription: 使用swiper-animate创建自己的动画\n---\n使用swiper创建动画时，有时需要制作一些css的动画丰富你的网页。swiper提供了快速制作css动画效果的小插件，适用于所有版本swiper。\n> **该插件不适用于loop模式**\n## 引用 [swiper.animate.min.js](https://pan.baidu.com/s/1i5U4jcD) 和 [animate.css](https://cdn.bootcss.com/animate.css/3.5.2/animate.min.css)\n```\n//  使用script引入\n<head>\n    ...\n    <link rel=\"stylesheet\" href=\"swiper.min.css\">\n    <link rel=\"stylesheet\" href=\"animate.min.css\">\n    <script src=\"swiper.min.js\"></script>\n    <script src=\"swiper.animate.min.js\"></script>\n    ...\n</head>\n\n//  使用模块引入\nimport swiper from \"vue-awesome-swiper\"\nimport \"swiper/dist/css/swiper.css\"\nimport \"animate.css\"\nimport import {swiperAnimateCache, swiperAnimate, clearSwiperAnimate} from 'swiper-animate-cn'\n```\n## 在swiper配置项中加入以下内容\n```\n// swiper4.x\nswiperOptions = {\n  ...\n  on:{\n    init: function(){\n      swiperAnimateCache(this); //隐藏动画元素 \n      swiperAnimate(this); //初始化完成开始动画\n    }, \n    slideChangeTransitionEnd: function(){ \n      swiperAnimate(this); //每个slide切换结束时也运行当前slide动画\n    } \n  }\n  ...\n}\n\n// swiper3.x、swiper2.x\nswiperOptions = {\n  ...\n  onInit: function(swiper){ //Swiper2.x的初始化是onFirstInit\n    swiperAnimateCache(swiper); //隐藏动画元素 \n    swiperAnimate(swiper); //初始化完成开始动画\n  }, \n  onSlideChangeEnd: function(swiper){ \n    swiperAnimate(swiper); //每个slide切换结束时也运行当前slide动画\n  } \n  ...\n}\n```\n## 添加动画\n在需要运动的元素上面增加类名 **ani** ，和其他的类似插件相同，Swiper Animate需要指定几个参数：\n+ swiper-animate-effect：切换效果，例如 fadeInUp \n+ swiper-animate-duration：可选，动画持续时间（单位秒），例如 0.5s\n+ swiper-animate-delay：可选，动画延迟时间（单位秒），例如 0.3s\n```\n<p class=\"ani\" swiper-animate-effect=\"fadeInUp\" swiper-animate-duration=\"0.5s\" swiper-animate-delay=\"0.3s\">这个元素会在延时0.3s之后执行fadeInUp动画，整个动画持续0.5s</p>\n```\n## 添加自定义动画\n事实上，这款插件不仅支持animate.css动画，也支持自定义的动画。只需要你自己定义动画，然后将`swiper-animate-effect`设置成你的动画名就可以了。\n> 小技巧: 你可以给自己的动画定义特殊的类名，来规定动画的其他参数。\n```\n<!-- my_ani.css -->\n.my_ani{\n    animation-timing-function: linear;\n}\n@keyframes my_ani {\n  from {\n    opacity: 0\n  }\n  to{\n    opacity: 1\n  }\n}\n\n\nimport \"my_ani.css\"\n<p class=\"ani my_ani\" swiper-animate-effect=\"my_ani\" swiper-animate-duration=\"1s\" swiper-animate-delay=\"0\">这个元素会在一秒之内改变透明度，并且因为增加了my_ani类名。该动画将以匀速执行</p>\n```\n\n","slug":"swiper-animate的使用","published":1,"updated":"2019-09-29T11:22:34.499Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck3jm8gvx000oz0btw9w3w7zw","content":"<p>使用swiper创建动画时，有时需要制作一些css的动画丰富你的网页。swiper提供了快速制作css动画效果的小插件，适用于所有版本swiper。</p>\n<blockquote>\n<p><strong>该插件不适用于loop模式</strong></p>\n</blockquote>\n<h2 id=\"引用-swiper-animate-min-js-和-animate-css\"><a href=\"#引用-swiper-animate-min-js-和-animate-css\" class=\"headerlink\" title=\"引用 swiper.animate.min.js 和 animate.css\"></a>引用 <a href=\"https://pan.baidu.com/s/1i5U4jcD\" target=\"_blank\" rel=\"noopener\">swiper.animate.min.js</a> 和 <a href=\"https://cdn.bootcss.com/animate.css/3.5.2/animate.min.css\" target=\"_blank\" rel=\"noopener\">animate.css</a></h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">//  使用script引入</span><br><span class=\"line\">&lt;head&gt;</span><br><span class=\"line\">    ...</span><br><span class=\"line\">    &lt;link rel=&quot;stylesheet&quot; href=&quot;swiper.min.css&quot;&gt;</span><br><span class=\"line\">    &lt;link rel=&quot;stylesheet&quot; href=&quot;animate.min.css&quot;&gt;</span><br><span class=\"line\">    &lt;script src=&quot;swiper.min.js&quot;&gt;&lt;/script&gt;</span><br><span class=\"line\">    &lt;script src=&quot;swiper.animate.min.js&quot;&gt;&lt;/script&gt;</span><br><span class=\"line\">    ...</span><br><span class=\"line\">&lt;/head&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">//  使用模块引入</span><br><span class=\"line\">import swiper from &quot;vue-awesome-swiper&quot;</span><br><span class=\"line\">import &quot;swiper/dist/css/swiper.css&quot;</span><br><span class=\"line\">import &quot;animate.css&quot;</span><br><span class=\"line\">import import &#123;swiperAnimateCache, swiperAnimate, clearSwiperAnimate&#125; from &apos;swiper-animate-cn&apos;</span><br></pre></td></tr></table></figure>\n<h2 id=\"在swiper配置项中加入以下内容\"><a href=\"#在swiper配置项中加入以下内容\" class=\"headerlink\" title=\"在swiper配置项中加入以下内容\"></a>在swiper配置项中加入以下内容</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">// swiper4.x</span><br><span class=\"line\">swiperOptions = &#123;</span><br><span class=\"line\">  ...</span><br><span class=\"line\">  on:&#123;</span><br><span class=\"line\">    init: function()&#123;</span><br><span class=\"line\">      swiperAnimateCache(this); //隐藏动画元素 </span><br><span class=\"line\">      swiperAnimate(this); //初始化完成开始动画</span><br><span class=\"line\">    &#125;, </span><br><span class=\"line\">    slideChangeTransitionEnd: function()&#123; </span><br><span class=\"line\">      swiperAnimate(this); //每个slide切换结束时也运行当前slide动画</span><br><span class=\"line\">    &#125; </span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  ...</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">// swiper3.x、swiper2.x</span><br><span class=\"line\">swiperOptions = &#123;</span><br><span class=\"line\">  ...</span><br><span class=\"line\">  onInit: function(swiper)&#123; //Swiper2.x的初始化是onFirstInit</span><br><span class=\"line\">    swiperAnimateCache(swiper); //隐藏动画元素 </span><br><span class=\"line\">    swiperAnimate(swiper); //初始化完成开始动画</span><br><span class=\"line\">  &#125;, </span><br><span class=\"line\">  onSlideChangeEnd: function(swiper)&#123; </span><br><span class=\"line\">    swiperAnimate(swiper); //每个slide切换结束时也运行当前slide动画</span><br><span class=\"line\">  &#125; </span><br><span class=\"line\">  ...</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"添加动画\"><a href=\"#添加动画\" class=\"headerlink\" title=\"添加动画\"></a>添加动画</h2><p>在需要运动的元素上面增加类名 <strong>ani</strong> ，和其他的类似插件相同，Swiper Animate需要指定几个参数：</p>\n<ul>\n<li>swiper-animate-effect：切换效果，例如 fadeInUp </li>\n<li>swiper-animate-duration：可选，动画持续时间（单位秒），例如 0.5s</li>\n<li>swiper-animate-delay：可选，动画延迟时间（单位秒），例如 0.3s<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;p class=&quot;ani&quot; swiper-animate-effect=&quot;fadeInUp&quot; swiper-animate-duration=&quot;0.5s&quot; swiper-animate-delay=&quot;0.3s&quot;&gt;这个元素会在延时0.3s之后执行fadeInUp动画，整个动画持续0.5s&lt;/p&gt;</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<h2 id=\"添加自定义动画\"><a href=\"#添加自定义动画\" class=\"headerlink\" title=\"添加自定义动画\"></a>添加自定义动画</h2><p>事实上，这款插件不仅支持animate.css动画，也支持自定义的动画。只需要你自己定义动画，然后将<code>swiper-animate-effect</code>设置成你的动画名就可以了。</p>\n<blockquote>\n<p>小技巧: 你可以给自己的动画定义特殊的类名，来规定动画的其他参数。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;!-- my_ani.css --&gt;</span><br><span class=\"line\">.my_ani&#123;</span><br><span class=\"line\">    animation-timing-function: linear;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">@keyframes my_ani &#123;</span><br><span class=\"line\">  from &#123;</span><br><span class=\"line\">    opacity: 0</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  to&#123;</span><br><span class=\"line\">    opacity: 1</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">import &quot;my_ani.css&quot;</span><br><span class=\"line\">&lt;p class=&quot;ani my_ani&quot; swiper-animate-effect=&quot;my_ani&quot; swiper-animate-duration=&quot;1s&quot; swiper-animate-delay=&quot;0&quot;&gt;这个元素会在一秒之内改变透明度，并且因为增加了my_ani类名。该动画将以匀速执行&lt;/p&gt;</span><br></pre></td></tr></table></figure></p>\n</blockquote>\n","site":{"data":{}},"excerpt":"","more":"<p>使用swiper创建动画时，有时需要制作一些css的动画丰富你的网页。swiper提供了快速制作css动画效果的小插件，适用于所有版本swiper。</p>\n<blockquote>\n<p><strong>该插件不适用于loop模式</strong></p>\n</blockquote>\n<h2 id=\"引用-swiper-animate-min-js-和-animate-css\"><a href=\"#引用-swiper-animate-min-js-和-animate-css\" class=\"headerlink\" title=\"引用 swiper.animate.min.js 和 animate.css\"></a>引用 <a href=\"https://pan.baidu.com/s/1i5U4jcD\" target=\"_blank\" rel=\"noopener\">swiper.animate.min.js</a> 和 <a href=\"https://cdn.bootcss.com/animate.css/3.5.2/animate.min.css\" target=\"_blank\" rel=\"noopener\">animate.css</a></h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">//  使用script引入</span><br><span class=\"line\">&lt;head&gt;</span><br><span class=\"line\">    ...</span><br><span class=\"line\">    &lt;link rel=&quot;stylesheet&quot; href=&quot;swiper.min.css&quot;&gt;</span><br><span class=\"line\">    &lt;link rel=&quot;stylesheet&quot; href=&quot;animate.min.css&quot;&gt;</span><br><span class=\"line\">    &lt;script src=&quot;swiper.min.js&quot;&gt;&lt;/script&gt;</span><br><span class=\"line\">    &lt;script src=&quot;swiper.animate.min.js&quot;&gt;&lt;/script&gt;</span><br><span class=\"line\">    ...</span><br><span class=\"line\">&lt;/head&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">//  使用模块引入</span><br><span class=\"line\">import swiper from &quot;vue-awesome-swiper&quot;</span><br><span class=\"line\">import &quot;swiper/dist/css/swiper.css&quot;</span><br><span class=\"line\">import &quot;animate.css&quot;</span><br><span class=\"line\">import import &#123;swiperAnimateCache, swiperAnimate, clearSwiperAnimate&#125; from &apos;swiper-animate-cn&apos;</span><br></pre></td></tr></table></figure>\n<h2 id=\"在swiper配置项中加入以下内容\"><a href=\"#在swiper配置项中加入以下内容\" class=\"headerlink\" title=\"在swiper配置项中加入以下内容\"></a>在swiper配置项中加入以下内容</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">// swiper4.x</span><br><span class=\"line\">swiperOptions = &#123;</span><br><span class=\"line\">  ...</span><br><span class=\"line\">  on:&#123;</span><br><span class=\"line\">    init: function()&#123;</span><br><span class=\"line\">      swiperAnimateCache(this); //隐藏动画元素 </span><br><span class=\"line\">      swiperAnimate(this); //初始化完成开始动画</span><br><span class=\"line\">    &#125;, </span><br><span class=\"line\">    slideChangeTransitionEnd: function()&#123; </span><br><span class=\"line\">      swiperAnimate(this); //每个slide切换结束时也运行当前slide动画</span><br><span class=\"line\">    &#125; </span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  ...</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">// swiper3.x、swiper2.x</span><br><span class=\"line\">swiperOptions = &#123;</span><br><span class=\"line\">  ...</span><br><span class=\"line\">  onInit: function(swiper)&#123; //Swiper2.x的初始化是onFirstInit</span><br><span class=\"line\">    swiperAnimateCache(swiper); //隐藏动画元素 </span><br><span class=\"line\">    swiperAnimate(swiper); //初始化完成开始动画</span><br><span class=\"line\">  &#125;, </span><br><span class=\"line\">  onSlideChangeEnd: function(swiper)&#123; </span><br><span class=\"line\">    swiperAnimate(swiper); //每个slide切换结束时也运行当前slide动画</span><br><span class=\"line\">  &#125; </span><br><span class=\"line\">  ...</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"添加动画\"><a href=\"#添加动画\" class=\"headerlink\" title=\"添加动画\"></a>添加动画</h2><p>在需要运动的元素上面增加类名 <strong>ani</strong> ，和其他的类似插件相同，Swiper Animate需要指定几个参数：</p>\n<ul>\n<li>swiper-animate-effect：切换效果，例如 fadeInUp </li>\n<li>swiper-animate-duration：可选，动画持续时间（单位秒），例如 0.5s</li>\n<li>swiper-animate-delay：可选，动画延迟时间（单位秒），例如 0.3s<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;p class=&quot;ani&quot; swiper-animate-effect=&quot;fadeInUp&quot; swiper-animate-duration=&quot;0.5s&quot; swiper-animate-delay=&quot;0.3s&quot;&gt;这个元素会在延时0.3s之后执行fadeInUp动画，整个动画持续0.5s&lt;/p&gt;</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<h2 id=\"添加自定义动画\"><a href=\"#添加自定义动画\" class=\"headerlink\" title=\"添加自定义动画\"></a>添加自定义动画</h2><p>事实上，这款插件不仅支持animate.css动画，也支持自定义的动画。只需要你自己定义动画，然后将<code>swiper-animate-effect</code>设置成你的动画名就可以了。</p>\n<blockquote>\n<p>小技巧: 你可以给自己的动画定义特殊的类名，来规定动画的其他参数。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;!-- my_ani.css --&gt;</span><br><span class=\"line\">.my_ani&#123;</span><br><span class=\"line\">    animation-timing-function: linear;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">@keyframes my_ani &#123;</span><br><span class=\"line\">  from &#123;</span><br><span class=\"line\">    opacity: 0</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  to&#123;</span><br><span class=\"line\">    opacity: 1</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">import &quot;my_ani.css&quot;</span><br><span class=\"line\">&lt;p class=&quot;ani my_ani&quot; swiper-animate-effect=&quot;my_ani&quot; swiper-animate-duration=&quot;1s&quot; swiper-animate-delay=&quot;0&quot;&gt;这个元素会在一秒之内改变透明度，并且因为增加了my_ani类名。该动画将以匀速执行&lt;/p&gt;</span><br></pre></td></tr></table></figure></p>\n</blockquote>\n"},{"title":"vue-awesome-swiper使用","date":"2017-10-17T02:27:19.000Z","description":"关于vue + swiper的使用","_content":"[vue-awesome-swiper](https://www.npmjs.com/package/vue-awesome-swiper)是一款基于vue2.0开发的轮播插件，支持所有swiper3的API及配置，非常强大。于是兴高采烈的粘贴官方代码之后发现根本没用。每一个swiper-slide竖直排列，导致布局全乱。个人觉得这是官网的一个小失误。其实解决很简单，是因为官网没有加载css文件导致布局乱掉，css文件是在另一个swiper包里，需要单独引用（template.vue）：\n```\nimport \"swiper/dist/css/swiper.css\"     or      require(\"swiper/dist/css/swiper\")\n```\n引用之后马上就好了。附源码\n>步骤一 : 安装插件\n```\nnpm i vue-awesome-swiper -S\n```\n>步骤二 : 全局引用（main.js）\n```\nimport Vue from 'vue'\nimport swiper from 'vue-awesome-swiper'\nVue.use(swiper)\n```\n>步骤三 : 组件使用（template.vue）\n```\n<template>\n  <div>  \n    <swiper :options=\"swiperOption\"  ref=\"mySwiper\">  \n      <swiper-slide v-for=\"0 in 7\">  \n        <img src=\"xxx.jpg\" />\n      </swiper-slide>  \n    </swiper>  \n    </div>  \n</template>  \n\n<script>\n  import { swiper, swiperSlide } from 'vue-awesome-swiper'\n  import 'swiper/dist/css/swiper.css'   //只是加入了一行代码引入css文件\n  export default {\n    components: { swiper, swiperSlide },\n    data () {\n      return {\n        notNextTick: true,\n        swiperOption: {\n                //支持所有swiper3配置或者参考官方教程\n                ...\n        }\n      }\n    },\n    computed: {\n      swiper () {\n        return this.$refs.mySwiper.swiper\n      }\n    },\n    mounted () {\n      this.swiper.slideTo(1, 1000,false)\n    }\n  }\n</script>\n<style scoped>\n\t...\n</style>\n```\n绝大部分是官方示例源码，具体使用参考[官方教程](https://www.npmjs.com/package/vue-awesome-swiper)，API和配置参考[swiper3官网](http://www.swiper.com.cn/api/index.html)。","source":"_posts/vue-awesome-swiper使用.md","raw":"title: vue-awesome-swiper使用\ntags: [vue,carousel]\ndate: 2017-10-17 10:27:19\ncategories: [swiper]\ndescription: 关于vue + swiper的使用\n---\n[vue-awesome-swiper](https://www.npmjs.com/package/vue-awesome-swiper)是一款基于vue2.0开发的轮播插件，支持所有swiper3的API及配置，非常强大。于是兴高采烈的粘贴官方代码之后发现根本没用。每一个swiper-slide竖直排列，导致布局全乱。个人觉得这是官网的一个小失误。其实解决很简单，是因为官网没有加载css文件导致布局乱掉，css文件是在另一个swiper包里，需要单独引用（template.vue）：\n```\nimport \"swiper/dist/css/swiper.css\"     or      require(\"swiper/dist/css/swiper\")\n```\n引用之后马上就好了。附源码\n>步骤一 : 安装插件\n```\nnpm i vue-awesome-swiper -S\n```\n>步骤二 : 全局引用（main.js）\n```\nimport Vue from 'vue'\nimport swiper from 'vue-awesome-swiper'\nVue.use(swiper)\n```\n>步骤三 : 组件使用（template.vue）\n```\n<template>\n  <div>  \n    <swiper :options=\"swiperOption\"  ref=\"mySwiper\">  \n      <swiper-slide v-for=\"0 in 7\">  \n        <img src=\"xxx.jpg\" />\n      </swiper-slide>  \n    </swiper>  \n    </div>  \n</template>  \n\n<script>\n  import { swiper, swiperSlide } from 'vue-awesome-swiper'\n  import 'swiper/dist/css/swiper.css'   //只是加入了一行代码引入css文件\n  export default {\n    components: { swiper, swiperSlide },\n    data () {\n      return {\n        notNextTick: true,\n        swiperOption: {\n                //支持所有swiper3配置或者参考官方教程\n                ...\n        }\n      }\n    },\n    computed: {\n      swiper () {\n        return this.$refs.mySwiper.swiper\n      }\n    },\n    mounted () {\n      this.swiper.slideTo(1, 1000,false)\n    }\n  }\n</script>\n<style scoped>\n\t...\n</style>\n```\n绝大部分是官方示例源码，具体使用参考[官方教程](https://www.npmjs.com/package/vue-awesome-swiper)，API和配置参考[swiper3官网](http://www.swiper.com.cn/api/index.html)。","slug":"vue-awesome-swiper使用","published":1,"updated":"2019-09-29T11:22:34.499Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck3jm8gvx000pz0bt0r5i2xxy","content":"<p><a href=\"https://www.npmjs.com/package/vue-awesome-swiper\" target=\"_blank\" rel=\"noopener\">vue-awesome-swiper</a>是一款基于vue2.0开发的轮播插件，支持所有swiper3的API及配置，非常强大。于是兴高采烈的粘贴官方代码之后发现根本没用。每一个swiper-slide竖直排列，导致布局全乱。个人觉得这是官网的一个小失误。其实解决很简单，是因为官网没有加载css文件导致布局乱掉，css文件是在另一个swiper包里，需要单独引用（template.vue）：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">import &quot;swiper/dist/css/swiper.css&quot;     or      require(&quot;swiper/dist/css/swiper&quot;)</span><br></pre></td></tr></table></figure></p>\n<p>引用之后马上就好了。附源码</p>\n<blockquote>\n<p>步骤一 : 安装插件<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm i vue-awesome-swiper -S</span><br></pre></td></tr></table></figure></p>\n</blockquote>\n<blockquote>\n<p>步骤二 : 全局引用（main.js）<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">import Vue from &apos;vue&apos;</span><br><span class=\"line\">import swiper from &apos;vue-awesome-swiper&apos;</span><br><span class=\"line\">Vue.use(swiper)</span><br></pre></td></tr></table></figure></p>\n</blockquote>\n<blockquote>\n<p>步骤三 : 组件使用（template.vue）<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;template&gt;</span><br><span class=\"line\">  &lt;div&gt;  </span><br><span class=\"line\">    &lt;swiper :options=&quot;swiperOption&quot;  ref=&quot;mySwiper&quot;&gt;  </span><br><span class=\"line\">      &lt;swiper-slide v-for=&quot;0 in 7&quot;&gt;  </span><br><span class=\"line\">        &lt;img src=&quot;xxx.jpg&quot; /&gt;</span><br><span class=\"line\">      &lt;/swiper-slide&gt;  </span><br><span class=\"line\">    &lt;/swiper&gt;  </span><br><span class=\"line\">    &lt;/div&gt;  </span><br><span class=\"line\">&lt;/template&gt;  </span><br><span class=\"line\"></span><br><span class=\"line\">&lt;script&gt;</span><br><span class=\"line\">  import &#123; swiper, swiperSlide &#125; from &apos;vue-awesome-swiper&apos;</span><br><span class=\"line\">  import &apos;swiper/dist/css/swiper.css&apos;   //只是加入了一行代码引入css文件</span><br><span class=\"line\">  export default &#123;</span><br><span class=\"line\">    components: &#123; swiper, swiperSlide &#125;,</span><br><span class=\"line\">    data () &#123;</span><br><span class=\"line\">      return &#123;</span><br><span class=\"line\">        notNextTick: true,</span><br><span class=\"line\">        swiperOption: &#123;</span><br><span class=\"line\">                //支持所有swiper3配置或者参考官方教程</span><br><span class=\"line\">                ...</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    computed: &#123;</span><br><span class=\"line\">      swiper () &#123;</span><br><span class=\"line\">        return this.$refs.mySwiper.swiper</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    mounted () &#123;</span><br><span class=\"line\">      this.swiper.slideTo(1, 1000,false)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&lt;/script&gt;</span><br><span class=\"line\">&lt;style scoped&gt;</span><br><span class=\"line\">\t...</span><br><span class=\"line\">&lt;/style&gt;</span><br></pre></td></tr></table></figure></p>\n</blockquote>\n<p>绝大部分是官方示例源码，具体使用参考<a href=\"https://www.npmjs.com/package/vue-awesome-swiper\" target=\"_blank\" rel=\"noopener\">官方教程</a>，API和配置参考<a href=\"http://www.swiper.com.cn/api/index.html\" target=\"_blank\" rel=\"noopener\">swiper3官网</a>。</p>\n","site":{"data":{}},"excerpt":"","more":"<p><a href=\"https://www.npmjs.com/package/vue-awesome-swiper\" target=\"_blank\" rel=\"noopener\">vue-awesome-swiper</a>是一款基于vue2.0开发的轮播插件，支持所有swiper3的API及配置，非常强大。于是兴高采烈的粘贴官方代码之后发现根本没用。每一个swiper-slide竖直排列，导致布局全乱。个人觉得这是官网的一个小失误。其实解决很简单，是因为官网没有加载css文件导致布局乱掉，css文件是在另一个swiper包里，需要单独引用（template.vue）：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">import &quot;swiper/dist/css/swiper.css&quot;     or      require(&quot;swiper/dist/css/swiper&quot;)</span><br></pre></td></tr></table></figure></p>\n<p>引用之后马上就好了。附源码</p>\n<blockquote>\n<p>步骤一 : 安装插件<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm i vue-awesome-swiper -S</span><br></pre></td></tr></table></figure></p>\n</blockquote>\n<blockquote>\n<p>步骤二 : 全局引用（main.js）<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">import Vue from &apos;vue&apos;</span><br><span class=\"line\">import swiper from &apos;vue-awesome-swiper&apos;</span><br><span class=\"line\">Vue.use(swiper)</span><br></pre></td></tr></table></figure></p>\n</blockquote>\n<blockquote>\n<p>步骤三 : 组件使用（template.vue）<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;template&gt;</span><br><span class=\"line\">  &lt;div&gt;  </span><br><span class=\"line\">    &lt;swiper :options=&quot;swiperOption&quot;  ref=&quot;mySwiper&quot;&gt;  </span><br><span class=\"line\">      &lt;swiper-slide v-for=&quot;0 in 7&quot;&gt;  </span><br><span class=\"line\">        &lt;img src=&quot;xxx.jpg&quot; /&gt;</span><br><span class=\"line\">      &lt;/swiper-slide&gt;  </span><br><span class=\"line\">    &lt;/swiper&gt;  </span><br><span class=\"line\">    &lt;/div&gt;  </span><br><span class=\"line\">&lt;/template&gt;  </span><br><span class=\"line\"></span><br><span class=\"line\">&lt;script&gt;</span><br><span class=\"line\">  import &#123; swiper, swiperSlide &#125; from &apos;vue-awesome-swiper&apos;</span><br><span class=\"line\">  import &apos;swiper/dist/css/swiper.css&apos;   //只是加入了一行代码引入css文件</span><br><span class=\"line\">  export default &#123;</span><br><span class=\"line\">    components: &#123; swiper, swiperSlide &#125;,</span><br><span class=\"line\">    data () &#123;</span><br><span class=\"line\">      return &#123;</span><br><span class=\"line\">        notNextTick: true,</span><br><span class=\"line\">        swiperOption: &#123;</span><br><span class=\"line\">                //支持所有swiper3配置或者参考官方教程</span><br><span class=\"line\">                ...</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    computed: &#123;</span><br><span class=\"line\">      swiper () &#123;</span><br><span class=\"line\">        return this.$refs.mySwiper.swiper</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    mounted () &#123;</span><br><span class=\"line\">      this.swiper.slideTo(1, 1000,false)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&lt;/script&gt;</span><br><span class=\"line\">&lt;style scoped&gt;</span><br><span class=\"line\">\t...</span><br><span class=\"line\">&lt;/style&gt;</span><br></pre></td></tr></table></figure></p>\n</blockquote>\n<p>绝大部分是官方示例源码，具体使用参考<a href=\"https://www.npmjs.com/package/vue-awesome-swiper\" target=\"_blank\" rel=\"noopener\">官方教程</a>，API和配置参考<a href=\"http://www.swiper.com.cn/api/index.html\" target=\"_blank\" rel=\"noopener\">swiper3官网</a>。</p>\n"},{"title":"vue-cli3.x项目图片压缩","date":"2019-05-07T09:04:27.000Z","description":"vue-cli3.x修改webpack配置，添加压缩图片功能","_content":"\n## 介绍\n\n[image-webpack-loader](https://www.npmjs.com/package/image-webpack-loader)是基于webpack的图像加载器模块，使用了[imagemin](https://github.com/kevva/imagemin)压缩PNG，JPEG，GIF，SVG和WEBP图像。\n## 安装image-webpack-loader\n```npm\nnpm i -D image-webpack-loader\n```\n## vue-cli3.x配置方法\n这个loader在图片解析的过程中生效，并且最好放在最开始执行，这样的话可以做到先压缩图片，然后再用url-loader处理小图片，可以有效地也就是说需要跟在图片的loader之后进行。也就是说在原本的webpack.config.js中应该是这样的：\n```\n{\n\ttest: /\\.(png|jpe?g|gif|webp)(\\?.*)?$/,\n\tuse: [\n\t\t{\n\t\t\tloader: 'url-loader',\n\t\t\toptions: {\n\t\t\t\t// ...\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\tloader: 'image-webpack-loader',\n\t\t\toptions:{\n\t\t\t\tbypassOnDebug: true\n\t\t\t}\n\t\t}\n\t]\n}\n```\n因此对应的，通过运行 `vue inspect` 我们找到处理图片的部分，知道他的loader规则叫images，我们只需要修改这部分规则就行了。\n```js\n// vue.config.js\n\nmodule.exports = {\n\tchainWebpack: config => {\n\t\t// 通过vue inspect找到对应的规则\n\t\tconst imagesRule = config.module.rule('images')\n\t\t// 删除原本的规则\n\t\timagesRule.uses.clear()\n\t\t// 为images添加想要的规则,首先把原有的规则恢复\n\t\timagesRule\n\t\t\t.use('url-loader')\n\t\t\t.loader('url-loader')\n\t\t\t.options({\n\t\t\t\tlimit: 4096,\n  \t\t\t\tfallback: {\n    \t\t\t\tloader: 'file-loader',\n    \t\t\t\toptions: {\n      \t\t\t\t\tname: 'img/[name].[hash:8].[ext]'\n    \t\t\t\t}\n  \t\t\t\t}\n\t\t\t})\n\n\n\t\t// 再给images添加压缩图片的loader\n\t\timagesRule\n  \t\t\t.use('image-webpack-loader')\n  \t\t\t.loader('image-webpack-loader')\n  \t\t\t.options({ bypassOnDebug: true })\n\t}\n}\n```\n这样就可以了。但需要注意几个问题：\n+ 插件本身有更丰富的options，但因为~~我懒得写~~大部分情况下不需要修改，所以就没有写，更具体的配置可以去[官网](https://github.com/tcoopman/image-webpack-loader#readme)看看\n+ 图片压缩是非常耗时的，因此建议只在生产环境下使用。","source":"_posts/vue-cli3-x项目图片压缩.md","raw":"title: vue-cli3.x项目图片压缩\ntags: [webpack, vue, compress]\ndate: 2019-05-07 17:04:27\ncategories: [webpack, vue, compress]\ndescription: vue-cli3.x修改webpack配置，添加压缩图片功能\n---\n\n## 介绍\n\n[image-webpack-loader](https://www.npmjs.com/package/image-webpack-loader)是基于webpack的图像加载器模块，使用了[imagemin](https://github.com/kevva/imagemin)压缩PNG，JPEG，GIF，SVG和WEBP图像。\n## 安装image-webpack-loader\n```npm\nnpm i -D image-webpack-loader\n```\n## vue-cli3.x配置方法\n这个loader在图片解析的过程中生效，并且最好放在最开始执行，这样的话可以做到先压缩图片，然后再用url-loader处理小图片，可以有效地也就是说需要跟在图片的loader之后进行。也就是说在原本的webpack.config.js中应该是这样的：\n```\n{\n\ttest: /\\.(png|jpe?g|gif|webp)(\\?.*)?$/,\n\tuse: [\n\t\t{\n\t\t\tloader: 'url-loader',\n\t\t\toptions: {\n\t\t\t\t// ...\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\tloader: 'image-webpack-loader',\n\t\t\toptions:{\n\t\t\t\tbypassOnDebug: true\n\t\t\t}\n\t\t}\n\t]\n}\n```\n因此对应的，通过运行 `vue inspect` 我们找到处理图片的部分，知道他的loader规则叫images，我们只需要修改这部分规则就行了。\n```js\n// vue.config.js\n\nmodule.exports = {\n\tchainWebpack: config => {\n\t\t// 通过vue inspect找到对应的规则\n\t\tconst imagesRule = config.module.rule('images')\n\t\t// 删除原本的规则\n\t\timagesRule.uses.clear()\n\t\t// 为images添加想要的规则,首先把原有的规则恢复\n\t\timagesRule\n\t\t\t.use('url-loader')\n\t\t\t.loader('url-loader')\n\t\t\t.options({\n\t\t\t\tlimit: 4096,\n  \t\t\t\tfallback: {\n    \t\t\t\tloader: 'file-loader',\n    \t\t\t\toptions: {\n      \t\t\t\t\tname: 'img/[name].[hash:8].[ext]'\n    \t\t\t\t}\n  \t\t\t\t}\n\t\t\t})\n\n\n\t\t// 再给images添加压缩图片的loader\n\t\timagesRule\n  \t\t\t.use('image-webpack-loader')\n  \t\t\t.loader('image-webpack-loader')\n  \t\t\t.options({ bypassOnDebug: true })\n\t}\n}\n```\n这样就可以了。但需要注意几个问题：\n+ 插件本身有更丰富的options，但因为~~我懒得写~~大部分情况下不需要修改，所以就没有写，更具体的配置可以去[官网](https://github.com/tcoopman/image-webpack-loader#readme)看看\n+ 图片压缩是非常耗时的，因此建议只在生产环境下使用。","slug":"vue-cli3-x项目图片压缩","published":1,"updated":"2019-11-29T01:18:38.105Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck3jm8gvy000tz0bt3v2274x2","content":"<h2 id=\"介绍\"><a href=\"#介绍\" class=\"headerlink\" title=\"介绍\"></a>介绍</h2><p><a href=\"https://www.npmjs.com/package/image-webpack-loader\" target=\"_blank\" rel=\"noopener\">image-webpack-loader</a>是基于webpack的图像加载器模块，使用了<a href=\"https://github.com/kevva/imagemin\" target=\"_blank\" rel=\"noopener\">imagemin</a>压缩PNG，JPEG，GIF，SVG和WEBP图像。</p>\n<h2 id=\"安装image-webpack-loader\"><a href=\"#安装image-webpack-loader\" class=\"headerlink\" title=\"安装image-webpack-loader\"></a>安装image-webpack-loader</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm i -D image-webpack-loader</span><br></pre></td></tr></table></figure>\n<h2 id=\"vue-cli3-x配置方法\"><a href=\"#vue-cli3-x配置方法\" class=\"headerlink\" title=\"vue-cli3.x配置方法\"></a>vue-cli3.x配置方法</h2><p>这个loader在图片解析的过程中生效，并且最好放在最开始执行，这样的话可以做到先压缩图片，然后再用url-loader处理小图片，可以有效地也就是说需要跟在图片的loader之后进行。也就是说在原本的webpack.config.js中应该是这样的：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">\ttest: /\\.(png|jpe?g|gif|webp)(\\?.*)?$/,</span><br><span class=\"line\">\tuse: [</span><br><span class=\"line\">\t\t&#123;</span><br><span class=\"line\">\t\t\tloader: &apos;url-loader&apos;,</span><br><span class=\"line\">\t\t\toptions: &#123;</span><br><span class=\"line\">\t\t\t\t// ...</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t&#125;,</span><br><span class=\"line\">\t\t&#123;</span><br><span class=\"line\">\t\t\tloader: &apos;image-webpack-loader&apos;,</span><br><span class=\"line\">\t\t\toptions:&#123;</span><br><span class=\"line\">\t\t\t\tbypassOnDebug: true</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t]</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>因此对应的，通过运行 <code>vue inspect</code> 我们找到处理图片的部分，知道他的loader规则叫images，我们只需要修改这部分规则就行了。<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// vue.config.js</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">module</span>.exports = &#123;</span><br><span class=\"line\">\tchainWebpack: <span class=\"function\"><span class=\"params\">config</span> =&gt;</span> &#123;</span><br><span class=\"line\">\t\t<span class=\"comment\">// 通过vue inspect找到对应的规则</span></span><br><span class=\"line\">\t\t<span class=\"keyword\">const</span> imagesRule = config.module.rule(<span class=\"string\">'images'</span>)</span><br><span class=\"line\">\t\t<span class=\"comment\">// 删除原本的规则</span></span><br><span class=\"line\">\t\timagesRule.uses.clear()</span><br><span class=\"line\">\t\t<span class=\"comment\">// 为images添加想要的规则,首先把原有的规则恢复</span></span><br><span class=\"line\">\t\timagesRule</span><br><span class=\"line\">\t\t\t.use(<span class=\"string\">'url-loader'</span>)</span><br><span class=\"line\">\t\t\t.loader(<span class=\"string\">'url-loader'</span>)</span><br><span class=\"line\">\t\t\t.options(&#123;</span><br><span class=\"line\">\t\t\t\tlimit: <span class=\"number\">4096</span>,</span><br><span class=\"line\">  \t\t\t\tfallback: &#123;</span><br><span class=\"line\">    \t\t\t\tloader: <span class=\"string\">'file-loader'</span>,</span><br><span class=\"line\">    \t\t\t\toptions: &#123;</span><br><span class=\"line\">      \t\t\t\t\tname: <span class=\"string\">'img/[name].[hash:8].[ext]'</span></span><br><span class=\"line\">    \t\t\t\t&#125;</span><br><span class=\"line\">  \t\t\t\t&#125;</span><br><span class=\"line\">\t\t\t&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">\t\t<span class=\"comment\">// 再给images添加压缩图片的loader</span></span><br><span class=\"line\">\t\timagesRule</span><br><span class=\"line\">  \t\t\t.use(<span class=\"string\">'image-webpack-loader'</span>)</span><br><span class=\"line\">  \t\t\t.loader(<span class=\"string\">'image-webpack-loader'</span>)</span><br><span class=\"line\">  \t\t\t.options(&#123; <span class=\"attr\">bypassOnDebug</span>: <span class=\"literal\">true</span> &#125;)</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>这样就可以了。但需要注意几个问题：</p>\n<ul>\n<li>插件本身有更丰富的options，但因为<del>我懒得写</del>大部分情况下不需要修改，所以就没有写，更具体的配置可以去<a href=\"https://github.com/tcoopman/image-webpack-loader#readme\" target=\"_blank\" rel=\"noopener\">官网</a>看看</li>\n<li>图片压缩是非常耗时的，因此建议只在生产环境下使用。</li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"介绍\"><a href=\"#介绍\" class=\"headerlink\" title=\"介绍\"></a>介绍</h2><p><a href=\"https://www.npmjs.com/package/image-webpack-loader\" target=\"_blank\" rel=\"noopener\">image-webpack-loader</a>是基于webpack的图像加载器模块，使用了<a href=\"https://github.com/kevva/imagemin\" target=\"_blank\" rel=\"noopener\">imagemin</a>压缩PNG，JPEG，GIF，SVG和WEBP图像。</p>\n<h2 id=\"安装image-webpack-loader\"><a href=\"#安装image-webpack-loader\" class=\"headerlink\" title=\"安装image-webpack-loader\"></a>安装image-webpack-loader</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm i -D image-webpack-loader</span><br></pre></td></tr></table></figure>\n<h2 id=\"vue-cli3-x配置方法\"><a href=\"#vue-cli3-x配置方法\" class=\"headerlink\" title=\"vue-cli3.x配置方法\"></a>vue-cli3.x配置方法</h2><p>这个loader在图片解析的过程中生效，并且最好放在最开始执行，这样的话可以做到先压缩图片，然后再用url-loader处理小图片，可以有效地也就是说需要跟在图片的loader之后进行。也就是说在原本的webpack.config.js中应该是这样的：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">\ttest: /\\.(png|jpe?g|gif|webp)(\\?.*)?$/,</span><br><span class=\"line\">\tuse: [</span><br><span class=\"line\">\t\t&#123;</span><br><span class=\"line\">\t\t\tloader: &apos;url-loader&apos;,</span><br><span class=\"line\">\t\t\toptions: &#123;</span><br><span class=\"line\">\t\t\t\t// ...</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t&#125;,</span><br><span class=\"line\">\t\t&#123;</span><br><span class=\"line\">\t\t\tloader: &apos;image-webpack-loader&apos;,</span><br><span class=\"line\">\t\t\toptions:&#123;</span><br><span class=\"line\">\t\t\t\tbypassOnDebug: true</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t]</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>因此对应的，通过运行 <code>vue inspect</code> 我们找到处理图片的部分，知道他的loader规则叫images，我们只需要修改这部分规则就行了。<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// vue.config.js</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">module</span>.exports = &#123;</span><br><span class=\"line\">\tchainWebpack: <span class=\"function\"><span class=\"params\">config</span> =&gt;</span> &#123;</span><br><span class=\"line\">\t\t<span class=\"comment\">// 通过vue inspect找到对应的规则</span></span><br><span class=\"line\">\t\t<span class=\"keyword\">const</span> imagesRule = config.module.rule(<span class=\"string\">'images'</span>)</span><br><span class=\"line\">\t\t<span class=\"comment\">// 删除原本的规则</span></span><br><span class=\"line\">\t\timagesRule.uses.clear()</span><br><span class=\"line\">\t\t<span class=\"comment\">// 为images添加想要的规则,首先把原有的规则恢复</span></span><br><span class=\"line\">\t\timagesRule</span><br><span class=\"line\">\t\t\t.use(<span class=\"string\">'url-loader'</span>)</span><br><span class=\"line\">\t\t\t.loader(<span class=\"string\">'url-loader'</span>)</span><br><span class=\"line\">\t\t\t.options(&#123;</span><br><span class=\"line\">\t\t\t\tlimit: <span class=\"number\">4096</span>,</span><br><span class=\"line\">  \t\t\t\tfallback: &#123;</span><br><span class=\"line\">    \t\t\t\tloader: <span class=\"string\">'file-loader'</span>,</span><br><span class=\"line\">    \t\t\t\toptions: &#123;</span><br><span class=\"line\">      \t\t\t\t\tname: <span class=\"string\">'img/[name].[hash:8].[ext]'</span></span><br><span class=\"line\">    \t\t\t\t&#125;</span><br><span class=\"line\">  \t\t\t\t&#125;</span><br><span class=\"line\">\t\t\t&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">\t\t<span class=\"comment\">// 再给images添加压缩图片的loader</span></span><br><span class=\"line\">\t\timagesRule</span><br><span class=\"line\">  \t\t\t.use(<span class=\"string\">'image-webpack-loader'</span>)</span><br><span class=\"line\">  \t\t\t.loader(<span class=\"string\">'image-webpack-loader'</span>)</span><br><span class=\"line\">  \t\t\t.options(&#123; <span class=\"attr\">bypassOnDebug</span>: <span class=\"literal\">true</span> &#125;)</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>这样就可以了。但需要注意几个问题：</p>\n<ul>\n<li>插件本身有更丰富的options，但因为<del>我懒得写</del>大部分情况下不需要修改，所以就没有写，更具体的配置可以去<a href=\"https://github.com/tcoopman/image-webpack-loader#readme\" target=\"_blank\" rel=\"noopener\">官网</a>看看</li>\n<li>图片压缩是非常耗时的，因此建议只在生产环境下使用。</li>\n</ul>\n"},{"title":"从0开始开发vue单文件项目","date":"2019-04-02T11:44:31.000Z","description":"从0开始自己搭建vue脚手架","_content":"都说软件开发不需要重复造轮子。但不得不说自己造轮子是掌握和巩固知识点最好的办法。这篇文章带大家从0开始自己写一个最简单的vue脚手架。\n\n## 创建项目\n创建一个空文件夹，执行`npm init`，生成一个npm项目。填写一些你认为有用的信息。并在根目录下创建一个index.js文件，作为npm项目的入口。\n## 安装依赖\n### 安装webpack\n首先安装webpack。如果用的是webpack4.x版本，同时还需要安装webpack-cli才行。\n```nodemon\nnpm i -D webpack webpack-cli\n```\n### 管理webpack\n在根目录创建一个webpack.config.js，在这里管理webpack。创建一个src文件夹来管理源码。在src文件夹中创建index.js作为入口文件（其实就是脚手架中的main文件）。参照vue脚手架，我们规定最后打包目录为dist。此时文件的目录结构为\n```\n│  index.js\n│  package.json\n│  webpack.config.js\n│\n│\n└─src\n        index.js\n```\n\n而webpack.config.js的内容为\n```javascript\nconst path = require('path')\n\nmodule.exports = {\n  entry: './src/index.js',\n  output: {\n    path: path.resolve(__dirname, './dist'),\n    filename: 'index.js'\n  }\n}\n```\n为此我们需要安装基本的loader\n+ 编译css的loader和sass本身\n```nodemon\nnpm i -D style-loader css-loader sass-loader node-sass\n```\n+ 编译js的loader\n> 如果是babel8.x,必需要同时安装@babel/core @babel/preset-env\n```nodemon\nnpm i -D babel-loader @babel/core @babel/preset-env\n```\n+ 编译vue的loader\n```nodemon\nnpm i -D vue-loader vue-template-compiler\nnpm i -S vue\n```\n\n把这些加到webpack.config.js里，文件变成了这样\n```javascript\nconst path = require('path')\nconst VueLoaderPlugin = require('vue-loader/lib/plugin')\n\nmodule.exports = {\n  entry: './src/index.js',\n  output: {\n    path: path.resolve(__dirname, './dist'),\n    filename: 'index.js'\n  },\n  module: {\n    rules: [\n      {\n        test: /\\.js$/,\n        use: [\n          {\n            loader: 'babel-loader'\n          }\n        ] \n      },\n      {\n        test: /\\.vue$/,\n        use: [\n          {\n            loader: 'vue-loader'\n          }\n        ]\n      },\n      {\n        test: /\\.(css|scss|sass)$/,\n        use: [\n          {\n            loader: 'style-loader'\n          },\n          {\n            loader: 'css-loader'\n          },\n          {\n            loader: 'sass-loader'\n          }\n        ]\n      }\n    ]\n  },\n  plugins: [new VueLoaderPlugin()]\n}\n```\n\n### 然后向webpack添加开发环境运行的配置\n```nodemon\nnpm i -D clean-webpack-plugin html-webpack-plugin webpack-dev-server\n```\n使用webpack-dev-server来启动开发环境，使用webpack进行打包。在这个操作当中，`html-webpack-plugin`需要一个模板来定义文件的结构，因为我们需要的不是一个空白模板，而希望模板中至少要有一个`<div id=\"app\"></div>`。根据插件，我们还需要在跟目录创建一个public文件夹。里面放的是渲染`html-webpack-plugin`插件的模板。那么现在，整个项目结构变成了这样\n```\n│  index.js\n│  package.json\n│  webpack.config.js\n│\n├─public\n│      index.html\n│\n└─src\n        index.js\n```\n然后向`package.json`添加执行命令\n```json\n{\n  // ...\n  \"scripts\": {\n    \"build\": \"webpack --config webpack.config.js\",\n    \"dev\": \"webpack-dev-server --open\"\n  }\n  // ...\n}\n```\n并且向`webpack.config.json`继续补充\n```js\nconst path = require('path')\nconst HtmlWebpackPlugin = require('html-webpack-plugin');\nconst CleanWebpackPlugin = require('clean-webpack-plugin');\nconst VueLoaderPlugin = require('vue-loader/lib/plugin')\n\nmodule.exports = {\n  entry: './src/index.js',\n  output: {\n    path: path.resolve(__dirname, './dist'),\n    filename: 'index.js'\n  },\n  devServer: {\n    contentBase:  './dist'\n  },\n  module: {\n    rules: [\n      {\n        test: /\\.js$/,\n        use: [\n          {\n            loader: 'babel-loader'\n          }\n        ] \n      },\n      {\n        test: /\\.vue$/,\n        use: [\n          {\n            loader: 'vue-loader'\n          }\n        ]\n      },\n      {\n        test: /\\.(css|scss|sass)$/,\n        use: [\n          {\n            loader: 'style-loader'\n          },\n          {\n            loader: 'css-loader'\n          },\n          {\n            loader: 'sass-loader'\n          }\n        ]\n      }\n    ]\n  },\n  plugins: [\n    new VueLoaderPlugin(),\n    new CleanWebpackPlugin(),\n    new HtmlWebpackPlugin({\n      template: 'public/index.html',\n      title: 'hello, vue_title'\n    })\n  ]\n}\n```\n\n### 创建真正的vue脚手架\n如果你能执行到上面的步骤结束没有出错，那么实际上你的webpack已经没有问题了。虽然看上去是如此的简单。接下来我们只需要把精力放到如何编译vue单文件组件。在src文件夹中创建一个index.vue文件如下\n```vue\n<template>\n  <div>\n    {{msg}}\n  </div>\n</template>\n\n<script>\nexport default {\n  data() {\n    return {\n      msg: 'hello, vue!!!'\n    }\n  }\n}\n</script>\n\n<style lang=\"scss\" scoped>\ndiv {\n  color: red\n}\n</style>\n```\n并编辑同目录中的index.js\n```js\nimport Vue from 'vue'\nimport App from './index.vue'\n\nnew Vue({\n  render: h => h(App)\n}).$mount('#app')\n```\n\n最后，我们的项目长成了这样\n```\n│  index.js\n│  package.json\n│  webpack.config.js\n│\n├─public\n│      index.html\n└─src\n        index.js\n        index.vue\n```\n是不是发现和vue-cli3.x脚手架的结构完全一样？事实上vue-cli3.x就是这个结构来的。只不过它把webpack.config.js安装到了vue-cli-service里，暴露出来vue.config.js来管理。\n## 最后，这个模板的地址[在这里](https://github.com/lost-dream/webpack-demo)。","source":"_posts/从0开始开发vue单文件项目.md","raw":"title: 从0开始开发vue单文件项目\ntags: [vue,webpack]\ndate: 2019-04-02 19:44:31\ncategories: webpack\ndescription: 从0开始自己搭建vue脚手架\n---\n都说软件开发不需要重复造轮子。但不得不说自己造轮子是掌握和巩固知识点最好的办法。这篇文章带大家从0开始自己写一个最简单的vue脚手架。\n\n## 创建项目\n创建一个空文件夹，执行`npm init`，生成一个npm项目。填写一些你认为有用的信息。并在根目录下创建一个index.js文件，作为npm项目的入口。\n## 安装依赖\n### 安装webpack\n首先安装webpack。如果用的是webpack4.x版本，同时还需要安装webpack-cli才行。\n```nodemon\nnpm i -D webpack webpack-cli\n```\n### 管理webpack\n在根目录创建一个webpack.config.js，在这里管理webpack。创建一个src文件夹来管理源码。在src文件夹中创建index.js作为入口文件（其实就是脚手架中的main文件）。参照vue脚手架，我们规定最后打包目录为dist。此时文件的目录结构为\n```\n│  index.js\n│  package.json\n│  webpack.config.js\n│\n│\n└─src\n        index.js\n```\n\n而webpack.config.js的内容为\n```javascript\nconst path = require('path')\n\nmodule.exports = {\n  entry: './src/index.js',\n  output: {\n    path: path.resolve(__dirname, './dist'),\n    filename: 'index.js'\n  }\n}\n```\n为此我们需要安装基本的loader\n+ 编译css的loader和sass本身\n```nodemon\nnpm i -D style-loader css-loader sass-loader node-sass\n```\n+ 编译js的loader\n> 如果是babel8.x,必需要同时安装@babel/core @babel/preset-env\n```nodemon\nnpm i -D babel-loader @babel/core @babel/preset-env\n```\n+ 编译vue的loader\n```nodemon\nnpm i -D vue-loader vue-template-compiler\nnpm i -S vue\n```\n\n把这些加到webpack.config.js里，文件变成了这样\n```javascript\nconst path = require('path')\nconst VueLoaderPlugin = require('vue-loader/lib/plugin')\n\nmodule.exports = {\n  entry: './src/index.js',\n  output: {\n    path: path.resolve(__dirname, './dist'),\n    filename: 'index.js'\n  },\n  module: {\n    rules: [\n      {\n        test: /\\.js$/,\n        use: [\n          {\n            loader: 'babel-loader'\n          }\n        ] \n      },\n      {\n        test: /\\.vue$/,\n        use: [\n          {\n            loader: 'vue-loader'\n          }\n        ]\n      },\n      {\n        test: /\\.(css|scss|sass)$/,\n        use: [\n          {\n            loader: 'style-loader'\n          },\n          {\n            loader: 'css-loader'\n          },\n          {\n            loader: 'sass-loader'\n          }\n        ]\n      }\n    ]\n  },\n  plugins: [new VueLoaderPlugin()]\n}\n```\n\n### 然后向webpack添加开发环境运行的配置\n```nodemon\nnpm i -D clean-webpack-plugin html-webpack-plugin webpack-dev-server\n```\n使用webpack-dev-server来启动开发环境，使用webpack进行打包。在这个操作当中，`html-webpack-plugin`需要一个模板来定义文件的结构，因为我们需要的不是一个空白模板，而希望模板中至少要有一个`<div id=\"app\"></div>`。根据插件，我们还需要在跟目录创建一个public文件夹。里面放的是渲染`html-webpack-plugin`插件的模板。那么现在，整个项目结构变成了这样\n```\n│  index.js\n│  package.json\n│  webpack.config.js\n│\n├─public\n│      index.html\n│\n└─src\n        index.js\n```\n然后向`package.json`添加执行命令\n```json\n{\n  // ...\n  \"scripts\": {\n    \"build\": \"webpack --config webpack.config.js\",\n    \"dev\": \"webpack-dev-server --open\"\n  }\n  // ...\n}\n```\n并且向`webpack.config.json`继续补充\n```js\nconst path = require('path')\nconst HtmlWebpackPlugin = require('html-webpack-plugin');\nconst CleanWebpackPlugin = require('clean-webpack-plugin');\nconst VueLoaderPlugin = require('vue-loader/lib/plugin')\n\nmodule.exports = {\n  entry: './src/index.js',\n  output: {\n    path: path.resolve(__dirname, './dist'),\n    filename: 'index.js'\n  },\n  devServer: {\n    contentBase:  './dist'\n  },\n  module: {\n    rules: [\n      {\n        test: /\\.js$/,\n        use: [\n          {\n            loader: 'babel-loader'\n          }\n        ] \n      },\n      {\n        test: /\\.vue$/,\n        use: [\n          {\n            loader: 'vue-loader'\n          }\n        ]\n      },\n      {\n        test: /\\.(css|scss|sass)$/,\n        use: [\n          {\n            loader: 'style-loader'\n          },\n          {\n            loader: 'css-loader'\n          },\n          {\n            loader: 'sass-loader'\n          }\n        ]\n      }\n    ]\n  },\n  plugins: [\n    new VueLoaderPlugin(),\n    new CleanWebpackPlugin(),\n    new HtmlWebpackPlugin({\n      template: 'public/index.html',\n      title: 'hello, vue_title'\n    })\n  ]\n}\n```\n\n### 创建真正的vue脚手架\n如果你能执行到上面的步骤结束没有出错，那么实际上你的webpack已经没有问题了。虽然看上去是如此的简单。接下来我们只需要把精力放到如何编译vue单文件组件。在src文件夹中创建一个index.vue文件如下\n```vue\n<template>\n  <div>\n    {{msg}}\n  </div>\n</template>\n\n<script>\nexport default {\n  data() {\n    return {\n      msg: 'hello, vue!!!'\n    }\n  }\n}\n</script>\n\n<style lang=\"scss\" scoped>\ndiv {\n  color: red\n}\n</style>\n```\n并编辑同目录中的index.js\n```js\nimport Vue from 'vue'\nimport App from './index.vue'\n\nnew Vue({\n  render: h => h(App)\n}).$mount('#app')\n```\n\n最后，我们的项目长成了这样\n```\n│  index.js\n│  package.json\n│  webpack.config.js\n│\n├─public\n│      index.html\n└─src\n        index.js\n        index.vue\n```\n是不是发现和vue-cli3.x脚手架的结构完全一样？事实上vue-cli3.x就是这个结构来的。只不过它把webpack.config.js安装到了vue-cli-service里，暴露出来vue.config.js来管理。\n## 最后，这个模板的地址[在这里](https://github.com/lost-dream/webpack-demo)。","slug":"从0开始开发vue单文件项目","published":1,"updated":"2019-09-29T11:22:34.499Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck3jm8gw0000uz0btzgs9ct8h","content":"<p>都说软件开发不需要重复造轮子。但不得不说自己造轮子是掌握和巩固知识点最好的办法。这篇文章带大家从0开始自己写一个最简单的vue脚手架。</p>\n<h2 id=\"创建项目\"><a href=\"#创建项目\" class=\"headerlink\" title=\"创建项目\"></a>创建项目</h2><p>创建一个空文件夹，执行<code>npm init</code>，生成一个npm项目。填写一些你认为有用的信息。并在根目录下创建一个index.js文件，作为npm项目的入口。</p>\n<h2 id=\"安装依赖\"><a href=\"#安装依赖\" class=\"headerlink\" title=\"安装依赖\"></a>安装依赖</h2><h3 id=\"安装webpack\"><a href=\"#安装webpack\" class=\"headerlink\" title=\"安装webpack\"></a>安装webpack</h3><p>首先安装webpack。如果用的是webpack4.x版本，同时还需要安装webpack-cli才行。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm i -D webpack webpack-cli</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"管理webpack\"><a href=\"#管理webpack\" class=\"headerlink\" title=\"管理webpack\"></a>管理webpack</h3><p>在根目录创建一个webpack.config.js，在这里管理webpack。创建一个src文件夹来管理源码。在src文件夹中创建index.js作为入口文件（其实就是脚手架中的main文件）。参照vue脚手架，我们规定最后打包目录为dist。此时文件的目录结构为<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">│  index.js</span><br><span class=\"line\">│  package.json</span><br><span class=\"line\">│  webpack.config.js</span><br><span class=\"line\">│</span><br><span class=\"line\">│</span><br><span class=\"line\">└─src</span><br><span class=\"line\">        index.js</span><br></pre></td></tr></table></figure></p>\n<p>而webpack.config.js的内容为<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> path = <span class=\"built_in\">require</span>(<span class=\"string\">'path'</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">module</span>.exports = &#123;</span><br><span class=\"line\">  entry: <span class=\"string\">'./src/index.js'</span>,</span><br><span class=\"line\">  output: &#123;</span><br><span class=\"line\">    path: path.resolve(__dirname, <span class=\"string\">'./dist'</span>),</span><br><span class=\"line\">    filename: <span class=\"string\">'index.js'</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>为此我们需要安装基本的loader</p>\n<ul>\n<li><p>编译css的loader和sass本身</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm i -D style-loader css-loader sass-loader node-sass</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>编译js的loader</p>\n<blockquote>\n<p>如果是babel8.x,必需要同时安装@babel/core @babel/preset-env</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm i -D babel-loader @babel/core @babel/preset-env</span><br></pre></td></tr></table></figure>\n</blockquote>\n</li>\n<li><p>编译vue的loader</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm i -D vue-loader vue-template-compiler</span><br><span class=\"line\">npm i -S vue</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<p>把这些加到webpack.config.js里，文件变成了这样<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> path = <span class=\"built_in\">require</span>(<span class=\"string\">'path'</span>)</span><br><span class=\"line\"><span class=\"keyword\">const</span> VueLoaderPlugin = <span class=\"built_in\">require</span>(<span class=\"string\">'vue-loader/lib/plugin'</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">module</span>.exports = &#123;</span><br><span class=\"line\">  entry: <span class=\"string\">'./src/index.js'</span>,</span><br><span class=\"line\">  output: &#123;</span><br><span class=\"line\">    path: path.resolve(__dirname, <span class=\"string\">'./dist'</span>),</span><br><span class=\"line\">    filename: <span class=\"string\">'index.js'</span></span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  <span class=\"built_in\">module</span>: &#123;</span><br><span class=\"line\">    rules: [</span><br><span class=\"line\">      &#123;</span><br><span class=\"line\">        test: <span class=\"regexp\">/\\.js$/</span>,</span><br><span class=\"line\">        use: [</span><br><span class=\"line\">          &#123;</span><br><span class=\"line\">            loader: <span class=\"string\">'babel-loader'</span></span><br><span class=\"line\">          &#125;</span><br><span class=\"line\">        ] </span><br><span class=\"line\">      &#125;,</span><br><span class=\"line\">      &#123;</span><br><span class=\"line\">        test: <span class=\"regexp\">/\\.vue$/</span>,</span><br><span class=\"line\">        use: [</span><br><span class=\"line\">          &#123;</span><br><span class=\"line\">            loader: <span class=\"string\">'vue-loader'</span></span><br><span class=\"line\">          &#125;</span><br><span class=\"line\">        ]</span><br><span class=\"line\">      &#125;,</span><br><span class=\"line\">      &#123;</span><br><span class=\"line\">        test: <span class=\"regexp\">/\\.(css|scss|sass)$/</span>,</span><br><span class=\"line\">        use: [</span><br><span class=\"line\">          &#123;</span><br><span class=\"line\">            loader: <span class=\"string\">'style-loader'</span></span><br><span class=\"line\">          &#125;,</span><br><span class=\"line\">          &#123;</span><br><span class=\"line\">            loader: <span class=\"string\">'css-loader'</span></span><br><span class=\"line\">          &#125;,</span><br><span class=\"line\">          &#123;</span><br><span class=\"line\">            loader: <span class=\"string\">'sass-loader'</span></span><br><span class=\"line\">          &#125;</span><br><span class=\"line\">        ]</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    ]</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  plugins: [<span class=\"keyword\">new</span> VueLoaderPlugin()]</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"然后向webpack添加开发环境运行的配置\"><a href=\"#然后向webpack添加开发环境运行的配置\" class=\"headerlink\" title=\"然后向webpack添加开发环境运行的配置\"></a>然后向webpack添加开发环境运行的配置</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm i -D clean-webpack-plugin html-webpack-plugin webpack-dev-server</span><br></pre></td></tr></table></figure>\n<p>使用webpack-dev-server来启动开发环境，使用webpack进行打包。在这个操作当中，<code>html-webpack-plugin</code>需要一个模板来定义文件的结构，因为我们需要的不是一个空白模板，而希望模板中至少要有一个<code>&lt;div id=&quot;app&quot;&gt;&lt;/div&gt;</code>。根据插件，我们还需要在跟目录创建一个public文件夹。里面放的是渲染<code>html-webpack-plugin</code>插件的模板。那么现在，整个项目结构变成了这样<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">│  index.js</span><br><span class=\"line\">│  package.json</span><br><span class=\"line\">│  webpack.config.js</span><br><span class=\"line\">│</span><br><span class=\"line\">├─public</span><br><span class=\"line\">│      index.html</span><br><span class=\"line\">│</span><br><span class=\"line\">└─src</span><br><span class=\"line\">        index.js</span><br></pre></td></tr></table></figure></p>\n<p>然后向<code>package.json</code>添加执行命令<br><figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"comment\">// ...</span></span><br><span class=\"line\">  <span class=\"attr\">\"scripts\"</span>: &#123;</span><br><span class=\"line\">    <span class=\"attr\">\"build\"</span>: <span class=\"string\">\"webpack --config webpack.config.js\"</span>,</span><br><span class=\"line\">    <span class=\"attr\">\"dev\"</span>: <span class=\"string\">\"webpack-dev-server --open\"</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"comment\">// ...</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>并且向<code>webpack.config.json</code>继续补充<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> path = <span class=\"built_in\">require</span>(<span class=\"string\">'path'</span>)</span><br><span class=\"line\"><span class=\"keyword\">const</span> HtmlWebpackPlugin = <span class=\"built_in\">require</span>(<span class=\"string\">'html-webpack-plugin'</span>);</span><br><span class=\"line\"><span class=\"keyword\">const</span> CleanWebpackPlugin = <span class=\"built_in\">require</span>(<span class=\"string\">'clean-webpack-plugin'</span>);</span><br><span class=\"line\"><span class=\"keyword\">const</span> VueLoaderPlugin = <span class=\"built_in\">require</span>(<span class=\"string\">'vue-loader/lib/plugin'</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">module</span>.exports = &#123;</span><br><span class=\"line\">  entry: <span class=\"string\">'./src/index.js'</span>,</span><br><span class=\"line\">  output: &#123;</span><br><span class=\"line\">    path: path.resolve(__dirname, <span class=\"string\">'./dist'</span>),</span><br><span class=\"line\">    filename: <span class=\"string\">'index.js'</span></span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  devServer: &#123;</span><br><span class=\"line\">    contentBase:  <span class=\"string\">'./dist'</span></span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  <span class=\"built_in\">module</span>: &#123;</span><br><span class=\"line\">    rules: [</span><br><span class=\"line\">      &#123;</span><br><span class=\"line\">        test: <span class=\"regexp\">/\\.js$/</span>,</span><br><span class=\"line\">        use: [</span><br><span class=\"line\">          &#123;</span><br><span class=\"line\">            loader: <span class=\"string\">'babel-loader'</span></span><br><span class=\"line\">          &#125;</span><br><span class=\"line\">        ] </span><br><span class=\"line\">      &#125;,</span><br><span class=\"line\">      &#123;</span><br><span class=\"line\">        test: <span class=\"regexp\">/\\.vue$/</span>,</span><br><span class=\"line\">        use: [</span><br><span class=\"line\">          &#123;</span><br><span class=\"line\">            loader: <span class=\"string\">'vue-loader'</span></span><br><span class=\"line\">          &#125;</span><br><span class=\"line\">        ]</span><br><span class=\"line\">      &#125;,</span><br><span class=\"line\">      &#123;</span><br><span class=\"line\">        test: <span class=\"regexp\">/\\.(css|scss|sass)$/</span>,</span><br><span class=\"line\">        use: [</span><br><span class=\"line\">          &#123;</span><br><span class=\"line\">            loader: <span class=\"string\">'style-loader'</span></span><br><span class=\"line\">          &#125;,</span><br><span class=\"line\">          &#123;</span><br><span class=\"line\">            loader: <span class=\"string\">'css-loader'</span></span><br><span class=\"line\">          &#125;,</span><br><span class=\"line\">          &#123;</span><br><span class=\"line\">            loader: <span class=\"string\">'sass-loader'</span></span><br><span class=\"line\">          &#125;</span><br><span class=\"line\">        ]</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    ]</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  plugins: [</span><br><span class=\"line\">    <span class=\"keyword\">new</span> VueLoaderPlugin(),</span><br><span class=\"line\">    <span class=\"keyword\">new</span> CleanWebpackPlugin(),</span><br><span class=\"line\">    <span class=\"keyword\">new</span> HtmlWebpackPlugin(&#123;</span><br><span class=\"line\">      template: <span class=\"string\">'public/index.html'</span>,</span><br><span class=\"line\">      title: <span class=\"string\">'hello, vue_title'</span></span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">  ]</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"创建真正的vue脚手架\"><a href=\"#创建真正的vue脚手架\" class=\"headerlink\" title=\"创建真正的vue脚手架\"></a>创建真正的vue脚手架</h3><p>如果你能执行到上面的步骤结束没有出错，那么实际上你的webpack已经没有问题了。虽然看上去是如此的简单。接下来我们只需要把精力放到如何编译vue单文件组件。在src文件夹中创建一个index.vue文件如下<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;template&gt;</span><br><span class=\"line\">  &lt;div&gt;</span><br><span class=\"line\">    &#123;&#123;msg&#125;&#125;</span><br><span class=\"line\">  &lt;/div&gt;</span><br><span class=\"line\">&lt;/template&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;script&gt;</span><br><span class=\"line\">export default &#123;</span><br><span class=\"line\">  data() &#123;</span><br><span class=\"line\">    return &#123;</span><br><span class=\"line\">      msg: &apos;hello, vue!!!&apos;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">&lt;/script&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;style lang=&quot;scss&quot; scoped&gt;</span><br><span class=\"line\">div &#123;</span><br><span class=\"line\">  color: red</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">&lt;/style&gt;</span><br></pre></td></tr></table></figure></p>\n<p>并编辑同目录中的index.js<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> Vue <span class=\"keyword\">from</span> <span class=\"string\">'vue'</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> App <span class=\"keyword\">from</span> <span class=\"string\">'./index.vue'</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">new</span> Vue(&#123;</span><br><span class=\"line\">  render: <span class=\"function\"><span class=\"params\">h</span> =&gt;</span> h(App)</span><br><span class=\"line\">&#125;).$mount(<span class=\"string\">'#app'</span>)</span><br></pre></td></tr></table></figure></p>\n<p>最后，我们的项目长成了这样<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">│  index.js</span><br><span class=\"line\">│  package.json</span><br><span class=\"line\">│  webpack.config.js</span><br><span class=\"line\">│</span><br><span class=\"line\">├─public</span><br><span class=\"line\">│      index.html</span><br><span class=\"line\">└─src</span><br><span class=\"line\">        index.js</span><br><span class=\"line\">        index.vue</span><br></pre></td></tr></table></figure></p>\n<p>是不是发现和vue-cli3.x脚手架的结构完全一样？事实上vue-cli3.x就是这个结构来的。只不过它把webpack.config.js安装到了vue-cli-service里，暴露出来vue.config.js来管理。</p>\n<h2 id=\"最后，这个模板的地址在这里。\"><a href=\"#最后，这个模板的地址在这里。\" class=\"headerlink\" title=\"最后，这个模板的地址在这里。\"></a>最后，这个模板的地址<a href=\"https://github.com/lost-dream/webpack-demo\" target=\"_blank\" rel=\"noopener\">在这里</a>。</h2>","site":{"data":{}},"excerpt":"","more":"<p>都说软件开发不需要重复造轮子。但不得不说自己造轮子是掌握和巩固知识点最好的办法。这篇文章带大家从0开始自己写一个最简单的vue脚手架。</p>\n<h2 id=\"创建项目\"><a href=\"#创建项目\" class=\"headerlink\" title=\"创建项目\"></a>创建项目</h2><p>创建一个空文件夹，执行<code>npm init</code>，生成一个npm项目。填写一些你认为有用的信息。并在根目录下创建一个index.js文件，作为npm项目的入口。</p>\n<h2 id=\"安装依赖\"><a href=\"#安装依赖\" class=\"headerlink\" title=\"安装依赖\"></a>安装依赖</h2><h3 id=\"安装webpack\"><a href=\"#安装webpack\" class=\"headerlink\" title=\"安装webpack\"></a>安装webpack</h3><p>首先安装webpack。如果用的是webpack4.x版本，同时还需要安装webpack-cli才行。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm i -D webpack webpack-cli</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"管理webpack\"><a href=\"#管理webpack\" class=\"headerlink\" title=\"管理webpack\"></a>管理webpack</h3><p>在根目录创建一个webpack.config.js，在这里管理webpack。创建一个src文件夹来管理源码。在src文件夹中创建index.js作为入口文件（其实就是脚手架中的main文件）。参照vue脚手架，我们规定最后打包目录为dist。此时文件的目录结构为<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">│  index.js</span><br><span class=\"line\">│  package.json</span><br><span class=\"line\">│  webpack.config.js</span><br><span class=\"line\">│</span><br><span class=\"line\">│</span><br><span class=\"line\">└─src</span><br><span class=\"line\">        index.js</span><br></pre></td></tr></table></figure></p>\n<p>而webpack.config.js的内容为<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> path = <span class=\"built_in\">require</span>(<span class=\"string\">'path'</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">module</span>.exports = &#123;</span><br><span class=\"line\">  entry: <span class=\"string\">'./src/index.js'</span>,</span><br><span class=\"line\">  output: &#123;</span><br><span class=\"line\">    path: path.resolve(__dirname, <span class=\"string\">'./dist'</span>),</span><br><span class=\"line\">    filename: <span class=\"string\">'index.js'</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>为此我们需要安装基本的loader</p>\n<ul>\n<li><p>编译css的loader和sass本身</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm i -D style-loader css-loader sass-loader node-sass</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>编译js的loader</p>\n<blockquote>\n<p>如果是babel8.x,必需要同时安装@babel/core @babel/preset-env</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm i -D babel-loader @babel/core @babel/preset-env</span><br></pre></td></tr></table></figure>\n</blockquote>\n</li>\n<li><p>编译vue的loader</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm i -D vue-loader vue-template-compiler</span><br><span class=\"line\">npm i -S vue</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<p>把这些加到webpack.config.js里，文件变成了这样<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> path = <span class=\"built_in\">require</span>(<span class=\"string\">'path'</span>)</span><br><span class=\"line\"><span class=\"keyword\">const</span> VueLoaderPlugin = <span class=\"built_in\">require</span>(<span class=\"string\">'vue-loader/lib/plugin'</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">module</span>.exports = &#123;</span><br><span class=\"line\">  entry: <span class=\"string\">'./src/index.js'</span>,</span><br><span class=\"line\">  output: &#123;</span><br><span class=\"line\">    path: path.resolve(__dirname, <span class=\"string\">'./dist'</span>),</span><br><span class=\"line\">    filename: <span class=\"string\">'index.js'</span></span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  <span class=\"built_in\">module</span>: &#123;</span><br><span class=\"line\">    rules: [</span><br><span class=\"line\">      &#123;</span><br><span class=\"line\">        test: <span class=\"regexp\">/\\.js$/</span>,</span><br><span class=\"line\">        use: [</span><br><span class=\"line\">          &#123;</span><br><span class=\"line\">            loader: <span class=\"string\">'babel-loader'</span></span><br><span class=\"line\">          &#125;</span><br><span class=\"line\">        ] </span><br><span class=\"line\">      &#125;,</span><br><span class=\"line\">      &#123;</span><br><span class=\"line\">        test: <span class=\"regexp\">/\\.vue$/</span>,</span><br><span class=\"line\">        use: [</span><br><span class=\"line\">          &#123;</span><br><span class=\"line\">            loader: <span class=\"string\">'vue-loader'</span></span><br><span class=\"line\">          &#125;</span><br><span class=\"line\">        ]</span><br><span class=\"line\">      &#125;,</span><br><span class=\"line\">      &#123;</span><br><span class=\"line\">        test: <span class=\"regexp\">/\\.(css|scss|sass)$/</span>,</span><br><span class=\"line\">        use: [</span><br><span class=\"line\">          &#123;</span><br><span class=\"line\">            loader: <span class=\"string\">'style-loader'</span></span><br><span class=\"line\">          &#125;,</span><br><span class=\"line\">          &#123;</span><br><span class=\"line\">            loader: <span class=\"string\">'css-loader'</span></span><br><span class=\"line\">          &#125;,</span><br><span class=\"line\">          &#123;</span><br><span class=\"line\">            loader: <span class=\"string\">'sass-loader'</span></span><br><span class=\"line\">          &#125;</span><br><span class=\"line\">        ]</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    ]</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  plugins: [<span class=\"keyword\">new</span> VueLoaderPlugin()]</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"然后向webpack添加开发环境运行的配置\"><a href=\"#然后向webpack添加开发环境运行的配置\" class=\"headerlink\" title=\"然后向webpack添加开发环境运行的配置\"></a>然后向webpack添加开发环境运行的配置</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm i -D clean-webpack-plugin html-webpack-plugin webpack-dev-server</span><br></pre></td></tr></table></figure>\n<p>使用webpack-dev-server来启动开发环境，使用webpack进行打包。在这个操作当中，<code>html-webpack-plugin</code>需要一个模板来定义文件的结构，因为我们需要的不是一个空白模板，而希望模板中至少要有一个<code>&lt;div id=&quot;app&quot;&gt;&lt;/div&gt;</code>。根据插件，我们还需要在跟目录创建一个public文件夹。里面放的是渲染<code>html-webpack-plugin</code>插件的模板。那么现在，整个项目结构变成了这样<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">│  index.js</span><br><span class=\"line\">│  package.json</span><br><span class=\"line\">│  webpack.config.js</span><br><span class=\"line\">│</span><br><span class=\"line\">├─public</span><br><span class=\"line\">│      index.html</span><br><span class=\"line\">│</span><br><span class=\"line\">└─src</span><br><span class=\"line\">        index.js</span><br></pre></td></tr></table></figure></p>\n<p>然后向<code>package.json</code>添加执行命令<br><figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"comment\">// ...</span></span><br><span class=\"line\">  <span class=\"attr\">\"scripts\"</span>: &#123;</span><br><span class=\"line\">    <span class=\"attr\">\"build\"</span>: <span class=\"string\">\"webpack --config webpack.config.js\"</span>,</span><br><span class=\"line\">    <span class=\"attr\">\"dev\"</span>: <span class=\"string\">\"webpack-dev-server --open\"</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"comment\">// ...</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>并且向<code>webpack.config.json</code>继续补充<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> path = <span class=\"built_in\">require</span>(<span class=\"string\">'path'</span>)</span><br><span class=\"line\"><span class=\"keyword\">const</span> HtmlWebpackPlugin = <span class=\"built_in\">require</span>(<span class=\"string\">'html-webpack-plugin'</span>);</span><br><span class=\"line\"><span class=\"keyword\">const</span> CleanWebpackPlugin = <span class=\"built_in\">require</span>(<span class=\"string\">'clean-webpack-plugin'</span>);</span><br><span class=\"line\"><span class=\"keyword\">const</span> VueLoaderPlugin = <span class=\"built_in\">require</span>(<span class=\"string\">'vue-loader/lib/plugin'</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">module</span>.exports = &#123;</span><br><span class=\"line\">  entry: <span class=\"string\">'./src/index.js'</span>,</span><br><span class=\"line\">  output: &#123;</span><br><span class=\"line\">    path: path.resolve(__dirname, <span class=\"string\">'./dist'</span>),</span><br><span class=\"line\">    filename: <span class=\"string\">'index.js'</span></span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  devServer: &#123;</span><br><span class=\"line\">    contentBase:  <span class=\"string\">'./dist'</span></span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  <span class=\"built_in\">module</span>: &#123;</span><br><span class=\"line\">    rules: [</span><br><span class=\"line\">      &#123;</span><br><span class=\"line\">        test: <span class=\"regexp\">/\\.js$/</span>,</span><br><span class=\"line\">        use: [</span><br><span class=\"line\">          &#123;</span><br><span class=\"line\">            loader: <span class=\"string\">'babel-loader'</span></span><br><span class=\"line\">          &#125;</span><br><span class=\"line\">        ] </span><br><span class=\"line\">      &#125;,</span><br><span class=\"line\">      &#123;</span><br><span class=\"line\">        test: <span class=\"regexp\">/\\.vue$/</span>,</span><br><span class=\"line\">        use: [</span><br><span class=\"line\">          &#123;</span><br><span class=\"line\">            loader: <span class=\"string\">'vue-loader'</span></span><br><span class=\"line\">          &#125;</span><br><span class=\"line\">        ]</span><br><span class=\"line\">      &#125;,</span><br><span class=\"line\">      &#123;</span><br><span class=\"line\">        test: <span class=\"regexp\">/\\.(css|scss|sass)$/</span>,</span><br><span class=\"line\">        use: [</span><br><span class=\"line\">          &#123;</span><br><span class=\"line\">            loader: <span class=\"string\">'style-loader'</span></span><br><span class=\"line\">          &#125;,</span><br><span class=\"line\">          &#123;</span><br><span class=\"line\">            loader: <span class=\"string\">'css-loader'</span></span><br><span class=\"line\">          &#125;,</span><br><span class=\"line\">          &#123;</span><br><span class=\"line\">            loader: <span class=\"string\">'sass-loader'</span></span><br><span class=\"line\">          &#125;</span><br><span class=\"line\">        ]</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    ]</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  plugins: [</span><br><span class=\"line\">    <span class=\"keyword\">new</span> VueLoaderPlugin(),</span><br><span class=\"line\">    <span class=\"keyword\">new</span> CleanWebpackPlugin(),</span><br><span class=\"line\">    <span class=\"keyword\">new</span> HtmlWebpackPlugin(&#123;</span><br><span class=\"line\">      template: <span class=\"string\">'public/index.html'</span>,</span><br><span class=\"line\">      title: <span class=\"string\">'hello, vue_title'</span></span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">  ]</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"创建真正的vue脚手架\"><a href=\"#创建真正的vue脚手架\" class=\"headerlink\" title=\"创建真正的vue脚手架\"></a>创建真正的vue脚手架</h3><p>如果你能执行到上面的步骤结束没有出错，那么实际上你的webpack已经没有问题了。虽然看上去是如此的简单。接下来我们只需要把精力放到如何编译vue单文件组件。在src文件夹中创建一个index.vue文件如下<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;template&gt;</span><br><span class=\"line\">  &lt;div&gt;</span><br><span class=\"line\">    &#123;&#123;msg&#125;&#125;</span><br><span class=\"line\">  &lt;/div&gt;</span><br><span class=\"line\">&lt;/template&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;script&gt;</span><br><span class=\"line\">export default &#123;</span><br><span class=\"line\">  data() &#123;</span><br><span class=\"line\">    return &#123;</span><br><span class=\"line\">      msg: &apos;hello, vue!!!&apos;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">&lt;/script&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;style lang=&quot;scss&quot; scoped&gt;</span><br><span class=\"line\">div &#123;</span><br><span class=\"line\">  color: red</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">&lt;/style&gt;</span><br></pre></td></tr></table></figure></p>\n<p>并编辑同目录中的index.js<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> Vue <span class=\"keyword\">from</span> <span class=\"string\">'vue'</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> App <span class=\"keyword\">from</span> <span class=\"string\">'./index.vue'</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">new</span> Vue(&#123;</span><br><span class=\"line\">  render: <span class=\"function\"><span class=\"params\">h</span> =&gt;</span> h(App)</span><br><span class=\"line\">&#125;).$mount(<span class=\"string\">'#app'</span>)</span><br></pre></td></tr></table></figure></p>\n<p>最后，我们的项目长成了这样<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">│  index.js</span><br><span class=\"line\">│  package.json</span><br><span class=\"line\">│  webpack.config.js</span><br><span class=\"line\">│</span><br><span class=\"line\">├─public</span><br><span class=\"line\">│      index.html</span><br><span class=\"line\">└─src</span><br><span class=\"line\">        index.js</span><br><span class=\"line\">        index.vue</span><br></pre></td></tr></table></figure></p>\n<p>是不是发现和vue-cli3.x脚手架的结构完全一样？事实上vue-cli3.x就是这个结构来的。只不过它把webpack.config.js安装到了vue-cli-service里，暴露出来vue.config.js来管理。</p>\n<h2 id=\"最后，这个模板的地址在这里。\"><a href=\"#最后，这个模板的地址在这里。\" class=\"headerlink\" title=\"最后，这个模板的地址在这里。\"></a>最后，这个模板的地址<a href=\"https://github.com/lost-dream/webpack-demo\" target=\"_blank\" rel=\"noopener\">在这里</a>。</h2>"},{"title":"使用webstrom","date":"2017-08-28T08:51:51.000Z","description":"详细的webstorm使用文档","_content":"我本人从事前端开发也有很长一段时间了。从一开始的[editplus](https://www.editplus.com/)，到后来用到[nodepad++](https://notepad-plus-plus.org/),之后还使用过一些其他的编辑器以及IDE，但我个人最钟爱的还是[webstrom](http://www.jetbrains.com/webstorm/)。相比[phpstrom](http://www.jetbrains.com/phpstorm/)他更倾向于前端方向的开发模式，相比[hbuilder](http://www.dcloud.io/)有简明的操作方式和更直观的操作面板。在我个人看来webstrom的缺点很少，如果能够用的顺手，相信会让你的效率提升数倍。            \n## 下载        \nwebstrom下载选择官网[http://www.jetbrains.com/webstorm/](http://www.jetbrains.com/webstorm/)下载。虽然有各种破解版本以及汉化版本满天飞，但相比正版的webstrom少了很多功能和使用的乐趣。可是如果从官网渠道下载webstrom我只能使用30天怎么办？其实只要你在安装时选择**license server**，然后输入`http://idea.imsxm.com/`，就可以正常使用了。\n## 从设置开始说起\n你可以点击**File - Settings...** 或者通过快捷键 **ctrl + alt + shift**进入设置（本文所有快捷键仅限于window系统，如果是mac可以在右下角**LF**选项中选择window或者自行查找mac系统快捷键）。  \n### Appearance & Behavior\n这一栏的设置不建议修改，但还是应该注意**System Settings**这一栏，这一栏中可以设置一些IDE的行为。例如开启webstorm时是否自动显示上一次的项目、打开新项目时覆盖当前项目还是重新打开一页之类的。事实上这些设置在处开始使用时IDE本身也会有弹框提示，但也可以之后修改。另外，在**Appearance**中可以设置IDE背景（Background Image...），不知道你是否注意到了呢？\n### Keymap\n这一栏通常用来设置和修改快捷键。你可以修改或者新加某项功能的快捷键，目录为顶部目录，找到双击即可修改和新增，简单方便。\n### Editor\n这一栏负责编辑器的编辑模块，重要的有以下几个设置\n#### General\n这一栏主要设置**ctrl + 鼠标滚轮**调节字号大小、**自动换行**。\n![1.png](/blog/img/1.png)  \n#### Color Scheme\n这一栏可以更换浏览器主题。你可以使用自带的几种主题，也可以下载其他主题。下载地址：[http://color-themes.com/?view=index](http://color-themes.com/?view=index)，方式很简单，点击图片可以进行主题预览，选中自己喜欢的主题，下载出来。下载很快，几乎是点击下载的瞬间完成，然后我们就可以安装到自己webstrom中。安装方法：点击左上角的**File--Setting**，选中**Import Settings**，进入选择界面，选择你下载好的主题文件（后缀为.jar），编辑器会经过俩次提示，全部选择同意，然后重启，你就会发现主题安装成功了。在这里有一个小插曲，如果你之前已经打开了webstrom，那么在选择文件的时候有可能会无法找到那个文件，这是因为webstrom本身的缓存在作怪，只要你保证进入到了正确的文件夹，点击刷新，那个文件一定会出现在你的视线中。\n![img2](/blog/img/2.jpg)![img3](/blog/img/3.jpg)     \n####  Code Style\n可以设置每种类型文件的格式化参数\n#### File and Code Templates\n这一栏可以设置自定义的模板，这样在新建文件时可以省去重复操作。\n### Plugins\n这里可以设置IDE插件。比如我在写博客时自然希望他可以支持markdown的操作（虽然博客在[atom](https://atom.io/)中编辑更爽的说）。在这里添加markdown的插件。            \n![img4](/blog/img/4.png)\n当然你也可以根据需要安装其他功能的插件。\n### Version Control\n这里设置版本控制。但webstorm自动处理好了这些设置，一般我们不会在这里进行操作。除非你想添加github仓库。但这一操作比较麻烦，我不会赘述。你可以[点击这里](https://www.cnblogs.com/vanstrict/p/5677716.html)进行配置。              \n关于git的操作我们通常直接进行操作\n* 如果你想克隆一个仓库，你可以点击导航**VCS - git - clone**直接克隆并打开一个项目。\n* 对于已被管理的项目，右键鼠标同样有**git**选项，可以进行所有的git操作。值得注意的是\n    + 使用快捷键ctrl + k可以进行commit操作，ctrl + shift + k 可以进行push操作\n    + 右下角有git: master 之类选项，可以在这里更方便的切换和创建分支\n\n### Language && Frameworks\n#### JavaScript\n在这里可以设置js的版本，在子选项中通常使用的是**Libraries**，可以设置IDE支持的语法和提示。\n你可以选择下载需要的语法支持（jquery之类）。\n#### Node.js and NPM \nwebstrom会主动去寻找nodeJs程序而不用你手动添加，之后你就可以在IDE中享受编辑器的自动补全以及错误提示等方便的功能，并且下方会显示你安装过的packages，并可以搜索版本是否为最新版本并提示升级。另外，在新创建项目时，我们可以指定文件为**Node.js express App**,非常方便。\n![img5](/blog/img/5.png)![img6](/blog/img/6.png)\n### Tools\n#### File watchers\n这里可以设置自动编译。比如很多前端比较前沿的技术（babel、sass之类），在不需要非常复杂配置的情况下webstorm提供自动编译，省去配置文件这一环节。这一功能的前提是你向webstorm添加了编译功能：点击加号，在program中填入安装文件的.cmd文件，在argument中定义你想要的编译方式就可以了。\n## 底部操作栏\n如果你的底部没有操作栏，点击左下角的小电脑。\n### TODO\n你可以在webstorm中使用TODO注释，这样做的好处是你可以通过底部的TODO功能随时找到他。\n### Terminal\n不解释，所有开发者都懂得\n### run\n运行js文件的利器。尤其在nodejs开发时更为明显。\n## 侧边栏\n### npm\n如果你是运行nodejs项目，会出现这一栏，可以让你方便的运行script。修改script时别忘了点击刷新按钮进行更新\n## 其他方便的操作\n其他方便的功能\n+ 按住shift，鼠标移入图片链接中可以显示出图像及其具体信息。\n+ 右键点击最右侧区域，选择**customize highlight level**可以选择IDE的高亮规则。由低到高分别为不检查、只检查语法、全检查\n+ 配合浏览器插件可以使用debug，在webstorm中直接打断点不知道有多爽。\n+ 基于NodeJS开发大型项目时，由于node_modules文件夹过于庞大导致的项目加载缓慢甚至卡死，可以在File--setting--Editor--File Types中的ignore files and folders增加一项node_modules（注意后面加分号）;可以让webstorm忽略这个文件夹。","source":"_posts/使用webstrom.md","raw":"title: 使用webstrom\ndate: 2017-08-28 16:51:51\ntags: [webstorm]\ncategories: [editor]\ndescription: 详细的webstorm使用文档\n---\n我本人从事前端开发也有很长一段时间了。从一开始的[editplus](https://www.editplus.com/)，到后来用到[nodepad++](https://notepad-plus-plus.org/),之后还使用过一些其他的编辑器以及IDE，但我个人最钟爱的还是[webstrom](http://www.jetbrains.com/webstorm/)。相比[phpstrom](http://www.jetbrains.com/phpstorm/)他更倾向于前端方向的开发模式，相比[hbuilder](http://www.dcloud.io/)有简明的操作方式和更直观的操作面板。在我个人看来webstrom的缺点很少，如果能够用的顺手，相信会让你的效率提升数倍。            \n## 下载        \nwebstrom下载选择官网[http://www.jetbrains.com/webstorm/](http://www.jetbrains.com/webstorm/)下载。虽然有各种破解版本以及汉化版本满天飞，但相比正版的webstrom少了很多功能和使用的乐趣。可是如果从官网渠道下载webstrom我只能使用30天怎么办？其实只要你在安装时选择**license server**，然后输入`http://idea.imsxm.com/`，就可以正常使用了。\n## 从设置开始说起\n你可以点击**File - Settings...** 或者通过快捷键 **ctrl + alt + shift**进入设置（本文所有快捷键仅限于window系统，如果是mac可以在右下角**LF**选项中选择window或者自行查找mac系统快捷键）。  \n### Appearance & Behavior\n这一栏的设置不建议修改，但还是应该注意**System Settings**这一栏，这一栏中可以设置一些IDE的行为。例如开启webstorm时是否自动显示上一次的项目、打开新项目时覆盖当前项目还是重新打开一页之类的。事实上这些设置在处开始使用时IDE本身也会有弹框提示，但也可以之后修改。另外，在**Appearance**中可以设置IDE背景（Background Image...），不知道你是否注意到了呢？\n### Keymap\n这一栏通常用来设置和修改快捷键。你可以修改或者新加某项功能的快捷键，目录为顶部目录，找到双击即可修改和新增，简单方便。\n### Editor\n这一栏负责编辑器的编辑模块，重要的有以下几个设置\n#### General\n这一栏主要设置**ctrl + 鼠标滚轮**调节字号大小、**自动换行**。\n![1.png](/blog/img/1.png)  \n#### Color Scheme\n这一栏可以更换浏览器主题。你可以使用自带的几种主题，也可以下载其他主题。下载地址：[http://color-themes.com/?view=index](http://color-themes.com/?view=index)，方式很简单，点击图片可以进行主题预览，选中自己喜欢的主题，下载出来。下载很快，几乎是点击下载的瞬间完成，然后我们就可以安装到自己webstrom中。安装方法：点击左上角的**File--Setting**，选中**Import Settings**，进入选择界面，选择你下载好的主题文件（后缀为.jar），编辑器会经过俩次提示，全部选择同意，然后重启，你就会发现主题安装成功了。在这里有一个小插曲，如果你之前已经打开了webstrom，那么在选择文件的时候有可能会无法找到那个文件，这是因为webstrom本身的缓存在作怪，只要你保证进入到了正确的文件夹，点击刷新，那个文件一定会出现在你的视线中。\n![img2](/blog/img/2.jpg)![img3](/blog/img/3.jpg)     \n####  Code Style\n可以设置每种类型文件的格式化参数\n#### File and Code Templates\n这一栏可以设置自定义的模板，这样在新建文件时可以省去重复操作。\n### Plugins\n这里可以设置IDE插件。比如我在写博客时自然希望他可以支持markdown的操作（虽然博客在[atom](https://atom.io/)中编辑更爽的说）。在这里添加markdown的插件。            \n![img4](/blog/img/4.png)\n当然你也可以根据需要安装其他功能的插件。\n### Version Control\n这里设置版本控制。但webstorm自动处理好了这些设置，一般我们不会在这里进行操作。除非你想添加github仓库。但这一操作比较麻烦，我不会赘述。你可以[点击这里](https://www.cnblogs.com/vanstrict/p/5677716.html)进行配置。              \n关于git的操作我们通常直接进行操作\n* 如果你想克隆一个仓库，你可以点击导航**VCS - git - clone**直接克隆并打开一个项目。\n* 对于已被管理的项目，右键鼠标同样有**git**选项，可以进行所有的git操作。值得注意的是\n    + 使用快捷键ctrl + k可以进行commit操作，ctrl + shift + k 可以进行push操作\n    + 右下角有git: master 之类选项，可以在这里更方便的切换和创建分支\n\n### Language && Frameworks\n#### JavaScript\n在这里可以设置js的版本，在子选项中通常使用的是**Libraries**，可以设置IDE支持的语法和提示。\n你可以选择下载需要的语法支持（jquery之类）。\n#### Node.js and NPM \nwebstrom会主动去寻找nodeJs程序而不用你手动添加，之后你就可以在IDE中享受编辑器的自动补全以及错误提示等方便的功能，并且下方会显示你安装过的packages，并可以搜索版本是否为最新版本并提示升级。另外，在新创建项目时，我们可以指定文件为**Node.js express App**,非常方便。\n![img5](/blog/img/5.png)![img6](/blog/img/6.png)\n### Tools\n#### File watchers\n这里可以设置自动编译。比如很多前端比较前沿的技术（babel、sass之类），在不需要非常复杂配置的情况下webstorm提供自动编译，省去配置文件这一环节。这一功能的前提是你向webstorm添加了编译功能：点击加号，在program中填入安装文件的.cmd文件，在argument中定义你想要的编译方式就可以了。\n## 底部操作栏\n如果你的底部没有操作栏，点击左下角的小电脑。\n### TODO\n你可以在webstorm中使用TODO注释，这样做的好处是你可以通过底部的TODO功能随时找到他。\n### Terminal\n不解释，所有开发者都懂得\n### run\n运行js文件的利器。尤其在nodejs开发时更为明显。\n## 侧边栏\n### npm\n如果你是运行nodejs项目，会出现这一栏，可以让你方便的运行script。修改script时别忘了点击刷新按钮进行更新\n## 其他方便的操作\n其他方便的功能\n+ 按住shift，鼠标移入图片链接中可以显示出图像及其具体信息。\n+ 右键点击最右侧区域，选择**customize highlight level**可以选择IDE的高亮规则。由低到高分别为不检查、只检查语法、全检查\n+ 配合浏览器插件可以使用debug，在webstorm中直接打断点不知道有多爽。\n+ 基于NodeJS开发大型项目时，由于node_modules文件夹过于庞大导致的项目加载缓慢甚至卡死，可以在File--setting--Editor--File Types中的ignore files and folders增加一项node_modules（注意后面加分号）;可以让webstorm忽略这个文件夹。","slug":"使用webstrom","published":1,"updated":"2019-09-29T11:22:34.500Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck3jm8gw2000xz0btyajl8x4t","content":"<p>我本人从事前端开发也有很长一段时间了。从一开始的<a href=\"https://www.editplus.com/\" target=\"_blank\" rel=\"noopener\">editplus</a>，到后来用到<a href=\"https://notepad-plus-plus.org/\" target=\"_blank\" rel=\"noopener\">nodepad++</a>,之后还使用过一些其他的编辑器以及IDE，但我个人最钟爱的还是<a href=\"http://www.jetbrains.com/webstorm/\" target=\"_blank\" rel=\"noopener\">webstrom</a>。相比<a href=\"http://www.jetbrains.com/phpstorm/\" target=\"_blank\" rel=\"noopener\">phpstrom</a>他更倾向于前端方向的开发模式，相比<a href=\"http://www.dcloud.io/\" target=\"_blank\" rel=\"noopener\">hbuilder</a>有简明的操作方式和更直观的操作面板。在我个人看来webstrom的缺点很少，如果能够用的顺手，相信会让你的效率提升数倍。            </p>\n<h2 id=\"下载\"><a href=\"#下载\" class=\"headerlink\" title=\"下载\"></a>下载</h2><p>webstrom下载选择官网<a href=\"http://www.jetbrains.com/webstorm/\" target=\"_blank\" rel=\"noopener\">http://www.jetbrains.com/webstorm/</a>下载。虽然有各种破解版本以及汉化版本满天飞，但相比正版的webstrom少了很多功能和使用的乐趣。可是如果从官网渠道下载webstrom我只能使用30天怎么办？其实只要你在安装时选择<strong>license server</strong>，然后输入<code>http://idea.imsxm.com/</code>，就可以正常使用了。</p>\n<h2 id=\"从设置开始说起\"><a href=\"#从设置开始说起\" class=\"headerlink\" title=\"从设置开始说起\"></a>从设置开始说起</h2><p>你可以点击<strong>File - Settings…</strong> 或者通过快捷键 <strong>ctrl + alt + shift</strong>进入设置（本文所有快捷键仅限于window系统，如果是mac可以在右下角<strong>LF</strong>选项中选择window或者自行查找mac系统快捷键）。  </p>\n<h3 id=\"Appearance-amp-Behavior\"><a href=\"#Appearance-amp-Behavior\" class=\"headerlink\" title=\"Appearance &amp; Behavior\"></a>Appearance &amp; Behavior</h3><p>这一栏的设置不建议修改，但还是应该注意<strong>System Settings</strong>这一栏，这一栏中可以设置一些IDE的行为。例如开启webstorm时是否自动显示上一次的项目、打开新项目时覆盖当前项目还是重新打开一页之类的。事实上这些设置在处开始使用时IDE本身也会有弹框提示，但也可以之后修改。另外，在<strong>Appearance</strong>中可以设置IDE背景（Background Image…），不知道你是否注意到了呢？</p>\n<h3 id=\"Keymap\"><a href=\"#Keymap\" class=\"headerlink\" title=\"Keymap\"></a>Keymap</h3><p>这一栏通常用来设置和修改快捷键。你可以修改或者新加某项功能的快捷键，目录为顶部目录，找到双击即可修改和新增，简单方便。</p>\n<h3 id=\"Editor\"><a href=\"#Editor\" class=\"headerlink\" title=\"Editor\"></a>Editor</h3><p>这一栏负责编辑器的编辑模块，重要的有以下几个设置</p>\n<h4 id=\"General\"><a href=\"#General\" class=\"headerlink\" title=\"General\"></a>General</h4><p>这一栏主要设置<strong>ctrl + 鼠标滚轮</strong>调节字号大小、<strong>自动换行</strong>。<br><img src=\"/blog/img/1.png\" alt=\"1.png\">  </p>\n<h4 id=\"Color-Scheme\"><a href=\"#Color-Scheme\" class=\"headerlink\" title=\"Color Scheme\"></a>Color Scheme</h4><p>这一栏可以更换浏览器主题。你可以使用自带的几种主题，也可以下载其他主题。下载地址：<a href=\"http://color-themes.com/?view=index\" target=\"_blank\" rel=\"noopener\">http://color-themes.com/?view=index</a>，方式很简单，点击图片可以进行主题预览，选中自己喜欢的主题，下载出来。下载很快，几乎是点击下载的瞬间完成，然后我们就可以安装到自己webstrom中。安装方法：点击左上角的<strong>File–Setting</strong>，选中<strong>Import Settings</strong>，进入选择界面，选择你下载好的主题文件（后缀为.jar），编辑器会经过俩次提示，全部选择同意，然后重启，你就会发现主题安装成功了。在这里有一个小插曲，如果你之前已经打开了webstrom，那么在选择文件的时候有可能会无法找到那个文件，这是因为webstrom本身的缓存在作怪，只要你保证进入到了正确的文件夹，点击刷新，那个文件一定会出现在你的视线中。<br><img src=\"/blog/img/2.jpg\" alt=\"img2\"><img src=\"/blog/img/3.jpg\" alt=\"img3\">     </p>\n<h4 id=\"Code-Style\"><a href=\"#Code-Style\" class=\"headerlink\" title=\"Code Style\"></a>Code Style</h4><p>可以设置每种类型文件的格式化参数</p>\n<h4 id=\"File-and-Code-Templates\"><a href=\"#File-and-Code-Templates\" class=\"headerlink\" title=\"File and Code Templates\"></a>File and Code Templates</h4><p>这一栏可以设置自定义的模板，这样在新建文件时可以省去重复操作。</p>\n<h3 id=\"Plugins\"><a href=\"#Plugins\" class=\"headerlink\" title=\"Plugins\"></a>Plugins</h3><p>这里可以设置IDE插件。比如我在写博客时自然希望他可以支持markdown的操作（虽然博客在<a href=\"https://atom.io/\" target=\"_blank\" rel=\"noopener\">atom</a>中编辑更爽的说）。在这里添加markdown的插件。<br><img src=\"/blog/img/4.png\" alt=\"img4\"><br>当然你也可以根据需要安装其他功能的插件。</p>\n<h3 id=\"Version-Control\"><a href=\"#Version-Control\" class=\"headerlink\" title=\"Version Control\"></a>Version Control</h3><p>这里设置版本控制。但webstorm自动处理好了这些设置，一般我们不会在这里进行操作。除非你想添加github仓库。但这一操作比较麻烦，我不会赘述。你可以<a href=\"https://www.cnblogs.com/vanstrict/p/5677716.html\" target=\"_blank\" rel=\"noopener\">点击这里</a>进行配置。<br>关于git的操作我们通常直接进行操作</p>\n<ul>\n<li>如果你想克隆一个仓库，你可以点击导航<strong>VCS - git - clone</strong>直接克隆并打开一个项目。</li>\n<li>对于已被管理的项目，右键鼠标同样有<strong>git</strong>选项，可以进行所有的git操作。值得注意的是<ul>\n<li>使用快捷键ctrl + k可以进行commit操作，ctrl + shift + k 可以进行push操作</li>\n<li>右下角有git: master 之类选项，可以在这里更方便的切换和创建分支</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"Language-amp-amp-Frameworks\"><a href=\"#Language-amp-amp-Frameworks\" class=\"headerlink\" title=\"Language &amp;&amp; Frameworks\"></a>Language &amp;&amp; Frameworks</h3><h4 id=\"JavaScript\"><a href=\"#JavaScript\" class=\"headerlink\" title=\"JavaScript\"></a>JavaScript</h4><p>在这里可以设置js的版本，在子选项中通常使用的是<strong>Libraries</strong>，可以设置IDE支持的语法和提示。<br>你可以选择下载需要的语法支持（jquery之类）。</p>\n<h4 id=\"Node-js-and-NPM\"><a href=\"#Node-js-and-NPM\" class=\"headerlink\" title=\"Node.js and NPM\"></a>Node.js and NPM</h4><p>webstrom会主动去寻找nodeJs程序而不用你手动添加，之后你就可以在IDE中享受编辑器的自动补全以及错误提示等方便的功能，并且下方会显示你安装过的packages，并可以搜索版本是否为最新版本并提示升级。另外，在新创建项目时，我们可以指定文件为<strong>Node.js express App</strong>,非常方便。<br><img src=\"/blog/img/5.png\" alt=\"img5\"><img src=\"/blog/img/6.png\" alt=\"img6\"></p>\n<h3 id=\"Tools\"><a href=\"#Tools\" class=\"headerlink\" title=\"Tools\"></a>Tools</h3><h4 id=\"File-watchers\"><a href=\"#File-watchers\" class=\"headerlink\" title=\"File watchers\"></a>File watchers</h4><p>这里可以设置自动编译。比如很多前端比较前沿的技术（babel、sass之类），在不需要非常复杂配置的情况下webstorm提供自动编译，省去配置文件这一环节。这一功能的前提是你向webstorm添加了编译功能：点击加号，在program中填入安装文件的.cmd文件，在argument中定义你想要的编译方式就可以了。</p>\n<h2 id=\"底部操作栏\"><a href=\"#底部操作栏\" class=\"headerlink\" title=\"底部操作栏\"></a>底部操作栏</h2><p>如果你的底部没有操作栏，点击左下角的小电脑。</p>\n<h3 id=\"TODO\"><a href=\"#TODO\" class=\"headerlink\" title=\"TODO\"></a>TODO</h3><p>你可以在webstorm中使用TODO注释，这样做的好处是你可以通过底部的TODO功能随时找到他。</p>\n<h3 id=\"Terminal\"><a href=\"#Terminal\" class=\"headerlink\" title=\"Terminal\"></a>Terminal</h3><p>不解释，所有开发者都懂得</p>\n<h3 id=\"run\"><a href=\"#run\" class=\"headerlink\" title=\"run\"></a>run</h3><p>运行js文件的利器。尤其在nodejs开发时更为明显。</p>\n<h2 id=\"侧边栏\"><a href=\"#侧边栏\" class=\"headerlink\" title=\"侧边栏\"></a>侧边栏</h2><h3 id=\"npm\"><a href=\"#npm\" class=\"headerlink\" title=\"npm\"></a>npm</h3><p>如果你是运行nodejs项目，会出现这一栏，可以让你方便的运行script。修改script时别忘了点击刷新按钮进行更新</p>\n<h2 id=\"其他方便的操作\"><a href=\"#其他方便的操作\" class=\"headerlink\" title=\"其他方便的操作\"></a>其他方便的操作</h2><p>其他方便的功能</p>\n<ul>\n<li>按住shift，鼠标移入图片链接中可以显示出图像及其具体信息。</li>\n<li>右键点击最右侧区域，选择<strong>customize highlight level</strong>可以选择IDE的高亮规则。由低到高分别为不检查、只检查语法、全检查</li>\n<li>配合浏览器插件可以使用debug，在webstorm中直接打断点不知道有多爽。</li>\n<li>基于NodeJS开发大型项目时，由于node_modules文件夹过于庞大导致的项目加载缓慢甚至卡死，可以在File–setting–Editor–File Types中的ignore files and folders增加一项node_modules（注意后面加分号）;可以让webstorm忽略这个文件夹。</li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<p>我本人从事前端开发也有很长一段时间了。从一开始的<a href=\"https://www.editplus.com/\" target=\"_blank\" rel=\"noopener\">editplus</a>，到后来用到<a href=\"https://notepad-plus-plus.org/\" target=\"_blank\" rel=\"noopener\">nodepad++</a>,之后还使用过一些其他的编辑器以及IDE，但我个人最钟爱的还是<a href=\"http://www.jetbrains.com/webstorm/\" target=\"_blank\" rel=\"noopener\">webstrom</a>。相比<a href=\"http://www.jetbrains.com/phpstorm/\" target=\"_blank\" rel=\"noopener\">phpstrom</a>他更倾向于前端方向的开发模式，相比<a href=\"http://www.dcloud.io/\" target=\"_blank\" rel=\"noopener\">hbuilder</a>有简明的操作方式和更直观的操作面板。在我个人看来webstrom的缺点很少，如果能够用的顺手，相信会让你的效率提升数倍。            </p>\n<h2 id=\"下载\"><a href=\"#下载\" class=\"headerlink\" title=\"下载\"></a>下载</h2><p>webstrom下载选择官网<a href=\"http://www.jetbrains.com/webstorm/\" target=\"_blank\" rel=\"noopener\">http://www.jetbrains.com/webstorm/</a>下载。虽然有各种破解版本以及汉化版本满天飞，但相比正版的webstrom少了很多功能和使用的乐趣。可是如果从官网渠道下载webstrom我只能使用30天怎么办？其实只要你在安装时选择<strong>license server</strong>，然后输入<code>http://idea.imsxm.com/</code>，就可以正常使用了。</p>\n<h2 id=\"从设置开始说起\"><a href=\"#从设置开始说起\" class=\"headerlink\" title=\"从设置开始说起\"></a>从设置开始说起</h2><p>你可以点击<strong>File - Settings…</strong> 或者通过快捷键 <strong>ctrl + alt + shift</strong>进入设置（本文所有快捷键仅限于window系统，如果是mac可以在右下角<strong>LF</strong>选项中选择window或者自行查找mac系统快捷键）。  </p>\n<h3 id=\"Appearance-amp-Behavior\"><a href=\"#Appearance-amp-Behavior\" class=\"headerlink\" title=\"Appearance &amp; Behavior\"></a>Appearance &amp; Behavior</h3><p>这一栏的设置不建议修改，但还是应该注意<strong>System Settings</strong>这一栏，这一栏中可以设置一些IDE的行为。例如开启webstorm时是否自动显示上一次的项目、打开新项目时覆盖当前项目还是重新打开一页之类的。事实上这些设置在处开始使用时IDE本身也会有弹框提示，但也可以之后修改。另外，在<strong>Appearance</strong>中可以设置IDE背景（Background Image…），不知道你是否注意到了呢？</p>\n<h3 id=\"Keymap\"><a href=\"#Keymap\" class=\"headerlink\" title=\"Keymap\"></a>Keymap</h3><p>这一栏通常用来设置和修改快捷键。你可以修改或者新加某项功能的快捷键，目录为顶部目录，找到双击即可修改和新增，简单方便。</p>\n<h3 id=\"Editor\"><a href=\"#Editor\" class=\"headerlink\" title=\"Editor\"></a>Editor</h3><p>这一栏负责编辑器的编辑模块，重要的有以下几个设置</p>\n<h4 id=\"General\"><a href=\"#General\" class=\"headerlink\" title=\"General\"></a>General</h4><p>这一栏主要设置<strong>ctrl + 鼠标滚轮</strong>调节字号大小、<strong>自动换行</strong>。<br><img src=\"/blog/img/1.png\" alt=\"1.png\">  </p>\n<h4 id=\"Color-Scheme\"><a href=\"#Color-Scheme\" class=\"headerlink\" title=\"Color Scheme\"></a>Color Scheme</h4><p>这一栏可以更换浏览器主题。你可以使用自带的几种主题，也可以下载其他主题。下载地址：<a href=\"http://color-themes.com/?view=index\" target=\"_blank\" rel=\"noopener\">http://color-themes.com/?view=index</a>，方式很简单，点击图片可以进行主题预览，选中自己喜欢的主题，下载出来。下载很快，几乎是点击下载的瞬间完成，然后我们就可以安装到自己webstrom中。安装方法：点击左上角的<strong>File–Setting</strong>，选中<strong>Import Settings</strong>，进入选择界面，选择你下载好的主题文件（后缀为.jar），编辑器会经过俩次提示，全部选择同意，然后重启，你就会发现主题安装成功了。在这里有一个小插曲，如果你之前已经打开了webstrom，那么在选择文件的时候有可能会无法找到那个文件，这是因为webstrom本身的缓存在作怪，只要你保证进入到了正确的文件夹，点击刷新，那个文件一定会出现在你的视线中。<br><img src=\"/blog/img/2.jpg\" alt=\"img2\"><img src=\"/blog/img/3.jpg\" alt=\"img3\">     </p>\n<h4 id=\"Code-Style\"><a href=\"#Code-Style\" class=\"headerlink\" title=\"Code Style\"></a>Code Style</h4><p>可以设置每种类型文件的格式化参数</p>\n<h4 id=\"File-and-Code-Templates\"><a href=\"#File-and-Code-Templates\" class=\"headerlink\" title=\"File and Code Templates\"></a>File and Code Templates</h4><p>这一栏可以设置自定义的模板，这样在新建文件时可以省去重复操作。</p>\n<h3 id=\"Plugins\"><a href=\"#Plugins\" class=\"headerlink\" title=\"Plugins\"></a>Plugins</h3><p>这里可以设置IDE插件。比如我在写博客时自然希望他可以支持markdown的操作（虽然博客在<a href=\"https://atom.io/\" target=\"_blank\" rel=\"noopener\">atom</a>中编辑更爽的说）。在这里添加markdown的插件。<br><img src=\"/blog/img/4.png\" alt=\"img4\"><br>当然你也可以根据需要安装其他功能的插件。</p>\n<h3 id=\"Version-Control\"><a href=\"#Version-Control\" class=\"headerlink\" title=\"Version Control\"></a>Version Control</h3><p>这里设置版本控制。但webstorm自动处理好了这些设置，一般我们不会在这里进行操作。除非你想添加github仓库。但这一操作比较麻烦，我不会赘述。你可以<a href=\"https://www.cnblogs.com/vanstrict/p/5677716.html\" target=\"_blank\" rel=\"noopener\">点击这里</a>进行配置。<br>关于git的操作我们通常直接进行操作</p>\n<ul>\n<li>如果你想克隆一个仓库，你可以点击导航<strong>VCS - git - clone</strong>直接克隆并打开一个项目。</li>\n<li>对于已被管理的项目，右键鼠标同样有<strong>git</strong>选项，可以进行所有的git操作。值得注意的是<ul>\n<li>使用快捷键ctrl + k可以进行commit操作，ctrl + shift + k 可以进行push操作</li>\n<li>右下角有git: master 之类选项，可以在这里更方便的切换和创建分支</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"Language-amp-amp-Frameworks\"><a href=\"#Language-amp-amp-Frameworks\" class=\"headerlink\" title=\"Language &amp;&amp; Frameworks\"></a>Language &amp;&amp; Frameworks</h3><h4 id=\"JavaScript\"><a href=\"#JavaScript\" class=\"headerlink\" title=\"JavaScript\"></a>JavaScript</h4><p>在这里可以设置js的版本，在子选项中通常使用的是<strong>Libraries</strong>，可以设置IDE支持的语法和提示。<br>你可以选择下载需要的语法支持（jquery之类）。</p>\n<h4 id=\"Node-js-and-NPM\"><a href=\"#Node-js-and-NPM\" class=\"headerlink\" title=\"Node.js and NPM\"></a>Node.js and NPM</h4><p>webstrom会主动去寻找nodeJs程序而不用你手动添加，之后你就可以在IDE中享受编辑器的自动补全以及错误提示等方便的功能，并且下方会显示你安装过的packages，并可以搜索版本是否为最新版本并提示升级。另外，在新创建项目时，我们可以指定文件为<strong>Node.js express App</strong>,非常方便。<br><img src=\"/blog/img/5.png\" alt=\"img5\"><img src=\"/blog/img/6.png\" alt=\"img6\"></p>\n<h3 id=\"Tools\"><a href=\"#Tools\" class=\"headerlink\" title=\"Tools\"></a>Tools</h3><h4 id=\"File-watchers\"><a href=\"#File-watchers\" class=\"headerlink\" title=\"File watchers\"></a>File watchers</h4><p>这里可以设置自动编译。比如很多前端比较前沿的技术（babel、sass之类），在不需要非常复杂配置的情况下webstorm提供自动编译，省去配置文件这一环节。这一功能的前提是你向webstorm添加了编译功能：点击加号，在program中填入安装文件的.cmd文件，在argument中定义你想要的编译方式就可以了。</p>\n<h2 id=\"底部操作栏\"><a href=\"#底部操作栏\" class=\"headerlink\" title=\"底部操作栏\"></a>底部操作栏</h2><p>如果你的底部没有操作栏，点击左下角的小电脑。</p>\n<h3 id=\"TODO\"><a href=\"#TODO\" class=\"headerlink\" title=\"TODO\"></a>TODO</h3><p>你可以在webstorm中使用TODO注释，这样做的好处是你可以通过底部的TODO功能随时找到他。</p>\n<h3 id=\"Terminal\"><a href=\"#Terminal\" class=\"headerlink\" title=\"Terminal\"></a>Terminal</h3><p>不解释，所有开发者都懂得</p>\n<h3 id=\"run\"><a href=\"#run\" class=\"headerlink\" title=\"run\"></a>run</h3><p>运行js文件的利器。尤其在nodejs开发时更为明显。</p>\n<h2 id=\"侧边栏\"><a href=\"#侧边栏\" class=\"headerlink\" title=\"侧边栏\"></a>侧边栏</h2><h3 id=\"npm\"><a href=\"#npm\" class=\"headerlink\" title=\"npm\"></a>npm</h3><p>如果你是运行nodejs项目，会出现这一栏，可以让你方便的运行script。修改script时别忘了点击刷新按钮进行更新</p>\n<h2 id=\"其他方便的操作\"><a href=\"#其他方便的操作\" class=\"headerlink\" title=\"其他方便的操作\"></a>其他方便的操作</h2><p>其他方便的功能</p>\n<ul>\n<li>按住shift，鼠标移入图片链接中可以显示出图像及其具体信息。</li>\n<li>右键点击最右侧区域，选择<strong>customize highlight level</strong>可以选择IDE的高亮规则。由低到高分别为不检查、只检查语法、全检查</li>\n<li>配合浏览器插件可以使用debug，在webstorm中直接打断点不知道有多爽。</li>\n<li>基于NodeJS开发大型项目时，由于node_modules文件夹过于庞大导致的项目加载缓慢甚至卡死，可以在File–setting–Editor–File Types中的ignore files and folders增加一项node_modules（注意后面加分号）;可以让webstorm忽略这个文件夹。</li>\n</ul>\n"},{"title":"全局设置npm镜像","date":"2017-11-15T00:43:46.000Z","description":"全局设置npm镜像","_content":"通过命令`npm config set registry https://registry.npm.taobao.org`设置        \n或者通过命令`npm config ls -s`查看详细的全局配置         \n留意一个选项`globalconfig`，地址指向一个文件npmrc；一个`userconfig`，地址指向一个文件.npmrc（如果没有新建一个），添加以下内容即可\n```\nregistry=https://registry.npm.taobao.org/\n```","source":"_posts/全局设置npm镜像.md","raw":"title: 全局设置npm镜像\ntags: [NodeJs]\ndate: 2017-11-15 08:43:46\ncategories: [NodeJs]\ndescription: 全局设置npm镜像\n---\n通过命令`npm config set registry https://registry.npm.taobao.org`设置        \n或者通过命令`npm config ls -s`查看详细的全局配置         \n留意一个选项`globalconfig`，地址指向一个文件npmrc；一个`userconfig`，地址指向一个文件.npmrc（如果没有新建一个），添加以下内容即可\n```\nregistry=https://registry.npm.taobao.org/\n```","slug":"全局设置npm镜像","published":1,"updated":"2019-09-29T11:22:34.500Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck3jm8gw30010z0bt0pdjlohl","content":"<p>通过命令<code>npm config set registry https://registry.npm.taobao.org</code>设置<br>或者通过命令<code>npm config ls -s</code>查看详细的全局配置<br>留意一个选项<code>globalconfig</code>，地址指向一个文件npmrc；一个<code>userconfig</code>，地址指向一个文件.npmrc（如果没有新建一个），添加以下内容即可<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">registry=https://registry.npm.taobao.org/</span><br></pre></td></tr></table></figure></p>\n","site":{"data":{}},"excerpt":"","more":"<p>通过命令<code>npm config set registry https://registry.npm.taobao.org</code>设置<br>或者通过命令<code>npm config ls -s</code>查看详细的全局配置<br>留意一个选项<code>globalconfig</code>，地址指向一个文件npmrc；一个<code>userconfig</code>，地址指向一个文件.npmrc（如果没有新建一个），添加以下内容即可<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">registry=https://registry.npm.taobao.org/</span><br></pre></td></tr></table></figure></p>\n"},{"title":"关于sticky-footer兼容性最好的一种解决方案","date":"2017-10-31T01:16:58.000Z","description":"sticky-footer解决方案","_content":"## 什么是 sticky-footer？\nsticky-footer是一种最古老的同时也最常见的网页效果，具体表现为：当内容足够时，页脚被内容向下推送，如果内容不足以撑开高度，页脚应当粘贴在窗口底部。这种效果非常常见且看似简单，但实际上实现起来比想象中要复杂得多。目前为止至少有5种方式可以实现sticky-footer布局，但各有优势和劣势，这里介绍兼容性最强的一种写法。\n```\n/* html */\n<body>\n  <div class=\"wrapper\">\n    <div class=\"content\">这是内容部分</div>\n  </div>\n  <div class=\"footer\">这是页脚部分</div>\n</body>\n\n/* css */\nhtml,body{\n  height:100%;\n  margin:0;\n  padding:0\n}\n.wrapper{\n  min-height: 100%;\n  background: #ace;\n}\n.wrapper .content{\n  padding-bottom: 100px;\n}\n.footer{\n  position: relative;\n  height:100px;\n  background: #333;\n  margin-top: -100px;\n}\n```\n以防万一，需要清除浮动\n```\n.clearfix {\n  display:inline-block;\n}\n.clearfix:after {\n  content: \"\";\n  display: block;\n  clear: both;\n}\n```\n","source":"_posts/关于sticky-footer兼容性最好的一种解决方案.md","raw":"title: 关于sticky-footer兼容性最好的一种解决方案\ntags: [css]\ndate: 2017-10-31 09:16:58\ncategories: [css]\ndescription: sticky-footer解决方案\n---\n## 什么是 sticky-footer？\nsticky-footer是一种最古老的同时也最常见的网页效果，具体表现为：当内容足够时，页脚被内容向下推送，如果内容不足以撑开高度，页脚应当粘贴在窗口底部。这种效果非常常见且看似简单，但实际上实现起来比想象中要复杂得多。目前为止至少有5种方式可以实现sticky-footer布局，但各有优势和劣势，这里介绍兼容性最强的一种写法。\n```\n/* html */\n<body>\n  <div class=\"wrapper\">\n    <div class=\"content\">这是内容部分</div>\n  </div>\n  <div class=\"footer\">这是页脚部分</div>\n</body>\n\n/* css */\nhtml,body{\n  height:100%;\n  margin:0;\n  padding:0\n}\n.wrapper{\n  min-height: 100%;\n  background: #ace;\n}\n.wrapper .content{\n  padding-bottom: 100px;\n}\n.footer{\n  position: relative;\n  height:100px;\n  background: #333;\n  margin-top: -100px;\n}\n```\n以防万一，需要清除浮动\n```\n.clearfix {\n  display:inline-block;\n}\n.clearfix:after {\n  content: \"\";\n  display: block;\n  clear: both;\n}\n```\n","slug":"关于sticky-footer兼容性最好的一种解决方案","published":1,"updated":"2019-09-29T11:22:34.500Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck3jm8gw40013z0btqj9yvlcy","content":"<h2 id=\"什么是-sticky-footer？\"><a href=\"#什么是-sticky-footer？\" class=\"headerlink\" title=\"什么是 sticky-footer？\"></a>什么是 sticky-footer？</h2><p>sticky-footer是一种最古老的同时也最常见的网页效果，具体表现为：当内容足够时，页脚被内容向下推送，如果内容不足以撑开高度，页脚应当粘贴在窗口底部。这种效果非常常见且看似简单，但实际上实现起来比想象中要复杂得多。目前为止至少有5种方式可以实现sticky-footer布局，但各有优势和劣势，这里介绍兼容性最强的一种写法。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/* html */</span><br><span class=\"line\">&lt;body&gt;</span><br><span class=\"line\">  &lt;div class=&quot;wrapper&quot;&gt;</span><br><span class=\"line\">    &lt;div class=&quot;content&quot;&gt;这是内容部分&lt;/div&gt;</span><br><span class=\"line\">  &lt;/div&gt;</span><br><span class=\"line\">  &lt;div class=&quot;footer&quot;&gt;这是页脚部分&lt;/div&gt;</span><br><span class=\"line\">&lt;/body&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">/* css */</span><br><span class=\"line\">html,body&#123;</span><br><span class=\"line\">  height:100%;</span><br><span class=\"line\">  margin:0;</span><br><span class=\"line\">  padding:0</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">.wrapper&#123;</span><br><span class=\"line\">  min-height: 100%;</span><br><span class=\"line\">  background: #ace;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">.wrapper .content&#123;</span><br><span class=\"line\">  padding-bottom: 100px;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">.footer&#123;</span><br><span class=\"line\">  position: relative;</span><br><span class=\"line\">  height:100px;</span><br><span class=\"line\">  background: #333;</span><br><span class=\"line\">  margin-top: -100px;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>以防万一，需要清除浮动<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">.clearfix &#123;</span><br><span class=\"line\">  display:inline-block;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">.clearfix:after &#123;</span><br><span class=\"line\">  content: &quot;&quot;;</span><br><span class=\"line\">  display: block;</span><br><span class=\"line\">  clear: both;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"什么是-sticky-footer？\"><a href=\"#什么是-sticky-footer？\" class=\"headerlink\" title=\"什么是 sticky-footer？\"></a>什么是 sticky-footer？</h2><p>sticky-footer是一种最古老的同时也最常见的网页效果，具体表现为：当内容足够时，页脚被内容向下推送，如果内容不足以撑开高度，页脚应当粘贴在窗口底部。这种效果非常常见且看似简单，但实际上实现起来比想象中要复杂得多。目前为止至少有5种方式可以实现sticky-footer布局，但各有优势和劣势，这里介绍兼容性最强的一种写法。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/* html */</span><br><span class=\"line\">&lt;body&gt;</span><br><span class=\"line\">  &lt;div class=&quot;wrapper&quot;&gt;</span><br><span class=\"line\">    &lt;div class=&quot;content&quot;&gt;这是内容部分&lt;/div&gt;</span><br><span class=\"line\">  &lt;/div&gt;</span><br><span class=\"line\">  &lt;div class=&quot;footer&quot;&gt;这是页脚部分&lt;/div&gt;</span><br><span class=\"line\">&lt;/body&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">/* css */</span><br><span class=\"line\">html,body&#123;</span><br><span class=\"line\">  height:100%;</span><br><span class=\"line\">  margin:0;</span><br><span class=\"line\">  padding:0</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">.wrapper&#123;</span><br><span class=\"line\">  min-height: 100%;</span><br><span class=\"line\">  background: #ace;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">.wrapper .content&#123;</span><br><span class=\"line\">  padding-bottom: 100px;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">.footer&#123;</span><br><span class=\"line\">  position: relative;</span><br><span class=\"line\">  height:100px;</span><br><span class=\"line\">  background: #333;</span><br><span class=\"line\">  margin-top: -100px;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>以防万一，需要清除浮动<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">.clearfix &#123;</span><br><span class=\"line\">  display:inline-block;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">.clearfix:after &#123;</span><br><span class=\"line\">  content: &quot;&quot;;</span><br><span class=\"line\">  display: block;</span><br><span class=\"line\">  clear: both;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n"},{"title":"关于vue-awesome-swiper以及vue-cli升级随笔","date":"2017-12-10T01:58:04.000Z","description":"解决一些关于升级带来的困扰","_content":"## 关于 vue-cli\nvue-cli 在最近更新到了2.9.x版本，新的 vue-lci 模板使用了更高版本的webpack进行打包，因而弃用了 express并改变了构建结构，对我本人目前遇到的问题：\n### 如何在基础上设置自己的接口\n在之前版本可以在 dev-server.js 中通过express方便的设计路由并插入，而现有版本移除了express并且删除了dev-server.js文件，应该怎么做？新版本中使用了webpack-dev-server，查找文档后发现有一个接口方法为 devServer.before ,可以在这个方法中定义api接口。\n```\n// webpack.dev.conf.js\n\ndevServer: {\n  ......\n  before(app){\n    app.get('/api',function (req, res) {\n      res.json({\n        author: 'lost-dream',\n        age: 24,\n        sex: 'man'\n      })\n    });\n  }\n}\n```\n### 使用css预处理器sass\n新版本中想使用sass(其他预处理器我没有尝试)编译，需要手动配置。\n+ 安装依赖 `cnpm install -D node-sass sass-loader`\n+ 添加loader\n```\nrules: [\n  ...\n  {\n    test: /\\.(scss|sass)$/,\n    loaders: ['style-loader', 'css-loader', 'sass-loader']\n  }\n]\n```\n## 关于vue-awesome-swiper\n由于 swiper 更新到 swiper4，因此该插件在最近也得到了升级。首先他优化了文档（之前版本文档不全，为我带来了不少困扰），其次更新了使用的结构和方式，不过无论如何变化，vue-awesome-swiper始终坚持使用swpierAPI，因此有其他问题，还是要到swiper官网寻找答案。","source":"_posts/关于vue-awesome-swiper以及vue-cli升级随笔.md","raw":"title: 关于vue-awesome-swiper以及vue-cli升级随笔\ntags: [vue,carousel]\ndate: 2017-12-10 09:58:04\ncategories: [swiper]\ndescription: 解决一些关于升级带来的困扰\n---\n## 关于 vue-cli\nvue-cli 在最近更新到了2.9.x版本，新的 vue-lci 模板使用了更高版本的webpack进行打包，因而弃用了 express并改变了构建结构，对我本人目前遇到的问题：\n### 如何在基础上设置自己的接口\n在之前版本可以在 dev-server.js 中通过express方便的设计路由并插入，而现有版本移除了express并且删除了dev-server.js文件，应该怎么做？新版本中使用了webpack-dev-server，查找文档后发现有一个接口方法为 devServer.before ,可以在这个方法中定义api接口。\n```\n// webpack.dev.conf.js\n\ndevServer: {\n  ......\n  before(app){\n    app.get('/api',function (req, res) {\n      res.json({\n        author: 'lost-dream',\n        age: 24,\n        sex: 'man'\n      })\n    });\n  }\n}\n```\n### 使用css预处理器sass\n新版本中想使用sass(其他预处理器我没有尝试)编译，需要手动配置。\n+ 安装依赖 `cnpm install -D node-sass sass-loader`\n+ 添加loader\n```\nrules: [\n  ...\n  {\n    test: /\\.(scss|sass)$/,\n    loaders: ['style-loader', 'css-loader', 'sass-loader']\n  }\n]\n```\n## 关于vue-awesome-swiper\n由于 swiper 更新到 swiper4，因此该插件在最近也得到了升级。首先他优化了文档（之前版本文档不全，为我带来了不少困扰），其次更新了使用的结构和方式，不过无论如何变化，vue-awesome-swiper始终坚持使用swpierAPI，因此有其他问题，还是要到swiper官网寻找答案。","slug":"关于vue-awesome-swiper以及vue-cli升级随笔","published":1,"updated":"2019-09-29T11:34:50.416Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck3jm8gw50017z0btqnbtadjs","content":"<h2 id=\"关于-vue-cli\"><a href=\"#关于-vue-cli\" class=\"headerlink\" title=\"关于 vue-cli\"></a>关于 vue-cli</h2><p>vue-cli 在最近更新到了2.9.x版本，新的 vue-lci 模板使用了更高版本的webpack进行打包，因而弃用了 express并改变了构建结构，对我本人目前遇到的问题：</p>\n<h3 id=\"如何在基础上设置自己的接口\"><a href=\"#如何在基础上设置自己的接口\" class=\"headerlink\" title=\"如何在基础上设置自己的接口\"></a>如何在基础上设置自己的接口</h3><p>在之前版本可以在 dev-server.js 中通过express方便的设计路由并插入，而现有版本移除了express并且删除了dev-server.js文件，应该怎么做？新版本中使用了webpack-dev-server，查找文档后发现有一个接口方法为 devServer.before ,可以在这个方法中定义api接口。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">// webpack.dev.conf.js</span><br><span class=\"line\"></span><br><span class=\"line\">devServer: &#123;</span><br><span class=\"line\">  ......</span><br><span class=\"line\">  before(app)&#123;</span><br><span class=\"line\">    app.get(&apos;/api&apos;,function (req, res) &#123;</span><br><span class=\"line\">      res.json(&#123;</span><br><span class=\"line\">        author: &apos;lost-dream&apos;,</span><br><span class=\"line\">        age: 24,</span><br><span class=\"line\">        sex: &apos;man&apos;</span><br><span class=\"line\">      &#125;)</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"使用css预处理器sass\"><a href=\"#使用css预处理器sass\" class=\"headerlink\" title=\"使用css预处理器sass\"></a>使用css预处理器sass</h3><p>新版本中想使用sass(其他预处理器我没有尝试)编译，需要手动配置。</p>\n<ul>\n<li>安装依赖 <code>cnpm install -D node-sass sass-loader</code></li>\n<li>添加loader<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">rules: [</span><br><span class=\"line\">  ...</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    test: /\\.(scss|sass)$/,</span><br><span class=\"line\">    loaders: [&apos;style-loader&apos;, &apos;css-loader&apos;, &apos;sass-loader&apos;]</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">]</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<h2 id=\"关于vue-awesome-swiper\"><a href=\"#关于vue-awesome-swiper\" class=\"headerlink\" title=\"关于vue-awesome-swiper\"></a>关于vue-awesome-swiper</h2><p>由于 swiper 更新到 swiper4，因此该插件在最近也得到了升级。首先他优化了文档（之前版本文档不全，为我带来了不少困扰），其次更新了使用的结构和方式，不过无论如何变化，vue-awesome-swiper始终坚持使用swpierAPI，因此有其他问题，还是要到swiper官网寻找答案。</p>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"关于-vue-cli\"><a href=\"#关于-vue-cli\" class=\"headerlink\" title=\"关于 vue-cli\"></a>关于 vue-cli</h2><p>vue-cli 在最近更新到了2.9.x版本，新的 vue-lci 模板使用了更高版本的webpack进行打包，因而弃用了 express并改变了构建结构，对我本人目前遇到的问题：</p>\n<h3 id=\"如何在基础上设置自己的接口\"><a href=\"#如何在基础上设置自己的接口\" class=\"headerlink\" title=\"如何在基础上设置自己的接口\"></a>如何在基础上设置自己的接口</h3><p>在之前版本可以在 dev-server.js 中通过express方便的设计路由并插入，而现有版本移除了express并且删除了dev-server.js文件，应该怎么做？新版本中使用了webpack-dev-server，查找文档后发现有一个接口方法为 devServer.before ,可以在这个方法中定义api接口。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">// webpack.dev.conf.js</span><br><span class=\"line\"></span><br><span class=\"line\">devServer: &#123;</span><br><span class=\"line\">  ......</span><br><span class=\"line\">  before(app)&#123;</span><br><span class=\"line\">    app.get(&apos;/api&apos;,function (req, res) &#123;</span><br><span class=\"line\">      res.json(&#123;</span><br><span class=\"line\">        author: &apos;lost-dream&apos;,</span><br><span class=\"line\">        age: 24,</span><br><span class=\"line\">        sex: &apos;man&apos;</span><br><span class=\"line\">      &#125;)</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"使用css预处理器sass\"><a href=\"#使用css预处理器sass\" class=\"headerlink\" title=\"使用css预处理器sass\"></a>使用css预处理器sass</h3><p>新版本中想使用sass(其他预处理器我没有尝试)编译，需要手动配置。</p>\n<ul>\n<li>安装依赖 <code>cnpm install -D node-sass sass-loader</code></li>\n<li>添加loader<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">rules: [</span><br><span class=\"line\">  ...</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    test: /\\.(scss|sass)$/,</span><br><span class=\"line\">    loaders: [&apos;style-loader&apos;, &apos;css-loader&apos;, &apos;sass-loader&apos;]</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">]</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<h2 id=\"关于vue-awesome-swiper\"><a href=\"#关于vue-awesome-swiper\" class=\"headerlink\" title=\"关于vue-awesome-swiper\"></a>关于vue-awesome-swiper</h2><p>由于 swiper 更新到 swiper4，因此该插件在最近也得到了升级。首先他优化了文档（之前版本文档不全，为我带来了不少困扰），其次更新了使用的结构和方式，不过无论如何变化，vue-awesome-swiper始终坚持使用swpierAPI，因此有其他问题，还是要到swiper官网寻找答案。</p>\n"},{"title":"关于vue（全家桶）的一些使用心得","date":"2018-07-15T07:28:46.000Z","description":"vue重够jquery项目之后的一些心得","_content":"# 写在前面\n最早之前开发的项目随着业务逻辑的迭代，到达现在实在让人无法接受，于是不得不进行了重构，紧锣密鼓的几个月之后终于完成。在这里说一下自己的一些感受。\n# 关于vue-cli\nvue-cli对vue进行了非常多的处理，尽量让开发者可以专心处理业务的逻辑而不用关心底层的部分。尽管如此，还是需要另外配置很多东西。\n## 预处理器（eg:sass）\n+ 新版本的脚手架工具配置好了预处理器的部分，但没有集成预处理语言，也就是说，你不再需要配置预处理器，但还是应该install它。\n+ 在一些情况下， sass的编译会出现异常。如果你能确信自己写的没有错，那问题确实出现在sass上，一般情况下sass的语法无法处理多层级的样式叠加。例如：我的项目引用了swiper，并全局使用swiper。.css。之后，又将swiper封装为组件，并给组件一些额外的样式，最后在组件调用时第三次添加特殊的样式，如此叠加css导致sass处理出现了问题。这个时候需要`deep`模式。\n    ```css\n        /deep/ .my-swiper{\n            ...\n        }\n    ```\n    \n## webpack\n+ host 0.0.0.0          \n开发移动应用，需要随时在手机上观察效果。在`package.json`添加\n    ```\n      \"scripts\": {\n        \"dev\": \"webpack-dev-server --inline --progress --config build/webpack.dev.conf.js --host 0.0.0.0\",\n       },\n    ```\n    \n+ 关于背景图打包后出错的问题\n    开发大型项目当然需要对src目录做一些修改，但添加层级也会导致webpack打包出错。我的项目通过分割组件构成，组建内部专属的图片直接放在组件文件内部。具体结构是这样的\n    ```\n    ├─src\n    │  ├─assets\n    │  │  ├─images\n    │  │  ├─js\n    │  │  ├─css\n    │  │  ├─font\n    │  ├─ pages\n    │  │  ├─Index\n    │  │  │ ├─Index.vue\n    │  │  │ ├─1.jpg\n    │  │  ├─Mine\n    │  │  ├─...\n    ```\n    这个时候图片打包需要重新配置\n    ```\n        build/utils.js\n        function generateLoaders (loader, loaderOptions) {\n            ...\n            if (options.extract) {\n                  return ExtractTextPlugin.extract({\n                    use: loaders,\n                    fallback: 'vue-style-loader',\n                    publicPath: '../../' // add\n                  })\n                } else {\n                  return ['vue-style-loader'].concat(loaders)\n                }\n        }\n    ```\n    \n## 关于axios\naxios的配置我想说的只有拦截器。可以在请求或响应被 then 或 catch 处理前拦截它们\n```js\nimport axios from 'axios'\nimport {Base64} from 'js-base64'\n\nimport Router from '@/router/index'\n\nconst $axios = axios.create({\n  baseURL: hostURL + 'TouchStoneServiceNew'\n})\n\n$axios.interceptors.request.use(function (config) {\n\n  config.headers['Content-Type'] = 'application/x-www-form-urlencoded'\n  config.headers['Authorization'] = authorization\n  return config\n}, function (error) {\n  return Promise.reject(error)\n})\n\n$axios.interceptors.response.use(\n  response => {\n    if (response.data.resultCode === '505' || response.data.resultCode === '506') {\n      setTimeout(() => {\n     \n        Router.push({\n          name: 'loginRegister',\n\n        })\n      }, 2000)\n    }\n    return response\n  },\n  error => {\n    if (error.response) {\n      switch (error.response.status) {\n        case 401: // 返回 401 跳转到登录页面\n      \n            Router.push({\n              path: 'loginRegister',\n              query: {redirect: Router.currentRoute.fullPath}\n            })\n   \n      }\n    }\n    return Promise.reject(error) // 返回接口返回的错误信息\n  })\n\n\n\n```\n在请求发送之前向header添加content-type和authorization                      \n请求返回之后拦截状态做处理\n\n## vuex\nvuex用来管理vue状态确实很方便，但**只能在组件中需要共享的数据才使用vuex，简单地说就是路由不会跳转**。因为vuex虽然保存数据，但因为vue本身就是单页项目，如果用户刷新网页就全部丢失了。一些重要的信息海慧寺因该保存在cookie和localstorage里。至于语法可以到官网查看，非常详细。","source":"_posts/关于vue（全家桶）的一些使用心得.md","raw":"title: 关于vue（全家桶）的一些使用心得\ntags: [vue, vuex, axios, webpack, es6+]\ndate: 2018-07-15 15:28:46\ncategories: [vue]\ndescription: vue重够jquery项目之后的一些心得\n---\n# 写在前面\n最早之前开发的项目随着业务逻辑的迭代，到达现在实在让人无法接受，于是不得不进行了重构，紧锣密鼓的几个月之后终于完成。在这里说一下自己的一些感受。\n# 关于vue-cli\nvue-cli对vue进行了非常多的处理，尽量让开发者可以专心处理业务的逻辑而不用关心底层的部分。尽管如此，还是需要另外配置很多东西。\n## 预处理器（eg:sass）\n+ 新版本的脚手架工具配置好了预处理器的部分，但没有集成预处理语言，也就是说，你不再需要配置预处理器，但还是应该install它。\n+ 在一些情况下， sass的编译会出现异常。如果你能确信自己写的没有错，那问题确实出现在sass上，一般情况下sass的语法无法处理多层级的样式叠加。例如：我的项目引用了swiper，并全局使用swiper。.css。之后，又将swiper封装为组件，并给组件一些额外的样式，最后在组件调用时第三次添加特殊的样式，如此叠加css导致sass处理出现了问题。这个时候需要`deep`模式。\n    ```css\n        /deep/ .my-swiper{\n            ...\n        }\n    ```\n    \n## webpack\n+ host 0.0.0.0          \n开发移动应用，需要随时在手机上观察效果。在`package.json`添加\n    ```\n      \"scripts\": {\n        \"dev\": \"webpack-dev-server --inline --progress --config build/webpack.dev.conf.js --host 0.0.0.0\",\n       },\n    ```\n    \n+ 关于背景图打包后出错的问题\n    开发大型项目当然需要对src目录做一些修改，但添加层级也会导致webpack打包出错。我的项目通过分割组件构成，组建内部专属的图片直接放在组件文件内部。具体结构是这样的\n    ```\n    ├─src\n    │  ├─assets\n    │  │  ├─images\n    │  │  ├─js\n    │  │  ├─css\n    │  │  ├─font\n    │  ├─ pages\n    │  │  ├─Index\n    │  │  │ ├─Index.vue\n    │  │  │ ├─1.jpg\n    │  │  ├─Mine\n    │  │  ├─...\n    ```\n    这个时候图片打包需要重新配置\n    ```\n        build/utils.js\n        function generateLoaders (loader, loaderOptions) {\n            ...\n            if (options.extract) {\n                  return ExtractTextPlugin.extract({\n                    use: loaders,\n                    fallback: 'vue-style-loader',\n                    publicPath: '../../' // add\n                  })\n                } else {\n                  return ['vue-style-loader'].concat(loaders)\n                }\n        }\n    ```\n    \n## 关于axios\naxios的配置我想说的只有拦截器。可以在请求或响应被 then 或 catch 处理前拦截它们\n```js\nimport axios from 'axios'\nimport {Base64} from 'js-base64'\n\nimport Router from '@/router/index'\n\nconst $axios = axios.create({\n  baseURL: hostURL + 'TouchStoneServiceNew'\n})\n\n$axios.interceptors.request.use(function (config) {\n\n  config.headers['Content-Type'] = 'application/x-www-form-urlencoded'\n  config.headers['Authorization'] = authorization\n  return config\n}, function (error) {\n  return Promise.reject(error)\n})\n\n$axios.interceptors.response.use(\n  response => {\n    if (response.data.resultCode === '505' || response.data.resultCode === '506') {\n      setTimeout(() => {\n     \n        Router.push({\n          name: 'loginRegister',\n\n        })\n      }, 2000)\n    }\n    return response\n  },\n  error => {\n    if (error.response) {\n      switch (error.response.status) {\n        case 401: // 返回 401 跳转到登录页面\n      \n            Router.push({\n              path: 'loginRegister',\n              query: {redirect: Router.currentRoute.fullPath}\n            })\n   \n      }\n    }\n    return Promise.reject(error) // 返回接口返回的错误信息\n  })\n\n\n\n```\n在请求发送之前向header添加content-type和authorization                      \n请求返回之后拦截状态做处理\n\n## vuex\nvuex用来管理vue状态确实很方便，但**只能在组件中需要共享的数据才使用vuex，简单地说就是路由不会跳转**。因为vuex虽然保存数据，但因为vue本身就是单页项目，如果用户刷新网页就全部丢失了。一些重要的信息海慧寺因该保存在cookie和localstorage里。至于语法可以到官网查看，非常详细。","slug":"关于vue（全家桶）的一些使用心得","published":1,"updated":"2019-09-29T11:22:34.500Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck3jm8gw60019z0btf31ifpkv","content":"<h1 id=\"写在前面\"><a href=\"#写在前面\" class=\"headerlink\" title=\"写在前面\"></a>写在前面</h1><p>最早之前开发的项目随着业务逻辑的迭代，到达现在实在让人无法接受，于是不得不进行了重构，紧锣密鼓的几个月之后终于完成。在这里说一下自己的一些感受。</p>\n<h1 id=\"关于vue-cli\"><a href=\"#关于vue-cli\" class=\"headerlink\" title=\"关于vue-cli\"></a>关于vue-cli</h1><p>vue-cli对vue进行了非常多的处理，尽量让开发者可以专心处理业务的逻辑而不用关心底层的部分。尽管如此，还是需要另外配置很多东西。</p>\n<h2 id=\"预处理器（eg-sass）\"><a href=\"#预处理器（eg-sass）\" class=\"headerlink\" title=\"预处理器（eg:sass）\"></a>预处理器（eg:sass）</h2><ul>\n<li>新版本的脚手架工具配置好了预处理器的部分，但没有集成预处理语言，也就是说，你不再需要配置预处理器，但还是应该install它。</li>\n<li>在一些情况下， sass的编译会出现异常。如果你能确信自己写的没有错，那问题确实出现在sass上，一般情况下sass的语法无法处理多层级的样式叠加。例如：我的项目引用了swiper，并全局使用swiper。.css。之后，又将swiper封装为组件，并给组件一些额外的样式，最后在组件调用时第三次添加特殊的样式，如此叠加css导致sass处理出现了问题。这个时候需要<code>deep</code>模式。  <figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/deep/ .my-swiper&#123;</span><br><span class=\"line\">    ...</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<h2 id=\"webpack\"><a href=\"#webpack\" class=\"headerlink\" title=\"webpack\"></a>webpack</h2><ul>\n<li>host 0.0.0.0<br>开发移动应用，需要随时在手机上观察效果。在<code>package.json</code>添加  <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&quot;scripts&quot;: &#123;</span><br><span class=\"line\">  &quot;dev&quot;: &quot;webpack-dev-server --inline --progress --config build/webpack.dev.conf.js --host 0.0.0.0&quot;,</span><br><span class=\"line\"> &#125;,</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<ul>\n<li><p>关于背景图打包后出错的问题<br>  开发大型项目当然需要对src目录做一些修改，但添加层级也会导致webpack打包出错。我的项目通过分割组件构成，组建内部专属的图片直接放在组件文件内部。具体结构是这样的</p>\n  <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">├─src</span><br><span class=\"line\">│  ├─assets</span><br><span class=\"line\">│  │  ├─images</span><br><span class=\"line\">│  │  ├─js</span><br><span class=\"line\">│  │  ├─css</span><br><span class=\"line\">│  │  ├─font</span><br><span class=\"line\">│  ├─ pages</span><br><span class=\"line\">│  │  ├─Index</span><br><span class=\"line\">│  │  │ ├─Index.vue</span><br><span class=\"line\">│  │  │ ├─1.jpg</span><br><span class=\"line\">│  │  ├─Mine</span><br><span class=\"line\">│  │  ├─...</span><br></pre></td></tr></table></figure>\n<p>  这个时候图片打包需要重新配置</p>\n  <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">build/utils.js</span><br><span class=\"line\">function generateLoaders (loader, loaderOptions) &#123;</span><br><span class=\"line\">    ...</span><br><span class=\"line\">    if (options.extract) &#123;</span><br><span class=\"line\">          return ExtractTextPlugin.extract(&#123;</span><br><span class=\"line\">            use: loaders,</span><br><span class=\"line\">            fallback: &apos;vue-style-loader&apos;,</span><br><span class=\"line\">            publicPath: &apos;../../&apos; // add</span><br><span class=\"line\">          &#125;)</span><br><span class=\"line\">        &#125; else &#123;</span><br><span class=\"line\">          return [&apos;vue-style-loader&apos;].concat(loaders)</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<h2 id=\"关于axios\"><a href=\"#关于axios\" class=\"headerlink\" title=\"关于axios\"></a>关于axios</h2><p>axios的配置我想说的只有拦截器。可以在请求或响应被 then 或 catch 处理前拦截它们<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> axios <span class=\"keyword\">from</span> <span class=\"string\">'axios'</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> &#123;Base64&#125; <span class=\"keyword\">from</span> <span class=\"string\">'js-base64'</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> Router <span class=\"keyword\">from</span> <span class=\"string\">'@/router/index'</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> $axios = axios.create(&#123;</span><br><span class=\"line\">  baseURL: hostURL + <span class=\"string\">'TouchStoneServiceNew'</span></span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\">$axios.interceptors.request.use(<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">config</span>) </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">  config.headers[<span class=\"string\">'Content-Type'</span>] = <span class=\"string\">'application/x-www-form-urlencoded'</span></span><br><span class=\"line\">  config.headers[<span class=\"string\">'Authorization'</span>] = authorization</span><br><span class=\"line\">  <span class=\"keyword\">return</span> config</span><br><span class=\"line\">&#125;, <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">error</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"built_in\">Promise</span>.reject(error)</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\">$axios.interceptors.response.use(</span><br><span class=\"line\">  response =&gt; &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (response.data.resultCode === <span class=\"string\">'505'</span> || response.data.resultCode === <span class=\"string\">'506'</span>) &#123;</span><br><span class=\"line\">      setTimeout(<span class=\"function\"><span class=\"params\">()</span> =&gt;</span> &#123;</span><br><span class=\"line\">     </span><br><span class=\"line\">        Router.push(&#123;</span><br><span class=\"line\">          name: <span class=\"string\">'loginRegister'</span>,</span><br><span class=\"line\"></span><br><span class=\"line\">        &#125;)</span><br><span class=\"line\">      &#125;, <span class=\"number\">2000</span>)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> response</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  error =&gt; &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (error.response) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">switch</span> (error.response.status) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">case</span> <span class=\"number\">401</span>: <span class=\"comment\">// 返回 401 跳转到登录页面</span></span><br><span class=\"line\">      </span><br><span class=\"line\">            Router.push(&#123;</span><br><span class=\"line\">              path: <span class=\"string\">'loginRegister'</span>,</span><br><span class=\"line\">              query: &#123;<span class=\"attr\">redirect</span>: Router.currentRoute.fullPath&#125;</span><br><span class=\"line\">            &#125;)</span><br><span class=\"line\">   </span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"built_in\">Promise</span>.reject(error) <span class=\"comment\">// 返回接口返回的错误信息</span></span><br><span class=\"line\">  &#125;)</span><br></pre></td></tr></table></figure></p>\n<p>在请求发送之前向header添加content-type和authorization<br>请求返回之后拦截状态做处理</p>\n<h2 id=\"vuex\"><a href=\"#vuex\" class=\"headerlink\" title=\"vuex\"></a>vuex</h2><p>vuex用来管理vue状态确实很方便，但<strong>只能在组件中需要共享的数据才使用vuex，简单地说就是路由不会跳转</strong>。因为vuex虽然保存数据，但因为vue本身就是单页项目，如果用户刷新网页就全部丢失了。一些重要的信息海慧寺因该保存在cookie和localstorage里。至于语法可以到官网查看，非常详细。</p>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"写在前面\"><a href=\"#写在前面\" class=\"headerlink\" title=\"写在前面\"></a>写在前面</h1><p>最早之前开发的项目随着业务逻辑的迭代，到达现在实在让人无法接受，于是不得不进行了重构，紧锣密鼓的几个月之后终于完成。在这里说一下自己的一些感受。</p>\n<h1 id=\"关于vue-cli\"><a href=\"#关于vue-cli\" class=\"headerlink\" title=\"关于vue-cli\"></a>关于vue-cli</h1><p>vue-cli对vue进行了非常多的处理，尽量让开发者可以专心处理业务的逻辑而不用关心底层的部分。尽管如此，还是需要另外配置很多东西。</p>\n<h2 id=\"预处理器（eg-sass）\"><a href=\"#预处理器（eg-sass）\" class=\"headerlink\" title=\"预处理器（eg:sass）\"></a>预处理器（eg:sass）</h2><ul>\n<li>新版本的脚手架工具配置好了预处理器的部分，但没有集成预处理语言，也就是说，你不再需要配置预处理器，但还是应该install它。</li>\n<li>在一些情况下， sass的编译会出现异常。如果你能确信自己写的没有错，那问题确实出现在sass上，一般情况下sass的语法无法处理多层级的样式叠加。例如：我的项目引用了swiper，并全局使用swiper。.css。之后，又将swiper封装为组件，并给组件一些额外的样式，最后在组件调用时第三次添加特殊的样式，如此叠加css导致sass处理出现了问题。这个时候需要<code>deep</code>模式。  <figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/deep/ .my-swiper&#123;</span><br><span class=\"line\">    ...</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<h2 id=\"webpack\"><a href=\"#webpack\" class=\"headerlink\" title=\"webpack\"></a>webpack</h2><ul>\n<li>host 0.0.0.0<br>开发移动应用，需要随时在手机上观察效果。在<code>package.json</code>添加  <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&quot;scripts&quot;: &#123;</span><br><span class=\"line\">  &quot;dev&quot;: &quot;webpack-dev-server --inline --progress --config build/webpack.dev.conf.js --host 0.0.0.0&quot;,</span><br><span class=\"line\"> &#125;,</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<ul>\n<li><p>关于背景图打包后出错的问题<br>  开发大型项目当然需要对src目录做一些修改，但添加层级也会导致webpack打包出错。我的项目通过分割组件构成，组建内部专属的图片直接放在组件文件内部。具体结构是这样的</p>\n  <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">├─src</span><br><span class=\"line\">│  ├─assets</span><br><span class=\"line\">│  │  ├─images</span><br><span class=\"line\">│  │  ├─js</span><br><span class=\"line\">│  │  ├─css</span><br><span class=\"line\">│  │  ├─font</span><br><span class=\"line\">│  ├─ pages</span><br><span class=\"line\">│  │  ├─Index</span><br><span class=\"line\">│  │  │ ├─Index.vue</span><br><span class=\"line\">│  │  │ ├─1.jpg</span><br><span class=\"line\">│  │  ├─Mine</span><br><span class=\"line\">│  │  ├─...</span><br></pre></td></tr></table></figure>\n<p>  这个时候图片打包需要重新配置</p>\n  <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">build/utils.js</span><br><span class=\"line\">function generateLoaders (loader, loaderOptions) &#123;</span><br><span class=\"line\">    ...</span><br><span class=\"line\">    if (options.extract) &#123;</span><br><span class=\"line\">          return ExtractTextPlugin.extract(&#123;</span><br><span class=\"line\">            use: loaders,</span><br><span class=\"line\">            fallback: &apos;vue-style-loader&apos;,</span><br><span class=\"line\">            publicPath: &apos;../../&apos; // add</span><br><span class=\"line\">          &#125;)</span><br><span class=\"line\">        &#125; else &#123;</span><br><span class=\"line\">          return [&apos;vue-style-loader&apos;].concat(loaders)</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<h2 id=\"关于axios\"><a href=\"#关于axios\" class=\"headerlink\" title=\"关于axios\"></a>关于axios</h2><p>axios的配置我想说的只有拦截器。可以在请求或响应被 then 或 catch 处理前拦截它们<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> axios <span class=\"keyword\">from</span> <span class=\"string\">'axios'</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> &#123;Base64&#125; <span class=\"keyword\">from</span> <span class=\"string\">'js-base64'</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> Router <span class=\"keyword\">from</span> <span class=\"string\">'@/router/index'</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> $axios = axios.create(&#123;</span><br><span class=\"line\">  baseURL: hostURL + <span class=\"string\">'TouchStoneServiceNew'</span></span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\">$axios.interceptors.request.use(<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">config</span>) </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">  config.headers[<span class=\"string\">'Content-Type'</span>] = <span class=\"string\">'application/x-www-form-urlencoded'</span></span><br><span class=\"line\">  config.headers[<span class=\"string\">'Authorization'</span>] = authorization</span><br><span class=\"line\">  <span class=\"keyword\">return</span> config</span><br><span class=\"line\">&#125;, <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">error</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"built_in\">Promise</span>.reject(error)</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\">$axios.interceptors.response.use(</span><br><span class=\"line\">  response =&gt; &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (response.data.resultCode === <span class=\"string\">'505'</span> || response.data.resultCode === <span class=\"string\">'506'</span>) &#123;</span><br><span class=\"line\">      setTimeout(<span class=\"function\"><span class=\"params\">()</span> =&gt;</span> &#123;</span><br><span class=\"line\">     </span><br><span class=\"line\">        Router.push(&#123;</span><br><span class=\"line\">          name: <span class=\"string\">'loginRegister'</span>,</span><br><span class=\"line\"></span><br><span class=\"line\">        &#125;)</span><br><span class=\"line\">      &#125;, <span class=\"number\">2000</span>)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> response</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  error =&gt; &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (error.response) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">switch</span> (error.response.status) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">case</span> <span class=\"number\">401</span>: <span class=\"comment\">// 返回 401 跳转到登录页面</span></span><br><span class=\"line\">      </span><br><span class=\"line\">            Router.push(&#123;</span><br><span class=\"line\">              path: <span class=\"string\">'loginRegister'</span>,</span><br><span class=\"line\">              query: &#123;<span class=\"attr\">redirect</span>: Router.currentRoute.fullPath&#125;</span><br><span class=\"line\">            &#125;)</span><br><span class=\"line\">   </span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"built_in\">Promise</span>.reject(error) <span class=\"comment\">// 返回接口返回的错误信息</span></span><br><span class=\"line\">  &#125;)</span><br></pre></td></tr></table></figure></p>\n<p>在请求发送之前向header添加content-type和authorization<br>请求返回之后拦截状态做处理</p>\n<h2 id=\"vuex\"><a href=\"#vuex\" class=\"headerlink\" title=\"vuex\"></a>vuex</h2><p>vuex用来管理vue状态确实很方便，但<strong>只能在组件中需要共享的数据才使用vuex，简单地说就是路由不会跳转</strong>。因为vuex虽然保存数据，但因为vue本身就是单页项目，如果用户刷新网页就全部丢失了。一些重要的信息海慧寺因该保存在cookie和localstorage里。至于语法可以到官网查看，非常详细。</p>\n"},{"title":"关于webpack的那些事","date":"2018-03-22T02:37:40.000Z","description":"一篇webpack笔记","_content":"## Entry - 配置模块入口\n```\n//  配置多入口文件\nconst glob = require('glob');\nconst pagePath = path.resolve(__dirname,'./src')\nfunction entries() {\n  let entryFiles = glob.sync(pagePath + '/*/*.js');\n  let map = {};\n  entryFiles.forEach((filePath)=>{\n    let filename = filePath.substring(filePath.lastIndexOf('\\/') + 1, filePath.lastIndexOf('.'));\n  map[filename] = filePath\n});\n  return map\n}\n```\n## Output - 配置模块如何输出成为结果\n```\n//  配置多个文件打包\nconst glob = require('glob');\nconst pagePath = path.resolve(__dirname,'./src')\nconst HtmlWebpackPlugin = require('html-webpack-plugin');\nfunction htmlPlugin(options) {  //  options: 自定义缺省的htmlWebpackPlugin参数\n  let entryHtml = glob.sync(pagePath + '/*/*.html');\n  let arr = [];\n  entryHtml.forEach((filePath) =>{\n    let filename = filePath.substring(filePath.lastIndexOf('\\/') + 1, filePath.lastIndexOf('.')); //  获取文件名\n    let conf = {    //  htmlWebpackPlugin配置选项\n      template: filePath,\n      filename: filename + '.html',   //  文件名\n      chunks: ['manifest', 'vendor', filename],    // 页面模板需要加对应的js脚本，如果不加这行则每个页面都会引入所有的js脚本\n      title:options.title,    // 文章标题\n      inject: true,\n      hash:true,\n      minify: { //压缩HTML文件\n        removeComments: true, //移除HTML中的注释\n        collapseWhitespace: false //删除空白符与换行符\n      }\n    };\n    arr.push(new HtmlWebpackPlugin(conf))\n  });\n  return arr\n}\n```\n## Module - 配置模块的处理规则\n```\nmodule:{\n  rules:[\n    {\n       test: /\\.(png|jpe?g|gif|svg)(\\?.*)?$/,\n       use: 'url-loader?limit=2000&name=images/[hash:8].[name].[ext]',  //  使用url-loader处理图像文件，小于2000转为base64，否则打包到images文件夹下名为[hash:8].[name].[ext]\n       include:path.resolve(__dirname,'src'),  //  打包时包含src文件夹\n         exclude:path.resolve(__dirname,'node_modules'),  // 打包时排除node_modules文件夹\n    },\n    {\n      test: /\\.scss$/,\n      use: [{   //  loader的另一种配置方式(loader解析顺序从后往前)\n          loader: \"style-loader\",\n          options: {}\n        },\n        {\n          loader: \"css-loader?minimize\",\n        },\n        {\n          loader: \"postcss-loader\",\n          options: {\n            postcss(){\n              require('autorefixer')({\n                browsers:['ie>8','>1% in CN']\n              })\n            }\n          }\n        },\n        {\n          loader: \"sass-loader\"\n        }],\n        exclude:path.resolve(__dirname,'node_modules'),\n        include:path.resolve(__dirname,'src')\n    },\n  ]\n}\n```\n##  Resolve - 自定义模块的解析方式\n```\n resolve: {\n    //  导入文件没有后缀时，webpack尝试自动补全，顺序由前到后\n    extensions: ['.js', '.vue', '.json'],\n    //  允许自定义模块。以下例子中导入@/foo.js实际上是导入src/foo.js；并且支持使用$结尾缩小搜索范围(命中vue结尾的模块，及只会将 import vue 转换为 import vue/dist/vue.esm.js)\n    alias: {\n      'vue$': 'vue/dist/vue.esm.js',\n      '@': resolve('src')\n    }\n  }\n```\n## Plugin - 简单粗暴地解释：如果你遇到一个webpack无法处理的操作，那他一定可以通过插件来解决\n> 该配置简单到无法解释，接受一个数组，添加插件即可。所有插件及用法[看这里](https://doc.webpack-china.org/plugins/)\n```\nplugin:[\n  new webpack.ProvidePlugin({ //  这个插件用来配置全局jquery\n    $: \"jquery\",\n    jQuery: \"jquery\",\n    jquery: \"jquery\",\n    \"window.jQuery\": \"jquery\"\n  }),\n  new CleanWebpackPlugin(['dist']), //  这个插件用来清空dist文件夹\n  ...\n]\n```\n## DevSever - 构建本地开发环境\n> 具体配置[移步这里](https://doc.webpack-china.org/configuration/dev-server/)\n## 一些问题\n### 项目中使用sass\nwebpack.base.conf.js中的module新加一项：\n```\n{\n  test: /\\.scss$/,\n  use: [\"style-loader\",\"css-loader?minimize\",\"sass-loader\"],\n  exclude:path.resolve(__dirname,'node_modules')\n}\n```\n### 项目中使用jquery插件\nwebpack.base.conf.js中的module新加plugin：\n```\nplugins: [\n  new webpack.ProvidePlugin({\n    $: \"jquery\",\n    jQuery: \"jquery\",\n    jquery: \"jquery\",\n    \"window.jQuery\": \"jquery\"\n    }),\n  ]\n```","source":"_posts/关于webpack的那些事.md","raw":"title: 关于webpack的那些事\ntags: [webpack]\ndate: 2018-03-22 10:37:40\ncategories: [webpack]\ndescription: 一篇webpack笔记\n---\n## Entry - 配置模块入口\n```\n//  配置多入口文件\nconst glob = require('glob');\nconst pagePath = path.resolve(__dirname,'./src')\nfunction entries() {\n  let entryFiles = glob.sync(pagePath + '/*/*.js');\n  let map = {};\n  entryFiles.forEach((filePath)=>{\n    let filename = filePath.substring(filePath.lastIndexOf('\\/') + 1, filePath.lastIndexOf('.'));\n  map[filename] = filePath\n});\n  return map\n}\n```\n## Output - 配置模块如何输出成为结果\n```\n//  配置多个文件打包\nconst glob = require('glob');\nconst pagePath = path.resolve(__dirname,'./src')\nconst HtmlWebpackPlugin = require('html-webpack-plugin');\nfunction htmlPlugin(options) {  //  options: 自定义缺省的htmlWebpackPlugin参数\n  let entryHtml = glob.sync(pagePath + '/*/*.html');\n  let arr = [];\n  entryHtml.forEach((filePath) =>{\n    let filename = filePath.substring(filePath.lastIndexOf('\\/') + 1, filePath.lastIndexOf('.')); //  获取文件名\n    let conf = {    //  htmlWebpackPlugin配置选项\n      template: filePath,\n      filename: filename + '.html',   //  文件名\n      chunks: ['manifest', 'vendor', filename],    // 页面模板需要加对应的js脚本，如果不加这行则每个页面都会引入所有的js脚本\n      title:options.title,    // 文章标题\n      inject: true,\n      hash:true,\n      minify: { //压缩HTML文件\n        removeComments: true, //移除HTML中的注释\n        collapseWhitespace: false //删除空白符与换行符\n      }\n    };\n    arr.push(new HtmlWebpackPlugin(conf))\n  });\n  return arr\n}\n```\n## Module - 配置模块的处理规则\n```\nmodule:{\n  rules:[\n    {\n       test: /\\.(png|jpe?g|gif|svg)(\\?.*)?$/,\n       use: 'url-loader?limit=2000&name=images/[hash:8].[name].[ext]',  //  使用url-loader处理图像文件，小于2000转为base64，否则打包到images文件夹下名为[hash:8].[name].[ext]\n       include:path.resolve(__dirname,'src'),  //  打包时包含src文件夹\n         exclude:path.resolve(__dirname,'node_modules'),  // 打包时排除node_modules文件夹\n    },\n    {\n      test: /\\.scss$/,\n      use: [{   //  loader的另一种配置方式(loader解析顺序从后往前)\n          loader: \"style-loader\",\n          options: {}\n        },\n        {\n          loader: \"css-loader?minimize\",\n        },\n        {\n          loader: \"postcss-loader\",\n          options: {\n            postcss(){\n              require('autorefixer')({\n                browsers:['ie>8','>1% in CN']\n              })\n            }\n          }\n        },\n        {\n          loader: \"sass-loader\"\n        }],\n        exclude:path.resolve(__dirname,'node_modules'),\n        include:path.resolve(__dirname,'src')\n    },\n  ]\n}\n```\n##  Resolve - 自定义模块的解析方式\n```\n resolve: {\n    //  导入文件没有后缀时，webpack尝试自动补全，顺序由前到后\n    extensions: ['.js', '.vue', '.json'],\n    //  允许自定义模块。以下例子中导入@/foo.js实际上是导入src/foo.js；并且支持使用$结尾缩小搜索范围(命中vue结尾的模块，及只会将 import vue 转换为 import vue/dist/vue.esm.js)\n    alias: {\n      'vue$': 'vue/dist/vue.esm.js',\n      '@': resolve('src')\n    }\n  }\n```\n## Plugin - 简单粗暴地解释：如果你遇到一个webpack无法处理的操作，那他一定可以通过插件来解决\n> 该配置简单到无法解释，接受一个数组，添加插件即可。所有插件及用法[看这里](https://doc.webpack-china.org/plugins/)\n```\nplugin:[\n  new webpack.ProvidePlugin({ //  这个插件用来配置全局jquery\n    $: \"jquery\",\n    jQuery: \"jquery\",\n    jquery: \"jquery\",\n    \"window.jQuery\": \"jquery\"\n  }),\n  new CleanWebpackPlugin(['dist']), //  这个插件用来清空dist文件夹\n  ...\n]\n```\n## DevSever - 构建本地开发环境\n> 具体配置[移步这里](https://doc.webpack-china.org/configuration/dev-server/)\n## 一些问题\n### 项目中使用sass\nwebpack.base.conf.js中的module新加一项：\n```\n{\n  test: /\\.scss$/,\n  use: [\"style-loader\",\"css-loader?minimize\",\"sass-loader\"],\n  exclude:path.resolve(__dirname,'node_modules')\n}\n```\n### 项目中使用jquery插件\nwebpack.base.conf.js中的module新加plugin：\n```\nplugins: [\n  new webpack.ProvidePlugin({\n    $: \"jquery\",\n    jQuery: \"jquery\",\n    jquery: \"jquery\",\n    \"window.jQuery\": \"jquery\"\n    }),\n  ]\n```","slug":"关于webpack的那些事","published":1,"updated":"2019-09-29T11:22:34.500Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck3jm8gw7001dz0btq1caszig","content":"<h2 id=\"Entry-配置模块入口\"><a href=\"#Entry-配置模块入口\" class=\"headerlink\" title=\"Entry - 配置模块入口\"></a>Entry - 配置模块入口</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">//  配置多入口文件</span><br><span class=\"line\">const glob = require(&apos;glob&apos;);</span><br><span class=\"line\">const pagePath = path.resolve(__dirname,&apos;./src&apos;)</span><br><span class=\"line\">function entries() &#123;</span><br><span class=\"line\">  let entryFiles = glob.sync(pagePath + &apos;/*/*.js&apos;);</span><br><span class=\"line\">  let map = &#123;&#125;;</span><br><span class=\"line\">  entryFiles.forEach((filePath)=&gt;&#123;</span><br><span class=\"line\">    let filename = filePath.substring(filePath.lastIndexOf(&apos;\\/&apos;) + 1, filePath.lastIndexOf(&apos;.&apos;));</span><br><span class=\"line\">  map[filename] = filePath</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\">  return map</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"Output-配置模块如何输出成为结果\"><a href=\"#Output-配置模块如何输出成为结果\" class=\"headerlink\" title=\"Output - 配置模块如何输出成为结果\"></a>Output - 配置模块如何输出成为结果</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">//  配置多个文件打包</span><br><span class=\"line\">const glob = require(&apos;glob&apos;);</span><br><span class=\"line\">const pagePath = path.resolve(__dirname,&apos;./src&apos;)</span><br><span class=\"line\">const HtmlWebpackPlugin = require(&apos;html-webpack-plugin&apos;);</span><br><span class=\"line\">function htmlPlugin(options) &#123;  //  options: 自定义缺省的htmlWebpackPlugin参数</span><br><span class=\"line\">  let entryHtml = glob.sync(pagePath + &apos;/*/*.html&apos;);</span><br><span class=\"line\">  let arr = [];</span><br><span class=\"line\">  entryHtml.forEach((filePath) =&gt;&#123;</span><br><span class=\"line\">    let filename = filePath.substring(filePath.lastIndexOf(&apos;\\/&apos;) + 1, filePath.lastIndexOf(&apos;.&apos;)); //  获取文件名</span><br><span class=\"line\">    let conf = &#123;    //  htmlWebpackPlugin配置选项</span><br><span class=\"line\">      template: filePath,</span><br><span class=\"line\">      filename: filename + &apos;.html&apos;,   //  文件名</span><br><span class=\"line\">      chunks: [&apos;manifest&apos;, &apos;vendor&apos;, filename],    // 页面模板需要加对应的js脚本，如果不加这行则每个页面都会引入所有的js脚本</span><br><span class=\"line\">      title:options.title,    // 文章标题</span><br><span class=\"line\">      inject: true,</span><br><span class=\"line\">      hash:true,</span><br><span class=\"line\">      minify: &#123; //压缩HTML文件</span><br><span class=\"line\">        removeComments: true, //移除HTML中的注释</span><br><span class=\"line\">        collapseWhitespace: false //删除空白符与换行符</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;;</span><br><span class=\"line\">    arr.push(new HtmlWebpackPlugin(conf))</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\">  return arr</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"Module-配置模块的处理规则\"><a href=\"#Module-配置模块的处理规则\" class=\"headerlink\" title=\"Module - 配置模块的处理规则\"></a>Module - 配置模块的处理规则</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">module:&#123;</span><br><span class=\"line\">  rules:[</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">       test: /\\.(png|jpe?g|gif|svg)(\\?.*)?$/,</span><br><span class=\"line\">       use: &apos;url-loader?limit=2000&amp;name=images/[hash:8].[name].[ext]&apos;,  //  使用url-loader处理图像文件，小于2000转为base64，否则打包到images文件夹下名为[hash:8].[name].[ext]</span><br><span class=\"line\">       include:path.resolve(__dirname,&apos;src&apos;),  //  打包时包含src文件夹</span><br><span class=\"line\">         exclude:path.resolve(__dirname,&apos;node_modules&apos;),  // 打包时排除node_modules文件夹</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">      test: /\\.scss$/,</span><br><span class=\"line\">      use: [&#123;   //  loader的另一种配置方式(loader解析顺序从后往前)</span><br><span class=\"line\">          loader: &quot;style-loader&quot;,</span><br><span class=\"line\">          options: &#123;&#125;</span><br><span class=\"line\">        &#125;,</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">          loader: &quot;css-loader?minimize&quot;,</span><br><span class=\"line\">        &#125;,</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">          loader: &quot;postcss-loader&quot;,</span><br><span class=\"line\">          options: &#123;</span><br><span class=\"line\">            postcss()&#123;</span><br><span class=\"line\">              require(&apos;autorefixer&apos;)(&#123;</span><br><span class=\"line\">                browsers:[&apos;ie&gt;8&apos;,&apos;&gt;1% in CN&apos;]</span><br><span class=\"line\">              &#125;)</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">          &#125;</span><br><span class=\"line\">        &#125;,</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">          loader: &quot;sass-loader&quot;</span><br><span class=\"line\">        &#125;],</span><br><span class=\"line\">        exclude:path.resolve(__dirname,&apos;node_modules&apos;),</span><br><span class=\"line\">        include:path.resolve(__dirname,&apos;src&apos;)</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">  ]</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"Resolve-自定义模块的解析方式\"><a href=\"#Resolve-自定义模块的解析方式\" class=\"headerlink\" title=\"Resolve - 自定义模块的解析方式\"></a>Resolve - 自定义模块的解析方式</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">resolve: &#123;</span><br><span class=\"line\">   //  导入文件没有后缀时，webpack尝试自动补全，顺序由前到后</span><br><span class=\"line\">   extensions: [&apos;.js&apos;, &apos;.vue&apos;, &apos;.json&apos;],</span><br><span class=\"line\">   //  允许自定义模块。以下例子中导入@/foo.js实际上是导入src/foo.js；并且支持使用$结尾缩小搜索范围(命中vue结尾的模块，及只会将 import vue 转换为 import vue/dist/vue.esm.js)</span><br><span class=\"line\">   alias: &#123;</span><br><span class=\"line\">     &apos;vue$&apos;: &apos;vue/dist/vue.esm.js&apos;,</span><br><span class=\"line\">     &apos;@&apos;: resolve(&apos;src&apos;)</span><br><span class=\"line\">   &#125;</span><br><span class=\"line\"> &#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"Plugin-简单粗暴地解释：如果你遇到一个webpack无法处理的操作，那他一定可以通过插件来解决\"><a href=\"#Plugin-简单粗暴地解释：如果你遇到一个webpack无法处理的操作，那他一定可以通过插件来解决\" class=\"headerlink\" title=\"Plugin - 简单粗暴地解释：如果你遇到一个webpack无法处理的操作，那他一定可以通过插件来解决\"></a>Plugin - 简单粗暴地解释：如果你遇到一个webpack无法处理的操作，那他一定可以通过插件来解决</h2><blockquote>\n<p>该配置简单到无法解释，接受一个数组，添加插件即可。所有插件及用法<a href=\"https://doc.webpack-china.org/plugins/\" target=\"_blank\" rel=\"noopener\">看这里</a><br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">plugin:[</span><br><span class=\"line\">  new webpack.ProvidePlugin(&#123; //  这个插件用来配置全局jquery</span><br><span class=\"line\">    $: &quot;jquery&quot;,</span><br><span class=\"line\">    jQuery: &quot;jquery&quot;,</span><br><span class=\"line\">    jquery: &quot;jquery&quot;,</span><br><span class=\"line\">    &quot;window.jQuery&quot;: &quot;jquery&quot;</span><br><span class=\"line\">  &#125;),</span><br><span class=\"line\">  new CleanWebpackPlugin([&apos;dist&apos;]), //  这个插件用来清空dist文件夹</span><br><span class=\"line\">  ...</span><br><span class=\"line\">]</span><br></pre></td></tr></table></figure></p>\n</blockquote>\n<h2 id=\"DevSever-构建本地开发环境\"><a href=\"#DevSever-构建本地开发环境\" class=\"headerlink\" title=\"DevSever - 构建本地开发环境\"></a>DevSever - 构建本地开发环境</h2><blockquote>\n<p>具体配置<a href=\"https://doc.webpack-china.org/configuration/dev-server/\" target=\"_blank\" rel=\"noopener\">移步这里</a></p>\n</blockquote>\n<h2 id=\"一些问题\"><a href=\"#一些问题\" class=\"headerlink\" title=\"一些问题\"></a>一些问题</h2><h3 id=\"项目中使用sass\"><a href=\"#项目中使用sass\" class=\"headerlink\" title=\"项目中使用sass\"></a>项目中使用sass</h3><p>webpack.base.conf.js中的module新加一项：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">  test: /\\.scss$/,</span><br><span class=\"line\">  use: [&quot;style-loader&quot;,&quot;css-loader?minimize&quot;,&quot;sass-loader&quot;],</span><br><span class=\"line\">  exclude:path.resolve(__dirname,&apos;node_modules&apos;)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"项目中使用jquery插件\"><a href=\"#项目中使用jquery插件\" class=\"headerlink\" title=\"项目中使用jquery插件\"></a>项目中使用jquery插件</h3><p>webpack.base.conf.js中的module新加plugin：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">plugins: [</span><br><span class=\"line\">  new webpack.ProvidePlugin(&#123;</span><br><span class=\"line\">    $: &quot;jquery&quot;,</span><br><span class=\"line\">    jQuery: &quot;jquery&quot;,</span><br><span class=\"line\">    jquery: &quot;jquery&quot;,</span><br><span class=\"line\">    &quot;window.jQuery&quot;: &quot;jquery&quot;</span><br><span class=\"line\">    &#125;),</span><br><span class=\"line\">  ]</span><br></pre></td></tr></table></figure></p>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"Entry-配置模块入口\"><a href=\"#Entry-配置模块入口\" class=\"headerlink\" title=\"Entry - 配置模块入口\"></a>Entry - 配置模块入口</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">//  配置多入口文件</span><br><span class=\"line\">const glob = require(&apos;glob&apos;);</span><br><span class=\"line\">const pagePath = path.resolve(__dirname,&apos;./src&apos;)</span><br><span class=\"line\">function entries() &#123;</span><br><span class=\"line\">  let entryFiles = glob.sync(pagePath + &apos;/*/*.js&apos;);</span><br><span class=\"line\">  let map = &#123;&#125;;</span><br><span class=\"line\">  entryFiles.forEach((filePath)=&gt;&#123;</span><br><span class=\"line\">    let filename = filePath.substring(filePath.lastIndexOf(&apos;\\/&apos;) + 1, filePath.lastIndexOf(&apos;.&apos;));</span><br><span class=\"line\">  map[filename] = filePath</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\">  return map</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"Output-配置模块如何输出成为结果\"><a href=\"#Output-配置模块如何输出成为结果\" class=\"headerlink\" title=\"Output - 配置模块如何输出成为结果\"></a>Output - 配置模块如何输出成为结果</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">//  配置多个文件打包</span><br><span class=\"line\">const glob = require(&apos;glob&apos;);</span><br><span class=\"line\">const pagePath = path.resolve(__dirname,&apos;./src&apos;)</span><br><span class=\"line\">const HtmlWebpackPlugin = require(&apos;html-webpack-plugin&apos;);</span><br><span class=\"line\">function htmlPlugin(options) &#123;  //  options: 自定义缺省的htmlWebpackPlugin参数</span><br><span class=\"line\">  let entryHtml = glob.sync(pagePath + &apos;/*/*.html&apos;);</span><br><span class=\"line\">  let arr = [];</span><br><span class=\"line\">  entryHtml.forEach((filePath) =&gt;&#123;</span><br><span class=\"line\">    let filename = filePath.substring(filePath.lastIndexOf(&apos;\\/&apos;) + 1, filePath.lastIndexOf(&apos;.&apos;)); //  获取文件名</span><br><span class=\"line\">    let conf = &#123;    //  htmlWebpackPlugin配置选项</span><br><span class=\"line\">      template: filePath,</span><br><span class=\"line\">      filename: filename + &apos;.html&apos;,   //  文件名</span><br><span class=\"line\">      chunks: [&apos;manifest&apos;, &apos;vendor&apos;, filename],    // 页面模板需要加对应的js脚本，如果不加这行则每个页面都会引入所有的js脚本</span><br><span class=\"line\">      title:options.title,    // 文章标题</span><br><span class=\"line\">      inject: true,</span><br><span class=\"line\">      hash:true,</span><br><span class=\"line\">      minify: &#123; //压缩HTML文件</span><br><span class=\"line\">        removeComments: true, //移除HTML中的注释</span><br><span class=\"line\">        collapseWhitespace: false //删除空白符与换行符</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;;</span><br><span class=\"line\">    arr.push(new HtmlWebpackPlugin(conf))</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\">  return arr</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"Module-配置模块的处理规则\"><a href=\"#Module-配置模块的处理规则\" class=\"headerlink\" title=\"Module - 配置模块的处理规则\"></a>Module - 配置模块的处理规则</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">module:&#123;</span><br><span class=\"line\">  rules:[</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">       test: /\\.(png|jpe?g|gif|svg)(\\?.*)?$/,</span><br><span class=\"line\">       use: &apos;url-loader?limit=2000&amp;name=images/[hash:8].[name].[ext]&apos;,  //  使用url-loader处理图像文件，小于2000转为base64，否则打包到images文件夹下名为[hash:8].[name].[ext]</span><br><span class=\"line\">       include:path.resolve(__dirname,&apos;src&apos;),  //  打包时包含src文件夹</span><br><span class=\"line\">         exclude:path.resolve(__dirname,&apos;node_modules&apos;),  // 打包时排除node_modules文件夹</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">      test: /\\.scss$/,</span><br><span class=\"line\">      use: [&#123;   //  loader的另一种配置方式(loader解析顺序从后往前)</span><br><span class=\"line\">          loader: &quot;style-loader&quot;,</span><br><span class=\"line\">          options: &#123;&#125;</span><br><span class=\"line\">        &#125;,</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">          loader: &quot;css-loader?minimize&quot;,</span><br><span class=\"line\">        &#125;,</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">          loader: &quot;postcss-loader&quot;,</span><br><span class=\"line\">          options: &#123;</span><br><span class=\"line\">            postcss()&#123;</span><br><span class=\"line\">              require(&apos;autorefixer&apos;)(&#123;</span><br><span class=\"line\">                browsers:[&apos;ie&gt;8&apos;,&apos;&gt;1% in CN&apos;]</span><br><span class=\"line\">              &#125;)</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">          &#125;</span><br><span class=\"line\">        &#125;,</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">          loader: &quot;sass-loader&quot;</span><br><span class=\"line\">        &#125;],</span><br><span class=\"line\">        exclude:path.resolve(__dirname,&apos;node_modules&apos;),</span><br><span class=\"line\">        include:path.resolve(__dirname,&apos;src&apos;)</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">  ]</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"Resolve-自定义模块的解析方式\"><a href=\"#Resolve-自定义模块的解析方式\" class=\"headerlink\" title=\"Resolve - 自定义模块的解析方式\"></a>Resolve - 自定义模块的解析方式</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">resolve: &#123;</span><br><span class=\"line\">   //  导入文件没有后缀时，webpack尝试自动补全，顺序由前到后</span><br><span class=\"line\">   extensions: [&apos;.js&apos;, &apos;.vue&apos;, &apos;.json&apos;],</span><br><span class=\"line\">   //  允许自定义模块。以下例子中导入@/foo.js实际上是导入src/foo.js；并且支持使用$结尾缩小搜索范围(命中vue结尾的模块，及只会将 import vue 转换为 import vue/dist/vue.esm.js)</span><br><span class=\"line\">   alias: &#123;</span><br><span class=\"line\">     &apos;vue$&apos;: &apos;vue/dist/vue.esm.js&apos;,</span><br><span class=\"line\">     &apos;@&apos;: resolve(&apos;src&apos;)</span><br><span class=\"line\">   &#125;</span><br><span class=\"line\"> &#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"Plugin-简单粗暴地解释：如果你遇到一个webpack无法处理的操作，那他一定可以通过插件来解决\"><a href=\"#Plugin-简单粗暴地解释：如果你遇到一个webpack无法处理的操作，那他一定可以通过插件来解决\" class=\"headerlink\" title=\"Plugin - 简单粗暴地解释：如果你遇到一个webpack无法处理的操作，那他一定可以通过插件来解决\"></a>Plugin - 简单粗暴地解释：如果你遇到一个webpack无法处理的操作，那他一定可以通过插件来解决</h2><blockquote>\n<p>该配置简单到无法解释，接受一个数组，添加插件即可。所有插件及用法<a href=\"https://doc.webpack-china.org/plugins/\" target=\"_blank\" rel=\"noopener\">看这里</a><br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">plugin:[</span><br><span class=\"line\">  new webpack.ProvidePlugin(&#123; //  这个插件用来配置全局jquery</span><br><span class=\"line\">    $: &quot;jquery&quot;,</span><br><span class=\"line\">    jQuery: &quot;jquery&quot;,</span><br><span class=\"line\">    jquery: &quot;jquery&quot;,</span><br><span class=\"line\">    &quot;window.jQuery&quot;: &quot;jquery&quot;</span><br><span class=\"line\">  &#125;),</span><br><span class=\"line\">  new CleanWebpackPlugin([&apos;dist&apos;]), //  这个插件用来清空dist文件夹</span><br><span class=\"line\">  ...</span><br><span class=\"line\">]</span><br></pre></td></tr></table></figure></p>\n</blockquote>\n<h2 id=\"DevSever-构建本地开发环境\"><a href=\"#DevSever-构建本地开发环境\" class=\"headerlink\" title=\"DevSever - 构建本地开发环境\"></a>DevSever - 构建本地开发环境</h2><blockquote>\n<p>具体配置<a href=\"https://doc.webpack-china.org/configuration/dev-server/\" target=\"_blank\" rel=\"noopener\">移步这里</a></p>\n</blockquote>\n<h2 id=\"一些问题\"><a href=\"#一些问题\" class=\"headerlink\" title=\"一些问题\"></a>一些问题</h2><h3 id=\"项目中使用sass\"><a href=\"#项目中使用sass\" class=\"headerlink\" title=\"项目中使用sass\"></a>项目中使用sass</h3><p>webpack.base.conf.js中的module新加一项：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">  test: /\\.scss$/,</span><br><span class=\"line\">  use: [&quot;style-loader&quot;,&quot;css-loader?minimize&quot;,&quot;sass-loader&quot;],</span><br><span class=\"line\">  exclude:path.resolve(__dirname,&apos;node_modules&apos;)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"项目中使用jquery插件\"><a href=\"#项目中使用jquery插件\" class=\"headerlink\" title=\"项目中使用jquery插件\"></a>项目中使用jquery插件</h3><p>webpack.base.conf.js中的module新加plugin：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">plugins: [</span><br><span class=\"line\">  new webpack.ProvidePlugin(&#123;</span><br><span class=\"line\">    $: &quot;jquery&quot;,</span><br><span class=\"line\">    jQuery: &quot;jquery&quot;,</span><br><span class=\"line\">    jquery: &quot;jquery&quot;,</span><br><span class=\"line\">    &quot;window.jQuery&quot;: &quot;jquery&quot;</span><br><span class=\"line\">    &#125;),</span><br><span class=\"line\">  ]</span><br></pre></td></tr></table></figure></p>\n"},{"title":"微信浏览器播放音乐的坑","date":"2017-10-30T07:37:36.000Z","description":"解决微信浏览器播放音乐的问题","_content":"## 如果只是简单的希望向微信环境下添加默认播放的背景音乐而不需要其他操作\n### 给你的 js绑定微信浏览器特有的事件\n```\n/* html */\n <audio id=\"audio\" class=\"media-audio\" autoplay preload loop=\"loop\">\n   <source src=\"music.ogg\" type=\"audio/ogg\">\n   <source src=\"music.mp3\" type=\"audio/mpeg\">\n   ...\n </audio>\n \n /* js */\n function audioAutoPlay(ID){\n   var audio = document.getElementById(ID);\n   audio.play();\n   document.addEventListener(\"WeixinJSBridgeReady\", function () {\n     audio.play();\n   }, false);\n   document.addEventListener('YixinJSBridgeReady', function() {\n     audio.play();\n   }, false);\n }\n audioAutoPlay('audio');\n```\n\n## 如果有关于微信SDK的操作，将这段逻辑放在SDK中也是极好的\n### 博主默认你已经正确的引用了 SDK，如果无法引用请查找其他文档\n```\n/* js */\n...\nwx.config({\n  ...\n})\nwx.ready(function(){\n  ...\n  audio.play();\n  ...\n})\n...\n```","source":"_posts/微信浏览器播放音乐的坑.md","raw":"title: 微信浏览器播放音乐的坑\ntags: [WeChat, audio]\ndate: 2017-10-30 15:37:36\ncategories: [WeChat]\ndescription: 解决微信浏览器播放音乐的问题\n---\n## 如果只是简单的希望向微信环境下添加默认播放的背景音乐而不需要其他操作\n### 给你的 js绑定微信浏览器特有的事件\n```\n/* html */\n <audio id=\"audio\" class=\"media-audio\" autoplay preload loop=\"loop\">\n   <source src=\"music.ogg\" type=\"audio/ogg\">\n   <source src=\"music.mp3\" type=\"audio/mpeg\">\n   ...\n </audio>\n \n /* js */\n function audioAutoPlay(ID){\n   var audio = document.getElementById(ID);\n   audio.play();\n   document.addEventListener(\"WeixinJSBridgeReady\", function () {\n     audio.play();\n   }, false);\n   document.addEventListener('YixinJSBridgeReady', function() {\n     audio.play();\n   }, false);\n }\n audioAutoPlay('audio');\n```\n\n## 如果有关于微信SDK的操作，将这段逻辑放在SDK中也是极好的\n### 博主默认你已经正确的引用了 SDK，如果无法引用请查找其他文档\n```\n/* js */\n...\nwx.config({\n  ...\n})\nwx.ready(function(){\n  ...\n  audio.play();\n  ...\n})\n...\n```","slug":"微信浏览器播放音乐的坑","published":1,"updated":"2019-09-29T11:22:34.501Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck3jm8gw8001gz0bttv7ev0r1","content":"<h2 id=\"如果只是简单的希望向微信环境下添加默认播放的背景音乐而不需要其他操作\"><a href=\"#如果只是简单的希望向微信环境下添加默认播放的背景音乐而不需要其他操作\" class=\"headerlink\" title=\"如果只是简单的希望向微信环境下添加默认播放的背景音乐而不需要其他操作\"></a>如果只是简单的希望向微信环境下添加默认播放的背景音乐而不需要其他操作</h2><h3 id=\"给你的-js绑定微信浏览器特有的事件\"><a href=\"#给你的-js绑定微信浏览器特有的事件\" class=\"headerlink\" title=\"给你的 js绑定微信浏览器特有的事件\"></a>给你的 js绑定微信浏览器特有的事件</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/* html */</span><br><span class=\"line\"> &lt;audio id=&quot;audio&quot; class=&quot;media-audio&quot; autoplay preload loop=&quot;loop&quot;&gt;</span><br><span class=\"line\">   &lt;source src=&quot;music.ogg&quot; type=&quot;audio/ogg&quot;&gt;</span><br><span class=\"line\">   &lt;source src=&quot;music.mp3&quot; type=&quot;audio/mpeg&quot;&gt;</span><br><span class=\"line\">   ...</span><br><span class=\"line\"> &lt;/audio&gt;</span><br><span class=\"line\"> </span><br><span class=\"line\"> /* js */</span><br><span class=\"line\"> function audioAutoPlay(ID)&#123;</span><br><span class=\"line\">   var audio = document.getElementById(ID);</span><br><span class=\"line\">   audio.play();</span><br><span class=\"line\">   document.addEventListener(&quot;WeixinJSBridgeReady&quot;, function () &#123;</span><br><span class=\"line\">     audio.play();</span><br><span class=\"line\">   &#125;, false);</span><br><span class=\"line\">   document.addEventListener(&apos;YixinJSBridgeReady&apos;, function() &#123;</span><br><span class=\"line\">     audio.play();</span><br><span class=\"line\">   &#125;, false);</span><br><span class=\"line\"> &#125;</span><br><span class=\"line\"> audioAutoPlay(&apos;audio&apos;);</span><br></pre></td></tr></table></figure>\n<h2 id=\"如果有关于微信SDK的操作，将这段逻辑放在SDK中也是极好的\"><a href=\"#如果有关于微信SDK的操作，将这段逻辑放在SDK中也是极好的\" class=\"headerlink\" title=\"如果有关于微信SDK的操作，将这段逻辑放在SDK中也是极好的\"></a>如果有关于微信SDK的操作，将这段逻辑放在SDK中也是极好的</h2><h3 id=\"博主默认你已经正确的引用了-SDK，如果无法引用请查找其他文档\"><a href=\"#博主默认你已经正确的引用了-SDK，如果无法引用请查找其他文档\" class=\"headerlink\" title=\"博主默认你已经正确的引用了 SDK，如果无法引用请查找其他文档\"></a>博主默认你已经正确的引用了 SDK，如果无法引用请查找其他文档</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/* js */</span><br><span class=\"line\">...</span><br><span class=\"line\">wx.config(&#123;</span><br><span class=\"line\">  ...</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\">wx.ready(function()&#123;</span><br><span class=\"line\">  ...</span><br><span class=\"line\">  audio.play();</span><br><span class=\"line\">  ...</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\">...</span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"","more":"<h2 id=\"如果只是简单的希望向微信环境下添加默认播放的背景音乐而不需要其他操作\"><a href=\"#如果只是简单的希望向微信环境下添加默认播放的背景音乐而不需要其他操作\" class=\"headerlink\" title=\"如果只是简单的希望向微信环境下添加默认播放的背景音乐而不需要其他操作\"></a>如果只是简单的希望向微信环境下添加默认播放的背景音乐而不需要其他操作</h2><h3 id=\"给你的-js绑定微信浏览器特有的事件\"><a href=\"#给你的-js绑定微信浏览器特有的事件\" class=\"headerlink\" title=\"给你的 js绑定微信浏览器特有的事件\"></a>给你的 js绑定微信浏览器特有的事件</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/* html */</span><br><span class=\"line\"> &lt;audio id=&quot;audio&quot; class=&quot;media-audio&quot; autoplay preload loop=&quot;loop&quot;&gt;</span><br><span class=\"line\">   &lt;source src=&quot;music.ogg&quot; type=&quot;audio/ogg&quot;&gt;</span><br><span class=\"line\">   &lt;source src=&quot;music.mp3&quot; type=&quot;audio/mpeg&quot;&gt;</span><br><span class=\"line\">   ...</span><br><span class=\"line\"> &lt;/audio&gt;</span><br><span class=\"line\"> </span><br><span class=\"line\"> /* js */</span><br><span class=\"line\"> function audioAutoPlay(ID)&#123;</span><br><span class=\"line\">   var audio = document.getElementById(ID);</span><br><span class=\"line\">   audio.play();</span><br><span class=\"line\">   document.addEventListener(&quot;WeixinJSBridgeReady&quot;, function () &#123;</span><br><span class=\"line\">     audio.play();</span><br><span class=\"line\">   &#125;, false);</span><br><span class=\"line\">   document.addEventListener(&apos;YixinJSBridgeReady&apos;, function() &#123;</span><br><span class=\"line\">     audio.play();</span><br><span class=\"line\">   &#125;, false);</span><br><span class=\"line\"> &#125;</span><br><span class=\"line\"> audioAutoPlay(&apos;audio&apos;);</span><br></pre></td></tr></table></figure>\n<h2 id=\"如果有关于微信SDK的操作，将这段逻辑放在SDK中也是极好的\"><a href=\"#如果有关于微信SDK的操作，将这段逻辑放在SDK中也是极好的\" class=\"headerlink\" title=\"如果有关于微信SDK的操作，将这段逻辑放在SDK中也是极好的\"></a>如果有关于微信SDK的操作，将这段逻辑放在SDK中也是极好的</h2><h3 id=\"博主默认你已经正确的引用了-SDK，如果无法引用请查找其他文档\"><a href=\"#博主默认你已经正确的引用了-SDK，如果无法引用请查找其他文档\" class=\"headerlink\" title=\"博主默认你已经正确的引用了 SDK，如果无法引用请查找其他文档\"></a>博主默认你已经正确的引用了 SDK，如果无法引用请查找其他文档</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/* js */</span><br><span class=\"line\">...</span><br><span class=\"line\">wx.config(&#123;</span><br><span class=\"line\">  ...</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\">wx.ready(function()&#123;</span><br><span class=\"line\">  ...</span><br><span class=\"line\">  audio.play();</span><br><span class=\"line\">  ...</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\">...</span><br></pre></td></tr></table></figure>"},{"title":"前端配合微信授权","date":"2018-01-12T08:21:52.000Z","description":"微信授权前端配合工作小记","_content":"## 写在前面\n最近做了一个微信的活动，功能主要是好友之间互相投票。所以需要进行微信的授权。因为是第一次接触，所以记录下来备不时之需。**这篇博客主要参考官方[微信公众平台技术文档](https://mp.weixin.qq.com/wiki)，由于官方文档前后端教程混杂不方便阅读。所以整理出来这一篇。** \n### 关于网页授权回调域名的说明\n+ 在微信公众号请求用户网页授权之前，开发者需要先到公众平台官网中的“开发 - 接口权限 - 网页服务 - 网页帐号 - 网页授权获取用户基本信息”的配置选项中，修改授权回调域名。请注意，这里填写的是域名（是一个字符串），而不是URL，因此请勿加 http:// 等协议头。\n+ 授权回调域名配置规范为全域名，比如需要网页授权的域名为：www.qq.com，配置以后此域名下面的页面http://www.qq.com/music.html 、 http://www.qq.com/login.html 都可以进行OAuth2.0鉴权。但http://pay.qq.com 、 http://music.qq.com 、 http://qq.com无法进行OAuth2.0鉴权。\n\n### 关于网页授权的两种scope的区别说明\n+ 以snsapi_base为scope发起的网页授权，是用来获取进入页面的用户的openid的，并且是静默授权并自动跳转到回调页的。用户感知的就是直接进入了回调页（往往是业务页面）\n+ 以snsapi_userinfo为scope发起的网页授权，是用来获取用户的基本信息的。但这种授权需要用户手动同意，并且由于用户同意过，所以无须关注，就可在授权后获取该用户的基本信息。\n\n### 关于网页授权access_token和普通access_token的区别\n+ 微信网页授权是通过OAuth2.0机制实现的，在用户授权给公众号后，公众号可以获取到一个网页授权特有的接口调用凭证（网页授权access_token），通过网页授权access_token可以进行授权后接口调用，如获取用户基本信息；\n+ 其他微信接口，需要通过基础支持中的“获取access_token”接口来获取到的普通access_token调用。\n\n## 授权步骤\n### 用户同意授权，获取code\n在确保微信公众账号拥有授权作用域（scope参数）的权限的前提下（服务号获得高级接口后，默认拥有scope参数中的snsapi_base和snsapi_userinfo），引导关注者打开如下页面：\n`https://open.weixin.qq.com/connect/oauth2/authorize?appid=APPID&redirect_uri=REDIRECT_URI&response_type=code&scope=SCOPE&state=STATE#wechat_redirect`。若提示“该链接无法访问”，请检查参数是否填写错误，是否拥有scope参数对应的授权作用域权限；并且由于授权操作安全等级较高，所以在发起授权请求时，微信会对授权链接做正则强匹配校验，如果链接的参数顺序不对，授权页面将无法正常访问。\n \n| 参数| 是否必填|参数说明/\n|:---:|:---:|:---:|\n| appid | 是 | 公众号的唯一标识 |\n| redirect_uri | 是\t| 授权后重定向的回调链接地址， 需要使用[urlEncode](http://tool.chinaz.com/Tools/urlencode.aspx)对链接进行处理 |\n| response_type | 是 | 返回类型，请填写code |\n| scope | 是 | 应用授权作用域，snsapi_base （不弹出授权页面，直接跳转，只能获取用户openid），snsapi_userinfo （弹出授权页面，可通过openid拿到昵称、性别、所在地。并且， 即使在未关注的情况下，只要用户授权，也能获取其信息 ） |\n| state | 否 | 重定向后会带上state参数，开发者可以填写a-zA-Z0-9的参数值，最多128字节 |\n| #wechat_redirect | 是 | 无论直接打开还是做页面302重定向时候，必须带此参数 |\n\n参考链接\n```\nscope为snsapi_base\nhttps://open.weixin.qq.com/connect/oauth2/authorize?\nappid=wx520c15f417810387\n&redirect_uri=https%3A%2F%2Fchong.qq.com%2Fphp%2Findex.php%3Fd%3D%26c%3DwxAdapter%26m%3DmobileDeal%26showwxpaytitle%3D1%26vb2ctag%3D4_2030_5_1194_60\n&response_type=code\n&scope=snsapi_base\n&state=123\n#wechat_redirect\n \n\nscope为snsapi_userinfo\nhttps://open.weixin.qq.com/connect/oauth2/authorize?\nappid=wx6ec33e01876afb1e\n&redirect_uri=http%3a%2f%2fh5.dpandora.cn%2fpromote%2fhelp_index.html\n&response_type=code\n&scope=snsapi_userinfo\n&state=STATE\n#wechat_redirect\n```\n如果同意授权，页面将跳转至 redirect_uri/?code=CODE&state=STATE。 把code传给server，server会通过code获取授权access_token，获取用户信息。\n\n### 使用jssdk\n#### 步骤一：绑定域名\n先登录微信公众平台进入“公众号设置”的“功能设置”里填写“JS接口安全域名”。\n\n#### 步骤二：引入JS文件\n在需要调用JS接口的页面引入如下JS文件，（支持https）：http://res.wx.qq.com/open/js/jweixin-1.2.0.js\n\n#### 步骤三：通过config接口注入权限验证配置\n所有需要使用JS-SDK的页面必须先注入配置信息，否则将无法调用（同一个url仅需调用一次，对于变化url的SPA的web app可在每次url变化时进行调用,目前Android微信客户端不支持pushState的H5新特性，所以使用pushState来实现web app的页面会导致签名失败，此问题会在Android6.2中修复）。通过接口获取签名。\n\n```\nwx.config({\n    debug: true, // 开启调试模式,调用的所有api的返回值会在客户端alert出来。\n    appId: '', // 必填，公众号的唯一标识\n    timestamp: , // 必填，生成签名的时间戳\n    nonceStr: '', // 必填，生成签名的随机串\n    signature: '',// 必填，签名\n    jsApiList: [] // 必填，需要使用的JS接口列表\n});\n```\n#### 步骤四：通过ready接口处理成功验证\nconfig信息验证后会执行ready方法，所有接口调用都必须在config接口获得结果之后，config是一个客户端的异步操作，所以如果需要在页面加载时就调用相关接口，则须把相关接口放在ready函数中调用来确保正确执行。对于用户触发时才调用的接口，则可以直接调用，不需要放在ready函数中。\n## 其他问题\n### config:invalid signature\n出现这个错误的原因一定是签名错误。原因可能有以下几种情况，可以逐一排查：\n+ 确认签名算法是否正确，可用 http://mp.weixin.qq.com/debug/cgi-bin/sandbox?t=jsapisign 页面工具进行校验。\n+ 确认config中nonceStr（js中驼峰标准大写S）, timestamp（没有驼峰标准）。\n+ 确认url格式。签名的url是页面完整的url，包括'http(s)://'部分以及'？'后面的GET参数部分,但不包括'#'hash后面的部分。\n+ 确认 config 中的 appid 与用来获取 jsapi_ticket 的 appid 一致。\n+ 确保一定缓存access_token和jsapi_ticket。\n+ 确保你获取用来签名的url是动态获取的，动态页面可参见实例代码中php的实现方式。如果是html的静态页面在前端通过ajax将url传到后台签名，前端需要用js获取当前页面除去'#'hash部分的链接（可用location.href.split('#')[0]获取,而且需要encodeURIComponent），因为页面一旦分享，微信客户端会在你的链接末尾加入其它参数，如果不是动态获取当前链接，将导致分享后的页面签名失败。\n\n### 获取用户昵称的特殊符号\n有些用户的昵称中包含有非ASCLL字符，包括编码外的图像以及文字。可以使用base64进行处理。","source":"_posts/前端配合微信授权.md","raw":"title: 前端配合微信授权\ntags: [WeChat]\ndate: 2018-01-12 16:21:52\ncategories: [WeChat]\ndescription: 微信授权前端配合工作小记\n---\n## 写在前面\n最近做了一个微信的活动，功能主要是好友之间互相投票。所以需要进行微信的授权。因为是第一次接触，所以记录下来备不时之需。**这篇博客主要参考官方[微信公众平台技术文档](https://mp.weixin.qq.com/wiki)，由于官方文档前后端教程混杂不方便阅读。所以整理出来这一篇。** \n### 关于网页授权回调域名的说明\n+ 在微信公众号请求用户网页授权之前，开发者需要先到公众平台官网中的“开发 - 接口权限 - 网页服务 - 网页帐号 - 网页授权获取用户基本信息”的配置选项中，修改授权回调域名。请注意，这里填写的是域名（是一个字符串），而不是URL，因此请勿加 http:// 等协议头。\n+ 授权回调域名配置规范为全域名，比如需要网页授权的域名为：www.qq.com，配置以后此域名下面的页面http://www.qq.com/music.html 、 http://www.qq.com/login.html 都可以进行OAuth2.0鉴权。但http://pay.qq.com 、 http://music.qq.com 、 http://qq.com无法进行OAuth2.0鉴权。\n\n### 关于网页授权的两种scope的区别说明\n+ 以snsapi_base为scope发起的网页授权，是用来获取进入页面的用户的openid的，并且是静默授权并自动跳转到回调页的。用户感知的就是直接进入了回调页（往往是业务页面）\n+ 以snsapi_userinfo为scope发起的网页授权，是用来获取用户的基本信息的。但这种授权需要用户手动同意，并且由于用户同意过，所以无须关注，就可在授权后获取该用户的基本信息。\n\n### 关于网页授权access_token和普通access_token的区别\n+ 微信网页授权是通过OAuth2.0机制实现的，在用户授权给公众号后，公众号可以获取到一个网页授权特有的接口调用凭证（网页授权access_token），通过网页授权access_token可以进行授权后接口调用，如获取用户基本信息；\n+ 其他微信接口，需要通过基础支持中的“获取access_token”接口来获取到的普通access_token调用。\n\n## 授权步骤\n### 用户同意授权，获取code\n在确保微信公众账号拥有授权作用域（scope参数）的权限的前提下（服务号获得高级接口后，默认拥有scope参数中的snsapi_base和snsapi_userinfo），引导关注者打开如下页面：\n`https://open.weixin.qq.com/connect/oauth2/authorize?appid=APPID&redirect_uri=REDIRECT_URI&response_type=code&scope=SCOPE&state=STATE#wechat_redirect`。若提示“该链接无法访问”，请检查参数是否填写错误，是否拥有scope参数对应的授权作用域权限；并且由于授权操作安全等级较高，所以在发起授权请求时，微信会对授权链接做正则强匹配校验，如果链接的参数顺序不对，授权页面将无法正常访问。\n \n| 参数| 是否必填|参数说明/\n|:---:|:---:|:---:|\n| appid | 是 | 公众号的唯一标识 |\n| redirect_uri | 是\t| 授权后重定向的回调链接地址， 需要使用[urlEncode](http://tool.chinaz.com/Tools/urlencode.aspx)对链接进行处理 |\n| response_type | 是 | 返回类型，请填写code |\n| scope | 是 | 应用授权作用域，snsapi_base （不弹出授权页面，直接跳转，只能获取用户openid），snsapi_userinfo （弹出授权页面，可通过openid拿到昵称、性别、所在地。并且， 即使在未关注的情况下，只要用户授权，也能获取其信息 ） |\n| state | 否 | 重定向后会带上state参数，开发者可以填写a-zA-Z0-9的参数值，最多128字节 |\n| #wechat_redirect | 是 | 无论直接打开还是做页面302重定向时候，必须带此参数 |\n\n参考链接\n```\nscope为snsapi_base\nhttps://open.weixin.qq.com/connect/oauth2/authorize?\nappid=wx520c15f417810387\n&redirect_uri=https%3A%2F%2Fchong.qq.com%2Fphp%2Findex.php%3Fd%3D%26c%3DwxAdapter%26m%3DmobileDeal%26showwxpaytitle%3D1%26vb2ctag%3D4_2030_5_1194_60\n&response_type=code\n&scope=snsapi_base\n&state=123\n#wechat_redirect\n \n\nscope为snsapi_userinfo\nhttps://open.weixin.qq.com/connect/oauth2/authorize?\nappid=wx6ec33e01876afb1e\n&redirect_uri=http%3a%2f%2fh5.dpandora.cn%2fpromote%2fhelp_index.html\n&response_type=code\n&scope=snsapi_userinfo\n&state=STATE\n#wechat_redirect\n```\n如果同意授权，页面将跳转至 redirect_uri/?code=CODE&state=STATE。 把code传给server，server会通过code获取授权access_token，获取用户信息。\n\n### 使用jssdk\n#### 步骤一：绑定域名\n先登录微信公众平台进入“公众号设置”的“功能设置”里填写“JS接口安全域名”。\n\n#### 步骤二：引入JS文件\n在需要调用JS接口的页面引入如下JS文件，（支持https）：http://res.wx.qq.com/open/js/jweixin-1.2.0.js\n\n#### 步骤三：通过config接口注入权限验证配置\n所有需要使用JS-SDK的页面必须先注入配置信息，否则将无法调用（同一个url仅需调用一次，对于变化url的SPA的web app可在每次url变化时进行调用,目前Android微信客户端不支持pushState的H5新特性，所以使用pushState来实现web app的页面会导致签名失败，此问题会在Android6.2中修复）。通过接口获取签名。\n\n```\nwx.config({\n    debug: true, // 开启调试模式,调用的所有api的返回值会在客户端alert出来。\n    appId: '', // 必填，公众号的唯一标识\n    timestamp: , // 必填，生成签名的时间戳\n    nonceStr: '', // 必填，生成签名的随机串\n    signature: '',// 必填，签名\n    jsApiList: [] // 必填，需要使用的JS接口列表\n});\n```\n#### 步骤四：通过ready接口处理成功验证\nconfig信息验证后会执行ready方法，所有接口调用都必须在config接口获得结果之后，config是一个客户端的异步操作，所以如果需要在页面加载时就调用相关接口，则须把相关接口放在ready函数中调用来确保正确执行。对于用户触发时才调用的接口，则可以直接调用，不需要放在ready函数中。\n## 其他问题\n### config:invalid signature\n出现这个错误的原因一定是签名错误。原因可能有以下几种情况，可以逐一排查：\n+ 确认签名算法是否正确，可用 http://mp.weixin.qq.com/debug/cgi-bin/sandbox?t=jsapisign 页面工具进行校验。\n+ 确认config中nonceStr（js中驼峰标准大写S）, timestamp（没有驼峰标准）。\n+ 确认url格式。签名的url是页面完整的url，包括'http(s)://'部分以及'？'后面的GET参数部分,但不包括'#'hash后面的部分。\n+ 确认 config 中的 appid 与用来获取 jsapi_ticket 的 appid 一致。\n+ 确保一定缓存access_token和jsapi_ticket。\n+ 确保你获取用来签名的url是动态获取的，动态页面可参见实例代码中php的实现方式。如果是html的静态页面在前端通过ajax将url传到后台签名，前端需要用js获取当前页面除去'#'hash部分的链接（可用location.href.split('#')[0]获取,而且需要encodeURIComponent），因为页面一旦分享，微信客户端会在你的链接末尾加入其它参数，如果不是动态获取当前链接，将导致分享后的页面签名失败。\n\n### 获取用户昵称的特殊符号\n有些用户的昵称中包含有非ASCLL字符，包括编码外的图像以及文字。可以使用base64进行处理。","slug":"前端配合微信授权","published":1,"updated":"2019-09-29T11:22:34.501Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck3jm8gw9001kz0bt14yi9ndd","content":"<h2 id=\"写在前面\"><a href=\"#写在前面\" class=\"headerlink\" title=\"写在前面\"></a>写在前面</h2><p>最近做了一个微信的活动，功能主要是好友之间互相投票。所以需要进行微信的授权。因为是第一次接触，所以记录下来备不时之需。<strong>这篇博客主要参考官方<a href=\"https://mp.weixin.qq.com/wiki\" target=\"_blank\" rel=\"noopener\">微信公众平台技术文档</a>，由于官方文档前后端教程混杂不方便阅读。所以整理出来这一篇。</strong> </p>\n<h3 id=\"关于网页授权回调域名的说明\"><a href=\"#关于网页授权回调域名的说明\" class=\"headerlink\" title=\"关于网页授权回调域名的说明\"></a>关于网页授权回调域名的说明</h3><ul>\n<li>在微信公众号请求用户网页授权之前，开发者需要先到公众平台官网中的“开发 - 接口权限 - 网页服务 - 网页帐号 - 网页授权获取用户基本信息”的配置选项中，修改授权回调域名。请注意，这里填写的是域名（是一个字符串），而不是URL，因此请勿加 http:// 等协议头。</li>\n<li>授权回调域名配置规范为全域名，比如需要网页授权的域名为：<a href=\"http://www.qq.com，配置以后此域名下面的页面http://www.qq.com/music.html\" target=\"_blank\" rel=\"noopener\">www.qq.com，配置以后此域名下面的页面http://www.qq.com/music.html</a> 、 <a href=\"http://www.qq.com/login.html\" target=\"_blank\" rel=\"noopener\">http://www.qq.com/login.html</a> 都可以进行OAuth2.0鉴权。但<a href=\"http://pay.qq.com\" target=\"_blank\" rel=\"noopener\">http://pay.qq.com</a> 、 <a href=\"http://music.qq.com\" target=\"_blank\" rel=\"noopener\">http://music.qq.com</a> 、 <a href=\"http://qq.com无法进行OAuth2.0鉴权。\" target=\"_blank\" rel=\"noopener\">http://qq.com无法进行OAuth2.0鉴权。</a></li>\n</ul>\n<h3 id=\"关于网页授权的两种scope的区别说明\"><a href=\"#关于网页授权的两种scope的区别说明\" class=\"headerlink\" title=\"关于网页授权的两种scope的区别说明\"></a>关于网页授权的两种scope的区别说明</h3><ul>\n<li>以snsapi_base为scope发起的网页授权，是用来获取进入页面的用户的openid的，并且是静默授权并自动跳转到回调页的。用户感知的就是直接进入了回调页（往往是业务页面）</li>\n<li>以snsapi_userinfo为scope发起的网页授权，是用来获取用户的基本信息的。但这种授权需要用户手动同意，并且由于用户同意过，所以无须关注，就可在授权后获取该用户的基本信息。</li>\n</ul>\n<h3 id=\"关于网页授权access-token和普通access-token的区别\"><a href=\"#关于网页授权access-token和普通access-token的区别\" class=\"headerlink\" title=\"关于网页授权access_token和普通access_token的区别\"></a>关于网页授权access_token和普通access_token的区别</h3><ul>\n<li>微信网页授权是通过OAuth2.0机制实现的，在用户授权给公众号后，公众号可以获取到一个网页授权特有的接口调用凭证（网页授权access_token），通过网页授权access_token可以进行授权后接口调用，如获取用户基本信息；</li>\n<li>其他微信接口，需要通过基础支持中的“获取access_token”接口来获取到的普通access_token调用。</li>\n</ul>\n<h2 id=\"授权步骤\"><a href=\"#授权步骤\" class=\"headerlink\" title=\"授权步骤\"></a>授权步骤</h2><h3 id=\"用户同意授权，获取code\"><a href=\"#用户同意授权，获取code\" class=\"headerlink\" title=\"用户同意授权，获取code\"></a>用户同意授权，获取code</h3><p>在确保微信公众账号拥有授权作用域（scope参数）的权限的前提下（服务号获得高级接口后，默认拥有scope参数中的snsapi_base和snsapi_userinfo），引导关注者打开如下页面：<br><code>https://open.weixin.qq.com/connect/oauth2/authorize?appid=APPID&amp;redirect_uri=REDIRECT_URI&amp;response_type=code&amp;scope=SCOPE&amp;state=STATE#wechat_redirect</code>。若提示“该链接无法访问”，请检查参数是否填写错误，是否拥有scope参数对应的授权作用域权限；并且由于授权操作安全等级较高，所以在发起授权请求时，微信会对授权链接做正则强匹配校验，如果链接的参数顺序不对，授权页面将无法正常访问。</p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">参数</th>\n<th style=\"text-align:center\">是否必填</th>\n<th style=\"text-align:center\">参数说明/</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">appid</td>\n<td style=\"text-align:center\">是</td>\n<td style=\"text-align:center\">公众号的唯一标识</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">redirect_uri</td>\n<td style=\"text-align:center\">是</td>\n<td style=\"text-align:center\">授权后重定向的回调链接地址， 需要使用<a href=\"http://tool.chinaz.com/Tools/urlencode.aspx\" target=\"_blank\" rel=\"noopener\">urlEncode</a>对链接进行处理</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">response_type</td>\n<td style=\"text-align:center\">是</td>\n<td style=\"text-align:center\">返回类型，请填写code</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">scope</td>\n<td style=\"text-align:center\">是</td>\n<td style=\"text-align:center\">应用授权作用域，snsapi_base （不弹出授权页面，直接跳转，只能获取用户openid），snsapi_userinfo （弹出授权页面，可通过openid拿到昵称、性别、所在地。并且， 即使在未关注的情况下，只要用户授权，也能获取其信息 ）</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">state</td>\n<td style=\"text-align:center\">否</td>\n<td style=\"text-align:center\">重定向后会带上state参数，开发者可以填写a-zA-Z0-9的参数值，最多128字节</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">#wechat_redirect</td>\n<td style=\"text-align:center\">是</td>\n<td style=\"text-align:center\">无论直接打开还是做页面302重定向时候，必须带此参数</td>\n</tr>\n</tbody>\n</table>\n<p>参考链接<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">scope为snsapi_base</span><br><span class=\"line\">https://open.weixin.qq.com/connect/oauth2/authorize?</span><br><span class=\"line\">appid=wx520c15f417810387</span><br><span class=\"line\">&amp;redirect_uri=https%3A%2F%2Fchong.qq.com%2Fphp%2Findex.php%3Fd%3D%26c%3DwxAdapter%26m%3DmobileDeal%26showwxpaytitle%3D1%26vb2ctag%3D4_2030_5_1194_60</span><br><span class=\"line\">&amp;response_type=code</span><br><span class=\"line\">&amp;scope=snsapi_base</span><br><span class=\"line\">&amp;state=123</span><br><span class=\"line\">#wechat_redirect</span><br><span class=\"line\"> </span><br><span class=\"line\"></span><br><span class=\"line\">scope为snsapi_userinfo</span><br><span class=\"line\">https://open.weixin.qq.com/connect/oauth2/authorize?</span><br><span class=\"line\">appid=wx6ec33e01876afb1e</span><br><span class=\"line\">&amp;redirect_uri=http%3a%2f%2fh5.dpandora.cn%2fpromote%2fhelp_index.html</span><br><span class=\"line\">&amp;response_type=code</span><br><span class=\"line\">&amp;scope=snsapi_userinfo</span><br><span class=\"line\">&amp;state=STATE</span><br><span class=\"line\">#wechat_redirect</span><br></pre></td></tr></table></figure></p>\n<p>如果同意授权，页面将跳转至 redirect_uri/?code=CODE&amp;state=STATE。 把code传给server，server会通过code获取授权access_token，获取用户信息。</p>\n<h3 id=\"使用jssdk\"><a href=\"#使用jssdk\" class=\"headerlink\" title=\"使用jssdk\"></a>使用jssdk</h3><h4 id=\"步骤一：绑定域名\"><a href=\"#步骤一：绑定域名\" class=\"headerlink\" title=\"步骤一：绑定域名\"></a>步骤一：绑定域名</h4><p>先登录微信公众平台进入“公众号设置”的“功能设置”里填写“JS接口安全域名”。</p>\n<h4 id=\"步骤二：引入JS文件\"><a href=\"#步骤二：引入JS文件\" class=\"headerlink\" title=\"步骤二：引入JS文件\"></a>步骤二：引入JS文件</h4><p>在需要调用JS接口的页面引入如下JS文件，（支持https）：<a href=\"http://res.wx.qq.com/open/js/jweixin-1.2.0.js\" target=\"_blank\" rel=\"noopener\">http://res.wx.qq.com/open/js/jweixin-1.2.0.js</a></p>\n<h4 id=\"步骤三：通过config接口注入权限验证配置\"><a href=\"#步骤三：通过config接口注入权限验证配置\" class=\"headerlink\" title=\"步骤三：通过config接口注入权限验证配置\"></a>步骤三：通过config接口注入权限验证配置</h4><p>所有需要使用JS-SDK的页面必须先注入配置信息，否则将无法调用（同一个url仅需调用一次，对于变化url的SPA的web app可在每次url变化时进行调用,目前Android微信客户端不支持pushState的H5新特性，所以使用pushState来实现web app的页面会导致签名失败，此问题会在Android6.2中修复）。通过接口获取签名。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">wx.config(&#123;</span><br><span class=\"line\">    debug: true, // 开启调试模式,调用的所有api的返回值会在客户端alert出来。</span><br><span class=\"line\">    appId: &apos;&apos;, // 必填，公众号的唯一标识</span><br><span class=\"line\">    timestamp: , // 必填，生成签名的时间戳</span><br><span class=\"line\">    nonceStr: &apos;&apos;, // 必填，生成签名的随机串</span><br><span class=\"line\">    signature: &apos;&apos;,// 必填，签名</span><br><span class=\"line\">    jsApiList: [] // 必填，需要使用的JS接口列表</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<h4 id=\"步骤四：通过ready接口处理成功验证\"><a href=\"#步骤四：通过ready接口处理成功验证\" class=\"headerlink\" title=\"步骤四：通过ready接口处理成功验证\"></a>步骤四：通过ready接口处理成功验证</h4><p>config信息验证后会执行ready方法，所有接口调用都必须在config接口获得结果之后，config是一个客户端的异步操作，所以如果需要在页面加载时就调用相关接口，则须把相关接口放在ready函数中调用来确保正确执行。对于用户触发时才调用的接口，则可以直接调用，不需要放在ready函数中。</p>\n<h2 id=\"其他问题\"><a href=\"#其他问题\" class=\"headerlink\" title=\"其他问题\"></a>其他问题</h2><h3 id=\"config-invalid-signature\"><a href=\"#config-invalid-signature\" class=\"headerlink\" title=\"config:invalid signature\"></a>config:invalid signature</h3><p>出现这个错误的原因一定是签名错误。原因可能有以下几种情况，可以逐一排查：</p>\n<ul>\n<li>确认签名算法是否正确，可用 <a href=\"http://mp.weixin.qq.com/debug/cgi-bin/sandbox?t=jsapisign\" target=\"_blank\" rel=\"noopener\">http://mp.weixin.qq.com/debug/cgi-bin/sandbox?t=jsapisign</a> 页面工具进行校验。</li>\n<li>确认config中nonceStr（js中驼峰标准大写S）, timestamp（没有驼峰标准）。</li>\n<li>确认url格式。签名的url是页面完整的url，包括’http(s)://‘部分以及’？’后面的GET参数部分,但不包括’#’hash后面的部分。</li>\n<li>确认 config 中的 appid 与用来获取 jsapi_ticket 的 appid 一致。</li>\n<li>确保一定缓存access_token和jsapi_ticket。</li>\n<li>确保你获取用来签名的url是动态获取的，动态页面可参见实例代码中php的实现方式。如果是html的静态页面在前端通过ajax将url传到后台签名，前端需要用js获取当前页面除去’#’hash部分的链接（可用location.href.split(‘#’)[0]获取,而且需要encodeURIComponent），因为页面一旦分享，微信客户端会在你的链接末尾加入其它参数，如果不是动态获取当前链接，将导致分享后的页面签名失败。</li>\n</ul>\n<h3 id=\"获取用户昵称的特殊符号\"><a href=\"#获取用户昵称的特殊符号\" class=\"headerlink\" title=\"获取用户昵称的特殊符号\"></a>获取用户昵称的特殊符号</h3><p>有些用户的昵称中包含有非ASCLL字符，包括编码外的图像以及文字。可以使用base64进行处理。</p>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"写在前面\"><a href=\"#写在前面\" class=\"headerlink\" title=\"写在前面\"></a>写在前面</h2><p>最近做了一个微信的活动，功能主要是好友之间互相投票。所以需要进行微信的授权。因为是第一次接触，所以记录下来备不时之需。<strong>这篇博客主要参考官方<a href=\"https://mp.weixin.qq.com/wiki\" target=\"_blank\" rel=\"noopener\">微信公众平台技术文档</a>，由于官方文档前后端教程混杂不方便阅读。所以整理出来这一篇。</strong> </p>\n<h3 id=\"关于网页授权回调域名的说明\"><a href=\"#关于网页授权回调域名的说明\" class=\"headerlink\" title=\"关于网页授权回调域名的说明\"></a>关于网页授权回调域名的说明</h3><ul>\n<li>在微信公众号请求用户网页授权之前，开发者需要先到公众平台官网中的“开发 - 接口权限 - 网页服务 - 网页帐号 - 网页授权获取用户基本信息”的配置选项中，修改授权回调域名。请注意，这里填写的是域名（是一个字符串），而不是URL，因此请勿加 http:// 等协议头。</li>\n<li>授权回调域名配置规范为全域名，比如需要网页授权的域名为：<a href=\"http://www.qq.com，配置以后此域名下面的页面http://www.qq.com/music.html\" target=\"_blank\" rel=\"noopener\">www.qq.com，配置以后此域名下面的页面http://www.qq.com/music.html</a> 、 <a href=\"http://www.qq.com/login.html\" target=\"_blank\" rel=\"noopener\">http://www.qq.com/login.html</a> 都可以进行OAuth2.0鉴权。但<a href=\"http://pay.qq.com\" target=\"_blank\" rel=\"noopener\">http://pay.qq.com</a> 、 <a href=\"http://music.qq.com\" target=\"_blank\" rel=\"noopener\">http://music.qq.com</a> 、 <a href=\"http://qq.com无法进行OAuth2.0鉴权。\" target=\"_blank\" rel=\"noopener\">http://qq.com无法进行OAuth2.0鉴权。</a></li>\n</ul>\n<h3 id=\"关于网页授权的两种scope的区别说明\"><a href=\"#关于网页授权的两种scope的区别说明\" class=\"headerlink\" title=\"关于网页授权的两种scope的区别说明\"></a>关于网页授权的两种scope的区别说明</h3><ul>\n<li>以snsapi_base为scope发起的网页授权，是用来获取进入页面的用户的openid的，并且是静默授权并自动跳转到回调页的。用户感知的就是直接进入了回调页（往往是业务页面）</li>\n<li>以snsapi_userinfo为scope发起的网页授权，是用来获取用户的基本信息的。但这种授权需要用户手动同意，并且由于用户同意过，所以无须关注，就可在授权后获取该用户的基本信息。</li>\n</ul>\n<h3 id=\"关于网页授权access-token和普通access-token的区别\"><a href=\"#关于网页授权access-token和普通access-token的区别\" class=\"headerlink\" title=\"关于网页授权access_token和普通access_token的区别\"></a>关于网页授权access_token和普通access_token的区别</h3><ul>\n<li>微信网页授权是通过OAuth2.0机制实现的，在用户授权给公众号后，公众号可以获取到一个网页授权特有的接口调用凭证（网页授权access_token），通过网页授权access_token可以进行授权后接口调用，如获取用户基本信息；</li>\n<li>其他微信接口，需要通过基础支持中的“获取access_token”接口来获取到的普通access_token调用。</li>\n</ul>\n<h2 id=\"授权步骤\"><a href=\"#授权步骤\" class=\"headerlink\" title=\"授权步骤\"></a>授权步骤</h2><h3 id=\"用户同意授权，获取code\"><a href=\"#用户同意授权，获取code\" class=\"headerlink\" title=\"用户同意授权，获取code\"></a>用户同意授权，获取code</h3><p>在确保微信公众账号拥有授权作用域（scope参数）的权限的前提下（服务号获得高级接口后，默认拥有scope参数中的snsapi_base和snsapi_userinfo），引导关注者打开如下页面：<br><code>https://open.weixin.qq.com/connect/oauth2/authorize?appid=APPID&amp;redirect_uri=REDIRECT_URI&amp;response_type=code&amp;scope=SCOPE&amp;state=STATE#wechat_redirect</code>。若提示“该链接无法访问”，请检查参数是否填写错误，是否拥有scope参数对应的授权作用域权限；并且由于授权操作安全等级较高，所以在发起授权请求时，微信会对授权链接做正则强匹配校验，如果链接的参数顺序不对，授权页面将无法正常访问。</p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">参数</th>\n<th style=\"text-align:center\">是否必填</th>\n<th style=\"text-align:center\">参数说明/</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">appid</td>\n<td style=\"text-align:center\">是</td>\n<td style=\"text-align:center\">公众号的唯一标识</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">redirect_uri</td>\n<td style=\"text-align:center\">是</td>\n<td style=\"text-align:center\">授权后重定向的回调链接地址， 需要使用<a href=\"http://tool.chinaz.com/Tools/urlencode.aspx\" target=\"_blank\" rel=\"noopener\">urlEncode</a>对链接进行处理</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">response_type</td>\n<td style=\"text-align:center\">是</td>\n<td style=\"text-align:center\">返回类型，请填写code</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">scope</td>\n<td style=\"text-align:center\">是</td>\n<td style=\"text-align:center\">应用授权作用域，snsapi_base （不弹出授权页面，直接跳转，只能获取用户openid），snsapi_userinfo （弹出授权页面，可通过openid拿到昵称、性别、所在地。并且， 即使在未关注的情况下，只要用户授权，也能获取其信息 ）</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">state</td>\n<td style=\"text-align:center\">否</td>\n<td style=\"text-align:center\">重定向后会带上state参数，开发者可以填写a-zA-Z0-9的参数值，最多128字节</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">#wechat_redirect</td>\n<td style=\"text-align:center\">是</td>\n<td style=\"text-align:center\">无论直接打开还是做页面302重定向时候，必须带此参数</td>\n</tr>\n</tbody>\n</table>\n<p>参考链接<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">scope为snsapi_base</span><br><span class=\"line\">https://open.weixin.qq.com/connect/oauth2/authorize?</span><br><span class=\"line\">appid=wx520c15f417810387</span><br><span class=\"line\">&amp;redirect_uri=https%3A%2F%2Fchong.qq.com%2Fphp%2Findex.php%3Fd%3D%26c%3DwxAdapter%26m%3DmobileDeal%26showwxpaytitle%3D1%26vb2ctag%3D4_2030_5_1194_60</span><br><span class=\"line\">&amp;response_type=code</span><br><span class=\"line\">&amp;scope=snsapi_base</span><br><span class=\"line\">&amp;state=123</span><br><span class=\"line\">#wechat_redirect</span><br><span class=\"line\"> </span><br><span class=\"line\"></span><br><span class=\"line\">scope为snsapi_userinfo</span><br><span class=\"line\">https://open.weixin.qq.com/connect/oauth2/authorize?</span><br><span class=\"line\">appid=wx6ec33e01876afb1e</span><br><span class=\"line\">&amp;redirect_uri=http%3a%2f%2fh5.dpandora.cn%2fpromote%2fhelp_index.html</span><br><span class=\"line\">&amp;response_type=code</span><br><span class=\"line\">&amp;scope=snsapi_userinfo</span><br><span class=\"line\">&amp;state=STATE</span><br><span class=\"line\">#wechat_redirect</span><br></pre></td></tr></table></figure></p>\n<p>如果同意授权，页面将跳转至 redirect_uri/?code=CODE&amp;state=STATE。 把code传给server，server会通过code获取授权access_token，获取用户信息。</p>\n<h3 id=\"使用jssdk\"><a href=\"#使用jssdk\" class=\"headerlink\" title=\"使用jssdk\"></a>使用jssdk</h3><h4 id=\"步骤一：绑定域名\"><a href=\"#步骤一：绑定域名\" class=\"headerlink\" title=\"步骤一：绑定域名\"></a>步骤一：绑定域名</h4><p>先登录微信公众平台进入“公众号设置”的“功能设置”里填写“JS接口安全域名”。</p>\n<h4 id=\"步骤二：引入JS文件\"><a href=\"#步骤二：引入JS文件\" class=\"headerlink\" title=\"步骤二：引入JS文件\"></a>步骤二：引入JS文件</h4><p>在需要调用JS接口的页面引入如下JS文件，（支持https）：<a href=\"http://res.wx.qq.com/open/js/jweixin-1.2.0.js\" target=\"_blank\" rel=\"noopener\">http://res.wx.qq.com/open/js/jweixin-1.2.0.js</a></p>\n<h4 id=\"步骤三：通过config接口注入权限验证配置\"><a href=\"#步骤三：通过config接口注入权限验证配置\" class=\"headerlink\" title=\"步骤三：通过config接口注入权限验证配置\"></a>步骤三：通过config接口注入权限验证配置</h4><p>所有需要使用JS-SDK的页面必须先注入配置信息，否则将无法调用（同一个url仅需调用一次，对于变化url的SPA的web app可在每次url变化时进行调用,目前Android微信客户端不支持pushState的H5新特性，所以使用pushState来实现web app的页面会导致签名失败，此问题会在Android6.2中修复）。通过接口获取签名。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">wx.config(&#123;</span><br><span class=\"line\">    debug: true, // 开启调试模式,调用的所有api的返回值会在客户端alert出来。</span><br><span class=\"line\">    appId: &apos;&apos;, // 必填，公众号的唯一标识</span><br><span class=\"line\">    timestamp: , // 必填，生成签名的时间戳</span><br><span class=\"line\">    nonceStr: &apos;&apos;, // 必填，生成签名的随机串</span><br><span class=\"line\">    signature: &apos;&apos;,// 必填，签名</span><br><span class=\"line\">    jsApiList: [] // 必填，需要使用的JS接口列表</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<h4 id=\"步骤四：通过ready接口处理成功验证\"><a href=\"#步骤四：通过ready接口处理成功验证\" class=\"headerlink\" title=\"步骤四：通过ready接口处理成功验证\"></a>步骤四：通过ready接口处理成功验证</h4><p>config信息验证后会执行ready方法，所有接口调用都必须在config接口获得结果之后，config是一个客户端的异步操作，所以如果需要在页面加载时就调用相关接口，则须把相关接口放在ready函数中调用来确保正确执行。对于用户触发时才调用的接口，则可以直接调用，不需要放在ready函数中。</p>\n<h2 id=\"其他问题\"><a href=\"#其他问题\" class=\"headerlink\" title=\"其他问题\"></a>其他问题</h2><h3 id=\"config-invalid-signature\"><a href=\"#config-invalid-signature\" class=\"headerlink\" title=\"config:invalid signature\"></a>config:invalid signature</h3><p>出现这个错误的原因一定是签名错误。原因可能有以下几种情况，可以逐一排查：</p>\n<ul>\n<li>确认签名算法是否正确，可用 <a href=\"http://mp.weixin.qq.com/debug/cgi-bin/sandbox?t=jsapisign\" target=\"_blank\" rel=\"noopener\">http://mp.weixin.qq.com/debug/cgi-bin/sandbox?t=jsapisign</a> 页面工具进行校验。</li>\n<li>确认config中nonceStr（js中驼峰标准大写S）, timestamp（没有驼峰标准）。</li>\n<li>确认url格式。签名的url是页面完整的url，包括’http(s)://‘部分以及’？’后面的GET参数部分,但不包括’#’hash后面的部分。</li>\n<li>确认 config 中的 appid 与用来获取 jsapi_ticket 的 appid 一致。</li>\n<li>确保一定缓存access_token和jsapi_ticket。</li>\n<li>确保你获取用来签名的url是动态获取的，动态页面可参见实例代码中php的实现方式。如果是html的静态页面在前端通过ajax将url传到后台签名，前端需要用js获取当前页面除去’#’hash部分的链接（可用location.href.split(‘#’)[0]获取,而且需要encodeURIComponent），因为页面一旦分享，微信客户端会在你的链接末尾加入其它参数，如果不是动态获取当前链接，将导致分享后的页面签名失败。</li>\n</ul>\n<h3 id=\"获取用户昵称的特殊符号\"><a href=\"#获取用户昵称的特殊符号\" class=\"headerlink\" title=\"获取用户昵称的特殊符号\"></a>获取用户昵称的特殊符号</h3><p>有些用户的昵称中包含有非ASCLL字符，包括编码外的图像以及文字。可以使用base64进行处理。</p>\n"},{"title":"管理团队代码","date":"2018-10-16T08:07:51.000Z","description":"使用prettier + eslint + husky 管理团队代码","_content":"# prettier的中文意思是“漂亮的、机灵的”，也是一个流行的代码格式化工具的名称，它能够解析代码，使用你自己设定的规则来重新打印出格式规范的代码。\n## 同样是代码解析工具，为什么有了eslint还需要prettier？\n众所周知，eslint是一款代码检查工具，但它有不足的地方。虽然提供了大量的代码检查方案，但也只是停留在了代码检查的阶段而已。他会提出警告：你的代码不符合我制定的规范，但也仅此而已。但prettier不同。prettier的处理方案是：删除所有代码原始样式，并通过既定的规则，重新生成AST，然后生成新的代码。用这种方法确保所有输出的代码都符合一致的样式。先看一个简单的例子：\n```js\n// foo\nfoo()\n```\n但或许你喜欢注释里方法远一些呢？\n```js\n// foo\n \nfoo()\n```\n事实上，如果注释和方法之间插入的都是空白行，在eslint看来，这俩种方法是完全相同的，都不会产生错误。再来看另一个例子：\n```js\n$(foo).css().animate().addClass().click()\n```\n但如果你更喜欢这样的写法呢？\n```js\n$(foo).css()\n      .animate()\n      .addClass()\n      .click()\n```\n很显然，俩种方法都有存在的可能性，但同样的，eslint还是会认为这样都是极好的，不会做任何处理。                                  \n\n这样的例子其实有很多。因此，eslint的局限性就凸显了出来，我们需要prettier来更加规范我们的代码。prettier的处理方式如上所述，删除你的所有代码样式，然后按照约束的规则，重新生成符合标准的代码。这样一来就保证了无论你的代码以什么样的格式输入，都能保证在prettier解析之后得到的代码是完全一样的。\n## 为什么prettier比eslint更强大，我们我选择单独使用prettier？\nprettier虽然有更强大的能力，但他只提供了非常少的规则。换句话说，我们使用prettier来生成代码，但生成代码的规则还是由eslint来提供的。\n## 如何使用prettier？\n### 首先安装prettier\n```\nnpm i -D eslint-plugin-prettier eslint-config-prettier\n```\n### 然后编辑.eslintrc\n```\nmodule.exports = {\n  ...\n  extends: [\n    ...\n    \"plugin:prettier/recommended\"\n  ],\n  plugins: [\n    'vue',\n    'prettier'\n  ],\n  rules: {\n    ...\n  }\n}\n```\nrules里可以填写eslint的规则或者eslint-config-prettier的规则。\t\t\t\t\t\n### 最后创建.prettierrc文件，写prettier自己的规则：\n```\n{\n\"semi\": false,\n\"singleQuote\": true,\n\"printWidth\": 80,\n\"tabWidth\": 2,\n\"useTabs\": false,\n\"trailingComma\": \"all\",\n\"bracketSpacing\": true,\n\"jsxBracketSameLine\": false,\n\"arrowParens\": \"avoid\"\n// ...\n}\n```\n具体的规则[看这里](https://prettier.io/docs/en/options.html)。\n## husky 又是什么东西？\nhusky可以阻止git commit 和git push的操作。我们可以配合使用，只有prettier没有问题时才可以提交git操作。\n```\nnpm i -D lint-staged husky\n```\n```\n// package.json\n{\n  ...\n  \"scripts\": {\n    ...\n    \"lint\": \"eslint --ext .js,.vue src\",\n    \"format\": \"prettier --write \\\"src/**/*.js\\\" \\\"src/**/*.vue\\\"\",\n    \"precommit\": \"lint-staged\"\n  },\n  \"lint-staged\": {\n    \"src/**/*.{js,json,css,vue}\": [\n      \"prettier --write\",\n      \"eslint --fix\",\n      \"git add\"\n    ]\n  },\n  \"husky\": {\n    \"hooks\": {\n      \"pre-commit\": \"npm run lint\",\n      \"pre-push\": \"npm test\",\n      \"...\": \"...\"\n    }\n  }\n}\n```\n这里scripts里添加了三个命令，第一个检测src目录下的js文件和vue文件是否符合eslint标准，第二个按照prettier标准格式化src文件夹中的js文件和vue文件，第三条规定在git commit之前调起lint-staged。\t\t\t\t\t\nlint-staged则规定了顺序执行三个命令，先按照prettier规则重写文件，再解决eslint警告，最后添加git文件。\t\t\t\t\n\nhusky则规定了在commit之前运行lint命令，不通过会报错，无法commit。同样的，push之前也可以做一些操作。更具体的细节[看这里](https://github.com/typicode/husky)。","source":"_posts/管理团队代码.md","raw":"---\ntitle: 管理团队代码\ntags: [Eslint, Prettier]\ndate: 2018-10-16 16:07:51\ncategories: [Eslint]\ndescription: 使用prettier + eslint + husky 管理团队代码\n---\n# prettier的中文意思是“漂亮的、机灵的”，也是一个流行的代码格式化工具的名称，它能够解析代码，使用你自己设定的规则来重新打印出格式规范的代码。\n## 同样是代码解析工具，为什么有了eslint还需要prettier？\n众所周知，eslint是一款代码检查工具，但它有不足的地方。虽然提供了大量的代码检查方案，但也只是停留在了代码检查的阶段而已。他会提出警告：你的代码不符合我制定的规范，但也仅此而已。但prettier不同。prettier的处理方案是：删除所有代码原始样式，并通过既定的规则，重新生成AST，然后生成新的代码。用这种方法确保所有输出的代码都符合一致的样式。先看一个简单的例子：\n```js\n// foo\nfoo()\n```\n但或许你喜欢注释里方法远一些呢？\n```js\n// foo\n \nfoo()\n```\n事实上，如果注释和方法之间插入的都是空白行，在eslint看来，这俩种方法是完全相同的，都不会产生错误。再来看另一个例子：\n```js\n$(foo).css().animate().addClass().click()\n```\n但如果你更喜欢这样的写法呢？\n```js\n$(foo).css()\n      .animate()\n      .addClass()\n      .click()\n```\n很显然，俩种方法都有存在的可能性，但同样的，eslint还是会认为这样都是极好的，不会做任何处理。                                  \n\n这样的例子其实有很多。因此，eslint的局限性就凸显了出来，我们需要prettier来更加规范我们的代码。prettier的处理方式如上所述，删除你的所有代码样式，然后按照约束的规则，重新生成符合标准的代码。这样一来就保证了无论你的代码以什么样的格式输入，都能保证在prettier解析之后得到的代码是完全一样的。\n## 为什么prettier比eslint更强大，我们我选择单独使用prettier？\nprettier虽然有更强大的能力，但他只提供了非常少的规则。换句话说，我们使用prettier来生成代码，但生成代码的规则还是由eslint来提供的。\n## 如何使用prettier？\n### 首先安装prettier\n```\nnpm i -D eslint-plugin-prettier eslint-config-prettier\n```\n### 然后编辑.eslintrc\n```\nmodule.exports = {\n  ...\n  extends: [\n    ...\n    \"plugin:prettier/recommended\"\n  ],\n  plugins: [\n    'vue',\n    'prettier'\n  ],\n  rules: {\n    ...\n  }\n}\n```\nrules里可以填写eslint的规则或者eslint-config-prettier的规则。\t\t\t\t\t\n### 最后创建.prettierrc文件，写prettier自己的规则：\n```\n{\n\"semi\": false,\n\"singleQuote\": true,\n\"printWidth\": 80,\n\"tabWidth\": 2,\n\"useTabs\": false,\n\"trailingComma\": \"all\",\n\"bracketSpacing\": true,\n\"jsxBracketSameLine\": false,\n\"arrowParens\": \"avoid\"\n// ...\n}\n```\n具体的规则[看这里](https://prettier.io/docs/en/options.html)。\n## husky 又是什么东西？\nhusky可以阻止git commit 和git push的操作。我们可以配合使用，只有prettier没有问题时才可以提交git操作。\n```\nnpm i -D lint-staged husky\n```\n```\n// package.json\n{\n  ...\n  \"scripts\": {\n    ...\n    \"lint\": \"eslint --ext .js,.vue src\",\n    \"format\": \"prettier --write \\\"src/**/*.js\\\" \\\"src/**/*.vue\\\"\",\n    \"precommit\": \"lint-staged\"\n  },\n  \"lint-staged\": {\n    \"src/**/*.{js,json,css,vue}\": [\n      \"prettier --write\",\n      \"eslint --fix\",\n      \"git add\"\n    ]\n  },\n  \"husky\": {\n    \"hooks\": {\n      \"pre-commit\": \"npm run lint\",\n      \"pre-push\": \"npm test\",\n      \"...\": \"...\"\n    }\n  }\n}\n```\n这里scripts里添加了三个命令，第一个检测src目录下的js文件和vue文件是否符合eslint标准，第二个按照prettier标准格式化src文件夹中的js文件和vue文件，第三条规定在git commit之前调起lint-staged。\t\t\t\t\t\nlint-staged则规定了顺序执行三个命令，先按照prettier规则重写文件，再解决eslint警告，最后添加git文件。\t\t\t\t\n\nhusky则规定了在commit之前运行lint命令，不通过会报错，无法commit。同样的，push之前也可以做一些操作。更具体的细节[看这里](https://github.com/typicode/husky)。","slug":"管理团队代码","published":1,"updated":"2019-09-29T11:22:34.501Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck3jm8gwa001nz0btzdjh8jyr","content":"<h1 id=\"prettier的中文意思是“漂亮的、机灵的”，也是一个流行的代码格式化工具的名称，它能够解析代码，使用你自己设定的规则来重新打印出格式规范的代码。\"><a href=\"#prettier的中文意思是“漂亮的、机灵的”，也是一个流行的代码格式化工具的名称，它能够解析代码，使用你自己设定的规则来重新打印出格式规范的代码。\" class=\"headerlink\" title=\"prettier的中文意思是“漂亮的、机灵的”，也是一个流行的代码格式化工具的名称，它能够解析代码，使用你自己设定的规则来重新打印出格式规范的代码。\"></a>prettier的中文意思是“漂亮的、机灵的”，也是一个流行的代码格式化工具的名称，它能够解析代码，使用你自己设定的规则来重新打印出格式规范的代码。</h1><h2 id=\"同样是代码解析工具，为什么有了eslint还需要prettier？\"><a href=\"#同样是代码解析工具，为什么有了eslint还需要prettier？\" class=\"headerlink\" title=\"同样是代码解析工具，为什么有了eslint还需要prettier？\"></a>同样是代码解析工具，为什么有了eslint还需要prettier？</h2><p>众所周知，eslint是一款代码检查工具，但它有不足的地方。虽然提供了大量的代码检查方案，但也只是停留在了代码检查的阶段而已。他会提出警告：你的代码不符合我制定的规范，但也仅此而已。但prettier不同。prettier的处理方案是：删除所有代码原始样式，并通过既定的规则，重新生成AST，然后生成新的代码。用这种方法确保所有输出的代码都符合一致的样式。先看一个简单的例子：<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// foo</span></span><br><span class=\"line\">foo()</span><br></pre></td></tr></table></figure></p>\n<p>但或许你喜欢注释里方法远一些呢？<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// foo</span></span><br><span class=\"line\"> </span><br><span class=\"line\">foo()</span><br></pre></td></tr></table></figure></p>\n<p>事实上，如果注释和方法之间插入的都是空白行，在eslint看来，这俩种方法是完全相同的，都不会产生错误。再来看另一个例子：<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$(foo).css().animate().addClass().click()</span><br></pre></td></tr></table></figure></p>\n<p>但如果你更喜欢这样的写法呢？<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$(foo).css()</span><br><span class=\"line\">      .animate()</span><br><span class=\"line\">      .addClass()</span><br><span class=\"line\">      .click()</span><br></pre></td></tr></table></figure></p>\n<p>很显然，俩种方法都有存在的可能性，但同样的，eslint还是会认为这样都是极好的，不会做任何处理。                                  </p>\n<p>这样的例子其实有很多。因此，eslint的局限性就凸显了出来，我们需要prettier来更加规范我们的代码。prettier的处理方式如上所述，删除你的所有代码样式，然后按照约束的规则，重新生成符合标准的代码。这样一来就保证了无论你的代码以什么样的格式输入，都能保证在prettier解析之后得到的代码是完全一样的。</p>\n<h2 id=\"为什么prettier比eslint更强大，我们我选择单独使用prettier？\"><a href=\"#为什么prettier比eslint更强大，我们我选择单独使用prettier？\" class=\"headerlink\" title=\"为什么prettier比eslint更强大，我们我选择单独使用prettier？\"></a>为什么prettier比eslint更强大，我们我选择单独使用prettier？</h2><p>prettier虽然有更强大的能力，但他只提供了非常少的规则。换句话说，我们使用prettier来生成代码，但生成代码的规则还是由eslint来提供的。</p>\n<h2 id=\"如何使用prettier？\"><a href=\"#如何使用prettier？\" class=\"headerlink\" title=\"如何使用prettier？\"></a>如何使用prettier？</h2><h3 id=\"首先安装prettier\"><a href=\"#首先安装prettier\" class=\"headerlink\" title=\"首先安装prettier\"></a>首先安装prettier</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm i -D eslint-plugin-prettier eslint-config-prettier</span><br></pre></td></tr></table></figure>\n<h3 id=\"然后编辑-eslintrc\"><a href=\"#然后编辑-eslintrc\" class=\"headerlink\" title=\"然后编辑.eslintrc\"></a>然后编辑.eslintrc</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">module.exports = &#123;</span><br><span class=\"line\">  ...</span><br><span class=\"line\">  extends: [</span><br><span class=\"line\">    ...</span><br><span class=\"line\">    &quot;plugin:prettier/recommended&quot;</span><br><span class=\"line\">  ],</span><br><span class=\"line\">  plugins: [</span><br><span class=\"line\">    &apos;vue&apos;,</span><br><span class=\"line\">    &apos;prettier&apos;</span><br><span class=\"line\">  ],</span><br><span class=\"line\">  rules: &#123;</span><br><span class=\"line\">    ...</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>rules里可以填写eslint的规则或者eslint-config-prettier的规则。                    </p>\n<h3 id=\"最后创建-prettierrc文件，写prettier自己的规则：\"><a href=\"#最后创建-prettierrc文件，写prettier自己的规则：\" class=\"headerlink\" title=\"最后创建.prettierrc文件，写prettier自己的规则：\"></a>最后创建.prettierrc文件，写prettier自己的规则：</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">&quot;semi&quot;: false,</span><br><span class=\"line\">&quot;singleQuote&quot;: true,</span><br><span class=\"line\">&quot;printWidth&quot;: 80,</span><br><span class=\"line\">&quot;tabWidth&quot;: 2,</span><br><span class=\"line\">&quot;useTabs&quot;: false,</span><br><span class=\"line\">&quot;trailingComma&quot;: &quot;all&quot;,</span><br><span class=\"line\">&quot;bracketSpacing&quot;: true,</span><br><span class=\"line\">&quot;jsxBracketSameLine&quot;: false,</span><br><span class=\"line\">&quot;arrowParens&quot;: &quot;avoid&quot;</span><br><span class=\"line\">// ...</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>具体的规则<a href=\"https://prettier.io/docs/en/options.html\" target=\"_blank\" rel=\"noopener\">看这里</a>。</p>\n<h2 id=\"husky-又是什么东西？\"><a href=\"#husky-又是什么东西？\" class=\"headerlink\" title=\"husky 又是什么东西？\"></a>husky 又是什么东西？</h2><p>husky可以阻止git commit 和git push的操作。我们可以配合使用，只有prettier没有问题时才可以提交git操作。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm i -D lint-staged husky</span><br></pre></td></tr></table></figure></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">// package.json</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">  ...</span><br><span class=\"line\">  &quot;scripts&quot;: &#123;</span><br><span class=\"line\">    ...</span><br><span class=\"line\">    &quot;lint&quot;: &quot;eslint --ext .js,.vue src&quot;,</span><br><span class=\"line\">    &quot;format&quot;: &quot;prettier --write \\&quot;src/**/*.js\\&quot; \\&quot;src/**/*.vue\\&quot;&quot;,</span><br><span class=\"line\">    &quot;precommit&quot;: &quot;lint-staged&quot;</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  &quot;lint-staged&quot;: &#123;</span><br><span class=\"line\">    &quot;src/**/*.&#123;js,json,css,vue&#125;&quot;: [</span><br><span class=\"line\">      &quot;prettier --write&quot;,</span><br><span class=\"line\">      &quot;eslint --fix&quot;,</span><br><span class=\"line\">      &quot;git add&quot;</span><br><span class=\"line\">    ]</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  &quot;husky&quot;: &#123;</span><br><span class=\"line\">    &quot;hooks&quot;: &#123;</span><br><span class=\"line\">      &quot;pre-commit&quot;: &quot;npm run lint&quot;,</span><br><span class=\"line\">      &quot;pre-push&quot;: &quot;npm test&quot;,</span><br><span class=\"line\">      &quot;...&quot;: &quot;...&quot;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>这里scripts里添加了三个命令，第一个检测src目录下的js文件和vue文件是否符合eslint标准，第二个按照prettier标准格式化src文件夹中的js文件和vue文件，第三条规定在git commit之前调起lint-staged。<br>lint-staged则规定了顺序执行三个命令，先按照prettier规则重写文件，再解决eslint警告，最后添加git文件。                </p>\n<p>husky则规定了在commit之前运行lint命令，不通过会报错，无法commit。同样的，push之前也可以做一些操作。更具体的细节<a href=\"https://github.com/typicode/husky\" target=\"_blank\" rel=\"noopener\">看这里</a>。</p>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"prettier的中文意思是“漂亮的、机灵的”，也是一个流行的代码格式化工具的名称，它能够解析代码，使用你自己设定的规则来重新打印出格式规范的代码。\"><a href=\"#prettier的中文意思是“漂亮的、机灵的”，也是一个流行的代码格式化工具的名称，它能够解析代码，使用你自己设定的规则来重新打印出格式规范的代码。\" class=\"headerlink\" title=\"prettier的中文意思是“漂亮的、机灵的”，也是一个流行的代码格式化工具的名称，它能够解析代码，使用你自己设定的规则来重新打印出格式规范的代码。\"></a>prettier的中文意思是“漂亮的、机灵的”，也是一个流行的代码格式化工具的名称，它能够解析代码，使用你自己设定的规则来重新打印出格式规范的代码。</h1><h2 id=\"同样是代码解析工具，为什么有了eslint还需要prettier？\"><a href=\"#同样是代码解析工具，为什么有了eslint还需要prettier？\" class=\"headerlink\" title=\"同样是代码解析工具，为什么有了eslint还需要prettier？\"></a>同样是代码解析工具，为什么有了eslint还需要prettier？</h2><p>众所周知，eslint是一款代码检查工具，但它有不足的地方。虽然提供了大量的代码检查方案，但也只是停留在了代码检查的阶段而已。他会提出警告：你的代码不符合我制定的规范，但也仅此而已。但prettier不同。prettier的处理方案是：删除所有代码原始样式，并通过既定的规则，重新生成AST，然后生成新的代码。用这种方法确保所有输出的代码都符合一致的样式。先看一个简单的例子：<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// foo</span></span><br><span class=\"line\">foo()</span><br></pre></td></tr></table></figure></p>\n<p>但或许你喜欢注释里方法远一些呢？<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// foo</span></span><br><span class=\"line\"> </span><br><span class=\"line\">foo()</span><br></pre></td></tr></table></figure></p>\n<p>事实上，如果注释和方法之间插入的都是空白行，在eslint看来，这俩种方法是完全相同的，都不会产生错误。再来看另一个例子：<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$(foo).css().animate().addClass().click()</span><br></pre></td></tr></table></figure></p>\n<p>但如果你更喜欢这样的写法呢？<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$(foo).css()</span><br><span class=\"line\">      .animate()</span><br><span class=\"line\">      .addClass()</span><br><span class=\"line\">      .click()</span><br></pre></td></tr></table></figure></p>\n<p>很显然，俩种方法都有存在的可能性，但同样的，eslint还是会认为这样都是极好的，不会做任何处理。                                  </p>\n<p>这样的例子其实有很多。因此，eslint的局限性就凸显了出来，我们需要prettier来更加规范我们的代码。prettier的处理方式如上所述，删除你的所有代码样式，然后按照约束的规则，重新生成符合标准的代码。这样一来就保证了无论你的代码以什么样的格式输入，都能保证在prettier解析之后得到的代码是完全一样的。</p>\n<h2 id=\"为什么prettier比eslint更强大，我们我选择单独使用prettier？\"><a href=\"#为什么prettier比eslint更强大，我们我选择单独使用prettier？\" class=\"headerlink\" title=\"为什么prettier比eslint更强大，我们我选择单独使用prettier？\"></a>为什么prettier比eslint更强大，我们我选择单独使用prettier？</h2><p>prettier虽然有更强大的能力，但他只提供了非常少的规则。换句话说，我们使用prettier来生成代码，但生成代码的规则还是由eslint来提供的。</p>\n<h2 id=\"如何使用prettier？\"><a href=\"#如何使用prettier？\" class=\"headerlink\" title=\"如何使用prettier？\"></a>如何使用prettier？</h2><h3 id=\"首先安装prettier\"><a href=\"#首先安装prettier\" class=\"headerlink\" title=\"首先安装prettier\"></a>首先安装prettier</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm i -D eslint-plugin-prettier eslint-config-prettier</span><br></pre></td></tr></table></figure>\n<h3 id=\"然后编辑-eslintrc\"><a href=\"#然后编辑-eslintrc\" class=\"headerlink\" title=\"然后编辑.eslintrc\"></a>然后编辑.eslintrc</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">module.exports = &#123;</span><br><span class=\"line\">  ...</span><br><span class=\"line\">  extends: [</span><br><span class=\"line\">    ...</span><br><span class=\"line\">    &quot;plugin:prettier/recommended&quot;</span><br><span class=\"line\">  ],</span><br><span class=\"line\">  plugins: [</span><br><span class=\"line\">    &apos;vue&apos;,</span><br><span class=\"line\">    &apos;prettier&apos;</span><br><span class=\"line\">  ],</span><br><span class=\"line\">  rules: &#123;</span><br><span class=\"line\">    ...</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>rules里可以填写eslint的规则或者eslint-config-prettier的规则。                    </p>\n<h3 id=\"最后创建-prettierrc文件，写prettier自己的规则：\"><a href=\"#最后创建-prettierrc文件，写prettier自己的规则：\" class=\"headerlink\" title=\"最后创建.prettierrc文件，写prettier自己的规则：\"></a>最后创建.prettierrc文件，写prettier自己的规则：</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">&quot;semi&quot;: false,</span><br><span class=\"line\">&quot;singleQuote&quot;: true,</span><br><span class=\"line\">&quot;printWidth&quot;: 80,</span><br><span class=\"line\">&quot;tabWidth&quot;: 2,</span><br><span class=\"line\">&quot;useTabs&quot;: false,</span><br><span class=\"line\">&quot;trailingComma&quot;: &quot;all&quot;,</span><br><span class=\"line\">&quot;bracketSpacing&quot;: true,</span><br><span class=\"line\">&quot;jsxBracketSameLine&quot;: false,</span><br><span class=\"line\">&quot;arrowParens&quot;: &quot;avoid&quot;</span><br><span class=\"line\">// ...</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>具体的规则<a href=\"https://prettier.io/docs/en/options.html\" target=\"_blank\" rel=\"noopener\">看这里</a>。</p>\n<h2 id=\"husky-又是什么东西？\"><a href=\"#husky-又是什么东西？\" class=\"headerlink\" title=\"husky 又是什么东西？\"></a>husky 又是什么东西？</h2><p>husky可以阻止git commit 和git push的操作。我们可以配合使用，只有prettier没有问题时才可以提交git操作。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm i -D lint-staged husky</span><br></pre></td></tr></table></figure></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">// package.json</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">  ...</span><br><span class=\"line\">  &quot;scripts&quot;: &#123;</span><br><span class=\"line\">    ...</span><br><span class=\"line\">    &quot;lint&quot;: &quot;eslint --ext .js,.vue src&quot;,</span><br><span class=\"line\">    &quot;format&quot;: &quot;prettier --write \\&quot;src/**/*.js\\&quot; \\&quot;src/**/*.vue\\&quot;&quot;,</span><br><span class=\"line\">    &quot;precommit&quot;: &quot;lint-staged&quot;</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  &quot;lint-staged&quot;: &#123;</span><br><span class=\"line\">    &quot;src/**/*.&#123;js,json,css,vue&#125;&quot;: [</span><br><span class=\"line\">      &quot;prettier --write&quot;,</span><br><span class=\"line\">      &quot;eslint --fix&quot;,</span><br><span class=\"line\">      &quot;git add&quot;</span><br><span class=\"line\">    ]</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  &quot;husky&quot;: &#123;</span><br><span class=\"line\">    &quot;hooks&quot;: &#123;</span><br><span class=\"line\">      &quot;pre-commit&quot;: &quot;npm run lint&quot;,</span><br><span class=\"line\">      &quot;pre-push&quot;: &quot;npm test&quot;,</span><br><span class=\"line\">      &quot;...&quot;: &quot;...&quot;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>这里scripts里添加了三个命令，第一个检测src目录下的js文件和vue文件是否符合eslint标准，第二个按照prettier标准格式化src文件夹中的js文件和vue文件，第三条规定在git commit之前调起lint-staged。<br>lint-staged则规定了顺序执行三个命令，先按照prettier规则重写文件，再解决eslint警告，最后添加git文件。                </p>\n<p>husky则规定了在commit之前运行lint命令，不通过会报错，无法commit。同样的，push之前也可以做一些操作。更具体的细节<a href=\"https://github.com/typicode/husky\" target=\"_blank\" rel=\"noopener\">看这里</a>。</p>\n"},{"title":"详解vue.use的使用","date":"2019-02-15T08:35:37.000Z","description":"详解vue.use的使用方法并附上例子","_content":"vue,use用来安装 Vue.js 插件。如果插件是一个对象，必须提供 install 方法。如果插件是一个函数，它会被作为 install 方法。install 方法调用时，会将 Vue 作为参数传入。因此vue.use()常需要扩展的用法有两个：添加全局的方法（插件是函数）、添加全局的组件（插件是对象）。\n\n## 添加全局方法\n> 这里举例将axios添加到全局。\n```javascript\n  // @/assets/js/request.js\n  \n  import axios from \"axios\";\n  import qs from \"qs\";\n  // 创建axios对象\n  let service = axios.create({\n    baseURL: process.env.VUE_APP_BASE_API,\n    timeout: 10000,\n    headers: {\n      autauthorization: '123456',\n      name: 'singleDogNo.1'\n      // ...\n    }\n  });\n  \n  // 需要的话加入拦截器 \n  \n  // 创建get请求\n  function get(url, params, headers) {\n    let options = {};\n    if (params) {\n      options.params = params;\n    }\n    if (headers) {\n      options.headers = headers;\n    }\n    return service.get(url, options);\n  }\n  \n  // 创建post请求\n  function post(url, data, headers) {\n    let options = {};\n    if (headers) {\n      options.headers = headers;\n    }\n    return service.post(url, qs.stringify(data), options);\n  }\n  \n  // 将请求挂载到全局\n  export default {\n    install(Vue) {\n      Object.defineProperty(Vue.prototype, \"$get\", { value: get });\n      Object.defineProperty(Vue.prototype, \"$post\", { value: post });\n    }\n  };\n\n  // ------------------------- 这里是切换文件的分割线 -------------------------\n  \n  // @/main.js\n  import request from \"@/assets/js/request\";\n  \n  Vue.use(request);\n\n```\n接下来在这个项目中的任何地方你都可以直接使用this.$get和this.$post来发送请求。\n\n## 添加全局的组件\n> 这里举例添加一个loding组件\n```vue\n  <!-- @/components/Loading.vue -->\n  <template>\n    <div class=\"loading\" v-if=\"show\" @click=\"close\">hello, {{ msg }}</div>\n  </template>\n\n  <script>\n  export default {\n    name: \"index\",\n    props: {\n      msg: {\n        default: 'loading'\n      },\n      show: {\n        default: true\n      }\n    },\n    methods: {\n      close() {\n        this.$emit('close')\n      }\n    }\n  };\n  </script>\n\n  <style lang=\"scss\" scoped></style>\n  \n  <!-- -------------- 这里是切换文件的分割线 -------------- -->\n  \n  <!-- @/plugins/loading.js -->\n  import Loading from \"@/components/Loading\";\n  \n  const loading = {\n    install(Vue, options) {\n      Vue.component(\"Loading\", Loading, options);\n    }\n  };\n  export default loading;\n  \n  <!-- -------------- 这里是切换文件的分割线 -------------- -->\n  \n  <!-- @/main.js -->\n  Vue.use(Loading, {\n    // ...\n  });\n```\n然后就可以在项目的任何地方使用`<Loading></Loading>`来引用loading组件，并且同样可以使用@close :show等组件方法，以及自定义的options。","source":"_posts/详解vue-use的使用.md","raw":"title: 详解vue.use的使用\ntags: [vue, axios]\ndate: 2019-02-15 16:35:37\ncategories: [vue]\ndescription: 详解vue.use的使用方法并附上例子\n---\nvue,use用来安装 Vue.js 插件。如果插件是一个对象，必须提供 install 方法。如果插件是一个函数，它会被作为 install 方法。install 方法调用时，会将 Vue 作为参数传入。因此vue.use()常需要扩展的用法有两个：添加全局的方法（插件是函数）、添加全局的组件（插件是对象）。\n\n## 添加全局方法\n> 这里举例将axios添加到全局。\n```javascript\n  // @/assets/js/request.js\n  \n  import axios from \"axios\";\n  import qs from \"qs\";\n  // 创建axios对象\n  let service = axios.create({\n    baseURL: process.env.VUE_APP_BASE_API,\n    timeout: 10000,\n    headers: {\n      autauthorization: '123456',\n      name: 'singleDogNo.1'\n      // ...\n    }\n  });\n  \n  // 需要的话加入拦截器 \n  \n  // 创建get请求\n  function get(url, params, headers) {\n    let options = {};\n    if (params) {\n      options.params = params;\n    }\n    if (headers) {\n      options.headers = headers;\n    }\n    return service.get(url, options);\n  }\n  \n  // 创建post请求\n  function post(url, data, headers) {\n    let options = {};\n    if (headers) {\n      options.headers = headers;\n    }\n    return service.post(url, qs.stringify(data), options);\n  }\n  \n  // 将请求挂载到全局\n  export default {\n    install(Vue) {\n      Object.defineProperty(Vue.prototype, \"$get\", { value: get });\n      Object.defineProperty(Vue.prototype, \"$post\", { value: post });\n    }\n  };\n\n  // ------------------------- 这里是切换文件的分割线 -------------------------\n  \n  // @/main.js\n  import request from \"@/assets/js/request\";\n  \n  Vue.use(request);\n\n```\n接下来在这个项目中的任何地方你都可以直接使用this.$get和this.$post来发送请求。\n\n## 添加全局的组件\n> 这里举例添加一个loding组件\n```vue\n  <!-- @/components/Loading.vue -->\n  <template>\n    <div class=\"loading\" v-if=\"show\" @click=\"close\">hello, {{ msg }}</div>\n  </template>\n\n  <script>\n  export default {\n    name: \"index\",\n    props: {\n      msg: {\n        default: 'loading'\n      },\n      show: {\n        default: true\n      }\n    },\n    methods: {\n      close() {\n        this.$emit('close')\n      }\n    }\n  };\n  </script>\n\n  <style lang=\"scss\" scoped></style>\n  \n  <!-- -------------- 这里是切换文件的分割线 -------------- -->\n  \n  <!-- @/plugins/loading.js -->\n  import Loading from \"@/components/Loading\";\n  \n  const loading = {\n    install(Vue, options) {\n      Vue.component(\"Loading\", Loading, options);\n    }\n  };\n  export default loading;\n  \n  <!-- -------------- 这里是切换文件的分割线 -------------- -->\n  \n  <!-- @/main.js -->\n  Vue.use(Loading, {\n    // ...\n  });\n```\n然后就可以在项目的任何地方使用`<Loading></Loading>`来引用loading组件，并且同样可以使用@close :show等组件方法，以及自定义的options。","slug":"详解vue-use的使用","published":1,"updated":"2019-09-29T11:22:34.502Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck3jm8gwc001rz0bttjekpx83","content":"<p>vue,use用来安装 Vue.js 插件。如果插件是一个对象，必须提供 install 方法。如果插件是一个函数，它会被作为 install 方法。install 方法调用时，会将 Vue 作为参数传入。因此vue.use()常需要扩展的用法有两个：添加全局的方法（插件是函数）、添加全局的组件（插件是对象）。</p>\n<h2 id=\"添加全局方法\"><a href=\"#添加全局方法\" class=\"headerlink\" title=\"添加全局方法\"></a>添加全局方法</h2><blockquote>\n<p>这里举例将axios添加到全局。<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// @/assets/js/request.js</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> axios <span class=\"keyword\">from</span> <span class=\"string\">\"axios\"</span>;</span><br><span class=\"line\"><span class=\"keyword\">import</span> qs <span class=\"keyword\">from</span> <span class=\"string\">\"qs\"</span>;</span><br><span class=\"line\"><span class=\"comment\">// 创建axios对象</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> service = axios.create(&#123;</span><br><span class=\"line\">  baseURL: process.env.VUE_APP_BASE_API,</span><br><span class=\"line\">  timeout: <span class=\"number\">10000</span>,</span><br><span class=\"line\">  headers: &#123;</span><br><span class=\"line\">    autauthorization: <span class=\"string\">'123456'</span>,</span><br><span class=\"line\">    name: <span class=\"string\">'singleDogNo.1'</span></span><br><span class=\"line\">    <span class=\"comment\">// ...</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 需要的话加入拦截器 </span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 创建get请求</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">get</span>(<span class=\"params\">url, params, headers</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">let</span> options = &#123;&#125;;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (params) &#123;</span><br><span class=\"line\">    options.params = params;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (headers) &#123;</span><br><span class=\"line\">    options.headers = headers;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> service.get(url, options);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 创建post请求</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">post</span>(<span class=\"params\">url, data, headers</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">let</span> options = &#123;&#125;;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (headers) &#123;</span><br><span class=\"line\">    options.headers = headers;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> service.post(url, qs.stringify(data), options);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 将请求挂载到全局</span></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> &#123;</span><br><span class=\"line\">  install(Vue) &#123;</span><br><span class=\"line\">    <span class=\"built_in\">Object</span>.defineProperty(Vue.prototype, <span class=\"string\">\"$get\"</span>, &#123; <span class=\"attr\">value</span>: <span class=\"keyword\">get</span> &#125;);</span><br><span class=\"line\">    Object.defineProperty(Vue.prototype, \"$post\", &#123; value: post &#125;);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// ------------------------- 这里是切换文件的分割线 -------------------------</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// @/main.js</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> request <span class=\"keyword\">from</span> <span class=\"string\">\"@/assets/js/request\"</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">Vue.use(request);</span><br></pre></td></tr></table></figure></p>\n</blockquote>\n<p>接下来在这个项目中的任何地方你都可以直接使用this.$get和this.$post来发送请求。</p>\n<h2 id=\"添加全局的组件\"><a href=\"#添加全局的组件\" class=\"headerlink\" title=\"添加全局的组件\"></a>添加全局的组件</h2><blockquote>\n<p>这里举例添加一个loding组件<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;!-- @/components/Loading.vue --&gt;</span><br><span class=\"line\">&lt;template&gt;</span><br><span class=\"line\">  &lt;div class=&quot;loading&quot; v-if=&quot;show&quot; @click=&quot;close&quot;&gt;hello, &#123;&#123; msg &#125;&#125;&lt;/div&gt;</span><br><span class=\"line\">&lt;/template&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;script&gt;</span><br><span class=\"line\">export default &#123;</span><br><span class=\"line\">  name: &quot;index&quot;,</span><br><span class=\"line\">  props: &#123;</span><br><span class=\"line\">    msg: &#123;</span><br><span class=\"line\">      default: &apos;loading&apos;</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    show: &#123;</span><br><span class=\"line\">      default: true</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  methods: &#123;</span><br><span class=\"line\">    close() &#123;</span><br><span class=\"line\">      this.$emit(&apos;close&apos;)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\">&lt;/script&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;style lang=&quot;scss&quot; scoped&gt;&lt;/style&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;!-- -------------- 这里是切换文件的分割线 -------------- --&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;!-- @/plugins/loading.js --&gt;</span><br><span class=\"line\">import Loading from &quot;@/components/Loading&quot;;</span><br><span class=\"line\"></span><br><span class=\"line\">const loading = &#123;</span><br><span class=\"line\">  install(Vue, options) &#123;</span><br><span class=\"line\">    Vue.component(&quot;Loading&quot;, Loading, options);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\">export default loading;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;!-- -------------- 这里是切换文件的分割线 -------------- --&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;!-- @/main.js --&gt;</span><br><span class=\"line\">Vue.use(Loading, &#123;</span><br><span class=\"line\">  // ...</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure></p>\n</blockquote>\n<p>然后就可以在项目的任何地方使用<code>&lt;Loading&gt;&lt;/Loading&gt;</code>来引用loading组件，并且同样可以使用@close :show等组件方法，以及自定义的options。</p>\n","site":{"data":{}},"excerpt":"","more":"<p>vue,use用来安装 Vue.js 插件。如果插件是一个对象，必须提供 install 方法。如果插件是一个函数，它会被作为 install 方法。install 方法调用时，会将 Vue 作为参数传入。因此vue.use()常需要扩展的用法有两个：添加全局的方法（插件是函数）、添加全局的组件（插件是对象）。</p>\n<h2 id=\"添加全局方法\"><a href=\"#添加全局方法\" class=\"headerlink\" title=\"添加全局方法\"></a>添加全局方法</h2><blockquote>\n<p>这里举例将axios添加到全局。<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// @/assets/js/request.js</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> axios <span class=\"keyword\">from</span> <span class=\"string\">\"axios\"</span>;</span><br><span class=\"line\"><span class=\"keyword\">import</span> qs <span class=\"keyword\">from</span> <span class=\"string\">\"qs\"</span>;</span><br><span class=\"line\"><span class=\"comment\">// 创建axios对象</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> service = axios.create(&#123;</span><br><span class=\"line\">  baseURL: process.env.VUE_APP_BASE_API,</span><br><span class=\"line\">  timeout: <span class=\"number\">10000</span>,</span><br><span class=\"line\">  headers: &#123;</span><br><span class=\"line\">    autauthorization: <span class=\"string\">'123456'</span>,</span><br><span class=\"line\">    name: <span class=\"string\">'singleDogNo.1'</span></span><br><span class=\"line\">    <span class=\"comment\">// ...</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 需要的话加入拦截器 </span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 创建get请求</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">get</span>(<span class=\"params\">url, params, headers</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">let</span> options = &#123;&#125;;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (params) &#123;</span><br><span class=\"line\">    options.params = params;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (headers) &#123;</span><br><span class=\"line\">    options.headers = headers;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> service.get(url, options);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 创建post请求</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">post</span>(<span class=\"params\">url, data, headers</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">let</span> options = &#123;&#125;;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (headers) &#123;</span><br><span class=\"line\">    options.headers = headers;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> service.post(url, qs.stringify(data), options);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 将请求挂载到全局</span></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> &#123;</span><br><span class=\"line\">  install(Vue) &#123;</span><br><span class=\"line\">    <span class=\"built_in\">Object</span>.defineProperty(Vue.prototype, <span class=\"string\">\"$get\"</span>, &#123; <span class=\"attr\">value</span>: <span class=\"keyword\">get</span> &#125;);</span><br><span class=\"line\">    Object.defineProperty(Vue.prototype, \"$post\", &#123; value: post &#125;);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// ------------------------- 这里是切换文件的分割线 -------------------------</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// @/main.js</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> request <span class=\"keyword\">from</span> <span class=\"string\">\"@/assets/js/request\"</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">Vue.use(request);</span><br></pre></td></tr></table></figure></p>\n</blockquote>\n<p>接下来在这个项目中的任何地方你都可以直接使用this.$get和this.$post来发送请求。</p>\n<h2 id=\"添加全局的组件\"><a href=\"#添加全局的组件\" class=\"headerlink\" title=\"添加全局的组件\"></a>添加全局的组件</h2><blockquote>\n<p>这里举例添加一个loding组件<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;!-- @/components/Loading.vue --&gt;</span><br><span class=\"line\">&lt;template&gt;</span><br><span class=\"line\">  &lt;div class=&quot;loading&quot; v-if=&quot;show&quot; @click=&quot;close&quot;&gt;hello, &#123;&#123; msg &#125;&#125;&lt;/div&gt;</span><br><span class=\"line\">&lt;/template&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;script&gt;</span><br><span class=\"line\">export default &#123;</span><br><span class=\"line\">  name: &quot;index&quot;,</span><br><span class=\"line\">  props: &#123;</span><br><span class=\"line\">    msg: &#123;</span><br><span class=\"line\">      default: &apos;loading&apos;</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    show: &#123;</span><br><span class=\"line\">      default: true</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  methods: &#123;</span><br><span class=\"line\">    close() &#123;</span><br><span class=\"line\">      this.$emit(&apos;close&apos;)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\">&lt;/script&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;style lang=&quot;scss&quot; scoped&gt;&lt;/style&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;!-- -------------- 这里是切换文件的分割线 -------------- --&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;!-- @/plugins/loading.js --&gt;</span><br><span class=\"line\">import Loading from &quot;@/components/Loading&quot;;</span><br><span class=\"line\"></span><br><span class=\"line\">const loading = &#123;</span><br><span class=\"line\">  install(Vue, options) &#123;</span><br><span class=\"line\">    Vue.component(&quot;Loading&quot;, Loading, options);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\">export default loading;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;!-- -------------- 这里是切换文件的分割线 -------------- --&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;!-- @/main.js --&gt;</span><br><span class=\"line\">Vue.use(Loading, &#123;</span><br><span class=\"line\">  // ...</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure></p>\n</blockquote>\n<p>然后就可以在项目的任何地方使用<code>&lt;Loading&gt;&lt;/Loading&gt;</code>来引用loading组件，并且同样可以使用@close :show等组件方法，以及自定义的options。</p>\n"},{"title":"自己动手开发vue组件库（一）","date":"2019-05-22T13:11:05.000Z","description":"自己动手开发vueUI组件库并且上传到npm（持续更新）","_content":"虽然市面上目前已有各种各样的UI组件库，比如 Element 和 iView，但是出于各种原因，我们仍然有必要知道如何搭建自己的组件库。\n> 这篇文章可能适合以下情况的开发者参考\n+ 单纯想要了解vue组件的开发\n+ 日常开发中复用型组件较多，但相比市面上的UI组件差异较大，定制化程度高\n\n这个主题文章会持续更新，我会尽量从最简单的demo做到类似于elementUI那样成熟的组件库，但不保证能做到哪一步（笑）。但无论如何，这篇文章应该会对你有一些帮助。\n\n## 创建项目\n在这里我们不需要从0开始进行webpack配置，因为没有必要。在这里我们使用vue-cli3.x版本构建项目，但同样需要有一些webpack的知识。","source":"_posts/自己动手开发vue组件库并发布到npm（持续更新）.md","raw":"title: 自己动手开发vue组件库（一）\ntags: [vue, npm]\ndate: 2019-05-22 21:11:05\ncategories: [vue]\ndescription: 自己动手开发vueUI组件库并且上传到npm（持续更新）\n---\n虽然市面上目前已有各种各样的UI组件库，比如 Element 和 iView，但是出于各种原因，我们仍然有必要知道如何搭建自己的组件库。\n> 这篇文章可能适合以下情况的开发者参考\n+ 单纯想要了解vue组件的开发\n+ 日常开发中复用型组件较多，但相比市面上的UI组件差异较大，定制化程度高\n\n这个主题文章会持续更新，我会尽量从最简单的demo做到类似于elementUI那样成熟的组件库，但不保证能做到哪一步（笑）。但无论如何，这篇文章应该会对你有一些帮助。\n\n## 创建项目\n在这里我们不需要从0开始进行webpack配置，因为没有必要。在这里我们使用vue-cli3.x版本构建项目，但同样需要有一些webpack的知识。","slug":"自己动手开发vue组件库并发布到npm（持续更新）","published":1,"updated":"2019-09-29T11:22:34.502Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck3jm8gwd001sz0btw8fs4nj0","content":"<p>虽然市面上目前已有各种各样的UI组件库，比如 Element 和 iView，但是出于各种原因，我们仍然有必要知道如何搭建自己的组件库。</p>\n<blockquote>\n<p>这篇文章可能适合以下情况的开发者参考</p>\n<ul>\n<li>单纯想要了解vue组件的开发</li>\n<li>日常开发中复用型组件较多，但相比市面上的UI组件差异较大，定制化程度高</li>\n</ul>\n</blockquote>\n<p>这个主题文章会持续更新，我会尽量从最简单的demo做到类似于elementUI那样成熟的组件库，但不保证能做到哪一步（笑）。但无论如何，这篇文章应该会对你有一些帮助。</p>\n<h2 id=\"创建项目\"><a href=\"#创建项目\" class=\"headerlink\" title=\"创建项目\"></a>创建项目</h2><p>在这里我们不需要从0开始进行webpack配置，因为没有必要。在这里我们使用vue-cli3.x版本构建项目，但同样需要有一些webpack的知识。</p>\n","site":{"data":{}},"excerpt":"","more":"<p>虽然市面上目前已有各种各样的UI组件库，比如 Element 和 iView，但是出于各种原因，我们仍然有必要知道如何搭建自己的组件库。</p>\n<blockquote>\n<p>这篇文章可能适合以下情况的开发者参考</p>\n<ul>\n<li>单纯想要了解vue组件的开发</li>\n<li>日常开发中复用型组件较多，但相比市面上的UI组件差异较大，定制化程度高</li>\n</ul>\n</blockquote>\n<p>这个主题文章会持续更新，我会尽量从最简单的demo做到类似于elementUI那样成熟的组件库，但不保证能做到哪一步（笑）。但无论如何，这篇文章应该会对你有一些帮助。</p>\n<h2 id=\"创建项目\"><a href=\"#创建项目\" class=\"headerlink\" title=\"创建项目\"></a>创建项目</h2><p>在这里我们不需要从0开始进行webpack配置，因为没有必要。在这里我们使用vue-cli3.x版本构建项目，但同样需要有一些webpack的知识。</p>\n"},{"title":"HTML5原生拖放","date":"2017-11-07T06:59:28.000Z","description":"HTML5拖放API及示例","_content":"## 拖放（Drag 和 drop）是HTML5标准的组成部分\n### 拖放\n拖放是一种常见的特性，即抓取对象以后拖放到其他位置。在 HTML5 中，拖放是标准的一部分，任何元素都可以被拖放。\n### 浏览器支持\nInternet Explorer 9 + 、Firefox、Opera 12 + 、Chrome 以及 Safari 5 +  支持拖放。\n## 拖放API\n### draggable属性\n如果希望一个网页元素可以被拖动，只需要将他的draggable属性设置为true，这个元素就可以拖动了。\n```\n<div draggable=\"true\">拖动我试试</div>\n```\n### 事件\n拖动的过程会触发许多事件，主要有下面这些：\n* `dragstart`：网页元素开始拖动时触发。\n* `drag`：被拖动的元素在拖动过程中持续触发。\n* `dragenter`：被拖动的元素进入目标元素时触发，应在目标元素监听该事件。\n* `dragleave`：被拖动的元素离开目标元素时触发，应在目标元素监听该事件。\n* `dragover`：被拖动元素停留在目标元素之中时持续触发，应在目标元素监听该事件。\n* `drop`：被拖动元素或从文件系统选中的文件，拖放落下时触发。\n* `dragend`：网页元素拖动结束时触发。\n\n以上函数均可以指定回调函数：\n```\ndraggableElement.addEventListener('dragstart', function(e) {\n    alert('拖放开始！')\n    console.log(e);\n});\n```\n>拖动过程中，鼠标移动事件将不会被触发。\n\n### dataTransfer对象\n拖动过程中，回调函数接受的事件参数，有一个`dataTransfer`属性。它指向一个对象，包含了与拖动相关的各种信息。\ndataTransfer对象的属性：\n* dropEffect：拖放的操作类型，决定了浏览器如何显示鼠标形状，可能的值为copy、move、link和none。\n* effectAllowed：指定所允许的操作，可能的值为copy、move、link、copyLink、copyMove、linkMove、all、none和uninitialized（默认值，等同于all，即允许一切操作）。\n* files：包含一个FileList对象，表示拖放所涉及的文件，主要用于处理从文件系统拖入浏览器的文件。\n* types：储存在DataTransfer对象的数据的类型。\n\ndataTransfer对象的方法：\n* setData(format, data)：在dataTransfer对象上储存数据。第一个参数format用来指定储存的数据类型，比如text、url、text/html等。\n* getData(format)：从dataTransfer对象取出数据。\n* clearData(format)：清除dataTransfer对象所储存的数据。如果指定了format参数，则只清除该格式的数据，否则清除所有数据。\n* setDragImage(imgElement, x, y)：指定拖动过程中显示的图像。默认情况下，许多浏览器显示一个被拖动元素的半透明版本。参数imgElement必须是一个图像元素，而不是指向图像的路径，参数x和y表示图像相对于鼠标的位置。\n\n```\ndraggableElement.addEventListener('dragstart', function(event) {\n    event.dataTransfer.setData('text', 'Hello World!');\n});\n```\n上面代码在拖动开始时，在dataTransfer对象上储存一条文本信息，内容为“Hello World！”。当拖放结束时，可以用getData方法取出这条信息。                \n>dataTransfer对象允许在其上存储数据，这使得在被拖动元素与目标元素之间传送信息成为可能。\n\n## 实例 \n### 简单拖放\n```\n/* html */\n<ul id=\"drag-elements\">\n  <li id=\"A\" draggable=\"true\"><img src=\"1.jpg\" alt=\"\" /></li>\n  <li id=\"B\" draggable=\"true\"><img src=\"2.jpg\" alt=\"\" /></li>\n  <li id=\"C\" draggable=\"true\"><img src=\"3.jpg\" alt=\"\" /></li>\n  <li id=\"D\" draggable=\"true\"><img src=\"4.jpg\" alt=\"\" /></li>\n  <li id=\"E\" draggable=\"true\"><img src=\"5.jpg\" alt=\"\" /></li>\n  <li id=\"F\" draggable=\"true\"><img src=\"6.jpg\" alt=\"\" /></li>\n  <li id=\"G\" draggable=\"true\"><img src=\"7.jpg\" alt=\"\" /></li>\n  <li id=\"H\" draggable=\"true\"><img src=\"8.jpg\" alt=\"\" /></li>\n</ul>\n\n/* css */\nul {\n  margin:0 auto;\n  width:800px;\n}\nul:after{\n  content:\"\";\n  display:block;\n  clear:both;\n}\nli {\n  width:200px;\n  height:125px;\n  float:left;\n  background-color:#CCC;\n  text-align:center;\n  line-height:120px;\n  font-size:50px;\n  color:#F60;\n}\n.dragStart img {\n  width:200px;\n  height:125px;\n}\n/* js */\nvar dragElements = document.querySelectorAll('#drag-elements li');\nvar elementDragged = null;\nfor (var i = 0; i < dragElements.length; i++) {\n  dragElements[i].addEventListener('dragstart', function (e) {\n    e.dataTransfer.setData('text', this.id);\n    elementDragged = this;\n  });\n  dragElements[i].addEventListener('dragover', function (e) {\n    e.preventDefault();\n    e.dataTransfer.dropEffect = 'move';\n    elementDragged.setAttribute('class', 'dragStart');\n    return false;\n  });\n  dragElements[i].addEventListener('dragenter', function(e) {\n    e.preventDefault();\n    e.stopPropagation();\n    if (this.id != elementDragged.id) {\n      var tempInnerHtml = this.innerHTML;\n      this.innerHTML = elementDragged.innerHTML;\n      elementDragged.innerHTML = tempInnerHtml;\n      elementDragged.removeAttribute('class');\n      elementDragged = this;\n    }\n  });\n  dragElements[i].addEventListener('dragleave', function(e) {\n    e.preventDefault();\n    e.stopPropagation();\n    if (this.id != elementDragged.id) {\n      this.removeAttribute('class');\n    }\n  });\n  dragElements[i].addEventListener('drop', function (e) {\n    e.preventDefault();\n    e.stopPropagation();  \n    var targetId = e.dataTransfer.getData('text');\n    elementDragged.removeAttribute('class');\n    return false;\n  });\n  dragElements[i].addEventListener('dragend', function (e) {\n    elementDragged = null;\n  });\n};\n```\n### 拖放网元素\n```\n/* html */\n<ul id=\"drag-elements\">\n    <li draggable=\"true\">A</li>\n    <li draggable=\"true\">B</li>\n    <li draggable=\"true\">C</li>\n</ul>\n<ul id=\"drop-target\"></ul>\n\n/* css */\nul{\n    min-height:100px;\n    background-color:#EEE;\n    margin:20px;\n    padding: 0;\n}\nul li{\n    background-color:#CCC;\n    padding:10px;\n    margin-bottom:10px;\n    list-style: none;\n}\n\n/* js */\n// 获取dom元素\nvar target = document.querySelector('#drop-target');\nvar dragElements = document.querySelectorAll('#drag-elements li');\n\n// 定义变量跟踪被拖动的元素\nvar elementDragged = null;\n\n// 对可以拖放的元素绑定 dragstart 和 dragend 事件\nfor (var i = 0; i < dragElements.length; i++) {\n  dragElements[i].addEventListener('dragstart', function(e) {\n    e.dataTransfer.setData('text', this.innerHTML);\n    elementDragged = this;\n  });\n  dragElements[i].addEventListener('dragend', function(e) {\n    elementDragged = null;\n  });\n}\n\n// 向目标元素绑定 dragover 事件,来处理元素拖动进入目标元素之后的事情\ntarget.addEventListener('dragover', function(e) {\n  e.preventDefault();\n  e.dataTransfer.dropEffect = 'move';\n  return false;\n});\n\n// 最后定义目标元素的 drop事件,将被拖动元素从原来的位置删除\ntarget.addEventListener('drop', function(e) {\n  e.preventDefault();\n  e.stopPropagation();\n  this.innerHTML = 'Dropped ' + e.dataTransfer.getData('text');\n  document.querySelector('#drag-elements').removeChild(elementDragged);\n  return false;\n});\n```\n### 拖放文件\n```\n/* html */\n<div id=\"target\" title=\"拖动文件到这里\">\n  <div id=\"content\"></div>\n</div>\n\n/* css */\n#target{\n  margin:10px;\n  min-height:100px;\n  max-height:600px;\n  background-color:#EEE;\n  border-radius:5px;\n  overflow:auto;\n}\n#content{\n  padding:10px;\n  font-size:18px;\n  line-height:25px;\n}\n\n/* js */\n// 首先获取拖动的目标元素和内容展示区域\nvar target = document.querySelector('#target');\nvar contentDiv = document.querySelector('#content');\n\n// 然后定义目标元素的dragover事件,定义了当文件进入目标元素后要做的事情\ntarget.addEventListener('dragover', function(e) {\n  e.preventDefault();\n  e.stopPropagation();\n  e.dataTransfer.dropEffect = 'copy';\n  return false;\n});\n\n// 最后定义目标元素的drop事件,展示文件内容\ntarget.addEventListener('drop', function(e) {\n  e.preventDefault(); \n  e.stopPropagation();\n  var fileList = e.dataTransfer.files;\n  if (fileList.length > 0) {\n    var file = fileList[0];\n    var reader = new FileReader();\n    reader.onloadend = function(e) {\n      if (e.target.readyState == FileReader.DONE) {\n        var content = reader.result;\n        contentDiv.innerHTML = \"File: \" + file.name + \"\\n\\n\" + content;\n      }\n    }\n    reader.readAsBinaryString(file);\n  }\n});\n```\n### 最后附一份最近完成的基于Vue的完整的拖放实例\n```\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <meta http-equiv=\"X-UA-Compatible\" content=\"ie=edge\">\n    <title>Document</title>\n    <!-- jquery -->\n    <script src=\"https://cdn.bootcss.com/jquery/3.2.1/jquery.min.js\"></script>\n    <!-- vue -->\n    <script src=\"https://cdn.bootcss.com/vue/2.5.3/vue.js\"></script>\n    <!-- element-ui -->\n    <link rel=\"stylesheet\" href=\"https://unpkg.com/element-ui/lib/theme-chalk/index.css\">\n    <script src=\"https://unpkg.com/element-ui/lib/index.js\"></script>\n</head>\n\n<body>\n<div id=\"app\">\n    <el-table :data=\"tableData\" style=\"width: 100%\">\n        <el-table-column prop=\"date\" label=\"日期\" width=\"180\">\n        </el-table-column>\n        <el-table-column prop=\"name\" label=\"姓名\" width=\"180\">\n        </el-table-column>\n        <el-table-column prop=\"address\" label=\"地址\">\n        </el-table-column>\n    </el-table>\n</div>\n\n<script>\n    function dragStart(e) {\n        var el = e.target;\n        el = this;\n        start = this.id;\n    }\n\n    function dragOver(ev) {\n        var el = ev.target;\n        ev.preventDefault();\n        ev.dataTransfer.dropEffect = 'move';\n        $(el).addClass('dragStart');\n        return false;\n    }\n\n    function dragEnter(ev) {\n        var el = ev.target;\n        ev.preventDefault();\n        ev.stopPropagation();\n        if (this.id !== el.id) {\n            $(el).addClass('dragstart');\n            el = this;\n        }\n    }\n\n    function dragLeave(ev) {\n        var el = ev.target;\n        ev.preventDefault();\n        ev.stopPropagation();\n        if (this.id !== el.id) {\n            $(this).removeClass('dragstart');\n        }\n        $('td').css(\"borderBottomColor\", \"\")\n        $(this).find('td').css(\"borderBottomColor\", \"#f66e04\")\n    }\n\n    function drop(e) {\n        var el = e.target;\n        e.preventDefault();\n        e.stopPropagation();\n        if (this.id !== el.id) {\n            $(this).removeClass('dragstart');\n        }\n        end = this.id;\n    }\n\n    function dragEnd(e) {\n        var el = e.target;\n        $('td').css(\"borderBottomColor\", \"\")\n        var lists = app.$data.tableData;\n        el = null;\n        var flag;\n        flag = lists[start];\n        lists[start] = lists[end];\n        lists[end] = flag;\n        app.$data.tableData = lists.concat([]);\n        console.log(\"从索引\" + start + \"移动到索引\" + end)\n    }\n\n    var app = new Vue({\n        el: \"#app\",\n        data: function () {\n            return {\n                tableData: []\n            }\n        },\n        mounted: function () {\n            this.tableData = [{\n                date: '2016-05-02',\n                name: '王小虎1',\n                address: '上海市普陀区金沙江路 1518 弄'\n            }, {\n                date: '2016-05-04',\n                name: '王小虎2',\n                address: '上海市普陀区金沙江路 1517 弄'\n            }, {\n                date: '2016-05-01',\n                name: '王小虎3',\n                address: '上海市普陀区金沙江路 1519 弄'\n            }, {\n                date: '2016-05-03',\n                name: '王小虎4',\n                address: '上海市普陀区金沙江路 1516 弄'\n            }];\n        },\n        watch: {\n            tableData: function () {\n                this.$nextTick(() => {\n                    this.StartDrag()\n                })\n            }\n        },\n        methods: {\n            StartDrag: function () {\n                var start, end;\n                var dragElements = document.getElementsByClassName('el-table__row');\n                for (var i = 0; i < dragElements.length; i++) {\n                    dragElements[i].setAttribute('draggable', 'true');\n                    dragElements[i].setAttribute('id', i)\n                }\n                for (var i = 0; i < dragElements.length; i++) {\n                    /*\n                    *因为涉及到翻页和全局搜索之类的功能\n                    *会大量的树新数据导致dom变化\n                    *因此在绑定时间之前重新渲染页面\n                    *移除之前的事件重新绑定\n                    */\n                    // removeEventListener\n                    dragElements[i].removeEventListener('dragstart', dragStart);\n                    dragElements[i].removeEventListener('dragover', dragOver);\n                    dragElements[i].removeEventListener('dragenter', dragEnter);\n                    dragElements[i].removeEventListener('dragleave', dragLeave);\n                    dragElements[i].removeEventListener('drop', drop);\n                    dragElements[i].removeEventListener('dragend', dragEnd);\n                    // addEventListener\n                    dragElements[i].addEventListener('dragstart', dragStart);\n                    dragElements[i].addEventListener('dragover', dragOver);\n                    dragElements[i].addEventListener('dragenter', dragEnter);\n                    dragElements[i].addEventListener('dragleave', dragLeave);\n                    dragElements[i].addEventListener('drop', drop);\n                    dragElements[i].addEventListener('dragend', dragEnd);\n                }\n            }\n        }\n    })\n</script>\n</body>\n\n</html>\n\n```","source":"_posts/HTML5原生拖放.md","raw":"title: HTML5原生拖放\ntags: [draggable, html5]\ndate: 2017-11-07 14:59:28\ncategories: [html5]\ndescription: HTML5拖放API及示例\n---\n## 拖放（Drag 和 drop）是HTML5标准的组成部分\n### 拖放\n拖放是一种常见的特性，即抓取对象以后拖放到其他位置。在 HTML5 中，拖放是标准的一部分，任何元素都可以被拖放。\n### 浏览器支持\nInternet Explorer 9 + 、Firefox、Opera 12 + 、Chrome 以及 Safari 5 +  支持拖放。\n## 拖放API\n### draggable属性\n如果希望一个网页元素可以被拖动，只需要将他的draggable属性设置为true，这个元素就可以拖动了。\n```\n<div draggable=\"true\">拖动我试试</div>\n```\n### 事件\n拖动的过程会触发许多事件，主要有下面这些：\n* `dragstart`：网页元素开始拖动时触发。\n* `drag`：被拖动的元素在拖动过程中持续触发。\n* `dragenter`：被拖动的元素进入目标元素时触发，应在目标元素监听该事件。\n* `dragleave`：被拖动的元素离开目标元素时触发，应在目标元素监听该事件。\n* `dragover`：被拖动元素停留在目标元素之中时持续触发，应在目标元素监听该事件。\n* `drop`：被拖动元素或从文件系统选中的文件，拖放落下时触发。\n* `dragend`：网页元素拖动结束时触发。\n\n以上函数均可以指定回调函数：\n```\ndraggableElement.addEventListener('dragstart', function(e) {\n    alert('拖放开始！')\n    console.log(e);\n});\n```\n>拖动过程中，鼠标移动事件将不会被触发。\n\n### dataTransfer对象\n拖动过程中，回调函数接受的事件参数，有一个`dataTransfer`属性。它指向一个对象，包含了与拖动相关的各种信息。\ndataTransfer对象的属性：\n* dropEffect：拖放的操作类型，决定了浏览器如何显示鼠标形状，可能的值为copy、move、link和none。\n* effectAllowed：指定所允许的操作，可能的值为copy、move、link、copyLink、copyMove、linkMove、all、none和uninitialized（默认值，等同于all，即允许一切操作）。\n* files：包含一个FileList对象，表示拖放所涉及的文件，主要用于处理从文件系统拖入浏览器的文件。\n* types：储存在DataTransfer对象的数据的类型。\n\ndataTransfer对象的方法：\n* setData(format, data)：在dataTransfer对象上储存数据。第一个参数format用来指定储存的数据类型，比如text、url、text/html等。\n* getData(format)：从dataTransfer对象取出数据。\n* clearData(format)：清除dataTransfer对象所储存的数据。如果指定了format参数，则只清除该格式的数据，否则清除所有数据。\n* setDragImage(imgElement, x, y)：指定拖动过程中显示的图像。默认情况下，许多浏览器显示一个被拖动元素的半透明版本。参数imgElement必须是一个图像元素，而不是指向图像的路径，参数x和y表示图像相对于鼠标的位置。\n\n```\ndraggableElement.addEventListener('dragstart', function(event) {\n    event.dataTransfer.setData('text', 'Hello World!');\n});\n```\n上面代码在拖动开始时，在dataTransfer对象上储存一条文本信息，内容为“Hello World！”。当拖放结束时，可以用getData方法取出这条信息。                \n>dataTransfer对象允许在其上存储数据，这使得在被拖动元素与目标元素之间传送信息成为可能。\n\n## 实例 \n### 简单拖放\n```\n/* html */\n<ul id=\"drag-elements\">\n  <li id=\"A\" draggable=\"true\"><img src=\"1.jpg\" alt=\"\" /></li>\n  <li id=\"B\" draggable=\"true\"><img src=\"2.jpg\" alt=\"\" /></li>\n  <li id=\"C\" draggable=\"true\"><img src=\"3.jpg\" alt=\"\" /></li>\n  <li id=\"D\" draggable=\"true\"><img src=\"4.jpg\" alt=\"\" /></li>\n  <li id=\"E\" draggable=\"true\"><img src=\"5.jpg\" alt=\"\" /></li>\n  <li id=\"F\" draggable=\"true\"><img src=\"6.jpg\" alt=\"\" /></li>\n  <li id=\"G\" draggable=\"true\"><img src=\"7.jpg\" alt=\"\" /></li>\n  <li id=\"H\" draggable=\"true\"><img src=\"8.jpg\" alt=\"\" /></li>\n</ul>\n\n/* css */\nul {\n  margin:0 auto;\n  width:800px;\n}\nul:after{\n  content:\"\";\n  display:block;\n  clear:both;\n}\nli {\n  width:200px;\n  height:125px;\n  float:left;\n  background-color:#CCC;\n  text-align:center;\n  line-height:120px;\n  font-size:50px;\n  color:#F60;\n}\n.dragStart img {\n  width:200px;\n  height:125px;\n}\n/* js */\nvar dragElements = document.querySelectorAll('#drag-elements li');\nvar elementDragged = null;\nfor (var i = 0; i < dragElements.length; i++) {\n  dragElements[i].addEventListener('dragstart', function (e) {\n    e.dataTransfer.setData('text', this.id);\n    elementDragged = this;\n  });\n  dragElements[i].addEventListener('dragover', function (e) {\n    e.preventDefault();\n    e.dataTransfer.dropEffect = 'move';\n    elementDragged.setAttribute('class', 'dragStart');\n    return false;\n  });\n  dragElements[i].addEventListener('dragenter', function(e) {\n    e.preventDefault();\n    e.stopPropagation();\n    if (this.id != elementDragged.id) {\n      var tempInnerHtml = this.innerHTML;\n      this.innerHTML = elementDragged.innerHTML;\n      elementDragged.innerHTML = tempInnerHtml;\n      elementDragged.removeAttribute('class');\n      elementDragged = this;\n    }\n  });\n  dragElements[i].addEventListener('dragleave', function(e) {\n    e.preventDefault();\n    e.stopPropagation();\n    if (this.id != elementDragged.id) {\n      this.removeAttribute('class');\n    }\n  });\n  dragElements[i].addEventListener('drop', function (e) {\n    e.preventDefault();\n    e.stopPropagation();  \n    var targetId = e.dataTransfer.getData('text');\n    elementDragged.removeAttribute('class');\n    return false;\n  });\n  dragElements[i].addEventListener('dragend', function (e) {\n    elementDragged = null;\n  });\n};\n```\n### 拖放网元素\n```\n/* html */\n<ul id=\"drag-elements\">\n    <li draggable=\"true\">A</li>\n    <li draggable=\"true\">B</li>\n    <li draggable=\"true\">C</li>\n</ul>\n<ul id=\"drop-target\"></ul>\n\n/* css */\nul{\n    min-height:100px;\n    background-color:#EEE;\n    margin:20px;\n    padding: 0;\n}\nul li{\n    background-color:#CCC;\n    padding:10px;\n    margin-bottom:10px;\n    list-style: none;\n}\n\n/* js */\n// 获取dom元素\nvar target = document.querySelector('#drop-target');\nvar dragElements = document.querySelectorAll('#drag-elements li');\n\n// 定义变量跟踪被拖动的元素\nvar elementDragged = null;\n\n// 对可以拖放的元素绑定 dragstart 和 dragend 事件\nfor (var i = 0; i < dragElements.length; i++) {\n  dragElements[i].addEventListener('dragstart', function(e) {\n    e.dataTransfer.setData('text', this.innerHTML);\n    elementDragged = this;\n  });\n  dragElements[i].addEventListener('dragend', function(e) {\n    elementDragged = null;\n  });\n}\n\n// 向目标元素绑定 dragover 事件,来处理元素拖动进入目标元素之后的事情\ntarget.addEventListener('dragover', function(e) {\n  e.preventDefault();\n  e.dataTransfer.dropEffect = 'move';\n  return false;\n});\n\n// 最后定义目标元素的 drop事件,将被拖动元素从原来的位置删除\ntarget.addEventListener('drop', function(e) {\n  e.preventDefault();\n  e.stopPropagation();\n  this.innerHTML = 'Dropped ' + e.dataTransfer.getData('text');\n  document.querySelector('#drag-elements').removeChild(elementDragged);\n  return false;\n});\n```\n### 拖放文件\n```\n/* html */\n<div id=\"target\" title=\"拖动文件到这里\">\n  <div id=\"content\"></div>\n</div>\n\n/* css */\n#target{\n  margin:10px;\n  min-height:100px;\n  max-height:600px;\n  background-color:#EEE;\n  border-radius:5px;\n  overflow:auto;\n}\n#content{\n  padding:10px;\n  font-size:18px;\n  line-height:25px;\n}\n\n/* js */\n// 首先获取拖动的目标元素和内容展示区域\nvar target = document.querySelector('#target');\nvar contentDiv = document.querySelector('#content');\n\n// 然后定义目标元素的dragover事件,定义了当文件进入目标元素后要做的事情\ntarget.addEventListener('dragover', function(e) {\n  e.preventDefault();\n  e.stopPropagation();\n  e.dataTransfer.dropEffect = 'copy';\n  return false;\n});\n\n// 最后定义目标元素的drop事件,展示文件内容\ntarget.addEventListener('drop', function(e) {\n  e.preventDefault(); \n  e.stopPropagation();\n  var fileList = e.dataTransfer.files;\n  if (fileList.length > 0) {\n    var file = fileList[0];\n    var reader = new FileReader();\n    reader.onloadend = function(e) {\n      if (e.target.readyState == FileReader.DONE) {\n        var content = reader.result;\n        contentDiv.innerHTML = \"File: \" + file.name + \"\\n\\n\" + content;\n      }\n    }\n    reader.readAsBinaryString(file);\n  }\n});\n```\n### 最后附一份最近完成的基于Vue的完整的拖放实例\n```\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <meta http-equiv=\"X-UA-Compatible\" content=\"ie=edge\">\n    <title>Document</title>\n    <!-- jquery -->\n    <script src=\"https://cdn.bootcss.com/jquery/3.2.1/jquery.min.js\"></script>\n    <!-- vue -->\n    <script src=\"https://cdn.bootcss.com/vue/2.5.3/vue.js\"></script>\n    <!-- element-ui -->\n    <link rel=\"stylesheet\" href=\"https://unpkg.com/element-ui/lib/theme-chalk/index.css\">\n    <script src=\"https://unpkg.com/element-ui/lib/index.js\"></script>\n</head>\n\n<body>\n<div id=\"app\">\n    <el-table :data=\"tableData\" style=\"width: 100%\">\n        <el-table-column prop=\"date\" label=\"日期\" width=\"180\">\n        </el-table-column>\n        <el-table-column prop=\"name\" label=\"姓名\" width=\"180\">\n        </el-table-column>\n        <el-table-column prop=\"address\" label=\"地址\">\n        </el-table-column>\n    </el-table>\n</div>\n\n<script>\n    function dragStart(e) {\n        var el = e.target;\n        el = this;\n        start = this.id;\n    }\n\n    function dragOver(ev) {\n        var el = ev.target;\n        ev.preventDefault();\n        ev.dataTransfer.dropEffect = 'move';\n        $(el).addClass('dragStart');\n        return false;\n    }\n\n    function dragEnter(ev) {\n        var el = ev.target;\n        ev.preventDefault();\n        ev.stopPropagation();\n        if (this.id !== el.id) {\n            $(el).addClass('dragstart');\n            el = this;\n        }\n    }\n\n    function dragLeave(ev) {\n        var el = ev.target;\n        ev.preventDefault();\n        ev.stopPropagation();\n        if (this.id !== el.id) {\n            $(this).removeClass('dragstart');\n        }\n        $('td').css(\"borderBottomColor\", \"\")\n        $(this).find('td').css(\"borderBottomColor\", \"#f66e04\")\n    }\n\n    function drop(e) {\n        var el = e.target;\n        e.preventDefault();\n        e.stopPropagation();\n        if (this.id !== el.id) {\n            $(this).removeClass('dragstart');\n        }\n        end = this.id;\n    }\n\n    function dragEnd(e) {\n        var el = e.target;\n        $('td').css(\"borderBottomColor\", \"\")\n        var lists = app.$data.tableData;\n        el = null;\n        var flag;\n        flag = lists[start];\n        lists[start] = lists[end];\n        lists[end] = flag;\n        app.$data.tableData = lists.concat([]);\n        console.log(\"从索引\" + start + \"移动到索引\" + end)\n    }\n\n    var app = new Vue({\n        el: \"#app\",\n        data: function () {\n            return {\n                tableData: []\n            }\n        },\n        mounted: function () {\n            this.tableData = [{\n                date: '2016-05-02',\n                name: '王小虎1',\n                address: '上海市普陀区金沙江路 1518 弄'\n            }, {\n                date: '2016-05-04',\n                name: '王小虎2',\n                address: '上海市普陀区金沙江路 1517 弄'\n            }, {\n                date: '2016-05-01',\n                name: '王小虎3',\n                address: '上海市普陀区金沙江路 1519 弄'\n            }, {\n                date: '2016-05-03',\n                name: '王小虎4',\n                address: '上海市普陀区金沙江路 1516 弄'\n            }];\n        },\n        watch: {\n            tableData: function () {\n                this.$nextTick(() => {\n                    this.StartDrag()\n                })\n            }\n        },\n        methods: {\n            StartDrag: function () {\n                var start, end;\n                var dragElements = document.getElementsByClassName('el-table__row');\n                for (var i = 0; i < dragElements.length; i++) {\n                    dragElements[i].setAttribute('draggable', 'true');\n                    dragElements[i].setAttribute('id', i)\n                }\n                for (var i = 0; i < dragElements.length; i++) {\n                    /*\n                    *因为涉及到翻页和全局搜索之类的功能\n                    *会大量的树新数据导致dom变化\n                    *因此在绑定时间之前重新渲染页面\n                    *移除之前的事件重新绑定\n                    */\n                    // removeEventListener\n                    dragElements[i].removeEventListener('dragstart', dragStart);\n                    dragElements[i].removeEventListener('dragover', dragOver);\n                    dragElements[i].removeEventListener('dragenter', dragEnter);\n                    dragElements[i].removeEventListener('dragleave', dragLeave);\n                    dragElements[i].removeEventListener('drop', drop);\n                    dragElements[i].removeEventListener('dragend', dragEnd);\n                    // addEventListener\n                    dragElements[i].addEventListener('dragstart', dragStart);\n                    dragElements[i].addEventListener('dragover', dragOver);\n                    dragElements[i].addEventListener('dragenter', dragEnter);\n                    dragElements[i].addEventListener('dragleave', dragLeave);\n                    dragElements[i].addEventListener('drop', drop);\n                    dragElements[i].addEventListener('dragend', dragEnd);\n                }\n            }\n        }\n    })\n</script>\n</body>\n\n</html>\n\n```","slug":"HTML5原生拖放","published":1,"updated":"2019-09-29T11:22:34.498Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck3jm8gxi004az0btyrdjp0e4","content":"<h2 id=\"拖放（Drag-和-drop）是HTML5标准的组成部分\"><a href=\"#拖放（Drag-和-drop）是HTML5标准的组成部分\" class=\"headerlink\" title=\"拖放（Drag 和 drop）是HTML5标准的组成部分\"></a>拖放（Drag 和 drop）是HTML5标准的组成部分</h2><h3 id=\"拖放\"><a href=\"#拖放\" class=\"headerlink\" title=\"拖放\"></a>拖放</h3><p>拖放是一种常见的特性，即抓取对象以后拖放到其他位置。在 HTML5 中，拖放是标准的一部分，任何元素都可以被拖放。</p>\n<h3 id=\"浏览器支持\"><a href=\"#浏览器支持\" class=\"headerlink\" title=\"浏览器支持\"></a>浏览器支持</h3><p>Internet Explorer 9 + 、Firefox、Opera 12 + 、Chrome 以及 Safari 5 +  支持拖放。</p>\n<h2 id=\"拖放API\"><a href=\"#拖放API\" class=\"headerlink\" title=\"拖放API\"></a>拖放API</h2><h3 id=\"draggable属性\"><a href=\"#draggable属性\" class=\"headerlink\" title=\"draggable属性\"></a>draggable属性</h3><p>如果希望一个网页元素可以被拖动，只需要将他的draggable属性设置为true，这个元素就可以拖动了。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;div draggable=&quot;true&quot;&gt;拖动我试试&lt;/div&gt;</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"事件\"><a href=\"#事件\" class=\"headerlink\" title=\"事件\"></a>事件</h3><p>拖动的过程会触发许多事件，主要有下面这些：</p>\n<ul>\n<li><code>dragstart</code>：网页元素开始拖动时触发。</li>\n<li><code>drag</code>：被拖动的元素在拖动过程中持续触发。</li>\n<li><code>dragenter</code>：被拖动的元素进入目标元素时触发，应在目标元素监听该事件。</li>\n<li><code>dragleave</code>：被拖动的元素离开目标元素时触发，应在目标元素监听该事件。</li>\n<li><code>dragover</code>：被拖动元素停留在目标元素之中时持续触发，应在目标元素监听该事件。</li>\n<li><code>drop</code>：被拖动元素或从文件系统选中的文件，拖放落下时触发。</li>\n<li><code>dragend</code>：网页元素拖动结束时触发。</li>\n</ul>\n<p>以上函数均可以指定回调函数：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">draggableElement.addEventListener(&apos;dragstart&apos;, function(e) &#123;</span><br><span class=\"line\">    alert(&apos;拖放开始！&apos;)</span><br><span class=\"line\">    console.log(e);</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure></p>\n<blockquote>\n<p>拖动过程中，鼠标移动事件将不会被触发。</p>\n</blockquote>\n<h3 id=\"dataTransfer对象\"><a href=\"#dataTransfer对象\" class=\"headerlink\" title=\"dataTransfer对象\"></a>dataTransfer对象</h3><p>拖动过程中，回调函数接受的事件参数，有一个<code>dataTransfer</code>属性。它指向一个对象，包含了与拖动相关的各种信息。<br>dataTransfer对象的属性：</p>\n<ul>\n<li>dropEffect：拖放的操作类型，决定了浏览器如何显示鼠标形状，可能的值为copy、move、link和none。</li>\n<li>effectAllowed：指定所允许的操作，可能的值为copy、move、link、copyLink、copyMove、linkMove、all、none和uninitialized（默认值，等同于all，即允许一切操作）。</li>\n<li>files：包含一个FileList对象，表示拖放所涉及的文件，主要用于处理从文件系统拖入浏览器的文件。</li>\n<li>types：储存在DataTransfer对象的数据的类型。</li>\n</ul>\n<p>dataTransfer对象的方法：</p>\n<ul>\n<li>setData(format, data)：在dataTransfer对象上储存数据。第一个参数format用来指定储存的数据类型，比如text、url、text/html等。</li>\n<li>getData(format)：从dataTransfer对象取出数据。</li>\n<li>clearData(format)：清除dataTransfer对象所储存的数据。如果指定了format参数，则只清除该格式的数据，否则清除所有数据。</li>\n<li>setDragImage(imgElement, x, y)：指定拖动过程中显示的图像。默认情况下，许多浏览器显示一个被拖动元素的半透明版本。参数imgElement必须是一个图像元素，而不是指向图像的路径，参数x和y表示图像相对于鼠标的位置。</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">draggableElement.addEventListener(&apos;dragstart&apos;, function(event) &#123;</span><br><span class=\"line\">    event.dataTransfer.setData(&apos;text&apos;, &apos;Hello World!&apos;);</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<p>上面代码在拖动开始时，在dataTransfer对象上储存一条文本信息，内容为“Hello World！”。当拖放结束时，可以用getData方法取出这条信息。                </p>\n<blockquote>\n<p>dataTransfer对象允许在其上存储数据，这使得在被拖动元素与目标元素之间传送信息成为可能。</p>\n</blockquote>\n<h2 id=\"实例\"><a href=\"#实例\" class=\"headerlink\" title=\"实例\"></a>实例</h2><h3 id=\"简单拖放\"><a href=\"#简单拖放\" class=\"headerlink\" title=\"简单拖放\"></a>简单拖放</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/* html */</span><br><span class=\"line\">&lt;ul id=&quot;drag-elements&quot;&gt;</span><br><span class=\"line\">  &lt;li id=&quot;A&quot; draggable=&quot;true&quot;&gt;&lt;img src=&quot;1.jpg&quot; alt=&quot;&quot; /&gt;&lt;/li&gt;</span><br><span class=\"line\">  &lt;li id=&quot;B&quot; draggable=&quot;true&quot;&gt;&lt;img src=&quot;2.jpg&quot; alt=&quot;&quot; /&gt;&lt;/li&gt;</span><br><span class=\"line\">  &lt;li id=&quot;C&quot; draggable=&quot;true&quot;&gt;&lt;img src=&quot;3.jpg&quot; alt=&quot;&quot; /&gt;&lt;/li&gt;</span><br><span class=\"line\">  &lt;li id=&quot;D&quot; draggable=&quot;true&quot;&gt;&lt;img src=&quot;4.jpg&quot; alt=&quot;&quot; /&gt;&lt;/li&gt;</span><br><span class=\"line\">  &lt;li id=&quot;E&quot; draggable=&quot;true&quot;&gt;&lt;img src=&quot;5.jpg&quot; alt=&quot;&quot; /&gt;&lt;/li&gt;</span><br><span class=\"line\">  &lt;li id=&quot;F&quot; draggable=&quot;true&quot;&gt;&lt;img src=&quot;6.jpg&quot; alt=&quot;&quot; /&gt;&lt;/li&gt;</span><br><span class=\"line\">  &lt;li id=&quot;G&quot; draggable=&quot;true&quot;&gt;&lt;img src=&quot;7.jpg&quot; alt=&quot;&quot; /&gt;&lt;/li&gt;</span><br><span class=\"line\">  &lt;li id=&quot;H&quot; draggable=&quot;true&quot;&gt;&lt;img src=&quot;8.jpg&quot; alt=&quot;&quot; /&gt;&lt;/li&gt;</span><br><span class=\"line\">&lt;/ul&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">/* css */</span><br><span class=\"line\">ul &#123;</span><br><span class=\"line\">  margin:0 auto;</span><br><span class=\"line\">  width:800px;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">ul:after&#123;</span><br><span class=\"line\">  content:&quot;&quot;;</span><br><span class=\"line\">  display:block;</span><br><span class=\"line\">  clear:both;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">li &#123;</span><br><span class=\"line\">  width:200px;</span><br><span class=\"line\">  height:125px;</span><br><span class=\"line\">  float:left;</span><br><span class=\"line\">  background-color:#CCC;</span><br><span class=\"line\">  text-align:center;</span><br><span class=\"line\">  line-height:120px;</span><br><span class=\"line\">  font-size:50px;</span><br><span class=\"line\">  color:#F60;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">.dragStart img &#123;</span><br><span class=\"line\">  width:200px;</span><br><span class=\"line\">  height:125px;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">/* js */</span><br><span class=\"line\">var dragElements = document.querySelectorAll(&apos;#drag-elements li&apos;);</span><br><span class=\"line\">var elementDragged = null;</span><br><span class=\"line\">for (var i = 0; i &lt; dragElements.length; i++) &#123;</span><br><span class=\"line\">  dragElements[i].addEventListener(&apos;dragstart&apos;, function (e) &#123;</span><br><span class=\"line\">    e.dataTransfer.setData(&apos;text&apos;, this.id);</span><br><span class=\"line\">    elementDragged = this;</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\">  dragElements[i].addEventListener(&apos;dragover&apos;, function (e) &#123;</span><br><span class=\"line\">    e.preventDefault();</span><br><span class=\"line\">    e.dataTransfer.dropEffect = &apos;move&apos;;</span><br><span class=\"line\">    elementDragged.setAttribute(&apos;class&apos;, &apos;dragStart&apos;);</span><br><span class=\"line\">    return false;</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\">  dragElements[i].addEventListener(&apos;dragenter&apos;, function(e) &#123;</span><br><span class=\"line\">    e.preventDefault();</span><br><span class=\"line\">    e.stopPropagation();</span><br><span class=\"line\">    if (this.id != elementDragged.id) &#123;</span><br><span class=\"line\">      var tempInnerHtml = this.innerHTML;</span><br><span class=\"line\">      this.innerHTML = elementDragged.innerHTML;</span><br><span class=\"line\">      elementDragged.innerHTML = tempInnerHtml;</span><br><span class=\"line\">      elementDragged.removeAttribute(&apos;class&apos;);</span><br><span class=\"line\">      elementDragged = this;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\">  dragElements[i].addEventListener(&apos;dragleave&apos;, function(e) &#123;</span><br><span class=\"line\">    e.preventDefault();</span><br><span class=\"line\">    e.stopPropagation();</span><br><span class=\"line\">    if (this.id != elementDragged.id) &#123;</span><br><span class=\"line\">      this.removeAttribute(&apos;class&apos;);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\">  dragElements[i].addEventListener(&apos;drop&apos;, function (e) &#123;</span><br><span class=\"line\">    e.preventDefault();</span><br><span class=\"line\">    e.stopPropagation();  </span><br><span class=\"line\">    var targetId = e.dataTransfer.getData(&apos;text&apos;);</span><br><span class=\"line\">    elementDragged.removeAttribute(&apos;class&apos;);</span><br><span class=\"line\">    return false;</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\">  dragElements[i].addEventListener(&apos;dragend&apos;, function (e) &#123;</span><br><span class=\"line\">    elementDragged = null;</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n<h3 id=\"拖放网元素\"><a href=\"#拖放网元素\" class=\"headerlink\" title=\"拖放网元素\"></a>拖放网元素</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/* html */</span><br><span class=\"line\">&lt;ul id=&quot;drag-elements&quot;&gt;</span><br><span class=\"line\">    &lt;li draggable=&quot;true&quot;&gt;A&lt;/li&gt;</span><br><span class=\"line\">    &lt;li draggable=&quot;true&quot;&gt;B&lt;/li&gt;</span><br><span class=\"line\">    &lt;li draggable=&quot;true&quot;&gt;C&lt;/li&gt;</span><br><span class=\"line\">&lt;/ul&gt;</span><br><span class=\"line\">&lt;ul id=&quot;drop-target&quot;&gt;&lt;/ul&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">/* css */</span><br><span class=\"line\">ul&#123;</span><br><span class=\"line\">    min-height:100px;</span><br><span class=\"line\">    background-color:#EEE;</span><br><span class=\"line\">    margin:20px;</span><br><span class=\"line\">    padding: 0;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">ul li&#123;</span><br><span class=\"line\">    background-color:#CCC;</span><br><span class=\"line\">    padding:10px;</span><br><span class=\"line\">    margin-bottom:10px;</span><br><span class=\"line\">    list-style: none;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">/* js */</span><br><span class=\"line\">// 获取dom元素</span><br><span class=\"line\">var target = document.querySelector(&apos;#drop-target&apos;);</span><br><span class=\"line\">var dragElements = document.querySelectorAll(&apos;#drag-elements li&apos;);</span><br><span class=\"line\"></span><br><span class=\"line\">// 定义变量跟踪被拖动的元素</span><br><span class=\"line\">var elementDragged = null;</span><br><span class=\"line\"></span><br><span class=\"line\">// 对可以拖放的元素绑定 dragstart 和 dragend 事件</span><br><span class=\"line\">for (var i = 0; i &lt; dragElements.length; i++) &#123;</span><br><span class=\"line\">  dragElements[i].addEventListener(&apos;dragstart&apos;, function(e) &#123;</span><br><span class=\"line\">    e.dataTransfer.setData(&apos;text&apos;, this.innerHTML);</span><br><span class=\"line\">    elementDragged = this;</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\">  dragElements[i].addEventListener(&apos;dragend&apos;, function(e) &#123;</span><br><span class=\"line\">    elementDragged = null;</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">// 向目标元素绑定 dragover 事件,来处理元素拖动进入目标元素之后的事情</span><br><span class=\"line\">target.addEventListener(&apos;dragover&apos;, function(e) &#123;</span><br><span class=\"line\">  e.preventDefault();</span><br><span class=\"line\">  e.dataTransfer.dropEffect = &apos;move&apos;;</span><br><span class=\"line\">  return false;</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">// 最后定义目标元素的 drop事件,将被拖动元素从原来的位置删除</span><br><span class=\"line\">target.addEventListener(&apos;drop&apos;, function(e) &#123;</span><br><span class=\"line\">  e.preventDefault();</span><br><span class=\"line\">  e.stopPropagation();</span><br><span class=\"line\">  this.innerHTML = &apos;Dropped &apos; + e.dataTransfer.getData(&apos;text&apos;);</span><br><span class=\"line\">  document.querySelector(&apos;#drag-elements&apos;).removeChild(elementDragged);</span><br><span class=\"line\">  return false;</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<h3 id=\"拖放文件\"><a href=\"#拖放文件\" class=\"headerlink\" title=\"拖放文件\"></a>拖放文件</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/* html */</span><br><span class=\"line\">&lt;div id=&quot;target&quot; title=&quot;拖动文件到这里&quot;&gt;</span><br><span class=\"line\">  &lt;div id=&quot;content&quot;&gt;&lt;/div&gt;</span><br><span class=\"line\">&lt;/div&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">/* css */</span><br><span class=\"line\">#target&#123;</span><br><span class=\"line\">  margin:10px;</span><br><span class=\"line\">  min-height:100px;</span><br><span class=\"line\">  max-height:600px;</span><br><span class=\"line\">  background-color:#EEE;</span><br><span class=\"line\">  border-radius:5px;</span><br><span class=\"line\">  overflow:auto;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">#content&#123;</span><br><span class=\"line\">  padding:10px;</span><br><span class=\"line\">  font-size:18px;</span><br><span class=\"line\">  line-height:25px;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">/* js */</span><br><span class=\"line\">// 首先获取拖动的目标元素和内容展示区域</span><br><span class=\"line\">var target = document.querySelector(&apos;#target&apos;);</span><br><span class=\"line\">var contentDiv = document.querySelector(&apos;#content&apos;);</span><br><span class=\"line\"></span><br><span class=\"line\">// 然后定义目标元素的dragover事件,定义了当文件进入目标元素后要做的事情</span><br><span class=\"line\">target.addEventListener(&apos;dragover&apos;, function(e) &#123;</span><br><span class=\"line\">  e.preventDefault();</span><br><span class=\"line\">  e.stopPropagation();</span><br><span class=\"line\">  e.dataTransfer.dropEffect = &apos;copy&apos;;</span><br><span class=\"line\">  return false;</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">// 最后定义目标元素的drop事件,展示文件内容</span><br><span class=\"line\">target.addEventListener(&apos;drop&apos;, function(e) &#123;</span><br><span class=\"line\">  e.preventDefault(); </span><br><span class=\"line\">  e.stopPropagation();</span><br><span class=\"line\">  var fileList = e.dataTransfer.files;</span><br><span class=\"line\">  if (fileList.length &gt; 0) &#123;</span><br><span class=\"line\">    var file = fileList[0];</span><br><span class=\"line\">    var reader = new FileReader();</span><br><span class=\"line\">    reader.onloadend = function(e) &#123;</span><br><span class=\"line\">      if (e.target.readyState == FileReader.DONE) &#123;</span><br><span class=\"line\">        var content = reader.result;</span><br><span class=\"line\">        contentDiv.innerHTML = &quot;File: &quot; + file.name + &quot;\\n\\n&quot; + content;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    reader.readAsBinaryString(file);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<h3 id=\"最后附一份最近完成的基于Vue的完整的拖放实例\"><a href=\"#最后附一份最近完成的基于Vue的完整的拖放实例\" class=\"headerlink\" title=\"最后附一份最近完成的基于Vue的完整的拖放实例\"></a>最后附一份最近完成的基于Vue的完整的拖放实例</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;!DOCTYPE html&gt;</span><br><span class=\"line\">&lt;html lang=&quot;en&quot;&gt;</span><br><span class=\"line\">&lt;head&gt;</span><br><span class=\"line\">    &lt;meta charset=&quot;UTF-8&quot;&gt;</span><br><span class=\"line\">    &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt;</span><br><span class=\"line\">    &lt;meta http-equiv=&quot;X-UA-Compatible&quot; content=&quot;ie=edge&quot;&gt;</span><br><span class=\"line\">    &lt;title&gt;Document&lt;/title&gt;</span><br><span class=\"line\">    &lt;!-- jquery --&gt;</span><br><span class=\"line\">    &lt;script src=&quot;https://cdn.bootcss.com/jquery/3.2.1/jquery.min.js&quot;&gt;&lt;/script&gt;</span><br><span class=\"line\">    &lt;!-- vue --&gt;</span><br><span class=\"line\">    &lt;script src=&quot;https://cdn.bootcss.com/vue/2.5.3/vue.js&quot;&gt;&lt;/script&gt;</span><br><span class=\"line\">    &lt;!-- element-ui --&gt;</span><br><span class=\"line\">    &lt;link rel=&quot;stylesheet&quot; href=&quot;https://unpkg.com/element-ui/lib/theme-chalk/index.css&quot;&gt;</span><br><span class=\"line\">    &lt;script src=&quot;https://unpkg.com/element-ui/lib/index.js&quot;&gt;&lt;/script&gt;</span><br><span class=\"line\">&lt;/head&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;body&gt;</span><br><span class=\"line\">&lt;div id=&quot;app&quot;&gt;</span><br><span class=\"line\">    &lt;el-table :data=&quot;tableData&quot; style=&quot;width: 100%&quot;&gt;</span><br><span class=\"line\">        &lt;el-table-column prop=&quot;date&quot; label=&quot;日期&quot; width=&quot;180&quot;&gt;</span><br><span class=\"line\">        &lt;/el-table-column&gt;</span><br><span class=\"line\">        &lt;el-table-column prop=&quot;name&quot; label=&quot;姓名&quot; width=&quot;180&quot;&gt;</span><br><span class=\"line\">        &lt;/el-table-column&gt;</span><br><span class=\"line\">        &lt;el-table-column prop=&quot;address&quot; label=&quot;地址&quot;&gt;</span><br><span class=\"line\">        &lt;/el-table-column&gt;</span><br><span class=\"line\">    &lt;/el-table&gt;</span><br><span class=\"line\">&lt;/div&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;script&gt;</span><br><span class=\"line\">    function dragStart(e) &#123;</span><br><span class=\"line\">        var el = e.target;</span><br><span class=\"line\">        el = this;</span><br><span class=\"line\">        start = this.id;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    function dragOver(ev) &#123;</span><br><span class=\"line\">        var el = ev.target;</span><br><span class=\"line\">        ev.preventDefault();</span><br><span class=\"line\">        ev.dataTransfer.dropEffect = &apos;move&apos;;</span><br><span class=\"line\">        $(el).addClass(&apos;dragStart&apos;);</span><br><span class=\"line\">        return false;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    function dragEnter(ev) &#123;</span><br><span class=\"line\">        var el = ev.target;</span><br><span class=\"line\">        ev.preventDefault();</span><br><span class=\"line\">        ev.stopPropagation();</span><br><span class=\"line\">        if (this.id !== el.id) &#123;</span><br><span class=\"line\">            $(el).addClass(&apos;dragstart&apos;);</span><br><span class=\"line\">            el = this;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    function dragLeave(ev) &#123;</span><br><span class=\"line\">        var el = ev.target;</span><br><span class=\"line\">        ev.preventDefault();</span><br><span class=\"line\">        ev.stopPropagation();</span><br><span class=\"line\">        if (this.id !== el.id) &#123;</span><br><span class=\"line\">            $(this).removeClass(&apos;dragstart&apos;);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        $(&apos;td&apos;).css(&quot;borderBottomColor&quot;, &quot;&quot;)</span><br><span class=\"line\">        $(this).find(&apos;td&apos;).css(&quot;borderBottomColor&quot;, &quot;#f66e04&quot;)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    function drop(e) &#123;</span><br><span class=\"line\">        var el = e.target;</span><br><span class=\"line\">        e.preventDefault();</span><br><span class=\"line\">        e.stopPropagation();</span><br><span class=\"line\">        if (this.id !== el.id) &#123;</span><br><span class=\"line\">            $(this).removeClass(&apos;dragstart&apos;);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        end = this.id;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    function dragEnd(e) &#123;</span><br><span class=\"line\">        var el = e.target;</span><br><span class=\"line\">        $(&apos;td&apos;).css(&quot;borderBottomColor&quot;, &quot;&quot;)</span><br><span class=\"line\">        var lists = app.$data.tableData;</span><br><span class=\"line\">        el = null;</span><br><span class=\"line\">        var flag;</span><br><span class=\"line\">        flag = lists[start];</span><br><span class=\"line\">        lists[start] = lists[end];</span><br><span class=\"line\">        lists[end] = flag;</span><br><span class=\"line\">        app.$data.tableData = lists.concat([]);</span><br><span class=\"line\">        console.log(&quot;从索引&quot; + start + &quot;移动到索引&quot; + end)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    var app = new Vue(&#123;</span><br><span class=\"line\">        el: &quot;#app&quot;,</span><br><span class=\"line\">        data: function () &#123;</span><br><span class=\"line\">            return &#123;</span><br><span class=\"line\">                tableData: []</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;,</span><br><span class=\"line\">        mounted: function () &#123;</span><br><span class=\"line\">            this.tableData = [&#123;</span><br><span class=\"line\">                date: &apos;2016-05-02&apos;,</span><br><span class=\"line\">                name: &apos;王小虎1&apos;,</span><br><span class=\"line\">                address: &apos;上海市普陀区金沙江路 1518 弄&apos;</span><br><span class=\"line\">            &#125;, &#123;</span><br><span class=\"line\">                date: &apos;2016-05-04&apos;,</span><br><span class=\"line\">                name: &apos;王小虎2&apos;,</span><br><span class=\"line\">                address: &apos;上海市普陀区金沙江路 1517 弄&apos;</span><br><span class=\"line\">            &#125;, &#123;</span><br><span class=\"line\">                date: &apos;2016-05-01&apos;,</span><br><span class=\"line\">                name: &apos;王小虎3&apos;,</span><br><span class=\"line\">                address: &apos;上海市普陀区金沙江路 1519 弄&apos;</span><br><span class=\"line\">            &#125;, &#123;</span><br><span class=\"line\">                date: &apos;2016-05-03&apos;,</span><br><span class=\"line\">                name: &apos;王小虎4&apos;,</span><br><span class=\"line\">                address: &apos;上海市普陀区金沙江路 1516 弄&apos;</span><br><span class=\"line\">            &#125;];</span><br><span class=\"line\">        &#125;,</span><br><span class=\"line\">        watch: &#123;</span><br><span class=\"line\">            tableData: function () &#123;</span><br><span class=\"line\">                this.$nextTick(() =&gt; &#123;</span><br><span class=\"line\">                    this.StartDrag()</span><br><span class=\"line\">                &#125;)</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;,</span><br><span class=\"line\">        methods: &#123;</span><br><span class=\"line\">            StartDrag: function () &#123;</span><br><span class=\"line\">                var start, end;</span><br><span class=\"line\">                var dragElements = document.getElementsByClassName(&apos;el-table__row&apos;);</span><br><span class=\"line\">                for (var i = 0; i &lt; dragElements.length; i++) &#123;</span><br><span class=\"line\">                    dragElements[i].setAttribute(&apos;draggable&apos;, &apos;true&apos;);</span><br><span class=\"line\">                    dragElements[i].setAttribute(&apos;id&apos;, i)</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">                for (var i = 0; i &lt; dragElements.length; i++) &#123;</span><br><span class=\"line\">                    /*</span><br><span class=\"line\">                    *因为涉及到翻页和全局搜索之类的功能</span><br><span class=\"line\">                    *会大量的树新数据导致dom变化</span><br><span class=\"line\">                    *因此在绑定时间之前重新渲染页面</span><br><span class=\"line\">                    *移除之前的事件重新绑定</span><br><span class=\"line\">                    */</span><br><span class=\"line\">                    // removeEventListener</span><br><span class=\"line\">                    dragElements[i].removeEventListener(&apos;dragstart&apos;, dragStart);</span><br><span class=\"line\">                    dragElements[i].removeEventListener(&apos;dragover&apos;, dragOver);</span><br><span class=\"line\">                    dragElements[i].removeEventListener(&apos;dragenter&apos;, dragEnter);</span><br><span class=\"line\">                    dragElements[i].removeEventListener(&apos;dragleave&apos;, dragLeave);</span><br><span class=\"line\">                    dragElements[i].removeEventListener(&apos;drop&apos;, drop);</span><br><span class=\"line\">                    dragElements[i].removeEventListener(&apos;dragend&apos;, dragEnd);</span><br><span class=\"line\">                    // addEventListener</span><br><span class=\"line\">                    dragElements[i].addEventListener(&apos;dragstart&apos;, dragStart);</span><br><span class=\"line\">                    dragElements[i].addEventListener(&apos;dragover&apos;, dragOver);</span><br><span class=\"line\">                    dragElements[i].addEventListener(&apos;dragenter&apos;, dragEnter);</span><br><span class=\"line\">                    dragElements[i].addEventListener(&apos;dragleave&apos;, dragLeave);</span><br><span class=\"line\">                    dragElements[i].addEventListener(&apos;drop&apos;, drop);</span><br><span class=\"line\">                    dragElements[i].addEventListener(&apos;dragend&apos;, dragEnd);</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">&lt;/script&gt;</span><br><span class=\"line\">&lt;/body&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;/html&gt;</span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"","more":"<h2 id=\"拖放（Drag-和-drop）是HTML5标准的组成部分\"><a href=\"#拖放（Drag-和-drop）是HTML5标准的组成部分\" class=\"headerlink\" title=\"拖放（Drag 和 drop）是HTML5标准的组成部分\"></a>拖放（Drag 和 drop）是HTML5标准的组成部分</h2><h3 id=\"拖放\"><a href=\"#拖放\" class=\"headerlink\" title=\"拖放\"></a>拖放</h3><p>拖放是一种常见的特性，即抓取对象以后拖放到其他位置。在 HTML5 中，拖放是标准的一部分，任何元素都可以被拖放。</p>\n<h3 id=\"浏览器支持\"><a href=\"#浏览器支持\" class=\"headerlink\" title=\"浏览器支持\"></a>浏览器支持</h3><p>Internet Explorer 9 + 、Firefox、Opera 12 + 、Chrome 以及 Safari 5 +  支持拖放。</p>\n<h2 id=\"拖放API\"><a href=\"#拖放API\" class=\"headerlink\" title=\"拖放API\"></a>拖放API</h2><h3 id=\"draggable属性\"><a href=\"#draggable属性\" class=\"headerlink\" title=\"draggable属性\"></a>draggable属性</h3><p>如果希望一个网页元素可以被拖动，只需要将他的draggable属性设置为true，这个元素就可以拖动了。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;div draggable=&quot;true&quot;&gt;拖动我试试&lt;/div&gt;</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"事件\"><a href=\"#事件\" class=\"headerlink\" title=\"事件\"></a>事件</h3><p>拖动的过程会触发许多事件，主要有下面这些：</p>\n<ul>\n<li><code>dragstart</code>：网页元素开始拖动时触发。</li>\n<li><code>drag</code>：被拖动的元素在拖动过程中持续触发。</li>\n<li><code>dragenter</code>：被拖动的元素进入目标元素时触发，应在目标元素监听该事件。</li>\n<li><code>dragleave</code>：被拖动的元素离开目标元素时触发，应在目标元素监听该事件。</li>\n<li><code>dragover</code>：被拖动元素停留在目标元素之中时持续触发，应在目标元素监听该事件。</li>\n<li><code>drop</code>：被拖动元素或从文件系统选中的文件，拖放落下时触发。</li>\n<li><code>dragend</code>：网页元素拖动结束时触发。</li>\n</ul>\n<p>以上函数均可以指定回调函数：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">draggableElement.addEventListener(&apos;dragstart&apos;, function(e) &#123;</span><br><span class=\"line\">    alert(&apos;拖放开始！&apos;)</span><br><span class=\"line\">    console.log(e);</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure></p>\n<blockquote>\n<p>拖动过程中，鼠标移动事件将不会被触发。</p>\n</blockquote>\n<h3 id=\"dataTransfer对象\"><a href=\"#dataTransfer对象\" class=\"headerlink\" title=\"dataTransfer对象\"></a>dataTransfer对象</h3><p>拖动过程中，回调函数接受的事件参数，有一个<code>dataTransfer</code>属性。它指向一个对象，包含了与拖动相关的各种信息。<br>dataTransfer对象的属性：</p>\n<ul>\n<li>dropEffect：拖放的操作类型，决定了浏览器如何显示鼠标形状，可能的值为copy、move、link和none。</li>\n<li>effectAllowed：指定所允许的操作，可能的值为copy、move、link、copyLink、copyMove、linkMove、all、none和uninitialized（默认值，等同于all，即允许一切操作）。</li>\n<li>files：包含一个FileList对象，表示拖放所涉及的文件，主要用于处理从文件系统拖入浏览器的文件。</li>\n<li>types：储存在DataTransfer对象的数据的类型。</li>\n</ul>\n<p>dataTransfer对象的方法：</p>\n<ul>\n<li>setData(format, data)：在dataTransfer对象上储存数据。第一个参数format用来指定储存的数据类型，比如text、url、text/html等。</li>\n<li>getData(format)：从dataTransfer对象取出数据。</li>\n<li>clearData(format)：清除dataTransfer对象所储存的数据。如果指定了format参数，则只清除该格式的数据，否则清除所有数据。</li>\n<li>setDragImage(imgElement, x, y)：指定拖动过程中显示的图像。默认情况下，许多浏览器显示一个被拖动元素的半透明版本。参数imgElement必须是一个图像元素，而不是指向图像的路径，参数x和y表示图像相对于鼠标的位置。</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">draggableElement.addEventListener(&apos;dragstart&apos;, function(event) &#123;</span><br><span class=\"line\">    event.dataTransfer.setData(&apos;text&apos;, &apos;Hello World!&apos;);</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<p>上面代码在拖动开始时，在dataTransfer对象上储存一条文本信息，内容为“Hello World！”。当拖放结束时，可以用getData方法取出这条信息。                </p>\n<blockquote>\n<p>dataTransfer对象允许在其上存储数据，这使得在被拖动元素与目标元素之间传送信息成为可能。</p>\n</blockquote>\n<h2 id=\"实例\"><a href=\"#实例\" class=\"headerlink\" title=\"实例\"></a>实例</h2><h3 id=\"简单拖放\"><a href=\"#简单拖放\" class=\"headerlink\" title=\"简单拖放\"></a>简单拖放</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/* html */</span><br><span class=\"line\">&lt;ul id=&quot;drag-elements&quot;&gt;</span><br><span class=\"line\">  &lt;li id=&quot;A&quot; draggable=&quot;true&quot;&gt;&lt;img src=&quot;1.jpg&quot; alt=&quot;&quot; /&gt;&lt;/li&gt;</span><br><span class=\"line\">  &lt;li id=&quot;B&quot; draggable=&quot;true&quot;&gt;&lt;img src=&quot;2.jpg&quot; alt=&quot;&quot; /&gt;&lt;/li&gt;</span><br><span class=\"line\">  &lt;li id=&quot;C&quot; draggable=&quot;true&quot;&gt;&lt;img src=&quot;3.jpg&quot; alt=&quot;&quot; /&gt;&lt;/li&gt;</span><br><span class=\"line\">  &lt;li id=&quot;D&quot; draggable=&quot;true&quot;&gt;&lt;img src=&quot;4.jpg&quot; alt=&quot;&quot; /&gt;&lt;/li&gt;</span><br><span class=\"line\">  &lt;li id=&quot;E&quot; draggable=&quot;true&quot;&gt;&lt;img src=&quot;5.jpg&quot; alt=&quot;&quot; /&gt;&lt;/li&gt;</span><br><span class=\"line\">  &lt;li id=&quot;F&quot; draggable=&quot;true&quot;&gt;&lt;img src=&quot;6.jpg&quot; alt=&quot;&quot; /&gt;&lt;/li&gt;</span><br><span class=\"line\">  &lt;li id=&quot;G&quot; draggable=&quot;true&quot;&gt;&lt;img src=&quot;7.jpg&quot; alt=&quot;&quot; /&gt;&lt;/li&gt;</span><br><span class=\"line\">  &lt;li id=&quot;H&quot; draggable=&quot;true&quot;&gt;&lt;img src=&quot;8.jpg&quot; alt=&quot;&quot; /&gt;&lt;/li&gt;</span><br><span class=\"line\">&lt;/ul&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">/* css */</span><br><span class=\"line\">ul &#123;</span><br><span class=\"line\">  margin:0 auto;</span><br><span class=\"line\">  width:800px;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">ul:after&#123;</span><br><span class=\"line\">  content:&quot;&quot;;</span><br><span class=\"line\">  display:block;</span><br><span class=\"line\">  clear:both;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">li &#123;</span><br><span class=\"line\">  width:200px;</span><br><span class=\"line\">  height:125px;</span><br><span class=\"line\">  float:left;</span><br><span class=\"line\">  background-color:#CCC;</span><br><span class=\"line\">  text-align:center;</span><br><span class=\"line\">  line-height:120px;</span><br><span class=\"line\">  font-size:50px;</span><br><span class=\"line\">  color:#F60;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">.dragStart img &#123;</span><br><span class=\"line\">  width:200px;</span><br><span class=\"line\">  height:125px;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">/* js */</span><br><span class=\"line\">var dragElements = document.querySelectorAll(&apos;#drag-elements li&apos;);</span><br><span class=\"line\">var elementDragged = null;</span><br><span class=\"line\">for (var i = 0; i &lt; dragElements.length; i++) &#123;</span><br><span class=\"line\">  dragElements[i].addEventListener(&apos;dragstart&apos;, function (e) &#123;</span><br><span class=\"line\">    e.dataTransfer.setData(&apos;text&apos;, this.id);</span><br><span class=\"line\">    elementDragged = this;</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\">  dragElements[i].addEventListener(&apos;dragover&apos;, function (e) &#123;</span><br><span class=\"line\">    e.preventDefault();</span><br><span class=\"line\">    e.dataTransfer.dropEffect = &apos;move&apos;;</span><br><span class=\"line\">    elementDragged.setAttribute(&apos;class&apos;, &apos;dragStart&apos;);</span><br><span class=\"line\">    return false;</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\">  dragElements[i].addEventListener(&apos;dragenter&apos;, function(e) &#123;</span><br><span class=\"line\">    e.preventDefault();</span><br><span class=\"line\">    e.stopPropagation();</span><br><span class=\"line\">    if (this.id != elementDragged.id) &#123;</span><br><span class=\"line\">      var tempInnerHtml = this.innerHTML;</span><br><span class=\"line\">      this.innerHTML = elementDragged.innerHTML;</span><br><span class=\"line\">      elementDragged.innerHTML = tempInnerHtml;</span><br><span class=\"line\">      elementDragged.removeAttribute(&apos;class&apos;);</span><br><span class=\"line\">      elementDragged = this;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\">  dragElements[i].addEventListener(&apos;dragleave&apos;, function(e) &#123;</span><br><span class=\"line\">    e.preventDefault();</span><br><span class=\"line\">    e.stopPropagation();</span><br><span class=\"line\">    if (this.id != elementDragged.id) &#123;</span><br><span class=\"line\">      this.removeAttribute(&apos;class&apos;);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\">  dragElements[i].addEventListener(&apos;drop&apos;, function (e) &#123;</span><br><span class=\"line\">    e.preventDefault();</span><br><span class=\"line\">    e.stopPropagation();  </span><br><span class=\"line\">    var targetId = e.dataTransfer.getData(&apos;text&apos;);</span><br><span class=\"line\">    elementDragged.removeAttribute(&apos;class&apos;);</span><br><span class=\"line\">    return false;</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\">  dragElements[i].addEventListener(&apos;dragend&apos;, function (e) &#123;</span><br><span class=\"line\">    elementDragged = null;</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n<h3 id=\"拖放网元素\"><a href=\"#拖放网元素\" class=\"headerlink\" title=\"拖放网元素\"></a>拖放网元素</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/* html */</span><br><span class=\"line\">&lt;ul id=&quot;drag-elements&quot;&gt;</span><br><span class=\"line\">    &lt;li draggable=&quot;true&quot;&gt;A&lt;/li&gt;</span><br><span class=\"line\">    &lt;li draggable=&quot;true&quot;&gt;B&lt;/li&gt;</span><br><span class=\"line\">    &lt;li draggable=&quot;true&quot;&gt;C&lt;/li&gt;</span><br><span class=\"line\">&lt;/ul&gt;</span><br><span class=\"line\">&lt;ul id=&quot;drop-target&quot;&gt;&lt;/ul&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">/* css */</span><br><span class=\"line\">ul&#123;</span><br><span class=\"line\">    min-height:100px;</span><br><span class=\"line\">    background-color:#EEE;</span><br><span class=\"line\">    margin:20px;</span><br><span class=\"line\">    padding: 0;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">ul li&#123;</span><br><span class=\"line\">    background-color:#CCC;</span><br><span class=\"line\">    padding:10px;</span><br><span class=\"line\">    margin-bottom:10px;</span><br><span class=\"line\">    list-style: none;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">/* js */</span><br><span class=\"line\">// 获取dom元素</span><br><span class=\"line\">var target = document.querySelector(&apos;#drop-target&apos;);</span><br><span class=\"line\">var dragElements = document.querySelectorAll(&apos;#drag-elements li&apos;);</span><br><span class=\"line\"></span><br><span class=\"line\">// 定义变量跟踪被拖动的元素</span><br><span class=\"line\">var elementDragged = null;</span><br><span class=\"line\"></span><br><span class=\"line\">// 对可以拖放的元素绑定 dragstart 和 dragend 事件</span><br><span class=\"line\">for (var i = 0; i &lt; dragElements.length; i++) &#123;</span><br><span class=\"line\">  dragElements[i].addEventListener(&apos;dragstart&apos;, function(e) &#123;</span><br><span class=\"line\">    e.dataTransfer.setData(&apos;text&apos;, this.innerHTML);</span><br><span class=\"line\">    elementDragged = this;</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\">  dragElements[i].addEventListener(&apos;dragend&apos;, function(e) &#123;</span><br><span class=\"line\">    elementDragged = null;</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">// 向目标元素绑定 dragover 事件,来处理元素拖动进入目标元素之后的事情</span><br><span class=\"line\">target.addEventListener(&apos;dragover&apos;, function(e) &#123;</span><br><span class=\"line\">  e.preventDefault();</span><br><span class=\"line\">  e.dataTransfer.dropEffect = &apos;move&apos;;</span><br><span class=\"line\">  return false;</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">// 最后定义目标元素的 drop事件,将被拖动元素从原来的位置删除</span><br><span class=\"line\">target.addEventListener(&apos;drop&apos;, function(e) &#123;</span><br><span class=\"line\">  e.preventDefault();</span><br><span class=\"line\">  e.stopPropagation();</span><br><span class=\"line\">  this.innerHTML = &apos;Dropped &apos; + e.dataTransfer.getData(&apos;text&apos;);</span><br><span class=\"line\">  document.querySelector(&apos;#drag-elements&apos;).removeChild(elementDragged);</span><br><span class=\"line\">  return false;</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<h3 id=\"拖放文件\"><a href=\"#拖放文件\" class=\"headerlink\" title=\"拖放文件\"></a>拖放文件</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/* html */</span><br><span class=\"line\">&lt;div id=&quot;target&quot; title=&quot;拖动文件到这里&quot;&gt;</span><br><span class=\"line\">  &lt;div id=&quot;content&quot;&gt;&lt;/div&gt;</span><br><span class=\"line\">&lt;/div&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">/* css */</span><br><span class=\"line\">#target&#123;</span><br><span class=\"line\">  margin:10px;</span><br><span class=\"line\">  min-height:100px;</span><br><span class=\"line\">  max-height:600px;</span><br><span class=\"line\">  background-color:#EEE;</span><br><span class=\"line\">  border-radius:5px;</span><br><span class=\"line\">  overflow:auto;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">#content&#123;</span><br><span class=\"line\">  padding:10px;</span><br><span class=\"line\">  font-size:18px;</span><br><span class=\"line\">  line-height:25px;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">/* js */</span><br><span class=\"line\">// 首先获取拖动的目标元素和内容展示区域</span><br><span class=\"line\">var target = document.querySelector(&apos;#target&apos;);</span><br><span class=\"line\">var contentDiv = document.querySelector(&apos;#content&apos;);</span><br><span class=\"line\"></span><br><span class=\"line\">// 然后定义目标元素的dragover事件,定义了当文件进入目标元素后要做的事情</span><br><span class=\"line\">target.addEventListener(&apos;dragover&apos;, function(e) &#123;</span><br><span class=\"line\">  e.preventDefault();</span><br><span class=\"line\">  e.stopPropagation();</span><br><span class=\"line\">  e.dataTransfer.dropEffect = &apos;copy&apos;;</span><br><span class=\"line\">  return false;</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">// 最后定义目标元素的drop事件,展示文件内容</span><br><span class=\"line\">target.addEventListener(&apos;drop&apos;, function(e) &#123;</span><br><span class=\"line\">  e.preventDefault(); </span><br><span class=\"line\">  e.stopPropagation();</span><br><span class=\"line\">  var fileList = e.dataTransfer.files;</span><br><span class=\"line\">  if (fileList.length &gt; 0) &#123;</span><br><span class=\"line\">    var file = fileList[0];</span><br><span class=\"line\">    var reader = new FileReader();</span><br><span class=\"line\">    reader.onloadend = function(e) &#123;</span><br><span class=\"line\">      if (e.target.readyState == FileReader.DONE) &#123;</span><br><span class=\"line\">        var content = reader.result;</span><br><span class=\"line\">        contentDiv.innerHTML = &quot;File: &quot; + file.name + &quot;\\n\\n&quot; + content;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    reader.readAsBinaryString(file);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<h3 id=\"最后附一份最近完成的基于Vue的完整的拖放实例\"><a href=\"#最后附一份最近完成的基于Vue的完整的拖放实例\" class=\"headerlink\" title=\"最后附一份最近完成的基于Vue的完整的拖放实例\"></a>最后附一份最近完成的基于Vue的完整的拖放实例</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;!DOCTYPE html&gt;</span><br><span class=\"line\">&lt;html lang=&quot;en&quot;&gt;</span><br><span class=\"line\">&lt;head&gt;</span><br><span class=\"line\">    &lt;meta charset=&quot;UTF-8&quot;&gt;</span><br><span class=\"line\">    &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt;</span><br><span class=\"line\">    &lt;meta http-equiv=&quot;X-UA-Compatible&quot; content=&quot;ie=edge&quot;&gt;</span><br><span class=\"line\">    &lt;title&gt;Document&lt;/title&gt;</span><br><span class=\"line\">    &lt;!-- jquery --&gt;</span><br><span class=\"line\">    &lt;script src=&quot;https://cdn.bootcss.com/jquery/3.2.1/jquery.min.js&quot;&gt;&lt;/script&gt;</span><br><span class=\"line\">    &lt;!-- vue --&gt;</span><br><span class=\"line\">    &lt;script src=&quot;https://cdn.bootcss.com/vue/2.5.3/vue.js&quot;&gt;&lt;/script&gt;</span><br><span class=\"line\">    &lt;!-- element-ui --&gt;</span><br><span class=\"line\">    &lt;link rel=&quot;stylesheet&quot; href=&quot;https://unpkg.com/element-ui/lib/theme-chalk/index.css&quot;&gt;</span><br><span class=\"line\">    &lt;script src=&quot;https://unpkg.com/element-ui/lib/index.js&quot;&gt;&lt;/script&gt;</span><br><span class=\"line\">&lt;/head&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;body&gt;</span><br><span class=\"line\">&lt;div id=&quot;app&quot;&gt;</span><br><span class=\"line\">    &lt;el-table :data=&quot;tableData&quot; style=&quot;width: 100%&quot;&gt;</span><br><span class=\"line\">        &lt;el-table-column prop=&quot;date&quot; label=&quot;日期&quot; width=&quot;180&quot;&gt;</span><br><span class=\"line\">        &lt;/el-table-column&gt;</span><br><span class=\"line\">        &lt;el-table-column prop=&quot;name&quot; label=&quot;姓名&quot; width=&quot;180&quot;&gt;</span><br><span class=\"line\">        &lt;/el-table-column&gt;</span><br><span class=\"line\">        &lt;el-table-column prop=&quot;address&quot; label=&quot;地址&quot;&gt;</span><br><span class=\"line\">        &lt;/el-table-column&gt;</span><br><span class=\"line\">    &lt;/el-table&gt;</span><br><span class=\"line\">&lt;/div&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;script&gt;</span><br><span class=\"line\">    function dragStart(e) &#123;</span><br><span class=\"line\">        var el = e.target;</span><br><span class=\"line\">        el = this;</span><br><span class=\"line\">        start = this.id;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    function dragOver(ev) &#123;</span><br><span class=\"line\">        var el = ev.target;</span><br><span class=\"line\">        ev.preventDefault();</span><br><span class=\"line\">        ev.dataTransfer.dropEffect = &apos;move&apos;;</span><br><span class=\"line\">        $(el).addClass(&apos;dragStart&apos;);</span><br><span class=\"line\">        return false;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    function dragEnter(ev) &#123;</span><br><span class=\"line\">        var el = ev.target;</span><br><span class=\"line\">        ev.preventDefault();</span><br><span class=\"line\">        ev.stopPropagation();</span><br><span class=\"line\">        if (this.id !== el.id) &#123;</span><br><span class=\"line\">            $(el).addClass(&apos;dragstart&apos;);</span><br><span class=\"line\">            el = this;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    function dragLeave(ev) &#123;</span><br><span class=\"line\">        var el = ev.target;</span><br><span class=\"line\">        ev.preventDefault();</span><br><span class=\"line\">        ev.stopPropagation();</span><br><span class=\"line\">        if (this.id !== el.id) &#123;</span><br><span class=\"line\">            $(this).removeClass(&apos;dragstart&apos;);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        $(&apos;td&apos;).css(&quot;borderBottomColor&quot;, &quot;&quot;)</span><br><span class=\"line\">        $(this).find(&apos;td&apos;).css(&quot;borderBottomColor&quot;, &quot;#f66e04&quot;)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    function drop(e) &#123;</span><br><span class=\"line\">        var el = e.target;</span><br><span class=\"line\">        e.preventDefault();</span><br><span class=\"line\">        e.stopPropagation();</span><br><span class=\"line\">        if (this.id !== el.id) &#123;</span><br><span class=\"line\">            $(this).removeClass(&apos;dragstart&apos;);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        end = this.id;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    function dragEnd(e) &#123;</span><br><span class=\"line\">        var el = e.target;</span><br><span class=\"line\">        $(&apos;td&apos;).css(&quot;borderBottomColor&quot;, &quot;&quot;)</span><br><span class=\"line\">        var lists = app.$data.tableData;</span><br><span class=\"line\">        el = null;</span><br><span class=\"line\">        var flag;</span><br><span class=\"line\">        flag = lists[start];</span><br><span class=\"line\">        lists[start] = lists[end];</span><br><span class=\"line\">        lists[end] = flag;</span><br><span class=\"line\">        app.$data.tableData = lists.concat([]);</span><br><span class=\"line\">        console.log(&quot;从索引&quot; + start + &quot;移动到索引&quot; + end)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    var app = new Vue(&#123;</span><br><span class=\"line\">        el: &quot;#app&quot;,</span><br><span class=\"line\">        data: function () &#123;</span><br><span class=\"line\">            return &#123;</span><br><span class=\"line\">                tableData: []</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;,</span><br><span class=\"line\">        mounted: function () &#123;</span><br><span class=\"line\">            this.tableData = [&#123;</span><br><span class=\"line\">                date: &apos;2016-05-02&apos;,</span><br><span class=\"line\">                name: &apos;王小虎1&apos;,</span><br><span class=\"line\">                address: &apos;上海市普陀区金沙江路 1518 弄&apos;</span><br><span class=\"line\">            &#125;, &#123;</span><br><span class=\"line\">                date: &apos;2016-05-04&apos;,</span><br><span class=\"line\">                name: &apos;王小虎2&apos;,</span><br><span class=\"line\">                address: &apos;上海市普陀区金沙江路 1517 弄&apos;</span><br><span class=\"line\">            &#125;, &#123;</span><br><span class=\"line\">                date: &apos;2016-05-01&apos;,</span><br><span class=\"line\">                name: &apos;王小虎3&apos;,</span><br><span class=\"line\">                address: &apos;上海市普陀区金沙江路 1519 弄&apos;</span><br><span class=\"line\">            &#125;, &#123;</span><br><span class=\"line\">                date: &apos;2016-05-03&apos;,</span><br><span class=\"line\">                name: &apos;王小虎4&apos;,</span><br><span class=\"line\">                address: &apos;上海市普陀区金沙江路 1516 弄&apos;</span><br><span class=\"line\">            &#125;];</span><br><span class=\"line\">        &#125;,</span><br><span class=\"line\">        watch: &#123;</span><br><span class=\"line\">            tableData: function () &#123;</span><br><span class=\"line\">                this.$nextTick(() =&gt; &#123;</span><br><span class=\"line\">                    this.StartDrag()</span><br><span class=\"line\">                &#125;)</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;,</span><br><span class=\"line\">        methods: &#123;</span><br><span class=\"line\">            StartDrag: function () &#123;</span><br><span class=\"line\">                var start, end;</span><br><span class=\"line\">                var dragElements = document.getElementsByClassName(&apos;el-table__row&apos;);</span><br><span class=\"line\">                for (var i = 0; i &lt; dragElements.length; i++) &#123;</span><br><span class=\"line\">                    dragElements[i].setAttribute(&apos;draggable&apos;, &apos;true&apos;);</span><br><span class=\"line\">                    dragElements[i].setAttribute(&apos;id&apos;, i)</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">                for (var i = 0; i &lt; dragElements.length; i++) &#123;</span><br><span class=\"line\">                    /*</span><br><span class=\"line\">                    *因为涉及到翻页和全局搜索之类的功能</span><br><span class=\"line\">                    *会大量的树新数据导致dom变化</span><br><span class=\"line\">                    *因此在绑定时间之前重新渲染页面</span><br><span class=\"line\">                    *移除之前的事件重新绑定</span><br><span class=\"line\">                    */</span><br><span class=\"line\">                    // removeEventListener</span><br><span class=\"line\">                    dragElements[i].removeEventListener(&apos;dragstart&apos;, dragStart);</span><br><span class=\"line\">                    dragElements[i].removeEventListener(&apos;dragover&apos;, dragOver);</span><br><span class=\"line\">                    dragElements[i].removeEventListener(&apos;dragenter&apos;, dragEnter);</span><br><span class=\"line\">                    dragElements[i].removeEventListener(&apos;dragleave&apos;, dragLeave);</span><br><span class=\"line\">                    dragElements[i].removeEventListener(&apos;drop&apos;, drop);</span><br><span class=\"line\">                    dragElements[i].removeEventListener(&apos;dragend&apos;, dragEnd);</span><br><span class=\"line\">                    // addEventListener</span><br><span class=\"line\">                    dragElements[i].addEventListener(&apos;dragstart&apos;, dragStart);</span><br><span class=\"line\">                    dragElements[i].addEventListener(&apos;dragover&apos;, dragOver);</span><br><span class=\"line\">                    dragElements[i].addEventListener(&apos;dragenter&apos;, dragEnter);</span><br><span class=\"line\">                    dragElements[i].addEventListener(&apos;dragleave&apos;, dragLeave);</span><br><span class=\"line\">                    dragElements[i].addEventListener(&apos;drop&apos;, drop);</span><br><span class=\"line\">                    dragElements[i].addEventListener(&apos;dragend&apos;, dragEnd);</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">&lt;/script&gt;</span><br><span class=\"line\">&lt;/body&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;/html&gt;</span><br></pre></td></tr></table></figure>"},{"title":"cropper","date":"2017-11-06T03:01:19.000Z","description":"一个简单的jquery图片裁剪插件","_content":"## 初始化\n用一个块元素包裹image或canvas元素\n```\n/* html */\n<div id=\"wrapper\"> \n  <img src=\"image.jpg\">\n</div>\n/* css */\n#wrapper img {\n  max-width:100%;\n}\n/* js */\n$('#wrapper > img').cropper(options)\n```\n备注：\n+ cropper 的尺寸是由图片的父元素（包裹）继承来的，所以要确保用一个可见的块元素包裹图片。\n\n+ 输出的裁剪数据基于原始图像的尺寸，所以你可以直接使用它们来裁剪图像。\n\n+ 如果你尝试去对一个跨域的图片使用 cropper，请确保你的浏览器支持 HTML5 CORS 设置属性，并且你的图片服务器支持 `Access-Control-Allow-Origin` 选项。\n## options\n\n| 键值| 参数说明|示例/默认值|\n|:---:|:---:|:---:|  \n| aspectRatio | number<br>裁剪框的长宽比 | NAN |\n| preview | selector<br>添加额外的元素来作为预览 | $('#perview') |\n| strict | boolean<br>严格模式下不能移出画布 | true |\n| responsive | boolean<br>严格模式下不能移出画布 | true |\n| data | boolean<br>上一个剪裁数据，前提是你做了存储，将会自动传给`setData`方法 | true |\n| checkImageOrigin | boolean<br>如果检测的图片是跨域的，该元素将会被添加上一个 `crossOrigin` 属性，图片 url 地址会被加上一个时间戳。通过给图片加上 `crossOrigin` 属性，将会阻止给图片的 url 加上时间戳，并停止重新加载图片 | true |\n| modal | boolean<br>在图片上方以及剪裁框下方显示黑色模式(半透明的黑色遮罩) | true |\n| guides | boolean<br>在剪裁框上方显示虚线 | true |\n| center | boolean<br>在剪裁框上方显示中心标识 | true |\n| highlight | boolean<br>在剪裁框上面显示白色的模态框 | true |\n| background | boolean<br>显示容器的网格背景 | true |\n| autoCrop | boolean<br>允许初始化的时候自动剪裁图片 | true |\n| autoCropArea | Number<br>自动剪裁的区域大小（百分比），介于 0 到 1 之间的数字 | 0.8 |\n| dragCrop | Boolean<br>允许移除当前的剪裁框，然后通过在图片上拖动鼠标创建一个新的剪裁框 | true |\n| movable | Boolean<br>允许移动图片 | true |\n| rotatable | Boolean<br>允许旋转图片 | true |\n| scalable | Boolean<br>允许缩放图片 | true |\n| zoomable | Boolean<br>允许缩放图片 | true |\n| mouseWheelZoom | Boolean<br>允许在鼠标滚动的时候缩放图片 | true |\n| wheelZoomRatio | Number<br>当通过滚动鼠标缩放图片的时候，定义缩放尺寸 | 0.1 |\n| touchDragZoom | Boolean<br>允许通过触摸拖动来缩放图片 | true |\n| cropBoxMovable | Boolean<br>允许移动剪裁框 | true |\n| cropBoxResizable | Boolean<br>允许调整剪裁框大小 | true |\n| doubleClickToggle | Boolean<br>允许通过双击 cropper 来切换剪裁（图片）和移动（图片）模式 | true |\n| minContainerWidth | Number<br>容器最小宽度 | 200 |\n| minContainerHeight | Number<br>容器最小高度 | 100 |\n| minCanvasWidth | Number<br>画布最小宽度（图片包裹器） | 0 |\n| minCanvasHeight | Number<br>画布最小高度（图片包裹器） | 0 |\n| minCropBoxWidth | Number<br>剪裁框最小宽度 | 0 |\n| minCropBoxHeight | Number<br>剪裁框最小高度 | 0 |\n| build | Function<br>`build.cropper` 事件的快捷方式 | null |\n| built | Function<br>`built.cropper` 事件的快捷方式 | null |\n| cropstart | Function<br>`cropstart.cropper` 事件的快捷方式 | null |\n| cropmove | Function<br>`cropsmove.cropper` 事件的快捷方式 | null |\n| cropstend | Function<br>`cropend.cropper` 事件的快捷方式 | null |\n| crop | Function<br>`crop.cropper` 事件的快捷方式 | null |\n| zoom | Function<br>`zoom.cropper` 事件的快捷方式 | null |\n| cropstart | Function<br>`cropstart.cropper` 事件的快捷方式 | null |\n\n## methods\n由于加载图片的是一个异步进程，你应该在 buit 之后调用大多数的方法，除 `setAspectRatio`, `replace` 和 `destroy` 之外。\n```\n$().cropper({\n  built: function () {\n    $().cropper('method', argument1, , argument2, ..., argumentN);\n  }\n});\n```\n### crop()\n手动显示剪裁框。\n```\n$().cropper({\n  autoCrop: false,\n  built: function () {\n    // Do something here\n    // ...\n\n    // And then\n    $(this).cropper('crop');\n  }\n});\n```\n### reset()\n将图片和剪裁框重置到他们的初始化状态。\n### clear()\n清除剪裁框\n### replace(url)\n+ url:\n  - 类型:`String`\n  - 一个新的图片 `url`\n     \n替换图片的链接地址，然后重建cropper\n### enable()\n启用（解冻）cropper\n### disable()\n禁用（冻结）cropper\n### destroy()\n销毁 cropper 并且从图片上移除实例。\n### move(offsetX[, offsetY])\n  + offsetX:\n    - 类型: Number\n    - 默认值: 0\n    - 在水平方向上移动的尺寸（像素）\n  + offsetY (optional):\n    - 类型: Number\n    - 在垂直方向上移动的尺寸（像素）\n    - 如果不存在，默认值是 offsetX\n    \n移动画布（图片包裹器）\n```\n$().cropper('move', 1);\n$().cropper('move', 1, 0);\n$().cropper('move', 0, -1);\n```\n### zoom(ratio)\n  + ratio:\n    - 类型: Number\n    - 放大: 需要一个正数（ratio > 0）\n    - 缩小: 需要一个负数（ratio < 0）\n    \n缩放画布（图片包裹器）\n```\n$().cropper('zoom', 0.1);\n$().cropper('zoom', -0.1);\n```\n### rotate(degree)\n  + degree:\n    - 类型: Number\n    - 向右旋转： 需要一个正数（degree > 0）\n    - 向左旋转： 需要一个负数（degree < 0）\n    \n旋转画布（图片包裹器）：需要 CSS3 2D Transforms 来支持 (IE 9+)\n```\n$().cropper('rotate', 90);\n$().cropper('rotate', -90);\n```\n### scale(scaleX[, scaleY])\n  + scaleX\n    - 类型: Number\n    - 默认值: 1\n    - 图片横坐标上的缩放因子\n    - 当等于1的时候，就相当于什么都没做。\n  + scaleY (optional):\n    - 类型: Number\n    - 图片纵坐标上的缩放因子 -如果不存在，默认是 scaleX\n    \n缩放图片：需要 CSS3 2D Transforms 来支持 (IE 9+)\n```\n $().cropper('scale', -1); //  水平方向和垂直方向都翻转\n    $().cropper('scale', -1, 1); // 水平方向翻转\n    $().cropper('scale', 1, -1); // 垂直方向翻转\n```\n### getData([rounded])\n  + rounded (optional):\n    - 类型: Boolean\n    - 默认值: false\n    - 来获得圆角值\n  + (返回值):\n    - 类型: Object\n    - 属性:\n      * x: 剪裁区的左偏移量\n      * y:剪裁区的上偏移量\n      * width: 剪裁区宽度\n      * height: 剪裁区高度\n      * rotate: 图片的旋转角度\n      * scaleX: 图片横坐标上的缩放因子\n      * scaleY: 图片纵坐标上的缩放因子\n      \n输出剪裁区的位置和尺寸数据（基于原始图片）\n### setData(data)\n  * data:\n    + 类型: Object\n    + 属性: 查看 getData 方法\n\n改变剪裁区的位置和尺寸值（基于原始图片）       \n**注意**: 只在严格模式下有用\n### getContainerData()\n  + (返回值):\n    - 类型: Object\n    - 属性:\n      * width:容器当前宽度\n      * height: 容器当前高度\n\n输出容器的尺寸数据\n### getImageData()\n  + (返回值):\n    - 类型: Object\n    - 属性:\n      * left: 图片的左偏移量\n      * top: 图片的上偏移量\n      * width: 图片宽度\n      * height: 图片高度\n      * naturalWidth:图片自然宽度\n      * naturalHeight: 图片自然高度\n      * aspectRatio: 图片长宽比\n      * rotate: 图片的旋转角度\n      * scaleX:图片横坐标上的缩放因子\n      * scaleY: 图片纵坐标上的缩放因子\n      \n输出图片的位置尺寸和其它相关数据。    \n### getCanvasData()\n  + (返回值):\n    - 类型: Object\n    - 属性:\n      * left: 画布左偏移量\n      * top: 画布上偏移量\n      * width:画布宽度\n      * height: 画布高度\n    \n输入画布（图片包裹器）的位置和尺寸数据。\n### setCanvasData(data)\n  + data:\n    - 类型: Object\n    - 属性:\n      * left: 画布新的左偏移量\n      * top: 画布新的上偏移量\n      * width: 画布新的宽度\n      * height: 画布新的高度\n    \n修改画布（图片包裹器）的位置和尺寸数据。\n### getCropBoxData()\n  * (返回值):\n    + 类型: Object\n    + 属性:\n      - left: 剪裁框左偏移量\n      - top:剪裁框上偏移量\n      - width: 剪裁框宽度\n      - height:剪裁框高度\n    \n输出剪裁框的位置和尺寸数据。\n### setCropBoxData(data)\n  + data:\n    - 类型: Object\n    - 属性:\n      - left: 剪裁框新的左偏移量\n      - top: 剪裁框新的上偏移量\n      - width: 剪裁框新的宽度\n      - height: 剪裁框新的高度\n    \n修改剪裁框的位置和尺寸数据。\n### getCroppedCanvas([options])\n  + options (可选):\n    - 类型: Object\n    - 属性:\n      * width输出画布的目标宽度\n      * height: 输出画布的目标高度\n      * fillColor: 填入输出画布的任何alpha 颜色值\n  + (返回值):\n    - 类型: HTMLCanvasElement\n    - 剪裁后的图片的画布\n  + 浏览器支持：\n    - 基本图片: 需要 Canvas 来支持 (IE 9+)\n    - 旋转的图片: 需要 CSS3 2D Transforms 来支持 (IE 9+)\n    - 跨域图片: 需要 HTML5 CORS settings attributes 来支持 (IE 11+)\n    \n获取剪裁后的图片的画布     \n随后，你可以直接将画布显示为一张图片，或者使用 canvas.toDataURL 来获取一个数据的 URL，或者使用 canvas.toBlob 获取一个 blob 然后使用 FormData 将其上传到服务器上（如果浏览器支持这些APIs）。\n```\n$().cropper('getCroppedCanvas'); \n  $().cropper('getCroppedCanvas', {\n    width: 160,\n    height: 90\n  });  \n  // Upload cropped image to server\n  $().cropper('getCroppedCanvas').toBlob(function (blob) {\n    var formData = new FormData();    \n    formData.append('croppedImage', blob);\n      $.ajax('/path/to/upload', {\n        method: \"POST\",\n        data: formData,\n        processData: false,\n        contentType: false,\n        success: function () {\n          console.log('Upload success');\n        },\n        error: function () {\n          console.log('Upload error');\n        }\n      });\n    });\n```\n### setAspectRatio(aspectRatio)\n  + aspectRatio:\n    - 类型: Number\n    - 需要一个正整数。\n    \n改变剪裁框的长宽比。\n### setDragMode([mode])\n  + mode (可选):\n    - 类型: String\n    - 默认值: 'none'\n    - 可选值: 'none', 'crop', 'move'\n    \n修改拖动模式。\n**提示**: 你可以通过双击剪裁框在 \"crop\" 和 \"move\" 模式之间切换 。\n## 事件\n### build.cropper\n该事件在剪裁框实例开始加载一张图片的时候触发。\n### built.cropper\n该事件在一个剪裁框实例完全创建好的的时候触发。\n### cropstart.cropper\n  + event.originalEvent:\n    - 类型: Event\n    - 选项: mousedown, touchstart 和 pointerdown\n  + event.action:\n    - 类型: String\n    - 选项:\n      * 'crop':创建一个新的剪裁框\n      * 'move': 移动画布\n      * 'zoom':放大/缩小画布\n      * 'e': 调整剪裁框东面的大小\n      * 'w': 调整剪裁框西面的大小\n      * 's': 调整剪裁框南面的大小\n      * 'n': 调整剪裁框北面的大小\n      * 'se': 调整剪裁框东南面的大小\n      * 'sw': 调整剪裁框西南面的大小\n      * 'ne': 调整剪裁框东北面的大小\n      *'nw': 调整剪裁框西北面的大小\n      *'all': 移动剪裁框（所有方向）\n    \n该事件在画布或者剪裁框开始改变的时候触发。\n```\n$().on('cropstart.cropper', function (e) {\n  console.log(e.type); // cropstart\n  console.log(e.namespace); // cropper\n  console.log(e.action); // ...\n  console.log(e.originalEvent.pageX);\n   \n  // Prevent to start cropping, moving, etc if necessary\n  if (e.action === 'crop') {\n    e.preventDefault();\n  }\n});\n```\n### cropmove.cropper\n  + event.originalEvent:\n    - 类型: Event\n    - 选项: mousemove, touchmove 和 pointermove.\n  + event.action: 和 \"cropstart.cropper\" 是一样的。\n  \n该事件在画布或者剪裁框正在改变中的时候触发。\n### cropend.cropper\n + event.originalEvent: \n   - 类型: Event\n   - 选项: mouseup, touchend, touchcancel, pointerup 和 pointercancel.\n + event.action: 和 \"cropstart.cropper\" 是一样的\n \n该事件在画布或者剪裁框停止改变的时候触发。\n### crop.cropper\n  + event.x\n  + event.y\n  + event.width\n  + event.height\n  + event.rotate\n  + event.scaleX\n  + event.scaleY\n\n关于这些属性，请查看 `getData` 方法.    \n该事件在画布或者剪裁框改变完成的时候触发。\n### zoom.cropper\n  + event.originalEvent:\n    - 类型: Event\n    - 选项: wheel, touchmove.\n  + event.ratio:\n    - 类型: Number\n    - 当前缩放比例 (ratio > 0表示放大, ratio < 0 表示缩小)\n\n该事件在一个剪裁框实例开始放大或缩小的时候触发。\n```\n$().on('zoom.cropper', function (e) {\n  var maxRatio = 10;\n  var imageData = $(this).cropper('getImageData');\n  var currentRatio = imageData.width / imageData.naturalWidth;\n\n  // Zoom in\n  if (e.ratio > 0 && currentRatio > maxRatio) {\n\n    // Prevent zoom in\n    e.preventDefault();\n\n    // Fit the max zoom ratio\n    $(this).cropper('setCanvasData', {\n      width: imageData.naturalWidth * maxRatio\n    });\n  }\n\n  // Zoom out\n  // ...\n});\n```\n### 防止冲突\n如果你已经使用了其它的插件，而且是相同的命名空间，只需要调用 `$.fn.cropper.noConflict` 方法来还原它。\n```\n<script src=\"other-plugin.js\"></script>\n<script src=\"cropper.js\"></script>\n<script>\n  $.fn.cropper.noConflict();\n  // Code that uses other plugin's \"$().cropper\" can follow here.\n</script>\n```\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n","source":"_posts/cropper.md","raw":"title: cropper\ntags: [cropper]\ndate: 2017-11-06 11:01:19\ncategories: [JavaScript]\ndescription: 一个简单的jquery图片裁剪插件\n---\n## 初始化\n用一个块元素包裹image或canvas元素\n```\n/* html */\n<div id=\"wrapper\"> \n  <img src=\"image.jpg\">\n</div>\n/* css */\n#wrapper img {\n  max-width:100%;\n}\n/* js */\n$('#wrapper > img').cropper(options)\n```\n备注：\n+ cropper 的尺寸是由图片的父元素（包裹）继承来的，所以要确保用一个可见的块元素包裹图片。\n\n+ 输出的裁剪数据基于原始图像的尺寸，所以你可以直接使用它们来裁剪图像。\n\n+ 如果你尝试去对一个跨域的图片使用 cropper，请确保你的浏览器支持 HTML5 CORS 设置属性，并且你的图片服务器支持 `Access-Control-Allow-Origin` 选项。\n## options\n\n| 键值| 参数说明|示例/默认值|\n|:---:|:---:|:---:|  \n| aspectRatio | number<br>裁剪框的长宽比 | NAN |\n| preview | selector<br>添加额外的元素来作为预览 | $('#perview') |\n| strict | boolean<br>严格模式下不能移出画布 | true |\n| responsive | boolean<br>严格模式下不能移出画布 | true |\n| data | boolean<br>上一个剪裁数据，前提是你做了存储，将会自动传给`setData`方法 | true |\n| checkImageOrigin | boolean<br>如果检测的图片是跨域的，该元素将会被添加上一个 `crossOrigin` 属性，图片 url 地址会被加上一个时间戳。通过给图片加上 `crossOrigin` 属性，将会阻止给图片的 url 加上时间戳，并停止重新加载图片 | true |\n| modal | boolean<br>在图片上方以及剪裁框下方显示黑色模式(半透明的黑色遮罩) | true |\n| guides | boolean<br>在剪裁框上方显示虚线 | true |\n| center | boolean<br>在剪裁框上方显示中心标识 | true |\n| highlight | boolean<br>在剪裁框上面显示白色的模态框 | true |\n| background | boolean<br>显示容器的网格背景 | true |\n| autoCrop | boolean<br>允许初始化的时候自动剪裁图片 | true |\n| autoCropArea | Number<br>自动剪裁的区域大小（百分比），介于 0 到 1 之间的数字 | 0.8 |\n| dragCrop | Boolean<br>允许移除当前的剪裁框，然后通过在图片上拖动鼠标创建一个新的剪裁框 | true |\n| movable | Boolean<br>允许移动图片 | true |\n| rotatable | Boolean<br>允许旋转图片 | true |\n| scalable | Boolean<br>允许缩放图片 | true |\n| zoomable | Boolean<br>允许缩放图片 | true |\n| mouseWheelZoom | Boolean<br>允许在鼠标滚动的时候缩放图片 | true |\n| wheelZoomRatio | Number<br>当通过滚动鼠标缩放图片的时候，定义缩放尺寸 | 0.1 |\n| touchDragZoom | Boolean<br>允许通过触摸拖动来缩放图片 | true |\n| cropBoxMovable | Boolean<br>允许移动剪裁框 | true |\n| cropBoxResizable | Boolean<br>允许调整剪裁框大小 | true |\n| doubleClickToggle | Boolean<br>允许通过双击 cropper 来切换剪裁（图片）和移动（图片）模式 | true |\n| minContainerWidth | Number<br>容器最小宽度 | 200 |\n| minContainerHeight | Number<br>容器最小高度 | 100 |\n| minCanvasWidth | Number<br>画布最小宽度（图片包裹器） | 0 |\n| minCanvasHeight | Number<br>画布最小高度（图片包裹器） | 0 |\n| minCropBoxWidth | Number<br>剪裁框最小宽度 | 0 |\n| minCropBoxHeight | Number<br>剪裁框最小高度 | 0 |\n| build | Function<br>`build.cropper` 事件的快捷方式 | null |\n| built | Function<br>`built.cropper` 事件的快捷方式 | null |\n| cropstart | Function<br>`cropstart.cropper` 事件的快捷方式 | null |\n| cropmove | Function<br>`cropsmove.cropper` 事件的快捷方式 | null |\n| cropstend | Function<br>`cropend.cropper` 事件的快捷方式 | null |\n| crop | Function<br>`crop.cropper` 事件的快捷方式 | null |\n| zoom | Function<br>`zoom.cropper` 事件的快捷方式 | null |\n| cropstart | Function<br>`cropstart.cropper` 事件的快捷方式 | null |\n\n## methods\n由于加载图片的是一个异步进程，你应该在 buit 之后调用大多数的方法，除 `setAspectRatio`, `replace` 和 `destroy` 之外。\n```\n$().cropper({\n  built: function () {\n    $().cropper('method', argument1, , argument2, ..., argumentN);\n  }\n});\n```\n### crop()\n手动显示剪裁框。\n```\n$().cropper({\n  autoCrop: false,\n  built: function () {\n    // Do something here\n    // ...\n\n    // And then\n    $(this).cropper('crop');\n  }\n});\n```\n### reset()\n将图片和剪裁框重置到他们的初始化状态。\n### clear()\n清除剪裁框\n### replace(url)\n+ url:\n  - 类型:`String`\n  - 一个新的图片 `url`\n     \n替换图片的链接地址，然后重建cropper\n### enable()\n启用（解冻）cropper\n### disable()\n禁用（冻结）cropper\n### destroy()\n销毁 cropper 并且从图片上移除实例。\n### move(offsetX[, offsetY])\n  + offsetX:\n    - 类型: Number\n    - 默认值: 0\n    - 在水平方向上移动的尺寸（像素）\n  + offsetY (optional):\n    - 类型: Number\n    - 在垂直方向上移动的尺寸（像素）\n    - 如果不存在，默认值是 offsetX\n    \n移动画布（图片包裹器）\n```\n$().cropper('move', 1);\n$().cropper('move', 1, 0);\n$().cropper('move', 0, -1);\n```\n### zoom(ratio)\n  + ratio:\n    - 类型: Number\n    - 放大: 需要一个正数（ratio > 0）\n    - 缩小: 需要一个负数（ratio < 0）\n    \n缩放画布（图片包裹器）\n```\n$().cropper('zoom', 0.1);\n$().cropper('zoom', -0.1);\n```\n### rotate(degree)\n  + degree:\n    - 类型: Number\n    - 向右旋转： 需要一个正数（degree > 0）\n    - 向左旋转： 需要一个负数（degree < 0）\n    \n旋转画布（图片包裹器）：需要 CSS3 2D Transforms 来支持 (IE 9+)\n```\n$().cropper('rotate', 90);\n$().cropper('rotate', -90);\n```\n### scale(scaleX[, scaleY])\n  + scaleX\n    - 类型: Number\n    - 默认值: 1\n    - 图片横坐标上的缩放因子\n    - 当等于1的时候，就相当于什么都没做。\n  + scaleY (optional):\n    - 类型: Number\n    - 图片纵坐标上的缩放因子 -如果不存在，默认是 scaleX\n    \n缩放图片：需要 CSS3 2D Transforms 来支持 (IE 9+)\n```\n $().cropper('scale', -1); //  水平方向和垂直方向都翻转\n    $().cropper('scale', -1, 1); // 水平方向翻转\n    $().cropper('scale', 1, -1); // 垂直方向翻转\n```\n### getData([rounded])\n  + rounded (optional):\n    - 类型: Boolean\n    - 默认值: false\n    - 来获得圆角值\n  + (返回值):\n    - 类型: Object\n    - 属性:\n      * x: 剪裁区的左偏移量\n      * y:剪裁区的上偏移量\n      * width: 剪裁区宽度\n      * height: 剪裁区高度\n      * rotate: 图片的旋转角度\n      * scaleX: 图片横坐标上的缩放因子\n      * scaleY: 图片纵坐标上的缩放因子\n      \n输出剪裁区的位置和尺寸数据（基于原始图片）\n### setData(data)\n  * data:\n    + 类型: Object\n    + 属性: 查看 getData 方法\n\n改变剪裁区的位置和尺寸值（基于原始图片）       \n**注意**: 只在严格模式下有用\n### getContainerData()\n  + (返回值):\n    - 类型: Object\n    - 属性:\n      * width:容器当前宽度\n      * height: 容器当前高度\n\n输出容器的尺寸数据\n### getImageData()\n  + (返回值):\n    - 类型: Object\n    - 属性:\n      * left: 图片的左偏移量\n      * top: 图片的上偏移量\n      * width: 图片宽度\n      * height: 图片高度\n      * naturalWidth:图片自然宽度\n      * naturalHeight: 图片自然高度\n      * aspectRatio: 图片长宽比\n      * rotate: 图片的旋转角度\n      * scaleX:图片横坐标上的缩放因子\n      * scaleY: 图片纵坐标上的缩放因子\n      \n输出图片的位置尺寸和其它相关数据。    \n### getCanvasData()\n  + (返回值):\n    - 类型: Object\n    - 属性:\n      * left: 画布左偏移量\n      * top: 画布上偏移量\n      * width:画布宽度\n      * height: 画布高度\n    \n输入画布（图片包裹器）的位置和尺寸数据。\n### setCanvasData(data)\n  + data:\n    - 类型: Object\n    - 属性:\n      * left: 画布新的左偏移量\n      * top: 画布新的上偏移量\n      * width: 画布新的宽度\n      * height: 画布新的高度\n    \n修改画布（图片包裹器）的位置和尺寸数据。\n### getCropBoxData()\n  * (返回值):\n    + 类型: Object\n    + 属性:\n      - left: 剪裁框左偏移量\n      - top:剪裁框上偏移量\n      - width: 剪裁框宽度\n      - height:剪裁框高度\n    \n输出剪裁框的位置和尺寸数据。\n### setCropBoxData(data)\n  + data:\n    - 类型: Object\n    - 属性:\n      - left: 剪裁框新的左偏移量\n      - top: 剪裁框新的上偏移量\n      - width: 剪裁框新的宽度\n      - height: 剪裁框新的高度\n    \n修改剪裁框的位置和尺寸数据。\n### getCroppedCanvas([options])\n  + options (可选):\n    - 类型: Object\n    - 属性:\n      * width输出画布的目标宽度\n      * height: 输出画布的目标高度\n      * fillColor: 填入输出画布的任何alpha 颜色值\n  + (返回值):\n    - 类型: HTMLCanvasElement\n    - 剪裁后的图片的画布\n  + 浏览器支持：\n    - 基本图片: 需要 Canvas 来支持 (IE 9+)\n    - 旋转的图片: 需要 CSS3 2D Transforms 来支持 (IE 9+)\n    - 跨域图片: 需要 HTML5 CORS settings attributes 来支持 (IE 11+)\n    \n获取剪裁后的图片的画布     \n随后，你可以直接将画布显示为一张图片，或者使用 canvas.toDataURL 来获取一个数据的 URL，或者使用 canvas.toBlob 获取一个 blob 然后使用 FormData 将其上传到服务器上（如果浏览器支持这些APIs）。\n```\n$().cropper('getCroppedCanvas'); \n  $().cropper('getCroppedCanvas', {\n    width: 160,\n    height: 90\n  });  \n  // Upload cropped image to server\n  $().cropper('getCroppedCanvas').toBlob(function (blob) {\n    var formData = new FormData();    \n    formData.append('croppedImage', blob);\n      $.ajax('/path/to/upload', {\n        method: \"POST\",\n        data: formData,\n        processData: false,\n        contentType: false,\n        success: function () {\n          console.log('Upload success');\n        },\n        error: function () {\n          console.log('Upload error');\n        }\n      });\n    });\n```\n### setAspectRatio(aspectRatio)\n  + aspectRatio:\n    - 类型: Number\n    - 需要一个正整数。\n    \n改变剪裁框的长宽比。\n### setDragMode([mode])\n  + mode (可选):\n    - 类型: String\n    - 默认值: 'none'\n    - 可选值: 'none', 'crop', 'move'\n    \n修改拖动模式。\n**提示**: 你可以通过双击剪裁框在 \"crop\" 和 \"move\" 模式之间切换 。\n## 事件\n### build.cropper\n该事件在剪裁框实例开始加载一张图片的时候触发。\n### built.cropper\n该事件在一个剪裁框实例完全创建好的的时候触发。\n### cropstart.cropper\n  + event.originalEvent:\n    - 类型: Event\n    - 选项: mousedown, touchstart 和 pointerdown\n  + event.action:\n    - 类型: String\n    - 选项:\n      * 'crop':创建一个新的剪裁框\n      * 'move': 移动画布\n      * 'zoom':放大/缩小画布\n      * 'e': 调整剪裁框东面的大小\n      * 'w': 调整剪裁框西面的大小\n      * 's': 调整剪裁框南面的大小\n      * 'n': 调整剪裁框北面的大小\n      * 'se': 调整剪裁框东南面的大小\n      * 'sw': 调整剪裁框西南面的大小\n      * 'ne': 调整剪裁框东北面的大小\n      *'nw': 调整剪裁框西北面的大小\n      *'all': 移动剪裁框（所有方向）\n    \n该事件在画布或者剪裁框开始改变的时候触发。\n```\n$().on('cropstart.cropper', function (e) {\n  console.log(e.type); // cropstart\n  console.log(e.namespace); // cropper\n  console.log(e.action); // ...\n  console.log(e.originalEvent.pageX);\n   \n  // Prevent to start cropping, moving, etc if necessary\n  if (e.action === 'crop') {\n    e.preventDefault();\n  }\n});\n```\n### cropmove.cropper\n  + event.originalEvent:\n    - 类型: Event\n    - 选项: mousemove, touchmove 和 pointermove.\n  + event.action: 和 \"cropstart.cropper\" 是一样的。\n  \n该事件在画布或者剪裁框正在改变中的时候触发。\n### cropend.cropper\n + event.originalEvent: \n   - 类型: Event\n   - 选项: mouseup, touchend, touchcancel, pointerup 和 pointercancel.\n + event.action: 和 \"cropstart.cropper\" 是一样的\n \n该事件在画布或者剪裁框停止改变的时候触发。\n### crop.cropper\n  + event.x\n  + event.y\n  + event.width\n  + event.height\n  + event.rotate\n  + event.scaleX\n  + event.scaleY\n\n关于这些属性，请查看 `getData` 方法.    \n该事件在画布或者剪裁框改变完成的时候触发。\n### zoom.cropper\n  + event.originalEvent:\n    - 类型: Event\n    - 选项: wheel, touchmove.\n  + event.ratio:\n    - 类型: Number\n    - 当前缩放比例 (ratio > 0表示放大, ratio < 0 表示缩小)\n\n该事件在一个剪裁框实例开始放大或缩小的时候触发。\n```\n$().on('zoom.cropper', function (e) {\n  var maxRatio = 10;\n  var imageData = $(this).cropper('getImageData');\n  var currentRatio = imageData.width / imageData.naturalWidth;\n\n  // Zoom in\n  if (e.ratio > 0 && currentRatio > maxRatio) {\n\n    // Prevent zoom in\n    e.preventDefault();\n\n    // Fit the max zoom ratio\n    $(this).cropper('setCanvasData', {\n      width: imageData.naturalWidth * maxRatio\n    });\n  }\n\n  // Zoom out\n  // ...\n});\n```\n### 防止冲突\n如果你已经使用了其它的插件，而且是相同的命名空间，只需要调用 `$.fn.cropper.noConflict` 方法来还原它。\n```\n<script src=\"other-plugin.js\"></script>\n<script src=\"cropper.js\"></script>\n<script>\n  $.fn.cropper.noConflict();\n  // Code that uses other plugin's \"$().cropper\" can follow here.\n</script>\n```\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n","slug":"cropper","published":1,"updated":"2019-09-29T11:22:34.498Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck3jm8gxj004bz0btfs4tbz7l","content":"<h2 id=\"初始化\"><a href=\"#初始化\" class=\"headerlink\" title=\"初始化\"></a>初始化</h2><p>用一个块元素包裹image或canvas元素<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/* html */</span><br><span class=\"line\">&lt;div id=&quot;wrapper&quot;&gt; </span><br><span class=\"line\">  &lt;img src=&quot;image.jpg&quot;&gt;</span><br><span class=\"line\">&lt;/div&gt;</span><br><span class=\"line\">/* css */</span><br><span class=\"line\">#wrapper img &#123;</span><br><span class=\"line\">  max-width:100%;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">/* js */</span><br><span class=\"line\">$(&apos;#wrapper &gt; img&apos;).cropper(options)</span><br></pre></td></tr></table></figure></p>\n<p>备注：</p>\n<ul>\n<li><p>cropper 的尺寸是由图片的父元素（包裹）继承来的，所以要确保用一个可见的块元素包裹图片。</p>\n</li>\n<li><p>输出的裁剪数据基于原始图像的尺寸，所以你可以直接使用它们来裁剪图像。</p>\n</li>\n<li><p>如果你尝试去对一个跨域的图片使用 cropper，请确保你的浏览器支持 HTML5 CORS 设置属性，并且你的图片服务器支持 <code>Access-Control-Allow-Origin</code> 选项。</p>\n<h2 id=\"options\"><a href=\"#options\" class=\"headerlink\" title=\"options\"></a>options</h2></li>\n</ul>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">键值</th>\n<th style=\"text-align:center\">参数说明</th>\n<th style=\"text-align:center\">示例/默认值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">aspectRatio</td>\n<td style=\"text-align:center\">number<br>裁剪框的长宽比</td>\n<td style=\"text-align:center\">NAN</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">preview</td>\n<td style=\"text-align:center\">selector<br>添加额外的元素来作为预览</td>\n<td style=\"text-align:center\">$(‘#perview’)</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">strict</td>\n<td style=\"text-align:center\">boolean<br>严格模式下不能移出画布</td>\n<td style=\"text-align:center\">true</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">responsive</td>\n<td style=\"text-align:center\">boolean<br>严格模式下不能移出画布</td>\n<td style=\"text-align:center\">true</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">data</td>\n<td style=\"text-align:center\">boolean<br>上一个剪裁数据，前提是你做了存储，将会自动传给<code>setData</code>方法</td>\n<td style=\"text-align:center\">true</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">checkImageOrigin</td>\n<td style=\"text-align:center\">boolean<br>如果检测的图片是跨域的，该元素将会被添加上一个 <code>crossOrigin</code> 属性，图片 url 地址会被加上一个时间戳。通过给图片加上 <code>crossOrigin</code> 属性，将会阻止给图片的 url 加上时间戳，并停止重新加载图片</td>\n<td style=\"text-align:center\">true</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">modal</td>\n<td style=\"text-align:center\">boolean<br>在图片上方以及剪裁框下方显示黑色模式(半透明的黑色遮罩)</td>\n<td style=\"text-align:center\">true</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">guides</td>\n<td style=\"text-align:center\">boolean<br>在剪裁框上方显示虚线</td>\n<td style=\"text-align:center\">true</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">center</td>\n<td style=\"text-align:center\">boolean<br>在剪裁框上方显示中心标识</td>\n<td style=\"text-align:center\">true</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">highlight</td>\n<td style=\"text-align:center\">boolean<br>在剪裁框上面显示白色的模态框</td>\n<td style=\"text-align:center\">true</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">background</td>\n<td style=\"text-align:center\">boolean<br>显示容器的网格背景</td>\n<td style=\"text-align:center\">true</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">autoCrop</td>\n<td style=\"text-align:center\">boolean<br>允许初始化的时候自动剪裁图片</td>\n<td style=\"text-align:center\">true</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">autoCropArea</td>\n<td style=\"text-align:center\">Number<br>自动剪裁的区域大小（百分比），介于 0 到 1 之间的数字</td>\n<td style=\"text-align:center\">0.8</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">dragCrop</td>\n<td style=\"text-align:center\">Boolean<br>允许移除当前的剪裁框，然后通过在图片上拖动鼠标创建一个新的剪裁框</td>\n<td style=\"text-align:center\">true</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">movable</td>\n<td style=\"text-align:center\">Boolean<br>允许移动图片</td>\n<td style=\"text-align:center\">true</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">rotatable</td>\n<td style=\"text-align:center\">Boolean<br>允许旋转图片</td>\n<td style=\"text-align:center\">true</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">scalable</td>\n<td style=\"text-align:center\">Boolean<br>允许缩放图片</td>\n<td style=\"text-align:center\">true</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">zoomable</td>\n<td style=\"text-align:center\">Boolean<br>允许缩放图片</td>\n<td style=\"text-align:center\">true</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">mouseWheelZoom</td>\n<td style=\"text-align:center\">Boolean<br>允许在鼠标滚动的时候缩放图片</td>\n<td style=\"text-align:center\">true</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">wheelZoomRatio</td>\n<td style=\"text-align:center\">Number<br>当通过滚动鼠标缩放图片的时候，定义缩放尺寸</td>\n<td style=\"text-align:center\">0.1</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">touchDragZoom</td>\n<td style=\"text-align:center\">Boolean<br>允许通过触摸拖动来缩放图片</td>\n<td style=\"text-align:center\">true</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">cropBoxMovable</td>\n<td style=\"text-align:center\">Boolean<br>允许移动剪裁框</td>\n<td style=\"text-align:center\">true</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">cropBoxResizable</td>\n<td style=\"text-align:center\">Boolean<br>允许调整剪裁框大小</td>\n<td style=\"text-align:center\">true</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">doubleClickToggle</td>\n<td style=\"text-align:center\">Boolean<br>允许通过双击 cropper 来切换剪裁（图片）和移动（图片）模式</td>\n<td style=\"text-align:center\">true</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">minContainerWidth</td>\n<td style=\"text-align:center\">Number<br>容器最小宽度</td>\n<td style=\"text-align:center\">200</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">minContainerHeight</td>\n<td style=\"text-align:center\">Number<br>容器最小高度</td>\n<td style=\"text-align:center\">100</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">minCanvasWidth</td>\n<td style=\"text-align:center\">Number<br>画布最小宽度（图片包裹器）</td>\n<td style=\"text-align:center\">0</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">minCanvasHeight</td>\n<td style=\"text-align:center\">Number<br>画布最小高度（图片包裹器）</td>\n<td style=\"text-align:center\">0</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">minCropBoxWidth</td>\n<td style=\"text-align:center\">Number<br>剪裁框最小宽度</td>\n<td style=\"text-align:center\">0</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">minCropBoxHeight</td>\n<td style=\"text-align:center\">Number<br>剪裁框最小高度</td>\n<td style=\"text-align:center\">0</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">build</td>\n<td style=\"text-align:center\">Function<br><code>build.cropper</code> 事件的快捷方式</td>\n<td style=\"text-align:center\">null</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">built</td>\n<td style=\"text-align:center\">Function<br><code>built.cropper</code> 事件的快捷方式</td>\n<td style=\"text-align:center\">null</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">cropstart</td>\n<td style=\"text-align:center\">Function<br><code>cropstart.cropper</code> 事件的快捷方式</td>\n<td style=\"text-align:center\">null</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">cropmove</td>\n<td style=\"text-align:center\">Function<br><code>cropsmove.cropper</code> 事件的快捷方式</td>\n<td style=\"text-align:center\">null</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">cropstend</td>\n<td style=\"text-align:center\">Function<br><code>cropend.cropper</code> 事件的快捷方式</td>\n<td style=\"text-align:center\">null</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">crop</td>\n<td style=\"text-align:center\">Function<br><code>crop.cropper</code> 事件的快捷方式</td>\n<td style=\"text-align:center\">null</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">zoom</td>\n<td style=\"text-align:center\">Function<br><code>zoom.cropper</code> 事件的快捷方式</td>\n<td style=\"text-align:center\">null</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">cropstart</td>\n<td style=\"text-align:center\">Function<br><code>cropstart.cropper</code> 事件的快捷方式</td>\n<td style=\"text-align:center\">null</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"methods\"><a href=\"#methods\" class=\"headerlink\" title=\"methods\"></a>methods</h2><p>由于加载图片的是一个异步进程，你应该在 buit 之后调用大多数的方法，除 <code>setAspectRatio</code>, <code>replace</code> 和 <code>destroy</code> 之外。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$().cropper(&#123;</span><br><span class=\"line\">  built: function () &#123;</span><br><span class=\"line\">    $().cropper(&apos;method&apos;, argument1, , argument2, ..., argumentN);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"crop\"><a href=\"#crop\" class=\"headerlink\" title=\"crop()\"></a>crop()</h3><p>手动显示剪裁框。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$().cropper(&#123;</span><br><span class=\"line\">  autoCrop: false,</span><br><span class=\"line\">  built: function () &#123;</span><br><span class=\"line\">    // Do something here</span><br><span class=\"line\">    // ...</span><br><span class=\"line\"></span><br><span class=\"line\">    // And then</span><br><span class=\"line\">    $(this).cropper(&apos;crop&apos;);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"reset\"><a href=\"#reset\" class=\"headerlink\" title=\"reset()\"></a>reset()</h3><p>将图片和剪裁框重置到他们的初始化状态。</p>\n<h3 id=\"clear\"><a href=\"#clear\" class=\"headerlink\" title=\"clear()\"></a>clear()</h3><p>清除剪裁框</p>\n<h3 id=\"replace-url\"><a href=\"#replace-url\" class=\"headerlink\" title=\"replace(url)\"></a>replace(url)</h3><ul>\n<li>url:<ul>\n<li>类型:<code>String</code></li>\n<li>一个新的图片 <code>url</code></li>\n</ul>\n</li>\n</ul>\n<p>替换图片的链接地址，然后重建cropper</p>\n<h3 id=\"enable\"><a href=\"#enable\" class=\"headerlink\" title=\"enable()\"></a>enable()</h3><p>启用（解冻）cropper</p>\n<h3 id=\"disable\"><a href=\"#disable\" class=\"headerlink\" title=\"disable()\"></a>disable()</h3><p>禁用（冻结）cropper</p>\n<h3 id=\"destroy\"><a href=\"#destroy\" class=\"headerlink\" title=\"destroy()\"></a>destroy()</h3><p>销毁 cropper 并且从图片上移除实例。</p>\n<h3 id=\"move-offsetX-offsetY\"><a href=\"#move-offsetX-offsetY\" class=\"headerlink\" title=\"move(offsetX[, offsetY])\"></a>move(offsetX[, offsetY])</h3><ul>\n<li>offsetX:<ul>\n<li>类型: Number</li>\n<li>默认值: 0</li>\n<li>在水平方向上移动的尺寸（像素）</li>\n</ul>\n</li>\n<li>offsetY (optional):<ul>\n<li>类型: Number</li>\n<li>在垂直方向上移动的尺寸（像素）</li>\n<li>如果不存在，默认值是 offsetX</li>\n</ul>\n</li>\n</ul>\n<p>移动画布（图片包裹器）<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$().cropper(&apos;move&apos;, 1);</span><br><span class=\"line\">$().cropper(&apos;move&apos;, 1, 0);</span><br><span class=\"line\">$().cropper(&apos;move&apos;, 0, -1);</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"zoom-ratio\"><a href=\"#zoom-ratio\" class=\"headerlink\" title=\"zoom(ratio)\"></a>zoom(ratio)</h3><ul>\n<li>ratio:<ul>\n<li>类型: Number</li>\n<li>放大: 需要一个正数（ratio &gt; 0）</li>\n<li>缩小: 需要一个负数（ratio &lt; 0）</li>\n</ul>\n</li>\n</ul>\n<p>缩放画布（图片包裹器）<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$().cropper(&apos;zoom&apos;, 0.1);</span><br><span class=\"line\">$().cropper(&apos;zoom&apos;, -0.1);</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"rotate-degree\"><a href=\"#rotate-degree\" class=\"headerlink\" title=\"rotate(degree)\"></a>rotate(degree)</h3><ul>\n<li>degree:<ul>\n<li>类型: Number</li>\n<li>向右旋转： 需要一个正数（degree &gt; 0）</li>\n<li>向左旋转： 需要一个负数（degree &lt; 0）</li>\n</ul>\n</li>\n</ul>\n<p>旋转画布（图片包裹器）：需要 CSS3 2D Transforms 来支持 (IE 9+)<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$().cropper(&apos;rotate&apos;, 90);</span><br><span class=\"line\">$().cropper(&apos;rotate&apos;, -90);</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"scale-scaleX-scaleY\"><a href=\"#scale-scaleX-scaleY\" class=\"headerlink\" title=\"scale(scaleX[, scaleY])\"></a>scale(scaleX[, scaleY])</h3><ul>\n<li>scaleX<ul>\n<li>类型: Number</li>\n<li>默认值: 1</li>\n<li>图片横坐标上的缩放因子</li>\n<li>当等于1的时候，就相当于什么都没做。</li>\n</ul>\n</li>\n<li>scaleY (optional):<ul>\n<li>类型: Number</li>\n<li>图片纵坐标上的缩放因子 -如果不存在，默认是 scaleX</li>\n</ul>\n</li>\n</ul>\n<p>缩放图片：需要 CSS3 2D Transforms 来支持 (IE 9+)<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$().cropper(&apos;scale&apos;, -1); //  水平方向和垂直方向都翻转</span><br><span class=\"line\">   $().cropper(&apos;scale&apos;, -1, 1); // 水平方向翻转</span><br><span class=\"line\">   $().cropper(&apos;scale&apos;, 1, -1); // 垂直方向翻转</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"getData-rounded\"><a href=\"#getData-rounded\" class=\"headerlink\" title=\"getData([rounded])\"></a>getData([rounded])</h3><ul>\n<li>rounded (optional):<ul>\n<li>类型: Boolean</li>\n<li>默认值: false</li>\n<li>来获得圆角值</li>\n</ul>\n</li>\n<li>(返回值):<ul>\n<li>类型: Object</li>\n<li>属性:<ul>\n<li>x: 剪裁区的左偏移量</li>\n<li>y:剪裁区的上偏移量</li>\n<li>width: 剪裁区宽度</li>\n<li>height: 剪裁区高度</li>\n<li>rotate: 图片的旋转角度</li>\n<li>scaleX: 图片横坐标上的缩放因子</li>\n<li>scaleY: 图片纵坐标上的缩放因子</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<p>输出剪裁区的位置和尺寸数据（基于原始图片）</p>\n<h3 id=\"setData-data\"><a href=\"#setData-data\" class=\"headerlink\" title=\"setData(data)\"></a>setData(data)</h3><ul>\n<li>data:<ul>\n<li>类型: Object</li>\n<li>属性: 查看 getData 方法</li>\n</ul>\n</li>\n</ul>\n<p>改变剪裁区的位置和尺寸值（基于原始图片）<br><strong>注意</strong>: 只在严格模式下有用</p>\n<h3 id=\"getContainerData\"><a href=\"#getContainerData\" class=\"headerlink\" title=\"getContainerData()\"></a>getContainerData()</h3><ul>\n<li>(返回值):<ul>\n<li>类型: Object</li>\n<li>属性:<ul>\n<li>width:容器当前宽度</li>\n<li>height: 容器当前高度</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<p>输出容器的尺寸数据</p>\n<h3 id=\"getImageData\"><a href=\"#getImageData\" class=\"headerlink\" title=\"getImageData()\"></a>getImageData()</h3><ul>\n<li>(返回值):<ul>\n<li>类型: Object</li>\n<li>属性:<ul>\n<li>left: 图片的左偏移量</li>\n<li>top: 图片的上偏移量</li>\n<li>width: 图片宽度</li>\n<li>height: 图片高度</li>\n<li>naturalWidth:图片自然宽度</li>\n<li>naturalHeight: 图片自然高度</li>\n<li>aspectRatio: 图片长宽比</li>\n<li>rotate: 图片的旋转角度</li>\n<li>scaleX:图片横坐标上的缩放因子</li>\n<li>scaleY: 图片纵坐标上的缩放因子</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<p>输出图片的位置尺寸和其它相关数据。    </p>\n<h3 id=\"getCanvasData\"><a href=\"#getCanvasData\" class=\"headerlink\" title=\"getCanvasData()\"></a>getCanvasData()</h3><ul>\n<li>(返回值):<ul>\n<li>类型: Object</li>\n<li>属性:<ul>\n<li>left: 画布左偏移量</li>\n<li>top: 画布上偏移量</li>\n<li>width:画布宽度</li>\n<li>height: 画布高度</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<p>输入画布（图片包裹器）的位置和尺寸数据。</p>\n<h3 id=\"setCanvasData-data\"><a href=\"#setCanvasData-data\" class=\"headerlink\" title=\"setCanvasData(data)\"></a>setCanvasData(data)</h3><ul>\n<li>data:<ul>\n<li>类型: Object</li>\n<li>属性:<ul>\n<li>left: 画布新的左偏移量</li>\n<li>top: 画布新的上偏移量</li>\n<li>width: 画布新的宽度</li>\n<li>height: 画布新的高度</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<p>修改画布（图片包裹器）的位置和尺寸数据。</p>\n<h3 id=\"getCropBoxData\"><a href=\"#getCropBoxData\" class=\"headerlink\" title=\"getCropBoxData()\"></a>getCropBoxData()</h3><ul>\n<li>(返回值):<ul>\n<li>类型: Object</li>\n<li>属性:<ul>\n<li>left: 剪裁框左偏移量</li>\n<li>top:剪裁框上偏移量</li>\n<li>width: 剪裁框宽度</li>\n<li>height:剪裁框高度</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<p>输出剪裁框的位置和尺寸数据。</p>\n<h3 id=\"setCropBoxData-data\"><a href=\"#setCropBoxData-data\" class=\"headerlink\" title=\"setCropBoxData(data)\"></a>setCropBoxData(data)</h3><ul>\n<li>data:<ul>\n<li>类型: Object</li>\n<li>属性:<ul>\n<li>left: 剪裁框新的左偏移量</li>\n<li>top: 剪裁框新的上偏移量</li>\n<li>width: 剪裁框新的宽度</li>\n<li>height: 剪裁框新的高度</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<p>修改剪裁框的位置和尺寸数据。</p>\n<h3 id=\"getCroppedCanvas-options\"><a href=\"#getCroppedCanvas-options\" class=\"headerlink\" title=\"getCroppedCanvas([options])\"></a>getCroppedCanvas([options])</h3><ul>\n<li>options (可选):<ul>\n<li>类型: Object</li>\n<li>属性:<ul>\n<li>width输出画布的目标宽度</li>\n<li>height: 输出画布的目标高度</li>\n<li>fillColor: 填入输出画布的任何alpha 颜色值</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>(返回值):<ul>\n<li>类型: HTMLCanvasElement</li>\n<li>剪裁后的图片的画布</li>\n</ul>\n</li>\n<li>浏览器支持：<ul>\n<li>基本图片: 需要 Canvas 来支持 (IE 9+)</li>\n<li>旋转的图片: 需要 CSS3 2D Transforms 来支持 (IE 9+)</li>\n<li>跨域图片: 需要 HTML5 CORS settings attributes 来支持 (IE 11+)</li>\n</ul>\n</li>\n</ul>\n<p>获取剪裁后的图片的画布<br>随后，你可以直接将画布显示为一张图片，或者使用 canvas.toDataURL 来获取一个数据的 URL，或者使用 canvas.toBlob 获取一个 blob 然后使用 FormData 将其上传到服务器上（如果浏览器支持这些APIs）。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$().cropper(&apos;getCroppedCanvas&apos;); </span><br><span class=\"line\">  $().cropper(&apos;getCroppedCanvas&apos;, &#123;</span><br><span class=\"line\">    width: 160,</span><br><span class=\"line\">    height: 90</span><br><span class=\"line\">  &#125;);  </span><br><span class=\"line\">  // Upload cropped image to server</span><br><span class=\"line\">  $().cropper(&apos;getCroppedCanvas&apos;).toBlob(function (blob) &#123;</span><br><span class=\"line\">    var formData = new FormData();    </span><br><span class=\"line\">    formData.append(&apos;croppedImage&apos;, blob);</span><br><span class=\"line\">      $.ajax(&apos;/path/to/upload&apos;, &#123;</span><br><span class=\"line\">        method: &quot;POST&quot;,</span><br><span class=\"line\">        data: formData,</span><br><span class=\"line\">        processData: false,</span><br><span class=\"line\">        contentType: false,</span><br><span class=\"line\">        success: function () &#123;</span><br><span class=\"line\">          console.log(&apos;Upload success&apos;);</span><br><span class=\"line\">        &#125;,</span><br><span class=\"line\">        error: function () &#123;</span><br><span class=\"line\">          console.log(&apos;Upload error&apos;);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      &#125;);</span><br><span class=\"line\">    &#125;);</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"setAspectRatio-aspectRatio\"><a href=\"#setAspectRatio-aspectRatio\" class=\"headerlink\" title=\"setAspectRatio(aspectRatio)\"></a>setAspectRatio(aspectRatio)</h3><ul>\n<li>aspectRatio:<ul>\n<li>类型: Number</li>\n<li>需要一个正整数。</li>\n</ul>\n</li>\n</ul>\n<p>改变剪裁框的长宽比。</p>\n<h3 id=\"setDragMode-mode\"><a href=\"#setDragMode-mode\" class=\"headerlink\" title=\"setDragMode([mode])\"></a>setDragMode([mode])</h3><ul>\n<li>mode (可选):<ul>\n<li>类型: String</li>\n<li>默认值: ‘none’</li>\n<li>可选值: ‘none’, ‘crop’, ‘move’</li>\n</ul>\n</li>\n</ul>\n<p>修改拖动模式。<br><strong>提示</strong>: 你可以通过双击剪裁框在 “crop” 和 “move” 模式之间切换 。</p>\n<h2 id=\"事件\"><a href=\"#事件\" class=\"headerlink\" title=\"事件\"></a>事件</h2><h3 id=\"build-cropper\"><a href=\"#build-cropper\" class=\"headerlink\" title=\"build.cropper\"></a>build.cropper</h3><p>该事件在剪裁框实例开始加载一张图片的时候触发。</p>\n<h3 id=\"built-cropper\"><a href=\"#built-cropper\" class=\"headerlink\" title=\"built.cropper\"></a>built.cropper</h3><p>该事件在一个剪裁框实例完全创建好的的时候触发。</p>\n<h3 id=\"cropstart-cropper\"><a href=\"#cropstart-cropper\" class=\"headerlink\" title=\"cropstart.cropper\"></a>cropstart.cropper</h3><ul>\n<li>event.originalEvent:<ul>\n<li>类型: Event</li>\n<li>选项: mousedown, touchstart 和 pointerdown</li>\n</ul>\n</li>\n<li>event.action:<ul>\n<li>类型: String</li>\n<li>选项:<ul>\n<li>‘crop’:创建一个新的剪裁框</li>\n<li>‘move’: 移动画布</li>\n<li>‘zoom’:放大/缩小画布</li>\n<li>‘e’: 调整剪裁框东面的大小</li>\n<li>‘w’: 调整剪裁框西面的大小</li>\n<li>‘s’: 调整剪裁框南面的大小</li>\n<li>‘n’: 调整剪裁框北面的大小</li>\n<li>‘se’: 调整剪裁框东南面的大小</li>\n<li>‘sw’: 调整剪裁框西南面的大小</li>\n<li>‘ne’: 调整剪裁框东北面的大小<br><em>‘nw’: 调整剪裁框西北面的大小\n</em>‘all’: 移动剪裁框（所有方向）</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<p>该事件在画布或者剪裁框开始改变的时候触发。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$().on(&apos;cropstart.cropper&apos;, function (e) &#123;</span><br><span class=\"line\">  console.log(e.type); // cropstart</span><br><span class=\"line\">  console.log(e.namespace); // cropper</span><br><span class=\"line\">  console.log(e.action); // ...</span><br><span class=\"line\">  console.log(e.originalEvent.pageX);</span><br><span class=\"line\">   </span><br><span class=\"line\">  // Prevent to start cropping, moving, etc if necessary</span><br><span class=\"line\">  if (e.action === &apos;crop&apos;) &#123;</span><br><span class=\"line\">    e.preventDefault();</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"cropmove-cropper\"><a href=\"#cropmove-cropper\" class=\"headerlink\" title=\"cropmove.cropper\"></a>cropmove.cropper</h3><ul>\n<li>event.originalEvent:<ul>\n<li>类型: Event</li>\n<li>选项: mousemove, touchmove 和 pointermove.</li>\n</ul>\n</li>\n<li>event.action: 和 “cropstart.cropper” 是一样的。</li>\n</ul>\n<p>该事件在画布或者剪裁框正在改变中的时候触发。</p>\n<h3 id=\"cropend-cropper\"><a href=\"#cropend-cropper\" class=\"headerlink\" title=\"cropend.cropper\"></a>cropend.cropper</h3><ul>\n<li>event.originalEvent: <ul>\n<li>类型: Event</li>\n<li>选项: mouseup, touchend, touchcancel, pointerup 和 pointercancel.</li>\n</ul>\n</li>\n<li>event.action: 和 “cropstart.cropper” 是一样的</li>\n</ul>\n<p>该事件在画布或者剪裁框停止改变的时候触发。</p>\n<h3 id=\"crop-cropper\"><a href=\"#crop-cropper\" class=\"headerlink\" title=\"crop.cropper\"></a>crop.cropper</h3><ul>\n<li>event.x</li>\n<li>event.y</li>\n<li>event.width</li>\n<li>event.height</li>\n<li>event.rotate</li>\n<li>event.scaleX</li>\n<li>event.scaleY</li>\n</ul>\n<p>关于这些属性，请查看 <code>getData</code> 方法.<br>该事件在画布或者剪裁框改变完成的时候触发。</p>\n<h3 id=\"zoom-cropper\"><a href=\"#zoom-cropper\" class=\"headerlink\" title=\"zoom.cropper\"></a>zoom.cropper</h3><ul>\n<li>event.originalEvent:<ul>\n<li>类型: Event</li>\n<li>选项: wheel, touchmove.</li>\n</ul>\n</li>\n<li>event.ratio:<ul>\n<li>类型: Number</li>\n<li>当前缩放比例 (ratio &gt; 0表示放大, ratio &lt; 0 表示缩小)</li>\n</ul>\n</li>\n</ul>\n<p>该事件在一个剪裁框实例开始放大或缩小的时候触发。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$().on(&apos;zoom.cropper&apos;, function (e) &#123;</span><br><span class=\"line\">  var maxRatio = 10;</span><br><span class=\"line\">  var imageData = $(this).cropper(&apos;getImageData&apos;);</span><br><span class=\"line\">  var currentRatio = imageData.width / imageData.naturalWidth;</span><br><span class=\"line\"></span><br><span class=\"line\">  // Zoom in</span><br><span class=\"line\">  if (e.ratio &gt; 0 &amp;&amp; currentRatio &gt; maxRatio) &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    // Prevent zoom in</span><br><span class=\"line\">    e.preventDefault();</span><br><span class=\"line\"></span><br><span class=\"line\">    // Fit the max zoom ratio</span><br><span class=\"line\">    $(this).cropper(&apos;setCanvasData&apos;, &#123;</span><br><span class=\"line\">      width: imageData.naturalWidth * maxRatio</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  // Zoom out</span><br><span class=\"line\">  // ...</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"防止冲突\"><a href=\"#防止冲突\" class=\"headerlink\" title=\"防止冲突\"></a>防止冲突</h3><p>如果你已经使用了其它的插件，而且是相同的命名空间，只需要调用 <code>$.fn.cropper.noConflict</code> 方法来还原它。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;script src=&quot;other-plugin.js&quot;&gt;&lt;/script&gt;</span><br><span class=\"line\">&lt;script src=&quot;cropper.js&quot;&gt;&lt;/script&gt;</span><br><span class=\"line\">&lt;script&gt;</span><br><span class=\"line\">  $.fn.cropper.noConflict();</span><br><span class=\"line\">  // Code that uses other plugin&apos;s &quot;$().cropper&quot; can follow here.</span><br><span class=\"line\">&lt;/script&gt;</span><br></pre></td></tr></table></figure></p>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"初始化\"><a href=\"#初始化\" class=\"headerlink\" title=\"初始化\"></a>初始化</h2><p>用一个块元素包裹image或canvas元素<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/* html */</span><br><span class=\"line\">&lt;div id=&quot;wrapper&quot;&gt; </span><br><span class=\"line\">  &lt;img src=&quot;image.jpg&quot;&gt;</span><br><span class=\"line\">&lt;/div&gt;</span><br><span class=\"line\">/* css */</span><br><span class=\"line\">#wrapper img &#123;</span><br><span class=\"line\">  max-width:100%;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">/* js */</span><br><span class=\"line\">$(&apos;#wrapper &gt; img&apos;).cropper(options)</span><br></pre></td></tr></table></figure></p>\n<p>备注：</p>\n<ul>\n<li><p>cropper 的尺寸是由图片的父元素（包裹）继承来的，所以要确保用一个可见的块元素包裹图片。</p>\n</li>\n<li><p>输出的裁剪数据基于原始图像的尺寸，所以你可以直接使用它们来裁剪图像。</p>\n</li>\n<li><p>如果你尝试去对一个跨域的图片使用 cropper，请确保你的浏览器支持 HTML5 CORS 设置属性，并且你的图片服务器支持 <code>Access-Control-Allow-Origin</code> 选项。</p>\n<h2 id=\"options\"><a href=\"#options\" class=\"headerlink\" title=\"options\"></a>options</h2></li>\n</ul>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">键值</th>\n<th style=\"text-align:center\">参数说明</th>\n<th style=\"text-align:center\">示例/默认值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">aspectRatio</td>\n<td style=\"text-align:center\">number<br>裁剪框的长宽比</td>\n<td style=\"text-align:center\">NAN</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">preview</td>\n<td style=\"text-align:center\">selector<br>添加额外的元素来作为预览</td>\n<td style=\"text-align:center\">$(‘#perview’)</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">strict</td>\n<td style=\"text-align:center\">boolean<br>严格模式下不能移出画布</td>\n<td style=\"text-align:center\">true</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">responsive</td>\n<td style=\"text-align:center\">boolean<br>严格模式下不能移出画布</td>\n<td style=\"text-align:center\">true</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">data</td>\n<td style=\"text-align:center\">boolean<br>上一个剪裁数据，前提是你做了存储，将会自动传给<code>setData</code>方法</td>\n<td style=\"text-align:center\">true</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">checkImageOrigin</td>\n<td style=\"text-align:center\">boolean<br>如果检测的图片是跨域的，该元素将会被添加上一个 <code>crossOrigin</code> 属性，图片 url 地址会被加上一个时间戳。通过给图片加上 <code>crossOrigin</code> 属性，将会阻止给图片的 url 加上时间戳，并停止重新加载图片</td>\n<td style=\"text-align:center\">true</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">modal</td>\n<td style=\"text-align:center\">boolean<br>在图片上方以及剪裁框下方显示黑色模式(半透明的黑色遮罩)</td>\n<td style=\"text-align:center\">true</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">guides</td>\n<td style=\"text-align:center\">boolean<br>在剪裁框上方显示虚线</td>\n<td style=\"text-align:center\">true</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">center</td>\n<td style=\"text-align:center\">boolean<br>在剪裁框上方显示中心标识</td>\n<td style=\"text-align:center\">true</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">highlight</td>\n<td style=\"text-align:center\">boolean<br>在剪裁框上面显示白色的模态框</td>\n<td style=\"text-align:center\">true</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">background</td>\n<td style=\"text-align:center\">boolean<br>显示容器的网格背景</td>\n<td style=\"text-align:center\">true</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">autoCrop</td>\n<td style=\"text-align:center\">boolean<br>允许初始化的时候自动剪裁图片</td>\n<td style=\"text-align:center\">true</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">autoCropArea</td>\n<td style=\"text-align:center\">Number<br>自动剪裁的区域大小（百分比），介于 0 到 1 之间的数字</td>\n<td style=\"text-align:center\">0.8</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">dragCrop</td>\n<td style=\"text-align:center\">Boolean<br>允许移除当前的剪裁框，然后通过在图片上拖动鼠标创建一个新的剪裁框</td>\n<td style=\"text-align:center\">true</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">movable</td>\n<td style=\"text-align:center\">Boolean<br>允许移动图片</td>\n<td style=\"text-align:center\">true</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">rotatable</td>\n<td style=\"text-align:center\">Boolean<br>允许旋转图片</td>\n<td style=\"text-align:center\">true</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">scalable</td>\n<td style=\"text-align:center\">Boolean<br>允许缩放图片</td>\n<td style=\"text-align:center\">true</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">zoomable</td>\n<td style=\"text-align:center\">Boolean<br>允许缩放图片</td>\n<td style=\"text-align:center\">true</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">mouseWheelZoom</td>\n<td style=\"text-align:center\">Boolean<br>允许在鼠标滚动的时候缩放图片</td>\n<td style=\"text-align:center\">true</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">wheelZoomRatio</td>\n<td style=\"text-align:center\">Number<br>当通过滚动鼠标缩放图片的时候，定义缩放尺寸</td>\n<td style=\"text-align:center\">0.1</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">touchDragZoom</td>\n<td style=\"text-align:center\">Boolean<br>允许通过触摸拖动来缩放图片</td>\n<td style=\"text-align:center\">true</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">cropBoxMovable</td>\n<td style=\"text-align:center\">Boolean<br>允许移动剪裁框</td>\n<td style=\"text-align:center\">true</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">cropBoxResizable</td>\n<td style=\"text-align:center\">Boolean<br>允许调整剪裁框大小</td>\n<td style=\"text-align:center\">true</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">doubleClickToggle</td>\n<td style=\"text-align:center\">Boolean<br>允许通过双击 cropper 来切换剪裁（图片）和移动（图片）模式</td>\n<td style=\"text-align:center\">true</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">minContainerWidth</td>\n<td style=\"text-align:center\">Number<br>容器最小宽度</td>\n<td style=\"text-align:center\">200</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">minContainerHeight</td>\n<td style=\"text-align:center\">Number<br>容器最小高度</td>\n<td style=\"text-align:center\">100</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">minCanvasWidth</td>\n<td style=\"text-align:center\">Number<br>画布最小宽度（图片包裹器）</td>\n<td style=\"text-align:center\">0</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">minCanvasHeight</td>\n<td style=\"text-align:center\">Number<br>画布最小高度（图片包裹器）</td>\n<td style=\"text-align:center\">0</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">minCropBoxWidth</td>\n<td style=\"text-align:center\">Number<br>剪裁框最小宽度</td>\n<td style=\"text-align:center\">0</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">minCropBoxHeight</td>\n<td style=\"text-align:center\">Number<br>剪裁框最小高度</td>\n<td style=\"text-align:center\">0</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">build</td>\n<td style=\"text-align:center\">Function<br><code>build.cropper</code> 事件的快捷方式</td>\n<td style=\"text-align:center\">null</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">built</td>\n<td style=\"text-align:center\">Function<br><code>built.cropper</code> 事件的快捷方式</td>\n<td style=\"text-align:center\">null</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">cropstart</td>\n<td style=\"text-align:center\">Function<br><code>cropstart.cropper</code> 事件的快捷方式</td>\n<td style=\"text-align:center\">null</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">cropmove</td>\n<td style=\"text-align:center\">Function<br><code>cropsmove.cropper</code> 事件的快捷方式</td>\n<td style=\"text-align:center\">null</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">cropstend</td>\n<td style=\"text-align:center\">Function<br><code>cropend.cropper</code> 事件的快捷方式</td>\n<td style=\"text-align:center\">null</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">crop</td>\n<td style=\"text-align:center\">Function<br><code>crop.cropper</code> 事件的快捷方式</td>\n<td style=\"text-align:center\">null</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">zoom</td>\n<td style=\"text-align:center\">Function<br><code>zoom.cropper</code> 事件的快捷方式</td>\n<td style=\"text-align:center\">null</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">cropstart</td>\n<td style=\"text-align:center\">Function<br><code>cropstart.cropper</code> 事件的快捷方式</td>\n<td style=\"text-align:center\">null</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"methods\"><a href=\"#methods\" class=\"headerlink\" title=\"methods\"></a>methods</h2><p>由于加载图片的是一个异步进程，你应该在 buit 之后调用大多数的方法，除 <code>setAspectRatio</code>, <code>replace</code> 和 <code>destroy</code> 之外。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$().cropper(&#123;</span><br><span class=\"line\">  built: function () &#123;</span><br><span class=\"line\">    $().cropper(&apos;method&apos;, argument1, , argument2, ..., argumentN);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"crop\"><a href=\"#crop\" class=\"headerlink\" title=\"crop()\"></a>crop()</h3><p>手动显示剪裁框。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$().cropper(&#123;</span><br><span class=\"line\">  autoCrop: false,</span><br><span class=\"line\">  built: function () &#123;</span><br><span class=\"line\">    // Do something here</span><br><span class=\"line\">    // ...</span><br><span class=\"line\"></span><br><span class=\"line\">    // And then</span><br><span class=\"line\">    $(this).cropper(&apos;crop&apos;);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"reset\"><a href=\"#reset\" class=\"headerlink\" title=\"reset()\"></a>reset()</h3><p>将图片和剪裁框重置到他们的初始化状态。</p>\n<h3 id=\"clear\"><a href=\"#clear\" class=\"headerlink\" title=\"clear()\"></a>clear()</h3><p>清除剪裁框</p>\n<h3 id=\"replace-url\"><a href=\"#replace-url\" class=\"headerlink\" title=\"replace(url)\"></a>replace(url)</h3><ul>\n<li>url:<ul>\n<li>类型:<code>String</code></li>\n<li>一个新的图片 <code>url</code></li>\n</ul>\n</li>\n</ul>\n<p>替换图片的链接地址，然后重建cropper</p>\n<h3 id=\"enable\"><a href=\"#enable\" class=\"headerlink\" title=\"enable()\"></a>enable()</h3><p>启用（解冻）cropper</p>\n<h3 id=\"disable\"><a href=\"#disable\" class=\"headerlink\" title=\"disable()\"></a>disable()</h3><p>禁用（冻结）cropper</p>\n<h3 id=\"destroy\"><a href=\"#destroy\" class=\"headerlink\" title=\"destroy()\"></a>destroy()</h3><p>销毁 cropper 并且从图片上移除实例。</p>\n<h3 id=\"move-offsetX-offsetY\"><a href=\"#move-offsetX-offsetY\" class=\"headerlink\" title=\"move(offsetX[, offsetY])\"></a>move(offsetX[, offsetY])</h3><ul>\n<li>offsetX:<ul>\n<li>类型: Number</li>\n<li>默认值: 0</li>\n<li>在水平方向上移动的尺寸（像素）</li>\n</ul>\n</li>\n<li>offsetY (optional):<ul>\n<li>类型: Number</li>\n<li>在垂直方向上移动的尺寸（像素）</li>\n<li>如果不存在，默认值是 offsetX</li>\n</ul>\n</li>\n</ul>\n<p>移动画布（图片包裹器）<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$().cropper(&apos;move&apos;, 1);</span><br><span class=\"line\">$().cropper(&apos;move&apos;, 1, 0);</span><br><span class=\"line\">$().cropper(&apos;move&apos;, 0, -1);</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"zoom-ratio\"><a href=\"#zoom-ratio\" class=\"headerlink\" title=\"zoom(ratio)\"></a>zoom(ratio)</h3><ul>\n<li>ratio:<ul>\n<li>类型: Number</li>\n<li>放大: 需要一个正数（ratio &gt; 0）</li>\n<li>缩小: 需要一个负数（ratio &lt; 0）</li>\n</ul>\n</li>\n</ul>\n<p>缩放画布（图片包裹器）<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$().cropper(&apos;zoom&apos;, 0.1);</span><br><span class=\"line\">$().cropper(&apos;zoom&apos;, -0.1);</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"rotate-degree\"><a href=\"#rotate-degree\" class=\"headerlink\" title=\"rotate(degree)\"></a>rotate(degree)</h3><ul>\n<li>degree:<ul>\n<li>类型: Number</li>\n<li>向右旋转： 需要一个正数（degree &gt; 0）</li>\n<li>向左旋转： 需要一个负数（degree &lt; 0）</li>\n</ul>\n</li>\n</ul>\n<p>旋转画布（图片包裹器）：需要 CSS3 2D Transforms 来支持 (IE 9+)<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$().cropper(&apos;rotate&apos;, 90);</span><br><span class=\"line\">$().cropper(&apos;rotate&apos;, -90);</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"scale-scaleX-scaleY\"><a href=\"#scale-scaleX-scaleY\" class=\"headerlink\" title=\"scale(scaleX[, scaleY])\"></a>scale(scaleX[, scaleY])</h3><ul>\n<li>scaleX<ul>\n<li>类型: Number</li>\n<li>默认值: 1</li>\n<li>图片横坐标上的缩放因子</li>\n<li>当等于1的时候，就相当于什么都没做。</li>\n</ul>\n</li>\n<li>scaleY (optional):<ul>\n<li>类型: Number</li>\n<li>图片纵坐标上的缩放因子 -如果不存在，默认是 scaleX</li>\n</ul>\n</li>\n</ul>\n<p>缩放图片：需要 CSS3 2D Transforms 来支持 (IE 9+)<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$().cropper(&apos;scale&apos;, -1); //  水平方向和垂直方向都翻转</span><br><span class=\"line\">   $().cropper(&apos;scale&apos;, -1, 1); // 水平方向翻转</span><br><span class=\"line\">   $().cropper(&apos;scale&apos;, 1, -1); // 垂直方向翻转</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"getData-rounded\"><a href=\"#getData-rounded\" class=\"headerlink\" title=\"getData([rounded])\"></a>getData([rounded])</h3><ul>\n<li>rounded (optional):<ul>\n<li>类型: Boolean</li>\n<li>默认值: false</li>\n<li>来获得圆角值</li>\n</ul>\n</li>\n<li>(返回值):<ul>\n<li>类型: Object</li>\n<li>属性:<ul>\n<li>x: 剪裁区的左偏移量</li>\n<li>y:剪裁区的上偏移量</li>\n<li>width: 剪裁区宽度</li>\n<li>height: 剪裁区高度</li>\n<li>rotate: 图片的旋转角度</li>\n<li>scaleX: 图片横坐标上的缩放因子</li>\n<li>scaleY: 图片纵坐标上的缩放因子</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<p>输出剪裁区的位置和尺寸数据（基于原始图片）</p>\n<h3 id=\"setData-data\"><a href=\"#setData-data\" class=\"headerlink\" title=\"setData(data)\"></a>setData(data)</h3><ul>\n<li>data:<ul>\n<li>类型: Object</li>\n<li>属性: 查看 getData 方法</li>\n</ul>\n</li>\n</ul>\n<p>改变剪裁区的位置和尺寸值（基于原始图片）<br><strong>注意</strong>: 只在严格模式下有用</p>\n<h3 id=\"getContainerData\"><a href=\"#getContainerData\" class=\"headerlink\" title=\"getContainerData()\"></a>getContainerData()</h3><ul>\n<li>(返回值):<ul>\n<li>类型: Object</li>\n<li>属性:<ul>\n<li>width:容器当前宽度</li>\n<li>height: 容器当前高度</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<p>输出容器的尺寸数据</p>\n<h3 id=\"getImageData\"><a href=\"#getImageData\" class=\"headerlink\" title=\"getImageData()\"></a>getImageData()</h3><ul>\n<li>(返回值):<ul>\n<li>类型: Object</li>\n<li>属性:<ul>\n<li>left: 图片的左偏移量</li>\n<li>top: 图片的上偏移量</li>\n<li>width: 图片宽度</li>\n<li>height: 图片高度</li>\n<li>naturalWidth:图片自然宽度</li>\n<li>naturalHeight: 图片自然高度</li>\n<li>aspectRatio: 图片长宽比</li>\n<li>rotate: 图片的旋转角度</li>\n<li>scaleX:图片横坐标上的缩放因子</li>\n<li>scaleY: 图片纵坐标上的缩放因子</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<p>输出图片的位置尺寸和其它相关数据。    </p>\n<h3 id=\"getCanvasData\"><a href=\"#getCanvasData\" class=\"headerlink\" title=\"getCanvasData()\"></a>getCanvasData()</h3><ul>\n<li>(返回值):<ul>\n<li>类型: Object</li>\n<li>属性:<ul>\n<li>left: 画布左偏移量</li>\n<li>top: 画布上偏移量</li>\n<li>width:画布宽度</li>\n<li>height: 画布高度</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<p>输入画布（图片包裹器）的位置和尺寸数据。</p>\n<h3 id=\"setCanvasData-data\"><a href=\"#setCanvasData-data\" class=\"headerlink\" title=\"setCanvasData(data)\"></a>setCanvasData(data)</h3><ul>\n<li>data:<ul>\n<li>类型: Object</li>\n<li>属性:<ul>\n<li>left: 画布新的左偏移量</li>\n<li>top: 画布新的上偏移量</li>\n<li>width: 画布新的宽度</li>\n<li>height: 画布新的高度</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<p>修改画布（图片包裹器）的位置和尺寸数据。</p>\n<h3 id=\"getCropBoxData\"><a href=\"#getCropBoxData\" class=\"headerlink\" title=\"getCropBoxData()\"></a>getCropBoxData()</h3><ul>\n<li>(返回值):<ul>\n<li>类型: Object</li>\n<li>属性:<ul>\n<li>left: 剪裁框左偏移量</li>\n<li>top:剪裁框上偏移量</li>\n<li>width: 剪裁框宽度</li>\n<li>height:剪裁框高度</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<p>输出剪裁框的位置和尺寸数据。</p>\n<h3 id=\"setCropBoxData-data\"><a href=\"#setCropBoxData-data\" class=\"headerlink\" title=\"setCropBoxData(data)\"></a>setCropBoxData(data)</h3><ul>\n<li>data:<ul>\n<li>类型: Object</li>\n<li>属性:<ul>\n<li>left: 剪裁框新的左偏移量</li>\n<li>top: 剪裁框新的上偏移量</li>\n<li>width: 剪裁框新的宽度</li>\n<li>height: 剪裁框新的高度</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<p>修改剪裁框的位置和尺寸数据。</p>\n<h3 id=\"getCroppedCanvas-options\"><a href=\"#getCroppedCanvas-options\" class=\"headerlink\" title=\"getCroppedCanvas([options])\"></a>getCroppedCanvas([options])</h3><ul>\n<li>options (可选):<ul>\n<li>类型: Object</li>\n<li>属性:<ul>\n<li>width输出画布的目标宽度</li>\n<li>height: 输出画布的目标高度</li>\n<li>fillColor: 填入输出画布的任何alpha 颜色值</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>(返回值):<ul>\n<li>类型: HTMLCanvasElement</li>\n<li>剪裁后的图片的画布</li>\n</ul>\n</li>\n<li>浏览器支持：<ul>\n<li>基本图片: 需要 Canvas 来支持 (IE 9+)</li>\n<li>旋转的图片: 需要 CSS3 2D Transforms 来支持 (IE 9+)</li>\n<li>跨域图片: 需要 HTML5 CORS settings attributes 来支持 (IE 11+)</li>\n</ul>\n</li>\n</ul>\n<p>获取剪裁后的图片的画布<br>随后，你可以直接将画布显示为一张图片，或者使用 canvas.toDataURL 来获取一个数据的 URL，或者使用 canvas.toBlob 获取一个 blob 然后使用 FormData 将其上传到服务器上（如果浏览器支持这些APIs）。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$().cropper(&apos;getCroppedCanvas&apos;); </span><br><span class=\"line\">  $().cropper(&apos;getCroppedCanvas&apos;, &#123;</span><br><span class=\"line\">    width: 160,</span><br><span class=\"line\">    height: 90</span><br><span class=\"line\">  &#125;);  </span><br><span class=\"line\">  // Upload cropped image to server</span><br><span class=\"line\">  $().cropper(&apos;getCroppedCanvas&apos;).toBlob(function (blob) &#123;</span><br><span class=\"line\">    var formData = new FormData();    </span><br><span class=\"line\">    formData.append(&apos;croppedImage&apos;, blob);</span><br><span class=\"line\">      $.ajax(&apos;/path/to/upload&apos;, &#123;</span><br><span class=\"line\">        method: &quot;POST&quot;,</span><br><span class=\"line\">        data: formData,</span><br><span class=\"line\">        processData: false,</span><br><span class=\"line\">        contentType: false,</span><br><span class=\"line\">        success: function () &#123;</span><br><span class=\"line\">          console.log(&apos;Upload success&apos;);</span><br><span class=\"line\">        &#125;,</span><br><span class=\"line\">        error: function () &#123;</span><br><span class=\"line\">          console.log(&apos;Upload error&apos;);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      &#125;);</span><br><span class=\"line\">    &#125;);</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"setAspectRatio-aspectRatio\"><a href=\"#setAspectRatio-aspectRatio\" class=\"headerlink\" title=\"setAspectRatio(aspectRatio)\"></a>setAspectRatio(aspectRatio)</h3><ul>\n<li>aspectRatio:<ul>\n<li>类型: Number</li>\n<li>需要一个正整数。</li>\n</ul>\n</li>\n</ul>\n<p>改变剪裁框的长宽比。</p>\n<h3 id=\"setDragMode-mode\"><a href=\"#setDragMode-mode\" class=\"headerlink\" title=\"setDragMode([mode])\"></a>setDragMode([mode])</h3><ul>\n<li>mode (可选):<ul>\n<li>类型: String</li>\n<li>默认值: ‘none’</li>\n<li>可选值: ‘none’, ‘crop’, ‘move’</li>\n</ul>\n</li>\n</ul>\n<p>修改拖动模式。<br><strong>提示</strong>: 你可以通过双击剪裁框在 “crop” 和 “move” 模式之间切换 。</p>\n<h2 id=\"事件\"><a href=\"#事件\" class=\"headerlink\" title=\"事件\"></a>事件</h2><h3 id=\"build-cropper\"><a href=\"#build-cropper\" class=\"headerlink\" title=\"build.cropper\"></a>build.cropper</h3><p>该事件在剪裁框实例开始加载一张图片的时候触发。</p>\n<h3 id=\"built-cropper\"><a href=\"#built-cropper\" class=\"headerlink\" title=\"built.cropper\"></a>built.cropper</h3><p>该事件在一个剪裁框实例完全创建好的的时候触发。</p>\n<h3 id=\"cropstart-cropper\"><a href=\"#cropstart-cropper\" class=\"headerlink\" title=\"cropstart.cropper\"></a>cropstart.cropper</h3><ul>\n<li>event.originalEvent:<ul>\n<li>类型: Event</li>\n<li>选项: mousedown, touchstart 和 pointerdown</li>\n</ul>\n</li>\n<li>event.action:<ul>\n<li>类型: String</li>\n<li>选项:<ul>\n<li>‘crop’:创建一个新的剪裁框</li>\n<li>‘move’: 移动画布</li>\n<li>‘zoom’:放大/缩小画布</li>\n<li>‘e’: 调整剪裁框东面的大小</li>\n<li>‘w’: 调整剪裁框西面的大小</li>\n<li>‘s’: 调整剪裁框南面的大小</li>\n<li>‘n’: 调整剪裁框北面的大小</li>\n<li>‘se’: 调整剪裁框东南面的大小</li>\n<li>‘sw’: 调整剪裁框西南面的大小</li>\n<li>‘ne’: 调整剪裁框东北面的大小<br><em>‘nw’: 调整剪裁框西北面的大小\n</em>‘all’: 移动剪裁框（所有方向）</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<p>该事件在画布或者剪裁框开始改变的时候触发。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$().on(&apos;cropstart.cropper&apos;, function (e) &#123;</span><br><span class=\"line\">  console.log(e.type); // cropstart</span><br><span class=\"line\">  console.log(e.namespace); // cropper</span><br><span class=\"line\">  console.log(e.action); // ...</span><br><span class=\"line\">  console.log(e.originalEvent.pageX);</span><br><span class=\"line\">   </span><br><span class=\"line\">  // Prevent to start cropping, moving, etc if necessary</span><br><span class=\"line\">  if (e.action === &apos;crop&apos;) &#123;</span><br><span class=\"line\">    e.preventDefault();</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"cropmove-cropper\"><a href=\"#cropmove-cropper\" class=\"headerlink\" title=\"cropmove.cropper\"></a>cropmove.cropper</h3><ul>\n<li>event.originalEvent:<ul>\n<li>类型: Event</li>\n<li>选项: mousemove, touchmove 和 pointermove.</li>\n</ul>\n</li>\n<li>event.action: 和 “cropstart.cropper” 是一样的。</li>\n</ul>\n<p>该事件在画布或者剪裁框正在改变中的时候触发。</p>\n<h3 id=\"cropend-cropper\"><a href=\"#cropend-cropper\" class=\"headerlink\" title=\"cropend.cropper\"></a>cropend.cropper</h3><ul>\n<li>event.originalEvent: <ul>\n<li>类型: Event</li>\n<li>选项: mouseup, touchend, touchcancel, pointerup 和 pointercancel.</li>\n</ul>\n</li>\n<li>event.action: 和 “cropstart.cropper” 是一样的</li>\n</ul>\n<p>该事件在画布或者剪裁框停止改变的时候触发。</p>\n<h3 id=\"crop-cropper\"><a href=\"#crop-cropper\" class=\"headerlink\" title=\"crop.cropper\"></a>crop.cropper</h3><ul>\n<li>event.x</li>\n<li>event.y</li>\n<li>event.width</li>\n<li>event.height</li>\n<li>event.rotate</li>\n<li>event.scaleX</li>\n<li>event.scaleY</li>\n</ul>\n<p>关于这些属性，请查看 <code>getData</code> 方法.<br>该事件在画布或者剪裁框改变完成的时候触发。</p>\n<h3 id=\"zoom-cropper\"><a href=\"#zoom-cropper\" class=\"headerlink\" title=\"zoom.cropper\"></a>zoom.cropper</h3><ul>\n<li>event.originalEvent:<ul>\n<li>类型: Event</li>\n<li>选项: wheel, touchmove.</li>\n</ul>\n</li>\n<li>event.ratio:<ul>\n<li>类型: Number</li>\n<li>当前缩放比例 (ratio &gt; 0表示放大, ratio &lt; 0 表示缩小)</li>\n</ul>\n</li>\n</ul>\n<p>该事件在一个剪裁框实例开始放大或缩小的时候触发。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$().on(&apos;zoom.cropper&apos;, function (e) &#123;</span><br><span class=\"line\">  var maxRatio = 10;</span><br><span class=\"line\">  var imageData = $(this).cropper(&apos;getImageData&apos;);</span><br><span class=\"line\">  var currentRatio = imageData.width / imageData.naturalWidth;</span><br><span class=\"line\"></span><br><span class=\"line\">  // Zoom in</span><br><span class=\"line\">  if (e.ratio &gt; 0 &amp;&amp; currentRatio &gt; maxRatio) &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    // Prevent zoom in</span><br><span class=\"line\">    e.preventDefault();</span><br><span class=\"line\"></span><br><span class=\"line\">    // Fit the max zoom ratio</span><br><span class=\"line\">    $(this).cropper(&apos;setCanvasData&apos;, &#123;</span><br><span class=\"line\">      width: imageData.naturalWidth * maxRatio</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  // Zoom out</span><br><span class=\"line\">  // ...</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"防止冲突\"><a href=\"#防止冲突\" class=\"headerlink\" title=\"防止冲突\"></a>防止冲突</h3><p>如果你已经使用了其它的插件，而且是相同的命名空间，只需要调用 <code>$.fn.cropper.noConflict</code> 方法来还原它。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;script src=&quot;other-plugin.js&quot;&gt;&lt;/script&gt;</span><br><span class=\"line\">&lt;script src=&quot;cropper.js&quot;&gt;&lt;/script&gt;</span><br><span class=\"line\">&lt;script&gt;</span><br><span class=\"line\">  $.fn.cropper.noConflict();</span><br><span class=\"line\">  // Code that uses other plugin&apos;s &quot;$().cropper&quot; can follow here.</span><br><span class=\"line\">&lt;/script&gt;</span><br></pre></td></tr></table></figure></p>\n"},{"title":"使用SASS","date":"2017-10-20T06:11:27.000Z","description":"Sass教程","_content":"## Sass简介\nSass 是一种css预处理器,CSS 预处理器定义了一种新的语言，其基本思想是，用一种专门的编程语言，为 CSS 增加了一些编程的特性，将 CSS 作为目标生成文件，然后开发者就只要使用这种语言进行编码工作，减少工作量。        \n除了Sass 还有一些其他常见的预处理语言\n+ [Less](http://lesscss.cn/)\n+ [Stylus](http://www.zhangxinxu.com/jq/stylus/)\n\nSass 有时候也被称为 Scss,两者之间不同之处有以下两点：\n+ 文件扩展名不同，Sass 是以“.sass”后缀为扩展名，而 SCSS 是以“.scss”后缀为扩展名\n+ 语法书写方式不同，Sass 是以严格的缩进式语法规则来书写，不带大括号({})和分号(;)，类似于Stylus；而 SCSS 的语法书类似于常规的 CSS。  \n\n来看一个示例：\n```\n/* Sass 语法 */\n$font-stack: Helvetica, sans-serif\n$primary-color: #333\nbody\n  font: 100% $font-stack\n  color: $primary-color\n  \n/* Scss 语法 */\n$font-stack: Helvetica, sans-serif;\n$primary-color: #333;\nbody {\n  font: 100% $font-stack;\n  color: $primary-color;\n}\n```\n以上俩段编译的结果是同样的结果\n```\nbody {\n  font: 100% Helvetica, sans-serif;\n  color: #333;\n}\n```\n## Sass 安装\n首先需要安装 [NodeJs](https://nodejs.org/en/)，通过命令行安装：\n```\nnpm install -g node-sass\n```\n## Sass使用\n通过以下命令行监测 sourceFile.scss，将文件转变成 focusFile.css\n```\nnode-sass -w sourceFile.scss focusFile.css\n```\n顺带一提，如果你使用的是 [webstorm](http://www.jetbrains.com/webstorm/)，可以通过配置IDE的 Settings -- Tools -- File Watchers实现文件的监听，省去命令行的过程。这个不是这篇文章的重点，有意向的请自行 Google。    \nnode-sass 参数\n```\n-w, --watch                Watch a directory or file\n-r, --recursive            Recursively watch directories or files\n-o, --output               Output directory\n-x, --omit-source-map-url  Omit source map URL comment from output\n-i, --indented-syntax      Treat data from stdin as sass code (versus scss)\n-q, --quiet                Suppress log output except on error\n-v, --version              Prints version info\n--output-style             CSS output style (nested | expanded | compact | compressed)\n--indent-type              Indent type for output CSS (space | tab)\n--indent-width             Indent width; number of spaces or tabs (maximum value: 10)\n--linefeed                 Linefeed style (cr | crlf | lf | lfcr)\n--source-comments          Include debug info in output\n--source-map               Emit source map\n--source-map-contents      Embed include contents in map\n--source-map-embed         Embed sourceMappingUrl as data URI\n--source-map-root          Base path, will be emitted in source-map as is\n--include-path             Path to look for imported files\n--follow                   Follow symlinked directories\n--precision                The amount of precision allowed in decimal numbers\n--importer                 Path to .js file containing custom importer\n--functions                Path to .js file containing custom functions\n--help                     Print usage info\n```\n## Sass基本特性\n### 注释\n* 使用类似 css的注释方式，使用\"/\\*\"开头，使用\"\\*/\"结束。\n* 使用类似JavaScript的注释方式，使用\"//\".\n* 两者的区别：前者会在编译的 css文件中显示，后者不会。\n### 数据类型\nSass 和 JavaScript 语言类似，也具有自己的数据类型，在 Sass 中包含以下几种数据类型：\n1. 数字: 如，1、 2、 13、 10px；\n2. 字符串：有引号字符串或无引号字符串，如，”foo” ‘bar’ baz；\n3. 颜色：如，blue, #04a3f9, rgba(255,0,0,0.5);\n4. 布尔型：如，true, false；\n5. 空值：如，null；\n6. 值列表：用空格或者逗号分开，如，1.5em 1em 0 2em , Helvetica, Arial, sans-serif；\n### 变量：通过$声明变量，变量有全局变量和局部变量的概念。\n```\n$brand-primary : darken(#428bca, 6.5%) !default;\n$btn-primary-color : #fff !default;\n$btn-primary-bg : $brand-primary !default;\n$btn-primary-border : darken($btn-primary-bg, 5%) !default;\n.btn-primary {\n   background-color: $btn-primary-bg;\n   color: $btn-primary-color;\n   border: 1px solid $btn-primary-border;\n}\n\n/* 局部变量 */\n$color: orange;\n.block {\n  color: $color;\n}\nem {\n  $color: red;\n  a {\n    color: $color;\n  }\n}\nspan {\n  color: $color;\n}\n\n```\n编译之后的结果\n```\n.block {\n  color: orange;\n}\nem a{\n    color: red;\n}\nspan {\n  color: orange;\n}\n```\n### 嵌套结构\n```\nnav {\n  a {\n    color: red;\n    header & {\n      color:green;\n    }\n  }  \n}\n\n.box {\n  border: {\n   top: 1px solid red;\n   bottom: 1px solid green;\n  }\n}\n\n.clearfix{\n  &:before,\n  &:after {\n    content:\"\";\n    display: table;\n  }\n  &:after {\n    clear:both;\n    overflow: hidden;\n  }\n}\n\n/* 但是也注意不可以无节制地嵌套，会加大浏览器的负担 */\n```\n### 混合宏\n混合宏类似于 js中的函数，用来实现某个特定的功能。一次定义之后可以方便的调用。通过@mixin定义混合宏，通过@include调用混合宏。**混合宏会产生亢余代码**。\n```\n/* 没有参数的混合宏可以省略() */\n@mixin border-radius{\n  -webkit-border-radius: 5px;\n  border-radius: 5px;\n}\nbutton{\n  @include border-radius;\n}\n/* 混合宏中传递参数 */\n@mixin center($width,$height){\n  width: $width;\n  height: $height;\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  margin-top: -($height) / 2;\n  margin-left: -($width) / 2;\n}\n.box-center {\n  @include center(500px,300px);\n}\n/* 混合宏中定义默认值 */\n@mixin border-radius($radius:5px){\n  -webkit-border-radius: $radius;\n  border-radius: $radius;\n}\n.nav{\n  @include border-radius;\n}\n.box{\n  @include border-radius(3px);\n}\n\n/* 混合宏一些更高级的使用 */\n@mixin box-shadow($shadows...){\n  @if length($shadows) >= 1 {\n    -webkit-box-shadow: $shadows;\n    box-shadow: $shadows;\n  } @else {\n    $shadows: 0 0 2px rgba(#000,.25);\n    -webkit-box-shadow: $shadow;\n    box-shadow: $shadow;\n  }\n}\n.box {\n  @include box-shadow(0 0 1px rgba(#000,.5),0 0 2px rgba(#000,.2));\n}\n```\n### 扩展/继承\n扩展/继承的作用类似于混合宏，优势是不会产生亢余代码，缺点是可以使用的情况不如混合宏常见，使用起来也不如混合宏灵活。\n```\n.btn {\n  border: 1px solid #ccc;\n  padding: 6px 10px;\n  font-size: 14px;\n}\n\n.btn-primary {\n  background-color: #f36;\n  color: #fff;\n  @extend .btn;\n}\n\n.btn-second {\n  background-color: orange;\n  color: #fff;\n  @extend .btn;\n}\n```\n### 占位符\n```\n%mt5 {\n  margin-top: 5px;\n}\n%pt5{\n  padding-top: 5px;\n}\n.btn {\n  @extend %mt5;\n  @extend %pt5;\n}\n```\n### 插值\nSass允许在#{}内部解析变量\n```\n$properties: (margin, padding);\n@mixin set-value($side, $value) {\n  @each $prop in $properties {\n    #{$prop}-#{$side}: $value;\n  }\n}\n.login-box {\n  @include set-value(top, 14px);\n}\n```\n### 运算\n```\n.box {\n  width: 20px + 8in;\n}\n$full-width: 960px;\n$sidebar-width: 200px;\n.content {\n  width: $full-width -  $sidebar-width;\n}\n.box {\n  width: 10px * 2;\n}\n.box {\n  width: (100px / 2);  \n}\np {\n  font: 10px/8px;             // 纯 CSS，不是除法运算\n  $width: 1000px;\n  width: $width/2;            // 使用了变量，是除法运算\n  width: round(1.5)/2;        // 使用了函数，是除法运算\n  height: (500px/2);          // 使用了圆括号，是除法运算\n  margin-left: 5px + 8px/2px; // 使用了加（+）号，是除法运算\n}\n.box {\n  width: ((220px + 720px) - 11 * 20 ) / 12 ;  \n}\np {\n  color: #010203 + #040506;\n  background-color: #010203 * 2;\n}\n\n$content: \"Hello\" + \"\" + \"Sass!\";\n.box:before {\n  content: \" #{$content} \";\n}\n```\n## Sass高级特性\n### @if\n```\n@mixin blockOrHidden($boolean:true) {\n  @if $boolean {\n    display: block;\n  }\n  @else {\n    display: none;\n  }\n}\n.block {\n  @include blockOrHidden;\n}\n.hidden{\n  @include blockOrHidden(false);\n}\n```\n### @for\n```\n@for $i from <start> through <end>\n@for $i from <start> to <end>\n@for $i from 1 through 3 {\n  .item-#{$i} { width: 2em * $i; }\n}\n@for $i from 1 to 3 {\n  .item-#{$i} { width: 2em * $i; }\n}\n```\n```\n$grid-prefix: span !default;\n$grid-width: 60px !default;\n$grid-gutter: 20px !default;\n\n%grid {\n  float: left;\n  margin-left: $grid-gutter / 2;\n  margin-right: $grid-gutter / 2;\n}\n@for $i from 1 through 12 {\n  .#{$grid-prefix}#{$i}{\n    width: $grid-width * $i + $grid-gutter * ($i - 1);\n    @extend %grid;\n  }  \n}\n```\n### @each\n```\n$list: adam john wynn mason kuroir; //$list 就是一个列表\n@mixin author-images {\n    @each $author in $list {\n        .photo-#{$author} {\n            background: url(\"/images/avatars/#{$author}.png\") no-repeat;\n        }\n    }\n}\n.author-bio {\n    @include author-images;\n}\n```\n## Sass中的函数\n```\n//自定义函数\n@function double($n) {\n  @return $n * 2;\n}\n#sidebar {\n  width: double(5px);\n}\n```\nSass中的内置函数\n* 字符串函数\n\t+ unquote\n\t+ quote\n\t+ To-upper-case\n\t+ To-lower-case\n\t+ percentage\n\t+ round\n\t+ ceil\n\t+ floor\n\t+ abs\n\t+ min\n\t+ max\n\t+ random\n* 列表函数\n\t- length  取列表数据的长度\n\t- nth  (10px 20px 30px, 1)\n\t- join  join(10px 20px, 30px 40px)\n\t- append  append(10px 20px ,30px)\n\t- zip  zip(1px 2px 3px,solid dashed dotted,green blue red)\n\t- index  index(1px solid red, solid)\n\t- type-of  type-of(100)\n\t- unit  取单位\n\t- unitless  判断一个值是否带有单位\n\t- comparable  判断两个数是否可以进行加减合并\n\t- if(true,1px,2px)\n* Maps函数\n\t+ map-get\n\t+ map-has-key\n\t+ map-keys\n\t+ map-values\n\t+ map-merge\n\t+ map-remove\n\t+ keywords\n```\n$map: (\n  $key1: value1,\n  $key2: value2,\n  $key3: value3\n)   \n\n$map: (\n  key1: value1,\n  key2: (\n    key-1: value-1,\n    key-2: value-2,\n  ),\nkey3: value3\n);\n\n$theme-color: (\n  default: (\n      bgcolor: #fff,\n      text-color: #444,\n      link-color: #39f\n  ),\n  primary:(\n      bgcolor: #000,\n      text-color:#fff,\n      link-color: #93f\n  ),\n  negative: (\n      bgcolor: #f36,\n      text-color: #fefefe,\n      link-color: #d4e\n  )\n);\n```\n```\n/* map-get */\n$social-colors: (\n  dribble: #ea4c89,\n  facebook: #3b5998,\n  github: #171515,\n  google: #db4437,\n  twitter: #55acee\n);\n.btn-dribble{\n  color: map-get($social-colors,facebook);\n}\n/* 没有值不会报错 */\n.btn-weibo{\n  font-size: 12px;\n  color: map-get($social-colors,weibo);\n}\n```\n```\n/* map中的容错函数 */\n   @function colors($color){\n     @if not map-has-key($social-colors,$color){\n         @warn \"No color found for `#{$color}` in $social-colors map. Property omitted.\";\n     }\n     @return map-get($social-colors,$color);\n   }\n   .btn-dribble {\n     color: colors(dribble);\n   }\n```\n```\n/* each 遍历 map */\n@each $name in map-keys($social-colors){\n  .btn-#{$name}{\n      color: colors($name);\n  }\n}\n@for $i from 1 through length(map-keys($social-colors)){\n  .btn-#{nth(map-keys($social-colors),$i)} {\n    color: colors(nth(map-keys($social-colors),$i));\n  }\n}\n\n/*得到所有的值*/\nmap-values($social-colors)\n```\n```\n$color: (\n  text: #f36,\n  link: #f63,\n  border: #ddd,\n  backround: #fff\n);\n$typo:(\n  font-size: 12px,\n  line-height: 1.6\n);\n$newcolor = map-merge($color, $typo);\n\n/* 得到新值 */\n$map:map-remove($social-colors,dribble);\n```\n* 颜色函数\n\t+ rgb\n\t+ rgba\n\t+ red\n\t+ green\n\t+ blue\n\t+ mix  混合两种颜色 第三个参数为第一种颜色的比例  mix(blue,red,20%)\n\t+ lighten  lighten(red, 20%);\n\t+ darken  darken(red,30%);\n\t+ saturate  改变颜色的饱和度 参数单位为百分比 saturate(blue,20%)\n\t+ desaturate\n\t+ adjust-hue  通过调整色相 adjust-hue(blue,30deg)\n\t+ grayscale  直接让饱和度为0  grayscale(blue);\n\t+ alpha  获取透明度\n\t+ opacity  获取透明度\n\t+ rgba\n\t+ opacify  增加透明度\n\t+ fade-in  增加透明度\n\t+ transparentize  减少透明度\n\t+ fade-out  减少透明度\n```\n<ul class=\"swatches red\">\n  <li></li>\n  ...      \n  <li></li>\n</ul>\n<ul class=\"swatches orange\">\n  <li></li>\n  …\n  <li></li>\n</ul>\n<ul class=\"swatches yellow\">\n  <li></li>\n  …\n  <li></li>\n</ul>\n<ul class=\"swatches green\">\n  <li></li>\n  …\n  <li></li>\n</ul>\n<ul class=\"swatches blue\">\n  <li></li>\n  …\n  <li></li>\n</ul>\n<ul class=\"swatches purple\">\n  <li></li>\n  …\n  <li></li>\n</ul>\n\n<style>\n$redBase: #DC143C;\n$orangeBase: saturate(lighten(adjust_hue($redBase, 39), 5), 7);//#f37a16\n$yellowBase: saturate(lighten(adjust_hue($redBase, 64), 6), 13);//#fbdc14\n$greenBase: desaturate(darken(adjust_hue($redBase, 102), 2), 11);//#73c620\n$blueBase: saturate(darken(adjust_hue($redBase, 201), 2), 1);//#12b7d4\n$purpleBase: saturate(darken(adjust_hue($redBase, 296), 2), 1);//#a012d4\n$blackBase: #777;\n$bgc: #fff;\n\n//定义颜色变暗的 mixin\n@mixin swatchesDarken($color) {\n  @for $i from 1 through 10 {\n    $x:$i+11;\n    li:nth-child(#{$x}) {\n      $n:$i*5;\n      $bgc:darken($color,$n); //颜色变暗\n      background-color: $bgc;\n      &:hover:before { //hover状态显示颜色编号\n        content: \"#{$bgc}\";\n        color: lighten($bgc,40);\n        font-family: verdana;\n        font-size: 8px;\n        padding: 2px;\n      }\n    }\n  }\n}\n//定义颜色变亮的 mixin\n@mixin swatchesLighten($color) {\n  @for $i from 1 through 10 {\n    $x:11-$i;\n    li:nth-child(#{$x}) {\n      $n:$i*5;\n      $bgc:lighten($color,$n);\n      background-color: $bgc;\n      &:hover:before {\n        content: \"#{$bgc}\";\n        color: darken($bgc,40);\n        font-family: verdana;\n        font-size: 8px;\n        padding: 2px;\n      }\n    }\n  }\n}\n\n.swatches li {    \n  width: 4.7619047619%;\n  float: left;\n  height: 60px;\n  list-style: none outside none;\n}\n\nul.red {\n  @include swatchesLighten($redBase);\n  @include swatchesDarken($redBase);\n  li:nth-child(11) {\n    background-color: $redBase;\n  }\n}\n\nul.orange {\n  @include swatchesLighten($orangeBase);\n  @include swatchesDarken($orangeBase);\n  li:nth-child(11) {\n    background-color: $orangeBase;\n  }\n}\n\nul.yellow {\n  @include swatchesLighten($yellowBase);\n  @include swatchesDarken($yellowBase);\n  li:nth-child(11) {\n    background-color: $yellowBase;\n  }\n}\n\nul.green {\n  @include swatchesLighten($greenBase);\n  @include swatchesDarken($greenBase);\n  li:nth-child(11) {\n    background-color: $greenBase;\n  }\n}\n\nul.blue {\n  @include swatchesLighten($blueBase);\n  @include swatchesDarken($blueBase);\n  li:nth-child(11) {\n    background-color: $blueBase;\n  }\n}\n\nul.purple {\n  @include swatchesLighten($purpleBase);\n  @include swatchesDarken($purpleBase);\n  li:nth-child(11) {\n    background-color: $purpleBase;\n  }\n}\n\nul.black {\n  @include swatchesLighten($blackBase);\n  @include swatchesDarken($blackBase);\n  li:nth-child(11) {\n    background-color: $blackBase;\n  }\n}\n</style>\n```\n## Sass的@规则\n* @import\n* @media\n```\n.sidebar {\n  width: 300px;\n  @media screen and (orientation: landscape) {\n    width: 500px;\n  }\n}\n@media screen {\n  .sidebar {\n    @media (orientation: landscape) {\n      width: 500px;\n    }\n  }\n}\n\n$media: screen;\n$feature: -webkit-min-device-pixel-ratio;\n$value: 1.5;\n\n@media #{$media} and ($feature: $value) {\n  .sidebar {\n    width: 500px;\n  }\n}\n```\n* @extend\n* @at-root\n* @debug\n* @warn\n* @error\n* @content\n```\n$small : 750px;\n@mixin  onsmall {\n  @media  only screen and (max-width: $small){\n    @content;\n  }\n}\n\n.navbar-content{\n  max-width:980px;\n  @include onsmall {\n    min-width:320px;\n  }\n}\n```\n## 最后附上一个rem的例子\n```\n//以750px( iphone6 )为基准定义其他分辨率下的rem\n@mixin useRem($size){\n  $device-list : 320px, 375px , 414px;\n  html{\n    @each $device in $device-list{\n      @media screen and (min-width: $device){\n        font-size: 100px * ($device/$size);\n      }\n    }\n  }\n}\n@include useRem(750px);\n```","source":"_posts/使用SASS.md","raw":"title: 使用SASS\ntags: [sass]\ndate: 2017-10-20 14:11:27\ncategories: [NodeJs]\ndescription: Sass教程\n---\n## Sass简介\nSass 是一种css预处理器,CSS 预处理器定义了一种新的语言，其基本思想是，用一种专门的编程语言，为 CSS 增加了一些编程的特性，将 CSS 作为目标生成文件，然后开发者就只要使用这种语言进行编码工作，减少工作量。        \n除了Sass 还有一些其他常见的预处理语言\n+ [Less](http://lesscss.cn/)\n+ [Stylus](http://www.zhangxinxu.com/jq/stylus/)\n\nSass 有时候也被称为 Scss,两者之间不同之处有以下两点：\n+ 文件扩展名不同，Sass 是以“.sass”后缀为扩展名，而 SCSS 是以“.scss”后缀为扩展名\n+ 语法书写方式不同，Sass 是以严格的缩进式语法规则来书写，不带大括号({})和分号(;)，类似于Stylus；而 SCSS 的语法书类似于常规的 CSS。  \n\n来看一个示例：\n```\n/* Sass 语法 */\n$font-stack: Helvetica, sans-serif\n$primary-color: #333\nbody\n  font: 100% $font-stack\n  color: $primary-color\n  \n/* Scss 语法 */\n$font-stack: Helvetica, sans-serif;\n$primary-color: #333;\nbody {\n  font: 100% $font-stack;\n  color: $primary-color;\n}\n```\n以上俩段编译的结果是同样的结果\n```\nbody {\n  font: 100% Helvetica, sans-serif;\n  color: #333;\n}\n```\n## Sass 安装\n首先需要安装 [NodeJs](https://nodejs.org/en/)，通过命令行安装：\n```\nnpm install -g node-sass\n```\n## Sass使用\n通过以下命令行监测 sourceFile.scss，将文件转变成 focusFile.css\n```\nnode-sass -w sourceFile.scss focusFile.css\n```\n顺带一提，如果你使用的是 [webstorm](http://www.jetbrains.com/webstorm/)，可以通过配置IDE的 Settings -- Tools -- File Watchers实现文件的监听，省去命令行的过程。这个不是这篇文章的重点，有意向的请自行 Google。    \nnode-sass 参数\n```\n-w, --watch                Watch a directory or file\n-r, --recursive            Recursively watch directories or files\n-o, --output               Output directory\n-x, --omit-source-map-url  Omit source map URL comment from output\n-i, --indented-syntax      Treat data from stdin as sass code (versus scss)\n-q, --quiet                Suppress log output except on error\n-v, --version              Prints version info\n--output-style             CSS output style (nested | expanded | compact | compressed)\n--indent-type              Indent type for output CSS (space | tab)\n--indent-width             Indent width; number of spaces or tabs (maximum value: 10)\n--linefeed                 Linefeed style (cr | crlf | lf | lfcr)\n--source-comments          Include debug info in output\n--source-map               Emit source map\n--source-map-contents      Embed include contents in map\n--source-map-embed         Embed sourceMappingUrl as data URI\n--source-map-root          Base path, will be emitted in source-map as is\n--include-path             Path to look for imported files\n--follow                   Follow symlinked directories\n--precision                The amount of precision allowed in decimal numbers\n--importer                 Path to .js file containing custom importer\n--functions                Path to .js file containing custom functions\n--help                     Print usage info\n```\n## Sass基本特性\n### 注释\n* 使用类似 css的注释方式，使用\"/\\*\"开头，使用\"\\*/\"结束。\n* 使用类似JavaScript的注释方式，使用\"//\".\n* 两者的区别：前者会在编译的 css文件中显示，后者不会。\n### 数据类型\nSass 和 JavaScript 语言类似，也具有自己的数据类型，在 Sass 中包含以下几种数据类型：\n1. 数字: 如，1、 2、 13、 10px；\n2. 字符串：有引号字符串或无引号字符串，如，”foo” ‘bar’ baz；\n3. 颜色：如，blue, #04a3f9, rgba(255,0,0,0.5);\n4. 布尔型：如，true, false；\n5. 空值：如，null；\n6. 值列表：用空格或者逗号分开，如，1.5em 1em 0 2em , Helvetica, Arial, sans-serif；\n### 变量：通过$声明变量，变量有全局变量和局部变量的概念。\n```\n$brand-primary : darken(#428bca, 6.5%) !default;\n$btn-primary-color : #fff !default;\n$btn-primary-bg : $brand-primary !default;\n$btn-primary-border : darken($btn-primary-bg, 5%) !default;\n.btn-primary {\n   background-color: $btn-primary-bg;\n   color: $btn-primary-color;\n   border: 1px solid $btn-primary-border;\n}\n\n/* 局部变量 */\n$color: orange;\n.block {\n  color: $color;\n}\nem {\n  $color: red;\n  a {\n    color: $color;\n  }\n}\nspan {\n  color: $color;\n}\n\n```\n编译之后的结果\n```\n.block {\n  color: orange;\n}\nem a{\n    color: red;\n}\nspan {\n  color: orange;\n}\n```\n### 嵌套结构\n```\nnav {\n  a {\n    color: red;\n    header & {\n      color:green;\n    }\n  }  \n}\n\n.box {\n  border: {\n   top: 1px solid red;\n   bottom: 1px solid green;\n  }\n}\n\n.clearfix{\n  &:before,\n  &:after {\n    content:\"\";\n    display: table;\n  }\n  &:after {\n    clear:both;\n    overflow: hidden;\n  }\n}\n\n/* 但是也注意不可以无节制地嵌套，会加大浏览器的负担 */\n```\n### 混合宏\n混合宏类似于 js中的函数，用来实现某个特定的功能。一次定义之后可以方便的调用。通过@mixin定义混合宏，通过@include调用混合宏。**混合宏会产生亢余代码**。\n```\n/* 没有参数的混合宏可以省略() */\n@mixin border-radius{\n  -webkit-border-radius: 5px;\n  border-radius: 5px;\n}\nbutton{\n  @include border-radius;\n}\n/* 混合宏中传递参数 */\n@mixin center($width,$height){\n  width: $width;\n  height: $height;\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  margin-top: -($height) / 2;\n  margin-left: -($width) / 2;\n}\n.box-center {\n  @include center(500px,300px);\n}\n/* 混合宏中定义默认值 */\n@mixin border-radius($radius:5px){\n  -webkit-border-radius: $radius;\n  border-radius: $radius;\n}\n.nav{\n  @include border-radius;\n}\n.box{\n  @include border-radius(3px);\n}\n\n/* 混合宏一些更高级的使用 */\n@mixin box-shadow($shadows...){\n  @if length($shadows) >= 1 {\n    -webkit-box-shadow: $shadows;\n    box-shadow: $shadows;\n  } @else {\n    $shadows: 0 0 2px rgba(#000,.25);\n    -webkit-box-shadow: $shadow;\n    box-shadow: $shadow;\n  }\n}\n.box {\n  @include box-shadow(0 0 1px rgba(#000,.5),0 0 2px rgba(#000,.2));\n}\n```\n### 扩展/继承\n扩展/继承的作用类似于混合宏，优势是不会产生亢余代码，缺点是可以使用的情况不如混合宏常见，使用起来也不如混合宏灵活。\n```\n.btn {\n  border: 1px solid #ccc;\n  padding: 6px 10px;\n  font-size: 14px;\n}\n\n.btn-primary {\n  background-color: #f36;\n  color: #fff;\n  @extend .btn;\n}\n\n.btn-second {\n  background-color: orange;\n  color: #fff;\n  @extend .btn;\n}\n```\n### 占位符\n```\n%mt5 {\n  margin-top: 5px;\n}\n%pt5{\n  padding-top: 5px;\n}\n.btn {\n  @extend %mt5;\n  @extend %pt5;\n}\n```\n### 插值\nSass允许在#{}内部解析变量\n```\n$properties: (margin, padding);\n@mixin set-value($side, $value) {\n  @each $prop in $properties {\n    #{$prop}-#{$side}: $value;\n  }\n}\n.login-box {\n  @include set-value(top, 14px);\n}\n```\n### 运算\n```\n.box {\n  width: 20px + 8in;\n}\n$full-width: 960px;\n$sidebar-width: 200px;\n.content {\n  width: $full-width -  $sidebar-width;\n}\n.box {\n  width: 10px * 2;\n}\n.box {\n  width: (100px / 2);  \n}\np {\n  font: 10px/8px;             // 纯 CSS，不是除法运算\n  $width: 1000px;\n  width: $width/2;            // 使用了变量，是除法运算\n  width: round(1.5)/2;        // 使用了函数，是除法运算\n  height: (500px/2);          // 使用了圆括号，是除法运算\n  margin-left: 5px + 8px/2px; // 使用了加（+）号，是除法运算\n}\n.box {\n  width: ((220px + 720px) - 11 * 20 ) / 12 ;  \n}\np {\n  color: #010203 + #040506;\n  background-color: #010203 * 2;\n}\n\n$content: \"Hello\" + \"\" + \"Sass!\";\n.box:before {\n  content: \" #{$content} \";\n}\n```\n## Sass高级特性\n### @if\n```\n@mixin blockOrHidden($boolean:true) {\n  @if $boolean {\n    display: block;\n  }\n  @else {\n    display: none;\n  }\n}\n.block {\n  @include blockOrHidden;\n}\n.hidden{\n  @include blockOrHidden(false);\n}\n```\n### @for\n```\n@for $i from <start> through <end>\n@for $i from <start> to <end>\n@for $i from 1 through 3 {\n  .item-#{$i} { width: 2em * $i; }\n}\n@for $i from 1 to 3 {\n  .item-#{$i} { width: 2em * $i; }\n}\n```\n```\n$grid-prefix: span !default;\n$grid-width: 60px !default;\n$grid-gutter: 20px !default;\n\n%grid {\n  float: left;\n  margin-left: $grid-gutter / 2;\n  margin-right: $grid-gutter / 2;\n}\n@for $i from 1 through 12 {\n  .#{$grid-prefix}#{$i}{\n    width: $grid-width * $i + $grid-gutter * ($i - 1);\n    @extend %grid;\n  }  \n}\n```\n### @each\n```\n$list: adam john wynn mason kuroir; //$list 就是一个列表\n@mixin author-images {\n    @each $author in $list {\n        .photo-#{$author} {\n            background: url(\"/images/avatars/#{$author}.png\") no-repeat;\n        }\n    }\n}\n.author-bio {\n    @include author-images;\n}\n```\n## Sass中的函数\n```\n//自定义函数\n@function double($n) {\n  @return $n * 2;\n}\n#sidebar {\n  width: double(5px);\n}\n```\nSass中的内置函数\n* 字符串函数\n\t+ unquote\n\t+ quote\n\t+ To-upper-case\n\t+ To-lower-case\n\t+ percentage\n\t+ round\n\t+ ceil\n\t+ floor\n\t+ abs\n\t+ min\n\t+ max\n\t+ random\n* 列表函数\n\t- length  取列表数据的长度\n\t- nth  (10px 20px 30px, 1)\n\t- join  join(10px 20px, 30px 40px)\n\t- append  append(10px 20px ,30px)\n\t- zip  zip(1px 2px 3px,solid dashed dotted,green blue red)\n\t- index  index(1px solid red, solid)\n\t- type-of  type-of(100)\n\t- unit  取单位\n\t- unitless  判断一个值是否带有单位\n\t- comparable  判断两个数是否可以进行加减合并\n\t- if(true,1px,2px)\n* Maps函数\n\t+ map-get\n\t+ map-has-key\n\t+ map-keys\n\t+ map-values\n\t+ map-merge\n\t+ map-remove\n\t+ keywords\n```\n$map: (\n  $key1: value1,\n  $key2: value2,\n  $key3: value3\n)   \n\n$map: (\n  key1: value1,\n  key2: (\n    key-1: value-1,\n    key-2: value-2,\n  ),\nkey3: value3\n);\n\n$theme-color: (\n  default: (\n      bgcolor: #fff,\n      text-color: #444,\n      link-color: #39f\n  ),\n  primary:(\n      bgcolor: #000,\n      text-color:#fff,\n      link-color: #93f\n  ),\n  negative: (\n      bgcolor: #f36,\n      text-color: #fefefe,\n      link-color: #d4e\n  )\n);\n```\n```\n/* map-get */\n$social-colors: (\n  dribble: #ea4c89,\n  facebook: #3b5998,\n  github: #171515,\n  google: #db4437,\n  twitter: #55acee\n);\n.btn-dribble{\n  color: map-get($social-colors,facebook);\n}\n/* 没有值不会报错 */\n.btn-weibo{\n  font-size: 12px;\n  color: map-get($social-colors,weibo);\n}\n```\n```\n/* map中的容错函数 */\n   @function colors($color){\n     @if not map-has-key($social-colors,$color){\n         @warn \"No color found for `#{$color}` in $social-colors map. Property omitted.\";\n     }\n     @return map-get($social-colors,$color);\n   }\n   .btn-dribble {\n     color: colors(dribble);\n   }\n```\n```\n/* each 遍历 map */\n@each $name in map-keys($social-colors){\n  .btn-#{$name}{\n      color: colors($name);\n  }\n}\n@for $i from 1 through length(map-keys($social-colors)){\n  .btn-#{nth(map-keys($social-colors),$i)} {\n    color: colors(nth(map-keys($social-colors),$i));\n  }\n}\n\n/*得到所有的值*/\nmap-values($social-colors)\n```\n```\n$color: (\n  text: #f36,\n  link: #f63,\n  border: #ddd,\n  backround: #fff\n);\n$typo:(\n  font-size: 12px,\n  line-height: 1.6\n);\n$newcolor = map-merge($color, $typo);\n\n/* 得到新值 */\n$map:map-remove($social-colors,dribble);\n```\n* 颜色函数\n\t+ rgb\n\t+ rgba\n\t+ red\n\t+ green\n\t+ blue\n\t+ mix  混合两种颜色 第三个参数为第一种颜色的比例  mix(blue,red,20%)\n\t+ lighten  lighten(red, 20%);\n\t+ darken  darken(red,30%);\n\t+ saturate  改变颜色的饱和度 参数单位为百分比 saturate(blue,20%)\n\t+ desaturate\n\t+ adjust-hue  通过调整色相 adjust-hue(blue,30deg)\n\t+ grayscale  直接让饱和度为0  grayscale(blue);\n\t+ alpha  获取透明度\n\t+ opacity  获取透明度\n\t+ rgba\n\t+ opacify  增加透明度\n\t+ fade-in  增加透明度\n\t+ transparentize  减少透明度\n\t+ fade-out  减少透明度\n```\n<ul class=\"swatches red\">\n  <li></li>\n  ...      \n  <li></li>\n</ul>\n<ul class=\"swatches orange\">\n  <li></li>\n  …\n  <li></li>\n</ul>\n<ul class=\"swatches yellow\">\n  <li></li>\n  …\n  <li></li>\n</ul>\n<ul class=\"swatches green\">\n  <li></li>\n  …\n  <li></li>\n</ul>\n<ul class=\"swatches blue\">\n  <li></li>\n  …\n  <li></li>\n</ul>\n<ul class=\"swatches purple\">\n  <li></li>\n  …\n  <li></li>\n</ul>\n\n<style>\n$redBase: #DC143C;\n$orangeBase: saturate(lighten(adjust_hue($redBase, 39), 5), 7);//#f37a16\n$yellowBase: saturate(lighten(adjust_hue($redBase, 64), 6), 13);//#fbdc14\n$greenBase: desaturate(darken(adjust_hue($redBase, 102), 2), 11);//#73c620\n$blueBase: saturate(darken(adjust_hue($redBase, 201), 2), 1);//#12b7d4\n$purpleBase: saturate(darken(adjust_hue($redBase, 296), 2), 1);//#a012d4\n$blackBase: #777;\n$bgc: #fff;\n\n//定义颜色变暗的 mixin\n@mixin swatchesDarken($color) {\n  @for $i from 1 through 10 {\n    $x:$i+11;\n    li:nth-child(#{$x}) {\n      $n:$i*5;\n      $bgc:darken($color,$n); //颜色变暗\n      background-color: $bgc;\n      &:hover:before { //hover状态显示颜色编号\n        content: \"#{$bgc}\";\n        color: lighten($bgc,40);\n        font-family: verdana;\n        font-size: 8px;\n        padding: 2px;\n      }\n    }\n  }\n}\n//定义颜色变亮的 mixin\n@mixin swatchesLighten($color) {\n  @for $i from 1 through 10 {\n    $x:11-$i;\n    li:nth-child(#{$x}) {\n      $n:$i*5;\n      $bgc:lighten($color,$n);\n      background-color: $bgc;\n      &:hover:before {\n        content: \"#{$bgc}\";\n        color: darken($bgc,40);\n        font-family: verdana;\n        font-size: 8px;\n        padding: 2px;\n      }\n    }\n  }\n}\n\n.swatches li {    \n  width: 4.7619047619%;\n  float: left;\n  height: 60px;\n  list-style: none outside none;\n}\n\nul.red {\n  @include swatchesLighten($redBase);\n  @include swatchesDarken($redBase);\n  li:nth-child(11) {\n    background-color: $redBase;\n  }\n}\n\nul.orange {\n  @include swatchesLighten($orangeBase);\n  @include swatchesDarken($orangeBase);\n  li:nth-child(11) {\n    background-color: $orangeBase;\n  }\n}\n\nul.yellow {\n  @include swatchesLighten($yellowBase);\n  @include swatchesDarken($yellowBase);\n  li:nth-child(11) {\n    background-color: $yellowBase;\n  }\n}\n\nul.green {\n  @include swatchesLighten($greenBase);\n  @include swatchesDarken($greenBase);\n  li:nth-child(11) {\n    background-color: $greenBase;\n  }\n}\n\nul.blue {\n  @include swatchesLighten($blueBase);\n  @include swatchesDarken($blueBase);\n  li:nth-child(11) {\n    background-color: $blueBase;\n  }\n}\n\nul.purple {\n  @include swatchesLighten($purpleBase);\n  @include swatchesDarken($purpleBase);\n  li:nth-child(11) {\n    background-color: $purpleBase;\n  }\n}\n\nul.black {\n  @include swatchesLighten($blackBase);\n  @include swatchesDarken($blackBase);\n  li:nth-child(11) {\n    background-color: $blackBase;\n  }\n}\n</style>\n```\n## Sass的@规则\n* @import\n* @media\n```\n.sidebar {\n  width: 300px;\n  @media screen and (orientation: landscape) {\n    width: 500px;\n  }\n}\n@media screen {\n  .sidebar {\n    @media (orientation: landscape) {\n      width: 500px;\n    }\n  }\n}\n\n$media: screen;\n$feature: -webkit-min-device-pixel-ratio;\n$value: 1.5;\n\n@media #{$media} and ($feature: $value) {\n  .sidebar {\n    width: 500px;\n  }\n}\n```\n* @extend\n* @at-root\n* @debug\n* @warn\n* @error\n* @content\n```\n$small : 750px;\n@mixin  onsmall {\n  @media  only screen and (max-width: $small){\n    @content;\n  }\n}\n\n.navbar-content{\n  max-width:980px;\n  @include onsmall {\n    min-width:320px;\n  }\n}\n```\n## 最后附上一个rem的例子\n```\n//以750px( iphone6 )为基准定义其他分辨率下的rem\n@mixin useRem($size){\n  $device-list : 320px, 375px , 414px;\n  html{\n    @each $device in $device-list{\n      @media screen and (min-width: $device){\n        font-size: 100px * ($device/$size);\n      }\n    }\n  }\n}\n@include useRem(750px);\n```","slug":"使用SASS","published":1,"updated":"2019-09-29T11:22:34.499Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck3jm8gxk004dz0bty1yndomt","content":"<h2 id=\"Sass简介\"><a href=\"#Sass简介\" class=\"headerlink\" title=\"Sass简介\"></a>Sass简介</h2><p>Sass 是一种css预处理器,CSS 预处理器定义了一种新的语言，其基本思想是，用一种专门的编程语言，为 CSS 增加了一些编程的特性，将 CSS 作为目标生成文件，然后开发者就只要使用这种语言进行编码工作，减少工作量。<br>除了Sass 还有一些其他常见的预处理语言</p>\n<ul>\n<li><a href=\"http://lesscss.cn/\" target=\"_blank\" rel=\"noopener\">Less</a></li>\n<li><a href=\"http://www.zhangxinxu.com/jq/stylus/\" target=\"_blank\" rel=\"noopener\">Stylus</a></li>\n</ul>\n<p>Sass 有时候也被称为 Scss,两者之间不同之处有以下两点：</p>\n<ul>\n<li>文件扩展名不同，Sass 是以“.sass”后缀为扩展名，而 SCSS 是以“.scss”后缀为扩展名</li>\n<li>语法书写方式不同，Sass 是以严格的缩进式语法规则来书写，不带大括号({})和分号(;)，类似于Stylus；而 SCSS 的语法书类似于常规的 CSS。  </li>\n</ul>\n<p>来看一个示例：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/* Sass 语法 */</span><br><span class=\"line\">$font-stack: Helvetica, sans-serif</span><br><span class=\"line\">$primary-color: #333</span><br><span class=\"line\">body</span><br><span class=\"line\">  font: 100% $font-stack</span><br><span class=\"line\">  color: $primary-color</span><br><span class=\"line\">  </span><br><span class=\"line\">/* Scss 语法 */</span><br><span class=\"line\">$font-stack: Helvetica, sans-serif;</span><br><span class=\"line\">$primary-color: #333;</span><br><span class=\"line\">body &#123;</span><br><span class=\"line\">  font: 100% $font-stack;</span><br><span class=\"line\">  color: $primary-color;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>以上俩段编译的结果是同样的结果<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">body &#123;</span><br><span class=\"line\">  font: 100% Helvetica, sans-serif;</span><br><span class=\"line\">  color: #333;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"Sass-安装\"><a href=\"#Sass-安装\" class=\"headerlink\" title=\"Sass 安装\"></a>Sass 安装</h2><p>首先需要安装 <a href=\"https://nodejs.org/en/\" target=\"_blank\" rel=\"noopener\">NodeJs</a>，通过命令行安装：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install -g node-sass</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"Sass使用\"><a href=\"#Sass使用\" class=\"headerlink\" title=\"Sass使用\"></a>Sass使用</h2><p>通过以下命令行监测 sourceFile.scss，将文件转变成 focusFile.css<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">node-sass -w sourceFile.scss focusFile.css</span><br></pre></td></tr></table></figure></p>\n<p>顺带一提，如果你使用的是 <a href=\"http://www.jetbrains.com/webstorm/\" target=\"_blank\" rel=\"noopener\">webstorm</a>，可以通过配置IDE的 Settings – Tools – File Watchers实现文件的监听，省去命令行的过程。这个不是这篇文章的重点，有意向的请自行 Google。<br>node-sass 参数<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">-w, --watch                Watch a directory or file</span><br><span class=\"line\">-r, --recursive            Recursively watch directories or files</span><br><span class=\"line\">-o, --output               Output directory</span><br><span class=\"line\">-x, --omit-source-map-url  Omit source map URL comment from output</span><br><span class=\"line\">-i, --indented-syntax      Treat data from stdin as sass code (versus scss)</span><br><span class=\"line\">-q, --quiet                Suppress log output except on error</span><br><span class=\"line\">-v, --version              Prints version info</span><br><span class=\"line\">--output-style             CSS output style (nested | expanded | compact | compressed)</span><br><span class=\"line\">--indent-type              Indent type for output CSS (space | tab)</span><br><span class=\"line\">--indent-width             Indent width; number of spaces or tabs (maximum value: 10)</span><br><span class=\"line\">--linefeed                 Linefeed style (cr | crlf | lf | lfcr)</span><br><span class=\"line\">--source-comments          Include debug info in output</span><br><span class=\"line\">--source-map               Emit source map</span><br><span class=\"line\">--source-map-contents      Embed include contents in map</span><br><span class=\"line\">--source-map-embed         Embed sourceMappingUrl as data URI</span><br><span class=\"line\">--source-map-root          Base path, will be emitted in source-map as is</span><br><span class=\"line\">--include-path             Path to look for imported files</span><br><span class=\"line\">--follow                   Follow symlinked directories</span><br><span class=\"line\">--precision                The amount of precision allowed in decimal numbers</span><br><span class=\"line\">--importer                 Path to .js file containing custom importer</span><br><span class=\"line\">--functions                Path to .js file containing custom functions</span><br><span class=\"line\">--help                     Print usage info</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"Sass基本特性\"><a href=\"#Sass基本特性\" class=\"headerlink\" title=\"Sass基本特性\"></a>Sass基本特性</h2><h3 id=\"注释\"><a href=\"#注释\" class=\"headerlink\" title=\"注释\"></a>注释</h3><ul>\n<li>使用类似 css的注释方式，使用”/*“开头，使用”*/“结束。</li>\n<li>使用类似JavaScript的注释方式，使用”//“.</li>\n<li>两者的区别：前者会在编译的 css文件中显示，后者不会。<h3 id=\"数据类型\"><a href=\"#数据类型\" class=\"headerlink\" title=\"数据类型\"></a>数据类型</h3>Sass 和 JavaScript 语言类似，也具有自己的数据类型，在 Sass 中包含以下几种数据类型：</li>\n</ul>\n<ol>\n<li>数字: 如，1、 2、 13、 10px；</li>\n<li>字符串：有引号字符串或无引号字符串，如，”foo” ‘bar’ baz；</li>\n<li>颜色：如，blue, #04a3f9, rgba(255,0,0,0.5);</li>\n<li>布尔型：如，true, false；</li>\n<li>空值：如，null；</li>\n<li>值列表：用空格或者逗号分开，如，1.5em 1em 0 2em , Helvetica, Arial, sans-serif；<h3 id=\"变量：通过-声明变量，变量有全局变量和局部变量的概念。\"><a href=\"#变量：通过-声明变量，变量有全局变量和局部变量的概念。\" class=\"headerlink\" title=\"变量：通过$声明变量，变量有全局变量和局部变量的概念。\"></a>变量：通过$声明变量，变量有全局变量和局部变量的概念。</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$brand-primary : darken(#428bca, 6.5%) !default;</span><br><span class=\"line\">$btn-primary-color : #fff !default;</span><br><span class=\"line\">$btn-primary-bg : $brand-primary !default;</span><br><span class=\"line\">$btn-primary-border : darken($btn-primary-bg, 5%) !default;</span><br><span class=\"line\">.btn-primary &#123;</span><br><span class=\"line\">   background-color: $btn-primary-bg;</span><br><span class=\"line\">   color: $btn-primary-color;</span><br><span class=\"line\">   border: 1px solid $btn-primary-border;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">/* 局部变量 */</span><br><span class=\"line\">$color: orange;</span><br><span class=\"line\">.block &#123;</span><br><span class=\"line\">  color: $color;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">em &#123;</span><br><span class=\"line\">  $color: red;</span><br><span class=\"line\">  a &#123;</span><br><span class=\"line\">    color: $color;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">span &#123;</span><br><span class=\"line\">  color: $color;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<p>编译之后的结果<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">.block &#123;</span><br><span class=\"line\">  color: orange;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">em a&#123;</span><br><span class=\"line\">    color: red;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">span &#123;</span><br><span class=\"line\">  color: orange;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"嵌套结构\"><a href=\"#嵌套结构\" class=\"headerlink\" title=\"嵌套结构\"></a>嵌套结构</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">nav &#123;</span><br><span class=\"line\">  a &#123;</span><br><span class=\"line\">    color: red;</span><br><span class=\"line\">    header &amp; &#123;</span><br><span class=\"line\">      color:green;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;  </span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">.box &#123;</span><br><span class=\"line\">  border: &#123;</span><br><span class=\"line\">   top: 1px solid red;</span><br><span class=\"line\">   bottom: 1px solid green;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">.clearfix&#123;</span><br><span class=\"line\">  &amp;:before,</span><br><span class=\"line\">  &amp;:after &#123;</span><br><span class=\"line\">    content:&quot;&quot;;</span><br><span class=\"line\">    display: table;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  &amp;:after &#123;</span><br><span class=\"line\">    clear:both;</span><br><span class=\"line\">    overflow: hidden;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">/* 但是也注意不可以无节制地嵌套，会加大浏览器的负担 */</span><br></pre></td></tr></table></figure>\n<h3 id=\"混合宏\"><a href=\"#混合宏\" class=\"headerlink\" title=\"混合宏\"></a>混合宏</h3><p>混合宏类似于 js中的函数，用来实现某个特定的功能。一次定义之后可以方便的调用。通过@mixin定义混合宏，通过@include调用混合宏。<strong>混合宏会产生亢余代码</strong>。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/* 没有参数的混合宏可以省略() */</span><br><span class=\"line\">@mixin border-radius&#123;</span><br><span class=\"line\">  -webkit-border-radius: 5px;</span><br><span class=\"line\">  border-radius: 5px;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">button&#123;</span><br><span class=\"line\">  @include border-radius;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">/* 混合宏中传递参数 */</span><br><span class=\"line\">@mixin center($width,$height)&#123;</span><br><span class=\"line\">  width: $width;</span><br><span class=\"line\">  height: $height;</span><br><span class=\"line\">  position: absolute;</span><br><span class=\"line\">  top: 50%;</span><br><span class=\"line\">  left: 50%;</span><br><span class=\"line\">  margin-top: -($height) / 2;</span><br><span class=\"line\">  margin-left: -($width) / 2;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">.box-center &#123;</span><br><span class=\"line\">  @include center(500px,300px);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">/* 混合宏中定义默认值 */</span><br><span class=\"line\">@mixin border-radius($radius:5px)&#123;</span><br><span class=\"line\">  -webkit-border-radius: $radius;</span><br><span class=\"line\">  border-radius: $radius;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">.nav&#123;</span><br><span class=\"line\">  @include border-radius;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">.box&#123;</span><br><span class=\"line\">  @include border-radius(3px);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">/* 混合宏一些更高级的使用 */</span><br><span class=\"line\">@mixin box-shadow($shadows...)&#123;</span><br><span class=\"line\">  @if length($shadows) &gt;= 1 &#123;</span><br><span class=\"line\">    -webkit-box-shadow: $shadows;</span><br><span class=\"line\">    box-shadow: $shadows;</span><br><span class=\"line\">  &#125; @else &#123;</span><br><span class=\"line\">    $shadows: 0 0 2px rgba(#000,.25);</span><br><span class=\"line\">    -webkit-box-shadow: $shadow;</span><br><span class=\"line\">    box-shadow: $shadow;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">.box &#123;</span><br><span class=\"line\">  @include box-shadow(0 0 1px rgba(#000,.5),0 0 2px rgba(#000,.2));</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"扩展-继承\"><a href=\"#扩展-继承\" class=\"headerlink\" title=\"扩展/继承\"></a>扩展/继承</h3><p>扩展/继承的作用类似于混合宏，优势是不会产生亢余代码，缺点是可以使用的情况不如混合宏常见，使用起来也不如混合宏灵活。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">.btn &#123;</span><br><span class=\"line\">  border: 1px solid #ccc;</span><br><span class=\"line\">  padding: 6px 10px;</span><br><span class=\"line\">  font-size: 14px;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">.btn-primary &#123;</span><br><span class=\"line\">  background-color: #f36;</span><br><span class=\"line\">  color: #fff;</span><br><span class=\"line\">  @extend .btn;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">.btn-second &#123;</span><br><span class=\"line\">  background-color: orange;</span><br><span class=\"line\">  color: #fff;</span><br><span class=\"line\">  @extend .btn;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"占位符\"><a href=\"#占位符\" class=\"headerlink\" title=\"占位符\"></a>占位符</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">%mt5 &#123;</span><br><span class=\"line\">  margin-top: 5px;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">%pt5&#123;</span><br><span class=\"line\">  padding-top: 5px;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">.btn &#123;</span><br><span class=\"line\">  @extend %mt5;</span><br><span class=\"line\">  @extend %pt5;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"插值\"><a href=\"#插值\" class=\"headerlink\" title=\"插值\"></a>插值</h3><p>Sass允许在#{}内部解析变量<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$properties: (margin, padding);</span><br><span class=\"line\">@mixin set-value($side, $value) &#123;</span><br><span class=\"line\">  @each $prop in $properties &#123;</span><br><span class=\"line\">    #&#123;$prop&#125;-#&#123;$side&#125;: $value;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">.login-box &#123;</span><br><span class=\"line\">  @include set-value(top, 14px);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"运算\"><a href=\"#运算\" class=\"headerlink\" title=\"运算\"></a>运算</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">.box &#123;</span><br><span class=\"line\">  width: 20px + 8in;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">$full-width: 960px;</span><br><span class=\"line\">$sidebar-width: 200px;</span><br><span class=\"line\">.content &#123;</span><br><span class=\"line\">  width: $full-width -  $sidebar-width;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">.box &#123;</span><br><span class=\"line\">  width: 10px * 2;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">.box &#123;</span><br><span class=\"line\">  width: (100px / 2);  </span><br><span class=\"line\">&#125;</span><br><span class=\"line\">p &#123;</span><br><span class=\"line\">  font: 10px/8px;             // 纯 CSS，不是除法运算</span><br><span class=\"line\">  $width: 1000px;</span><br><span class=\"line\">  width: $width/2;            // 使用了变量，是除法运算</span><br><span class=\"line\">  width: round(1.5)/2;        // 使用了函数，是除法运算</span><br><span class=\"line\">  height: (500px/2);          // 使用了圆括号，是除法运算</span><br><span class=\"line\">  margin-left: 5px + 8px/2px; // 使用了加（+）号，是除法运算</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">.box &#123;</span><br><span class=\"line\">  width: ((220px + 720px) - 11 * 20 ) / 12 ;  </span><br><span class=\"line\">&#125;</span><br><span class=\"line\">p &#123;</span><br><span class=\"line\">  color: #010203 + #040506;</span><br><span class=\"line\">  background-color: #010203 * 2;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">$content: &quot;Hello&quot; + &quot;&quot; + &quot;Sass!&quot;;</span><br><span class=\"line\">.box:before &#123;</span><br><span class=\"line\">  content: &quot; #&#123;$content&#125; &quot;;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"Sass高级特性\"><a href=\"#Sass高级特性\" class=\"headerlink\" title=\"Sass高级特性\"></a>Sass高级特性</h2><h3 id=\"if\"><a href=\"#if\" class=\"headerlink\" title=\"@if\"></a>@if</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">@mixin blockOrHidden($boolean:true) &#123;</span><br><span class=\"line\">  @if $boolean &#123;</span><br><span class=\"line\">    display: block;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  @else &#123;</span><br><span class=\"line\">    display: none;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">.block &#123;</span><br><span class=\"line\">  @include blockOrHidden;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">.hidden&#123;</span><br><span class=\"line\">  @include blockOrHidden(false);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"for\"><a href=\"#for\" class=\"headerlink\" title=\"@for\"></a>@for</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">@for $i from &lt;start&gt; through &lt;end&gt;</span><br><span class=\"line\">@for $i from &lt;start&gt; to &lt;end&gt;</span><br><span class=\"line\">@for $i from 1 through 3 &#123;</span><br><span class=\"line\">  .item-#&#123;$i&#125; &#123; width: 2em * $i; &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">@for $i from 1 to 3 &#123;</span><br><span class=\"line\">  .item-#&#123;$i&#125; &#123; width: 2em * $i; &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$grid-prefix: span !default;</span><br><span class=\"line\">$grid-width: 60px !default;</span><br><span class=\"line\">$grid-gutter: 20px !default;</span><br><span class=\"line\"></span><br><span class=\"line\">%grid &#123;</span><br><span class=\"line\">  float: left;</span><br><span class=\"line\">  margin-left: $grid-gutter / 2;</span><br><span class=\"line\">  margin-right: $grid-gutter / 2;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">@for $i from 1 through 12 &#123;</span><br><span class=\"line\">  .#&#123;$grid-prefix&#125;#&#123;$i&#125;&#123;</span><br><span class=\"line\">    width: $grid-width * $i + $grid-gutter * ($i - 1);</span><br><span class=\"line\">    @extend %grid;</span><br><span class=\"line\">  &#125;  </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"each\"><a href=\"#each\" class=\"headerlink\" title=\"@each\"></a>@each</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$list: adam john wynn mason kuroir; //$list 就是一个列表</span><br><span class=\"line\">@mixin author-images &#123;</span><br><span class=\"line\">    @each $author in $list &#123;</span><br><span class=\"line\">        .photo-#&#123;$author&#125; &#123;</span><br><span class=\"line\">            background: url(&quot;/images/avatars/#&#123;$author&#125;.png&quot;) no-repeat;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">.author-bio &#123;</span><br><span class=\"line\">    @include author-images;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"Sass中的函数\"><a href=\"#Sass中的函数\" class=\"headerlink\" title=\"Sass中的函数\"></a>Sass中的函数</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">//自定义函数</span><br><span class=\"line\">@function double($n) &#123;</span><br><span class=\"line\">  @return $n * 2;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">#sidebar &#123;</span><br><span class=\"line\">  width: double(5px);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>Sass中的内置函数</p>\n<ul>\n<li>字符串函数<ul>\n<li>unquote</li>\n<li>quote</li>\n<li>To-upper-case</li>\n<li>To-lower-case</li>\n<li>percentage</li>\n<li>round</li>\n<li>ceil</li>\n<li>floor</li>\n<li>abs</li>\n<li>min</li>\n<li>max</li>\n<li>random</li>\n</ul>\n</li>\n<li>列表函数<ul>\n<li>length  取列表数据的长度</li>\n<li>nth  (10px 20px 30px, 1)</li>\n<li>join  join(10px 20px, 30px 40px)</li>\n<li>append  append(10px 20px ,30px)</li>\n<li>zip  zip(1px 2px 3px,solid dashed dotted,green blue red)</li>\n<li>index  index(1px solid red, solid)</li>\n<li>type-of  type-of(100)</li>\n<li>unit  取单位</li>\n<li>unitless  判断一个值是否带有单位</li>\n<li>comparable  判断两个数是否可以进行加减合并</li>\n<li>if(true,1px,2px)</li>\n</ul>\n</li>\n<li>Maps函数<ul>\n<li>map-get</li>\n<li>map-has-key</li>\n<li>map-keys</li>\n<li>map-values</li>\n<li>map-merge</li>\n<li>map-remove</li>\n<li>keywords<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$map: (</span><br><span class=\"line\">  $key1: value1,</span><br><span class=\"line\">  $key2: value2,</span><br><span class=\"line\">  $key3: value3</span><br><span class=\"line\">)   </span><br><span class=\"line\"></span><br><span class=\"line\">$map: (</span><br><span class=\"line\">  key1: value1,</span><br><span class=\"line\">  key2: (</span><br><span class=\"line\">    key-1: value-1,</span><br><span class=\"line\">    key-2: value-2,</span><br><span class=\"line\">  ),</span><br><span class=\"line\">key3: value3</span><br><span class=\"line\">);</span><br><span class=\"line\"></span><br><span class=\"line\">$theme-color: (</span><br><span class=\"line\">  default: (</span><br><span class=\"line\">      bgcolor: #fff,</span><br><span class=\"line\">      text-color: #444,</span><br><span class=\"line\">      link-color: #39f</span><br><span class=\"line\">  ),</span><br><span class=\"line\">  primary:(</span><br><span class=\"line\">      bgcolor: #000,</span><br><span class=\"line\">      text-color:#fff,</span><br><span class=\"line\">      link-color: #93f</span><br><span class=\"line\">  ),</span><br><span class=\"line\">  negative: (</span><br><span class=\"line\">      bgcolor: #f36,</span><br><span class=\"line\">      text-color: #fefefe,</span><br><span class=\"line\">      link-color: #d4e</span><br><span class=\"line\">  )</span><br><span class=\"line\">);</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/* map-get */</span><br><span class=\"line\">$social-colors: (</span><br><span class=\"line\">  dribble: #ea4c89,</span><br><span class=\"line\">  facebook: #3b5998,</span><br><span class=\"line\">  github: #171515,</span><br><span class=\"line\">  google: #db4437,</span><br><span class=\"line\">  twitter: #55acee</span><br><span class=\"line\">);</span><br><span class=\"line\">.btn-dribble&#123;</span><br><span class=\"line\">  color: map-get($social-colors,facebook);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">/* 没有值不会报错 */</span><br><span class=\"line\">.btn-weibo&#123;</span><br><span class=\"line\">  font-size: 12px;</span><br><span class=\"line\">  color: map-get($social-colors,weibo);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/* map中的容错函数 */</span><br><span class=\"line\">   @function colors($color)&#123;</span><br><span class=\"line\">     @if not map-has-key($social-colors,$color)&#123;</span><br><span class=\"line\">         @warn &quot;No color found for `#&#123;$color&#125;` in $social-colors map. Property omitted.&quot;;</span><br><span class=\"line\">     &#125;</span><br><span class=\"line\">     @return map-get($social-colors,$color);</span><br><span class=\"line\">   &#125;</span><br><span class=\"line\">   .btn-dribble &#123;</span><br><span class=\"line\">     color: colors(dribble);</span><br><span class=\"line\">   &#125;</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/* each 遍历 map */</span><br><span class=\"line\">@each $name in map-keys($social-colors)&#123;</span><br><span class=\"line\">  .btn-#&#123;$name&#125;&#123;</span><br><span class=\"line\">      color: colors($name);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">@for $i from 1 through length(map-keys($social-colors))&#123;</span><br><span class=\"line\">  .btn-#&#123;nth(map-keys($social-colors),$i)&#125; &#123;</span><br><span class=\"line\">    color: colors(nth(map-keys($social-colors),$i));</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">/*得到所有的值*/</span><br><span class=\"line\">map-values($social-colors)</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$color: (</span><br><span class=\"line\">  text: #f36,</span><br><span class=\"line\">  link: #f63,</span><br><span class=\"line\">  border: #ddd,</span><br><span class=\"line\">  backround: #fff</span><br><span class=\"line\">);</span><br><span class=\"line\">$typo:(</span><br><span class=\"line\">  font-size: 12px,</span><br><span class=\"line\">  line-height: 1.6</span><br><span class=\"line\">);</span><br><span class=\"line\">$newcolor = map-merge($color, $typo);</span><br><span class=\"line\"></span><br><span class=\"line\">/* 得到新值 */</span><br><span class=\"line\">$map:map-remove($social-colors,dribble);</span><br></pre></td></tr></table></figure>\n<ul>\n<li>颜色函数<ul>\n<li>rgb</li>\n<li>rgba</li>\n<li>red</li>\n<li>green</li>\n<li>blue</li>\n<li>mix  混合两种颜色 第三个参数为第一种颜色的比例  mix(blue,red,20%)</li>\n<li>lighten  lighten(red, 20%);</li>\n<li>darken  darken(red,30%);</li>\n<li>saturate  改变颜色的饱和度 参数单位为百分比 saturate(blue,20%)</li>\n<li>desaturate</li>\n<li>adjust-hue  通过调整色相 adjust-hue(blue,30deg)</li>\n<li>grayscale  直接让饱和度为0  grayscale(blue);</li>\n<li>alpha  获取透明度</li>\n<li>opacity  获取透明度</li>\n<li>rgba</li>\n<li>opacify  增加透明度</li>\n<li>fade-in  增加透明度</li>\n<li>transparentize  减少透明度</li>\n<li>fade-out  减少透明度<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;ul class=&quot;swatches red&quot;&gt;</span><br><span class=\"line\">  &lt;li&gt;&lt;/li&gt;</span><br><span class=\"line\">  ...      </span><br><span class=\"line\">  &lt;li&gt;&lt;/li&gt;</span><br><span class=\"line\">&lt;/ul&gt;</span><br><span class=\"line\">&lt;ul class=&quot;swatches orange&quot;&gt;</span><br><span class=\"line\">  &lt;li&gt;&lt;/li&gt;</span><br><span class=\"line\">  …</span><br><span class=\"line\">  &lt;li&gt;&lt;/li&gt;</span><br><span class=\"line\">&lt;/ul&gt;</span><br><span class=\"line\">&lt;ul class=&quot;swatches yellow&quot;&gt;</span><br><span class=\"line\">  &lt;li&gt;&lt;/li&gt;</span><br><span class=\"line\">  …</span><br><span class=\"line\">  &lt;li&gt;&lt;/li&gt;</span><br><span class=\"line\">&lt;/ul&gt;</span><br><span class=\"line\">&lt;ul class=&quot;swatches green&quot;&gt;</span><br><span class=\"line\">  &lt;li&gt;&lt;/li&gt;</span><br><span class=\"line\">  …</span><br><span class=\"line\">  &lt;li&gt;&lt;/li&gt;</span><br><span class=\"line\">&lt;/ul&gt;</span><br><span class=\"line\">&lt;ul class=&quot;swatches blue&quot;&gt;</span><br><span class=\"line\">  &lt;li&gt;&lt;/li&gt;</span><br><span class=\"line\">  …</span><br><span class=\"line\">  &lt;li&gt;&lt;/li&gt;</span><br><span class=\"line\">&lt;/ul&gt;</span><br><span class=\"line\">&lt;ul class=&quot;swatches purple&quot;&gt;</span><br><span class=\"line\">  &lt;li&gt;&lt;/li&gt;</span><br><span class=\"line\">  …</span><br><span class=\"line\">  &lt;li&gt;&lt;/li&gt;</span><br><span class=\"line\">&lt;/ul&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;style&gt;</span><br><span class=\"line\">$redBase: #DC143C;</span><br><span class=\"line\">$orangeBase: saturate(lighten(adjust_hue($redBase, 39), 5), 7);//#f37a16</span><br><span class=\"line\">$yellowBase: saturate(lighten(adjust_hue($redBase, 64), 6), 13);//#fbdc14</span><br><span class=\"line\">$greenBase: desaturate(darken(adjust_hue($redBase, 102), 2), 11);//#73c620</span><br><span class=\"line\">$blueBase: saturate(darken(adjust_hue($redBase, 201), 2), 1);//#12b7d4</span><br><span class=\"line\">$purpleBase: saturate(darken(adjust_hue($redBase, 296), 2), 1);//#a012d4</span><br><span class=\"line\">$blackBase: #777;</span><br><span class=\"line\">$bgc: #fff;</span><br><span class=\"line\"></span><br><span class=\"line\">//定义颜色变暗的 mixin</span><br><span class=\"line\">@mixin swatchesDarken($color) &#123;</span><br><span class=\"line\">  @for $i from 1 through 10 &#123;</span><br><span class=\"line\">    $x:$i+11;</span><br><span class=\"line\">    li:nth-child(#&#123;$x&#125;) &#123;</span><br><span class=\"line\">      $n:$i*5;</span><br><span class=\"line\">      $bgc:darken($color,$n); //颜色变暗</span><br><span class=\"line\">      background-color: $bgc;</span><br><span class=\"line\">      &amp;:hover:before &#123; //hover状态显示颜色编号</span><br><span class=\"line\">        content: &quot;#&#123;$bgc&#125;&quot;;</span><br><span class=\"line\">        color: lighten($bgc,40);</span><br><span class=\"line\">        font-family: verdana;</span><br><span class=\"line\">        font-size: 8px;</span><br><span class=\"line\">        padding: 2px;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">//定义颜色变亮的 mixin</span><br><span class=\"line\">@mixin swatchesLighten($color) &#123;</span><br><span class=\"line\">  @for $i from 1 through 10 &#123;</span><br><span class=\"line\">    $x:11-$i;</span><br><span class=\"line\">    li:nth-child(#&#123;$x&#125;) &#123;</span><br><span class=\"line\">      $n:$i*5;</span><br><span class=\"line\">      $bgc:lighten($color,$n);</span><br><span class=\"line\">      background-color: $bgc;</span><br><span class=\"line\">      &amp;:hover:before &#123;</span><br><span class=\"line\">        content: &quot;#&#123;$bgc&#125;&quot;;</span><br><span class=\"line\">        color: darken($bgc,40);</span><br><span class=\"line\">        font-family: verdana;</span><br><span class=\"line\">        font-size: 8px;</span><br><span class=\"line\">        padding: 2px;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">.swatches li &#123;    </span><br><span class=\"line\">  width: 4.7619047619%;</span><br><span class=\"line\">  float: left;</span><br><span class=\"line\">  height: 60px;</span><br><span class=\"line\">  list-style: none outside none;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">ul.red &#123;</span><br><span class=\"line\">  @include swatchesLighten($redBase);</span><br><span class=\"line\">  @include swatchesDarken($redBase);</span><br><span class=\"line\">  li:nth-child(11) &#123;</span><br><span class=\"line\">    background-color: $redBase;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">ul.orange &#123;</span><br><span class=\"line\">  @include swatchesLighten($orangeBase);</span><br><span class=\"line\">  @include swatchesDarken($orangeBase);</span><br><span class=\"line\">  li:nth-child(11) &#123;</span><br><span class=\"line\">    background-color: $orangeBase;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">ul.yellow &#123;</span><br><span class=\"line\">  @include swatchesLighten($yellowBase);</span><br><span class=\"line\">  @include swatchesDarken($yellowBase);</span><br><span class=\"line\">  li:nth-child(11) &#123;</span><br><span class=\"line\">    background-color: $yellowBase;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">ul.green &#123;</span><br><span class=\"line\">  @include swatchesLighten($greenBase);</span><br><span class=\"line\">  @include swatchesDarken($greenBase);</span><br><span class=\"line\">  li:nth-child(11) &#123;</span><br><span class=\"line\">    background-color: $greenBase;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">ul.blue &#123;</span><br><span class=\"line\">  @include swatchesLighten($blueBase);</span><br><span class=\"line\">  @include swatchesDarken($blueBase);</span><br><span class=\"line\">  li:nth-child(11) &#123;</span><br><span class=\"line\">    background-color: $blueBase;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">ul.purple &#123;</span><br><span class=\"line\">  @include swatchesLighten($purpleBase);</span><br><span class=\"line\">  @include swatchesDarken($purpleBase);</span><br><span class=\"line\">  li:nth-child(11) &#123;</span><br><span class=\"line\">    background-color: $purpleBase;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">ul.black &#123;</span><br><span class=\"line\">  @include swatchesLighten($blackBase);</span><br><span class=\"line\">  @include swatchesDarken($blackBase);</span><br><span class=\"line\">  li:nth-child(11) &#123;</span><br><span class=\"line\">    background-color: $blackBase;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">&lt;/style&gt;</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"Sass的-规则\"><a href=\"#Sass的-规则\" class=\"headerlink\" title=\"Sass的@规则\"></a>Sass的@规则</h2><ul>\n<li>@import</li>\n<li><p>@media</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">.sidebar &#123;</span><br><span class=\"line\">  width: 300px;</span><br><span class=\"line\">  @media screen and (orientation: landscape) &#123;</span><br><span class=\"line\">    width: 500px;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">@media screen &#123;</span><br><span class=\"line\">  .sidebar &#123;</span><br><span class=\"line\">    @media (orientation: landscape) &#123;</span><br><span class=\"line\">      width: 500px;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">$media: screen;</span><br><span class=\"line\">$feature: -webkit-min-device-pixel-ratio;</span><br><span class=\"line\">$value: 1.5;</span><br><span class=\"line\"></span><br><span class=\"line\">@media #&#123;$media&#125; and ($feature: $value) &#123;</span><br><span class=\"line\">  .sidebar &#123;</span><br><span class=\"line\">    width: 500px;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>@extend</p>\n</li>\n<li>@at-root</li>\n<li>@debug</li>\n<li>@warn</li>\n<li>@error</li>\n<li>@content<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$small : 750px;</span><br><span class=\"line\">@mixin  onsmall &#123;</span><br><span class=\"line\">  @media  only screen and (max-width: $small)&#123;</span><br><span class=\"line\">    @content;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">.navbar-content&#123;</span><br><span class=\"line\">  max-width:980px;</span><br><span class=\"line\">  @include onsmall &#123;</span><br><span class=\"line\">    min-width:320px;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<h2 id=\"最后附上一个rem的例子\"><a href=\"#最后附上一个rem的例子\" class=\"headerlink\" title=\"最后附上一个rem的例子\"></a>最后附上一个rem的例子</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">//以750px( iphone6 )为基准定义其他分辨率下的rem</span><br><span class=\"line\">@mixin useRem($size)&#123;</span><br><span class=\"line\">  $device-list : 320px, 375px , 414px;</span><br><span class=\"line\">  html&#123;</span><br><span class=\"line\">    @each $device in $device-list&#123;</span><br><span class=\"line\">      @media screen and (min-width: $device)&#123;</span><br><span class=\"line\">        font-size: 100px * ($device/$size);</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">@include useRem(750px);</span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"","more":"<h2 id=\"Sass简介\"><a href=\"#Sass简介\" class=\"headerlink\" title=\"Sass简介\"></a>Sass简介</h2><p>Sass 是一种css预处理器,CSS 预处理器定义了一种新的语言，其基本思想是，用一种专门的编程语言，为 CSS 增加了一些编程的特性，将 CSS 作为目标生成文件，然后开发者就只要使用这种语言进行编码工作，减少工作量。<br>除了Sass 还有一些其他常见的预处理语言</p>\n<ul>\n<li><a href=\"http://lesscss.cn/\" target=\"_blank\" rel=\"noopener\">Less</a></li>\n<li><a href=\"http://www.zhangxinxu.com/jq/stylus/\" target=\"_blank\" rel=\"noopener\">Stylus</a></li>\n</ul>\n<p>Sass 有时候也被称为 Scss,两者之间不同之处有以下两点：</p>\n<ul>\n<li>文件扩展名不同，Sass 是以“.sass”后缀为扩展名，而 SCSS 是以“.scss”后缀为扩展名</li>\n<li>语法书写方式不同，Sass 是以严格的缩进式语法规则来书写，不带大括号({})和分号(;)，类似于Stylus；而 SCSS 的语法书类似于常规的 CSS。  </li>\n</ul>\n<p>来看一个示例：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/* Sass 语法 */</span><br><span class=\"line\">$font-stack: Helvetica, sans-serif</span><br><span class=\"line\">$primary-color: #333</span><br><span class=\"line\">body</span><br><span class=\"line\">  font: 100% $font-stack</span><br><span class=\"line\">  color: $primary-color</span><br><span class=\"line\">  </span><br><span class=\"line\">/* Scss 语法 */</span><br><span class=\"line\">$font-stack: Helvetica, sans-serif;</span><br><span class=\"line\">$primary-color: #333;</span><br><span class=\"line\">body &#123;</span><br><span class=\"line\">  font: 100% $font-stack;</span><br><span class=\"line\">  color: $primary-color;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>以上俩段编译的结果是同样的结果<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">body &#123;</span><br><span class=\"line\">  font: 100% Helvetica, sans-serif;</span><br><span class=\"line\">  color: #333;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"Sass-安装\"><a href=\"#Sass-安装\" class=\"headerlink\" title=\"Sass 安装\"></a>Sass 安装</h2><p>首先需要安装 <a href=\"https://nodejs.org/en/\" target=\"_blank\" rel=\"noopener\">NodeJs</a>，通过命令行安装：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install -g node-sass</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"Sass使用\"><a href=\"#Sass使用\" class=\"headerlink\" title=\"Sass使用\"></a>Sass使用</h2><p>通过以下命令行监测 sourceFile.scss，将文件转变成 focusFile.css<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">node-sass -w sourceFile.scss focusFile.css</span><br></pre></td></tr></table></figure></p>\n<p>顺带一提，如果你使用的是 <a href=\"http://www.jetbrains.com/webstorm/\" target=\"_blank\" rel=\"noopener\">webstorm</a>，可以通过配置IDE的 Settings – Tools – File Watchers实现文件的监听，省去命令行的过程。这个不是这篇文章的重点，有意向的请自行 Google。<br>node-sass 参数<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">-w, --watch                Watch a directory or file</span><br><span class=\"line\">-r, --recursive            Recursively watch directories or files</span><br><span class=\"line\">-o, --output               Output directory</span><br><span class=\"line\">-x, --omit-source-map-url  Omit source map URL comment from output</span><br><span class=\"line\">-i, --indented-syntax      Treat data from stdin as sass code (versus scss)</span><br><span class=\"line\">-q, --quiet                Suppress log output except on error</span><br><span class=\"line\">-v, --version              Prints version info</span><br><span class=\"line\">--output-style             CSS output style (nested | expanded | compact | compressed)</span><br><span class=\"line\">--indent-type              Indent type for output CSS (space | tab)</span><br><span class=\"line\">--indent-width             Indent width; number of spaces or tabs (maximum value: 10)</span><br><span class=\"line\">--linefeed                 Linefeed style (cr | crlf | lf | lfcr)</span><br><span class=\"line\">--source-comments          Include debug info in output</span><br><span class=\"line\">--source-map               Emit source map</span><br><span class=\"line\">--source-map-contents      Embed include contents in map</span><br><span class=\"line\">--source-map-embed         Embed sourceMappingUrl as data URI</span><br><span class=\"line\">--source-map-root          Base path, will be emitted in source-map as is</span><br><span class=\"line\">--include-path             Path to look for imported files</span><br><span class=\"line\">--follow                   Follow symlinked directories</span><br><span class=\"line\">--precision                The amount of precision allowed in decimal numbers</span><br><span class=\"line\">--importer                 Path to .js file containing custom importer</span><br><span class=\"line\">--functions                Path to .js file containing custom functions</span><br><span class=\"line\">--help                     Print usage info</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"Sass基本特性\"><a href=\"#Sass基本特性\" class=\"headerlink\" title=\"Sass基本特性\"></a>Sass基本特性</h2><h3 id=\"注释\"><a href=\"#注释\" class=\"headerlink\" title=\"注释\"></a>注释</h3><ul>\n<li>使用类似 css的注释方式，使用”/*“开头，使用”*/“结束。</li>\n<li>使用类似JavaScript的注释方式，使用”//“.</li>\n<li>两者的区别：前者会在编译的 css文件中显示，后者不会。<h3 id=\"数据类型\"><a href=\"#数据类型\" class=\"headerlink\" title=\"数据类型\"></a>数据类型</h3>Sass 和 JavaScript 语言类似，也具有自己的数据类型，在 Sass 中包含以下几种数据类型：</li>\n</ul>\n<ol>\n<li>数字: 如，1、 2、 13、 10px；</li>\n<li>字符串：有引号字符串或无引号字符串，如，”foo” ‘bar’ baz；</li>\n<li>颜色：如，blue, #04a3f9, rgba(255,0,0,0.5);</li>\n<li>布尔型：如，true, false；</li>\n<li>空值：如，null；</li>\n<li>值列表：用空格或者逗号分开，如，1.5em 1em 0 2em , Helvetica, Arial, sans-serif；<h3 id=\"变量：通过-声明变量，变量有全局变量和局部变量的概念。\"><a href=\"#变量：通过-声明变量，变量有全局变量和局部变量的概念。\" class=\"headerlink\" title=\"变量：通过$声明变量，变量有全局变量和局部变量的概念。\"></a>变量：通过$声明变量，变量有全局变量和局部变量的概念。</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$brand-primary : darken(#428bca, 6.5%) !default;</span><br><span class=\"line\">$btn-primary-color : #fff !default;</span><br><span class=\"line\">$btn-primary-bg : $brand-primary !default;</span><br><span class=\"line\">$btn-primary-border : darken($btn-primary-bg, 5%) !default;</span><br><span class=\"line\">.btn-primary &#123;</span><br><span class=\"line\">   background-color: $btn-primary-bg;</span><br><span class=\"line\">   color: $btn-primary-color;</span><br><span class=\"line\">   border: 1px solid $btn-primary-border;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">/* 局部变量 */</span><br><span class=\"line\">$color: orange;</span><br><span class=\"line\">.block &#123;</span><br><span class=\"line\">  color: $color;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">em &#123;</span><br><span class=\"line\">  $color: red;</span><br><span class=\"line\">  a &#123;</span><br><span class=\"line\">    color: $color;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">span &#123;</span><br><span class=\"line\">  color: $color;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<p>编译之后的结果<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">.block &#123;</span><br><span class=\"line\">  color: orange;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">em a&#123;</span><br><span class=\"line\">    color: red;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">span &#123;</span><br><span class=\"line\">  color: orange;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"嵌套结构\"><a href=\"#嵌套结构\" class=\"headerlink\" title=\"嵌套结构\"></a>嵌套结构</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">nav &#123;</span><br><span class=\"line\">  a &#123;</span><br><span class=\"line\">    color: red;</span><br><span class=\"line\">    header &amp; &#123;</span><br><span class=\"line\">      color:green;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;  </span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">.box &#123;</span><br><span class=\"line\">  border: &#123;</span><br><span class=\"line\">   top: 1px solid red;</span><br><span class=\"line\">   bottom: 1px solid green;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">.clearfix&#123;</span><br><span class=\"line\">  &amp;:before,</span><br><span class=\"line\">  &amp;:after &#123;</span><br><span class=\"line\">    content:&quot;&quot;;</span><br><span class=\"line\">    display: table;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  &amp;:after &#123;</span><br><span class=\"line\">    clear:both;</span><br><span class=\"line\">    overflow: hidden;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">/* 但是也注意不可以无节制地嵌套，会加大浏览器的负担 */</span><br></pre></td></tr></table></figure>\n<h3 id=\"混合宏\"><a href=\"#混合宏\" class=\"headerlink\" title=\"混合宏\"></a>混合宏</h3><p>混合宏类似于 js中的函数，用来实现某个特定的功能。一次定义之后可以方便的调用。通过@mixin定义混合宏，通过@include调用混合宏。<strong>混合宏会产生亢余代码</strong>。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/* 没有参数的混合宏可以省略() */</span><br><span class=\"line\">@mixin border-radius&#123;</span><br><span class=\"line\">  -webkit-border-radius: 5px;</span><br><span class=\"line\">  border-radius: 5px;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">button&#123;</span><br><span class=\"line\">  @include border-radius;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">/* 混合宏中传递参数 */</span><br><span class=\"line\">@mixin center($width,$height)&#123;</span><br><span class=\"line\">  width: $width;</span><br><span class=\"line\">  height: $height;</span><br><span class=\"line\">  position: absolute;</span><br><span class=\"line\">  top: 50%;</span><br><span class=\"line\">  left: 50%;</span><br><span class=\"line\">  margin-top: -($height) / 2;</span><br><span class=\"line\">  margin-left: -($width) / 2;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">.box-center &#123;</span><br><span class=\"line\">  @include center(500px,300px);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">/* 混合宏中定义默认值 */</span><br><span class=\"line\">@mixin border-radius($radius:5px)&#123;</span><br><span class=\"line\">  -webkit-border-radius: $radius;</span><br><span class=\"line\">  border-radius: $radius;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">.nav&#123;</span><br><span class=\"line\">  @include border-radius;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">.box&#123;</span><br><span class=\"line\">  @include border-radius(3px);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">/* 混合宏一些更高级的使用 */</span><br><span class=\"line\">@mixin box-shadow($shadows...)&#123;</span><br><span class=\"line\">  @if length($shadows) &gt;= 1 &#123;</span><br><span class=\"line\">    -webkit-box-shadow: $shadows;</span><br><span class=\"line\">    box-shadow: $shadows;</span><br><span class=\"line\">  &#125; @else &#123;</span><br><span class=\"line\">    $shadows: 0 0 2px rgba(#000,.25);</span><br><span class=\"line\">    -webkit-box-shadow: $shadow;</span><br><span class=\"line\">    box-shadow: $shadow;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">.box &#123;</span><br><span class=\"line\">  @include box-shadow(0 0 1px rgba(#000,.5),0 0 2px rgba(#000,.2));</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"扩展-继承\"><a href=\"#扩展-继承\" class=\"headerlink\" title=\"扩展/继承\"></a>扩展/继承</h3><p>扩展/继承的作用类似于混合宏，优势是不会产生亢余代码，缺点是可以使用的情况不如混合宏常见，使用起来也不如混合宏灵活。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">.btn &#123;</span><br><span class=\"line\">  border: 1px solid #ccc;</span><br><span class=\"line\">  padding: 6px 10px;</span><br><span class=\"line\">  font-size: 14px;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">.btn-primary &#123;</span><br><span class=\"line\">  background-color: #f36;</span><br><span class=\"line\">  color: #fff;</span><br><span class=\"line\">  @extend .btn;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">.btn-second &#123;</span><br><span class=\"line\">  background-color: orange;</span><br><span class=\"line\">  color: #fff;</span><br><span class=\"line\">  @extend .btn;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"占位符\"><a href=\"#占位符\" class=\"headerlink\" title=\"占位符\"></a>占位符</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">%mt5 &#123;</span><br><span class=\"line\">  margin-top: 5px;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">%pt5&#123;</span><br><span class=\"line\">  padding-top: 5px;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">.btn &#123;</span><br><span class=\"line\">  @extend %mt5;</span><br><span class=\"line\">  @extend %pt5;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"插值\"><a href=\"#插值\" class=\"headerlink\" title=\"插值\"></a>插值</h3><p>Sass允许在#{}内部解析变量<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$properties: (margin, padding);</span><br><span class=\"line\">@mixin set-value($side, $value) &#123;</span><br><span class=\"line\">  @each $prop in $properties &#123;</span><br><span class=\"line\">    #&#123;$prop&#125;-#&#123;$side&#125;: $value;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">.login-box &#123;</span><br><span class=\"line\">  @include set-value(top, 14px);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"运算\"><a href=\"#运算\" class=\"headerlink\" title=\"运算\"></a>运算</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">.box &#123;</span><br><span class=\"line\">  width: 20px + 8in;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">$full-width: 960px;</span><br><span class=\"line\">$sidebar-width: 200px;</span><br><span class=\"line\">.content &#123;</span><br><span class=\"line\">  width: $full-width -  $sidebar-width;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">.box &#123;</span><br><span class=\"line\">  width: 10px * 2;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">.box &#123;</span><br><span class=\"line\">  width: (100px / 2);  </span><br><span class=\"line\">&#125;</span><br><span class=\"line\">p &#123;</span><br><span class=\"line\">  font: 10px/8px;             // 纯 CSS，不是除法运算</span><br><span class=\"line\">  $width: 1000px;</span><br><span class=\"line\">  width: $width/2;            // 使用了变量，是除法运算</span><br><span class=\"line\">  width: round(1.5)/2;        // 使用了函数，是除法运算</span><br><span class=\"line\">  height: (500px/2);          // 使用了圆括号，是除法运算</span><br><span class=\"line\">  margin-left: 5px + 8px/2px; // 使用了加（+）号，是除法运算</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">.box &#123;</span><br><span class=\"line\">  width: ((220px + 720px) - 11 * 20 ) / 12 ;  </span><br><span class=\"line\">&#125;</span><br><span class=\"line\">p &#123;</span><br><span class=\"line\">  color: #010203 + #040506;</span><br><span class=\"line\">  background-color: #010203 * 2;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">$content: &quot;Hello&quot; + &quot;&quot; + &quot;Sass!&quot;;</span><br><span class=\"line\">.box:before &#123;</span><br><span class=\"line\">  content: &quot; #&#123;$content&#125; &quot;;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"Sass高级特性\"><a href=\"#Sass高级特性\" class=\"headerlink\" title=\"Sass高级特性\"></a>Sass高级特性</h2><h3 id=\"if\"><a href=\"#if\" class=\"headerlink\" title=\"@if\"></a>@if</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">@mixin blockOrHidden($boolean:true) &#123;</span><br><span class=\"line\">  @if $boolean &#123;</span><br><span class=\"line\">    display: block;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  @else &#123;</span><br><span class=\"line\">    display: none;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">.block &#123;</span><br><span class=\"line\">  @include blockOrHidden;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">.hidden&#123;</span><br><span class=\"line\">  @include blockOrHidden(false);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"for\"><a href=\"#for\" class=\"headerlink\" title=\"@for\"></a>@for</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">@for $i from &lt;start&gt; through &lt;end&gt;</span><br><span class=\"line\">@for $i from &lt;start&gt; to &lt;end&gt;</span><br><span class=\"line\">@for $i from 1 through 3 &#123;</span><br><span class=\"line\">  .item-#&#123;$i&#125; &#123; width: 2em * $i; &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">@for $i from 1 to 3 &#123;</span><br><span class=\"line\">  .item-#&#123;$i&#125; &#123; width: 2em * $i; &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$grid-prefix: span !default;</span><br><span class=\"line\">$grid-width: 60px !default;</span><br><span class=\"line\">$grid-gutter: 20px !default;</span><br><span class=\"line\"></span><br><span class=\"line\">%grid &#123;</span><br><span class=\"line\">  float: left;</span><br><span class=\"line\">  margin-left: $grid-gutter / 2;</span><br><span class=\"line\">  margin-right: $grid-gutter / 2;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">@for $i from 1 through 12 &#123;</span><br><span class=\"line\">  .#&#123;$grid-prefix&#125;#&#123;$i&#125;&#123;</span><br><span class=\"line\">    width: $grid-width * $i + $grid-gutter * ($i - 1);</span><br><span class=\"line\">    @extend %grid;</span><br><span class=\"line\">  &#125;  </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"each\"><a href=\"#each\" class=\"headerlink\" title=\"@each\"></a>@each</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$list: adam john wynn mason kuroir; //$list 就是一个列表</span><br><span class=\"line\">@mixin author-images &#123;</span><br><span class=\"line\">    @each $author in $list &#123;</span><br><span class=\"line\">        .photo-#&#123;$author&#125; &#123;</span><br><span class=\"line\">            background: url(&quot;/images/avatars/#&#123;$author&#125;.png&quot;) no-repeat;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">.author-bio &#123;</span><br><span class=\"line\">    @include author-images;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"Sass中的函数\"><a href=\"#Sass中的函数\" class=\"headerlink\" title=\"Sass中的函数\"></a>Sass中的函数</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">//自定义函数</span><br><span class=\"line\">@function double($n) &#123;</span><br><span class=\"line\">  @return $n * 2;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">#sidebar &#123;</span><br><span class=\"line\">  width: double(5px);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>Sass中的内置函数</p>\n<ul>\n<li>字符串函数<ul>\n<li>unquote</li>\n<li>quote</li>\n<li>To-upper-case</li>\n<li>To-lower-case</li>\n<li>percentage</li>\n<li>round</li>\n<li>ceil</li>\n<li>floor</li>\n<li>abs</li>\n<li>min</li>\n<li>max</li>\n<li>random</li>\n</ul>\n</li>\n<li>列表函数<ul>\n<li>length  取列表数据的长度</li>\n<li>nth  (10px 20px 30px, 1)</li>\n<li>join  join(10px 20px, 30px 40px)</li>\n<li>append  append(10px 20px ,30px)</li>\n<li>zip  zip(1px 2px 3px,solid dashed dotted,green blue red)</li>\n<li>index  index(1px solid red, solid)</li>\n<li>type-of  type-of(100)</li>\n<li>unit  取单位</li>\n<li>unitless  判断一个值是否带有单位</li>\n<li>comparable  判断两个数是否可以进行加减合并</li>\n<li>if(true,1px,2px)</li>\n</ul>\n</li>\n<li>Maps函数<ul>\n<li>map-get</li>\n<li>map-has-key</li>\n<li>map-keys</li>\n<li>map-values</li>\n<li>map-merge</li>\n<li>map-remove</li>\n<li>keywords<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$map: (</span><br><span class=\"line\">  $key1: value1,</span><br><span class=\"line\">  $key2: value2,</span><br><span class=\"line\">  $key3: value3</span><br><span class=\"line\">)   </span><br><span class=\"line\"></span><br><span class=\"line\">$map: (</span><br><span class=\"line\">  key1: value1,</span><br><span class=\"line\">  key2: (</span><br><span class=\"line\">    key-1: value-1,</span><br><span class=\"line\">    key-2: value-2,</span><br><span class=\"line\">  ),</span><br><span class=\"line\">key3: value3</span><br><span class=\"line\">);</span><br><span class=\"line\"></span><br><span class=\"line\">$theme-color: (</span><br><span class=\"line\">  default: (</span><br><span class=\"line\">      bgcolor: #fff,</span><br><span class=\"line\">      text-color: #444,</span><br><span class=\"line\">      link-color: #39f</span><br><span class=\"line\">  ),</span><br><span class=\"line\">  primary:(</span><br><span class=\"line\">      bgcolor: #000,</span><br><span class=\"line\">      text-color:#fff,</span><br><span class=\"line\">      link-color: #93f</span><br><span class=\"line\">  ),</span><br><span class=\"line\">  negative: (</span><br><span class=\"line\">      bgcolor: #f36,</span><br><span class=\"line\">      text-color: #fefefe,</span><br><span class=\"line\">      link-color: #d4e</span><br><span class=\"line\">  )</span><br><span class=\"line\">);</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/* map-get */</span><br><span class=\"line\">$social-colors: (</span><br><span class=\"line\">  dribble: #ea4c89,</span><br><span class=\"line\">  facebook: #3b5998,</span><br><span class=\"line\">  github: #171515,</span><br><span class=\"line\">  google: #db4437,</span><br><span class=\"line\">  twitter: #55acee</span><br><span class=\"line\">);</span><br><span class=\"line\">.btn-dribble&#123;</span><br><span class=\"line\">  color: map-get($social-colors,facebook);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">/* 没有值不会报错 */</span><br><span class=\"line\">.btn-weibo&#123;</span><br><span class=\"line\">  font-size: 12px;</span><br><span class=\"line\">  color: map-get($social-colors,weibo);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/* map中的容错函数 */</span><br><span class=\"line\">   @function colors($color)&#123;</span><br><span class=\"line\">     @if not map-has-key($social-colors,$color)&#123;</span><br><span class=\"line\">         @warn &quot;No color found for `#&#123;$color&#125;` in $social-colors map. Property omitted.&quot;;</span><br><span class=\"line\">     &#125;</span><br><span class=\"line\">     @return map-get($social-colors,$color);</span><br><span class=\"line\">   &#125;</span><br><span class=\"line\">   .btn-dribble &#123;</span><br><span class=\"line\">     color: colors(dribble);</span><br><span class=\"line\">   &#125;</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/* each 遍历 map */</span><br><span class=\"line\">@each $name in map-keys($social-colors)&#123;</span><br><span class=\"line\">  .btn-#&#123;$name&#125;&#123;</span><br><span class=\"line\">      color: colors($name);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">@for $i from 1 through length(map-keys($social-colors))&#123;</span><br><span class=\"line\">  .btn-#&#123;nth(map-keys($social-colors),$i)&#125; &#123;</span><br><span class=\"line\">    color: colors(nth(map-keys($social-colors),$i));</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">/*得到所有的值*/</span><br><span class=\"line\">map-values($social-colors)</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$color: (</span><br><span class=\"line\">  text: #f36,</span><br><span class=\"line\">  link: #f63,</span><br><span class=\"line\">  border: #ddd,</span><br><span class=\"line\">  backround: #fff</span><br><span class=\"line\">);</span><br><span class=\"line\">$typo:(</span><br><span class=\"line\">  font-size: 12px,</span><br><span class=\"line\">  line-height: 1.6</span><br><span class=\"line\">);</span><br><span class=\"line\">$newcolor = map-merge($color, $typo);</span><br><span class=\"line\"></span><br><span class=\"line\">/* 得到新值 */</span><br><span class=\"line\">$map:map-remove($social-colors,dribble);</span><br></pre></td></tr></table></figure>\n<ul>\n<li>颜色函数<ul>\n<li>rgb</li>\n<li>rgba</li>\n<li>red</li>\n<li>green</li>\n<li>blue</li>\n<li>mix  混合两种颜色 第三个参数为第一种颜色的比例  mix(blue,red,20%)</li>\n<li>lighten  lighten(red, 20%);</li>\n<li>darken  darken(red,30%);</li>\n<li>saturate  改变颜色的饱和度 参数单位为百分比 saturate(blue,20%)</li>\n<li>desaturate</li>\n<li>adjust-hue  通过调整色相 adjust-hue(blue,30deg)</li>\n<li>grayscale  直接让饱和度为0  grayscale(blue);</li>\n<li>alpha  获取透明度</li>\n<li>opacity  获取透明度</li>\n<li>rgba</li>\n<li>opacify  增加透明度</li>\n<li>fade-in  增加透明度</li>\n<li>transparentize  减少透明度</li>\n<li>fade-out  减少透明度<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;ul class=&quot;swatches red&quot;&gt;</span><br><span class=\"line\">  &lt;li&gt;&lt;/li&gt;</span><br><span class=\"line\">  ...      </span><br><span class=\"line\">  &lt;li&gt;&lt;/li&gt;</span><br><span class=\"line\">&lt;/ul&gt;</span><br><span class=\"line\">&lt;ul class=&quot;swatches orange&quot;&gt;</span><br><span class=\"line\">  &lt;li&gt;&lt;/li&gt;</span><br><span class=\"line\">  …</span><br><span class=\"line\">  &lt;li&gt;&lt;/li&gt;</span><br><span class=\"line\">&lt;/ul&gt;</span><br><span class=\"line\">&lt;ul class=&quot;swatches yellow&quot;&gt;</span><br><span class=\"line\">  &lt;li&gt;&lt;/li&gt;</span><br><span class=\"line\">  …</span><br><span class=\"line\">  &lt;li&gt;&lt;/li&gt;</span><br><span class=\"line\">&lt;/ul&gt;</span><br><span class=\"line\">&lt;ul class=&quot;swatches green&quot;&gt;</span><br><span class=\"line\">  &lt;li&gt;&lt;/li&gt;</span><br><span class=\"line\">  …</span><br><span class=\"line\">  &lt;li&gt;&lt;/li&gt;</span><br><span class=\"line\">&lt;/ul&gt;</span><br><span class=\"line\">&lt;ul class=&quot;swatches blue&quot;&gt;</span><br><span class=\"line\">  &lt;li&gt;&lt;/li&gt;</span><br><span class=\"line\">  …</span><br><span class=\"line\">  &lt;li&gt;&lt;/li&gt;</span><br><span class=\"line\">&lt;/ul&gt;</span><br><span class=\"line\">&lt;ul class=&quot;swatches purple&quot;&gt;</span><br><span class=\"line\">  &lt;li&gt;&lt;/li&gt;</span><br><span class=\"line\">  …</span><br><span class=\"line\">  &lt;li&gt;&lt;/li&gt;</span><br><span class=\"line\">&lt;/ul&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;style&gt;</span><br><span class=\"line\">$redBase: #DC143C;</span><br><span class=\"line\">$orangeBase: saturate(lighten(adjust_hue($redBase, 39), 5), 7);//#f37a16</span><br><span class=\"line\">$yellowBase: saturate(lighten(adjust_hue($redBase, 64), 6), 13);//#fbdc14</span><br><span class=\"line\">$greenBase: desaturate(darken(adjust_hue($redBase, 102), 2), 11);//#73c620</span><br><span class=\"line\">$blueBase: saturate(darken(adjust_hue($redBase, 201), 2), 1);//#12b7d4</span><br><span class=\"line\">$purpleBase: saturate(darken(adjust_hue($redBase, 296), 2), 1);//#a012d4</span><br><span class=\"line\">$blackBase: #777;</span><br><span class=\"line\">$bgc: #fff;</span><br><span class=\"line\"></span><br><span class=\"line\">//定义颜色变暗的 mixin</span><br><span class=\"line\">@mixin swatchesDarken($color) &#123;</span><br><span class=\"line\">  @for $i from 1 through 10 &#123;</span><br><span class=\"line\">    $x:$i+11;</span><br><span class=\"line\">    li:nth-child(#&#123;$x&#125;) &#123;</span><br><span class=\"line\">      $n:$i*5;</span><br><span class=\"line\">      $bgc:darken($color,$n); //颜色变暗</span><br><span class=\"line\">      background-color: $bgc;</span><br><span class=\"line\">      &amp;:hover:before &#123; //hover状态显示颜色编号</span><br><span class=\"line\">        content: &quot;#&#123;$bgc&#125;&quot;;</span><br><span class=\"line\">        color: lighten($bgc,40);</span><br><span class=\"line\">        font-family: verdana;</span><br><span class=\"line\">        font-size: 8px;</span><br><span class=\"line\">        padding: 2px;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">//定义颜色变亮的 mixin</span><br><span class=\"line\">@mixin swatchesLighten($color) &#123;</span><br><span class=\"line\">  @for $i from 1 through 10 &#123;</span><br><span class=\"line\">    $x:11-$i;</span><br><span class=\"line\">    li:nth-child(#&#123;$x&#125;) &#123;</span><br><span class=\"line\">      $n:$i*5;</span><br><span class=\"line\">      $bgc:lighten($color,$n);</span><br><span class=\"line\">      background-color: $bgc;</span><br><span class=\"line\">      &amp;:hover:before &#123;</span><br><span class=\"line\">        content: &quot;#&#123;$bgc&#125;&quot;;</span><br><span class=\"line\">        color: darken($bgc,40);</span><br><span class=\"line\">        font-family: verdana;</span><br><span class=\"line\">        font-size: 8px;</span><br><span class=\"line\">        padding: 2px;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">.swatches li &#123;    </span><br><span class=\"line\">  width: 4.7619047619%;</span><br><span class=\"line\">  float: left;</span><br><span class=\"line\">  height: 60px;</span><br><span class=\"line\">  list-style: none outside none;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">ul.red &#123;</span><br><span class=\"line\">  @include swatchesLighten($redBase);</span><br><span class=\"line\">  @include swatchesDarken($redBase);</span><br><span class=\"line\">  li:nth-child(11) &#123;</span><br><span class=\"line\">    background-color: $redBase;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">ul.orange &#123;</span><br><span class=\"line\">  @include swatchesLighten($orangeBase);</span><br><span class=\"line\">  @include swatchesDarken($orangeBase);</span><br><span class=\"line\">  li:nth-child(11) &#123;</span><br><span class=\"line\">    background-color: $orangeBase;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">ul.yellow &#123;</span><br><span class=\"line\">  @include swatchesLighten($yellowBase);</span><br><span class=\"line\">  @include swatchesDarken($yellowBase);</span><br><span class=\"line\">  li:nth-child(11) &#123;</span><br><span class=\"line\">    background-color: $yellowBase;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">ul.green &#123;</span><br><span class=\"line\">  @include swatchesLighten($greenBase);</span><br><span class=\"line\">  @include swatchesDarken($greenBase);</span><br><span class=\"line\">  li:nth-child(11) &#123;</span><br><span class=\"line\">    background-color: $greenBase;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">ul.blue &#123;</span><br><span class=\"line\">  @include swatchesLighten($blueBase);</span><br><span class=\"line\">  @include swatchesDarken($blueBase);</span><br><span class=\"line\">  li:nth-child(11) &#123;</span><br><span class=\"line\">    background-color: $blueBase;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">ul.purple &#123;</span><br><span class=\"line\">  @include swatchesLighten($purpleBase);</span><br><span class=\"line\">  @include swatchesDarken($purpleBase);</span><br><span class=\"line\">  li:nth-child(11) &#123;</span><br><span class=\"line\">    background-color: $purpleBase;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">ul.black &#123;</span><br><span class=\"line\">  @include swatchesLighten($blackBase);</span><br><span class=\"line\">  @include swatchesDarken($blackBase);</span><br><span class=\"line\">  li:nth-child(11) &#123;</span><br><span class=\"line\">    background-color: $blackBase;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">&lt;/style&gt;</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"Sass的-规则\"><a href=\"#Sass的-规则\" class=\"headerlink\" title=\"Sass的@规则\"></a>Sass的@规则</h2><ul>\n<li>@import</li>\n<li><p>@media</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">.sidebar &#123;</span><br><span class=\"line\">  width: 300px;</span><br><span class=\"line\">  @media screen and (orientation: landscape) &#123;</span><br><span class=\"line\">    width: 500px;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">@media screen &#123;</span><br><span class=\"line\">  .sidebar &#123;</span><br><span class=\"line\">    @media (orientation: landscape) &#123;</span><br><span class=\"line\">      width: 500px;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">$media: screen;</span><br><span class=\"line\">$feature: -webkit-min-device-pixel-ratio;</span><br><span class=\"line\">$value: 1.5;</span><br><span class=\"line\"></span><br><span class=\"line\">@media #&#123;$media&#125; and ($feature: $value) &#123;</span><br><span class=\"line\">  .sidebar &#123;</span><br><span class=\"line\">    width: 500px;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>@extend</p>\n</li>\n<li>@at-root</li>\n<li>@debug</li>\n<li>@warn</li>\n<li>@error</li>\n<li>@content<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$small : 750px;</span><br><span class=\"line\">@mixin  onsmall &#123;</span><br><span class=\"line\">  @media  only screen and (max-width: $small)&#123;</span><br><span class=\"line\">    @content;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">.navbar-content&#123;</span><br><span class=\"line\">  max-width:980px;</span><br><span class=\"line\">  @include onsmall &#123;</span><br><span class=\"line\">    min-width:320px;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<h2 id=\"最后附上一个rem的例子\"><a href=\"#最后附上一个rem的例子\" class=\"headerlink\" title=\"最后附上一个rem的例子\"></a>最后附上一个rem的例子</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">//以750px( iphone6 )为基准定义其他分辨率下的rem</span><br><span class=\"line\">@mixin useRem($size)&#123;</span><br><span class=\"line\">  $device-list : 320px, 375px , 414px;</span><br><span class=\"line\">  html&#123;</span><br><span class=\"line\">    @each $device in $device-list&#123;</span><br><span class=\"line\">      @media screen and (min-width: $device)&#123;</span><br><span class=\"line\">        font-size: 100px * ($device/$size);</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">@include useRem(750px);</span><br></pre></td></tr></table></figure>"},{"title":"关于蜂窝状图片的实现","date":"2018-03-29T08:20:09.000Z","description":"论实现蜂窝状图片墙的几种方法","_content":"![img5](/blog/img/comb.png)      \n## 使用三个元素实现六边形效果\n> + 思路：使用三个同样大小的div相互叠加，形成正六边形区域\n+ 优点：兼容性最好\n+ 缺点：结构繁琐，难以扩展\n\n准备三个同样大小的div，其中一个逆时针旋转60deg,另一个顺时针旋转60deg,三个div叠加的部分刚好是正六边形。\n```html\n<!DOCTYPE html>\n<html>\n<head>\n  <meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\"/>\n  <title>CSS3 实现六边形图片展示效果</title>\n  <style>\n    .boxF, .boxS, .boxT {\n      width: 200px;\n      height: 250px;\n      overflow: hidden;\n      position: relative;\n    }\n    .boxF, .boxS {\n      visibility: hidden;\n    }\n    .boxF {\n      transform: rotate(120deg);\n      float: left;\n      margin-left: 10px;\n    }\n    .boxS {\n      transform: rotate(-60deg);\n    }\n    .boxT {\n      transform: rotate(-60deg);\n      background: no-repeat 50% center;\n      visibility: visible;\n    }\n    .boxF:hover {\n      z-index: 999;\n    }\n    .boxF:hover .boxT {\n      background-size: 400%;\n    }\n  </style>\n</head>\n<body>\n    <div class=\"boxF\">\n      <div class=\"boxS\">\n        <div class=\"boxT\" style=\"background-image: url('1.jpg');\">\n        </div>\n      </div>\n    </div>\n  </div>\n</body>\n</html>\n```\n## 使用一个元素配合css变形得到六边形\n> + 思路：利用旋转、斜切和位移达到六边形效果\n+ 优点：方便扩展，结构清晰\n+ 缺点：理解困难，曲线陡峭\n  \n```html\n<!DOCTYPE html>\n<html>\n<head>\n\t<title></title>\n</head>\n<body>\n<!DOCTYPE html>\n<html lang=\"zh\">\n<head>\n<meta charset=\"UTF-8\">\n<meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge,chrome=1\">\n<meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n<title></title>\n<link rel=\"stylesheet\" type=\"text/css\" href=\"index.css\">\n</head>\n<body>\n<ul id=\"hexGrid\">\n\t<li class=\"hex\"> \n\t\t<a class=\"hexIn\" href=\"#\"> \n  \t\t<img src=\"1.png\" alt=\"\" />\n    \t<h1>title</h1>\n    \t<p>Some description about this module</p>\n  \t</a> \n\t</li>\n\t<li class=\"hex\"> \n\t\t<a class=\"hexIn\" href=\"#\"> \n  \t\t<img src=\"1.png\" alt=\"\" />\n    \t<h1>title</h1>\n    \t<p>Some description about this module</p>\n  \t</a> \n\t</li>\n\t<li class=\"hex\"> \n\t\t<a class=\"hexIn\" href=\"#\"> \n  \t\t<img src=\"1.png\" alt=\"\" />\n    \t<h1>title</h1>\n    \t<p>Some description about this module</p>\n  \t</a> \n\t</li>\n\t<li class=\"hex\"> \n\t\t<a class=\"hexIn\" href=\"#\"> \n  \t    <img src=\"1.png\" alt=\"\" />\n    \t<h1>title</h1>\n    \t<p>Some description about this module</p>\n  \t</a> \n\t</li>\n\t<li class=\"hex\"> \n\t\t<a class=\"hexIn\" href=\"#\"> \n  \t\t<img src=\"1.png\" alt=\"\" />\n    \t<h1>title</h1>\n    \t<p>Some description about this module</p>\n  \t</a> \n\t</li>\n\t<li class=\"hex\"> \n\t\t<a class=\"hexIn\" href=\"#\"> \n  \t\t<img src=\"1.png\" alt=\"\" />\n    \t<h1>title</h1>\n    \t<p>Some description about this module</p>\n  \t</a> \n\t</li>\n\t<li class=\"hex\"> \n\t\t<a class=\"hexIn\" href=\"#\"> \n  \t\t<img src=\"1.png\" alt=\"\" />\n    \t<h1>title</h1>\n    \t<p>Some description about this module</p>\n  \t</a> \n\t</li>\n\t<li class=\"hex\"> \n\t\t<a class=\"hexIn\" href=\"#\"> \n  \t\t<img src=\"1.png\" alt=\"\" />\n    \t<h1>title</h1>\n    \t<p>Some description about this module</p>\n  \t</a> \n\t</li>\n\t<li class=\"hex\"> \n\t\t<a class=\"hexIn\" href=\"#\"> \n  \t\t<img src=\"1.png\" alt=\"\" />\n    \t<h1>title</h1>\n    \t<p>Some description about this module</p>\n  \t</a> \n\t</li>\n\t<li class=\"hex\"> \n\t\t<a class=\"hexIn\" href=\"#\"> \n  \t\t<img src=\"1.png\" alt=\"\" />\n    \t<h1>title</h1>\n    \t<p>Some description about this module</p>\n  \t</a> \n\t</li>\n</ul>\n</body>\n</html>\n</body>\n</html>\n```\n```css\n* {\n    margin: 0;\n    padding: 0;\n}\n#hexGrid {\n    overflow: hidden;\n    width: 90%;\n    margin: 0 auto;\n    padding:0.866% 0;\n    font-family: 'Raleway', sans-serif;\n    font-size: 15px;\n}\n#hexGrid:after {\n    content: \"\";\n    display: block;\n    clear: both;\n}\n.hex {\n    position: relative;\n    list-style-type: none;\n    float: left;\n    overflow: hidden;\n    visibility: hidden;\n    outline:1px solid transparent;\n            transform: rotate(-60deg) skewY(30deg) translatez(-1px);\n}\n.hex * {\n    position: absolute;\n    visibility: visible;\n    outline:1px solid transparent; /* fix for jagged edges in FF on hover transition */\n}\n.hexIn {\n    display:block;\n    width: 100%;\n    height: 100%;\n    text-align: center;\n    color: #fff;\n    overflow: hidden;\n    -webkit-transform: skewY(-30deg) rotate(60deg);\n        -ms-transform: skewY(-30deg) rotate(60deg);\n            transform: skewY(-30deg) rotate(60deg);\n}\n\n/*** HEX CONTENT **********************************************************************/\n.hex img {\n    left: -100%;\n    right: -100%;\n    width: auto;\n    height: 100%;\n    margin: 0 auto;\n}\n\n.hex h1, .hex p {\n    width: 102%;\n    left:-1%; /* prevent line on the right where background doesn't cover image */\n    padding: 5%;\n    box-sizing:border-box;\n    background-color: rgba(0, 128, 128, 0.8);\n    font-weight: 300;\n    -webkit-transition:  -webkit-transform .2s ease-out, opacity .3s ease-out;\n            transition:          transform .2s ease-out, opacity .3s ease-out;\n}\n.hex h1 {\n    bottom: 50%;\n    padding-top:50%;\n    font-size: 1.5em;\n    z-index: 1;\n    -webkit-transform:translateY(-100%) translatez(-1px);\n        -ms-transform:translateY(-100%) translatez(-1px);\n            transform:translateY(-100%) translatez(-1px);\n}\n.hex h1:after {\n    content: '';\n    position: absolute;\n    bottom: 0;\n    left: 45%;\n    width: 10%;\n    text-align: center;\n    border-bottom: 1px solid #fff;\n}\n.hex p {\n    top: 50%;\n    padding-bottom:50%;\n    -webkit-transform:translateY(100%) translatez(-1px);\n        -ms-transform:translateY(100%) translatez(-1px);\n            transform:translateY(100%) translatez(-1px);\n}\n\n.hexIn:hover h1, .hexIn:focus h1,\n.hexIn:hover p, .hexIn:focus p{\n    -webkit-transform:translateY(0%) translatez(-1px);\n        -ms-transform:translateY(0%) translatez(-1px);\n            transform:translateY(0%) translatez(-1px);\n}\n\n@media (min-width:1201px) { /* <- 5-4  hexagons per row */\n    .hex {\n        width: 19.2%; /* = (100-4) / 5 */\n        padding-bottom: 22.170%; /* =  width / sin(60deg) */\n    }\n    .hex:nth-child(9n+6),\n    .hex:nth-child(9n+7),\n    .hex:nth-child(9n+8),\n    .hex:nth-child(9n+9) {\n        margin-top: -4.676%;\n        margin-bottom: -4.676%;\n        -webkit-transform: translateX(50%) rotate(-60deg) skewY(30deg);\n            -ms-transform: translateX(50%) rotate(-60deg) skewY(30deg);\n                transform: translateX(50%) rotate(-60deg) skewY(30deg);\n    }\n    .hex:nth-child(9n+6):last-child,\n    .hex:nth-child(9n+7):last-child,\n    .hex:nth-child(9n+8):last-child,\n    .hex:nth-child(9n+9):last-child {\n        margin-bottom: 0;\n    }\n    .hex:nth-child(9n+6) {\n        margin-left: 0.5%;\n        clear: left;\n    }\n    .hex:nth-child(9n+10) {\n        clear: left;\n    }\n    .hex:nth-child(9n+2),\n    .hex:nth-child(9n+ 7) {\n        margin-left: 1%;\n        margin-right: 1%;\n    }\n    .hex:nth-child(9n+3),\n    .hex:nth-child(9n+4),\n    .hex:nth-child(9n+8) {\n        margin-right: 1%;\n    }\n}\n@media (max-width: 1200px) and (min-width:901px) {/* <- 4-3  hexagons per row */\n    .hex {\n        width: 24.25%; /* = (100-3) / 4 */\n        padding-bottom: 28.001%; /* =  width / sin(60deg) */\n    }\n    .hex:nth-child(7n+5),\n    .hex:nth-child(7n+6),\n    .hex:nth-child(7n+7) {\n        margin-top: -6.134%;\n        margin-bottom: -6.134%;\n        -webkit-transform: translateX(50%) rotate(-60deg) skewY(30deg);\n            -ms-transform: translateX(50%) rotate(-60deg) skewY(30deg);\n                transform: translateX(50%) rotate(-60deg) skewY(30deg);\n    }\n    .hex:nth-child(7n+5):last-child,\n    .hex:nth-child(7n+6):last-child,\n    .hex:nth-child(7n+7):last-child {\n        margin-bottom: 0;\n    }\n    .hex:nth-child(7n+2),\n    .hex:nth-child(7n+6) {\n        margin-left: 1%;\n        margin-right: 1%;\n    }\n    .hex:nth-child(7n+3) {\n        margin-right: 1%;\n    }\n    .hex:nth-child(7n+8) {\n        clear: left;\n    }\n    .hex:nth-child(7n+5) {\n        clear: left;\n        margin-left: 0.5%;\n    }\n}\n@media (max-width: 900px) and (min-width:601px) { /* <- 3-2  hexagons per row */\n    .hex {\n        width: 32.666%; /* = (100-2) / 3 */\n        padding-bottom: 37.720%; /* =  width / sin(60) */\n    }\n    .hex:nth-child(5n+4),\n    .hex:nth-child(5n+5) {\n        margin-top: -8.564%;\n        margin-bottom: -8.564%;\n        -webkit-transform: translateX(50%) rotate(-60deg) skewY(30deg);\n            -ms-transform: translateX(50%) rotate(-60deg) skewY(30deg);\n                transform: translateX(50%) rotate(-60deg) skewY(30deg);\n    }\n    .hex:nth-child(5n+4):last-child,\n    .hex:nth-child(5n+5):last-child {\n        margin-bottom: 0;\n    }\n    .hex:nth-child(5n+4) {\n        margin-right: 1%;\n        margin-left: 0.5%;\n    }\n    .hex:nth-child(5n+2) {\n        margin-left: 1%;\n        margin-right: 1%;\n    }\n    .hex:nth-child(5n+6) {\n        clear: left;\n    }\n}\n@media (max-width: 600px) { /* <- 2-1  hexagons per row */\n    .hex {\n        width: 49.5%; /* = (100-1) / 2 */\n        padding-bottom: 57.158%; /* =  width / sin(60) */\n    }\n    .hex:nth-child(3n+3) {\n        margin-top: -13.423%;\n        margin-bottom: -13.423%;\n        -webkit-transform: translateX(50%) rotate(-60deg) skewY(30deg);\n            -ms-transform: translateX(50%) rotate(-60deg) skewY(30deg);\n                transform: translateX(50%) rotate(-60deg) skewY(30deg);\n    }\n    .hex:nth-child(3n+3):last-child {\n        margin-bottom: 0;\n    }\n    .hex:nth-child(3n+3) {\n        margin-left: 0.5%;\n    }\n    .hex:nth-child(3n+2) {\n        margin-left: 1%;\n    }\n    .hex:nth-child(3n+4) {\n        clear: left;\n    }\n}\n@media (max-width: 400px) {\n    #hexGrid {\n        font-size: 13px;\n    }\n}\n```\n## 通过css切片实现\n> + 思路：利用css切片实现六边形\n+ 优点：方便扩展，结构简单\n+ 缺点：兼容性差，学习曲线陡峭\n\n```html\n<!DOCTYPE html>\n<html>\n<head>\n  <title></title>\n  <style type=\"text/css\">\n    img{\n      clip-path: polygon(25.8% 0,75.8% 0,100% 44%,75.8% 87.8%,25.8% 87.8%, 0 50%,25.8% 0);\n    }\n  </style>\n</head>\n<body>\n<img src=\"http://www.jq22.com/demo/css3-image-grid-layout201703082234/img/6.png\">\n</body>\n</html>\n```\n## others\n还有另外svg、canvas的解决办法，可以自行学习。\n+ [svg](https://developer.mozilla.org/zh-CN/docs/Web/SVG/Tutorial)\n+ [canvas](https://developer.mozilla.org/zh-CN/docs/Web/API/Canvas_API)\n+ ","source":"_posts/关于蜂窝状图片的实现.md","raw":"title: 关于蜂窝状图片的实现\ntags: [css]\ndate: 2018-03-29 16:20:09\ncategories: [css]\ndescription: 论实现蜂窝状图片墙的几种方法\n---\n![img5](/blog/img/comb.png)      \n## 使用三个元素实现六边形效果\n> + 思路：使用三个同样大小的div相互叠加，形成正六边形区域\n+ 优点：兼容性最好\n+ 缺点：结构繁琐，难以扩展\n\n准备三个同样大小的div，其中一个逆时针旋转60deg,另一个顺时针旋转60deg,三个div叠加的部分刚好是正六边形。\n```html\n<!DOCTYPE html>\n<html>\n<head>\n  <meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\"/>\n  <title>CSS3 实现六边形图片展示效果</title>\n  <style>\n    .boxF, .boxS, .boxT {\n      width: 200px;\n      height: 250px;\n      overflow: hidden;\n      position: relative;\n    }\n    .boxF, .boxS {\n      visibility: hidden;\n    }\n    .boxF {\n      transform: rotate(120deg);\n      float: left;\n      margin-left: 10px;\n    }\n    .boxS {\n      transform: rotate(-60deg);\n    }\n    .boxT {\n      transform: rotate(-60deg);\n      background: no-repeat 50% center;\n      visibility: visible;\n    }\n    .boxF:hover {\n      z-index: 999;\n    }\n    .boxF:hover .boxT {\n      background-size: 400%;\n    }\n  </style>\n</head>\n<body>\n    <div class=\"boxF\">\n      <div class=\"boxS\">\n        <div class=\"boxT\" style=\"background-image: url('1.jpg');\">\n        </div>\n      </div>\n    </div>\n  </div>\n</body>\n</html>\n```\n## 使用一个元素配合css变形得到六边形\n> + 思路：利用旋转、斜切和位移达到六边形效果\n+ 优点：方便扩展，结构清晰\n+ 缺点：理解困难，曲线陡峭\n  \n```html\n<!DOCTYPE html>\n<html>\n<head>\n\t<title></title>\n</head>\n<body>\n<!DOCTYPE html>\n<html lang=\"zh\">\n<head>\n<meta charset=\"UTF-8\">\n<meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge,chrome=1\">\n<meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n<title></title>\n<link rel=\"stylesheet\" type=\"text/css\" href=\"index.css\">\n</head>\n<body>\n<ul id=\"hexGrid\">\n\t<li class=\"hex\"> \n\t\t<a class=\"hexIn\" href=\"#\"> \n  \t\t<img src=\"1.png\" alt=\"\" />\n    \t<h1>title</h1>\n    \t<p>Some description about this module</p>\n  \t</a> \n\t</li>\n\t<li class=\"hex\"> \n\t\t<a class=\"hexIn\" href=\"#\"> \n  \t\t<img src=\"1.png\" alt=\"\" />\n    \t<h1>title</h1>\n    \t<p>Some description about this module</p>\n  \t</a> \n\t</li>\n\t<li class=\"hex\"> \n\t\t<a class=\"hexIn\" href=\"#\"> \n  \t\t<img src=\"1.png\" alt=\"\" />\n    \t<h1>title</h1>\n    \t<p>Some description about this module</p>\n  \t</a> \n\t</li>\n\t<li class=\"hex\"> \n\t\t<a class=\"hexIn\" href=\"#\"> \n  \t    <img src=\"1.png\" alt=\"\" />\n    \t<h1>title</h1>\n    \t<p>Some description about this module</p>\n  \t</a> \n\t</li>\n\t<li class=\"hex\"> \n\t\t<a class=\"hexIn\" href=\"#\"> \n  \t\t<img src=\"1.png\" alt=\"\" />\n    \t<h1>title</h1>\n    \t<p>Some description about this module</p>\n  \t</a> \n\t</li>\n\t<li class=\"hex\"> \n\t\t<a class=\"hexIn\" href=\"#\"> \n  \t\t<img src=\"1.png\" alt=\"\" />\n    \t<h1>title</h1>\n    \t<p>Some description about this module</p>\n  \t</a> \n\t</li>\n\t<li class=\"hex\"> \n\t\t<a class=\"hexIn\" href=\"#\"> \n  \t\t<img src=\"1.png\" alt=\"\" />\n    \t<h1>title</h1>\n    \t<p>Some description about this module</p>\n  \t</a> \n\t</li>\n\t<li class=\"hex\"> \n\t\t<a class=\"hexIn\" href=\"#\"> \n  \t\t<img src=\"1.png\" alt=\"\" />\n    \t<h1>title</h1>\n    \t<p>Some description about this module</p>\n  \t</a> \n\t</li>\n\t<li class=\"hex\"> \n\t\t<a class=\"hexIn\" href=\"#\"> \n  \t\t<img src=\"1.png\" alt=\"\" />\n    \t<h1>title</h1>\n    \t<p>Some description about this module</p>\n  \t</a> \n\t</li>\n\t<li class=\"hex\"> \n\t\t<a class=\"hexIn\" href=\"#\"> \n  \t\t<img src=\"1.png\" alt=\"\" />\n    \t<h1>title</h1>\n    \t<p>Some description about this module</p>\n  \t</a> \n\t</li>\n</ul>\n</body>\n</html>\n</body>\n</html>\n```\n```css\n* {\n    margin: 0;\n    padding: 0;\n}\n#hexGrid {\n    overflow: hidden;\n    width: 90%;\n    margin: 0 auto;\n    padding:0.866% 0;\n    font-family: 'Raleway', sans-serif;\n    font-size: 15px;\n}\n#hexGrid:after {\n    content: \"\";\n    display: block;\n    clear: both;\n}\n.hex {\n    position: relative;\n    list-style-type: none;\n    float: left;\n    overflow: hidden;\n    visibility: hidden;\n    outline:1px solid transparent;\n            transform: rotate(-60deg) skewY(30deg) translatez(-1px);\n}\n.hex * {\n    position: absolute;\n    visibility: visible;\n    outline:1px solid transparent; /* fix for jagged edges in FF on hover transition */\n}\n.hexIn {\n    display:block;\n    width: 100%;\n    height: 100%;\n    text-align: center;\n    color: #fff;\n    overflow: hidden;\n    -webkit-transform: skewY(-30deg) rotate(60deg);\n        -ms-transform: skewY(-30deg) rotate(60deg);\n            transform: skewY(-30deg) rotate(60deg);\n}\n\n/*** HEX CONTENT **********************************************************************/\n.hex img {\n    left: -100%;\n    right: -100%;\n    width: auto;\n    height: 100%;\n    margin: 0 auto;\n}\n\n.hex h1, .hex p {\n    width: 102%;\n    left:-1%; /* prevent line on the right where background doesn't cover image */\n    padding: 5%;\n    box-sizing:border-box;\n    background-color: rgba(0, 128, 128, 0.8);\n    font-weight: 300;\n    -webkit-transition:  -webkit-transform .2s ease-out, opacity .3s ease-out;\n            transition:          transform .2s ease-out, opacity .3s ease-out;\n}\n.hex h1 {\n    bottom: 50%;\n    padding-top:50%;\n    font-size: 1.5em;\n    z-index: 1;\n    -webkit-transform:translateY(-100%) translatez(-1px);\n        -ms-transform:translateY(-100%) translatez(-1px);\n            transform:translateY(-100%) translatez(-1px);\n}\n.hex h1:after {\n    content: '';\n    position: absolute;\n    bottom: 0;\n    left: 45%;\n    width: 10%;\n    text-align: center;\n    border-bottom: 1px solid #fff;\n}\n.hex p {\n    top: 50%;\n    padding-bottom:50%;\n    -webkit-transform:translateY(100%) translatez(-1px);\n        -ms-transform:translateY(100%) translatez(-1px);\n            transform:translateY(100%) translatez(-1px);\n}\n\n.hexIn:hover h1, .hexIn:focus h1,\n.hexIn:hover p, .hexIn:focus p{\n    -webkit-transform:translateY(0%) translatez(-1px);\n        -ms-transform:translateY(0%) translatez(-1px);\n            transform:translateY(0%) translatez(-1px);\n}\n\n@media (min-width:1201px) { /* <- 5-4  hexagons per row */\n    .hex {\n        width: 19.2%; /* = (100-4) / 5 */\n        padding-bottom: 22.170%; /* =  width / sin(60deg) */\n    }\n    .hex:nth-child(9n+6),\n    .hex:nth-child(9n+7),\n    .hex:nth-child(9n+8),\n    .hex:nth-child(9n+9) {\n        margin-top: -4.676%;\n        margin-bottom: -4.676%;\n        -webkit-transform: translateX(50%) rotate(-60deg) skewY(30deg);\n            -ms-transform: translateX(50%) rotate(-60deg) skewY(30deg);\n                transform: translateX(50%) rotate(-60deg) skewY(30deg);\n    }\n    .hex:nth-child(9n+6):last-child,\n    .hex:nth-child(9n+7):last-child,\n    .hex:nth-child(9n+8):last-child,\n    .hex:nth-child(9n+9):last-child {\n        margin-bottom: 0;\n    }\n    .hex:nth-child(9n+6) {\n        margin-left: 0.5%;\n        clear: left;\n    }\n    .hex:nth-child(9n+10) {\n        clear: left;\n    }\n    .hex:nth-child(9n+2),\n    .hex:nth-child(9n+ 7) {\n        margin-left: 1%;\n        margin-right: 1%;\n    }\n    .hex:nth-child(9n+3),\n    .hex:nth-child(9n+4),\n    .hex:nth-child(9n+8) {\n        margin-right: 1%;\n    }\n}\n@media (max-width: 1200px) and (min-width:901px) {/* <- 4-3  hexagons per row */\n    .hex {\n        width: 24.25%; /* = (100-3) / 4 */\n        padding-bottom: 28.001%; /* =  width / sin(60deg) */\n    }\n    .hex:nth-child(7n+5),\n    .hex:nth-child(7n+6),\n    .hex:nth-child(7n+7) {\n        margin-top: -6.134%;\n        margin-bottom: -6.134%;\n        -webkit-transform: translateX(50%) rotate(-60deg) skewY(30deg);\n            -ms-transform: translateX(50%) rotate(-60deg) skewY(30deg);\n                transform: translateX(50%) rotate(-60deg) skewY(30deg);\n    }\n    .hex:nth-child(7n+5):last-child,\n    .hex:nth-child(7n+6):last-child,\n    .hex:nth-child(7n+7):last-child {\n        margin-bottom: 0;\n    }\n    .hex:nth-child(7n+2),\n    .hex:nth-child(7n+6) {\n        margin-left: 1%;\n        margin-right: 1%;\n    }\n    .hex:nth-child(7n+3) {\n        margin-right: 1%;\n    }\n    .hex:nth-child(7n+8) {\n        clear: left;\n    }\n    .hex:nth-child(7n+5) {\n        clear: left;\n        margin-left: 0.5%;\n    }\n}\n@media (max-width: 900px) and (min-width:601px) { /* <- 3-2  hexagons per row */\n    .hex {\n        width: 32.666%; /* = (100-2) / 3 */\n        padding-bottom: 37.720%; /* =  width / sin(60) */\n    }\n    .hex:nth-child(5n+4),\n    .hex:nth-child(5n+5) {\n        margin-top: -8.564%;\n        margin-bottom: -8.564%;\n        -webkit-transform: translateX(50%) rotate(-60deg) skewY(30deg);\n            -ms-transform: translateX(50%) rotate(-60deg) skewY(30deg);\n                transform: translateX(50%) rotate(-60deg) skewY(30deg);\n    }\n    .hex:nth-child(5n+4):last-child,\n    .hex:nth-child(5n+5):last-child {\n        margin-bottom: 0;\n    }\n    .hex:nth-child(5n+4) {\n        margin-right: 1%;\n        margin-left: 0.5%;\n    }\n    .hex:nth-child(5n+2) {\n        margin-left: 1%;\n        margin-right: 1%;\n    }\n    .hex:nth-child(5n+6) {\n        clear: left;\n    }\n}\n@media (max-width: 600px) { /* <- 2-1  hexagons per row */\n    .hex {\n        width: 49.5%; /* = (100-1) / 2 */\n        padding-bottom: 57.158%; /* =  width / sin(60) */\n    }\n    .hex:nth-child(3n+3) {\n        margin-top: -13.423%;\n        margin-bottom: -13.423%;\n        -webkit-transform: translateX(50%) rotate(-60deg) skewY(30deg);\n            -ms-transform: translateX(50%) rotate(-60deg) skewY(30deg);\n                transform: translateX(50%) rotate(-60deg) skewY(30deg);\n    }\n    .hex:nth-child(3n+3):last-child {\n        margin-bottom: 0;\n    }\n    .hex:nth-child(3n+3) {\n        margin-left: 0.5%;\n    }\n    .hex:nth-child(3n+2) {\n        margin-left: 1%;\n    }\n    .hex:nth-child(3n+4) {\n        clear: left;\n    }\n}\n@media (max-width: 400px) {\n    #hexGrid {\n        font-size: 13px;\n    }\n}\n```\n## 通过css切片实现\n> + 思路：利用css切片实现六边形\n+ 优点：方便扩展，结构简单\n+ 缺点：兼容性差，学习曲线陡峭\n\n```html\n<!DOCTYPE html>\n<html>\n<head>\n  <title></title>\n  <style type=\"text/css\">\n    img{\n      clip-path: polygon(25.8% 0,75.8% 0,100% 44%,75.8% 87.8%,25.8% 87.8%, 0 50%,25.8% 0);\n    }\n  </style>\n</head>\n<body>\n<img src=\"http://www.jq22.com/demo/css3-image-grid-layout201703082234/img/6.png\">\n</body>\n</html>\n```\n## others\n还有另外svg、canvas的解决办法，可以自行学习。\n+ [svg](https://developer.mozilla.org/zh-CN/docs/Web/SVG/Tutorial)\n+ [canvas](https://developer.mozilla.org/zh-CN/docs/Web/API/Canvas_API)\n+ ","slug":"关于蜂窝状图片的实现","published":1,"updated":"2019-09-30T07:14:30.074Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck3jm8gxp004ez0btyy4kkdo3","content":"<p><img src=\"/blog/img/comb.png\" alt=\"img5\">      </p>\n<h2 id=\"使用三个元素实现六边形效果\"><a href=\"#使用三个元素实现六边形效果\" class=\"headerlink\" title=\"使用三个元素实现六边形效果\"></a>使用三个元素实现六边形效果</h2><blockquote>\n<ul>\n<li>思路：使用三个同样大小的div相互叠加，形成正六边形区域</li>\n<li>优点：兼容性最好</li>\n<li>缺点：结构繁琐，难以扩展</li>\n</ul>\n</blockquote>\n<p>准备三个同样大小的div，其中一个逆时针旋转60deg,另一个顺时针旋转60deg,三个div叠加的部分刚好是正六边形。<br><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE html&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">http-equiv</span>=<span class=\"string\">\"Content-Type\"</span> <span class=\"attr\">content</span>=<span class=\"string\">\"text/html; charset=utf-8\"</span>/&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>CSS3 实现六边形图片展示效果<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">style</span>&gt;</span></span><br><span class=\"line\"><span class=\"css\">    <span class=\"selector-class\">.boxF</span>, <span class=\"selector-class\">.boxS</span>, <span class=\"selector-class\">.boxT</span> &#123;</span></span><br><span class=\"line\">      width: 200px;</span><br><span class=\"line\">      height: 250px;</span><br><span class=\"line\">      overflow: hidden;</span><br><span class=\"line\">      position: relative;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"><span class=\"css\">    <span class=\"selector-class\">.boxF</span>, <span class=\"selector-class\">.boxS</span> &#123;</span></span><br><span class=\"line\">      visibility: hidden;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"><span class=\"css\">    <span class=\"selector-class\">.boxF</span> &#123;</span></span><br><span class=\"line\">      transform: rotate(120deg);</span><br><span class=\"line\">      float: left;</span><br><span class=\"line\">      margin-left: 10px;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"><span class=\"css\">    <span class=\"selector-class\">.boxS</span> &#123;</span></span><br><span class=\"line\">      transform: rotate(-60deg);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"><span class=\"css\">    <span class=\"selector-class\">.boxT</span> &#123;</span></span><br><span class=\"line\">      transform: rotate(-60deg);</span><br><span class=\"line\">      background: no-repeat 50% center;</span><br><span class=\"line\">      visibility: visible;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"><span class=\"css\">    <span class=\"selector-class\">.boxF</span><span class=\"selector-pseudo\">:hover</span> &#123;</span></span><br><span class=\"line\">      z-index: 999;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"><span class=\"css\">    <span class=\"selector-class\">.boxF</span><span class=\"selector-pseudo\">:hover</span> <span class=\"selector-class\">.boxT</span> &#123;</span></span><br><span class=\"line\">      background-size: 400%;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"boxF\"</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"boxS\"</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"boxT\"</span> <span class=\"attr\">style</span>=<span class=\"string\">\"background-image: url('1.jpg');\"</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure></p>\n<h2 id=\"使用一个元素配合css变形得到六边形\"><a href=\"#使用一个元素配合css变形得到六边形\" class=\"headerlink\" title=\"使用一个元素配合css变形得到六边形\"></a>使用一个元素配合css变形得到六边形</h2><blockquote>\n<ul>\n<li>思路：利用旋转、斜切和位移达到六边形效果</li>\n<li>优点：方便扩展，结构清晰</li>\n<li>缺点：理解困难，曲线陡峭</li>\n</ul>\n</blockquote>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE html&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE html&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span> <span class=\"attr\">lang</span>=<span class=\"string\">\"zh\"</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">\"UTF-8\"</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">http-equiv</span>=<span class=\"string\">\"X-UA-Compatible\"</span> <span class=\"attr\">content</span>=<span class=\"string\">\"IE=edge,chrome=1\"</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">name</span>=<span class=\"string\">\"viewport\"</span> <span class=\"attr\">content</span>=<span class=\"string\">\"width=device-width, initial-scale=1.0\"</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">link</span> <span class=\"attr\">rel</span>=<span class=\"string\">\"stylesheet\"</span> <span class=\"attr\">type</span>=<span class=\"string\">\"text/css\"</span> <span class=\"attr\">href</span>=<span class=\"string\">\"index.css\"</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">ul</span> <span class=\"attr\">id</span>=<span class=\"string\">\"hexGrid\"</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">li</span> <span class=\"attr\">class</span>=<span class=\"string\">\"hex\"</span>&gt;</span> </span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">class</span>=<span class=\"string\">\"hexIn\"</span> <span class=\"attr\">href</span>=<span class=\"string\">\"#\"</span>&gt;</span> </span><br><span class=\"line\">  \t\t<span class=\"tag\">&lt;<span class=\"name\">img</span> <span class=\"attr\">src</span>=<span class=\"string\">\"1.png\"</span> <span class=\"attr\">alt</span>=<span class=\"string\">\"\"</span> /&gt;</span></span><br><span class=\"line\">    \t<span class=\"tag\">&lt;<span class=\"name\">h1</span>&gt;</span>title<span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span><br><span class=\"line\">    \t<span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>Some description about this module<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">  \t<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span> </span><br><span class=\"line\">\t<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">li</span> <span class=\"attr\">class</span>=<span class=\"string\">\"hex\"</span>&gt;</span> </span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">class</span>=<span class=\"string\">\"hexIn\"</span> <span class=\"attr\">href</span>=<span class=\"string\">\"#\"</span>&gt;</span> </span><br><span class=\"line\">  \t\t<span class=\"tag\">&lt;<span class=\"name\">img</span> <span class=\"attr\">src</span>=<span class=\"string\">\"1.png\"</span> <span class=\"attr\">alt</span>=<span class=\"string\">\"\"</span> /&gt;</span></span><br><span class=\"line\">    \t<span class=\"tag\">&lt;<span class=\"name\">h1</span>&gt;</span>title<span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span><br><span class=\"line\">    \t<span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>Some description about this module<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">  \t<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span> </span><br><span class=\"line\">\t<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">li</span> <span class=\"attr\">class</span>=<span class=\"string\">\"hex\"</span>&gt;</span> </span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">class</span>=<span class=\"string\">\"hexIn\"</span> <span class=\"attr\">href</span>=<span class=\"string\">\"#\"</span>&gt;</span> </span><br><span class=\"line\">  \t\t<span class=\"tag\">&lt;<span class=\"name\">img</span> <span class=\"attr\">src</span>=<span class=\"string\">\"1.png\"</span> <span class=\"attr\">alt</span>=<span class=\"string\">\"\"</span> /&gt;</span></span><br><span class=\"line\">    \t<span class=\"tag\">&lt;<span class=\"name\">h1</span>&gt;</span>title<span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span><br><span class=\"line\">    \t<span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>Some description about this module<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">  \t<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span> </span><br><span class=\"line\">\t<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">li</span> <span class=\"attr\">class</span>=<span class=\"string\">\"hex\"</span>&gt;</span> </span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">class</span>=<span class=\"string\">\"hexIn\"</span> <span class=\"attr\">href</span>=<span class=\"string\">\"#\"</span>&gt;</span> </span><br><span class=\"line\">  \t    <span class=\"tag\">&lt;<span class=\"name\">img</span> <span class=\"attr\">src</span>=<span class=\"string\">\"1.png\"</span> <span class=\"attr\">alt</span>=<span class=\"string\">\"\"</span> /&gt;</span></span><br><span class=\"line\">    \t<span class=\"tag\">&lt;<span class=\"name\">h1</span>&gt;</span>title<span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span><br><span class=\"line\">    \t<span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>Some description about this module<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">  \t<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span> </span><br><span class=\"line\">\t<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">li</span> <span class=\"attr\">class</span>=<span class=\"string\">\"hex\"</span>&gt;</span> </span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">class</span>=<span class=\"string\">\"hexIn\"</span> <span class=\"attr\">href</span>=<span class=\"string\">\"#\"</span>&gt;</span> </span><br><span class=\"line\">  \t\t<span class=\"tag\">&lt;<span class=\"name\">img</span> <span class=\"attr\">src</span>=<span class=\"string\">\"1.png\"</span> <span class=\"attr\">alt</span>=<span class=\"string\">\"\"</span> /&gt;</span></span><br><span class=\"line\">    \t<span class=\"tag\">&lt;<span class=\"name\">h1</span>&gt;</span>title<span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span><br><span class=\"line\">    \t<span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>Some description about this module<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">  \t<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span> </span><br><span class=\"line\">\t<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">li</span> <span class=\"attr\">class</span>=<span class=\"string\">\"hex\"</span>&gt;</span> </span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">class</span>=<span class=\"string\">\"hexIn\"</span> <span class=\"attr\">href</span>=<span class=\"string\">\"#\"</span>&gt;</span> </span><br><span class=\"line\">  \t\t<span class=\"tag\">&lt;<span class=\"name\">img</span> <span class=\"attr\">src</span>=<span class=\"string\">\"1.png\"</span> <span class=\"attr\">alt</span>=<span class=\"string\">\"\"</span> /&gt;</span></span><br><span class=\"line\">    \t<span class=\"tag\">&lt;<span class=\"name\">h1</span>&gt;</span>title<span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span><br><span class=\"line\">    \t<span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>Some description about this module<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">  \t<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span> </span><br><span class=\"line\">\t<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">li</span> <span class=\"attr\">class</span>=<span class=\"string\">\"hex\"</span>&gt;</span> </span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">class</span>=<span class=\"string\">\"hexIn\"</span> <span class=\"attr\">href</span>=<span class=\"string\">\"#\"</span>&gt;</span> </span><br><span class=\"line\">  \t\t<span class=\"tag\">&lt;<span class=\"name\">img</span> <span class=\"attr\">src</span>=<span class=\"string\">\"1.png\"</span> <span class=\"attr\">alt</span>=<span class=\"string\">\"\"</span> /&gt;</span></span><br><span class=\"line\">    \t<span class=\"tag\">&lt;<span class=\"name\">h1</span>&gt;</span>title<span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span><br><span class=\"line\">    \t<span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>Some description about this module<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">  \t<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span> </span><br><span class=\"line\">\t<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">li</span> <span class=\"attr\">class</span>=<span class=\"string\">\"hex\"</span>&gt;</span> </span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">class</span>=<span class=\"string\">\"hexIn\"</span> <span class=\"attr\">href</span>=<span class=\"string\">\"#\"</span>&gt;</span> </span><br><span class=\"line\">  \t\t<span class=\"tag\">&lt;<span class=\"name\">img</span> <span class=\"attr\">src</span>=<span class=\"string\">\"1.png\"</span> <span class=\"attr\">alt</span>=<span class=\"string\">\"\"</span> /&gt;</span></span><br><span class=\"line\">    \t<span class=\"tag\">&lt;<span class=\"name\">h1</span>&gt;</span>title<span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span><br><span class=\"line\">    \t<span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>Some description about this module<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">  \t<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span> </span><br><span class=\"line\">\t<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">li</span> <span class=\"attr\">class</span>=<span class=\"string\">\"hex\"</span>&gt;</span> </span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">class</span>=<span class=\"string\">\"hexIn\"</span> <span class=\"attr\">href</span>=<span class=\"string\">\"#\"</span>&gt;</span> </span><br><span class=\"line\">  \t\t<span class=\"tag\">&lt;<span class=\"name\">img</span> <span class=\"attr\">src</span>=<span class=\"string\">\"1.png\"</span> <span class=\"attr\">alt</span>=<span class=\"string\">\"\"</span> /&gt;</span></span><br><span class=\"line\">    \t<span class=\"tag\">&lt;<span class=\"name\">h1</span>&gt;</span>title<span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span><br><span class=\"line\">    \t<span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>Some description about this module<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">  \t<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span> </span><br><span class=\"line\">\t<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">li</span> <span class=\"attr\">class</span>=<span class=\"string\">\"hex\"</span>&gt;</span> </span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">class</span>=<span class=\"string\">\"hexIn\"</span> <span class=\"attr\">href</span>=<span class=\"string\">\"#\"</span>&gt;</span> </span><br><span class=\"line\">  \t\t<span class=\"tag\">&lt;<span class=\"name\">img</span> <span class=\"attr\">src</span>=<span class=\"string\">\"1.png\"</span> <span class=\"attr\">alt</span>=<span class=\"string\">\"\"</span> /&gt;</span></span><br><span class=\"line\">    \t<span class=\"tag\">&lt;<span class=\"name\">h1</span>&gt;</span>title<span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span><br><span class=\"line\">    \t<span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>Some description about this module<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">  \t<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span> </span><br><span class=\"line\">\t<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">ul</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br><span class=\"line\">165</span><br><span class=\"line\">166</span><br><span class=\"line\">167</span><br><span class=\"line\">168</span><br><span class=\"line\">169</span><br><span class=\"line\">170</span><br><span class=\"line\">171</span><br><span class=\"line\">172</span><br><span class=\"line\">173</span><br><span class=\"line\">174</span><br><span class=\"line\">175</span><br><span class=\"line\">176</span><br><span class=\"line\">177</span><br><span class=\"line\">178</span><br><span class=\"line\">179</span><br><span class=\"line\">180</span><br><span class=\"line\">181</span><br><span class=\"line\">182</span><br><span class=\"line\">183</span><br><span class=\"line\">184</span><br><span class=\"line\">185</span><br><span class=\"line\">186</span><br><span class=\"line\">187</span><br><span class=\"line\">188</span><br><span class=\"line\">189</span><br><span class=\"line\">190</span><br><span class=\"line\">191</span><br><span class=\"line\">192</span><br><span class=\"line\">193</span><br><span class=\"line\">194</span><br><span class=\"line\">195</span><br><span class=\"line\">196</span><br><span class=\"line\">197</span><br><span class=\"line\">198</span><br><span class=\"line\">199</span><br><span class=\"line\">200</span><br><span class=\"line\">201</span><br><span class=\"line\">202</span><br><span class=\"line\">203</span><br><span class=\"line\">204</span><br><span class=\"line\">205</span><br><span class=\"line\">206</span><br><span class=\"line\">207</span><br><span class=\"line\">208</span><br><span class=\"line\">209</span><br><span class=\"line\">210</span><br><span class=\"line\">211</span><br><span class=\"line\">212</span><br><span class=\"line\">213</span><br><span class=\"line\">214</span><br><span class=\"line\">215</span><br><span class=\"line\">216</span><br><span class=\"line\">217</span><br><span class=\"line\">218</span><br><span class=\"line\">219</span><br><span class=\"line\">220</span><br><span class=\"line\">221</span><br><span class=\"line\">222</span><br><span class=\"line\">223</span><br><span class=\"line\">224</span><br><span class=\"line\">225</span><br><span class=\"line\">226</span><br><span class=\"line\">227</span><br><span class=\"line\">228</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">* &#123;</span><br><span class=\"line\">    <span class=\"attribute\">margin</span>: <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"attribute\">padding</span>: <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-id\">#hexGrid</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">overflow</span>: hidden;</span><br><span class=\"line\">    <span class=\"attribute\">width</span>: <span class=\"number\">90%</span>;</span><br><span class=\"line\">    <span class=\"attribute\">margin</span>: <span class=\"number\">0</span> auto;</span><br><span class=\"line\">    <span class=\"attribute\">padding</span>:<span class=\"number\">0.866%</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"attribute\">font-family</span>: <span class=\"string\">'Raleway'</span>, sans-serif;</span><br><span class=\"line\">    <span class=\"attribute\">font-size</span>: <span class=\"number\">15px</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-id\">#hexGrid</span><span class=\"selector-pseudo\">:after</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">content</span>: <span class=\"string\">\"\"</span>;</span><br><span class=\"line\">    <span class=\"attribute\">display</span>: block;</span><br><span class=\"line\">    <span class=\"attribute\">clear</span>: both;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-class\">.hex</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">position</span>: relative;</span><br><span class=\"line\">    <span class=\"attribute\">list-style-type</span>: none;</span><br><span class=\"line\">    <span class=\"attribute\">float</span>: left;</span><br><span class=\"line\">    <span class=\"attribute\">overflow</span>: hidden;</span><br><span class=\"line\">    <span class=\"attribute\">visibility</span>: hidden;</span><br><span class=\"line\">    <span class=\"attribute\">outline</span>:<span class=\"number\">1px</span> solid transparent;</span><br><span class=\"line\">            <span class=\"attribute\">transform</span>: <span class=\"built_in\">rotate</span>(-60deg) <span class=\"built_in\">skewY</span>(30deg) <span class=\"built_in\">translatez</span>(-1px);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-class\">.hex</span> * &#123;</span><br><span class=\"line\">    <span class=\"attribute\">position</span>: absolute;</span><br><span class=\"line\">    <span class=\"attribute\">visibility</span>: visible;</span><br><span class=\"line\">    <span class=\"attribute\">outline</span>:<span class=\"number\">1px</span> solid transparent; <span class=\"comment\">/* fix for jagged edges in FF on hover transition */</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-class\">.hexIn</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">display</span>:block;</span><br><span class=\"line\">    <span class=\"attribute\">width</span>: <span class=\"number\">100%</span>;</span><br><span class=\"line\">    <span class=\"attribute\">height</span>: <span class=\"number\">100%</span>;</span><br><span class=\"line\">    <span class=\"attribute\">text-align</span>: center;</span><br><span class=\"line\">    <span class=\"attribute\">color</span>: <span class=\"number\">#fff</span>;</span><br><span class=\"line\">    <span class=\"attribute\">overflow</span>: hidden;</span><br><span class=\"line\">    <span class=\"attribute\">-webkit-transform</span>: <span class=\"built_in\">skewY</span>(-30deg) <span class=\"built_in\">rotate</span>(60deg);</span><br><span class=\"line\">        <span class=\"attribute\">-ms-transform</span>: <span class=\"built_in\">skewY</span>(-30deg) <span class=\"built_in\">rotate</span>(60deg);</span><br><span class=\"line\">            <span class=\"attribute\">transform</span>: <span class=\"built_in\">skewY</span>(-30deg) <span class=\"built_in\">rotate</span>(60deg);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/*** HEX CONTENT **********************************************************************/</span></span><br><span class=\"line\"><span class=\"selector-class\">.hex</span> <span class=\"selector-tag\">img</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">left</span>: -<span class=\"number\">100%</span>;</span><br><span class=\"line\">    <span class=\"attribute\">right</span>: -<span class=\"number\">100%</span>;</span><br><span class=\"line\">    <span class=\"attribute\">width</span>: auto;</span><br><span class=\"line\">    <span class=\"attribute\">height</span>: <span class=\"number\">100%</span>;</span><br><span class=\"line\">    <span class=\"attribute\">margin</span>: <span class=\"number\">0</span> auto;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-class\">.hex</span> <span class=\"selector-tag\">h1</span>, <span class=\"selector-class\">.hex</span> <span class=\"selector-tag\">p</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">width</span>: <span class=\"number\">102%</span>;</span><br><span class=\"line\">    <span class=\"attribute\">left</span>:-<span class=\"number\">1%</span>; <span class=\"comment\">/* prevent line on the right where background doesn't cover image */</span></span><br><span class=\"line\">    <span class=\"attribute\">padding</span>: <span class=\"number\">5%</span>;</span><br><span class=\"line\">    <span class=\"attribute\">box-sizing</span>:border-box;</span><br><span class=\"line\">    <span class=\"attribute\">background-color</span>: <span class=\"built_in\">rgba</span>(0, 128, 128, 0.8);</span><br><span class=\"line\">    <span class=\"attribute\">font-weight</span>: <span class=\"number\">300</span>;</span><br><span class=\"line\">    <span class=\"attribute\">-webkit-transition</span>:  -webkit-transform .<span class=\"number\">2s</span> ease-out, opacity .<span class=\"number\">3s</span> ease-out;</span><br><span class=\"line\">            <span class=\"attribute\">transition</span>:          transform .<span class=\"number\">2s</span> ease-out, opacity .<span class=\"number\">3s</span> ease-out;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-class\">.hex</span> <span class=\"selector-tag\">h1</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">bottom</span>: <span class=\"number\">50%</span>;</span><br><span class=\"line\">    <span class=\"attribute\">padding-top</span>:<span class=\"number\">50%</span>;</span><br><span class=\"line\">    <span class=\"attribute\">font-size</span>: <span class=\"number\">1.5em</span>;</span><br><span class=\"line\">    <span class=\"attribute\">z-index</span>: <span class=\"number\">1</span>;</span><br><span class=\"line\">    <span class=\"attribute\">-webkit-transform</span>:<span class=\"built_in\">translateY</span>(-100%) <span class=\"built_in\">translatez</span>(-1px);</span><br><span class=\"line\">        <span class=\"attribute\">-ms-transform</span>:<span class=\"built_in\">translateY</span>(-100%) <span class=\"built_in\">translatez</span>(-1px);</span><br><span class=\"line\">            <span class=\"attribute\">transform</span>:<span class=\"built_in\">translateY</span>(-100%) <span class=\"built_in\">translatez</span>(-1px);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-class\">.hex</span> <span class=\"selector-tag\">h1</span><span class=\"selector-pseudo\">:after</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">content</span>: <span class=\"string\">''</span>;</span><br><span class=\"line\">    <span class=\"attribute\">position</span>: absolute;</span><br><span class=\"line\">    <span class=\"attribute\">bottom</span>: <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"attribute\">left</span>: <span class=\"number\">45%</span>;</span><br><span class=\"line\">    <span class=\"attribute\">width</span>: <span class=\"number\">10%</span>;</span><br><span class=\"line\">    <span class=\"attribute\">text-align</span>: center;</span><br><span class=\"line\">    <span class=\"attribute\">border-bottom</span>: <span class=\"number\">1px</span> solid <span class=\"number\">#fff</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-class\">.hex</span> <span class=\"selector-tag\">p</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">top</span>: <span class=\"number\">50%</span>;</span><br><span class=\"line\">    <span class=\"attribute\">padding-bottom</span>:<span class=\"number\">50%</span>;</span><br><span class=\"line\">    <span class=\"attribute\">-webkit-transform</span>:<span class=\"built_in\">translateY</span>(100%) <span class=\"built_in\">translatez</span>(-1px);</span><br><span class=\"line\">        <span class=\"attribute\">-ms-transform</span>:<span class=\"built_in\">translateY</span>(100%) <span class=\"built_in\">translatez</span>(-1px);</span><br><span class=\"line\">            <span class=\"attribute\">transform</span>:<span class=\"built_in\">translateY</span>(100%) <span class=\"built_in\">translatez</span>(-1px);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-class\">.hexIn</span><span class=\"selector-pseudo\">:hover</span> <span class=\"selector-tag\">h1</span>, <span class=\"selector-class\">.hexIn</span><span class=\"selector-pseudo\">:focus</span> <span class=\"selector-tag\">h1</span>,</span><br><span class=\"line\"><span class=\"selector-class\">.hexIn</span><span class=\"selector-pseudo\">:hover</span> <span class=\"selector-tag\">p</span>, <span class=\"selector-class\">.hexIn</span><span class=\"selector-pseudo\">:focus</span> <span class=\"selector-tag\">p</span>&#123;</span><br><span class=\"line\">    <span class=\"attribute\">-webkit-transform</span>:<span class=\"built_in\">translateY</span>(0%) <span class=\"built_in\">translatez</span>(-1px);</span><br><span class=\"line\">        <span class=\"attribute\">-ms-transform</span>:<span class=\"built_in\">translateY</span>(0%) <span class=\"built_in\">translatez</span>(-1px);</span><br><span class=\"line\">            <span class=\"attribute\">transform</span>:<span class=\"built_in\">translateY</span>(0%) <span class=\"built_in\">translatez</span>(-1px);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">@<span class=\"keyword\">media</span> (min-width:<span class=\"number\">1201px</span>) &#123; <span class=\"comment\">/* &lt;- 5-4  hexagons per row */</span></span><br><span class=\"line\">    <span class=\"selector-class\">.hex</span> &#123;</span><br><span class=\"line\">        <span class=\"attribute\">width</span>: <span class=\"number\">19.2%</span>; <span class=\"comment\">/* = (100-4) / 5 */</span></span><br><span class=\"line\">        <span class=\"attribute\">padding-bottom</span>: <span class=\"number\">22.170%</span>; <span class=\"comment\">/* =  width / sin(60deg) */</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"selector-class\">.hex</span><span class=\"selector-pseudo\">:nth-child(9n+6)</span>,</span><br><span class=\"line\">    <span class=\"selector-class\">.hex</span><span class=\"selector-pseudo\">:nth-child(9n+7)</span>,</span><br><span class=\"line\">    <span class=\"selector-class\">.hex</span><span class=\"selector-pseudo\">:nth-child(9n+8)</span>,</span><br><span class=\"line\">    <span class=\"selector-class\">.hex</span><span class=\"selector-pseudo\">:nth-child(9n+9)</span> &#123;</span><br><span class=\"line\">        <span class=\"attribute\">margin-top</span>: -<span class=\"number\">4.676%</span>;</span><br><span class=\"line\">        <span class=\"attribute\">margin-bottom</span>: -<span class=\"number\">4.676%</span>;</span><br><span class=\"line\">        <span class=\"attribute\">-webkit-transform</span>: <span class=\"built_in\">translateX</span>(50%) <span class=\"built_in\">rotate</span>(-60deg) <span class=\"built_in\">skewY</span>(30deg);</span><br><span class=\"line\">            <span class=\"attribute\">-ms-transform</span>: <span class=\"built_in\">translateX</span>(50%) <span class=\"built_in\">rotate</span>(-60deg) <span class=\"built_in\">skewY</span>(30deg);</span><br><span class=\"line\">                <span class=\"attribute\">transform</span>: <span class=\"built_in\">translateX</span>(50%) <span class=\"built_in\">rotate</span>(-60deg) <span class=\"built_in\">skewY</span>(30deg);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"selector-class\">.hex</span><span class=\"selector-pseudo\">:nth-child(9n+6)</span><span class=\"selector-pseudo\">:last-child</span>,</span><br><span class=\"line\">    <span class=\"selector-class\">.hex</span><span class=\"selector-pseudo\">:nth-child(9n+7)</span><span class=\"selector-pseudo\">:last-child</span>,</span><br><span class=\"line\">    <span class=\"selector-class\">.hex</span><span class=\"selector-pseudo\">:nth-child(9n+8)</span><span class=\"selector-pseudo\">:last-child</span>,</span><br><span class=\"line\">    <span class=\"selector-class\">.hex</span><span class=\"selector-pseudo\">:nth-child(9n+9)</span><span class=\"selector-pseudo\">:last-child</span> &#123;</span><br><span class=\"line\">        <span class=\"attribute\">margin-bottom</span>: <span class=\"number\">0</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"selector-class\">.hex</span><span class=\"selector-pseudo\">:nth-child(9n+6)</span> &#123;</span><br><span class=\"line\">        <span class=\"attribute\">margin-left</span>: <span class=\"number\">0.5%</span>;</span><br><span class=\"line\">        <span class=\"attribute\">clear</span>: left;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"selector-class\">.hex</span><span class=\"selector-pseudo\">:nth-child(9n+10)</span> &#123;</span><br><span class=\"line\">        <span class=\"attribute\">clear</span>: left;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"selector-class\">.hex</span><span class=\"selector-pseudo\">:nth-child(9n+2)</span>,</span><br><span class=\"line\">    <span class=\"selector-class\">.hex</span><span class=\"selector-pseudo\">:nth-child(9n+</span> 7) &#123;</span><br><span class=\"line\">        <span class=\"attribute\">margin-left</span>: <span class=\"number\">1%</span>;</span><br><span class=\"line\">        <span class=\"attribute\">margin-right</span>: <span class=\"number\">1%</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"selector-class\">.hex</span><span class=\"selector-pseudo\">:nth-child(9n+3)</span>,</span><br><span class=\"line\">    <span class=\"selector-class\">.hex</span><span class=\"selector-pseudo\">:nth-child(9n+4)</span>,</span><br><span class=\"line\">    <span class=\"selector-class\">.hex</span><span class=\"selector-pseudo\">:nth-child(9n+8)</span> &#123;</span><br><span class=\"line\">        <span class=\"attribute\">margin-right</span>: <span class=\"number\">1%</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">@<span class=\"keyword\">media</span> (max-width: <span class=\"number\">1200px</span>) and (min-width:<span class=\"number\">901px</span>) &#123;<span class=\"comment\">/* &lt;- 4-3  hexagons per row */</span></span><br><span class=\"line\">    <span class=\"selector-class\">.hex</span> &#123;</span><br><span class=\"line\">        <span class=\"attribute\">width</span>: <span class=\"number\">24.25%</span>; <span class=\"comment\">/* = (100-3) / 4 */</span></span><br><span class=\"line\">        <span class=\"attribute\">padding-bottom</span>: <span class=\"number\">28.001%</span>; <span class=\"comment\">/* =  width / sin(60deg) */</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"selector-class\">.hex</span><span class=\"selector-pseudo\">:nth-child(7n+5)</span>,</span><br><span class=\"line\">    <span class=\"selector-class\">.hex</span><span class=\"selector-pseudo\">:nth-child(7n+6)</span>,</span><br><span class=\"line\">    <span class=\"selector-class\">.hex</span><span class=\"selector-pseudo\">:nth-child(7n+7)</span> &#123;</span><br><span class=\"line\">        <span class=\"attribute\">margin-top</span>: -<span class=\"number\">6.134%</span>;</span><br><span class=\"line\">        <span class=\"attribute\">margin-bottom</span>: -<span class=\"number\">6.134%</span>;</span><br><span class=\"line\">        <span class=\"attribute\">-webkit-transform</span>: <span class=\"built_in\">translateX</span>(50%) <span class=\"built_in\">rotate</span>(-60deg) <span class=\"built_in\">skewY</span>(30deg);</span><br><span class=\"line\">            <span class=\"attribute\">-ms-transform</span>: <span class=\"built_in\">translateX</span>(50%) <span class=\"built_in\">rotate</span>(-60deg) <span class=\"built_in\">skewY</span>(30deg);</span><br><span class=\"line\">                <span class=\"attribute\">transform</span>: <span class=\"built_in\">translateX</span>(50%) <span class=\"built_in\">rotate</span>(-60deg) <span class=\"built_in\">skewY</span>(30deg);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"selector-class\">.hex</span><span class=\"selector-pseudo\">:nth-child(7n+5)</span><span class=\"selector-pseudo\">:last-child</span>,</span><br><span class=\"line\">    <span class=\"selector-class\">.hex</span><span class=\"selector-pseudo\">:nth-child(7n+6)</span><span class=\"selector-pseudo\">:last-child</span>,</span><br><span class=\"line\">    <span class=\"selector-class\">.hex</span><span class=\"selector-pseudo\">:nth-child(7n+7)</span><span class=\"selector-pseudo\">:last-child</span> &#123;</span><br><span class=\"line\">        <span class=\"attribute\">margin-bottom</span>: <span class=\"number\">0</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"selector-class\">.hex</span><span class=\"selector-pseudo\">:nth-child(7n+2)</span>,</span><br><span class=\"line\">    <span class=\"selector-class\">.hex</span><span class=\"selector-pseudo\">:nth-child(7n+6)</span> &#123;</span><br><span class=\"line\">        <span class=\"attribute\">margin-left</span>: <span class=\"number\">1%</span>;</span><br><span class=\"line\">        <span class=\"attribute\">margin-right</span>: <span class=\"number\">1%</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"selector-class\">.hex</span><span class=\"selector-pseudo\">:nth-child(7n+3)</span> &#123;</span><br><span class=\"line\">        <span class=\"attribute\">margin-right</span>: <span class=\"number\">1%</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"selector-class\">.hex</span><span class=\"selector-pseudo\">:nth-child(7n+8)</span> &#123;</span><br><span class=\"line\">        <span class=\"attribute\">clear</span>: left;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"selector-class\">.hex</span><span class=\"selector-pseudo\">:nth-child(7n+5)</span> &#123;</span><br><span class=\"line\">        <span class=\"attribute\">clear</span>: left;</span><br><span class=\"line\">        <span class=\"attribute\">margin-left</span>: <span class=\"number\">0.5%</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">@<span class=\"keyword\">media</span> (max-width: <span class=\"number\">900px</span>) and (min-width:<span class=\"number\">601px</span>) &#123; <span class=\"comment\">/* &lt;- 3-2  hexagons per row */</span></span><br><span class=\"line\">    <span class=\"selector-class\">.hex</span> &#123;</span><br><span class=\"line\">        <span class=\"attribute\">width</span>: <span class=\"number\">32.666%</span>; <span class=\"comment\">/* = (100-2) / 3 */</span></span><br><span class=\"line\">        <span class=\"attribute\">padding-bottom</span>: <span class=\"number\">37.720%</span>; <span class=\"comment\">/* =  width / sin(60) */</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"selector-class\">.hex</span><span class=\"selector-pseudo\">:nth-child(5n+4)</span>,</span><br><span class=\"line\">    <span class=\"selector-class\">.hex</span><span class=\"selector-pseudo\">:nth-child(5n+5)</span> &#123;</span><br><span class=\"line\">        <span class=\"attribute\">margin-top</span>: -<span class=\"number\">8.564%</span>;</span><br><span class=\"line\">        <span class=\"attribute\">margin-bottom</span>: -<span class=\"number\">8.564%</span>;</span><br><span class=\"line\">        <span class=\"attribute\">-webkit-transform</span>: <span class=\"built_in\">translateX</span>(50%) <span class=\"built_in\">rotate</span>(-60deg) <span class=\"built_in\">skewY</span>(30deg);</span><br><span class=\"line\">            <span class=\"attribute\">-ms-transform</span>: <span class=\"built_in\">translateX</span>(50%) <span class=\"built_in\">rotate</span>(-60deg) <span class=\"built_in\">skewY</span>(30deg);</span><br><span class=\"line\">                <span class=\"attribute\">transform</span>: <span class=\"built_in\">translateX</span>(50%) <span class=\"built_in\">rotate</span>(-60deg) <span class=\"built_in\">skewY</span>(30deg);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"selector-class\">.hex</span><span class=\"selector-pseudo\">:nth-child(5n+4)</span><span class=\"selector-pseudo\">:last-child</span>,</span><br><span class=\"line\">    <span class=\"selector-class\">.hex</span><span class=\"selector-pseudo\">:nth-child(5n+5)</span><span class=\"selector-pseudo\">:last-child</span> &#123;</span><br><span class=\"line\">        <span class=\"attribute\">margin-bottom</span>: <span class=\"number\">0</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"selector-class\">.hex</span><span class=\"selector-pseudo\">:nth-child(5n+4)</span> &#123;</span><br><span class=\"line\">        <span class=\"attribute\">margin-right</span>: <span class=\"number\">1%</span>;</span><br><span class=\"line\">        <span class=\"attribute\">margin-left</span>: <span class=\"number\">0.5%</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"selector-class\">.hex</span><span class=\"selector-pseudo\">:nth-child(5n+2)</span> &#123;</span><br><span class=\"line\">        <span class=\"attribute\">margin-left</span>: <span class=\"number\">1%</span>;</span><br><span class=\"line\">        <span class=\"attribute\">margin-right</span>: <span class=\"number\">1%</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"selector-class\">.hex</span><span class=\"selector-pseudo\">:nth-child(5n+6)</span> &#123;</span><br><span class=\"line\">        <span class=\"attribute\">clear</span>: left;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">@<span class=\"keyword\">media</span> (max-width: <span class=\"number\">600px</span>) &#123; <span class=\"comment\">/* &lt;- 2-1  hexagons per row */</span></span><br><span class=\"line\">    <span class=\"selector-class\">.hex</span> &#123;</span><br><span class=\"line\">        <span class=\"attribute\">width</span>: <span class=\"number\">49.5%</span>; <span class=\"comment\">/* = (100-1) / 2 */</span></span><br><span class=\"line\">        <span class=\"attribute\">padding-bottom</span>: <span class=\"number\">57.158%</span>; <span class=\"comment\">/* =  width / sin(60) */</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"selector-class\">.hex</span><span class=\"selector-pseudo\">:nth-child(3n+3)</span> &#123;</span><br><span class=\"line\">        <span class=\"attribute\">margin-top</span>: -<span class=\"number\">13.423%</span>;</span><br><span class=\"line\">        <span class=\"attribute\">margin-bottom</span>: -<span class=\"number\">13.423%</span>;</span><br><span class=\"line\">        <span class=\"attribute\">-webkit-transform</span>: <span class=\"built_in\">translateX</span>(50%) <span class=\"built_in\">rotate</span>(-60deg) <span class=\"built_in\">skewY</span>(30deg);</span><br><span class=\"line\">            <span class=\"attribute\">-ms-transform</span>: <span class=\"built_in\">translateX</span>(50%) <span class=\"built_in\">rotate</span>(-60deg) <span class=\"built_in\">skewY</span>(30deg);</span><br><span class=\"line\">                <span class=\"attribute\">transform</span>: <span class=\"built_in\">translateX</span>(50%) <span class=\"built_in\">rotate</span>(-60deg) <span class=\"built_in\">skewY</span>(30deg);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"selector-class\">.hex</span><span class=\"selector-pseudo\">:nth-child(3n+3)</span><span class=\"selector-pseudo\">:last-child</span> &#123;</span><br><span class=\"line\">        <span class=\"attribute\">margin-bottom</span>: <span class=\"number\">0</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"selector-class\">.hex</span><span class=\"selector-pseudo\">:nth-child(3n+3)</span> &#123;</span><br><span class=\"line\">        <span class=\"attribute\">margin-left</span>: <span class=\"number\">0.5%</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"selector-class\">.hex</span><span class=\"selector-pseudo\">:nth-child(3n+2)</span> &#123;</span><br><span class=\"line\">        <span class=\"attribute\">margin-left</span>: <span class=\"number\">1%</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"selector-class\">.hex</span><span class=\"selector-pseudo\">:nth-child(3n+4)</span> &#123;</span><br><span class=\"line\">        <span class=\"attribute\">clear</span>: left;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">@<span class=\"keyword\">media</span> (max-width: <span class=\"number\">400px</span>) &#123;</span><br><span class=\"line\">    <span class=\"selector-id\">#hexGrid</span> &#123;</span><br><span class=\"line\">        <span class=\"attribute\">font-size</span>: <span class=\"number\">13px</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"通过css切片实现\"><a href=\"#通过css切片实现\" class=\"headerlink\" title=\"通过css切片实现\"></a>通过css切片实现</h2><blockquote>\n<ul>\n<li>思路：利用css切片实现六边形</li>\n<li>优点：方便扩展，结构简单</li>\n<li>缺点：兼容性差，学习曲线陡峭</li>\n</ul>\n</blockquote>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE html&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">style</span> <span class=\"attr\">type</span>=<span class=\"string\">\"text/css\"</span>&gt;</span></span><br><span class=\"line\">    img&#123;</span><br><span class=\"line\"><span class=\"css\">      <span class=\"selector-tag\">clip-path</span>: <span class=\"selector-tag\">polygon</span>(25<span class=\"selector-class\">.8</span>% 0,75<span class=\"selector-class\">.8</span>% 0,100% 44%,75<span class=\"selector-class\">.8</span>% 87<span class=\"selector-class\">.8</span>%,25<span class=\"selector-class\">.8</span>% 87<span class=\"selector-class\">.8</span>%, 0 50%,25<span class=\"selector-class\">.8</span>% 0);</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">img</span> <span class=\"attr\">src</span>=<span class=\"string\">\"http://www.jq22.com/demo/css3-image-grid-layout201703082234/img/6.png\"</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"others\"><a href=\"#others\" class=\"headerlink\" title=\"others\"></a>others</h2><p>还有另外svg、canvas的解决办法，可以自行学习。</p>\n<ul>\n<li><a href=\"https://developer.mozilla.org/zh-CN/docs/Web/SVG/Tutorial\" target=\"_blank\" rel=\"noopener\">svg</a></li>\n<li><a href=\"https://developer.mozilla.org/zh-CN/docs/Web/API/Canvas_API\" target=\"_blank\" rel=\"noopener\">canvas</a></li>\n<li></li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<p><img src=\"/blog/img/comb.png\" alt=\"img5\">      </p>\n<h2 id=\"使用三个元素实现六边形效果\"><a href=\"#使用三个元素实现六边形效果\" class=\"headerlink\" title=\"使用三个元素实现六边形效果\"></a>使用三个元素实现六边形效果</h2><blockquote>\n<ul>\n<li>思路：使用三个同样大小的div相互叠加，形成正六边形区域</li>\n<li>优点：兼容性最好</li>\n<li>缺点：结构繁琐，难以扩展</li>\n</ul>\n</blockquote>\n<p>准备三个同样大小的div，其中一个逆时针旋转60deg,另一个顺时针旋转60deg,三个div叠加的部分刚好是正六边形。<br><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE html&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">http-equiv</span>=<span class=\"string\">\"Content-Type\"</span> <span class=\"attr\">content</span>=<span class=\"string\">\"text/html; charset=utf-8\"</span>/&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>CSS3 实现六边形图片展示效果<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">style</span>&gt;</span></span><br><span class=\"line\"><span class=\"css\">    <span class=\"selector-class\">.boxF</span>, <span class=\"selector-class\">.boxS</span>, <span class=\"selector-class\">.boxT</span> &#123;</span></span><br><span class=\"line\">      width: 200px;</span><br><span class=\"line\">      height: 250px;</span><br><span class=\"line\">      overflow: hidden;</span><br><span class=\"line\">      position: relative;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"><span class=\"css\">    <span class=\"selector-class\">.boxF</span>, <span class=\"selector-class\">.boxS</span> &#123;</span></span><br><span class=\"line\">      visibility: hidden;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"><span class=\"css\">    <span class=\"selector-class\">.boxF</span> &#123;</span></span><br><span class=\"line\">      transform: rotate(120deg);</span><br><span class=\"line\">      float: left;</span><br><span class=\"line\">      margin-left: 10px;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"><span class=\"css\">    <span class=\"selector-class\">.boxS</span> &#123;</span></span><br><span class=\"line\">      transform: rotate(-60deg);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"><span class=\"css\">    <span class=\"selector-class\">.boxT</span> &#123;</span></span><br><span class=\"line\">      transform: rotate(-60deg);</span><br><span class=\"line\">      background: no-repeat 50% center;</span><br><span class=\"line\">      visibility: visible;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"><span class=\"css\">    <span class=\"selector-class\">.boxF</span><span class=\"selector-pseudo\">:hover</span> &#123;</span></span><br><span class=\"line\">      z-index: 999;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"><span class=\"css\">    <span class=\"selector-class\">.boxF</span><span class=\"selector-pseudo\">:hover</span> <span class=\"selector-class\">.boxT</span> &#123;</span></span><br><span class=\"line\">      background-size: 400%;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"boxF\"</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"boxS\"</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"boxT\"</span> <span class=\"attr\">style</span>=<span class=\"string\">\"background-image: url('1.jpg');\"</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure></p>\n<h2 id=\"使用一个元素配合css变形得到六边形\"><a href=\"#使用一个元素配合css变形得到六边形\" class=\"headerlink\" title=\"使用一个元素配合css变形得到六边形\"></a>使用一个元素配合css变形得到六边形</h2><blockquote>\n<ul>\n<li>思路：利用旋转、斜切和位移达到六边形效果</li>\n<li>优点：方便扩展，结构清晰</li>\n<li>缺点：理解困难，曲线陡峭</li>\n</ul>\n</blockquote>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE html&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE html&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span> <span class=\"attr\">lang</span>=<span class=\"string\">\"zh\"</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">\"UTF-8\"</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">http-equiv</span>=<span class=\"string\">\"X-UA-Compatible\"</span> <span class=\"attr\">content</span>=<span class=\"string\">\"IE=edge,chrome=1\"</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">name</span>=<span class=\"string\">\"viewport\"</span> <span class=\"attr\">content</span>=<span class=\"string\">\"width=device-width, initial-scale=1.0\"</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">link</span> <span class=\"attr\">rel</span>=<span class=\"string\">\"stylesheet\"</span> <span class=\"attr\">type</span>=<span class=\"string\">\"text/css\"</span> <span class=\"attr\">href</span>=<span class=\"string\">\"index.css\"</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">ul</span> <span class=\"attr\">id</span>=<span class=\"string\">\"hexGrid\"</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">li</span> <span class=\"attr\">class</span>=<span class=\"string\">\"hex\"</span>&gt;</span> </span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">class</span>=<span class=\"string\">\"hexIn\"</span> <span class=\"attr\">href</span>=<span class=\"string\">\"#\"</span>&gt;</span> </span><br><span class=\"line\">  \t\t<span class=\"tag\">&lt;<span class=\"name\">img</span> <span class=\"attr\">src</span>=<span class=\"string\">\"1.png\"</span> <span class=\"attr\">alt</span>=<span class=\"string\">\"\"</span> /&gt;</span></span><br><span class=\"line\">    \t<span class=\"tag\">&lt;<span class=\"name\">h1</span>&gt;</span>title<span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span><br><span class=\"line\">    \t<span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>Some description about this module<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">  \t<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span> </span><br><span class=\"line\">\t<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">li</span> <span class=\"attr\">class</span>=<span class=\"string\">\"hex\"</span>&gt;</span> </span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">class</span>=<span class=\"string\">\"hexIn\"</span> <span class=\"attr\">href</span>=<span class=\"string\">\"#\"</span>&gt;</span> </span><br><span class=\"line\">  \t\t<span class=\"tag\">&lt;<span class=\"name\">img</span> <span class=\"attr\">src</span>=<span class=\"string\">\"1.png\"</span> <span class=\"attr\">alt</span>=<span class=\"string\">\"\"</span> /&gt;</span></span><br><span class=\"line\">    \t<span class=\"tag\">&lt;<span class=\"name\">h1</span>&gt;</span>title<span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span><br><span class=\"line\">    \t<span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>Some description about this module<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">  \t<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span> </span><br><span class=\"line\">\t<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">li</span> <span class=\"attr\">class</span>=<span class=\"string\">\"hex\"</span>&gt;</span> </span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">class</span>=<span class=\"string\">\"hexIn\"</span> <span class=\"attr\">href</span>=<span class=\"string\">\"#\"</span>&gt;</span> </span><br><span class=\"line\">  \t\t<span class=\"tag\">&lt;<span class=\"name\">img</span> <span class=\"attr\">src</span>=<span class=\"string\">\"1.png\"</span> <span class=\"attr\">alt</span>=<span class=\"string\">\"\"</span> /&gt;</span></span><br><span class=\"line\">    \t<span class=\"tag\">&lt;<span class=\"name\">h1</span>&gt;</span>title<span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span><br><span class=\"line\">    \t<span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>Some description about this module<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">  \t<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span> </span><br><span class=\"line\">\t<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">li</span> <span class=\"attr\">class</span>=<span class=\"string\">\"hex\"</span>&gt;</span> </span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">class</span>=<span class=\"string\">\"hexIn\"</span> <span class=\"attr\">href</span>=<span class=\"string\">\"#\"</span>&gt;</span> </span><br><span class=\"line\">  \t    <span class=\"tag\">&lt;<span class=\"name\">img</span> <span class=\"attr\">src</span>=<span class=\"string\">\"1.png\"</span> <span class=\"attr\">alt</span>=<span class=\"string\">\"\"</span> /&gt;</span></span><br><span class=\"line\">    \t<span class=\"tag\">&lt;<span class=\"name\">h1</span>&gt;</span>title<span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span><br><span class=\"line\">    \t<span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>Some description about this module<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">  \t<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span> </span><br><span class=\"line\">\t<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">li</span> <span class=\"attr\">class</span>=<span class=\"string\">\"hex\"</span>&gt;</span> </span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">class</span>=<span class=\"string\">\"hexIn\"</span> <span class=\"attr\">href</span>=<span class=\"string\">\"#\"</span>&gt;</span> </span><br><span class=\"line\">  \t\t<span class=\"tag\">&lt;<span class=\"name\">img</span> <span class=\"attr\">src</span>=<span class=\"string\">\"1.png\"</span> <span class=\"attr\">alt</span>=<span class=\"string\">\"\"</span> /&gt;</span></span><br><span class=\"line\">    \t<span class=\"tag\">&lt;<span class=\"name\">h1</span>&gt;</span>title<span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span><br><span class=\"line\">    \t<span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>Some description about this module<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">  \t<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span> </span><br><span class=\"line\">\t<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">li</span> <span class=\"attr\">class</span>=<span class=\"string\">\"hex\"</span>&gt;</span> </span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">class</span>=<span class=\"string\">\"hexIn\"</span> <span class=\"attr\">href</span>=<span class=\"string\">\"#\"</span>&gt;</span> </span><br><span class=\"line\">  \t\t<span class=\"tag\">&lt;<span class=\"name\">img</span> <span class=\"attr\">src</span>=<span class=\"string\">\"1.png\"</span> <span class=\"attr\">alt</span>=<span class=\"string\">\"\"</span> /&gt;</span></span><br><span class=\"line\">    \t<span class=\"tag\">&lt;<span class=\"name\">h1</span>&gt;</span>title<span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span><br><span class=\"line\">    \t<span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>Some description about this module<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">  \t<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span> </span><br><span class=\"line\">\t<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">li</span> <span class=\"attr\">class</span>=<span class=\"string\">\"hex\"</span>&gt;</span> </span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">class</span>=<span class=\"string\">\"hexIn\"</span> <span class=\"attr\">href</span>=<span class=\"string\">\"#\"</span>&gt;</span> </span><br><span class=\"line\">  \t\t<span class=\"tag\">&lt;<span class=\"name\">img</span> <span class=\"attr\">src</span>=<span class=\"string\">\"1.png\"</span> <span class=\"attr\">alt</span>=<span class=\"string\">\"\"</span> /&gt;</span></span><br><span class=\"line\">    \t<span class=\"tag\">&lt;<span class=\"name\">h1</span>&gt;</span>title<span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span><br><span class=\"line\">    \t<span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>Some description about this module<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">  \t<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span> </span><br><span class=\"line\">\t<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">li</span> <span class=\"attr\">class</span>=<span class=\"string\">\"hex\"</span>&gt;</span> </span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">class</span>=<span class=\"string\">\"hexIn\"</span> <span class=\"attr\">href</span>=<span class=\"string\">\"#\"</span>&gt;</span> </span><br><span class=\"line\">  \t\t<span class=\"tag\">&lt;<span class=\"name\">img</span> <span class=\"attr\">src</span>=<span class=\"string\">\"1.png\"</span> <span class=\"attr\">alt</span>=<span class=\"string\">\"\"</span> /&gt;</span></span><br><span class=\"line\">    \t<span class=\"tag\">&lt;<span class=\"name\">h1</span>&gt;</span>title<span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span><br><span class=\"line\">    \t<span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>Some description about this module<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">  \t<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span> </span><br><span class=\"line\">\t<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">li</span> <span class=\"attr\">class</span>=<span class=\"string\">\"hex\"</span>&gt;</span> </span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">class</span>=<span class=\"string\">\"hexIn\"</span> <span class=\"attr\">href</span>=<span class=\"string\">\"#\"</span>&gt;</span> </span><br><span class=\"line\">  \t\t<span class=\"tag\">&lt;<span class=\"name\">img</span> <span class=\"attr\">src</span>=<span class=\"string\">\"1.png\"</span> <span class=\"attr\">alt</span>=<span class=\"string\">\"\"</span> /&gt;</span></span><br><span class=\"line\">    \t<span class=\"tag\">&lt;<span class=\"name\">h1</span>&gt;</span>title<span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span><br><span class=\"line\">    \t<span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>Some description about this module<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">  \t<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span> </span><br><span class=\"line\">\t<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">li</span> <span class=\"attr\">class</span>=<span class=\"string\">\"hex\"</span>&gt;</span> </span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">class</span>=<span class=\"string\">\"hexIn\"</span> <span class=\"attr\">href</span>=<span class=\"string\">\"#\"</span>&gt;</span> </span><br><span class=\"line\">  \t\t<span class=\"tag\">&lt;<span class=\"name\">img</span> <span class=\"attr\">src</span>=<span class=\"string\">\"1.png\"</span> <span class=\"attr\">alt</span>=<span class=\"string\">\"\"</span> /&gt;</span></span><br><span class=\"line\">    \t<span class=\"tag\">&lt;<span class=\"name\">h1</span>&gt;</span>title<span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span><br><span class=\"line\">    \t<span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>Some description about this module<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">  \t<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span> </span><br><span class=\"line\">\t<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">ul</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br><span class=\"line\">165</span><br><span class=\"line\">166</span><br><span class=\"line\">167</span><br><span class=\"line\">168</span><br><span class=\"line\">169</span><br><span class=\"line\">170</span><br><span class=\"line\">171</span><br><span class=\"line\">172</span><br><span class=\"line\">173</span><br><span class=\"line\">174</span><br><span class=\"line\">175</span><br><span class=\"line\">176</span><br><span class=\"line\">177</span><br><span class=\"line\">178</span><br><span class=\"line\">179</span><br><span class=\"line\">180</span><br><span class=\"line\">181</span><br><span class=\"line\">182</span><br><span class=\"line\">183</span><br><span class=\"line\">184</span><br><span class=\"line\">185</span><br><span class=\"line\">186</span><br><span class=\"line\">187</span><br><span class=\"line\">188</span><br><span class=\"line\">189</span><br><span class=\"line\">190</span><br><span class=\"line\">191</span><br><span class=\"line\">192</span><br><span class=\"line\">193</span><br><span class=\"line\">194</span><br><span class=\"line\">195</span><br><span class=\"line\">196</span><br><span class=\"line\">197</span><br><span class=\"line\">198</span><br><span class=\"line\">199</span><br><span class=\"line\">200</span><br><span class=\"line\">201</span><br><span class=\"line\">202</span><br><span class=\"line\">203</span><br><span class=\"line\">204</span><br><span class=\"line\">205</span><br><span class=\"line\">206</span><br><span class=\"line\">207</span><br><span class=\"line\">208</span><br><span class=\"line\">209</span><br><span class=\"line\">210</span><br><span class=\"line\">211</span><br><span class=\"line\">212</span><br><span class=\"line\">213</span><br><span class=\"line\">214</span><br><span class=\"line\">215</span><br><span class=\"line\">216</span><br><span class=\"line\">217</span><br><span class=\"line\">218</span><br><span class=\"line\">219</span><br><span class=\"line\">220</span><br><span class=\"line\">221</span><br><span class=\"line\">222</span><br><span class=\"line\">223</span><br><span class=\"line\">224</span><br><span class=\"line\">225</span><br><span class=\"line\">226</span><br><span class=\"line\">227</span><br><span class=\"line\">228</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">* &#123;</span><br><span class=\"line\">    <span class=\"attribute\">margin</span>: <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"attribute\">padding</span>: <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-id\">#hexGrid</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">overflow</span>: hidden;</span><br><span class=\"line\">    <span class=\"attribute\">width</span>: <span class=\"number\">90%</span>;</span><br><span class=\"line\">    <span class=\"attribute\">margin</span>: <span class=\"number\">0</span> auto;</span><br><span class=\"line\">    <span class=\"attribute\">padding</span>:<span class=\"number\">0.866%</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"attribute\">font-family</span>: <span class=\"string\">'Raleway'</span>, sans-serif;</span><br><span class=\"line\">    <span class=\"attribute\">font-size</span>: <span class=\"number\">15px</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-id\">#hexGrid</span><span class=\"selector-pseudo\">:after</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">content</span>: <span class=\"string\">\"\"</span>;</span><br><span class=\"line\">    <span class=\"attribute\">display</span>: block;</span><br><span class=\"line\">    <span class=\"attribute\">clear</span>: both;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-class\">.hex</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">position</span>: relative;</span><br><span class=\"line\">    <span class=\"attribute\">list-style-type</span>: none;</span><br><span class=\"line\">    <span class=\"attribute\">float</span>: left;</span><br><span class=\"line\">    <span class=\"attribute\">overflow</span>: hidden;</span><br><span class=\"line\">    <span class=\"attribute\">visibility</span>: hidden;</span><br><span class=\"line\">    <span class=\"attribute\">outline</span>:<span class=\"number\">1px</span> solid transparent;</span><br><span class=\"line\">            <span class=\"attribute\">transform</span>: <span class=\"built_in\">rotate</span>(-60deg) <span class=\"built_in\">skewY</span>(30deg) <span class=\"built_in\">translatez</span>(-1px);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-class\">.hex</span> * &#123;</span><br><span class=\"line\">    <span class=\"attribute\">position</span>: absolute;</span><br><span class=\"line\">    <span class=\"attribute\">visibility</span>: visible;</span><br><span class=\"line\">    <span class=\"attribute\">outline</span>:<span class=\"number\">1px</span> solid transparent; <span class=\"comment\">/* fix for jagged edges in FF on hover transition */</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-class\">.hexIn</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">display</span>:block;</span><br><span class=\"line\">    <span class=\"attribute\">width</span>: <span class=\"number\">100%</span>;</span><br><span class=\"line\">    <span class=\"attribute\">height</span>: <span class=\"number\">100%</span>;</span><br><span class=\"line\">    <span class=\"attribute\">text-align</span>: center;</span><br><span class=\"line\">    <span class=\"attribute\">color</span>: <span class=\"number\">#fff</span>;</span><br><span class=\"line\">    <span class=\"attribute\">overflow</span>: hidden;</span><br><span class=\"line\">    <span class=\"attribute\">-webkit-transform</span>: <span class=\"built_in\">skewY</span>(-30deg) <span class=\"built_in\">rotate</span>(60deg);</span><br><span class=\"line\">        <span class=\"attribute\">-ms-transform</span>: <span class=\"built_in\">skewY</span>(-30deg) <span class=\"built_in\">rotate</span>(60deg);</span><br><span class=\"line\">            <span class=\"attribute\">transform</span>: <span class=\"built_in\">skewY</span>(-30deg) <span class=\"built_in\">rotate</span>(60deg);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/*** HEX CONTENT **********************************************************************/</span></span><br><span class=\"line\"><span class=\"selector-class\">.hex</span> <span class=\"selector-tag\">img</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">left</span>: -<span class=\"number\">100%</span>;</span><br><span class=\"line\">    <span class=\"attribute\">right</span>: -<span class=\"number\">100%</span>;</span><br><span class=\"line\">    <span class=\"attribute\">width</span>: auto;</span><br><span class=\"line\">    <span class=\"attribute\">height</span>: <span class=\"number\">100%</span>;</span><br><span class=\"line\">    <span class=\"attribute\">margin</span>: <span class=\"number\">0</span> auto;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-class\">.hex</span> <span class=\"selector-tag\">h1</span>, <span class=\"selector-class\">.hex</span> <span class=\"selector-tag\">p</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">width</span>: <span class=\"number\">102%</span>;</span><br><span class=\"line\">    <span class=\"attribute\">left</span>:-<span class=\"number\">1%</span>; <span class=\"comment\">/* prevent line on the right where background doesn't cover image */</span></span><br><span class=\"line\">    <span class=\"attribute\">padding</span>: <span class=\"number\">5%</span>;</span><br><span class=\"line\">    <span class=\"attribute\">box-sizing</span>:border-box;</span><br><span class=\"line\">    <span class=\"attribute\">background-color</span>: <span class=\"built_in\">rgba</span>(0, 128, 128, 0.8);</span><br><span class=\"line\">    <span class=\"attribute\">font-weight</span>: <span class=\"number\">300</span>;</span><br><span class=\"line\">    <span class=\"attribute\">-webkit-transition</span>:  -webkit-transform .<span class=\"number\">2s</span> ease-out, opacity .<span class=\"number\">3s</span> ease-out;</span><br><span class=\"line\">            <span class=\"attribute\">transition</span>:          transform .<span class=\"number\">2s</span> ease-out, opacity .<span class=\"number\">3s</span> ease-out;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-class\">.hex</span> <span class=\"selector-tag\">h1</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">bottom</span>: <span class=\"number\">50%</span>;</span><br><span class=\"line\">    <span class=\"attribute\">padding-top</span>:<span class=\"number\">50%</span>;</span><br><span class=\"line\">    <span class=\"attribute\">font-size</span>: <span class=\"number\">1.5em</span>;</span><br><span class=\"line\">    <span class=\"attribute\">z-index</span>: <span class=\"number\">1</span>;</span><br><span class=\"line\">    <span class=\"attribute\">-webkit-transform</span>:<span class=\"built_in\">translateY</span>(-100%) <span class=\"built_in\">translatez</span>(-1px);</span><br><span class=\"line\">        <span class=\"attribute\">-ms-transform</span>:<span class=\"built_in\">translateY</span>(-100%) <span class=\"built_in\">translatez</span>(-1px);</span><br><span class=\"line\">            <span class=\"attribute\">transform</span>:<span class=\"built_in\">translateY</span>(-100%) <span class=\"built_in\">translatez</span>(-1px);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-class\">.hex</span> <span class=\"selector-tag\">h1</span><span class=\"selector-pseudo\">:after</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">content</span>: <span class=\"string\">''</span>;</span><br><span class=\"line\">    <span class=\"attribute\">position</span>: absolute;</span><br><span class=\"line\">    <span class=\"attribute\">bottom</span>: <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"attribute\">left</span>: <span class=\"number\">45%</span>;</span><br><span class=\"line\">    <span class=\"attribute\">width</span>: <span class=\"number\">10%</span>;</span><br><span class=\"line\">    <span class=\"attribute\">text-align</span>: center;</span><br><span class=\"line\">    <span class=\"attribute\">border-bottom</span>: <span class=\"number\">1px</span> solid <span class=\"number\">#fff</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-class\">.hex</span> <span class=\"selector-tag\">p</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">top</span>: <span class=\"number\">50%</span>;</span><br><span class=\"line\">    <span class=\"attribute\">padding-bottom</span>:<span class=\"number\">50%</span>;</span><br><span class=\"line\">    <span class=\"attribute\">-webkit-transform</span>:<span class=\"built_in\">translateY</span>(100%) <span class=\"built_in\">translatez</span>(-1px);</span><br><span class=\"line\">        <span class=\"attribute\">-ms-transform</span>:<span class=\"built_in\">translateY</span>(100%) <span class=\"built_in\">translatez</span>(-1px);</span><br><span class=\"line\">            <span class=\"attribute\">transform</span>:<span class=\"built_in\">translateY</span>(100%) <span class=\"built_in\">translatez</span>(-1px);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-class\">.hexIn</span><span class=\"selector-pseudo\">:hover</span> <span class=\"selector-tag\">h1</span>, <span class=\"selector-class\">.hexIn</span><span class=\"selector-pseudo\">:focus</span> <span class=\"selector-tag\">h1</span>,</span><br><span class=\"line\"><span class=\"selector-class\">.hexIn</span><span class=\"selector-pseudo\">:hover</span> <span class=\"selector-tag\">p</span>, <span class=\"selector-class\">.hexIn</span><span class=\"selector-pseudo\">:focus</span> <span class=\"selector-tag\">p</span>&#123;</span><br><span class=\"line\">    <span class=\"attribute\">-webkit-transform</span>:<span class=\"built_in\">translateY</span>(0%) <span class=\"built_in\">translatez</span>(-1px);</span><br><span class=\"line\">        <span class=\"attribute\">-ms-transform</span>:<span class=\"built_in\">translateY</span>(0%) <span class=\"built_in\">translatez</span>(-1px);</span><br><span class=\"line\">            <span class=\"attribute\">transform</span>:<span class=\"built_in\">translateY</span>(0%) <span class=\"built_in\">translatez</span>(-1px);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">@<span class=\"keyword\">media</span> (min-width:<span class=\"number\">1201px</span>) &#123; <span class=\"comment\">/* &lt;- 5-4  hexagons per row */</span></span><br><span class=\"line\">    <span class=\"selector-class\">.hex</span> &#123;</span><br><span class=\"line\">        <span class=\"attribute\">width</span>: <span class=\"number\">19.2%</span>; <span class=\"comment\">/* = (100-4) / 5 */</span></span><br><span class=\"line\">        <span class=\"attribute\">padding-bottom</span>: <span class=\"number\">22.170%</span>; <span class=\"comment\">/* =  width / sin(60deg) */</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"selector-class\">.hex</span><span class=\"selector-pseudo\">:nth-child(9n+6)</span>,</span><br><span class=\"line\">    <span class=\"selector-class\">.hex</span><span class=\"selector-pseudo\">:nth-child(9n+7)</span>,</span><br><span class=\"line\">    <span class=\"selector-class\">.hex</span><span class=\"selector-pseudo\">:nth-child(9n+8)</span>,</span><br><span class=\"line\">    <span class=\"selector-class\">.hex</span><span class=\"selector-pseudo\">:nth-child(9n+9)</span> &#123;</span><br><span class=\"line\">        <span class=\"attribute\">margin-top</span>: -<span class=\"number\">4.676%</span>;</span><br><span class=\"line\">        <span class=\"attribute\">margin-bottom</span>: -<span class=\"number\">4.676%</span>;</span><br><span class=\"line\">        <span class=\"attribute\">-webkit-transform</span>: <span class=\"built_in\">translateX</span>(50%) <span class=\"built_in\">rotate</span>(-60deg) <span class=\"built_in\">skewY</span>(30deg);</span><br><span class=\"line\">            <span class=\"attribute\">-ms-transform</span>: <span class=\"built_in\">translateX</span>(50%) <span class=\"built_in\">rotate</span>(-60deg) <span class=\"built_in\">skewY</span>(30deg);</span><br><span class=\"line\">                <span class=\"attribute\">transform</span>: <span class=\"built_in\">translateX</span>(50%) <span class=\"built_in\">rotate</span>(-60deg) <span class=\"built_in\">skewY</span>(30deg);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"selector-class\">.hex</span><span class=\"selector-pseudo\">:nth-child(9n+6)</span><span class=\"selector-pseudo\">:last-child</span>,</span><br><span class=\"line\">    <span class=\"selector-class\">.hex</span><span class=\"selector-pseudo\">:nth-child(9n+7)</span><span class=\"selector-pseudo\">:last-child</span>,</span><br><span class=\"line\">    <span class=\"selector-class\">.hex</span><span class=\"selector-pseudo\">:nth-child(9n+8)</span><span class=\"selector-pseudo\">:last-child</span>,</span><br><span class=\"line\">    <span class=\"selector-class\">.hex</span><span class=\"selector-pseudo\">:nth-child(9n+9)</span><span class=\"selector-pseudo\">:last-child</span> &#123;</span><br><span class=\"line\">        <span class=\"attribute\">margin-bottom</span>: <span class=\"number\">0</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"selector-class\">.hex</span><span class=\"selector-pseudo\">:nth-child(9n+6)</span> &#123;</span><br><span class=\"line\">        <span class=\"attribute\">margin-left</span>: <span class=\"number\">0.5%</span>;</span><br><span class=\"line\">        <span class=\"attribute\">clear</span>: left;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"selector-class\">.hex</span><span class=\"selector-pseudo\">:nth-child(9n+10)</span> &#123;</span><br><span class=\"line\">        <span class=\"attribute\">clear</span>: left;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"selector-class\">.hex</span><span class=\"selector-pseudo\">:nth-child(9n+2)</span>,</span><br><span class=\"line\">    <span class=\"selector-class\">.hex</span><span class=\"selector-pseudo\">:nth-child(9n+</span> 7) &#123;</span><br><span class=\"line\">        <span class=\"attribute\">margin-left</span>: <span class=\"number\">1%</span>;</span><br><span class=\"line\">        <span class=\"attribute\">margin-right</span>: <span class=\"number\">1%</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"selector-class\">.hex</span><span class=\"selector-pseudo\">:nth-child(9n+3)</span>,</span><br><span class=\"line\">    <span class=\"selector-class\">.hex</span><span class=\"selector-pseudo\">:nth-child(9n+4)</span>,</span><br><span class=\"line\">    <span class=\"selector-class\">.hex</span><span class=\"selector-pseudo\">:nth-child(9n+8)</span> &#123;</span><br><span class=\"line\">        <span class=\"attribute\">margin-right</span>: <span class=\"number\">1%</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">@<span class=\"keyword\">media</span> (max-width: <span class=\"number\">1200px</span>) and (min-width:<span class=\"number\">901px</span>) &#123;<span class=\"comment\">/* &lt;- 4-3  hexagons per row */</span></span><br><span class=\"line\">    <span class=\"selector-class\">.hex</span> &#123;</span><br><span class=\"line\">        <span class=\"attribute\">width</span>: <span class=\"number\">24.25%</span>; <span class=\"comment\">/* = (100-3) / 4 */</span></span><br><span class=\"line\">        <span class=\"attribute\">padding-bottom</span>: <span class=\"number\">28.001%</span>; <span class=\"comment\">/* =  width / sin(60deg) */</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"selector-class\">.hex</span><span class=\"selector-pseudo\">:nth-child(7n+5)</span>,</span><br><span class=\"line\">    <span class=\"selector-class\">.hex</span><span class=\"selector-pseudo\">:nth-child(7n+6)</span>,</span><br><span class=\"line\">    <span class=\"selector-class\">.hex</span><span class=\"selector-pseudo\">:nth-child(7n+7)</span> &#123;</span><br><span class=\"line\">        <span class=\"attribute\">margin-top</span>: -<span class=\"number\">6.134%</span>;</span><br><span class=\"line\">        <span class=\"attribute\">margin-bottom</span>: -<span class=\"number\">6.134%</span>;</span><br><span class=\"line\">        <span class=\"attribute\">-webkit-transform</span>: <span class=\"built_in\">translateX</span>(50%) <span class=\"built_in\">rotate</span>(-60deg) <span class=\"built_in\">skewY</span>(30deg);</span><br><span class=\"line\">            <span class=\"attribute\">-ms-transform</span>: <span class=\"built_in\">translateX</span>(50%) <span class=\"built_in\">rotate</span>(-60deg) <span class=\"built_in\">skewY</span>(30deg);</span><br><span class=\"line\">                <span class=\"attribute\">transform</span>: <span class=\"built_in\">translateX</span>(50%) <span class=\"built_in\">rotate</span>(-60deg) <span class=\"built_in\">skewY</span>(30deg);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"selector-class\">.hex</span><span class=\"selector-pseudo\">:nth-child(7n+5)</span><span class=\"selector-pseudo\">:last-child</span>,</span><br><span class=\"line\">    <span class=\"selector-class\">.hex</span><span class=\"selector-pseudo\">:nth-child(7n+6)</span><span class=\"selector-pseudo\">:last-child</span>,</span><br><span class=\"line\">    <span class=\"selector-class\">.hex</span><span class=\"selector-pseudo\">:nth-child(7n+7)</span><span class=\"selector-pseudo\">:last-child</span> &#123;</span><br><span class=\"line\">        <span class=\"attribute\">margin-bottom</span>: <span class=\"number\">0</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"selector-class\">.hex</span><span class=\"selector-pseudo\">:nth-child(7n+2)</span>,</span><br><span class=\"line\">    <span class=\"selector-class\">.hex</span><span class=\"selector-pseudo\">:nth-child(7n+6)</span> &#123;</span><br><span class=\"line\">        <span class=\"attribute\">margin-left</span>: <span class=\"number\">1%</span>;</span><br><span class=\"line\">        <span class=\"attribute\">margin-right</span>: <span class=\"number\">1%</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"selector-class\">.hex</span><span class=\"selector-pseudo\">:nth-child(7n+3)</span> &#123;</span><br><span class=\"line\">        <span class=\"attribute\">margin-right</span>: <span class=\"number\">1%</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"selector-class\">.hex</span><span class=\"selector-pseudo\">:nth-child(7n+8)</span> &#123;</span><br><span class=\"line\">        <span class=\"attribute\">clear</span>: left;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"selector-class\">.hex</span><span class=\"selector-pseudo\">:nth-child(7n+5)</span> &#123;</span><br><span class=\"line\">        <span class=\"attribute\">clear</span>: left;</span><br><span class=\"line\">        <span class=\"attribute\">margin-left</span>: <span class=\"number\">0.5%</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">@<span class=\"keyword\">media</span> (max-width: <span class=\"number\">900px</span>) and (min-width:<span class=\"number\">601px</span>) &#123; <span class=\"comment\">/* &lt;- 3-2  hexagons per row */</span></span><br><span class=\"line\">    <span class=\"selector-class\">.hex</span> &#123;</span><br><span class=\"line\">        <span class=\"attribute\">width</span>: <span class=\"number\">32.666%</span>; <span class=\"comment\">/* = (100-2) / 3 */</span></span><br><span class=\"line\">        <span class=\"attribute\">padding-bottom</span>: <span class=\"number\">37.720%</span>; <span class=\"comment\">/* =  width / sin(60) */</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"selector-class\">.hex</span><span class=\"selector-pseudo\">:nth-child(5n+4)</span>,</span><br><span class=\"line\">    <span class=\"selector-class\">.hex</span><span class=\"selector-pseudo\">:nth-child(5n+5)</span> &#123;</span><br><span class=\"line\">        <span class=\"attribute\">margin-top</span>: -<span class=\"number\">8.564%</span>;</span><br><span class=\"line\">        <span class=\"attribute\">margin-bottom</span>: -<span class=\"number\">8.564%</span>;</span><br><span class=\"line\">        <span class=\"attribute\">-webkit-transform</span>: <span class=\"built_in\">translateX</span>(50%) <span class=\"built_in\">rotate</span>(-60deg) <span class=\"built_in\">skewY</span>(30deg);</span><br><span class=\"line\">            <span class=\"attribute\">-ms-transform</span>: <span class=\"built_in\">translateX</span>(50%) <span class=\"built_in\">rotate</span>(-60deg) <span class=\"built_in\">skewY</span>(30deg);</span><br><span class=\"line\">                <span class=\"attribute\">transform</span>: <span class=\"built_in\">translateX</span>(50%) <span class=\"built_in\">rotate</span>(-60deg) <span class=\"built_in\">skewY</span>(30deg);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"selector-class\">.hex</span><span class=\"selector-pseudo\">:nth-child(5n+4)</span><span class=\"selector-pseudo\">:last-child</span>,</span><br><span class=\"line\">    <span class=\"selector-class\">.hex</span><span class=\"selector-pseudo\">:nth-child(5n+5)</span><span class=\"selector-pseudo\">:last-child</span> &#123;</span><br><span class=\"line\">        <span class=\"attribute\">margin-bottom</span>: <span class=\"number\">0</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"selector-class\">.hex</span><span class=\"selector-pseudo\">:nth-child(5n+4)</span> &#123;</span><br><span class=\"line\">        <span class=\"attribute\">margin-right</span>: <span class=\"number\">1%</span>;</span><br><span class=\"line\">        <span class=\"attribute\">margin-left</span>: <span class=\"number\">0.5%</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"selector-class\">.hex</span><span class=\"selector-pseudo\">:nth-child(5n+2)</span> &#123;</span><br><span class=\"line\">        <span class=\"attribute\">margin-left</span>: <span class=\"number\">1%</span>;</span><br><span class=\"line\">        <span class=\"attribute\">margin-right</span>: <span class=\"number\">1%</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"selector-class\">.hex</span><span class=\"selector-pseudo\">:nth-child(5n+6)</span> &#123;</span><br><span class=\"line\">        <span class=\"attribute\">clear</span>: left;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">@<span class=\"keyword\">media</span> (max-width: <span class=\"number\">600px</span>) &#123; <span class=\"comment\">/* &lt;- 2-1  hexagons per row */</span></span><br><span class=\"line\">    <span class=\"selector-class\">.hex</span> &#123;</span><br><span class=\"line\">        <span class=\"attribute\">width</span>: <span class=\"number\">49.5%</span>; <span class=\"comment\">/* = (100-1) / 2 */</span></span><br><span class=\"line\">        <span class=\"attribute\">padding-bottom</span>: <span class=\"number\">57.158%</span>; <span class=\"comment\">/* =  width / sin(60) */</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"selector-class\">.hex</span><span class=\"selector-pseudo\">:nth-child(3n+3)</span> &#123;</span><br><span class=\"line\">        <span class=\"attribute\">margin-top</span>: -<span class=\"number\">13.423%</span>;</span><br><span class=\"line\">        <span class=\"attribute\">margin-bottom</span>: -<span class=\"number\">13.423%</span>;</span><br><span class=\"line\">        <span class=\"attribute\">-webkit-transform</span>: <span class=\"built_in\">translateX</span>(50%) <span class=\"built_in\">rotate</span>(-60deg) <span class=\"built_in\">skewY</span>(30deg);</span><br><span class=\"line\">            <span class=\"attribute\">-ms-transform</span>: <span class=\"built_in\">translateX</span>(50%) <span class=\"built_in\">rotate</span>(-60deg) <span class=\"built_in\">skewY</span>(30deg);</span><br><span class=\"line\">                <span class=\"attribute\">transform</span>: <span class=\"built_in\">translateX</span>(50%) <span class=\"built_in\">rotate</span>(-60deg) <span class=\"built_in\">skewY</span>(30deg);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"selector-class\">.hex</span><span class=\"selector-pseudo\">:nth-child(3n+3)</span><span class=\"selector-pseudo\">:last-child</span> &#123;</span><br><span class=\"line\">        <span class=\"attribute\">margin-bottom</span>: <span class=\"number\">0</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"selector-class\">.hex</span><span class=\"selector-pseudo\">:nth-child(3n+3)</span> &#123;</span><br><span class=\"line\">        <span class=\"attribute\">margin-left</span>: <span class=\"number\">0.5%</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"selector-class\">.hex</span><span class=\"selector-pseudo\">:nth-child(3n+2)</span> &#123;</span><br><span class=\"line\">        <span class=\"attribute\">margin-left</span>: <span class=\"number\">1%</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"selector-class\">.hex</span><span class=\"selector-pseudo\">:nth-child(3n+4)</span> &#123;</span><br><span class=\"line\">        <span class=\"attribute\">clear</span>: left;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">@<span class=\"keyword\">media</span> (max-width: <span class=\"number\">400px</span>) &#123;</span><br><span class=\"line\">    <span class=\"selector-id\">#hexGrid</span> &#123;</span><br><span class=\"line\">        <span class=\"attribute\">font-size</span>: <span class=\"number\">13px</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"通过css切片实现\"><a href=\"#通过css切片实现\" class=\"headerlink\" title=\"通过css切片实现\"></a>通过css切片实现</h2><blockquote>\n<ul>\n<li>思路：利用css切片实现六边形</li>\n<li>优点：方便扩展，结构简单</li>\n<li>缺点：兼容性差，学习曲线陡峭</li>\n</ul>\n</blockquote>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE html&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">style</span> <span class=\"attr\">type</span>=<span class=\"string\">\"text/css\"</span>&gt;</span></span><br><span class=\"line\">    img&#123;</span><br><span class=\"line\"><span class=\"css\">      <span class=\"selector-tag\">clip-path</span>: <span class=\"selector-tag\">polygon</span>(25<span class=\"selector-class\">.8</span>% 0,75<span class=\"selector-class\">.8</span>% 0,100% 44%,75<span class=\"selector-class\">.8</span>% 87<span class=\"selector-class\">.8</span>%,25<span class=\"selector-class\">.8</span>% 87<span class=\"selector-class\">.8</span>%, 0 50%,25<span class=\"selector-class\">.8</span>% 0);</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">img</span> <span class=\"attr\">src</span>=<span class=\"string\">\"http://www.jq22.com/demo/css3-image-grid-layout201703082234/img/6.png\"</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"others\"><a href=\"#others\" class=\"headerlink\" title=\"others\"></a>others</h2><p>还有另外svg、canvas的解决办法，可以自行学习。</p>\n<ul>\n<li><a href=\"https://developer.mozilla.org/zh-CN/docs/Web/SVG/Tutorial\" target=\"_blank\" rel=\"noopener\">svg</a></li>\n<li><a href=\"https://developer.mozilla.org/zh-CN/docs/Web/API/Canvas_API\" target=\"_blank\" rel=\"noopener\">canvas</a></li>\n<li></li>\n</ul>\n"},{"title":"筋斗云文档","date":"2017-12-20T07:33:56.000Z","description":"筋斗云框架前端文档","_content":"当需要制作一款手机应用，希望它既可以在手机浏览器或微信公众号之类的轻应用平台使用，也可以在安卓、苹果等手机上安装使用，由于各平台技术栈完全不同，光前端就需要至少三套人马在各平台各自为战，开发和维护成本极高。现在你多了一种用H5技术制作全平台手机应用的选择，不仅极大的降低开发成本，而且由于H5技术源于已经用了至少20多年的网页技术，门槛也远低于才兴起几年的手机平台开发技术。架构师在选型时会纠结，又想优雅的做全平台应用，又担心用网页技术制作的手机应用的体验到底行不行。    \n川剧中的变脸艺术，如行云流水般切换脸谱，令人惊叹。 如果把手机应用中的每个页面看成一张脸谱，在操作时我们也希望像变脸表演一样有着轻松流畅的体验。 而用传统的网页技术制作的仿手机应用和原生手机应用的体验尚有较大差距，主要原因是每个页面都是一张网页，在操作时有大量网页加载和刷新，不流畅且浪费大量流量。    \n对于网页刷新问题的解决方案是使用Ajax技术制作交互式无刷新网页。早在1998年前后，微软的Outlook Web Access成为第一个应用了Ajax技术的成功的商业应用程序，2005年以后，随着谷歌地图、Gmail等交互式网页应用的流行，Ajax技术也开始流行起来，也诞生了“单网页应用(SPA)”这个概念。      \n在手机应用领域，由于早期手机性能弱，做应用程序基本只能使用原生开发语言，学习门槛很高。随着手机性能的增强和H5技术的流行，已经可以把“单网页应用”技术应用到手机上，让整个应用就是一个网页，而原本一张张相互链接的网页变成了H5应用中的一个个可流畅切换的逻辑页面，消除了网页加载，操作体验接近手机原生应用。\n**这种支持多逻辑页面的具有流畅的操作体验的H5单网页应用，我们将它称为变脸式应用。**           \n对手机单网页应用有以下常见误解：\n+ 只能做做小工具，不适合做大型商业应用。这是因为没有使用好的模块化开发模型，去找个支持大型开发的好框架先。\n+ 耗内存，耗流量，性能低下。某些单页应用简单地将所有逻辑页一次性全部加载，没有逻辑页优化，也没有做好缓存、图片等优化，而招此骂名。解决方法是找个支持动态加载逻辑页、支持H5应用优化的开发框架。\n+ 没法做搜索引擎优化(SEO)。以前做网页的同时要兼顾做SEO，现在其实可以将做网页应用和做SEO分离了，对SEO可以单独设计，从而做的更好。这就像用户访问一个站点，如果是手机访问就跳转手机版，如果是电脑访问就跳转电脑版，而如果是爬虫机器人访问，也可以备好一套狗粮，不再和人吃的一样。   \n\n**筋斗云前端框架是一个变脸式单网页应用的开源开发框架，** 它以页面路由和接口调用为核心，提供多逻辑页支持和远程接口调用封装，同时对制作安卓、苹果原生应用也提供良好的支持，因而也是一个全平台H5应用框架。\n## 创建项目\n> 用筋斗云前端框架创建一个H5应用项目myproject，在浏览器运行起来。     \n\n先从github上下载开源的筋斗云前端框架及示例应用：https://github.com/skyshore2001/jdcloud-m         \n建议安装git工具直接下载，便于以后更新，例如直接创建H5应用项目叫myproject\n```\n    git clone https://github.com/skyshore2001/jdcloud-m.git myproject\n```\n如果github访问困难，也可以用这个git仓库\n ```\n    http://dacatec.com/git/jdcloud-m.git\n ```\n下载后，myproject是我们的项目目录。\n+ 子目录server是H5应用目录，开发主要集中在这里。\n   - 在server目录下，lib目录下的js/css文件都属于框架使用的文件，不宜随意修改，其中app_fw.js是筋斗云前端框架的核心部分。\n   - page目录是默认的逻辑页目录，比如首页、登录页、订单列表等逻辑页的html和js文件都放在这里。\n   - cordova目录是用于制作原生手机app时使用的。筋斗云框架支持全平台应用，即一套H5代码，可同时制作安卓应用、苹果应用、微信微站等。\n+ tool是用于优化和发布的工具，之后在站点上线优化时介绍。  \n \n设置WEB服务器（如Apache/nginx/IIS等），添加虚拟目录myproject, 指向myproject/server目录，这时，就可以直接运行起前端应用\n ```\n    http://localhost:8080/\n ```\n## 页面\n### GetStart - HelloWorld\n> 上一节我们创建了新的H5应用项目，本节我们制作一个仅显示\"hello world\"的逻辑页面，在首页中添加一个链接，点击可进入这个页面。\n\n制作一个逻辑页面，存到文件page/hello.html:\n```\n    <div>\n        <div class=\"hd\">\n            <h2>HelloWorld</h2>\n        </div>\n\n        <div class=\"bd\">\n            <p>Hello, world</p>\n        </div>\n    </div>\n```\n这是个html片段，其中`class=\"hd\"`与`class=\"bd\"`分别代表逻辑页的标题栏和主体部分。一般应保持这样的结构，即使不需要标题栏，也建议保留hd这个div，将其设置隐藏即可(`style=\"display:none\"`)。              \n在首页page/home.html中添加一个链接过来：\n```\n    ...\n    <div class=\"bd\">\n        ...\n        <li><a href=\"#hello\">Hello</a></li>\n    </div>\n```\n在浏览器时刷新H5应用进入首页，点击Hello链接，就可以看到新逻辑页Hello显示出来了。 筋斗云可以动态加载逻辑页，并为它指定id为\"hello\"(即页面文件名)。 除了使用链接，还可以通过JS代码`MUI.showPage(\"#hello\")`来显示该页。             \n点击浏览器的返回按钮，可以回到首页。在返回时，没有网页刷新的过程，这也是变脸式应用的典型特点。             \n我们也可以在逻辑页的hd部分里为应用添加返回按钮，如：\n```\n    <div class=\"hd\">\n        <!-- 加上返回按钮 -->\n        <a href=\"javascript:history.back();\" class=\"icon icon-back\"></a>\n        <h2>Hello</h2>\n    </div>\n```\n改好后，不必刷新页面重新从首页进入，直接在浏览器控制台中输入\n```               \n    MUI.reloadPage();\n```\n就可以直接查看到更新后的逻辑页了。               \n**筋斗云支持逻辑页热更新技术，** 可以实时热更新当前页面，并保留当前的应用状态。这一技巧在开发调试逻辑页时非常好用，尤其对于复杂的H5应用，不必从首页操作进来。类似的技巧还有卸载一个逻辑页，以便再进入时可重新初始化\n```\n    MUI.unloadPage(); // 卸载当前页\n    MUI.unloadPage(\"hello\"); // 卸载指定页\n```\n如果你嫌首页上加的链接太难看，可以使用框架默认集成的weui样式库来润色它，如\n```\n    <div class=\"weui_cells\" style=\"margin-top:100px\">\n        ...\n        <!-- 显示为一个button -->\n        <li class=\"weui_cell\" style=\"display:block\"><a href=\"#hello\" class=\"weui_btn weui_btn_default\">Hello</a></li>\n    </div>\n```\n同样地，在修改好后，直接在控制台输入`MUI.reloadPage()`看效果。              \n筋斗云的核心是页面路由(showPage)和接口调用(callSvr)。它自身不提供移动UI样式库，而是通过集成的weui样式库来提供移动UI样式。 weui是一套同微信原生视觉体验一致的基础样式库，由微信官方团队开发，关于weui的使用可以参考 **https://weui.io/** 或自行搜索。 当然你也可以把它换成你自己喜欢的UI库。\n### 为逻辑页添加样式和逻辑\n> 上一节中，我们添加了一个逻辑页\"hello\"。现在我们通过CSS修改显示字体为红色，并在进入和退出页面时弹出提示框。\n\n为逻辑页设置样式，如果这个样式只在这个逻辑页使用，一般就在页面div中内嵌style标签。 页面的逻辑写在与页面同名的js文件中，在页面div上使用mui-script属性指定js文件，并通过mui-initfn标签指定页面初始化函数。                  \n修改hello.html页面文件如下                  \n```\n    <div mui-initfn=\"initPageHello\" mui-script=\"hello.js\">\n    <style>\n        p {\n            color: red;\n        }\n    </style>\n    <div class=\"hd\">\n        <a href=\"javascript:history.back();\" class=\"icon icon-back\"></a>\n        <h2>HelloWorld</h2>\n    </div>\n\n    <div class=\"bd\">\n        <p>Hello, world</p>\n    </div>\n</div>\n```\n在上例中，在内嵌的style标签中为\"p\"标签指定样式，让它显示红色。 你可能有疑问，这样写会不会影响其它页面中的p标签的样式呢？                   \n**筋斗云支持自动限定逻辑页样式作用域。** 即框架保证这个样式只会用于当前逻辑页，不会污染到其它页面。            \n上面逻辑页中通过mui-script=\"hello.js\"指定了js文件，创建page/hello.js文件如下：\n```\n    function initPageHello() {\n        var jpage = $(this);\n        jpage.on(\"pagebeforeshow\", onBeforeShow);\n        jpage.on(\"pagehide\", onHide);\n\n        function onBeforeShow() {\n            app_alert(\"before show\");\n        }\n        function onHide() {\n            app_alert(\"hide\");\n        }\n    }\n```\n上面演示了逻辑页进入和退出时常用的事件处理，很容易理解。 一般从后端取数据的操作都习惯放在pagebeforeshow事件中处理。另外还有pageshow, pagecreate等事件。               \napp_alert是框架提供的异步弹出框函数，可用于提示消息(类似alert)、确认消息(类似confirm)、问询消息(类似prompt)等，弹出框界面也可自由定制，后面还将介绍。                         \n### 页面栈\n框架支持逻辑页面的前进和后退，甚至可以用手势左右划动页面来后退或前进。                 \n> 本节讲述一个常见需求：提交订单后进入下一页面，这时点返回按钮（不管是点浏览器的返回按钮还是页面左上方的返回按钮）， 应该跳过提交页面，返回再前一个页面。\n\n在示例应用首页上，点击\"立即下单\"，进入\"创建订单\"页，点击\"创建订单\"按钮，进入\"订单列表\"页。 这时点击返回按钮，我们看到，它跳过了\"创建订单\"页，直接返回了再前面一页即首页。                              \n我们查看\"创建订单\"页的代码(createOrder.js)，其实只需在切换页面前，调用`MUI.popPageStack()`\n```\n    function api_OrdrAdd(data) {\n        app_alert(\"订单创建成功!\", \"i\", function () {\n            // 到新页后，点返回不允许回到当前页\n            MUI.popPageStack();\n            PageOrders.refresh = true;\n            MUI.showPage(\"#orders\");\n        }, g_cfg.WAIT);\n    }\n```\n如果想在回退时跳过两个页面（比如提交过程有两步分了两个页面），调用`MUI.popPageStack(2)`即可。\n## 调用后端接口\n调用后端接口是筋斗云框架提供的两大核心功能之一。                \n> 继续hello页面的例子，要求每次进入页面时，不是固定的显示\"hello, world\"，而是需要根据服务端的返回内容来显示hello的内容，比如\"hello, skys\"或是\"hello, jdcloud\"。\n\n我们先定义一个叫做\"hello\"的交互接口，由前端发起一个HTTP GET请求，比如\n```\n    http://myserver/myproject/api.php?ac=hello\n```\n如果调用成功，后端返回JSON格式的数据`[0, \"jdcloud\"]`, 其中0是返回码，表示调用成功。如果调用失败，返回`[99, \"对不起，服务器爆炸了\"]`。       \n有了清晰的接口定义，前后端就可以并行开发了。 在前端，我们把页面稍作修改以动态显示hello的内容：\n```\n<div class=\"bd\">\n    <p>Hello, <span id=\"what\"></span></p>\n</div>\n```\n再写一段逻辑，每当进入页面时调用hello接口并显示内容，我们选择onBeforeShow回调来做这件事：\n```\n    function initPageHello() {\n        var jpage = $(this);\n        jpage.on(\"pagebeforeshow\", onBeforeShow);\n\n        function onBeforeShow() {\n            callSvr(\"hello\", api_hello);\n        }\n    \n        function api_hello(data) {\n            jpage.find(\"#what\").html(data);\n        }\n    }\n```\n`callSvr`是框架提供的一个重要函数，它封装了ajax调用的细节，完整的函数原型为：\n```\n    callSvr(ac, param?, fn?, postParam?, options?);\n```\n其中，ac是调用接口名，fn是回调函数，param和postParam分别是URL参数和POST参数。除ac外，其它参数均可省略。例如\n```\n    callSvr(\"hello\");\n    callSvr(\"hello\", {id: 1}); // URL: hello?id=1\n    callSvr(\"hello\", {id: 1}, api_hello); // function api_hello(data) {}\n    callSvr(\"hello\", api_hello, {name: \"hello\"});\n```\n回调函数api_hello仅在成功时被调用，参数data是实际数据，即`[0, data]`中的data部分，不包括返回码0。 当调用失败时，框架会统一处理，显示错误信息，无须操心。\n### 使用模拟接口\n**筋斗云支持模拟接口返回数据。** 在mockdata.js中，可以设置接口的模拟返回数据\n```\n    MUI.mockData = {\n        ...\n        \"hello\": [0, \"jdcloud\"]\n    }\n```\n### 调用真实接口\n在后端接口开发好后，我们可去掉对这个接口的模拟，直接远程调用服务端接口。这需要配置好后端接口的地址。          \n我们用php写一个简单的符合筋斗云接口规范的后端实现，通过名为\"ac\"的URL参数表示接口名，在server目录中创建文件api.php如下\n```\n    <?php\n\n    @$ac = $_GET['ac'];\n    if ($ac == 'hello') {\n        $what = \"jdcloud @ \" . time();\n        echo json_encode([0, $what]);\n    }\n    else {\n        echo json_encode([1, \"bad ac\"]);\n    }\n```\n配置好php的调用环境后，访问`http://localhost/myproject/api.php?ac=hello`，输出类似这样：`[0,\"jdcloud @ 1483526151\"]`                \n回到前端，我们在app.js中设置服务端接口地址：\n```\n    $.extend(MUI.options, {\n        serverUrl: \"api.php\",\n        serverUrlAc: \"ac\"\n    });\n```\n以上讲述的是符合筋斗云接口规范的接口调用设置，如果不符合该规范，请阅读下一节“接口适配”。\n### 接口适配\n在上例中，假定了后端接口兼容筋斗云接口规范，例如返回格式为`[0, jsonData]`及`[非0, 错误信息]`。 如果接口协议不兼容，则需要做接口适配。          \n接口适配的目标是通过callSvr函数更加简练地调用后台接口，同时达到：\n+ 调用出错统一处理，例如未认证错跳转到登录页，其它错误弹出错误提示框等。\n+ 写代码时只需要处理调用成功后返回的数据，不用每次调用都处理各种错误。\n \n> 适配以下接口协议规范，约定接口返回格式为：{code, msg, data}， 例如上例中的hello接口，调用成功时返回：\n```\n    {\n        \"code\":\"0\",\n        \"msg\":\"success\",\n        \"data\":\"jdcloud\"\n    }\n```\n失败返回：\n```  \n    {\n        \"code\":\"99\",\n        \"msg\":\"对不起，服务器爆炸了\"\n    }\n```\n\n这时需要对callSvr进行适配，可以在app.js中，设置 `MUI.callSvrExt`如下:\n```\n MUI.callSvrExt['default'] = {\n        makeUrl: function(ac) {\n            return 'http://hostname/lcapi/' + ac;\n        },\n        dataFilter: function (data) {\n            if ($.isPlainObject(data) && data.code !== undefined) {\n                if (data.code == 0)\n                    return data.data;\n                if (this.noex)\n                    return false;\n                app_alert(\"操作失败：\" + data.msg, \"e\");\n            }\n            else {\n                app_alert(\"服务器通讯协议异常!\", \"e\"); // 格式不对\n            }\n        }\n    };\n```\n我们在mockdata.js中设置好模拟数据用于测试：\n```\nMUI.mockData = {\n    \"User.get\": {code: 0, msg: \"success\", data: user},\n    \"hello\": {code: 0, msg: \"success\", data:\"myworld\"}\n    ...\n}\n```\n上例中，User.get接口在显示首页是会调用，所以和\"hello\"接口一并模拟下。          \n测试接口调用：\n```\ncallSvr(\"hello\", console.log);\n```\n或\n```\ncallSvrSync(\"hello\");\n```\ncallSvrSync是callSvr的同步调用版本，它直接等到调用完成才返回，且返回值就是调用成功返回的数据。                \n在接口适配完成后，应用层代码不用去做任何修改。 进入页面看看，是不是和上节的运行结果是一样的。\n## 进入与退出应用\n进入应用后，框架会自动设置一些全局变量，如g_args, g_data等。               \n问：如何在H5应用中获取URL参数？              \n全局变量g_args保存了H5应用的URL参数。 例如URL为`http://myserver/myproject/index.html?orderId=10&dscr=上门洗车`，则该对象有以下值：\n```\ng_args.orderId=10; // 注意：如果参数是个数值，则自动转为数值类型，不再是字符串。\ng_args.dscr=\"上门洗车\"; // 对字符串会自动进行URL解码。\n```\n问：全局数据存放到哪里有规范吗？            \n全局数据建议都放在变量g_data中，而不是到处创建全局变量，这样查看这个变量就可以了解H5应用状态。 框架也会设置一些全局数据进去（例如userInfo保存登录后的返回数据等）。另外，如果是逻辑页之间传递信息，不要用全局变量，应使用逻辑页接口，后面章节将介绍。         \n对于全局配置信息，一般统一存到名为g_cfg的全局变量中。\n查看H5应用JS文件index.js，有它们的声明，比如：\n```\n var g_data = {\n        userInfo : null, // {id, name, uname=phone}\n    };\n\n    var g_cfg = {\n        WAIT: 3000, // 3s\n    };\n```\n### 入口页\n> 在地址栏直接输入http://server/app/#hello，会发现它会跳转到首页，我们希望可直接进入前面我们制作的hello页面。\n\n打开示例H5应用客户端index.html对应的逻辑文件即index.js，会发现一开始有如下设置：\n```\n$.extend(MUI.options, {\n    appName: \"user\",\n    homePage: \"#home\",\n    pageFolder: \"page\",\n});\n\nMUI.validateEntry([\n    \"#home\",\n    \"#me\",\n    \"#order\"\n]);\n```\n第一句是设置一些框架的选项`MUI.options`，注意框架提供的功能多以MUI开头。 这里设置了H5应用内部名称为\"uesr\"（表示客户端，以后若有员工端等应用可区分开），首页名称是\"#home\"，逻辑页目录为\"page\"，也即首页实际文件为\"page/home.html\".              \n第二句用`MUI.validateEntry`指定允许的入口逻辑页，如果不是从这些逻辑页进入应用，则自动跳转到首页。 如果注释掉这句，则是允许从任意逻辑页进入应用。          \n要想直接输入URL就能进入hello页，只要将它暴露成入口页即可，把它加到入口页列表中来：           \n```\nMUI.validateEntry([\n    \"#home\",\n    \"#me\",\n    \"#order\",\n    \"#hello\"\n]);\n```\n注意我们现在制作的是H5应用，不是单纯用于静态展示的网页，很多状态信息（比如已登录的信息）存储在全局变量之中。 如果允许任意逻辑页进入应用，很可能因状态错误而显示出错。 每个入口页都是个对外的接口，可通过URL直接访问，如无必要，尽量不要开放。\n### 登录与退出\n登录和退出是多数应用都需要的功能。           \n我们在筋斗云示例应用中，可以看到登录退出相关的代码：(index.js文件)              \n```\nfunction handleLogin(data)\n{\n    MUI.handleLogin(data);\n    // g_data.userInfo已赋值\n}\n\nfunction logoutUser()\n{\n    // 这里可以删除当前用户相关的storage, cookie等。\n    MUI.logout();\n}\n```\n`handleLogin`将作为回调函数在所有登录成功时统一调用，退出登录则调用`logoutUser`函数。                 \n筋斗云提供这些函数：\n+ MUI.showLogin: 显示登录页。登录页由选项MUI.options.loginPage指定, 缺省为\"#login\".\n+ MUI.tryAutoLogin: 自动登录。下节介绍。\n+ MUI.handleLogin: 处理登录后页面跳转，同时给g_data.userInfo赋值，应用程序里一般通过判断 g_data.userInfo != null 判断是否已登录。\n+ MUI.logout: 退出登录。\n\n筋斗云示例应用提供了两个登录页面，分别是手机号/动态验证码登录(page/login.html)和用户名/密码登录(page/login1.html)。            \n以较简单的用户名/密码登录页面(login1)为例，简化后的代码如下：         \n```\n// HTML:(page/login1.html)\n\n<div mui-initfn=\"initPageLogin1\" mui-script=\"login1.js\">\n    ...\n    <form action=\"login\" class=\"bd\">\n        手机号 <input name=\"uname\" required placeholder=\"11位手机号\">\n        密码 <input type=\"password\" name=\"pwd\" required placeholder=\"4位以上密码\" minlength=4>\n        <button type=\"submit\" class=\"weui_btn weui_btn_primary\">登录</button>\n    </form>\n</div>\n\n\n//JS: (page/login1.js)\n\nfunction initPageLogin1() {\n    var jpage = $(this);\n    var jf = jpage.find(\"form\");\n    MUI.setFormSubmit(jf, handleLogin);\n}\n```\n这里使用了callSvr之外另一个常用的接口调用方式，即通过form提交调用后端接口的MUI.setFormSubmit，其用法是：\n+ 在HTML的form标签中，用action属性定义接口名，这里是\"login\"\n+ 接口参数通过form中带name属性的组件设置（这里有\"uname\", \"pwd\"参数），注意默认情况下，form中的参数是通过POST方式发送到后端。\n+ 在MUI.setFormSubmit中指定调用成功时的回调函数为\"handleLogin\"，它与callSvr的回调一样。\n\n关于MUI.setFormSubmit的更多选项如合法性验证、计算字段赋值等，可查询参考文档。         \n要退出登录，调用前面定义过的`logoutUser`函数即可：\n```\njpage.find(\"#btnLogout\").click(logoutUser);\n```\n退出会导致页面重刷新后进入入口页。要刷新H5应用，也可以直接调用：\n```\nreloadSite();\n```\n如果你的应用的退出接口不同，可自行在logoutUser函数中实现MUI.logout的功能：\n+ 向后端调用`logout`接口；\n+ 清除登录状态，如置空`g_data.userInfo`，删除本地存储中的token等信息；\n+ 再调用`reloadSite`函数刷新应用回到入口。\n### 自动跳转登录页和会话重用\n为了避免每次打开或刷新应用都要再登录，会话重用是实现短期免登录进入的常用方法。             \n> + 打开H5应用时（从任意入口页进入），如果刚刚登录过，则可以免登录直接打开入口页。 如果尚未登录过，则跳转至登录页面，待登录成功后跳转到入口页。\n  + 点退出登录回到首页，如果首页必须登录，则到登录页。\n  + 在操作过程中，一旦调用某个接口返回了未登录错误（实际中可能是客户端掉线、服务端重启等情况），应自动跳转到登录页。\n  \n要实现这样的需求，需要有以下接口设计：\n+ 登录接口login，登录成功返回用户信息，例如`login(uname, pwd) -> [0, {用户信息如id, name, ...}]`. 登录接口可以支持多种方式登录，如用户名/密码，手机号/动态验证码，以及下一节要讲述的自动登录token等。\n+ 其它所有要求用户登录后才能调用的接口，在未登录时返回统一的错误码: `fn1() -> [2, \"未登录\"]`（筋斗云中未登录错误码为2）\n退出接口`ogout() -> [0, \"OK\"]`.\n+ 有一个特别的检测是否需要登录的接口，如果已登录，返回与login接口相同的信息，例如接口`User.get() -> [0, {用户信息如id, name, ...}]`.\n\n这个特别的检测登录接口的主要用途是，通过会话重用（session），实现短时间内免登录。 会话重用一般由服务端设置cookie实现，由于浏览器会自动记住cookie，只要服务端会话未过期且用户未退出(logout)，就可以一直免登录进入。 即使不使用cookie而用URL参数（比如token）的，H5应用只要自行记住这个token到本地存储，下次打开时重用即可。              \n这样，前端进入H5应用时的逻辑就是：\n+ 调用检测用户登录的接口User.get，调用成功后将返回信息存储到全局变量g_data.userInfo中，并显示入口页；\n+ 如果调用失败，则显示登录页；\n+ 在登录成功后，跳转回一开始要进入的入口页。\n\n这些逻辑由框架函数MUI.tryAutoLogin和MUI.handleLogin提供，应注意把这段逻辑放置到muiInit事件中，以便在显示任意页面之前调用。 我们在筋斗云示例应用中，可以看到这样的代码：(index.js中)\n```\n$(document).on(\"muiInit\", myInit);\n\nfunction myInit() {\n    MUI.tryAutoLogin(handleLogin, \"User.get\");\n}\n\nfunction handleLogin(data) {\n    MUI.handleLogin(data);\n    // g_data.userInfo已赋值\n}\n```\n在MUI.tryAutoLogin中指定了检查会话重用的接口名为\"User.get\"，于是H5应用便有了会话重用的功能。 在模拟接口中，我们看到\"User.get\"接口模拟如下：\n```\n\"User.get\": [0, user],\n```\n这表明模拟的是已登录过的状态，因此打开应用时可直接免登录进入。 我们把它改成返回\"未登录\"错误：\n```\n\"User.get\": [2, \"no auth\"],\n```\n这时刷新H5应用，是不是进入了登录页？ 任意输入手机号和验证码可登录进来。进入页面\"我\"，点退出，看看是不是回到了登录页？               \n注意框架定义了“未认证错误”缺省错误码为2，如果要修改，可以用：\n```\nwindow.E_NOAUTH = 2;\n```\n再看会话中断时的行为，由于进入订单列表页会调用接口\"Ordr.query\"，我们在浏览器控制台上修改模拟接口让它返回未登录错：\n```\nMUI.mockData[\"Ordr.query\"] = [2, \"no auth\"];\n```\n进入订单列表页（如果之前已经打开过，可以下拉刷新下），看看是不是自动跳转到登录页了？              \n如果后端接口格式不是使用筋斗云调用规范，则需要按上节介绍自行适配接口，在其中添加自动跳转登录页的的逻辑，如：\n```\n MUI.callSvrExt['default'] = {\n        ...\n        dataFilter: function (data) {\n            ...\n            if (data.code == E_NOAUTH) {\n                MUI.showLogin();\n                return;\n            }\n        }\n    };\n```\n这样，框架可以确保未登录时（或已掉线、服务端重启等情况时）调用了后端需要登录的接口，可以自动跳转到登录页。               \n注意：调用`MUI.showLogin()`来显示登录页，而不要用`MUI.showPage(\"#login\")`来写死页面，而且`MUI.showLogin`可以在登录成功后跳回登录前想进入的页面。 类似的还有`MUI.showHome()`来显示首页。                \n上面示例中，用MUI.tryAutoLogin要求进入应用必须先登录。如果某些入口页可以免登录直接进入，则应这样调用：\n```\nfunction myInit()\n{\n    MUI.tryAutoLogin(handleLogin, \"User.get\", true); // 参数true表示允许未登录进入\n}\n```\n这时应特别小心，可用`g_data.userInfo == null`判断是否为未登录。 从未登录的入口页进入其它需要登录才能展示的页面，也常常在pagebeforeshow事件中添加判断：\n```\n    function onPageBeforeShow(ev, opt)\n    {\n        // 可能从一个未登录的页面跳转过来\n        if (g_data.userInfo == null) {\n            MUI.showLogin();\n            return;\n        }\n        // 设置页面内容\n    }\n```\n注意：在MUI.tryAutoLogin中调用接口时，都使用的是同步调用且忽略错误。\n### 自动登录\n自动登录是一个常见需求，基本上现在的手机应用，登录过一次后，下次都是免登录进入。            \n前面已经讲过通过会话重用，可以实现短时间内免登录。 通过对cookie设置较长的超时时间，且在后端长期保存会话数据，可以延长免登录的时间。           \n如果会话重用机制的实现并不可靠，比如过期、后端过载或重启等导致会话丢失，最好再设计专门的自动登录机制。 要实现自动登录，客户端必须将登录信息保存在本地。由于用户名、密码这些信息很敏感，不适合直接存储在客户端，一般通过token来实现自动登录。           \n需要后端login接口支持token，注意token参数要求通过POST参数传递的\n```\nlogin(uname, pwd) -> {_token, ...} // 普通登录，额外返回_token字段\nlogin()(token) -> {_token?, ...} // 可以不再返回token\n```\n与之前的`login`接口相比，普通的登录方式可返回一个`_token`字段，将这个字段保存在客户端本地，下次就可以通过`login(token)`方式自动登录。 服务器在实现时，一般在token中包含了用户信息，token过期时间等信息，当然进行了加密，所以比较安全。             \nH5应用要实现的逻辑如下：\n+ 进入应用时，先尝试会话重用，在会话重用失败后，再尝试自动登录\n+ 如果在操作过程中用户掉线（如客户端长时间未操作导致会话超时），也可通过自动登录，对用户透明地实现恢复登录后继续操作。\n\n\n框架已经在MUI.tryAutoLogin函数及默认的后端接口适配中完成以上逻辑，只要服务端接口符合上面约定，无需额外代码。              \n我们来模拟接口，让User.get接口返回未登录，让login接口支持返回_token，看看H5应用的行为：\n```\n    \"login\": function (param, postParam) {\n        if (postParam.token) {\n            console.log(\"用token自动登录\");\n            return [0, user];\n        }\n        return [0, $.extend({_token: \"abcdefg\"}, user)];\n    },\n    ...\n    \"User.get\": [2, \"no auth\"],\n```\n+ 刷新H5应用，因为未登录过，正确进入登录页，注意看浏览器控制台的日志，只调用了\"User.get\"接口，失败后转到登录页。\n+ 在成功登录一次后，再次刷新H5应用，发现可以直接进入应用了，看日志，先调用了\"User.get\"失败，然后尝试自动登录调用了\"login\"接口成功。\n+ 直到去页面“我”点击“退出”，刷新H5应用才不再自动登录。\n\n如果是自行适配接口，只需将前面示例中跳转登录页的操作换成尝试自动登录，示例如下：\n```\n    MUI.callSvrExt['default'] = {\n        ...\n        dataFilter: function (data) {\n            ...\n            if (data.code == E_NOAUTH) {\n                // 尝试自动登录，如果登录成功则重新发起当前请求；登录失败会自动转向登录页\n                if (MUI.tryAutoLogin()) {\n                    $.ajax(this);\n                }\n                // MUI.showLogin();\n                return;\n            }\n        }\n    };\n```\n注意：             \n上述对会话重用和自动登录的支持，核心是进入应用时及应用掉线时调用`MUI.tryAutoLogin`函数，而它是基于筋斗云后端的接口设计。 如果后端接口设计不同，可自行来写一个tryAutoLogin函数，在进入应用时及应用掉线时调用。                \n\n特别地，在tryAutoLogin中调用接口，一般使用同步调用(选项`{async: false}`)，且忽略出错(选项`{noex:1}`)：\n```\nvar opt = {async: false, noex: 1};\ncallSvr(\"User.get\", $.noop, null, opt);\n```\n## 常用组件\n筋斗云框架有一些使用mui前缀的CSS类，包括\n+ mui-container H5应用容器，一般在HTML的body对象上设置。\n+ mui-page 逻辑页，由框架自动设置\n+ mui-btn 按钮，如果再叠加primary类，则表示显示为缺省按钮。\n+ mui-dialog 对话框\n+ mui-menu 菜单\n+ mui-navbar 导航栏\n\n注意：筋斗云框架不是UI组件库，它只提供极为有限的一些组件，更丰富的UI组件请使用weui库或其它第三方组件库。            \n如果想调整框架中组件的显示样式，一般在app.css文件中设置。\n### 导航栏及图标\n> + 为H5应用底部导航栏上每项加上图标，且点中与未点中显示的图标不一样。\n  + 将小图标拼合成大图优化图标资源加载。\n  \n导航栏用CSS类\"mui-navbar\"标识。             \n![navbar](/img/navbar.png)          \n这是订单列表页中的例子，用导航栏和几个列表构建一个多栏页面， 当点击一项时，框架会自动为该项添加CSS类\"active\"，并只显示\"mui-linkto\"属性指向的组件。 被指向的组件仅限于当前逻辑页面：\n```\n    <div class=\"mui-navbar\">\n        <a mui-linkto=\"#lst1\">待服务</a>\n        <a mui-linkto=\"#lst2\">已完成</a>\n    </div>\n```\n整个H5应用有一个底部导航，用id=\"footer\"标识，放置在H5应用的主html文件中，如：\n```\n<div id=\"footer\">\n    <a href=\"#home\" mui-opt=\"ani:'none'\">\n        <span>首页</span>\n    </a>\n    <a href=\"#orders\" mui-opt=\"ani:'none'\">\n        <span>订单</span>\n    </a>\n    <a href=\"#me\" mui-opt=\"ani:'none'\">\n        <span>我</span>\n    </a>\n</div>\n```\n底部导航可自动显示或隐藏，如果当前页面是在导航项中的，导航栏就会自动显示。 上面`mui-opt`属性用来指定显示页面的参数（参考`MUI.showPage`的参数），\"ani:'none'\"表示不显示动画切页效果。                \n如果要给导航中的每项加图片，可以用CSS类icon:\n```\n<a href=\"#home\" mui-opt=\"ani:'none'\">\n    <i class=\"icon icon-home\"></i>\n    <span>首页</span>\n</a>\n```\n定义一个CSS类icon-home为它指定图标即可。 由于点击一项时会自动给该项加上active类，所以要想控制当前选中项或未选中项显示不同的图片，可以设置：\n```\n.icon-home {\n    background-image: url(icon/24/home.png);\n}\n.active .icon-home {\n    background-image: url(icon/24/home-active.png);\n}\n```\n这些图标一般建议放在server/icon目录下，并最终在发布时优化拼合成一张大图，称为制作“精灵图”（sprite）。            \n对图标的CSS设置一般写在icon.css中，然后使用jdcloud-sprite工具生成拼合后的大图以及icon.out.css在H5应用中使用。 查看index.html可知它实际引用的是优化后的icon.out.css文件，icon.css只是作为源文件，用于生成icon.out.css。            \n在开发时，建议先把图标的CSS定义分别在icon.css与icon.out.css中各写一份。 待准备做优化时，只需在一台可制作精灵图的电脑上一次性生成icon.out.css比较方便。         \n#### 图标优化方法（制作精灵图）\n先安装imagemagick软件，确认在命令行中可以运行convert等命令。 安装好php 5.4或更高版本，然后在项目的tool目录下，运行命令：\n```\nphp jdcloud-sprite.php ../server/icon.css -2x -group -sprite icon/icon@2x.png\n```\n查看server/icon.out.css文件是否已更新？在server/icon目录下是否生成了拼合后的大图？            \n命令中参数-2x表示源图标都是2x图标，即显示为24x24大小的图标，其实际尺寸是48x48。 在手机上一般使用2x图标，否则会看出有些模糊。 参数-group表示按图标宽度分组拼合图片，这样效率更高些，也可以去掉这个参数。            \n其实在文件tool/Makefile中已经包含了这个命令，确保开发环境有make工具， 就可以在git-bash中直接运行下面命令来优化图标：\n```\n./make-sprite.sh\n```\n### 简单对话框\n框架提供的app_alert用于显示简单的提示框，类似alert/confirm/prompt这些函数， 只不过app_alert是异步的（调用后立即返回，需要通过回调函数来执行之后的操作），且可以定制显示样式。              \n在浏览器控制台里输入以下示例试试:\n```\n// 信息框，3秒后自动关闭\napp_alert(\"操作成功\", function () {\n    MUI.showPage(\"#orderInfo\");\n}, {timeoutInterval: 3000});\n\n// 错误框，\"e\"表示\"error\"\napp_alert(\"操作失败\", \"e\");\n\n// 确认框(确定/取消)，\"q\"表示\"question\"\napp_alert(\"立即付款?\", \"q\", function () {\n    MUI.showPage(\"#pay\");\n});\n\n// 输入框, \"p\"表示\"prompt\"\napp_alert(\"输入要查询的名字:\", \"p\", function (text) {\n    callSvr(\"Book.query\", {cond: \"name like '%\" + text + \"%'});\n});\n```\n由于app_alert对话框的id固定为\"muiAlert\"，所以要定制显示样式，可对#muiAlert及其子对象直接设置CSS样式； 或者自已重新定义一个id为\"muiAlert\"的div，详见参考文档。\n### 对话框\n对话框与页面类似，一般放在逻辑页面中。使用CSS类\"mui-dialog\"标识对话框。app_alert显示的就是最简单的一类对话框，\n> 把“创建订单”页面(createOrder页)改写成一个对话框，放在首页中。在首页增加一个“创建订单对话框”按钮，点击后显示对话框。 效果如下：![dialog](/img/dialog.png)          \n  \n在首页home.html中增加一个id=\"dlgCreateOrder\"的div组件： \n```\n<div mui-initfn=\"initPageHome\" mui-script=\"home.js\">\n    ... hd, bd ...\n        <!--a href=\"#createOrder\">立即下单</a-->\n        <a href=\"#dlgCreateOrder\">立即下单</a>\n\n    <div class=\"mui-dialog\" id=\"dlgCreateOrder\" style=\"width:80%\">\n        <div class=\"hd\">\n            <h2>创建订单</h2>\n        </div>\n\n        <form class=\"bd\" action=\"Ordr.add\" style=\"padding:10px\">\n            选择套餐:\n            <select name=\"dscr\">\n                <option value=\"基础套餐\" data-amount=128>基础套餐 128元</option>\n                <option value=\"精英套餐\" data-amount=228>精英套餐 228元</option>\n            </select>\n            <button id=\"btnCreateOrder\" class=\"mui-btn primary\">创建订单</button>\n            <input type=\"text\" name=\"amount\" value=\"0\" style=\"display:none\">\n        </form>\n    </div>\n</div>\n```\n增加了一个链接指向它：\n```\n<a href=\"#dlgCreateOrder\">立即下单</a>\n```\n注意：对话框的id以\"dlg\"开头，框架自动打开对话框而不是页面，点上面链接相当于执行：\n```\nMUI.showDialog(\"#dlgCreateOrder\");\n```\n重新进入应用，点首页上的按钮，可以看到对话框已经显示出来了，点击对话框背景可关闭对话框。 按钮上使用了框架提供的CSS类\"mui-btn\"标识按钮，再加了\"primary\"类展现为缺省建议点击的按钮。            \n在home.js中用MUI.setupDialog为对话框增加逻辑： 当用户选择一个套餐并点击创建订单时，调用\"Ordr.add\"接口（定义在form.action属性上）。 调用成功后，显示订单列表页，并关闭对话框(MUI.closeDialog)。          \n```\nfunction initPageHome()\n{\n    ...\n\n    // 设置对话框初始化函数，一般名为 initDlgXXX\n    MUI.setupDialog(jpage.find(\"#dlgCreateOrder\"), initDlgCreateOrder);\n    \n    function initDlgCreateOrder()\n    {\n        var jdlg = this;\n        var jf = jdlg.find(\"form\");\n        MUI.setFormSubmit(jf, api_OrdrAdd, {validate: onValidate});\n        // 可以返回一个函数，每次显示时回调，类型\"pagebeforeshow\"回调。\n        // 也可以直接return，没有返回值。\n        return beforeShow;\n\n        function onValidate(jf)\n        {\n            // 提交前，自动填写form中隐藏的amount字段\n            var f = jf[0];\n            f.amount.value = $(f.dscr).find(\"option:selected\").attr(\"data-amount\");\n        }\n\n        function api_OrdrAdd(data)\n        {\n            MUI.closeDialog(jdlg);\n            app_alert(\"订单创建成功!\", \"i\", function () {\n                // 显示订单列表页\n                PageOrders.refresh = true;\n                MUI.showPage(\"#orders\");\n            });\n        }\n\n        function beforeShow() {\n            // 每次打开对话框时清除之前选择。\n            jf[0].reset();\n        }\n    }\n}\n```\n注意：\n+ MUI.setupDialog接受一个回调函数用于对话框初始化，它与页面初始化函数类似，我们定义一个函数名为initDlgCreateOrder。 这个函数如果有返回值，必须是一个函数用于显示时回调，相当于页面的\"pagebeforeshow\"回调函数。\n+ 用MUI.setFormSubmit来与后端交互.\n### 菜单\n菜单其实是一种特殊的对话框，显示一个菜单项列表。在框架中用CSS类\"mui-menu\"来标识它。            \n我们以订单详情页的右上角菜单为例讲解，效果是这样: ![menu](/img/menu.png)        \n```\n<div mui-initfn=\"initPageOrder\" mui-script=\"order.js\">\n    <div class=\"hd\">\n        <a href=\"javascript:hd_back();\" class=\"icon icon-back\"></a>\n        <a href=\"#dlgMenu\" class=\"icon icon-menu\"></a>\n        <h1>订单明细</h1>\n    </div>\n\n    ...\n    <ul id=\"dlgMenu\" class=\"mui-menu top\">\n        <li id=\"mnuRefreshOrder\"><i class=\"icon icon-refresh\"></i>刷新</li>\n        <li id=\"mnuCancelOrder\"><i class=\"icon icon-delete\"></i>取消订单</li>\n    </ul>\n</div>\n```\n这个是典型的手机页，标题栏左右各一个按钮，分别在\"hd\"中用两个a标签定义。 左上角显示后退按钮，执行操作hd_back()，这个函数是框架提供的，和history.back()类似，增强的功能是如果无法回退，则会显示首页，适合用在标题栏回退按钮上。 右上角显示菜单按钮，它的href属性设置为菜单div的id，注意要以\"dlg\"开头，框架就会自动以对话框方式打开它。            \n在页面最后定义了id=dlgMenu的菜单，指定了CSS类为mui-menu标识显示为菜单，另一个类top标识菜单在右上角，如果没有它则和对话框一样，默认显示在页面中央。           \n在页面js文件中，只要给每个菜单项绑定事件就可以了。\n## 分页列表框架\n本章介绍很常用的分页列表，详情可查阅官方参考文档中的\"initPageList\"函数介绍。\n### 显示单个列表\n当列表预期可能很长时，一般应支持分页。分页列表在手机上的典型展现方式是支持上拉加载和下拉刷新。\n> + 创建页面orders2，仿照示例应用中订单列表页(orders)。本节先不按订单状态分栏，只显示一个列表，支持上拉加载和下拉刷新。\n  + 点击订单列表中的一项，可以进入订单详情页。\n  \n我们先熟悉一下支持分页的列表查询接口。 在示例应用自带的模拟数据中，获取订单列表操作是支持分页的，在浏览器控制台上试试调用这些：\n```\ncallSvrSync(\"Ordr.query\");\n// 返回 {nextkey: 20, list: [ {id: 147, dscr: \"基础套餐\", status: \"CR\", ...}, ...(共20条)] }\n\n// 取下一页：上次返回的nextkey字段用于本次请求的_pagekey参数\ncallSvrSync(\"Ordr.query\", {_pagekey: 20}); \n// 返回 {nextkey: 40, list: [ ...(共20条)] }\n\n// 再取下一页\ncallSvrSync(\"Ordr.query\", {_pagekey: 40}); \n// 返回 {list: [ ...(共8条)] }，没有nextkey属性，说明已是最后一页。\n```\n默认每次返回20条数据，可以通过_pagesz参数控制每次返回的数据条目数，如\n```\ncallSvrSync(\"Ordr.query\", {_pagesz: 10});\n// 返回 {nextkey: 10, list: [ ...(共10条)] }\n```\n我们使用这个模拟接口，新建页面orders2：\n```\n<div mui-initfn=\"initPageOrders2\" mui-script=\"orders2.js\">\n    <div class=\"hd\">\n        <a href=\"javascript:hd_back();\" class=\"icon icon-back\"></a>\n        <h2>分页列表练习</h2>\n    </div>\n\n    <div class=\"bd\">\n        <div id=\"lst1\" data-ac=\"Ordr.query\"></div>\n    </div>\n</div>\n```\n在bd部分中，用一个div(id=lst1)作为列表，用属性\"data-ac\"指定了后端接口。         \n在页面初始化函数initPageOrders2中，调用initPageList函数初始化一个分页列表：\n```\n// JS: (page/orders2.js)\n\nfunction initPageOrders2()\n{\n    var jpage = this;\n    var listItf = initPageList(jpage, {\n        navRef: \"\",\n        listRef: \"#lst1\",\n        onAddItem: onAddItem,\n        onNoItem: onNoItem,\n    });\n\n    function onAddItem(jlst, itemData)\n    {\n        var ji = $(\"<div><b>\" + itemData.dscr + \"</b><p>订单号: \" + itemData.id + \"</p></div>\");\n        ji.appendTo(jlst);\n\n        // 把itemData存储到事件中，可在事件回调中通过ev.data取到数据\n        ji.on(\"click\", null, itemData, li_click);\n    }\n\n    function onNoItem(jlst)\n    {\n        var ji = $(\"<div>没有订单</div>\");\n        ji.appendTo(jlst);\n    }\n\n    function li_click(ev)\n    {\n        var id = ev.data.id;\n        // 显示订单详情页\n        PageOrder.id = id;\n        MUI.showPage(\"#order\");\n    }\n}\n```\n函数initPageList封装了接口交互的诸多细节，调用者只需要考虑如何展示列表项即可。 在参数中， listRef指定了列表组件的引用（只在当前逻辑页上查找，相当于jpage.find(listRef)），navRef指定导航栏，这里未用到，赋值空就行，后面章节再介绍。 回调函数onAddItem用于添加一个列表项，onNoItem在列表为空时调用，用于显示没有数据时的提示。             \n我们在首页(page/home.html)中增加一个链接到页面orders2:\n```\n<li class=\"weui_cell\" style=\"display:block\"><a href=\"#orders2\" class=\"weui_btn weui_btn_primary\">分页列表练习</a></li>\n```\n进入页面，可以看到向下拉动可以刷新列表（重新取第一页数据），快到列表底部时可自动加载下一页数据。            \n还有个常用的参数是onGetQueryParam，允许编程指定调用后端接口的参数，如：\n```\n    var listItf = initPageList(jpage, {\n          ...\n          // 设置查询参数，静态值一般通过在列表对象上设置属性 data-ac, data-cond以及data-queryParam等属性来指定更方便。\n          onGetQueryParam: function (jlst, queryParam) {\n              // 指定调用名，参数为固定为\"ac\"\n              queryParam.ac = \"Ordr.query\";\n              // 指定其它后端接口调用参数，比如页大小，查询条件，排序顺序等\n              queryParam._pagesz = 10;\n              queryParam.orderby = \"id desc\";\n          }\n    }\n```\n例子中，由于是固定值，也可以在列表上通过属性`data-ac=\"Ordr.query\" data-queryParam=\"orderby:'id desc', _pagesz:10\"`来指定。      \n默认页大小是20，由`MUI.options.PAGE_SZ`定义。              \n这里有一点要注意：列表的容器（在本例中，#lst1所在容器是.bd）需要有确定的高度，且一般设置样式\"overflow-y: auto\"，这样列表才能滚动。 由于页面的bd部分刚好会由框架自动设置高度，示例中没有特别去设置，如果是自定义的容器，需要设置好高度。 （这个限制可能在未来被去掉）           \n> 外界对逻辑页的操作使用逻辑页接口\n\n上面在显示订单详情页时，用的方法是：\n```\n    PageOrder.id = id;\n    MUI.showPage(\"#order\");\n```\n我们把PageOrder称为逻辑页order的接口(page interface)，在H5应用JS文件index.js中定义：\n```\nvar PageOrder = {\n    // PageOrder.id\n    id: null, \n};\n```\n在页面order的JS逻辑中，会根据这里的PageOrder.id显示相应订单。            \n尽管也可以通过全局变量等方式实现该功能（例如使用全局变量g_data.orderId），但不够清晰，不建议使用。            \n外界对逻辑页的操作，都应封装到逻辑页接口中。尤其不要在逻辑页外直接设置该页内的组件。 这样，要查看哪些页面引用了订单页，只要全局查找\"PageOrder\"即可。        \n这里要显示订单，也可以这样封装：\n```\nvar PageOrder = {\n    // PageOrder.show(id)\n    show: function (id) {\n        this.id_ = id;\n        MUI.showPage(\"#order\");\n    },\n\n    id_: null\n};\n```\n外面直接这样调用：PageOrder.show(id). 把属性\"PageOrder.id\"改名为\"PageOrder.id_\"，暗示这个属性由逻辑页内部用，外界不应使用。\n### 使用DOM模板创建组件\n> 上节练习中，函数onAddItem里，直接使用了拼接html的方式动态创建列表项，当组件复杂时可读性和可维护性很差。 我们将使用示例应用自带的weui样式库美化列表项，并用DOM模板的方法重写创建组件过程，让代码更清晰。\n\n一般情况下，不建议直接拼接html，而是通过模板及mvvm等技术来创建，这里给大家推荐开源的超轻量的jquery-dataview库，可在github中下载：\n```\nhttps://github.com/skyshore2001/jquery-dataview\n```\n或用这个git仓库：`http://dacatec.com/git/jquery-dataview.git`。 下载后只需要jquery-dataview.min.js一个文件即可，把它复制到server/lib目录下，在H5应用index.html中引用：\n```\n<script src=\"lib/jquery-dataview.min.js\"></script>\n```\n然后在页面中定义列表项的模板，我们使用示例应用自带的weui界面样式库：\n```\n(page/orders2.html)\n<div mui-initfn=\"initPageOrders2\" mui-script=\"orders2.js\">\n    ...\n\n    <div class=\"bd\">\n        <div id=\"lst1\" class=\"weui_cells weui_cells_access\" data-ac=\"Ordr.query\"></div>\n    </div>\n\n<script id=\"tplOrder\" type=\"text/template\">\n<div class=\"weui_cell\" dv-on=\"li_click\">\n    <div class=\"weui_cell_hd\">\n        <i class=\"icon icon-dscr\"></i>\n    </div>\n    <div class=\"weui_cell_bd weui_cell_primary\">\n        <p><b name=\"dscr\"></b></p>\n        <p>订单号: <span name=\"id\"></span></p>\n    </div>\n    <div class=\"weui_cell_ft\" name=\"status\"></div>\n</div>\n</script>\n\n</div>\n```\n上例中：\n+ 用script标签定义了id为tplOrder的html模板，要动态赋值的地方用`name=\"xxx\"`的方式标明，要处理事件的组件用dv-on属性指定。 注意：H5标签template在现阶段的兼容性还够好，谨慎使用。\n+ 使用weui样式库美化列表。在列表\"lst1\"上添加了`\"weui_cells\"`等CSS类, 在列表每一项上用了`\"weui_cell\"`类，详细用法可查阅weui文档。\n+ 列表每项前用<i class=\"icon icon-dscr\"></i>放置了一个名为icon-dscr的图标。\n\n在JS中(page/orders2.js)，我们重写onAddItem函数，使用这个模板clone出每一项：\n```\nfunction initPageOrders2()\n{\n    var jpage = this;\n    ...\n\n    // 列表项模板\n    var jtplOrder_ = $(jpage.find(\"#tplOrder\").html());\n\n    function onAddItem(jlst, itemData)\n    {\n        var ji = jtplOrder_.clone().dataview(itemData, {\n            events: {\n                li_click: li_click\n            }\n        }).appendTo(jlst);\n    }\n\n    ...\n}\n```\njquery-dataview在做事件绑定时，会自动将数据绑定到事件上。 例中，在`li_click(ev)`回调函数中，可以通过ev.data拿到绑定的数据，因而刚好`li_click`函数不用修改，取订单id可以用`var id = ev.data.id`。\n\n### 刷新分页列表\n> 控制刷新分页列表。\n\n列表一旦显示后，每次回到该逻辑页时，不会重新请求数据或刷新，除非用户自己下拉刷新列表，这样保证了应用有良好的性能。           \n但有时需要在程序内控制列表刷新，考虑这样的需求：当一个订单在其它页面被修改了（例如取消订单），再回到订单列表页时希望能刷新列表。            \n`initPageList`可以很简单地实现这一需求。 先为逻辑页定义一个接口:\n```\nvar PageOrders2 = {\n    refresh: null,\n}\n```\n在初始化列表时，添加一个pageItf选项（page interface缩写）：\n```\n    var listItf = initPageList(jpage, {\n        pageItf: PageOrders2,\n        ...\n    });\n```\n在取消订单操作时，只要赋值：\n```\nPageOrders2.refresh = true;\n```\n这样下次进入orders2页时，就会刷新列表，并把PageOrders2.refresh置回false。可以在浏览器控制台上操作试试看。            \n如果想要立刻刷新列表，也可以用`listItf.refresh()`操作。 `listItf`是`initPageList`返回值，是一个操作列表的接口，类似的操作还有显示下一页`listItf.loadMore()`，详见参考文档。\n### 列表用于选择\n> (choose-from-list)在首页上加一个“选择订单”按钮，点击后进入订单列表页，选择一项后返回首页，并显示订单内容。\n\n还是用\"orders2\"页，我们在index.js中定义页面接口如下（主要是choose方法和onChoose回调）：\n```\nvar PageOrders2 = {\n    ...\n    // PageOrders2.choose(onChoose)\n    // onChoose(order={id,dscr,...})\n    choose: function (onChoose) {\n        this.chooseOpt_ = {\n            onChoose: onChoose\n        }\n        MUI.showPage('orders2');\n    },\n\n    chooseOpt_: null // {onChoose}\n};\n```\n在页面orders2中：\n+ 点击一个列表项时，调用onChoose回调\n+ 页面隐藏时，清空chooseOpt_参数。\n\n示例：\n```\nfunction initPageOrders2()\n{\n    ...\n    var pageItf_ = PageOrders2;\n    jpage.on(\"pagehide\", onPageHide);\n\n    function li_click(ev)\n    {\n        var order = ev.data;\n        if (pageItf_.chooseOpt_) {\n            pageItf_.chooseOpt_.onChoose(order);\n            return false;\n        }\n\n        // 正常点击操作 \n        ...\n    }\n\n    function onPageHide()\n    {\n        pageItf_.chooseOpt_ = null;\n    }\n}\n```\n我们回到首页，在浏览器控制台中模拟调用：\n```\nPageOrders2.choose(function (order) {\n    // 处理order\n    app_alert('选择了订单: id=' + order.id);\n    history.back(); // 由于进入列表选择时会离开当前页面，这时应返回\n});\n```\n进入页面orders，选择一项后返回并继续操作。\n\n### 显示多个列表\n本节学习导航栏加多个列表这一常见模式。\n> 在示例应用时，订单列表页便按照订单状态，分成“待服务”和“已完成”两栏，分别对应一个列表。 我们将练习页面orders2也改造成支持分栏的样式。\n\n首先，我们熟悉下后端列表查询的接口。 筋斗云后端接口支持业务查询协议，可以使用cond参数才指定查询条件：\n+ 取待服务订单：callSvr(\"Ordr.query\", {cond: \"status='CR'\"});\n+ 取已完成/已取消订单：callSvr(\"Ordr.query\", {cond: \"status='RE' or status='CA'\"});\n\n我们现在使用的是在mockdata.js中定义的模拟接口，已经模拟了上面两个调用。           \n我们在页面中增加导航栏及列表：(page/orders2.html)          \n```\n<div mui-initfn=\"initPageOrders2\" mui-script=\"orders2.js\">\n    <div class=\"hd\">\n        ...\n        <div class=\"mui-navbar\">\n            <a href=\"javascript:;\" mui-linkto=\"#lst1\">待服务</a>\n            <a href=\"javascript:;\" mui-linkto=\"#lst2\">已完成</a>\n        </div>\n    </div>\n\n    <div class=\"bd\">\n        <div id=\"lst1\" class=\"weui_cells weui_cells_access\"></div>\n        <div id=\"lst2\" class=\"weui_cells weui_cells_access\"></div>\n    </div>\n\n    ...\n</div>\n```\n框架提供导航栏组件，以CSS类\"mui-navbar\"标识，通过属性\"mui-linkto\"分别指向本页中的两个列表，点击时可自动切换。 我们把导航栏放在hd中，让整个bd作为列表容器。这是一种很方便的做法，如果把导航栏放在bd中，还要一个div作为列表容器，且要计算它的合适高度。               \n初始化列表做些修改，指定新的navRef, listRef，用onGetQueryParam来指定查询条件：(page/orders2.js)\n```\n    var listItf = initPageList(jpage, {\n        ...\n        navRef: \".mui-navbar\",\n        listRef: \"#lst1,#lst2\",\n        onGetQueryParam: function (jlst, queryParam) {\n            queryParam.ac = \"Ordr.query\";\n            var id = jlst.attr(\"id\");\n            if (id == \"lst1\") {\n                queryParam.cond = \"status='CR')\";\n            }\n            else if (id == \"lst2\") {\n                queryParam.cond = \"status='RE' OR status='CA'\";\n            }\n        },\n\n        ...\n    });\n```\n6.6 分页列表的接口适配\n上面学习了易用强大的分页列表，支持分页的后端接口使用的是筋斗云的规范，返回列表像这样：\n```\n{\n    list: [\n        {field1: \"val1\", field2: \"val2\"},\n        {field1: \"val3\", field2: \"val4\"},\n    ],\n    nextkey: 2\n}\n```\n上面用list字段返回列表。另外还支持一种等价的压缩表格式，使用h(表头)/d(数据)数组，如下：\n```\n{\n    h: [ \"field1\",\"field2\" ],\n    d: [ [\"val1\",\"val2\"], [\"val3\",\"val4\"], ... ]\n    nextkey: 2\n}\n```\n返回列表如果没到最后一页，需要返回nextkey字段，用于请求下一页时的\"_pagekey\"参数。 请求通过\"_pagesz\"参数指定页大小，通过\"_pagekey\"参数取下一页。          \n如果你遇到的后端分页列表接口设计不符合上述规则，则需要通过接口适配来使用分页列表框架，即让返回数据符合上面的规范，一般是设置好list/nextkey字段，或者是h/d/nextkey字段。             \n> 后端分页机制为(jquery-easyui datagrid分页机制):\n+ 请求时通过参数page, rows分别表示页码，页大小，如 page=1&rows=20\n+ 返回数据通过字段total表示总数, rows表示列表数据，如 { total: 83, rows: [ {...}, ... ] }\n\n要求通过接口适配，不变动前面列表页面orders2的代码，让该页面仍能正常工作。            \n我们先来制作一下模拟数据，在mockdata.js中，修改\"Ordr.query\"部分：\n```\n    \"Ordr.query\": function (param, postParam) {\n        var arr = orders;\n        var ret = {total: arr.length, rows: []};\n        var pagesz = param.rows || 20;\n        var pagekey = param.page || 1;\n\n        for (var n=0, i=(pagekey-1)*pagesz; n<pagesz && i<arr.length; ++n, ++i) {\n            ret.rows.push(arr[arr.length-i-1]);\n        }\n        return [0, ret];\n    },\n```\n这样就可以模拟了，试试\n```\ncallSvrSync(\"Ordr.query\");\ncallSvrSync(\"Ordr.query\", {page: 2, rows: 10});\n```\n注意：上面返回数据的基本格式仍然是筋斗云框架的格式，即成功返回[0, 数据]，失败返回[错误码，错误信息]。 如果不是这样的格式，请阅读前面介绍过的“接口适配”章节去配置`MUI.callSvrExt`。            \n在app.js中设置为initPageList设置缺省选项：\n```\n$.extend(initPageList.options, {\n    pageszName: \"rows\",\n    pagekeyName: \"page\",\n    // 设置 data.list, data.nextkey (如果是最后一页则不要设置); 注意pagekey可以为空\n    onGetData: function (data, pagesz, pagekey) {\n        data.list = data.rows;\n        if (pagekey == null)\n            pagekey = 1;\n        if (data.total >  pagesz * pagekey)\n            data.nextkey = pagekey + 1;\n    }\n});\n```\n在onGetData回调中，设置data.list及data.nextkey属性（如果是最后一页则不要设置）。         \n注意：app.js与index.js的区别是，前者适用于项目下的所有应用，而index.js只是index.html这个H5应用的主程序。           \n配置后，项目下所有列表都将应用这个适配规则。如果只是个别列表适配需要调整，可以在调用initPageList时指定这些选项，如：\n```\n    var listItf = initPageList(jpage, {\n        ...\n\n        pageszName: 'rows',\n        pagekeyName: 'page',\n        onGetData: ...\n    });\n```\n考虑这样一种情况，后端就返回一个列表如`[ {...}, {...} ]`，不支持分页，那么是否可以使用分页列表？\n\n答案是仍然可用，initPageList支持一个纯数组，它将被当成列表的最后一页处理，无法上拉加载，但仍支持下拉刷新。\n\n## 创建多个H5应用\n> 在示例项目中，只有一个应用即index.html。 实际在一个H5项目中，常常需要多个应用，例如给用户使用的手机客户端应用、给员工使用的员工端应用等。 我们将在同一项目下再创建一个新的“员工端”应用。\n\n筋斗云要求每个H5应用有个内部名称(appName)， 在示例应用中，appName定义为user，表示用户端，假如定义员工端应用的内部名称为emp，我们创建这些文件：\n+ 新建H5主文件，emp.html, emp.js, emp.css\n+ 新建逻辑页目录，名为emp，在这个目录下创建逻辑页。\n+ 项目下所有H5应用共用的逻辑放在文件app.js中，共用的样式放在文件app.css中。 第三方库文件，一般放在lib目录下，每个应用均可引用。\n\n在emp.js中正确配置：\n```\n$.extend(MUI.options, {\n    appName: \"emp\",\n    homePage: \"#home\",\n    pageFolder: \"emp\",\n});\n```\n应用内部名称appName将会在callSvr发起的调用中，自动通过URL参数_app传给后端。 后端可以根据应用不同，建议使用不同的cookie名来区分，这样即使浏览器同时打开这两个应用，也不会有冲突。          \n关于代码放到哪个文件中，原则如下：\n+ 逻辑页专用的内容，放到逻辑页的html/js文件中。\n+ H5应用专用的内容，或多个逻辑页共享的内容，放到H5主文件html/js/css中。\n+ 项目下所有H5应用共享的内容，放到app.js/app.css中。\n## H5应用优化\n目前我们运行的H5应用直接是在项目下的server目录中，这称为开发版本，没有进行优化。 在生产环境下，一般会将开发版本进行优化，生成发布版本后上线，可提升H5应用性能。\n\n### 用webcc编译H5应用\n> 使用webcc工具，编译项目下的server目录，生成发布版本目录\"output_web\"。\n\n作为一个WEB应用，发布时最常见的需求是JS/CSS/HTML文件合并和压缩(minify)。 H5应用自身用的index.js/index.css文件可以内嵌到主文件index.html中，常用的逻辑页面（包括html/css文件）也可以内嵌到index.html中来。            \n筋斗云通过名为webcc的工具进行应用优化，也称为编译。 本章详细介绍可参考官方文档\"webcc\"。          \n我们先看怎么运行它。 webcc是php工具，必须先安装php环境(版本5.4或更高)； 在Windows系统上，建议安装git，它自带的git-bash环境模拟了简单的linux/unix环境，如果已安装mingw或cygwin也可以。         \nwebcc一般要求源代码使用git管理，通过git命令查询源文件列表及版本差异，实现增量编译、自动化发布等功能。 如果你已用git管理项目，则在项目目录中打开git-bash(或其它linux shell环境)，运行命令：\n```\n$ php tool/webcc.php server\n```\n上面server是待编译的开发版本目录，里面有所有开发的内容。运行后生成发布版本目录\"output_web\"。         \n如果项目未使用git管理，则要求指定源文件列表，在运行webcc之前必须先设置环境变量WEBCC_LS_CMD，例如：\n```\n$ export WEBCC_LS_CMD='find . -type f'\n```\n注意：上面命令会将目录下所有文件都编译并发布，应确保清除目录下无用的文件。 如果你使用的是svn管理项目，则需要把\".svn\"目录过滤掉以免生成到发布目录：\n```\n$ export WEBCC_LS_CMD='find . -type f | grep -v .svn'\n```\n或者使用svn命令精确列表哪些文件要发布：\n```\n$ export WEBCC_LS_CMD='svn ls -R'\n```\n至于编译生成的发布目录和源目录有哪些不同，下面将讲述。\n### webcc配置解读\n在示例应用的server目录下，有一个webcc.conf.php的配置文件，里面定义了优化策略，一般无需修改：\n```\n$RULES = [\n    '*.html' => 'HASH',\n    ...\n];\n```\n第一条规则是server目录下(不包括子目录)的所有html文件，即所有H5应用，执行HASH规则，对于html文件，会处理其中的webcc标记。       \n在示例应用中，我们在index.html中查找webcc，可以看到有这些标记：\n```\n<!-- WEBCC_BEGIN MERGE=lib 外部库 {{{-->\n    <link rel=\"stylesheet\" href=\"lib/weui.min.css\" />\n\n    <script src=\"lib/jquery-1.11.1.min.js\"></script>\n    <script src=\"lib/jquery.touchSwipe.min.js\"></script>\n<!-- WEBCC_END }}}-->\n\n<!-- WEBCC_BEGIN MERGE=lib-app 内部库 {{{-->\n    mui.css, app.css等css文件...\n    app_fw.js, app.js等js文件...\n<!-- WEBCC_END }}}-->\n\n<!-- WEBCC_BEGIN MERGE 应用专用 {{{-->\n    <link rel=\"stylesheet\" href=\"index.css\" />\n    <script src=\"index.js\"></script>\n<!-- WEBCC_END }}}-->\n\n...\n\n<!-- WEBCC_BEGIN {{{ embeded pages -->\n<!-- WEBCC_USE_THIS\nWEBCC_CMD mergePage -minify yes page/home.html page/login.html page/login1.html page/me.html\nWEBCC_END }}} -->\n```\n先看外部库、内部库，它们分别被放置在标记WEBCC_BEGIN MERGE=xxx / WEBCC_END之中。 这意味着其中的css, js文件会被合并到一起，压缩后生成一个文件xxx.js或xxx.css。           \n外部库表示第三方库，如果应用中用到了其它库，且文件大小并不大，可以放置到这一块中，以便多个库合并成一个文件优化下载。 内部库是筋斗云框架自身及你的项目内所有H5应用的通用部分(app.js, app.css)。           \n应用专用就是当前H5应用用到的js/css。使用的webcc标记与前面比，没有指定\"MERGE=xxx\"，只指定了\"MERGE\"，这表示合并其中内容到当前文件，即把index.css/index.js内嵌到index.html文件中。               \n最后一块是内嵌逻辑页，用\"WEBCC_USE_THIS\"标记和\"mergePage\"命令指定了一些逻辑页，这些页面一般是最常用的页面，这个html及其引用的js文件将被直接内嵌到index.html中。 框架在加载逻辑页时，如果发现已内置于主html中则优先使用内置页，否则就触发缺页中断从而远程加载。          \n## H5应用发布上线\n上一章介绍了H5应用的编译优化，生成了发布目录，配置好WEB服务器后，将发布目录上传到服务器即可完成发布。           \n为了H5应用程序升级后客户能及时更新，建议将H5应用的主html文件及逻辑页面文件夹下html/js文件的缓存策略设置为\"no-cache\"。 （在开发环境下，一般建议所有文件都设置为不缓存。）               \n建议使用Apache或nginx作为筋斗云H5应用线上生产环境的WEB服务器。 项目下已有专为这两种服务器的配置，即为Apache用的.htaccess文件，以及为nginx准备的.ht.nginx文件。\n> 配置Web服务器，访问H5应用，在Chrome浏览器的网络监控中查看请求，要求：\n+ H5应用的index.html文件，以及逻辑页如page/home.html, page/home.js文件，HTTP响应中设置了\"no-cache\"策略。 当再次刷新应用时，HTTP响应为\"304 Not Modified\"（确保Chrome网络监控页面下的\"Disable cache\"选项未勾选）。\n+ 其它js/css文件，HTTP响应中未设置\"no-cache\"策略，再次刷新H5应用时，不访问服务器。\n示例如下：![img7](/img/7.png)            \n如果使用Apache服务器，应配置项目下允许.htaccess文件，比如\n```\n<Directory /var/www/html/myproject>\n    AllowOverride All\n</Directory>\n```\n如果使用nginx，可以把项目下的.ht.nginx文件包含到nginx的主配置文件中。注意一些路径可能需要修改。           \n如果使用其它WEB服务器（如IIS），应手工作相应的配置。               \n此外，对所有html/css/js这些文本文档都应设置gzip压缩，注意图片文件一般不设置gzip压缩，因为图片有自己的压缩算法。           \n### 自动化差量发布\n> 编写和运行项目下的build_web.sh文件做为上线工具，运行它实现自动编译和将新近修改的内容上线。\n\n如果希望每次修改一些内容后，可以快速将差异部分上线，不必每次都上传所有文件，可以使用筋斗云自带的上线工具。           \n筋斗云框架支持WEB应用自动化发布，并可差量更新。 目前差量更新依赖git工具，要求源目录及编译生成的发布目录均使用git管理，每次只上传与线上版本差异的部分。 本章详细介绍可参考官方文档\"webcc\"中的\"jdcloud-build\"模块。           \n自动化发布支持ftp/git两种方式，前者只需服务器提供ftp上传帐号，后者需要服务器提供git-push权限。 本章介绍git方式，安全可靠且版本可任意回溯。ftp方式只需修改若干参数，可参考官方文档。          \n我们的示例项目名为myproject，已使用git管理。 先创建发布版本库(又称online版本库), 使用git管理，定名称为myproject-online，习惯上与目录myproject放在同一父目录下:\n```\n$ git init myproject-online\n```\n在线上服务器上设置ftp帐号或git帐号。使用git发布时，一般配置好用ssh证书登录，避免每次上线时输入密码。            \n将tool/git_init.sh上传服务器，用它创建线上目录：\n```\n$ git_init.sh myproject\n```\n编写项目根目录下的build_web.sh脚本：\n```\n#!/bin/sh\n\nexport OUT_DIR=../myproject-online\nexport GIT_PATH=www@myserver:myproject\ntool/jdcloud-build.sh\n```\n在Windows平台上，打开git shell运行build_web.sh即可上线。\n## 制作原生APP\nH5应用可以打包生成苹果或安卓原生应用，一般也称为混合应用程序(Hybird App)。            \n并不是所有的H5应用都适合打包成原生应用，如果把一个普通的手机网站包装成原生应用，即使它制作的外观像是原生应用， 但切换页面时的网页刷新和加载导致速度慢、费流量、体验差，并不适合制作APP，而且像苹果应用市场等也容易拒绝此类APP上架。 为了接近原生应用的用户体验，可打包的H5应用应是支持多逻辑页的单网页应用，也就是变脸式应用。           \n我们制作的原生应用最大的特点是它与H5应用是分离的，从而在应用市场上架后仍可随时轻松升级应用。 这种应用我们也把它称为原生壳。\n### 编译原生壳\n>+ 一次开发，多平台运行：将我们制作的H5应用打包生成原生APP安装到安卓及苹果手机上。\n+ 一次上线，轻松升级：更新H5应用并上线，查看已安装的原生应用是否已自动及时更新。\n\n准备工作：\n+ 云编译环境，安装Intel XDK，注册好用户帐号。\n+ 安卓和苹果的应用证书。安卓证书可以自行制作，苹果证书须注册苹果开发者帐号后生成。\n\n使用Intel XDK的最大挑战是网络。在国内访问可能有问题，或者很慢，或者连不上。必要时可以使用VPN代理等手段连接。      \n打开Intel XDK，创建一个新的\"Html5+Cordova\"项目：![xdk1](/img/xdk1.png)      \n点左上角的\"PROJECTS\"，进入项目设置，里面有插件管理(Plugin Management)，编译设置(Build Settings)和图标及启动画面设置(Launch Icons and Splash Screens)。 插件是各种手机原生语言开发的库，比如相机、支付宝及微信支付等，本节不做重点介绍。图标和启动画面比较简单，准备好图片选上就行。           \n编译设置中要注意需要每个平台分别设置，请特别注意：\n+ 在访问权限中，在\"Navigation\"栏中，设置为\"*\"，表示允许访问外网地址。\n+ 安卓及苹果的开发证书在软件右上角用户帐号中先添加好，才能在编译设置中选择。\n+ 安卓有个选项“Optimize with crosswalk”，用于把浏览器与应用一起打包以便在各种安卓手机上有良好的兼容性，缺点是生成的包要大20M。 练习时可不选，实际项目中建议选上。\n![xdk2](/img/xdk2.png)          \nxdk项目目录下的文件intelxdk.config.additions.xml中，设置上H5应用的地址，加上这句：\n```\n<content src=\"http://myserver/myproject/index.html?cordova=1\" />\n```\n注意，H5应用后面加上参数cordova={壳版本}，框架将识别这个参数，进入原生应用模式，自动加载插件接口。         \n还有找到debuggable选项把它设置为true，以便可以之后在电脑上连接设备调试H5应用。\n```\n<preference name=\"debuggable\" value=\"true\" />\n```\n配置好后，进入编译页，开始编译。\n![xdk3](/img/xdk3.png)          \n编译好后，先不要立即安装到手机上，还有重要的一步，将插件接口更新到H5应用中去，这样在H5应用中可调用原生功能。\n#### 更新原生插件接口到H5应用。\n用winzip等工具解压生成的apk名或ipa包（可以先改名为.zip文件再点开），在安卓apk包的assets/www目录中（或苹果ipa包的Payload/{应用名}.app/www目录下），找到以下三个文件或目录：\n```\ncordova.js\ncordova_plugins.js\nplugins/ （整个目录）\n```\n把安卓APP中的这些文件复制到H5应用的目录server/cordova下面，把苹果APP中的这些文件复制到server/cordova-ios下面。这样就完成了H5应用中设置原生插件接口。         \n注意：当H5项目中有多个应用时，plugins目录直接取并集即可，而cordova_plugins.js文件需要小心合并。       \n这时将apk包或ipa包安装到手机上，打开应用程序，看看是否能正常运行。            \n我们在H5应用中书写代码时，可以检查全局变量g_cordova。 例如，想要仅在原生应用中显示某个页面，在微信或浏览器中访问时提示错误：\n```\nif (! g_cordova) {\n    app_alert(\"本功能请在APP中点击进入\");\n    return;\n}\nMUI.showPage(\"#xxx\");\n```\n### 壳版本管理\n请牢牢记住，由于原生壳与H5应用的分离，用户安装的用户壳可能是旧版本的，而线上的H5应用永远是最新版本。        \n假如在原生壳中新增加了插件，应增加壳版本号。 操作上也可将壳版本等同于原生应用的版本代码（安卓叫App Version Code，苹果叫CF Bundle Version），那么要注意插件变动时，一定也要变动原生应用版本。         \n>需求：新版本壳中增加了某插件，希望安装旧版本壳的用户在用到此插件时，提示更新APP。\n\n假定当前壳版本为1，注意在配置文件intelxdk.config.additions.xml中修改壳版本，假如为2：\n```\n<content src=\"http://myserver/myproject/index.html?cordova=2\" />\n```\n然后编译好新版本安装包。 由于插件变化了，仍然需要更新原生插件接口到H5应用，将新的插件合并到H5应用的cordova或cordova-ios目录中。         \n注意cordova_plugins.js文件定义H5应用可用哪些插件，需要手工合并和设置版本。         \n假设我们在用户端上新增加了一个微信分享插件，cordova_plugins.js文件如下：\n```\nmodule.exports = [\n    ...,\n    // 以下为新增部分：\n    {\n        \"file\": \"plugins/com.xxx.weixin/www/weixin.js\",\n        \"id\": \"com.xxx.weixin\",\n        \"clobbers\": [\n            \"navigator.weixin\"\n        ]\n    }\n]\n```\n前面提到过，每个筋斗云H5应用都有一个惟一的应用名(MUI.options.appName)，例如用户端设置应用名为\"user\"。 我们为新的插件加上filter属性：\n```\nmodule.exports = [\n    ...,\n    // 以下为新增部分：\n    {\n        \"file\": \"plugins/com.xxx.weixin/www/weixin.js\",\n        \"id\": \"com.xxx.weixin\",\n        \"clobbers\": [\n            \"navigator.weixin\"\n        ]\n        // 指定客户端应用(名为user)从壳版本2开始支持该插件\n        \"filter\": [ [\"user\", 2] ]\n    },\n]\n// 新加上这一句处理版本\nfilterCordovaModule(module);\n```\nfilter属性的格式为`[ [app1, minVer?=1, maxVer?=9999], ...]`, 仅当应用名匹配且版本在minVer/maxVer之间才使用。 如果未指定filter，则表示加载该插件。 假定还有个员工端应用名为emp，在壳版本300时增加了该插件，则可以设置：\n```\n\"filter\": [ [\"user\", 2], [\"emp\", 300] ]\n```\n这样，不同的H5应用版本加载的插件是不一样的，要在浏览器中测试查看每个壳版本分别加载了哪些插件，可以直接访问带cordova参数的H5应用地址如：\n```\nhttp://myserver/myproject/index.html?cordova=1\n```\n然后在Web控制台中执行：\n```\ncordova.require('cordova/plugin_list')\n```\n最后，我们在H5应用中检查插件是否可用，以及提示用户升级：\n```\nif (navigator.weixin == null) {\n    app_alert(\"您的APP版本太旧，请升级后使用本功能。\");\n    return;\n}\n// 调用新插件的功能。\n```\n### 调试原生应用\n由于原生应用调试复杂，只要不是原生插件本身的问题，尽量先在电脑浏览器上调试。          \n对于只能在手机上运行的功能，注意加些调试代码，让它也在网页中也能模拟运行。 比如微信分享后可以领取红包，为了在普通浏览器中可调试，可以这样做：\n```\nif (! g_cordova) {\n    // 模拟代码\n    if (g_args.mock) {\n        if (confirm(\"模拟分享?\"))\n            onShareOk();\n    }\n    app_alert(\"必须在App中运行\");\n    return;\n}\n微信分享(成功后回调 onShareOk);\n\nfunction onShareOk()\n{\n    // 领取红包\n}\n```\ng_args.mock表示在URL参数中有\"?mock=1\"时走模拟分支。这样绝大多数问题都不用在手机上调试。             \n如果在电脑浏览器上运行正常，但在手机应用中运行出错，需要尝试在设备上调试H5应用。 对于安卓应用，可在Chrome中调试手机应用。注意在编译壳的选项中，我们曾设置过：\n```\n<preference name=\"debuggable\" value=\"true\" />\n```\n在安卓手机上，打开USB调试选项（请自行搜索如果进入开发者模式及打开USB调试），连上电脑， 然后在Chrome地址栏中输入chrome://inspect即可进入设备调试。             \n注意：由于google的站点国内很难访问，如果调试页面打不开，须通过代理访问。         \n调试苹果应用，得用苹果电脑上的Safari浏览器。 由于苹果要求只有使用开发证书的App才能调试，所以要么用开发证书重新编译个用于调试的App壳，要么更简单地直接在Safari浏览器中调试。 先开启iPhone/iPad上的Safari的远程调试功能：“设置 > Safari > 高级” > Web检查器选中。 将iphone插入电脑，弹出是否允许调试，选择“是”。 打开Safari，在“开发”菜单下可见有一行是 该手机的名字，里面显示有可调试的页面。                \n如果是首次在mac上使用safari时，应先激活“开发工具”菜单项： (menu)preference(偏好设置)->高级->在菜单栏中显示“开发”菜单。           \n如果以上调试环境很难配置成功，那么只能通过在代码中加alert来一点点逼近问题。            \n如果确定问题出在原生插件上，或者需要修改原生插件，那么只有搭建cordova工程，调试原生java或object-c代码。","source":"_posts/筋斗云文档.md","raw":"title: 筋斗云文档\ntags: [JDCloud]\ndate: 2017-12-20 15:33:56\ncategories: [JDCloud]\ndescription: 筋斗云框架前端文档\n---\n当需要制作一款手机应用，希望它既可以在手机浏览器或微信公众号之类的轻应用平台使用，也可以在安卓、苹果等手机上安装使用，由于各平台技术栈完全不同，光前端就需要至少三套人马在各平台各自为战，开发和维护成本极高。现在你多了一种用H5技术制作全平台手机应用的选择，不仅极大的降低开发成本，而且由于H5技术源于已经用了至少20多年的网页技术，门槛也远低于才兴起几年的手机平台开发技术。架构师在选型时会纠结，又想优雅的做全平台应用，又担心用网页技术制作的手机应用的体验到底行不行。    \n川剧中的变脸艺术，如行云流水般切换脸谱，令人惊叹。 如果把手机应用中的每个页面看成一张脸谱，在操作时我们也希望像变脸表演一样有着轻松流畅的体验。 而用传统的网页技术制作的仿手机应用和原生手机应用的体验尚有较大差距，主要原因是每个页面都是一张网页，在操作时有大量网页加载和刷新，不流畅且浪费大量流量。    \n对于网页刷新问题的解决方案是使用Ajax技术制作交互式无刷新网页。早在1998年前后，微软的Outlook Web Access成为第一个应用了Ajax技术的成功的商业应用程序，2005年以后，随着谷歌地图、Gmail等交互式网页应用的流行，Ajax技术也开始流行起来，也诞生了“单网页应用(SPA)”这个概念。      \n在手机应用领域，由于早期手机性能弱，做应用程序基本只能使用原生开发语言，学习门槛很高。随着手机性能的增强和H5技术的流行，已经可以把“单网页应用”技术应用到手机上，让整个应用就是一个网页，而原本一张张相互链接的网页变成了H5应用中的一个个可流畅切换的逻辑页面，消除了网页加载，操作体验接近手机原生应用。\n**这种支持多逻辑页面的具有流畅的操作体验的H5单网页应用，我们将它称为变脸式应用。**           \n对手机单网页应用有以下常见误解：\n+ 只能做做小工具，不适合做大型商业应用。这是因为没有使用好的模块化开发模型，去找个支持大型开发的好框架先。\n+ 耗内存，耗流量，性能低下。某些单页应用简单地将所有逻辑页一次性全部加载，没有逻辑页优化，也没有做好缓存、图片等优化，而招此骂名。解决方法是找个支持动态加载逻辑页、支持H5应用优化的开发框架。\n+ 没法做搜索引擎优化(SEO)。以前做网页的同时要兼顾做SEO，现在其实可以将做网页应用和做SEO分离了，对SEO可以单独设计，从而做的更好。这就像用户访问一个站点，如果是手机访问就跳转手机版，如果是电脑访问就跳转电脑版，而如果是爬虫机器人访问，也可以备好一套狗粮，不再和人吃的一样。   \n\n**筋斗云前端框架是一个变脸式单网页应用的开源开发框架，** 它以页面路由和接口调用为核心，提供多逻辑页支持和远程接口调用封装，同时对制作安卓、苹果原生应用也提供良好的支持，因而也是一个全平台H5应用框架。\n## 创建项目\n> 用筋斗云前端框架创建一个H5应用项目myproject，在浏览器运行起来。     \n\n先从github上下载开源的筋斗云前端框架及示例应用：https://github.com/skyshore2001/jdcloud-m         \n建议安装git工具直接下载，便于以后更新，例如直接创建H5应用项目叫myproject\n```\n    git clone https://github.com/skyshore2001/jdcloud-m.git myproject\n```\n如果github访问困难，也可以用这个git仓库\n ```\n    http://dacatec.com/git/jdcloud-m.git\n ```\n下载后，myproject是我们的项目目录。\n+ 子目录server是H5应用目录，开发主要集中在这里。\n   - 在server目录下，lib目录下的js/css文件都属于框架使用的文件，不宜随意修改，其中app_fw.js是筋斗云前端框架的核心部分。\n   - page目录是默认的逻辑页目录，比如首页、登录页、订单列表等逻辑页的html和js文件都放在这里。\n   - cordova目录是用于制作原生手机app时使用的。筋斗云框架支持全平台应用，即一套H5代码，可同时制作安卓应用、苹果应用、微信微站等。\n+ tool是用于优化和发布的工具，之后在站点上线优化时介绍。  \n \n设置WEB服务器（如Apache/nginx/IIS等），添加虚拟目录myproject, 指向myproject/server目录，这时，就可以直接运行起前端应用\n ```\n    http://localhost:8080/\n ```\n## 页面\n### GetStart - HelloWorld\n> 上一节我们创建了新的H5应用项目，本节我们制作一个仅显示\"hello world\"的逻辑页面，在首页中添加一个链接，点击可进入这个页面。\n\n制作一个逻辑页面，存到文件page/hello.html:\n```\n    <div>\n        <div class=\"hd\">\n            <h2>HelloWorld</h2>\n        </div>\n\n        <div class=\"bd\">\n            <p>Hello, world</p>\n        </div>\n    </div>\n```\n这是个html片段，其中`class=\"hd\"`与`class=\"bd\"`分别代表逻辑页的标题栏和主体部分。一般应保持这样的结构，即使不需要标题栏，也建议保留hd这个div，将其设置隐藏即可(`style=\"display:none\"`)。              \n在首页page/home.html中添加一个链接过来：\n```\n    ...\n    <div class=\"bd\">\n        ...\n        <li><a href=\"#hello\">Hello</a></li>\n    </div>\n```\n在浏览器时刷新H5应用进入首页，点击Hello链接，就可以看到新逻辑页Hello显示出来了。 筋斗云可以动态加载逻辑页，并为它指定id为\"hello\"(即页面文件名)。 除了使用链接，还可以通过JS代码`MUI.showPage(\"#hello\")`来显示该页。             \n点击浏览器的返回按钮，可以回到首页。在返回时，没有网页刷新的过程，这也是变脸式应用的典型特点。             \n我们也可以在逻辑页的hd部分里为应用添加返回按钮，如：\n```\n    <div class=\"hd\">\n        <!-- 加上返回按钮 -->\n        <a href=\"javascript:history.back();\" class=\"icon icon-back\"></a>\n        <h2>Hello</h2>\n    </div>\n```\n改好后，不必刷新页面重新从首页进入，直接在浏览器控制台中输入\n```               \n    MUI.reloadPage();\n```\n就可以直接查看到更新后的逻辑页了。               \n**筋斗云支持逻辑页热更新技术，** 可以实时热更新当前页面，并保留当前的应用状态。这一技巧在开发调试逻辑页时非常好用，尤其对于复杂的H5应用，不必从首页操作进来。类似的技巧还有卸载一个逻辑页，以便再进入时可重新初始化\n```\n    MUI.unloadPage(); // 卸载当前页\n    MUI.unloadPage(\"hello\"); // 卸载指定页\n```\n如果你嫌首页上加的链接太难看，可以使用框架默认集成的weui样式库来润色它，如\n```\n    <div class=\"weui_cells\" style=\"margin-top:100px\">\n        ...\n        <!-- 显示为一个button -->\n        <li class=\"weui_cell\" style=\"display:block\"><a href=\"#hello\" class=\"weui_btn weui_btn_default\">Hello</a></li>\n    </div>\n```\n同样地，在修改好后，直接在控制台输入`MUI.reloadPage()`看效果。              \n筋斗云的核心是页面路由(showPage)和接口调用(callSvr)。它自身不提供移动UI样式库，而是通过集成的weui样式库来提供移动UI样式。 weui是一套同微信原生视觉体验一致的基础样式库，由微信官方团队开发，关于weui的使用可以参考 **https://weui.io/** 或自行搜索。 当然你也可以把它换成你自己喜欢的UI库。\n### 为逻辑页添加样式和逻辑\n> 上一节中，我们添加了一个逻辑页\"hello\"。现在我们通过CSS修改显示字体为红色，并在进入和退出页面时弹出提示框。\n\n为逻辑页设置样式，如果这个样式只在这个逻辑页使用，一般就在页面div中内嵌style标签。 页面的逻辑写在与页面同名的js文件中，在页面div上使用mui-script属性指定js文件，并通过mui-initfn标签指定页面初始化函数。                  \n修改hello.html页面文件如下                  \n```\n    <div mui-initfn=\"initPageHello\" mui-script=\"hello.js\">\n    <style>\n        p {\n            color: red;\n        }\n    </style>\n    <div class=\"hd\">\n        <a href=\"javascript:history.back();\" class=\"icon icon-back\"></a>\n        <h2>HelloWorld</h2>\n    </div>\n\n    <div class=\"bd\">\n        <p>Hello, world</p>\n    </div>\n</div>\n```\n在上例中，在内嵌的style标签中为\"p\"标签指定样式，让它显示红色。 你可能有疑问，这样写会不会影响其它页面中的p标签的样式呢？                   \n**筋斗云支持自动限定逻辑页样式作用域。** 即框架保证这个样式只会用于当前逻辑页，不会污染到其它页面。            \n上面逻辑页中通过mui-script=\"hello.js\"指定了js文件，创建page/hello.js文件如下：\n```\n    function initPageHello() {\n        var jpage = $(this);\n        jpage.on(\"pagebeforeshow\", onBeforeShow);\n        jpage.on(\"pagehide\", onHide);\n\n        function onBeforeShow() {\n            app_alert(\"before show\");\n        }\n        function onHide() {\n            app_alert(\"hide\");\n        }\n    }\n```\n上面演示了逻辑页进入和退出时常用的事件处理，很容易理解。 一般从后端取数据的操作都习惯放在pagebeforeshow事件中处理。另外还有pageshow, pagecreate等事件。               \napp_alert是框架提供的异步弹出框函数，可用于提示消息(类似alert)、确认消息(类似confirm)、问询消息(类似prompt)等，弹出框界面也可自由定制，后面还将介绍。                         \n### 页面栈\n框架支持逻辑页面的前进和后退，甚至可以用手势左右划动页面来后退或前进。                 \n> 本节讲述一个常见需求：提交订单后进入下一页面，这时点返回按钮（不管是点浏览器的返回按钮还是页面左上方的返回按钮）， 应该跳过提交页面，返回再前一个页面。\n\n在示例应用首页上，点击\"立即下单\"，进入\"创建订单\"页，点击\"创建订单\"按钮，进入\"订单列表\"页。 这时点击返回按钮，我们看到，它跳过了\"创建订单\"页，直接返回了再前面一页即首页。                              \n我们查看\"创建订单\"页的代码(createOrder.js)，其实只需在切换页面前，调用`MUI.popPageStack()`\n```\n    function api_OrdrAdd(data) {\n        app_alert(\"订单创建成功!\", \"i\", function () {\n            // 到新页后，点返回不允许回到当前页\n            MUI.popPageStack();\n            PageOrders.refresh = true;\n            MUI.showPage(\"#orders\");\n        }, g_cfg.WAIT);\n    }\n```\n如果想在回退时跳过两个页面（比如提交过程有两步分了两个页面），调用`MUI.popPageStack(2)`即可。\n## 调用后端接口\n调用后端接口是筋斗云框架提供的两大核心功能之一。                \n> 继续hello页面的例子，要求每次进入页面时，不是固定的显示\"hello, world\"，而是需要根据服务端的返回内容来显示hello的内容，比如\"hello, skys\"或是\"hello, jdcloud\"。\n\n我们先定义一个叫做\"hello\"的交互接口，由前端发起一个HTTP GET请求，比如\n```\n    http://myserver/myproject/api.php?ac=hello\n```\n如果调用成功，后端返回JSON格式的数据`[0, \"jdcloud\"]`, 其中0是返回码，表示调用成功。如果调用失败，返回`[99, \"对不起，服务器爆炸了\"]`。       \n有了清晰的接口定义，前后端就可以并行开发了。 在前端，我们把页面稍作修改以动态显示hello的内容：\n```\n<div class=\"bd\">\n    <p>Hello, <span id=\"what\"></span></p>\n</div>\n```\n再写一段逻辑，每当进入页面时调用hello接口并显示内容，我们选择onBeforeShow回调来做这件事：\n```\n    function initPageHello() {\n        var jpage = $(this);\n        jpage.on(\"pagebeforeshow\", onBeforeShow);\n\n        function onBeforeShow() {\n            callSvr(\"hello\", api_hello);\n        }\n    \n        function api_hello(data) {\n            jpage.find(\"#what\").html(data);\n        }\n    }\n```\n`callSvr`是框架提供的一个重要函数，它封装了ajax调用的细节，完整的函数原型为：\n```\n    callSvr(ac, param?, fn?, postParam?, options?);\n```\n其中，ac是调用接口名，fn是回调函数，param和postParam分别是URL参数和POST参数。除ac外，其它参数均可省略。例如\n```\n    callSvr(\"hello\");\n    callSvr(\"hello\", {id: 1}); // URL: hello?id=1\n    callSvr(\"hello\", {id: 1}, api_hello); // function api_hello(data) {}\n    callSvr(\"hello\", api_hello, {name: \"hello\"});\n```\n回调函数api_hello仅在成功时被调用，参数data是实际数据，即`[0, data]`中的data部分，不包括返回码0。 当调用失败时，框架会统一处理，显示错误信息，无须操心。\n### 使用模拟接口\n**筋斗云支持模拟接口返回数据。** 在mockdata.js中，可以设置接口的模拟返回数据\n```\n    MUI.mockData = {\n        ...\n        \"hello\": [0, \"jdcloud\"]\n    }\n```\n### 调用真实接口\n在后端接口开发好后，我们可去掉对这个接口的模拟，直接远程调用服务端接口。这需要配置好后端接口的地址。          \n我们用php写一个简单的符合筋斗云接口规范的后端实现，通过名为\"ac\"的URL参数表示接口名，在server目录中创建文件api.php如下\n```\n    <?php\n\n    @$ac = $_GET['ac'];\n    if ($ac == 'hello') {\n        $what = \"jdcloud @ \" . time();\n        echo json_encode([0, $what]);\n    }\n    else {\n        echo json_encode([1, \"bad ac\"]);\n    }\n```\n配置好php的调用环境后，访问`http://localhost/myproject/api.php?ac=hello`，输出类似这样：`[0,\"jdcloud @ 1483526151\"]`                \n回到前端，我们在app.js中设置服务端接口地址：\n```\n    $.extend(MUI.options, {\n        serverUrl: \"api.php\",\n        serverUrlAc: \"ac\"\n    });\n```\n以上讲述的是符合筋斗云接口规范的接口调用设置，如果不符合该规范，请阅读下一节“接口适配”。\n### 接口适配\n在上例中，假定了后端接口兼容筋斗云接口规范，例如返回格式为`[0, jsonData]`及`[非0, 错误信息]`。 如果接口协议不兼容，则需要做接口适配。          \n接口适配的目标是通过callSvr函数更加简练地调用后台接口，同时达到：\n+ 调用出错统一处理，例如未认证错跳转到登录页，其它错误弹出错误提示框等。\n+ 写代码时只需要处理调用成功后返回的数据，不用每次调用都处理各种错误。\n \n> 适配以下接口协议规范，约定接口返回格式为：{code, msg, data}， 例如上例中的hello接口，调用成功时返回：\n```\n    {\n        \"code\":\"0\",\n        \"msg\":\"success\",\n        \"data\":\"jdcloud\"\n    }\n```\n失败返回：\n```  \n    {\n        \"code\":\"99\",\n        \"msg\":\"对不起，服务器爆炸了\"\n    }\n```\n\n这时需要对callSvr进行适配，可以在app.js中，设置 `MUI.callSvrExt`如下:\n```\n MUI.callSvrExt['default'] = {\n        makeUrl: function(ac) {\n            return 'http://hostname/lcapi/' + ac;\n        },\n        dataFilter: function (data) {\n            if ($.isPlainObject(data) && data.code !== undefined) {\n                if (data.code == 0)\n                    return data.data;\n                if (this.noex)\n                    return false;\n                app_alert(\"操作失败：\" + data.msg, \"e\");\n            }\n            else {\n                app_alert(\"服务器通讯协议异常!\", \"e\"); // 格式不对\n            }\n        }\n    };\n```\n我们在mockdata.js中设置好模拟数据用于测试：\n```\nMUI.mockData = {\n    \"User.get\": {code: 0, msg: \"success\", data: user},\n    \"hello\": {code: 0, msg: \"success\", data:\"myworld\"}\n    ...\n}\n```\n上例中，User.get接口在显示首页是会调用，所以和\"hello\"接口一并模拟下。          \n测试接口调用：\n```\ncallSvr(\"hello\", console.log);\n```\n或\n```\ncallSvrSync(\"hello\");\n```\ncallSvrSync是callSvr的同步调用版本，它直接等到调用完成才返回，且返回值就是调用成功返回的数据。                \n在接口适配完成后，应用层代码不用去做任何修改。 进入页面看看，是不是和上节的运行结果是一样的。\n## 进入与退出应用\n进入应用后，框架会自动设置一些全局变量，如g_args, g_data等。               \n问：如何在H5应用中获取URL参数？              \n全局变量g_args保存了H5应用的URL参数。 例如URL为`http://myserver/myproject/index.html?orderId=10&dscr=上门洗车`，则该对象有以下值：\n```\ng_args.orderId=10; // 注意：如果参数是个数值，则自动转为数值类型，不再是字符串。\ng_args.dscr=\"上门洗车\"; // 对字符串会自动进行URL解码。\n```\n问：全局数据存放到哪里有规范吗？            \n全局数据建议都放在变量g_data中，而不是到处创建全局变量，这样查看这个变量就可以了解H5应用状态。 框架也会设置一些全局数据进去（例如userInfo保存登录后的返回数据等）。另外，如果是逻辑页之间传递信息，不要用全局变量，应使用逻辑页接口，后面章节将介绍。         \n对于全局配置信息，一般统一存到名为g_cfg的全局变量中。\n查看H5应用JS文件index.js，有它们的声明，比如：\n```\n var g_data = {\n        userInfo : null, // {id, name, uname=phone}\n    };\n\n    var g_cfg = {\n        WAIT: 3000, // 3s\n    };\n```\n### 入口页\n> 在地址栏直接输入http://server/app/#hello，会发现它会跳转到首页，我们希望可直接进入前面我们制作的hello页面。\n\n打开示例H5应用客户端index.html对应的逻辑文件即index.js，会发现一开始有如下设置：\n```\n$.extend(MUI.options, {\n    appName: \"user\",\n    homePage: \"#home\",\n    pageFolder: \"page\",\n});\n\nMUI.validateEntry([\n    \"#home\",\n    \"#me\",\n    \"#order\"\n]);\n```\n第一句是设置一些框架的选项`MUI.options`，注意框架提供的功能多以MUI开头。 这里设置了H5应用内部名称为\"uesr\"（表示客户端，以后若有员工端等应用可区分开），首页名称是\"#home\"，逻辑页目录为\"page\"，也即首页实际文件为\"page/home.html\".              \n第二句用`MUI.validateEntry`指定允许的入口逻辑页，如果不是从这些逻辑页进入应用，则自动跳转到首页。 如果注释掉这句，则是允许从任意逻辑页进入应用。          \n要想直接输入URL就能进入hello页，只要将它暴露成入口页即可，把它加到入口页列表中来：           \n```\nMUI.validateEntry([\n    \"#home\",\n    \"#me\",\n    \"#order\",\n    \"#hello\"\n]);\n```\n注意我们现在制作的是H5应用，不是单纯用于静态展示的网页，很多状态信息（比如已登录的信息）存储在全局变量之中。 如果允许任意逻辑页进入应用，很可能因状态错误而显示出错。 每个入口页都是个对外的接口，可通过URL直接访问，如无必要，尽量不要开放。\n### 登录与退出\n登录和退出是多数应用都需要的功能。           \n我们在筋斗云示例应用中，可以看到登录退出相关的代码：(index.js文件)              \n```\nfunction handleLogin(data)\n{\n    MUI.handleLogin(data);\n    // g_data.userInfo已赋值\n}\n\nfunction logoutUser()\n{\n    // 这里可以删除当前用户相关的storage, cookie等。\n    MUI.logout();\n}\n```\n`handleLogin`将作为回调函数在所有登录成功时统一调用，退出登录则调用`logoutUser`函数。                 \n筋斗云提供这些函数：\n+ MUI.showLogin: 显示登录页。登录页由选项MUI.options.loginPage指定, 缺省为\"#login\".\n+ MUI.tryAutoLogin: 自动登录。下节介绍。\n+ MUI.handleLogin: 处理登录后页面跳转，同时给g_data.userInfo赋值，应用程序里一般通过判断 g_data.userInfo != null 判断是否已登录。\n+ MUI.logout: 退出登录。\n\n筋斗云示例应用提供了两个登录页面，分别是手机号/动态验证码登录(page/login.html)和用户名/密码登录(page/login1.html)。            \n以较简单的用户名/密码登录页面(login1)为例，简化后的代码如下：         \n```\n// HTML:(page/login1.html)\n\n<div mui-initfn=\"initPageLogin1\" mui-script=\"login1.js\">\n    ...\n    <form action=\"login\" class=\"bd\">\n        手机号 <input name=\"uname\" required placeholder=\"11位手机号\">\n        密码 <input type=\"password\" name=\"pwd\" required placeholder=\"4位以上密码\" minlength=4>\n        <button type=\"submit\" class=\"weui_btn weui_btn_primary\">登录</button>\n    </form>\n</div>\n\n\n//JS: (page/login1.js)\n\nfunction initPageLogin1() {\n    var jpage = $(this);\n    var jf = jpage.find(\"form\");\n    MUI.setFormSubmit(jf, handleLogin);\n}\n```\n这里使用了callSvr之外另一个常用的接口调用方式，即通过form提交调用后端接口的MUI.setFormSubmit，其用法是：\n+ 在HTML的form标签中，用action属性定义接口名，这里是\"login\"\n+ 接口参数通过form中带name属性的组件设置（这里有\"uname\", \"pwd\"参数），注意默认情况下，form中的参数是通过POST方式发送到后端。\n+ 在MUI.setFormSubmit中指定调用成功时的回调函数为\"handleLogin\"，它与callSvr的回调一样。\n\n关于MUI.setFormSubmit的更多选项如合法性验证、计算字段赋值等，可查询参考文档。         \n要退出登录，调用前面定义过的`logoutUser`函数即可：\n```\njpage.find(\"#btnLogout\").click(logoutUser);\n```\n退出会导致页面重刷新后进入入口页。要刷新H5应用，也可以直接调用：\n```\nreloadSite();\n```\n如果你的应用的退出接口不同，可自行在logoutUser函数中实现MUI.logout的功能：\n+ 向后端调用`logout`接口；\n+ 清除登录状态，如置空`g_data.userInfo`，删除本地存储中的token等信息；\n+ 再调用`reloadSite`函数刷新应用回到入口。\n### 自动跳转登录页和会话重用\n为了避免每次打开或刷新应用都要再登录，会话重用是实现短期免登录进入的常用方法。             \n> + 打开H5应用时（从任意入口页进入），如果刚刚登录过，则可以免登录直接打开入口页。 如果尚未登录过，则跳转至登录页面，待登录成功后跳转到入口页。\n  + 点退出登录回到首页，如果首页必须登录，则到登录页。\n  + 在操作过程中，一旦调用某个接口返回了未登录错误（实际中可能是客户端掉线、服务端重启等情况），应自动跳转到登录页。\n  \n要实现这样的需求，需要有以下接口设计：\n+ 登录接口login，登录成功返回用户信息，例如`login(uname, pwd) -> [0, {用户信息如id, name, ...}]`. 登录接口可以支持多种方式登录，如用户名/密码，手机号/动态验证码，以及下一节要讲述的自动登录token等。\n+ 其它所有要求用户登录后才能调用的接口，在未登录时返回统一的错误码: `fn1() -> [2, \"未登录\"]`（筋斗云中未登录错误码为2）\n退出接口`ogout() -> [0, \"OK\"]`.\n+ 有一个特别的检测是否需要登录的接口，如果已登录，返回与login接口相同的信息，例如接口`User.get() -> [0, {用户信息如id, name, ...}]`.\n\n这个特别的检测登录接口的主要用途是，通过会话重用（session），实现短时间内免登录。 会话重用一般由服务端设置cookie实现，由于浏览器会自动记住cookie，只要服务端会话未过期且用户未退出(logout)，就可以一直免登录进入。 即使不使用cookie而用URL参数（比如token）的，H5应用只要自行记住这个token到本地存储，下次打开时重用即可。              \n这样，前端进入H5应用时的逻辑就是：\n+ 调用检测用户登录的接口User.get，调用成功后将返回信息存储到全局变量g_data.userInfo中，并显示入口页；\n+ 如果调用失败，则显示登录页；\n+ 在登录成功后，跳转回一开始要进入的入口页。\n\n这些逻辑由框架函数MUI.tryAutoLogin和MUI.handleLogin提供，应注意把这段逻辑放置到muiInit事件中，以便在显示任意页面之前调用。 我们在筋斗云示例应用中，可以看到这样的代码：(index.js中)\n```\n$(document).on(\"muiInit\", myInit);\n\nfunction myInit() {\n    MUI.tryAutoLogin(handleLogin, \"User.get\");\n}\n\nfunction handleLogin(data) {\n    MUI.handleLogin(data);\n    // g_data.userInfo已赋值\n}\n```\n在MUI.tryAutoLogin中指定了检查会话重用的接口名为\"User.get\"，于是H5应用便有了会话重用的功能。 在模拟接口中，我们看到\"User.get\"接口模拟如下：\n```\n\"User.get\": [0, user],\n```\n这表明模拟的是已登录过的状态，因此打开应用时可直接免登录进入。 我们把它改成返回\"未登录\"错误：\n```\n\"User.get\": [2, \"no auth\"],\n```\n这时刷新H5应用，是不是进入了登录页？ 任意输入手机号和验证码可登录进来。进入页面\"我\"，点退出，看看是不是回到了登录页？               \n注意框架定义了“未认证错误”缺省错误码为2，如果要修改，可以用：\n```\nwindow.E_NOAUTH = 2;\n```\n再看会话中断时的行为，由于进入订单列表页会调用接口\"Ordr.query\"，我们在浏览器控制台上修改模拟接口让它返回未登录错：\n```\nMUI.mockData[\"Ordr.query\"] = [2, \"no auth\"];\n```\n进入订单列表页（如果之前已经打开过，可以下拉刷新下），看看是不是自动跳转到登录页了？              \n如果后端接口格式不是使用筋斗云调用规范，则需要按上节介绍自行适配接口，在其中添加自动跳转登录页的的逻辑，如：\n```\n MUI.callSvrExt['default'] = {\n        ...\n        dataFilter: function (data) {\n            ...\n            if (data.code == E_NOAUTH) {\n                MUI.showLogin();\n                return;\n            }\n        }\n    };\n```\n这样，框架可以确保未登录时（或已掉线、服务端重启等情况时）调用了后端需要登录的接口，可以自动跳转到登录页。               \n注意：调用`MUI.showLogin()`来显示登录页，而不要用`MUI.showPage(\"#login\")`来写死页面，而且`MUI.showLogin`可以在登录成功后跳回登录前想进入的页面。 类似的还有`MUI.showHome()`来显示首页。                \n上面示例中，用MUI.tryAutoLogin要求进入应用必须先登录。如果某些入口页可以免登录直接进入，则应这样调用：\n```\nfunction myInit()\n{\n    MUI.tryAutoLogin(handleLogin, \"User.get\", true); // 参数true表示允许未登录进入\n}\n```\n这时应特别小心，可用`g_data.userInfo == null`判断是否为未登录。 从未登录的入口页进入其它需要登录才能展示的页面，也常常在pagebeforeshow事件中添加判断：\n```\n    function onPageBeforeShow(ev, opt)\n    {\n        // 可能从一个未登录的页面跳转过来\n        if (g_data.userInfo == null) {\n            MUI.showLogin();\n            return;\n        }\n        // 设置页面内容\n    }\n```\n注意：在MUI.tryAutoLogin中调用接口时，都使用的是同步调用且忽略错误。\n### 自动登录\n自动登录是一个常见需求，基本上现在的手机应用，登录过一次后，下次都是免登录进入。            \n前面已经讲过通过会话重用，可以实现短时间内免登录。 通过对cookie设置较长的超时时间，且在后端长期保存会话数据，可以延长免登录的时间。           \n如果会话重用机制的实现并不可靠，比如过期、后端过载或重启等导致会话丢失，最好再设计专门的自动登录机制。 要实现自动登录，客户端必须将登录信息保存在本地。由于用户名、密码这些信息很敏感，不适合直接存储在客户端，一般通过token来实现自动登录。           \n需要后端login接口支持token，注意token参数要求通过POST参数传递的\n```\nlogin(uname, pwd) -> {_token, ...} // 普通登录，额外返回_token字段\nlogin()(token) -> {_token?, ...} // 可以不再返回token\n```\n与之前的`login`接口相比，普通的登录方式可返回一个`_token`字段，将这个字段保存在客户端本地，下次就可以通过`login(token)`方式自动登录。 服务器在实现时，一般在token中包含了用户信息，token过期时间等信息，当然进行了加密，所以比较安全。             \nH5应用要实现的逻辑如下：\n+ 进入应用时，先尝试会话重用，在会话重用失败后，再尝试自动登录\n+ 如果在操作过程中用户掉线（如客户端长时间未操作导致会话超时），也可通过自动登录，对用户透明地实现恢复登录后继续操作。\n\n\n框架已经在MUI.tryAutoLogin函数及默认的后端接口适配中完成以上逻辑，只要服务端接口符合上面约定，无需额外代码。              \n我们来模拟接口，让User.get接口返回未登录，让login接口支持返回_token，看看H5应用的行为：\n```\n    \"login\": function (param, postParam) {\n        if (postParam.token) {\n            console.log(\"用token自动登录\");\n            return [0, user];\n        }\n        return [0, $.extend({_token: \"abcdefg\"}, user)];\n    },\n    ...\n    \"User.get\": [2, \"no auth\"],\n```\n+ 刷新H5应用，因为未登录过，正确进入登录页，注意看浏览器控制台的日志，只调用了\"User.get\"接口，失败后转到登录页。\n+ 在成功登录一次后，再次刷新H5应用，发现可以直接进入应用了，看日志，先调用了\"User.get\"失败，然后尝试自动登录调用了\"login\"接口成功。\n+ 直到去页面“我”点击“退出”，刷新H5应用才不再自动登录。\n\n如果是自行适配接口，只需将前面示例中跳转登录页的操作换成尝试自动登录，示例如下：\n```\n    MUI.callSvrExt['default'] = {\n        ...\n        dataFilter: function (data) {\n            ...\n            if (data.code == E_NOAUTH) {\n                // 尝试自动登录，如果登录成功则重新发起当前请求；登录失败会自动转向登录页\n                if (MUI.tryAutoLogin()) {\n                    $.ajax(this);\n                }\n                // MUI.showLogin();\n                return;\n            }\n        }\n    };\n```\n注意：             \n上述对会话重用和自动登录的支持，核心是进入应用时及应用掉线时调用`MUI.tryAutoLogin`函数，而它是基于筋斗云后端的接口设计。 如果后端接口设计不同，可自行来写一个tryAutoLogin函数，在进入应用时及应用掉线时调用。                \n\n特别地，在tryAutoLogin中调用接口，一般使用同步调用(选项`{async: false}`)，且忽略出错(选项`{noex:1}`)：\n```\nvar opt = {async: false, noex: 1};\ncallSvr(\"User.get\", $.noop, null, opt);\n```\n## 常用组件\n筋斗云框架有一些使用mui前缀的CSS类，包括\n+ mui-container H5应用容器，一般在HTML的body对象上设置。\n+ mui-page 逻辑页，由框架自动设置\n+ mui-btn 按钮，如果再叠加primary类，则表示显示为缺省按钮。\n+ mui-dialog 对话框\n+ mui-menu 菜单\n+ mui-navbar 导航栏\n\n注意：筋斗云框架不是UI组件库，它只提供极为有限的一些组件，更丰富的UI组件请使用weui库或其它第三方组件库。            \n如果想调整框架中组件的显示样式，一般在app.css文件中设置。\n### 导航栏及图标\n> + 为H5应用底部导航栏上每项加上图标，且点中与未点中显示的图标不一样。\n  + 将小图标拼合成大图优化图标资源加载。\n  \n导航栏用CSS类\"mui-navbar\"标识。             \n![navbar](/img/navbar.png)          \n这是订单列表页中的例子，用导航栏和几个列表构建一个多栏页面， 当点击一项时，框架会自动为该项添加CSS类\"active\"，并只显示\"mui-linkto\"属性指向的组件。 被指向的组件仅限于当前逻辑页面：\n```\n    <div class=\"mui-navbar\">\n        <a mui-linkto=\"#lst1\">待服务</a>\n        <a mui-linkto=\"#lst2\">已完成</a>\n    </div>\n```\n整个H5应用有一个底部导航，用id=\"footer\"标识，放置在H5应用的主html文件中，如：\n```\n<div id=\"footer\">\n    <a href=\"#home\" mui-opt=\"ani:'none'\">\n        <span>首页</span>\n    </a>\n    <a href=\"#orders\" mui-opt=\"ani:'none'\">\n        <span>订单</span>\n    </a>\n    <a href=\"#me\" mui-opt=\"ani:'none'\">\n        <span>我</span>\n    </a>\n</div>\n```\n底部导航可自动显示或隐藏，如果当前页面是在导航项中的，导航栏就会自动显示。 上面`mui-opt`属性用来指定显示页面的参数（参考`MUI.showPage`的参数），\"ani:'none'\"表示不显示动画切页效果。                \n如果要给导航中的每项加图片，可以用CSS类icon:\n```\n<a href=\"#home\" mui-opt=\"ani:'none'\">\n    <i class=\"icon icon-home\"></i>\n    <span>首页</span>\n</a>\n```\n定义一个CSS类icon-home为它指定图标即可。 由于点击一项时会自动给该项加上active类，所以要想控制当前选中项或未选中项显示不同的图片，可以设置：\n```\n.icon-home {\n    background-image: url(icon/24/home.png);\n}\n.active .icon-home {\n    background-image: url(icon/24/home-active.png);\n}\n```\n这些图标一般建议放在server/icon目录下，并最终在发布时优化拼合成一张大图，称为制作“精灵图”（sprite）。            \n对图标的CSS设置一般写在icon.css中，然后使用jdcloud-sprite工具生成拼合后的大图以及icon.out.css在H5应用中使用。 查看index.html可知它实际引用的是优化后的icon.out.css文件，icon.css只是作为源文件，用于生成icon.out.css。            \n在开发时，建议先把图标的CSS定义分别在icon.css与icon.out.css中各写一份。 待准备做优化时，只需在一台可制作精灵图的电脑上一次性生成icon.out.css比较方便。         \n#### 图标优化方法（制作精灵图）\n先安装imagemagick软件，确认在命令行中可以运行convert等命令。 安装好php 5.4或更高版本，然后在项目的tool目录下，运行命令：\n```\nphp jdcloud-sprite.php ../server/icon.css -2x -group -sprite icon/icon@2x.png\n```\n查看server/icon.out.css文件是否已更新？在server/icon目录下是否生成了拼合后的大图？            \n命令中参数-2x表示源图标都是2x图标，即显示为24x24大小的图标，其实际尺寸是48x48。 在手机上一般使用2x图标，否则会看出有些模糊。 参数-group表示按图标宽度分组拼合图片，这样效率更高些，也可以去掉这个参数。            \n其实在文件tool/Makefile中已经包含了这个命令，确保开发环境有make工具， 就可以在git-bash中直接运行下面命令来优化图标：\n```\n./make-sprite.sh\n```\n### 简单对话框\n框架提供的app_alert用于显示简单的提示框，类似alert/confirm/prompt这些函数， 只不过app_alert是异步的（调用后立即返回，需要通过回调函数来执行之后的操作），且可以定制显示样式。              \n在浏览器控制台里输入以下示例试试:\n```\n// 信息框，3秒后自动关闭\napp_alert(\"操作成功\", function () {\n    MUI.showPage(\"#orderInfo\");\n}, {timeoutInterval: 3000});\n\n// 错误框，\"e\"表示\"error\"\napp_alert(\"操作失败\", \"e\");\n\n// 确认框(确定/取消)，\"q\"表示\"question\"\napp_alert(\"立即付款?\", \"q\", function () {\n    MUI.showPage(\"#pay\");\n});\n\n// 输入框, \"p\"表示\"prompt\"\napp_alert(\"输入要查询的名字:\", \"p\", function (text) {\n    callSvr(\"Book.query\", {cond: \"name like '%\" + text + \"%'});\n});\n```\n由于app_alert对话框的id固定为\"muiAlert\"，所以要定制显示样式，可对#muiAlert及其子对象直接设置CSS样式； 或者自已重新定义一个id为\"muiAlert\"的div，详见参考文档。\n### 对话框\n对话框与页面类似，一般放在逻辑页面中。使用CSS类\"mui-dialog\"标识对话框。app_alert显示的就是最简单的一类对话框，\n> 把“创建订单”页面(createOrder页)改写成一个对话框，放在首页中。在首页增加一个“创建订单对话框”按钮，点击后显示对话框。 效果如下：![dialog](/img/dialog.png)          \n  \n在首页home.html中增加一个id=\"dlgCreateOrder\"的div组件： \n```\n<div mui-initfn=\"initPageHome\" mui-script=\"home.js\">\n    ... hd, bd ...\n        <!--a href=\"#createOrder\">立即下单</a-->\n        <a href=\"#dlgCreateOrder\">立即下单</a>\n\n    <div class=\"mui-dialog\" id=\"dlgCreateOrder\" style=\"width:80%\">\n        <div class=\"hd\">\n            <h2>创建订单</h2>\n        </div>\n\n        <form class=\"bd\" action=\"Ordr.add\" style=\"padding:10px\">\n            选择套餐:\n            <select name=\"dscr\">\n                <option value=\"基础套餐\" data-amount=128>基础套餐 128元</option>\n                <option value=\"精英套餐\" data-amount=228>精英套餐 228元</option>\n            </select>\n            <button id=\"btnCreateOrder\" class=\"mui-btn primary\">创建订单</button>\n            <input type=\"text\" name=\"amount\" value=\"0\" style=\"display:none\">\n        </form>\n    </div>\n</div>\n```\n增加了一个链接指向它：\n```\n<a href=\"#dlgCreateOrder\">立即下单</a>\n```\n注意：对话框的id以\"dlg\"开头，框架自动打开对话框而不是页面，点上面链接相当于执行：\n```\nMUI.showDialog(\"#dlgCreateOrder\");\n```\n重新进入应用，点首页上的按钮，可以看到对话框已经显示出来了，点击对话框背景可关闭对话框。 按钮上使用了框架提供的CSS类\"mui-btn\"标识按钮，再加了\"primary\"类展现为缺省建议点击的按钮。            \n在home.js中用MUI.setupDialog为对话框增加逻辑： 当用户选择一个套餐并点击创建订单时，调用\"Ordr.add\"接口（定义在form.action属性上）。 调用成功后，显示订单列表页，并关闭对话框(MUI.closeDialog)。          \n```\nfunction initPageHome()\n{\n    ...\n\n    // 设置对话框初始化函数，一般名为 initDlgXXX\n    MUI.setupDialog(jpage.find(\"#dlgCreateOrder\"), initDlgCreateOrder);\n    \n    function initDlgCreateOrder()\n    {\n        var jdlg = this;\n        var jf = jdlg.find(\"form\");\n        MUI.setFormSubmit(jf, api_OrdrAdd, {validate: onValidate});\n        // 可以返回一个函数，每次显示时回调，类型\"pagebeforeshow\"回调。\n        // 也可以直接return，没有返回值。\n        return beforeShow;\n\n        function onValidate(jf)\n        {\n            // 提交前，自动填写form中隐藏的amount字段\n            var f = jf[0];\n            f.amount.value = $(f.dscr).find(\"option:selected\").attr(\"data-amount\");\n        }\n\n        function api_OrdrAdd(data)\n        {\n            MUI.closeDialog(jdlg);\n            app_alert(\"订单创建成功!\", \"i\", function () {\n                // 显示订单列表页\n                PageOrders.refresh = true;\n                MUI.showPage(\"#orders\");\n            });\n        }\n\n        function beforeShow() {\n            // 每次打开对话框时清除之前选择。\n            jf[0].reset();\n        }\n    }\n}\n```\n注意：\n+ MUI.setupDialog接受一个回调函数用于对话框初始化，它与页面初始化函数类似，我们定义一个函数名为initDlgCreateOrder。 这个函数如果有返回值，必须是一个函数用于显示时回调，相当于页面的\"pagebeforeshow\"回调函数。\n+ 用MUI.setFormSubmit来与后端交互.\n### 菜单\n菜单其实是一种特殊的对话框，显示一个菜单项列表。在框架中用CSS类\"mui-menu\"来标识它。            \n我们以订单详情页的右上角菜单为例讲解，效果是这样: ![menu](/img/menu.png)        \n```\n<div mui-initfn=\"initPageOrder\" mui-script=\"order.js\">\n    <div class=\"hd\">\n        <a href=\"javascript:hd_back();\" class=\"icon icon-back\"></a>\n        <a href=\"#dlgMenu\" class=\"icon icon-menu\"></a>\n        <h1>订单明细</h1>\n    </div>\n\n    ...\n    <ul id=\"dlgMenu\" class=\"mui-menu top\">\n        <li id=\"mnuRefreshOrder\"><i class=\"icon icon-refresh\"></i>刷新</li>\n        <li id=\"mnuCancelOrder\"><i class=\"icon icon-delete\"></i>取消订单</li>\n    </ul>\n</div>\n```\n这个是典型的手机页，标题栏左右各一个按钮，分别在\"hd\"中用两个a标签定义。 左上角显示后退按钮，执行操作hd_back()，这个函数是框架提供的，和history.back()类似，增强的功能是如果无法回退，则会显示首页，适合用在标题栏回退按钮上。 右上角显示菜单按钮，它的href属性设置为菜单div的id，注意要以\"dlg\"开头，框架就会自动以对话框方式打开它。            \n在页面最后定义了id=dlgMenu的菜单，指定了CSS类为mui-menu标识显示为菜单，另一个类top标识菜单在右上角，如果没有它则和对话框一样，默认显示在页面中央。           \n在页面js文件中，只要给每个菜单项绑定事件就可以了。\n## 分页列表框架\n本章介绍很常用的分页列表，详情可查阅官方参考文档中的\"initPageList\"函数介绍。\n### 显示单个列表\n当列表预期可能很长时，一般应支持分页。分页列表在手机上的典型展现方式是支持上拉加载和下拉刷新。\n> + 创建页面orders2，仿照示例应用中订单列表页(orders)。本节先不按订单状态分栏，只显示一个列表，支持上拉加载和下拉刷新。\n  + 点击订单列表中的一项，可以进入订单详情页。\n  \n我们先熟悉一下支持分页的列表查询接口。 在示例应用自带的模拟数据中，获取订单列表操作是支持分页的，在浏览器控制台上试试调用这些：\n```\ncallSvrSync(\"Ordr.query\");\n// 返回 {nextkey: 20, list: [ {id: 147, dscr: \"基础套餐\", status: \"CR\", ...}, ...(共20条)] }\n\n// 取下一页：上次返回的nextkey字段用于本次请求的_pagekey参数\ncallSvrSync(\"Ordr.query\", {_pagekey: 20}); \n// 返回 {nextkey: 40, list: [ ...(共20条)] }\n\n// 再取下一页\ncallSvrSync(\"Ordr.query\", {_pagekey: 40}); \n// 返回 {list: [ ...(共8条)] }，没有nextkey属性，说明已是最后一页。\n```\n默认每次返回20条数据，可以通过_pagesz参数控制每次返回的数据条目数，如\n```\ncallSvrSync(\"Ordr.query\", {_pagesz: 10});\n// 返回 {nextkey: 10, list: [ ...(共10条)] }\n```\n我们使用这个模拟接口，新建页面orders2：\n```\n<div mui-initfn=\"initPageOrders2\" mui-script=\"orders2.js\">\n    <div class=\"hd\">\n        <a href=\"javascript:hd_back();\" class=\"icon icon-back\"></a>\n        <h2>分页列表练习</h2>\n    </div>\n\n    <div class=\"bd\">\n        <div id=\"lst1\" data-ac=\"Ordr.query\"></div>\n    </div>\n</div>\n```\n在bd部分中，用一个div(id=lst1)作为列表，用属性\"data-ac\"指定了后端接口。         \n在页面初始化函数initPageOrders2中，调用initPageList函数初始化一个分页列表：\n```\n// JS: (page/orders2.js)\n\nfunction initPageOrders2()\n{\n    var jpage = this;\n    var listItf = initPageList(jpage, {\n        navRef: \"\",\n        listRef: \"#lst1\",\n        onAddItem: onAddItem,\n        onNoItem: onNoItem,\n    });\n\n    function onAddItem(jlst, itemData)\n    {\n        var ji = $(\"<div><b>\" + itemData.dscr + \"</b><p>订单号: \" + itemData.id + \"</p></div>\");\n        ji.appendTo(jlst);\n\n        // 把itemData存储到事件中，可在事件回调中通过ev.data取到数据\n        ji.on(\"click\", null, itemData, li_click);\n    }\n\n    function onNoItem(jlst)\n    {\n        var ji = $(\"<div>没有订单</div>\");\n        ji.appendTo(jlst);\n    }\n\n    function li_click(ev)\n    {\n        var id = ev.data.id;\n        // 显示订单详情页\n        PageOrder.id = id;\n        MUI.showPage(\"#order\");\n    }\n}\n```\n函数initPageList封装了接口交互的诸多细节，调用者只需要考虑如何展示列表项即可。 在参数中， listRef指定了列表组件的引用（只在当前逻辑页上查找，相当于jpage.find(listRef)），navRef指定导航栏，这里未用到，赋值空就行，后面章节再介绍。 回调函数onAddItem用于添加一个列表项，onNoItem在列表为空时调用，用于显示没有数据时的提示。             \n我们在首页(page/home.html)中增加一个链接到页面orders2:\n```\n<li class=\"weui_cell\" style=\"display:block\"><a href=\"#orders2\" class=\"weui_btn weui_btn_primary\">分页列表练习</a></li>\n```\n进入页面，可以看到向下拉动可以刷新列表（重新取第一页数据），快到列表底部时可自动加载下一页数据。            \n还有个常用的参数是onGetQueryParam，允许编程指定调用后端接口的参数，如：\n```\n    var listItf = initPageList(jpage, {\n          ...\n          // 设置查询参数，静态值一般通过在列表对象上设置属性 data-ac, data-cond以及data-queryParam等属性来指定更方便。\n          onGetQueryParam: function (jlst, queryParam) {\n              // 指定调用名，参数为固定为\"ac\"\n              queryParam.ac = \"Ordr.query\";\n              // 指定其它后端接口调用参数，比如页大小，查询条件，排序顺序等\n              queryParam._pagesz = 10;\n              queryParam.orderby = \"id desc\";\n          }\n    }\n```\n例子中，由于是固定值，也可以在列表上通过属性`data-ac=\"Ordr.query\" data-queryParam=\"orderby:'id desc', _pagesz:10\"`来指定。      \n默认页大小是20，由`MUI.options.PAGE_SZ`定义。              \n这里有一点要注意：列表的容器（在本例中，#lst1所在容器是.bd）需要有确定的高度，且一般设置样式\"overflow-y: auto\"，这样列表才能滚动。 由于页面的bd部分刚好会由框架自动设置高度，示例中没有特别去设置，如果是自定义的容器，需要设置好高度。 （这个限制可能在未来被去掉）           \n> 外界对逻辑页的操作使用逻辑页接口\n\n上面在显示订单详情页时，用的方法是：\n```\n    PageOrder.id = id;\n    MUI.showPage(\"#order\");\n```\n我们把PageOrder称为逻辑页order的接口(page interface)，在H5应用JS文件index.js中定义：\n```\nvar PageOrder = {\n    // PageOrder.id\n    id: null, \n};\n```\n在页面order的JS逻辑中，会根据这里的PageOrder.id显示相应订单。            \n尽管也可以通过全局变量等方式实现该功能（例如使用全局变量g_data.orderId），但不够清晰，不建议使用。            \n外界对逻辑页的操作，都应封装到逻辑页接口中。尤其不要在逻辑页外直接设置该页内的组件。 这样，要查看哪些页面引用了订单页，只要全局查找\"PageOrder\"即可。        \n这里要显示订单，也可以这样封装：\n```\nvar PageOrder = {\n    // PageOrder.show(id)\n    show: function (id) {\n        this.id_ = id;\n        MUI.showPage(\"#order\");\n    },\n\n    id_: null\n};\n```\n外面直接这样调用：PageOrder.show(id). 把属性\"PageOrder.id\"改名为\"PageOrder.id_\"，暗示这个属性由逻辑页内部用，外界不应使用。\n### 使用DOM模板创建组件\n> 上节练习中，函数onAddItem里，直接使用了拼接html的方式动态创建列表项，当组件复杂时可读性和可维护性很差。 我们将使用示例应用自带的weui样式库美化列表项，并用DOM模板的方法重写创建组件过程，让代码更清晰。\n\n一般情况下，不建议直接拼接html，而是通过模板及mvvm等技术来创建，这里给大家推荐开源的超轻量的jquery-dataview库，可在github中下载：\n```\nhttps://github.com/skyshore2001/jquery-dataview\n```\n或用这个git仓库：`http://dacatec.com/git/jquery-dataview.git`。 下载后只需要jquery-dataview.min.js一个文件即可，把它复制到server/lib目录下，在H5应用index.html中引用：\n```\n<script src=\"lib/jquery-dataview.min.js\"></script>\n```\n然后在页面中定义列表项的模板，我们使用示例应用自带的weui界面样式库：\n```\n(page/orders2.html)\n<div mui-initfn=\"initPageOrders2\" mui-script=\"orders2.js\">\n    ...\n\n    <div class=\"bd\">\n        <div id=\"lst1\" class=\"weui_cells weui_cells_access\" data-ac=\"Ordr.query\"></div>\n    </div>\n\n<script id=\"tplOrder\" type=\"text/template\">\n<div class=\"weui_cell\" dv-on=\"li_click\">\n    <div class=\"weui_cell_hd\">\n        <i class=\"icon icon-dscr\"></i>\n    </div>\n    <div class=\"weui_cell_bd weui_cell_primary\">\n        <p><b name=\"dscr\"></b></p>\n        <p>订单号: <span name=\"id\"></span></p>\n    </div>\n    <div class=\"weui_cell_ft\" name=\"status\"></div>\n</div>\n</script>\n\n</div>\n```\n上例中：\n+ 用script标签定义了id为tplOrder的html模板，要动态赋值的地方用`name=\"xxx\"`的方式标明，要处理事件的组件用dv-on属性指定。 注意：H5标签template在现阶段的兼容性还够好，谨慎使用。\n+ 使用weui样式库美化列表。在列表\"lst1\"上添加了`\"weui_cells\"`等CSS类, 在列表每一项上用了`\"weui_cell\"`类，详细用法可查阅weui文档。\n+ 列表每项前用<i class=\"icon icon-dscr\"></i>放置了一个名为icon-dscr的图标。\n\n在JS中(page/orders2.js)，我们重写onAddItem函数，使用这个模板clone出每一项：\n```\nfunction initPageOrders2()\n{\n    var jpage = this;\n    ...\n\n    // 列表项模板\n    var jtplOrder_ = $(jpage.find(\"#tplOrder\").html());\n\n    function onAddItem(jlst, itemData)\n    {\n        var ji = jtplOrder_.clone().dataview(itemData, {\n            events: {\n                li_click: li_click\n            }\n        }).appendTo(jlst);\n    }\n\n    ...\n}\n```\njquery-dataview在做事件绑定时，会自动将数据绑定到事件上。 例中，在`li_click(ev)`回调函数中，可以通过ev.data拿到绑定的数据，因而刚好`li_click`函数不用修改，取订单id可以用`var id = ev.data.id`。\n\n### 刷新分页列表\n> 控制刷新分页列表。\n\n列表一旦显示后，每次回到该逻辑页时，不会重新请求数据或刷新，除非用户自己下拉刷新列表，这样保证了应用有良好的性能。           \n但有时需要在程序内控制列表刷新，考虑这样的需求：当一个订单在其它页面被修改了（例如取消订单），再回到订单列表页时希望能刷新列表。            \n`initPageList`可以很简单地实现这一需求。 先为逻辑页定义一个接口:\n```\nvar PageOrders2 = {\n    refresh: null,\n}\n```\n在初始化列表时，添加一个pageItf选项（page interface缩写）：\n```\n    var listItf = initPageList(jpage, {\n        pageItf: PageOrders2,\n        ...\n    });\n```\n在取消订单操作时，只要赋值：\n```\nPageOrders2.refresh = true;\n```\n这样下次进入orders2页时，就会刷新列表，并把PageOrders2.refresh置回false。可以在浏览器控制台上操作试试看。            \n如果想要立刻刷新列表，也可以用`listItf.refresh()`操作。 `listItf`是`initPageList`返回值，是一个操作列表的接口，类似的操作还有显示下一页`listItf.loadMore()`，详见参考文档。\n### 列表用于选择\n> (choose-from-list)在首页上加一个“选择订单”按钮，点击后进入订单列表页，选择一项后返回首页，并显示订单内容。\n\n还是用\"orders2\"页，我们在index.js中定义页面接口如下（主要是choose方法和onChoose回调）：\n```\nvar PageOrders2 = {\n    ...\n    // PageOrders2.choose(onChoose)\n    // onChoose(order={id,dscr,...})\n    choose: function (onChoose) {\n        this.chooseOpt_ = {\n            onChoose: onChoose\n        }\n        MUI.showPage('orders2');\n    },\n\n    chooseOpt_: null // {onChoose}\n};\n```\n在页面orders2中：\n+ 点击一个列表项时，调用onChoose回调\n+ 页面隐藏时，清空chooseOpt_参数。\n\n示例：\n```\nfunction initPageOrders2()\n{\n    ...\n    var pageItf_ = PageOrders2;\n    jpage.on(\"pagehide\", onPageHide);\n\n    function li_click(ev)\n    {\n        var order = ev.data;\n        if (pageItf_.chooseOpt_) {\n            pageItf_.chooseOpt_.onChoose(order);\n            return false;\n        }\n\n        // 正常点击操作 \n        ...\n    }\n\n    function onPageHide()\n    {\n        pageItf_.chooseOpt_ = null;\n    }\n}\n```\n我们回到首页，在浏览器控制台中模拟调用：\n```\nPageOrders2.choose(function (order) {\n    // 处理order\n    app_alert('选择了订单: id=' + order.id);\n    history.back(); // 由于进入列表选择时会离开当前页面，这时应返回\n});\n```\n进入页面orders，选择一项后返回并继续操作。\n\n### 显示多个列表\n本节学习导航栏加多个列表这一常见模式。\n> 在示例应用时，订单列表页便按照订单状态，分成“待服务”和“已完成”两栏，分别对应一个列表。 我们将练习页面orders2也改造成支持分栏的样式。\n\n首先，我们熟悉下后端列表查询的接口。 筋斗云后端接口支持业务查询协议，可以使用cond参数才指定查询条件：\n+ 取待服务订单：callSvr(\"Ordr.query\", {cond: \"status='CR'\"});\n+ 取已完成/已取消订单：callSvr(\"Ordr.query\", {cond: \"status='RE' or status='CA'\"});\n\n我们现在使用的是在mockdata.js中定义的模拟接口，已经模拟了上面两个调用。           \n我们在页面中增加导航栏及列表：(page/orders2.html)          \n```\n<div mui-initfn=\"initPageOrders2\" mui-script=\"orders2.js\">\n    <div class=\"hd\">\n        ...\n        <div class=\"mui-navbar\">\n            <a href=\"javascript:;\" mui-linkto=\"#lst1\">待服务</a>\n            <a href=\"javascript:;\" mui-linkto=\"#lst2\">已完成</a>\n        </div>\n    </div>\n\n    <div class=\"bd\">\n        <div id=\"lst1\" class=\"weui_cells weui_cells_access\"></div>\n        <div id=\"lst2\" class=\"weui_cells weui_cells_access\"></div>\n    </div>\n\n    ...\n</div>\n```\n框架提供导航栏组件，以CSS类\"mui-navbar\"标识，通过属性\"mui-linkto\"分别指向本页中的两个列表，点击时可自动切换。 我们把导航栏放在hd中，让整个bd作为列表容器。这是一种很方便的做法，如果把导航栏放在bd中，还要一个div作为列表容器，且要计算它的合适高度。               \n初始化列表做些修改，指定新的navRef, listRef，用onGetQueryParam来指定查询条件：(page/orders2.js)\n```\n    var listItf = initPageList(jpage, {\n        ...\n        navRef: \".mui-navbar\",\n        listRef: \"#lst1,#lst2\",\n        onGetQueryParam: function (jlst, queryParam) {\n            queryParam.ac = \"Ordr.query\";\n            var id = jlst.attr(\"id\");\n            if (id == \"lst1\") {\n                queryParam.cond = \"status='CR')\";\n            }\n            else if (id == \"lst2\") {\n                queryParam.cond = \"status='RE' OR status='CA'\";\n            }\n        },\n\n        ...\n    });\n```\n6.6 分页列表的接口适配\n上面学习了易用强大的分页列表，支持分页的后端接口使用的是筋斗云的规范，返回列表像这样：\n```\n{\n    list: [\n        {field1: \"val1\", field2: \"val2\"},\n        {field1: \"val3\", field2: \"val4\"},\n    ],\n    nextkey: 2\n}\n```\n上面用list字段返回列表。另外还支持一种等价的压缩表格式，使用h(表头)/d(数据)数组，如下：\n```\n{\n    h: [ \"field1\",\"field2\" ],\n    d: [ [\"val1\",\"val2\"], [\"val3\",\"val4\"], ... ]\n    nextkey: 2\n}\n```\n返回列表如果没到最后一页，需要返回nextkey字段，用于请求下一页时的\"_pagekey\"参数。 请求通过\"_pagesz\"参数指定页大小，通过\"_pagekey\"参数取下一页。          \n如果你遇到的后端分页列表接口设计不符合上述规则，则需要通过接口适配来使用分页列表框架，即让返回数据符合上面的规范，一般是设置好list/nextkey字段，或者是h/d/nextkey字段。             \n> 后端分页机制为(jquery-easyui datagrid分页机制):\n+ 请求时通过参数page, rows分别表示页码，页大小，如 page=1&rows=20\n+ 返回数据通过字段total表示总数, rows表示列表数据，如 { total: 83, rows: [ {...}, ... ] }\n\n要求通过接口适配，不变动前面列表页面orders2的代码，让该页面仍能正常工作。            \n我们先来制作一下模拟数据，在mockdata.js中，修改\"Ordr.query\"部分：\n```\n    \"Ordr.query\": function (param, postParam) {\n        var arr = orders;\n        var ret = {total: arr.length, rows: []};\n        var pagesz = param.rows || 20;\n        var pagekey = param.page || 1;\n\n        for (var n=0, i=(pagekey-1)*pagesz; n<pagesz && i<arr.length; ++n, ++i) {\n            ret.rows.push(arr[arr.length-i-1]);\n        }\n        return [0, ret];\n    },\n```\n这样就可以模拟了，试试\n```\ncallSvrSync(\"Ordr.query\");\ncallSvrSync(\"Ordr.query\", {page: 2, rows: 10});\n```\n注意：上面返回数据的基本格式仍然是筋斗云框架的格式，即成功返回[0, 数据]，失败返回[错误码，错误信息]。 如果不是这样的格式，请阅读前面介绍过的“接口适配”章节去配置`MUI.callSvrExt`。            \n在app.js中设置为initPageList设置缺省选项：\n```\n$.extend(initPageList.options, {\n    pageszName: \"rows\",\n    pagekeyName: \"page\",\n    // 设置 data.list, data.nextkey (如果是最后一页则不要设置); 注意pagekey可以为空\n    onGetData: function (data, pagesz, pagekey) {\n        data.list = data.rows;\n        if (pagekey == null)\n            pagekey = 1;\n        if (data.total >  pagesz * pagekey)\n            data.nextkey = pagekey + 1;\n    }\n});\n```\n在onGetData回调中，设置data.list及data.nextkey属性（如果是最后一页则不要设置）。         \n注意：app.js与index.js的区别是，前者适用于项目下的所有应用，而index.js只是index.html这个H5应用的主程序。           \n配置后，项目下所有列表都将应用这个适配规则。如果只是个别列表适配需要调整，可以在调用initPageList时指定这些选项，如：\n```\n    var listItf = initPageList(jpage, {\n        ...\n\n        pageszName: 'rows',\n        pagekeyName: 'page',\n        onGetData: ...\n    });\n```\n考虑这样一种情况，后端就返回一个列表如`[ {...}, {...} ]`，不支持分页，那么是否可以使用分页列表？\n\n答案是仍然可用，initPageList支持一个纯数组，它将被当成列表的最后一页处理，无法上拉加载，但仍支持下拉刷新。\n\n## 创建多个H5应用\n> 在示例项目中，只有一个应用即index.html。 实际在一个H5项目中，常常需要多个应用，例如给用户使用的手机客户端应用、给员工使用的员工端应用等。 我们将在同一项目下再创建一个新的“员工端”应用。\n\n筋斗云要求每个H5应用有个内部名称(appName)， 在示例应用中，appName定义为user，表示用户端，假如定义员工端应用的内部名称为emp，我们创建这些文件：\n+ 新建H5主文件，emp.html, emp.js, emp.css\n+ 新建逻辑页目录，名为emp，在这个目录下创建逻辑页。\n+ 项目下所有H5应用共用的逻辑放在文件app.js中，共用的样式放在文件app.css中。 第三方库文件，一般放在lib目录下，每个应用均可引用。\n\n在emp.js中正确配置：\n```\n$.extend(MUI.options, {\n    appName: \"emp\",\n    homePage: \"#home\",\n    pageFolder: \"emp\",\n});\n```\n应用内部名称appName将会在callSvr发起的调用中，自动通过URL参数_app传给后端。 后端可以根据应用不同，建议使用不同的cookie名来区分，这样即使浏览器同时打开这两个应用，也不会有冲突。          \n关于代码放到哪个文件中，原则如下：\n+ 逻辑页专用的内容，放到逻辑页的html/js文件中。\n+ H5应用专用的内容，或多个逻辑页共享的内容，放到H5主文件html/js/css中。\n+ 项目下所有H5应用共享的内容，放到app.js/app.css中。\n## H5应用优化\n目前我们运行的H5应用直接是在项目下的server目录中，这称为开发版本，没有进行优化。 在生产环境下，一般会将开发版本进行优化，生成发布版本后上线，可提升H5应用性能。\n\n### 用webcc编译H5应用\n> 使用webcc工具，编译项目下的server目录，生成发布版本目录\"output_web\"。\n\n作为一个WEB应用，发布时最常见的需求是JS/CSS/HTML文件合并和压缩(minify)。 H5应用自身用的index.js/index.css文件可以内嵌到主文件index.html中，常用的逻辑页面（包括html/css文件）也可以内嵌到index.html中来。            \n筋斗云通过名为webcc的工具进行应用优化，也称为编译。 本章详细介绍可参考官方文档\"webcc\"。          \n我们先看怎么运行它。 webcc是php工具，必须先安装php环境(版本5.4或更高)； 在Windows系统上，建议安装git，它自带的git-bash环境模拟了简单的linux/unix环境，如果已安装mingw或cygwin也可以。         \nwebcc一般要求源代码使用git管理，通过git命令查询源文件列表及版本差异，实现增量编译、自动化发布等功能。 如果你已用git管理项目，则在项目目录中打开git-bash(或其它linux shell环境)，运行命令：\n```\n$ php tool/webcc.php server\n```\n上面server是待编译的开发版本目录，里面有所有开发的内容。运行后生成发布版本目录\"output_web\"。         \n如果项目未使用git管理，则要求指定源文件列表，在运行webcc之前必须先设置环境变量WEBCC_LS_CMD，例如：\n```\n$ export WEBCC_LS_CMD='find . -type f'\n```\n注意：上面命令会将目录下所有文件都编译并发布，应确保清除目录下无用的文件。 如果你使用的是svn管理项目，则需要把\".svn\"目录过滤掉以免生成到发布目录：\n```\n$ export WEBCC_LS_CMD='find . -type f | grep -v .svn'\n```\n或者使用svn命令精确列表哪些文件要发布：\n```\n$ export WEBCC_LS_CMD='svn ls -R'\n```\n至于编译生成的发布目录和源目录有哪些不同，下面将讲述。\n### webcc配置解读\n在示例应用的server目录下，有一个webcc.conf.php的配置文件，里面定义了优化策略，一般无需修改：\n```\n$RULES = [\n    '*.html' => 'HASH',\n    ...\n];\n```\n第一条规则是server目录下(不包括子目录)的所有html文件，即所有H5应用，执行HASH规则，对于html文件，会处理其中的webcc标记。       \n在示例应用中，我们在index.html中查找webcc，可以看到有这些标记：\n```\n<!-- WEBCC_BEGIN MERGE=lib 外部库 {{{-->\n    <link rel=\"stylesheet\" href=\"lib/weui.min.css\" />\n\n    <script src=\"lib/jquery-1.11.1.min.js\"></script>\n    <script src=\"lib/jquery.touchSwipe.min.js\"></script>\n<!-- WEBCC_END }}}-->\n\n<!-- WEBCC_BEGIN MERGE=lib-app 内部库 {{{-->\n    mui.css, app.css等css文件...\n    app_fw.js, app.js等js文件...\n<!-- WEBCC_END }}}-->\n\n<!-- WEBCC_BEGIN MERGE 应用专用 {{{-->\n    <link rel=\"stylesheet\" href=\"index.css\" />\n    <script src=\"index.js\"></script>\n<!-- WEBCC_END }}}-->\n\n...\n\n<!-- WEBCC_BEGIN {{{ embeded pages -->\n<!-- WEBCC_USE_THIS\nWEBCC_CMD mergePage -minify yes page/home.html page/login.html page/login1.html page/me.html\nWEBCC_END }}} -->\n```\n先看外部库、内部库，它们分别被放置在标记WEBCC_BEGIN MERGE=xxx / WEBCC_END之中。 这意味着其中的css, js文件会被合并到一起，压缩后生成一个文件xxx.js或xxx.css。           \n外部库表示第三方库，如果应用中用到了其它库，且文件大小并不大，可以放置到这一块中，以便多个库合并成一个文件优化下载。 内部库是筋斗云框架自身及你的项目内所有H5应用的通用部分(app.js, app.css)。           \n应用专用就是当前H5应用用到的js/css。使用的webcc标记与前面比，没有指定\"MERGE=xxx\"，只指定了\"MERGE\"，这表示合并其中内容到当前文件，即把index.css/index.js内嵌到index.html文件中。               \n最后一块是内嵌逻辑页，用\"WEBCC_USE_THIS\"标记和\"mergePage\"命令指定了一些逻辑页，这些页面一般是最常用的页面，这个html及其引用的js文件将被直接内嵌到index.html中。 框架在加载逻辑页时，如果发现已内置于主html中则优先使用内置页，否则就触发缺页中断从而远程加载。          \n## H5应用发布上线\n上一章介绍了H5应用的编译优化，生成了发布目录，配置好WEB服务器后，将发布目录上传到服务器即可完成发布。           \n为了H5应用程序升级后客户能及时更新，建议将H5应用的主html文件及逻辑页面文件夹下html/js文件的缓存策略设置为\"no-cache\"。 （在开发环境下，一般建议所有文件都设置为不缓存。）               \n建议使用Apache或nginx作为筋斗云H5应用线上生产环境的WEB服务器。 项目下已有专为这两种服务器的配置，即为Apache用的.htaccess文件，以及为nginx准备的.ht.nginx文件。\n> 配置Web服务器，访问H5应用，在Chrome浏览器的网络监控中查看请求，要求：\n+ H5应用的index.html文件，以及逻辑页如page/home.html, page/home.js文件，HTTP响应中设置了\"no-cache\"策略。 当再次刷新应用时，HTTP响应为\"304 Not Modified\"（确保Chrome网络监控页面下的\"Disable cache\"选项未勾选）。\n+ 其它js/css文件，HTTP响应中未设置\"no-cache\"策略，再次刷新H5应用时，不访问服务器。\n示例如下：![img7](/img/7.png)            \n如果使用Apache服务器，应配置项目下允许.htaccess文件，比如\n```\n<Directory /var/www/html/myproject>\n    AllowOverride All\n</Directory>\n```\n如果使用nginx，可以把项目下的.ht.nginx文件包含到nginx的主配置文件中。注意一些路径可能需要修改。           \n如果使用其它WEB服务器（如IIS），应手工作相应的配置。               \n此外，对所有html/css/js这些文本文档都应设置gzip压缩，注意图片文件一般不设置gzip压缩，因为图片有自己的压缩算法。           \n### 自动化差量发布\n> 编写和运行项目下的build_web.sh文件做为上线工具，运行它实现自动编译和将新近修改的内容上线。\n\n如果希望每次修改一些内容后，可以快速将差异部分上线，不必每次都上传所有文件，可以使用筋斗云自带的上线工具。           \n筋斗云框架支持WEB应用自动化发布，并可差量更新。 目前差量更新依赖git工具，要求源目录及编译生成的发布目录均使用git管理，每次只上传与线上版本差异的部分。 本章详细介绍可参考官方文档\"webcc\"中的\"jdcloud-build\"模块。           \n自动化发布支持ftp/git两种方式，前者只需服务器提供ftp上传帐号，后者需要服务器提供git-push权限。 本章介绍git方式，安全可靠且版本可任意回溯。ftp方式只需修改若干参数，可参考官方文档。          \n我们的示例项目名为myproject，已使用git管理。 先创建发布版本库(又称online版本库), 使用git管理，定名称为myproject-online，习惯上与目录myproject放在同一父目录下:\n```\n$ git init myproject-online\n```\n在线上服务器上设置ftp帐号或git帐号。使用git发布时，一般配置好用ssh证书登录，避免每次上线时输入密码。            \n将tool/git_init.sh上传服务器，用它创建线上目录：\n```\n$ git_init.sh myproject\n```\n编写项目根目录下的build_web.sh脚本：\n```\n#!/bin/sh\n\nexport OUT_DIR=../myproject-online\nexport GIT_PATH=www@myserver:myproject\ntool/jdcloud-build.sh\n```\n在Windows平台上，打开git shell运行build_web.sh即可上线。\n## 制作原生APP\nH5应用可以打包生成苹果或安卓原生应用，一般也称为混合应用程序(Hybird App)。            \n并不是所有的H5应用都适合打包成原生应用，如果把一个普通的手机网站包装成原生应用，即使它制作的外观像是原生应用， 但切换页面时的网页刷新和加载导致速度慢、费流量、体验差，并不适合制作APP，而且像苹果应用市场等也容易拒绝此类APP上架。 为了接近原生应用的用户体验，可打包的H5应用应是支持多逻辑页的单网页应用，也就是变脸式应用。           \n我们制作的原生应用最大的特点是它与H5应用是分离的，从而在应用市场上架后仍可随时轻松升级应用。 这种应用我们也把它称为原生壳。\n### 编译原生壳\n>+ 一次开发，多平台运行：将我们制作的H5应用打包生成原生APP安装到安卓及苹果手机上。\n+ 一次上线，轻松升级：更新H5应用并上线，查看已安装的原生应用是否已自动及时更新。\n\n准备工作：\n+ 云编译环境，安装Intel XDK，注册好用户帐号。\n+ 安卓和苹果的应用证书。安卓证书可以自行制作，苹果证书须注册苹果开发者帐号后生成。\n\n使用Intel XDK的最大挑战是网络。在国内访问可能有问题，或者很慢，或者连不上。必要时可以使用VPN代理等手段连接。      \n打开Intel XDK，创建一个新的\"Html5+Cordova\"项目：![xdk1](/img/xdk1.png)      \n点左上角的\"PROJECTS\"，进入项目设置，里面有插件管理(Plugin Management)，编译设置(Build Settings)和图标及启动画面设置(Launch Icons and Splash Screens)。 插件是各种手机原生语言开发的库，比如相机、支付宝及微信支付等，本节不做重点介绍。图标和启动画面比较简单，准备好图片选上就行。           \n编译设置中要注意需要每个平台分别设置，请特别注意：\n+ 在访问权限中，在\"Navigation\"栏中，设置为\"*\"，表示允许访问外网地址。\n+ 安卓及苹果的开发证书在软件右上角用户帐号中先添加好，才能在编译设置中选择。\n+ 安卓有个选项“Optimize with crosswalk”，用于把浏览器与应用一起打包以便在各种安卓手机上有良好的兼容性，缺点是生成的包要大20M。 练习时可不选，实际项目中建议选上。\n![xdk2](/img/xdk2.png)          \nxdk项目目录下的文件intelxdk.config.additions.xml中，设置上H5应用的地址，加上这句：\n```\n<content src=\"http://myserver/myproject/index.html?cordova=1\" />\n```\n注意，H5应用后面加上参数cordova={壳版本}，框架将识别这个参数，进入原生应用模式，自动加载插件接口。         \n还有找到debuggable选项把它设置为true，以便可以之后在电脑上连接设备调试H5应用。\n```\n<preference name=\"debuggable\" value=\"true\" />\n```\n配置好后，进入编译页，开始编译。\n![xdk3](/img/xdk3.png)          \n编译好后，先不要立即安装到手机上，还有重要的一步，将插件接口更新到H5应用中去，这样在H5应用中可调用原生功能。\n#### 更新原生插件接口到H5应用。\n用winzip等工具解压生成的apk名或ipa包（可以先改名为.zip文件再点开），在安卓apk包的assets/www目录中（或苹果ipa包的Payload/{应用名}.app/www目录下），找到以下三个文件或目录：\n```\ncordova.js\ncordova_plugins.js\nplugins/ （整个目录）\n```\n把安卓APP中的这些文件复制到H5应用的目录server/cordova下面，把苹果APP中的这些文件复制到server/cordova-ios下面。这样就完成了H5应用中设置原生插件接口。         \n注意：当H5项目中有多个应用时，plugins目录直接取并集即可，而cordova_plugins.js文件需要小心合并。       \n这时将apk包或ipa包安装到手机上，打开应用程序，看看是否能正常运行。            \n我们在H5应用中书写代码时，可以检查全局变量g_cordova。 例如，想要仅在原生应用中显示某个页面，在微信或浏览器中访问时提示错误：\n```\nif (! g_cordova) {\n    app_alert(\"本功能请在APP中点击进入\");\n    return;\n}\nMUI.showPage(\"#xxx\");\n```\n### 壳版本管理\n请牢牢记住，由于原生壳与H5应用的分离，用户安装的用户壳可能是旧版本的，而线上的H5应用永远是最新版本。        \n假如在原生壳中新增加了插件，应增加壳版本号。 操作上也可将壳版本等同于原生应用的版本代码（安卓叫App Version Code，苹果叫CF Bundle Version），那么要注意插件变动时，一定也要变动原生应用版本。         \n>需求：新版本壳中增加了某插件，希望安装旧版本壳的用户在用到此插件时，提示更新APP。\n\n假定当前壳版本为1，注意在配置文件intelxdk.config.additions.xml中修改壳版本，假如为2：\n```\n<content src=\"http://myserver/myproject/index.html?cordova=2\" />\n```\n然后编译好新版本安装包。 由于插件变化了，仍然需要更新原生插件接口到H5应用，将新的插件合并到H5应用的cordova或cordova-ios目录中。         \n注意cordova_plugins.js文件定义H5应用可用哪些插件，需要手工合并和设置版本。         \n假设我们在用户端上新增加了一个微信分享插件，cordova_plugins.js文件如下：\n```\nmodule.exports = [\n    ...,\n    // 以下为新增部分：\n    {\n        \"file\": \"plugins/com.xxx.weixin/www/weixin.js\",\n        \"id\": \"com.xxx.weixin\",\n        \"clobbers\": [\n            \"navigator.weixin\"\n        ]\n    }\n]\n```\n前面提到过，每个筋斗云H5应用都有一个惟一的应用名(MUI.options.appName)，例如用户端设置应用名为\"user\"。 我们为新的插件加上filter属性：\n```\nmodule.exports = [\n    ...,\n    // 以下为新增部分：\n    {\n        \"file\": \"plugins/com.xxx.weixin/www/weixin.js\",\n        \"id\": \"com.xxx.weixin\",\n        \"clobbers\": [\n            \"navigator.weixin\"\n        ]\n        // 指定客户端应用(名为user)从壳版本2开始支持该插件\n        \"filter\": [ [\"user\", 2] ]\n    },\n]\n// 新加上这一句处理版本\nfilterCordovaModule(module);\n```\nfilter属性的格式为`[ [app1, minVer?=1, maxVer?=9999], ...]`, 仅当应用名匹配且版本在minVer/maxVer之间才使用。 如果未指定filter，则表示加载该插件。 假定还有个员工端应用名为emp，在壳版本300时增加了该插件，则可以设置：\n```\n\"filter\": [ [\"user\", 2], [\"emp\", 300] ]\n```\n这样，不同的H5应用版本加载的插件是不一样的，要在浏览器中测试查看每个壳版本分别加载了哪些插件，可以直接访问带cordova参数的H5应用地址如：\n```\nhttp://myserver/myproject/index.html?cordova=1\n```\n然后在Web控制台中执行：\n```\ncordova.require('cordova/plugin_list')\n```\n最后，我们在H5应用中检查插件是否可用，以及提示用户升级：\n```\nif (navigator.weixin == null) {\n    app_alert(\"您的APP版本太旧，请升级后使用本功能。\");\n    return;\n}\n// 调用新插件的功能。\n```\n### 调试原生应用\n由于原生应用调试复杂，只要不是原生插件本身的问题，尽量先在电脑浏览器上调试。          \n对于只能在手机上运行的功能，注意加些调试代码，让它也在网页中也能模拟运行。 比如微信分享后可以领取红包，为了在普通浏览器中可调试，可以这样做：\n```\nif (! g_cordova) {\n    // 模拟代码\n    if (g_args.mock) {\n        if (confirm(\"模拟分享?\"))\n            onShareOk();\n    }\n    app_alert(\"必须在App中运行\");\n    return;\n}\n微信分享(成功后回调 onShareOk);\n\nfunction onShareOk()\n{\n    // 领取红包\n}\n```\ng_args.mock表示在URL参数中有\"?mock=1\"时走模拟分支。这样绝大多数问题都不用在手机上调试。             \n如果在电脑浏览器上运行正常，但在手机应用中运行出错，需要尝试在设备上调试H5应用。 对于安卓应用，可在Chrome中调试手机应用。注意在编译壳的选项中，我们曾设置过：\n```\n<preference name=\"debuggable\" value=\"true\" />\n```\n在安卓手机上，打开USB调试选项（请自行搜索如果进入开发者模式及打开USB调试），连上电脑， 然后在Chrome地址栏中输入chrome://inspect即可进入设备调试。             \n注意：由于google的站点国内很难访问，如果调试页面打不开，须通过代理访问。         \n调试苹果应用，得用苹果电脑上的Safari浏览器。 由于苹果要求只有使用开发证书的App才能调试，所以要么用开发证书重新编译个用于调试的App壳，要么更简单地直接在Safari浏览器中调试。 先开启iPhone/iPad上的Safari的远程调试功能：“设置 > Safari > 高级” > Web检查器选中。 将iphone插入电脑，弹出是否允许调试，选择“是”。 打开Safari，在“开发”菜单下可见有一行是 该手机的名字，里面显示有可调试的页面。                \n如果是首次在mac上使用safari时，应先激活“开发工具”菜单项： (menu)preference(偏好设置)->高级->在菜单栏中显示“开发”菜单。           \n如果以上调试环境很难配置成功，那么只能通过在代码中加alert来一点点逼近问题。            \n如果确定问题出在原生插件上，或者需要修改原生插件，那么只有搭建cordova工程，调试原生java或object-c代码。","slug":"筋斗云文档","published":1,"updated":"2019-09-29T11:22:34.501Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck3jm8h06004qz0bty9y6jrkb","content":"<p>当需要制作一款手机应用，希望它既可以在手机浏览器或微信公众号之类的轻应用平台使用，也可以在安卓、苹果等手机上安装使用，由于各平台技术栈完全不同，光前端就需要至少三套人马在各平台各自为战，开发和维护成本极高。现在你多了一种用H5技术制作全平台手机应用的选择，不仅极大的降低开发成本，而且由于H5技术源于已经用了至少20多年的网页技术，门槛也远低于才兴起几年的手机平台开发技术。架构师在选型时会纠结，又想优雅的做全平台应用，又担心用网页技术制作的手机应用的体验到底行不行。<br>川剧中的变脸艺术，如行云流水般切换脸谱，令人惊叹。 如果把手机应用中的每个页面看成一张脸谱，在操作时我们也希望像变脸表演一样有着轻松流畅的体验。 而用传统的网页技术制作的仿手机应用和原生手机应用的体验尚有较大差距，主要原因是每个页面都是一张网页，在操作时有大量网页加载和刷新，不流畅且浪费大量流量。<br>对于网页刷新问题的解决方案是使用Ajax技术制作交互式无刷新网页。早在1998年前后，微软的Outlook Web Access成为第一个应用了Ajax技术的成功的商业应用程序，2005年以后，随着谷歌地图、Gmail等交互式网页应用的流行，Ajax技术也开始流行起来，也诞生了“单网页应用(SPA)”这个概念。<br>在手机应用领域，由于早期手机性能弱，做应用程序基本只能使用原生开发语言，学习门槛很高。随着手机性能的增强和H5技术的流行，已经可以把“单网页应用”技术应用到手机上，让整个应用就是一个网页，而原本一张张相互链接的网页变成了H5应用中的一个个可流畅切换的逻辑页面，消除了网页加载，操作体验接近手机原生应用。<br><strong>这种支持多逻辑页面的具有流畅的操作体验的H5单网页应用，我们将它称为变脸式应用。</strong><br>对手机单网页应用有以下常见误解：</p>\n<ul>\n<li>只能做做小工具，不适合做大型商业应用。这是因为没有使用好的模块化开发模型，去找个支持大型开发的好框架先。</li>\n<li>耗内存，耗流量，性能低下。某些单页应用简单地将所有逻辑页一次性全部加载，没有逻辑页优化，也没有做好缓存、图片等优化，而招此骂名。解决方法是找个支持动态加载逻辑页、支持H5应用优化的开发框架。</li>\n<li>没法做搜索引擎优化(SEO)。以前做网页的同时要兼顾做SEO，现在其实可以将做网页应用和做SEO分离了，对SEO可以单独设计，从而做的更好。这就像用户访问一个站点，如果是手机访问就跳转手机版，如果是电脑访问就跳转电脑版，而如果是爬虫机器人访问，也可以备好一套狗粮，不再和人吃的一样。   </li>\n</ul>\n<p><strong>筋斗云前端框架是一个变脸式单网页应用的开源开发框架，</strong> 它以页面路由和接口调用为核心，提供多逻辑页支持和远程接口调用封装，同时对制作安卓、苹果原生应用也提供良好的支持，因而也是一个全平台H5应用框架。</p>\n<h2 id=\"创建项目\"><a href=\"#创建项目\" class=\"headerlink\" title=\"创建项目\"></a>创建项目</h2><blockquote>\n<p>用筋斗云前端框架创建一个H5应用项目myproject，在浏览器运行起来。     </p>\n</blockquote>\n<p>先从github上下载开源的筋斗云前端框架及示例应用：<a href=\"https://github.com/skyshore2001/jdcloud-m\" target=\"_blank\" rel=\"noopener\">https://github.com/skyshore2001/jdcloud-m</a><br>建议安装git工具直接下载，便于以后更新，例如直接创建H5应用项目叫myproject<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git clone https://github.com/skyshore2001/jdcloud-m.git myproject</span><br></pre></td></tr></table></figure></p>\n<p>如果github访问困难，也可以用这个git仓库<br> <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">http://dacatec.com/git/jdcloud-m.git</span><br></pre></td></tr></table></figure></p>\n<p>下载后，myproject是我们的项目目录。</p>\n<ul>\n<li>子目录server是H5应用目录，开发主要集中在这里。<ul>\n<li>在server目录下，lib目录下的js/css文件都属于框架使用的文件，不宜随意修改，其中app_fw.js是筋斗云前端框架的核心部分。</li>\n<li>page目录是默认的逻辑页目录，比如首页、登录页、订单列表等逻辑页的html和js文件都放在这里。</li>\n<li>cordova目录是用于制作原生手机app时使用的。筋斗云框架支持全平台应用，即一套H5代码，可同时制作安卓应用、苹果应用、微信微站等。</li>\n</ul>\n</li>\n<li>tool是用于优化和发布的工具，之后在站点上线优化时介绍。  </li>\n</ul>\n<p>设置WEB服务器（如Apache/nginx/IIS等），添加虚拟目录myproject, 指向myproject/server目录，这时，就可以直接运行起前端应用<br> <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">http://localhost:8080/</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"页面\"><a href=\"#页面\" class=\"headerlink\" title=\"页面\"></a>页面</h2><h3 id=\"GetStart-HelloWorld\"><a href=\"#GetStart-HelloWorld\" class=\"headerlink\" title=\"GetStart - HelloWorld\"></a>GetStart - HelloWorld</h3><blockquote>\n<p>上一节我们创建了新的H5应用项目，本节我们制作一个仅显示”hello world”的逻辑页面，在首页中添加一个链接，点击可进入这个页面。</p>\n</blockquote>\n<p>制作一个逻辑页面，存到文件page/hello.html:<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;div&gt;</span><br><span class=\"line\">    &lt;div class=&quot;hd&quot;&gt;</span><br><span class=\"line\">        &lt;h2&gt;HelloWorld&lt;/h2&gt;</span><br><span class=\"line\">    &lt;/div&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">    &lt;div class=&quot;bd&quot;&gt;</span><br><span class=\"line\">        &lt;p&gt;Hello, world&lt;/p&gt;</span><br><span class=\"line\">    &lt;/div&gt;</span><br><span class=\"line\">&lt;/div&gt;</span><br></pre></td></tr></table></figure></p>\n<p>这是个html片段，其中<code>class=&quot;hd&quot;</code>与<code>class=&quot;bd&quot;</code>分别代表逻辑页的标题栏和主体部分。一般应保持这样的结构，即使不需要标题栏，也建议保留hd这个div，将其设置隐藏即可(<code>style=&quot;display:none&quot;</code>)。<br>在首页page/home.html中添加一个链接过来：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">...</span><br><span class=\"line\">&lt;div class=&quot;bd&quot;&gt;</span><br><span class=\"line\">    ...</span><br><span class=\"line\">    &lt;li&gt;&lt;a href=&quot;#hello&quot;&gt;Hello&lt;/a&gt;&lt;/li&gt;</span><br><span class=\"line\">&lt;/div&gt;</span><br></pre></td></tr></table></figure></p>\n<p>在浏览器时刷新H5应用进入首页，点击Hello链接，就可以看到新逻辑页Hello显示出来了。 筋斗云可以动态加载逻辑页，并为它指定id为”hello”(即页面文件名)。 除了使用链接，还可以通过JS代码<code>MUI.showPage(&quot;#hello&quot;)</code>来显示该页。<br>点击浏览器的返回按钮，可以回到首页。在返回时，没有网页刷新的过程，这也是变脸式应用的典型特点。<br>我们也可以在逻辑页的hd部分里为应用添加返回按钮，如：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;div class=&quot;hd&quot;&gt;</span><br><span class=\"line\">    &lt;!-- 加上返回按钮 --&gt;</span><br><span class=\"line\">    &lt;a href=&quot;javascript:history.back();&quot; class=&quot;icon icon-back&quot;&gt;&lt;/a&gt;</span><br><span class=\"line\">    &lt;h2&gt;Hello&lt;/h2&gt;</span><br><span class=\"line\">&lt;/div&gt;</span><br></pre></td></tr></table></figure></p>\n<p>改好后，不必刷新页面重新从首页进入，直接在浏览器控制台中输入<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">MUI.reloadPage();</span><br></pre></td></tr></table></figure></p>\n<p>就可以直接查看到更新后的逻辑页了。<br><strong>筋斗云支持逻辑页热更新技术，</strong> 可以实时热更新当前页面，并保留当前的应用状态。这一技巧在开发调试逻辑页时非常好用，尤其对于复杂的H5应用，不必从首页操作进来。类似的技巧还有卸载一个逻辑页，以便再进入时可重新初始化<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">MUI.unloadPage(); // 卸载当前页</span><br><span class=\"line\">MUI.unloadPage(&quot;hello&quot;); // 卸载指定页</span><br></pre></td></tr></table></figure></p>\n<p>如果你嫌首页上加的链接太难看，可以使用框架默认集成的weui样式库来润色它，如<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;div class=&quot;weui_cells&quot; style=&quot;margin-top:100px&quot;&gt;</span><br><span class=\"line\">    ...</span><br><span class=\"line\">    &lt;!-- 显示为一个button --&gt;</span><br><span class=\"line\">    &lt;li class=&quot;weui_cell&quot; style=&quot;display:block&quot;&gt;&lt;a href=&quot;#hello&quot; class=&quot;weui_btn weui_btn_default&quot;&gt;Hello&lt;/a&gt;&lt;/li&gt;</span><br><span class=\"line\">&lt;/div&gt;</span><br></pre></td></tr></table></figure></p>\n<p>同样地，在修改好后，直接在控制台输入<code>MUI.reloadPage()</code>看效果。<br>筋斗云的核心是页面路由(showPage)和接口调用(callSvr)。它自身不提供移动UI样式库，而是通过集成的weui样式库来提供移动UI样式。 weui是一套同微信原生视觉体验一致的基础样式库，由微信官方团队开发，关于weui的使用可以参考 <strong><a href=\"https://weui.io/\" target=\"_blank\" rel=\"noopener\">https://weui.io/</a></strong> 或自行搜索。 当然你也可以把它换成你自己喜欢的UI库。</p>\n<h3 id=\"为逻辑页添加样式和逻辑\"><a href=\"#为逻辑页添加样式和逻辑\" class=\"headerlink\" title=\"为逻辑页添加样式和逻辑\"></a>为逻辑页添加样式和逻辑</h3><blockquote>\n<p>上一节中，我们添加了一个逻辑页”hello”。现在我们通过CSS修改显示字体为红色，并在进入和退出页面时弹出提示框。</p>\n</blockquote>\n<p>为逻辑页设置样式，如果这个样式只在这个逻辑页使用，一般就在页面div中内嵌style标签。 页面的逻辑写在与页面同名的js文件中，在页面div上使用mui-script属性指定js文件，并通过mui-initfn标签指定页面初始化函数。<br>修改hello.html页面文件如下<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">    &lt;div mui-initfn=&quot;initPageHello&quot; mui-script=&quot;hello.js&quot;&gt;</span><br><span class=\"line\">    &lt;style&gt;</span><br><span class=\"line\">        p &#123;</span><br><span class=\"line\">            color: red;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &lt;/style&gt;</span><br><span class=\"line\">    &lt;div class=&quot;hd&quot;&gt;</span><br><span class=\"line\">        &lt;a href=&quot;javascript:history.back();&quot; class=&quot;icon icon-back&quot;&gt;&lt;/a&gt;</span><br><span class=\"line\">        &lt;h2&gt;HelloWorld&lt;/h2&gt;</span><br><span class=\"line\">    &lt;/div&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">    &lt;div class=&quot;bd&quot;&gt;</span><br><span class=\"line\">        &lt;p&gt;Hello, world&lt;/p&gt;</span><br><span class=\"line\">    &lt;/div&gt;</span><br><span class=\"line\">&lt;/div&gt;</span><br></pre></td></tr></table></figure></p>\n<p>在上例中，在内嵌的style标签中为”p”标签指定样式，让它显示红色。 你可能有疑问，这样写会不会影响其它页面中的p标签的样式呢？<br><strong>筋斗云支持自动限定逻辑页样式作用域。</strong> 即框架保证这个样式只会用于当前逻辑页，不会污染到其它页面。<br>上面逻辑页中通过mui-script=”hello.js”指定了js文件，创建page/hello.js文件如下：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">function initPageHello() &#123;</span><br><span class=\"line\">    var jpage = $(this);</span><br><span class=\"line\">    jpage.on(&quot;pagebeforeshow&quot;, onBeforeShow);</span><br><span class=\"line\">    jpage.on(&quot;pagehide&quot;, onHide);</span><br><span class=\"line\"></span><br><span class=\"line\">    function onBeforeShow() &#123;</span><br><span class=\"line\">        app_alert(&quot;before show&quot;);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    function onHide() &#123;</span><br><span class=\"line\">        app_alert(&quot;hide&quot;);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>上面演示了逻辑页进入和退出时常用的事件处理，很容易理解。 一般从后端取数据的操作都习惯放在pagebeforeshow事件中处理。另外还有pageshow, pagecreate等事件。<br>app_alert是框架提供的异步弹出框函数，可用于提示消息(类似alert)、确认消息(类似confirm)、问询消息(类似prompt)等，弹出框界面也可自由定制，后面还将介绍。                         </p>\n<h3 id=\"页面栈\"><a href=\"#页面栈\" class=\"headerlink\" title=\"页面栈\"></a>页面栈</h3><p>框架支持逻辑页面的前进和后退，甚至可以用手势左右划动页面来后退或前进。                 </p>\n<blockquote>\n<p>本节讲述一个常见需求：提交订单后进入下一页面，这时点返回按钮（不管是点浏览器的返回按钮还是页面左上方的返回按钮）， 应该跳过提交页面，返回再前一个页面。</p>\n</blockquote>\n<p>在示例应用首页上，点击”立即下单”，进入”创建订单”页，点击”创建订单”按钮，进入”订单列表”页。 这时点击返回按钮，我们看到，它跳过了”创建订单”页，直接返回了再前面一页即首页。<br>我们查看”创建订单”页的代码(createOrder.js)，其实只需在切换页面前，调用<code>MUI.popPageStack()</code><br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">function api_OrdrAdd(data) &#123;</span><br><span class=\"line\">    app_alert(&quot;订单创建成功!&quot;, &quot;i&quot;, function () &#123;</span><br><span class=\"line\">        // 到新页后，点返回不允许回到当前页</span><br><span class=\"line\">        MUI.popPageStack();</span><br><span class=\"line\">        PageOrders.refresh = true;</span><br><span class=\"line\">        MUI.showPage(&quot;#orders&quot;);</span><br><span class=\"line\">    &#125;, g_cfg.WAIT);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>如果想在回退时跳过两个页面（比如提交过程有两步分了两个页面），调用<code>MUI.popPageStack(2)</code>即可。</p>\n<h2 id=\"调用后端接口\"><a href=\"#调用后端接口\" class=\"headerlink\" title=\"调用后端接口\"></a>调用后端接口</h2><p>调用后端接口是筋斗云框架提供的两大核心功能之一。                </p>\n<blockquote>\n<p>继续hello页面的例子，要求每次进入页面时，不是固定的显示”hello, world”，而是需要根据服务端的返回内容来显示hello的内容，比如”hello, skys”或是”hello, jdcloud”。</p>\n</blockquote>\n<p>我们先定义一个叫做”hello”的交互接口，由前端发起一个HTTP GET请求，比如<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">http://myserver/myproject/api.php?ac=hello</span><br></pre></td></tr></table></figure></p>\n<p>如果调用成功，后端返回JSON格式的数据<code>[0, &quot;jdcloud&quot;]</code>, 其中0是返回码，表示调用成功。如果调用失败，返回<code>[99, &quot;对不起，服务器爆炸了&quot;]</code>。<br>有了清晰的接口定义，前后端就可以并行开发了。 在前端，我们把页面稍作修改以动态显示hello的内容：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;div class=&quot;bd&quot;&gt;</span><br><span class=\"line\">    &lt;p&gt;Hello, &lt;span id=&quot;what&quot;&gt;&lt;/span&gt;&lt;/p&gt;</span><br><span class=\"line\">&lt;/div&gt;</span><br></pre></td></tr></table></figure></p>\n<p>再写一段逻辑，每当进入页面时调用hello接口并显示内容，我们选择onBeforeShow回调来做这件事：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">function initPageHello() &#123;</span><br><span class=\"line\">    var jpage = $(this);</span><br><span class=\"line\">    jpage.on(&quot;pagebeforeshow&quot;, onBeforeShow);</span><br><span class=\"line\"></span><br><span class=\"line\">    function onBeforeShow() &#123;</span><br><span class=\"line\">        callSvr(&quot;hello&quot;, api_hello);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    function api_hello(data) &#123;</span><br><span class=\"line\">        jpage.find(&quot;#what&quot;).html(data);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p><code>callSvr</code>是框架提供的一个重要函数，它封装了ajax调用的细节，完整的函数原型为：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">callSvr(ac, param?, fn?, postParam?, options?);</span><br></pre></td></tr></table></figure></p>\n<p>其中，ac是调用接口名，fn是回调函数，param和postParam分别是URL参数和POST参数。除ac外，其它参数均可省略。例如<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">callSvr(&quot;hello&quot;);</span><br><span class=\"line\">callSvr(&quot;hello&quot;, &#123;id: 1&#125;); // URL: hello?id=1</span><br><span class=\"line\">callSvr(&quot;hello&quot;, &#123;id: 1&#125;, api_hello); // function api_hello(data) &#123;&#125;</span><br><span class=\"line\">callSvr(&quot;hello&quot;, api_hello, &#123;name: &quot;hello&quot;&#125;);</span><br></pre></td></tr></table></figure></p>\n<p>回调函数api_hello仅在成功时被调用，参数data是实际数据，即<code>[0, data]</code>中的data部分，不包括返回码0。 当调用失败时，框架会统一处理，显示错误信息，无须操心。</p>\n<h3 id=\"使用模拟接口\"><a href=\"#使用模拟接口\" class=\"headerlink\" title=\"使用模拟接口\"></a>使用模拟接口</h3><p><strong>筋斗云支持模拟接口返回数据。</strong> 在mockdata.js中，可以设置接口的模拟返回数据<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">MUI.mockData = &#123;</span><br><span class=\"line\">    ...</span><br><span class=\"line\">    &quot;hello&quot;: [0, &quot;jdcloud&quot;]</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"调用真实接口\"><a href=\"#调用真实接口\" class=\"headerlink\" title=\"调用真实接口\"></a>调用真实接口</h3><p>在后端接口开发好后，我们可去掉对这个接口的模拟，直接远程调用服务端接口。这需要配置好后端接口的地址。<br>我们用php写一个简单的符合筋斗云接口规范的后端实现，通过名为”ac”的URL参数表示接口名，在server目录中创建文件api.php如下<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;?php</span><br><span class=\"line\"></span><br><span class=\"line\">@$ac = $_GET[&apos;ac&apos;];</span><br><span class=\"line\">if ($ac == &apos;hello&apos;) &#123;</span><br><span class=\"line\">    $what = &quot;jdcloud @ &quot; . time();</span><br><span class=\"line\">    echo json_encode([0, $what]);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">else &#123;</span><br><span class=\"line\">    echo json_encode([1, &quot;bad ac&quot;]);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>配置好php的调用环境后，访问<code>http://localhost/myproject/api.php?ac=hello</code>，输出类似这样：<code>[0,&quot;jdcloud @ 1483526151&quot;]</code><br>回到前端，我们在app.js中设置服务端接口地址：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$.extend(MUI.options, &#123;</span><br><span class=\"line\">    serverUrl: &quot;api.php&quot;,</span><br><span class=\"line\">    serverUrlAc: &quot;ac&quot;</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure></p>\n<p>以上讲述的是符合筋斗云接口规范的接口调用设置，如果不符合该规范，请阅读下一节“接口适配”。</p>\n<h3 id=\"接口适配\"><a href=\"#接口适配\" class=\"headerlink\" title=\"接口适配\"></a>接口适配</h3><p>在上例中，假定了后端接口兼容筋斗云接口规范，例如返回格式为<code>[0, jsonData]</code>及<code>[非0, 错误信息]</code>。 如果接口协议不兼容，则需要做接口适配。<br>接口适配的目标是通过callSvr函数更加简练地调用后台接口，同时达到：</p>\n<ul>\n<li>调用出错统一处理，例如未认证错跳转到登录页，其它错误弹出错误提示框等。</li>\n<li>写代码时只需要处理调用成功后返回的数据，不用每次调用都处理各种错误。</li>\n</ul>\n<blockquote>\n<p>适配以下接口协议规范，约定接口返回格式为：{code, msg, data}， 例如上例中的hello接口，调用成功时返回：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">    &quot;code&quot;:&quot;0&quot;,</span><br><span class=\"line\">    &quot;msg&quot;:&quot;success&quot;,</span><br><span class=\"line\">    &quot;data&quot;:&quot;jdcloud&quot;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n</blockquote>\n<p>失败返回：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">    &quot;code&quot;:&quot;99&quot;,</span><br><span class=\"line\">    &quot;msg&quot;:&quot;对不起，服务器爆炸了&quot;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>这时需要对callSvr进行适配，可以在app.js中，设置 <code>MUI.callSvrExt</code>如下:<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">MUI.callSvrExt[&apos;default&apos;] = &#123;</span><br><span class=\"line\">       makeUrl: function(ac) &#123;</span><br><span class=\"line\">           return &apos;http://hostname/lcapi/&apos; + ac;</span><br><span class=\"line\">       &#125;,</span><br><span class=\"line\">       dataFilter: function (data) &#123;</span><br><span class=\"line\">           if ($.isPlainObject(data) &amp;&amp; data.code !== undefined) &#123;</span><br><span class=\"line\">               if (data.code == 0)</span><br><span class=\"line\">                   return data.data;</span><br><span class=\"line\">               if (this.noex)</span><br><span class=\"line\">                   return false;</span><br><span class=\"line\">               app_alert(&quot;操作失败：&quot; + data.msg, &quot;e&quot;);</span><br><span class=\"line\">           &#125;</span><br><span class=\"line\">           else &#123;</span><br><span class=\"line\">               app_alert(&quot;服务器通讯协议异常!&quot;, &quot;e&quot;); // 格式不对</span><br><span class=\"line\">           &#125;</span><br><span class=\"line\">       &#125;</span><br><span class=\"line\">   &#125;;</span><br></pre></td></tr></table></figure></p>\n<p>我们在mockdata.js中设置好模拟数据用于测试：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">MUI.mockData = &#123;</span><br><span class=\"line\">    &quot;User.get&quot;: &#123;code: 0, msg: &quot;success&quot;, data: user&#125;,</span><br><span class=\"line\">    &quot;hello&quot;: &#123;code: 0, msg: &quot;success&quot;, data:&quot;myworld&quot;&#125;</span><br><span class=\"line\">    ...</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>上例中，User.get接口在显示首页是会调用，所以和”hello”接口一并模拟下。<br>测试接口调用：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">callSvr(&quot;hello&quot;, console.log);</span><br></pre></td></tr></table></figure></p>\n<p>或<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">callSvrSync(&quot;hello&quot;);</span><br></pre></td></tr></table></figure></p>\n<p>callSvrSync是callSvr的同步调用版本，它直接等到调用完成才返回，且返回值就是调用成功返回的数据。<br>在接口适配完成后，应用层代码不用去做任何修改。 进入页面看看，是不是和上节的运行结果是一样的。</p>\n<h2 id=\"进入与退出应用\"><a href=\"#进入与退出应用\" class=\"headerlink\" title=\"进入与退出应用\"></a>进入与退出应用</h2><p>进入应用后，框架会自动设置一些全局变量，如g_args, g_data等。<br>问：如何在H5应用中获取URL参数？<br>全局变量g_args保存了H5应用的URL参数。 例如URL为<code>http://myserver/myproject/index.html?orderId=10&amp;dscr=上门洗车</code>，则该对象有以下值：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">g_args.orderId=10; // 注意：如果参数是个数值，则自动转为数值类型，不再是字符串。</span><br><span class=\"line\">g_args.dscr=&quot;上门洗车&quot;; // 对字符串会自动进行URL解码。</span><br></pre></td></tr></table></figure></p>\n<p>问：全局数据存放到哪里有规范吗？<br>全局数据建议都放在变量g_data中，而不是到处创建全局变量，这样查看这个变量就可以了解H5应用状态。 框架也会设置一些全局数据进去（例如userInfo保存登录后的返回数据等）。另外，如果是逻辑页之间传递信息，不要用全局变量，应使用逻辑页接口，后面章节将介绍。<br>对于全局配置信息，一般统一存到名为g_cfg的全局变量中。<br>查看H5应用JS文件index.js，有它们的声明，比如：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">var g_data = &#123;</span><br><span class=\"line\">       userInfo : null, // &#123;id, name, uname=phone&#125;</span><br><span class=\"line\">   &#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">   var g_cfg = &#123;</span><br><span class=\"line\">       WAIT: 3000, // 3s</span><br><span class=\"line\">   &#125;;</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"入口页\"><a href=\"#入口页\" class=\"headerlink\" title=\"入口页\"></a>入口页</h3><blockquote>\n<p>在地址栏直接输入<a href=\"http://server/app/#hello，会发现它会跳转到首页，我们希望可直接进入前面我们制作的hello页面。\" target=\"_blank\" rel=\"noopener\">http://server/app/#hello，会发现它会跳转到首页，我们希望可直接进入前面我们制作的hello页面。</a></p>\n</blockquote>\n<p>打开示例H5应用客户端index.html对应的逻辑文件即index.js，会发现一开始有如下设置：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$.extend(MUI.options, &#123;</span><br><span class=\"line\">    appName: &quot;user&quot;,</span><br><span class=\"line\">    homePage: &quot;#home&quot;,</span><br><span class=\"line\">    pageFolder: &quot;page&quot;,</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">MUI.validateEntry([</span><br><span class=\"line\">    &quot;#home&quot;,</span><br><span class=\"line\">    &quot;#me&quot;,</span><br><span class=\"line\">    &quot;#order&quot;</span><br><span class=\"line\">]);</span><br></pre></td></tr></table></figure></p>\n<p>第一句是设置一些框架的选项<code>MUI.options</code>，注意框架提供的功能多以MUI开头。 这里设置了H5应用内部名称为”uesr”（表示客户端，以后若有员工端等应用可区分开），首页名称是”#home”，逻辑页目录为”page”，也即首页实际文件为”page/home.html”.<br>第二句用<code>MUI.validateEntry</code>指定允许的入口逻辑页，如果不是从这些逻辑页进入应用，则自动跳转到首页。 如果注释掉这句，则是允许从任意逻辑页进入应用。<br>要想直接输入URL就能进入hello页，只要将它暴露成入口页即可，把它加到入口页列表中来：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">MUI.validateEntry([</span><br><span class=\"line\">    &quot;#home&quot;,</span><br><span class=\"line\">    &quot;#me&quot;,</span><br><span class=\"line\">    &quot;#order&quot;,</span><br><span class=\"line\">    &quot;#hello&quot;</span><br><span class=\"line\">]);</span><br></pre></td></tr></table></figure></p>\n<p>注意我们现在制作的是H5应用，不是单纯用于静态展示的网页，很多状态信息（比如已登录的信息）存储在全局变量之中。 如果允许任意逻辑页进入应用，很可能因状态错误而显示出错。 每个入口页都是个对外的接口，可通过URL直接访问，如无必要，尽量不要开放。</p>\n<h3 id=\"登录与退出\"><a href=\"#登录与退出\" class=\"headerlink\" title=\"登录与退出\"></a>登录与退出</h3><p>登录和退出是多数应用都需要的功能。<br>我们在筋斗云示例应用中，可以看到登录退出相关的代码：(index.js文件)<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">function handleLogin(data)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    MUI.handleLogin(data);</span><br><span class=\"line\">    // g_data.userInfo已赋值</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">function logoutUser()</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    // 这里可以删除当前用户相关的storage, cookie等。</span><br><span class=\"line\">    MUI.logout();</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p><code>handleLogin</code>将作为回调函数在所有登录成功时统一调用，退出登录则调用<code>logoutUser</code>函数。<br>筋斗云提供这些函数：</p>\n<ul>\n<li>MUI.showLogin: 显示登录页。登录页由选项MUI.options.loginPage指定, 缺省为”#login”.</li>\n<li>MUI.tryAutoLogin: 自动登录。下节介绍。</li>\n<li>MUI.handleLogin: 处理登录后页面跳转，同时给g_data.userInfo赋值，应用程序里一般通过判断 g_data.userInfo != null 判断是否已登录。</li>\n<li>MUI.logout: 退出登录。</li>\n</ul>\n<p>筋斗云示例应用提供了两个登录页面，分别是手机号/动态验证码登录(page/login.html)和用户名/密码登录(page/login1.html)。<br>以较简单的用户名/密码登录页面(login1)为例，简化后的代码如下：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">// HTML:(page/login1.html)</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;div mui-initfn=&quot;initPageLogin1&quot; mui-script=&quot;login1.js&quot;&gt;</span><br><span class=\"line\">    ...</span><br><span class=\"line\">    &lt;form action=&quot;login&quot; class=&quot;bd&quot;&gt;</span><br><span class=\"line\">        手机号 &lt;input name=&quot;uname&quot; required placeholder=&quot;11位手机号&quot;&gt;</span><br><span class=\"line\">        密码 &lt;input type=&quot;password&quot; name=&quot;pwd&quot; required placeholder=&quot;4位以上密码&quot; minlength=4&gt;</span><br><span class=\"line\">        &lt;button type=&quot;submit&quot; class=&quot;weui_btn weui_btn_primary&quot;&gt;登录&lt;/button&gt;</span><br><span class=\"line\">    &lt;/form&gt;</span><br><span class=\"line\">&lt;/div&gt;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">//JS: (page/login1.js)</span><br><span class=\"line\"></span><br><span class=\"line\">function initPageLogin1() &#123;</span><br><span class=\"line\">    var jpage = $(this);</span><br><span class=\"line\">    var jf = jpage.find(&quot;form&quot;);</span><br><span class=\"line\">    MUI.setFormSubmit(jf, handleLogin);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>这里使用了callSvr之外另一个常用的接口调用方式，即通过form提交调用后端接口的MUI.setFormSubmit，其用法是：</p>\n<ul>\n<li>在HTML的form标签中，用action属性定义接口名，这里是”login”</li>\n<li>接口参数通过form中带name属性的组件设置（这里有”uname”, “pwd”参数），注意默认情况下，form中的参数是通过POST方式发送到后端。</li>\n<li>在MUI.setFormSubmit中指定调用成功时的回调函数为”handleLogin”，它与callSvr的回调一样。</li>\n</ul>\n<p>关于MUI.setFormSubmit的更多选项如合法性验证、计算字段赋值等，可查询参考文档。<br>要退出登录，调用前面定义过的<code>logoutUser</code>函数即可：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">jpage.find(&quot;#btnLogout&quot;).click(logoutUser);</span><br></pre></td></tr></table></figure></p>\n<p>退出会导致页面重刷新后进入入口页。要刷新H5应用，也可以直接调用：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">reloadSite();</span><br></pre></td></tr></table></figure></p>\n<p>如果你的应用的退出接口不同，可自行在logoutUser函数中实现MUI.logout的功能：</p>\n<ul>\n<li>向后端调用<code>logout</code>接口；</li>\n<li>清除登录状态，如置空<code>g_data.userInfo</code>，删除本地存储中的token等信息；</li>\n<li>再调用<code>reloadSite</code>函数刷新应用回到入口。<h3 id=\"自动跳转登录页和会话重用\"><a href=\"#自动跳转登录页和会话重用\" class=\"headerlink\" title=\"自动跳转登录页和会话重用\"></a>自动跳转登录页和会话重用</h3>为了避免每次打开或刷新应用都要再登录，会话重用是实现短期免登录进入的常用方法。             <blockquote>\n<ul>\n<li>打开H5应用时（从任意入口页进入），如果刚刚登录过，则可以免登录直接打开入口页。 如果尚未登录过，则跳转至登录页面，待登录成功后跳转到入口页。</li>\n<li>点退出登录回到首页，如果首页必须登录，则到登录页。</li>\n<li>在操作过程中，一旦调用某个接口返回了未登录错误（实际中可能是客户端掉线、服务端重启等情况），应自动跳转到登录页。</li>\n</ul>\n</blockquote>\n</li>\n</ul>\n<p>要实现这样的需求，需要有以下接口设计：</p>\n<ul>\n<li>登录接口login，登录成功返回用户信息，例如<code>login(uname, pwd) -&gt; [0, {用户信息如id, name, ...}]</code>. 登录接口可以支持多种方式登录，如用户名/密码，手机号/动态验证码，以及下一节要讲述的自动登录token等。</li>\n<li>其它所有要求用户登录后才能调用的接口，在未登录时返回统一的错误码: <code>fn1() -&gt; [2, &quot;未登录&quot;]</code>（筋斗云中未登录错误码为2）<br>退出接口<code>ogout() -&gt; [0, &quot;OK&quot;]</code>.</li>\n<li>有一个特别的检测是否需要登录的接口，如果已登录，返回与login接口相同的信息，例如接口<code>User.get() -&gt; [0, {用户信息如id, name, ...}]</code>.</li>\n</ul>\n<p>这个特别的检测登录接口的主要用途是，通过会话重用（session），实现短时间内免登录。 会话重用一般由服务端设置cookie实现，由于浏览器会自动记住cookie，只要服务端会话未过期且用户未退出(logout)，就可以一直免登录进入。 即使不使用cookie而用URL参数（比如token）的，H5应用只要自行记住这个token到本地存储，下次打开时重用即可。<br>这样，前端进入H5应用时的逻辑就是：</p>\n<ul>\n<li>调用检测用户登录的接口User.get，调用成功后将返回信息存储到全局变量g_data.userInfo中，并显示入口页；</li>\n<li>如果调用失败，则显示登录页；</li>\n<li>在登录成功后，跳转回一开始要进入的入口页。</li>\n</ul>\n<p>这些逻辑由框架函数MUI.tryAutoLogin和MUI.handleLogin提供，应注意把这段逻辑放置到muiInit事件中，以便在显示任意页面之前调用。 我们在筋斗云示例应用中，可以看到这样的代码：(index.js中)<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$(document).on(&quot;muiInit&quot;, myInit);</span><br><span class=\"line\"></span><br><span class=\"line\">function myInit() &#123;</span><br><span class=\"line\">    MUI.tryAutoLogin(handleLogin, &quot;User.get&quot;);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">function handleLogin(data) &#123;</span><br><span class=\"line\">    MUI.handleLogin(data);</span><br><span class=\"line\">    // g_data.userInfo已赋值</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>在MUI.tryAutoLogin中指定了检查会话重用的接口名为”User.get”，于是H5应用便有了会话重用的功能。 在模拟接口中，我们看到”User.get”接口模拟如下：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&quot;User.get&quot;: [0, user],</span><br></pre></td></tr></table></figure></p>\n<p>这表明模拟的是已登录过的状态，因此打开应用时可直接免登录进入。 我们把它改成返回”未登录”错误：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&quot;User.get&quot;: [2, &quot;no auth&quot;],</span><br></pre></td></tr></table></figure></p>\n<p>这时刷新H5应用，是不是进入了登录页？ 任意输入手机号和验证码可登录进来。进入页面”我”，点退出，看看是不是回到了登录页？<br>注意框架定义了“未认证错误”缺省错误码为2，如果要修改，可以用：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">window.E_NOAUTH = 2;</span><br></pre></td></tr></table></figure></p>\n<p>再看会话中断时的行为，由于进入订单列表页会调用接口”Ordr.query”，我们在浏览器控制台上修改模拟接口让它返回未登录错：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">MUI.mockData[&quot;Ordr.query&quot;] = [2, &quot;no auth&quot;];</span><br></pre></td></tr></table></figure></p>\n<p>进入订单列表页（如果之前已经打开过，可以下拉刷新下），看看是不是自动跳转到登录页了？<br>如果后端接口格式不是使用筋斗云调用规范，则需要按上节介绍自行适配接口，在其中添加自动跳转登录页的的逻辑，如：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">MUI.callSvrExt[&apos;default&apos;] = &#123;</span><br><span class=\"line\">       ...</span><br><span class=\"line\">       dataFilter: function (data) &#123;</span><br><span class=\"line\">           ...</span><br><span class=\"line\">           if (data.code == E_NOAUTH) &#123;</span><br><span class=\"line\">               MUI.showLogin();</span><br><span class=\"line\">               return;</span><br><span class=\"line\">           &#125;</span><br><span class=\"line\">       &#125;</span><br><span class=\"line\">   &#125;;</span><br></pre></td></tr></table></figure></p>\n<p>这样，框架可以确保未登录时（或已掉线、服务端重启等情况时）调用了后端需要登录的接口，可以自动跳转到登录页。<br>注意：调用<code>MUI.showLogin()</code>来显示登录页，而不要用<code>MUI.showPage(&quot;#login&quot;)</code>来写死页面，而且<code>MUI.showLogin</code>可以在登录成功后跳回登录前想进入的页面。 类似的还有<code>MUI.showHome()</code>来显示首页。<br>上面示例中，用MUI.tryAutoLogin要求进入应用必须先登录。如果某些入口页可以免登录直接进入，则应这样调用：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">function myInit()</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    MUI.tryAutoLogin(handleLogin, &quot;User.get&quot;, true); // 参数true表示允许未登录进入</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>这时应特别小心，可用<code>g_data.userInfo == null</code>判断是否为未登录。 从未登录的入口页进入其它需要登录才能展示的页面，也常常在pagebeforeshow事件中添加判断：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">function onPageBeforeShow(ev, opt)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    // 可能从一个未登录的页面跳转过来</span><br><span class=\"line\">    if (g_data.userInfo == null) &#123;</span><br><span class=\"line\">        MUI.showLogin();</span><br><span class=\"line\">        return;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    // 设置页面内容</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>注意：在MUI.tryAutoLogin中调用接口时，都使用的是同步调用且忽略错误。</p>\n<h3 id=\"自动登录\"><a href=\"#自动登录\" class=\"headerlink\" title=\"自动登录\"></a>自动登录</h3><p>自动登录是一个常见需求，基本上现在的手机应用，登录过一次后，下次都是免登录进入。<br>前面已经讲过通过会话重用，可以实现短时间内免登录。 通过对cookie设置较长的超时时间，且在后端长期保存会话数据，可以延长免登录的时间。<br>如果会话重用机制的实现并不可靠，比如过期、后端过载或重启等导致会话丢失，最好再设计专门的自动登录机制。 要实现自动登录，客户端必须将登录信息保存在本地。由于用户名、密码这些信息很敏感，不适合直接存储在客户端，一般通过token来实现自动登录。<br>需要后端login接口支持token，注意token参数要求通过POST参数传递的<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">login(uname, pwd) -&gt; &#123;_token, ...&#125; // 普通登录，额外返回_token字段</span><br><span class=\"line\">login()(token) -&gt; &#123;_token?, ...&#125; // 可以不再返回token</span><br></pre></td></tr></table></figure></p>\n<p>与之前的<code>login</code>接口相比，普通的登录方式可返回一个<code>_token</code>字段，将这个字段保存在客户端本地，下次就可以通过<code>login(token)</code>方式自动登录。 服务器在实现时，一般在token中包含了用户信息，token过期时间等信息，当然进行了加密，所以比较安全。<br>H5应用要实现的逻辑如下：</p>\n<ul>\n<li>进入应用时，先尝试会话重用，在会话重用失败后，再尝试自动登录</li>\n<li>如果在操作过程中用户掉线（如客户端长时间未操作导致会话超时），也可通过自动登录，对用户透明地实现恢复登录后继续操作。</li>\n</ul>\n<p>框架已经在MUI.tryAutoLogin函数及默认的后端接口适配中完成以上逻辑，只要服务端接口符合上面约定，无需额外代码。<br>我们来模拟接口，让User.get接口返回未登录，让login接口支持返回_token，看看H5应用的行为：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&quot;login&quot;: function (param, postParam) &#123;</span><br><span class=\"line\">    if (postParam.token) &#123;</span><br><span class=\"line\">        console.log(&quot;用token自动登录&quot;);</span><br><span class=\"line\">        return [0, user];</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    return [0, $.extend(&#123;_token: &quot;abcdefg&quot;&#125;, user)];</span><br><span class=\"line\">&#125;,</span><br><span class=\"line\">...</span><br><span class=\"line\">&quot;User.get&quot;: [2, &quot;no auth&quot;],</span><br></pre></td></tr></table></figure></p>\n<ul>\n<li>刷新H5应用，因为未登录过，正确进入登录页，注意看浏览器控制台的日志，只调用了”User.get”接口，失败后转到登录页。</li>\n<li>在成功登录一次后，再次刷新H5应用，发现可以直接进入应用了，看日志，先调用了”User.get”失败，然后尝试自动登录调用了”login”接口成功。</li>\n<li>直到去页面“我”点击“退出”，刷新H5应用才不再自动登录。</li>\n</ul>\n<p>如果是自行适配接口，只需将前面示例中跳转登录页的操作换成尝试自动登录，示例如下：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">MUI.callSvrExt[&apos;default&apos;] = &#123;</span><br><span class=\"line\">    ...</span><br><span class=\"line\">    dataFilter: function (data) &#123;</span><br><span class=\"line\">        ...</span><br><span class=\"line\">        if (data.code == E_NOAUTH) &#123;</span><br><span class=\"line\">            // 尝试自动登录，如果登录成功则重新发起当前请求；登录失败会自动转向登录页</span><br><span class=\"line\">            if (MUI.tryAutoLogin()) &#123;</span><br><span class=\"line\">                $.ajax(this);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            // MUI.showLogin();</span><br><span class=\"line\">            return;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure></p>\n<p>注意：<br>上述对会话重用和自动登录的支持，核心是进入应用时及应用掉线时调用<code>MUI.tryAutoLogin</code>函数，而它是基于筋斗云后端的接口设计。 如果后端接口设计不同，可自行来写一个tryAutoLogin函数，在进入应用时及应用掉线时调用。                </p>\n<p>特别地，在tryAutoLogin中调用接口，一般使用同步调用(选项<code>{async: false}</code>)，且忽略出错(选项<code>{noex:1}</code>)：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">var opt = &#123;async: false, noex: 1&#125;;</span><br><span class=\"line\">callSvr(&quot;User.get&quot;, $.noop, null, opt);</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"常用组件\"><a href=\"#常用组件\" class=\"headerlink\" title=\"常用组件\"></a>常用组件</h2><p>筋斗云框架有一些使用mui前缀的CSS类，包括</p>\n<ul>\n<li>mui-container H5应用容器，一般在HTML的body对象上设置。</li>\n<li>mui-page 逻辑页，由框架自动设置</li>\n<li>mui-btn 按钮，如果再叠加primary类，则表示显示为缺省按钮。</li>\n<li>mui-dialog 对话框</li>\n<li>mui-menu 菜单</li>\n<li>mui-navbar 导航栏</li>\n</ul>\n<p>注意：筋斗云框架不是UI组件库，它只提供极为有限的一些组件，更丰富的UI组件请使用weui库或其它第三方组件库。<br>如果想调整框架中组件的显示样式，一般在app.css文件中设置。</p>\n<h3 id=\"导航栏及图标\"><a href=\"#导航栏及图标\" class=\"headerlink\" title=\"导航栏及图标\"></a>导航栏及图标</h3><blockquote>\n<ul>\n<li>为H5应用底部导航栏上每项加上图标，且点中与未点中显示的图标不一样。<ul>\n<li>将小图标拼合成大图优化图标资源加载。</li>\n</ul>\n</li>\n</ul>\n</blockquote>\n<p>导航栏用CSS类”mui-navbar”标识。<br><img src=\"/img/navbar.png\" alt=\"navbar\"><br>这是订单列表页中的例子，用导航栏和几个列表构建一个多栏页面， 当点击一项时，框架会自动为该项添加CSS类”active”，并只显示”mui-linkto”属性指向的组件。 被指向的组件仅限于当前逻辑页面：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;div class=&quot;mui-navbar&quot;&gt;</span><br><span class=\"line\">    &lt;a mui-linkto=&quot;#lst1&quot;&gt;待服务&lt;/a&gt;</span><br><span class=\"line\">    &lt;a mui-linkto=&quot;#lst2&quot;&gt;已完成&lt;/a&gt;</span><br><span class=\"line\">&lt;/div&gt;</span><br></pre></td></tr></table></figure></p>\n<p>整个H5应用有一个底部导航，用id=”footer”标识，放置在H5应用的主html文件中，如：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;div id=&quot;footer&quot;&gt;</span><br><span class=\"line\">    &lt;a href=&quot;#home&quot; mui-opt=&quot;ani:&apos;none&apos;&quot;&gt;</span><br><span class=\"line\">        &lt;span&gt;首页&lt;/span&gt;</span><br><span class=\"line\">    &lt;/a&gt;</span><br><span class=\"line\">    &lt;a href=&quot;#orders&quot; mui-opt=&quot;ani:&apos;none&apos;&quot;&gt;</span><br><span class=\"line\">        &lt;span&gt;订单&lt;/span&gt;</span><br><span class=\"line\">    &lt;/a&gt;</span><br><span class=\"line\">    &lt;a href=&quot;#me&quot; mui-opt=&quot;ani:&apos;none&apos;&quot;&gt;</span><br><span class=\"line\">        &lt;span&gt;我&lt;/span&gt;</span><br><span class=\"line\">    &lt;/a&gt;</span><br><span class=\"line\">&lt;/div&gt;</span><br></pre></td></tr></table></figure></p>\n<p>底部导航可自动显示或隐藏，如果当前页面是在导航项中的，导航栏就会自动显示。 上面<code>mui-opt</code>属性用来指定显示页面的参数（参考<code>MUI.showPage</code>的参数），”ani:’none’”表示不显示动画切页效果。<br>如果要给导航中的每项加图片，可以用CSS类icon:<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;a href=&quot;#home&quot; mui-opt=&quot;ani:&apos;none&apos;&quot;&gt;</span><br><span class=\"line\">    &lt;i class=&quot;icon icon-home&quot;&gt;&lt;/i&gt;</span><br><span class=\"line\">    &lt;span&gt;首页&lt;/span&gt;</span><br><span class=\"line\">&lt;/a&gt;</span><br></pre></td></tr></table></figure></p>\n<p>定义一个CSS类icon-home为它指定图标即可。 由于点击一项时会自动给该项加上active类，所以要想控制当前选中项或未选中项显示不同的图片，可以设置：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">.icon-home &#123;</span><br><span class=\"line\">    background-image: url(icon/24/home.png);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">.active .icon-home &#123;</span><br><span class=\"line\">    background-image: url(icon/24/home-active.png);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>这些图标一般建议放在server/icon目录下，并最终在发布时优化拼合成一张大图，称为制作“精灵图”（sprite）。<br>对图标的CSS设置一般写在icon.css中，然后使用jdcloud-sprite工具生成拼合后的大图以及icon.out.css在H5应用中使用。 查看index.html可知它实际引用的是优化后的icon.out.css文件，icon.css只是作为源文件，用于生成icon.out.css。<br>在开发时，建议先把图标的CSS定义分别在icon.css与icon.out.css中各写一份。 待准备做优化时，只需在一台可制作精灵图的电脑上一次性生成icon.out.css比较方便。         </p>\n<h4 id=\"图标优化方法（制作精灵图）\"><a href=\"#图标优化方法（制作精灵图）\" class=\"headerlink\" title=\"图标优化方法（制作精灵图）\"></a>图标优化方法（制作精灵图）</h4><p>先安装imagemagick软件，确认在命令行中可以运行convert等命令。 安装好php 5.4或更高版本，然后在项目的tool目录下，运行命令：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">php jdcloud-sprite.php ../server/icon.css -2x -group -sprite icon/icon@2x.png</span><br></pre></td></tr></table></figure></p>\n<p>查看server/icon.out.css文件是否已更新？在server/icon目录下是否生成了拼合后的大图？<br>命令中参数-2x表示源图标都是2x图标，即显示为24x24大小的图标，其实际尺寸是48x48。 在手机上一般使用2x图标，否则会看出有些模糊。 参数-group表示按图标宽度分组拼合图片，这样效率更高些，也可以去掉这个参数。<br>其实在文件tool/Makefile中已经包含了这个命令，确保开发环境有make工具， 就可以在git-bash中直接运行下面命令来优化图标：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">./make-sprite.sh</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"简单对话框\"><a href=\"#简单对话框\" class=\"headerlink\" title=\"简单对话框\"></a>简单对话框</h3><p>框架提供的app_alert用于显示简单的提示框，类似alert/confirm/prompt这些函数， 只不过app_alert是异步的（调用后立即返回，需要通过回调函数来执行之后的操作），且可以定制显示样式。<br>在浏览器控制台里输入以下示例试试:<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">// 信息框，3秒后自动关闭</span><br><span class=\"line\">app_alert(&quot;操作成功&quot;, function () &#123;</span><br><span class=\"line\">    MUI.showPage(&quot;#orderInfo&quot;);</span><br><span class=\"line\">&#125;, &#123;timeoutInterval: 3000&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">// 错误框，&quot;e&quot;表示&quot;error&quot;</span><br><span class=\"line\">app_alert(&quot;操作失败&quot;, &quot;e&quot;);</span><br><span class=\"line\"></span><br><span class=\"line\">// 确认框(确定/取消)，&quot;q&quot;表示&quot;question&quot;</span><br><span class=\"line\">app_alert(&quot;立即付款?&quot;, &quot;q&quot;, function () &#123;</span><br><span class=\"line\">    MUI.showPage(&quot;#pay&quot;);</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">// 输入框, &quot;p&quot;表示&quot;prompt&quot;</span><br><span class=\"line\">app_alert(&quot;输入要查询的名字:&quot;, &quot;p&quot;, function (text) &#123;</span><br><span class=\"line\">    callSvr(&quot;Book.query&quot;, &#123;cond: &quot;name like &apos;%&quot; + text + &quot;%&apos;&#125;);</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure></p>\n<p>由于app_alert对话框的id固定为”muiAlert”，所以要定制显示样式，可对#muiAlert及其子对象直接设置CSS样式； 或者自已重新定义一个id为”muiAlert”的div，详见参考文档。</p>\n<h3 id=\"对话框\"><a href=\"#对话框\" class=\"headerlink\" title=\"对话框\"></a>对话框</h3><p>对话框与页面类似，一般放在逻辑页面中。使用CSS类”mui-dialog”标识对话框。app_alert显示的就是最简单的一类对话框，</p>\n<blockquote>\n<p>把“创建订单”页面(createOrder页)改写成一个对话框，放在首页中。在首页增加一个“创建订单对话框”按钮，点击后显示对话框。 效果如下：<img src=\"/img/dialog.png\" alt=\"dialog\">          </p>\n</blockquote>\n<p>在首页home.html中增加一个id=”dlgCreateOrder”的div组件：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;div mui-initfn=&quot;initPageHome&quot; mui-script=&quot;home.js&quot;&gt;</span><br><span class=\"line\">    ... hd, bd ...</span><br><span class=\"line\">        &lt;!--a href=&quot;#createOrder&quot;&gt;立即下单&lt;/a--&gt;</span><br><span class=\"line\">        &lt;a href=&quot;#dlgCreateOrder&quot;&gt;立即下单&lt;/a&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">    &lt;div class=&quot;mui-dialog&quot; id=&quot;dlgCreateOrder&quot; style=&quot;width:80%&quot;&gt;</span><br><span class=\"line\">        &lt;div class=&quot;hd&quot;&gt;</span><br><span class=\"line\">            &lt;h2&gt;创建订单&lt;/h2&gt;</span><br><span class=\"line\">        &lt;/div&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">        &lt;form class=&quot;bd&quot; action=&quot;Ordr.add&quot; style=&quot;padding:10px&quot;&gt;</span><br><span class=\"line\">            选择套餐:</span><br><span class=\"line\">            &lt;select name=&quot;dscr&quot;&gt;</span><br><span class=\"line\">                &lt;option value=&quot;基础套餐&quot; data-amount=128&gt;基础套餐 128元&lt;/option&gt;</span><br><span class=\"line\">                &lt;option value=&quot;精英套餐&quot; data-amount=228&gt;精英套餐 228元&lt;/option&gt;</span><br><span class=\"line\">            &lt;/select&gt;</span><br><span class=\"line\">            &lt;button id=&quot;btnCreateOrder&quot; class=&quot;mui-btn primary&quot;&gt;创建订单&lt;/button&gt;</span><br><span class=\"line\">            &lt;input type=&quot;text&quot; name=&quot;amount&quot; value=&quot;0&quot; style=&quot;display:none&quot;&gt;</span><br><span class=\"line\">        &lt;/form&gt;</span><br><span class=\"line\">    &lt;/div&gt;</span><br><span class=\"line\">&lt;/div&gt;</span><br></pre></td></tr></table></figure></p>\n<p>增加了一个链接指向它：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;a href=&quot;#dlgCreateOrder&quot;&gt;立即下单&lt;/a&gt;</span><br></pre></td></tr></table></figure></p>\n<p>注意：对话框的id以”dlg”开头，框架自动打开对话框而不是页面，点上面链接相当于执行：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">MUI.showDialog(&quot;#dlgCreateOrder&quot;);</span><br></pre></td></tr></table></figure></p>\n<p>重新进入应用，点首页上的按钮，可以看到对话框已经显示出来了，点击对话框背景可关闭对话框。 按钮上使用了框架提供的CSS类”mui-btn”标识按钮，再加了”primary”类展现为缺省建议点击的按钮。<br>在home.js中用MUI.setupDialog为对话框增加逻辑： 当用户选择一个套餐并点击创建订单时，调用”Ordr.add”接口（定义在form.action属性上）。 调用成功后，显示订单列表页，并关闭对话框(MUI.closeDialog)。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">function initPageHome()</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    ...</span><br><span class=\"line\"></span><br><span class=\"line\">    // 设置对话框初始化函数，一般名为 initDlgXXX</span><br><span class=\"line\">    MUI.setupDialog(jpage.find(&quot;#dlgCreateOrder&quot;), initDlgCreateOrder);</span><br><span class=\"line\">    </span><br><span class=\"line\">    function initDlgCreateOrder()</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        var jdlg = this;</span><br><span class=\"line\">        var jf = jdlg.find(&quot;form&quot;);</span><br><span class=\"line\">        MUI.setFormSubmit(jf, api_OrdrAdd, &#123;validate: onValidate&#125;);</span><br><span class=\"line\">        // 可以返回一个函数，每次显示时回调，类型&quot;pagebeforeshow&quot;回调。</span><br><span class=\"line\">        // 也可以直接return，没有返回值。</span><br><span class=\"line\">        return beforeShow;</span><br><span class=\"line\"></span><br><span class=\"line\">        function onValidate(jf)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            // 提交前，自动填写form中隐藏的amount字段</span><br><span class=\"line\">            var f = jf[0];</span><br><span class=\"line\">            f.amount.value = $(f.dscr).find(&quot;option:selected&quot;).attr(&quot;data-amount&quot;);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        function api_OrdrAdd(data)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            MUI.closeDialog(jdlg);</span><br><span class=\"line\">            app_alert(&quot;订单创建成功!&quot;, &quot;i&quot;, function () &#123;</span><br><span class=\"line\">                // 显示订单列表页</span><br><span class=\"line\">                PageOrders.refresh = true;</span><br><span class=\"line\">                MUI.showPage(&quot;#orders&quot;);</span><br><span class=\"line\">            &#125;);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        function beforeShow() &#123;</span><br><span class=\"line\">            // 每次打开对话框时清除之前选择。</span><br><span class=\"line\">            jf[0].reset();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>注意：</p>\n<ul>\n<li>MUI.setupDialog接受一个回调函数用于对话框初始化，它与页面初始化函数类似，我们定义一个函数名为initDlgCreateOrder。 这个函数如果有返回值，必须是一个函数用于显示时回调，相当于页面的”pagebeforeshow”回调函数。</li>\n<li>用MUI.setFormSubmit来与后端交互.<h3 id=\"菜单\"><a href=\"#菜单\" class=\"headerlink\" title=\"菜单\"></a>菜单</h3>菜单其实是一种特殊的对话框，显示一个菜单项列表。在框架中用CSS类”mui-menu”来标识它。<br>我们以订单详情页的右上角菜单为例讲解，效果是这样: <img src=\"/img/menu.png\" alt=\"menu\">        <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;div mui-initfn=&quot;initPageOrder&quot; mui-script=&quot;order.js&quot;&gt;</span><br><span class=\"line\">    &lt;div class=&quot;hd&quot;&gt;</span><br><span class=\"line\">        &lt;a href=&quot;javascript:hd_back();&quot; class=&quot;icon icon-back&quot;&gt;&lt;/a&gt;</span><br><span class=\"line\">        &lt;a href=&quot;#dlgMenu&quot; class=&quot;icon icon-menu&quot;&gt;&lt;/a&gt;</span><br><span class=\"line\">        &lt;h1&gt;订单明细&lt;/h1&gt;</span><br><span class=\"line\">    &lt;/div&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">    ...</span><br><span class=\"line\">    &lt;ul id=&quot;dlgMenu&quot; class=&quot;mui-menu top&quot;&gt;</span><br><span class=\"line\">        &lt;li id=&quot;mnuRefreshOrder&quot;&gt;&lt;i class=&quot;icon icon-refresh&quot;&gt;&lt;/i&gt;刷新&lt;/li&gt;</span><br><span class=\"line\">        &lt;li id=&quot;mnuCancelOrder&quot;&gt;&lt;i class=&quot;icon icon-delete&quot;&gt;&lt;/i&gt;取消订单&lt;/li&gt;</span><br><span class=\"line\">    &lt;/ul&gt;</span><br><span class=\"line\">&lt;/div&gt;</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<p>这个是典型的手机页，标题栏左右各一个按钮，分别在”hd”中用两个a标签定义。 左上角显示后退按钮，执行操作hd_back()，这个函数是框架提供的，和history.back()类似，增强的功能是如果无法回退，则会显示首页，适合用在标题栏回退按钮上。 右上角显示菜单按钮，它的href属性设置为菜单div的id，注意要以”dlg”开头，框架就会自动以对话框方式打开它。<br>在页面最后定义了id=dlgMenu的菜单，指定了CSS类为mui-menu标识显示为菜单，另一个类top标识菜单在右上角，如果没有它则和对话框一样，默认显示在页面中央。<br>在页面js文件中，只要给每个菜单项绑定事件就可以了。</p>\n<h2 id=\"分页列表框架\"><a href=\"#分页列表框架\" class=\"headerlink\" title=\"分页列表框架\"></a>分页列表框架</h2><p>本章介绍很常用的分页列表，详情可查阅官方参考文档中的”initPageList”函数介绍。</p>\n<h3 id=\"显示单个列表\"><a href=\"#显示单个列表\" class=\"headerlink\" title=\"显示单个列表\"></a>显示单个列表</h3><p>当列表预期可能很长时，一般应支持分页。分页列表在手机上的典型展现方式是支持上拉加载和下拉刷新。</p>\n<blockquote>\n<ul>\n<li>创建页面orders2，仿照示例应用中订单列表页(orders)。本节先不按订单状态分栏，只显示一个列表，支持上拉加载和下拉刷新。<ul>\n<li>点击订单列表中的一项，可以进入订单详情页。</li>\n</ul>\n</li>\n</ul>\n</blockquote>\n<p>我们先熟悉一下支持分页的列表查询接口。 在示例应用自带的模拟数据中，获取订单列表操作是支持分页的，在浏览器控制台上试试调用这些：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">callSvrSync(&quot;Ordr.query&quot;);</span><br><span class=\"line\">// 返回 &#123;nextkey: 20, list: [ &#123;id: 147, dscr: &quot;基础套餐&quot;, status: &quot;CR&quot;, ...&#125;, ...(共20条)] &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">// 取下一页：上次返回的nextkey字段用于本次请求的_pagekey参数</span><br><span class=\"line\">callSvrSync(&quot;Ordr.query&quot;, &#123;_pagekey: 20&#125;); </span><br><span class=\"line\">// 返回 &#123;nextkey: 40, list: [ ...(共20条)] &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">// 再取下一页</span><br><span class=\"line\">callSvrSync(&quot;Ordr.query&quot;, &#123;_pagekey: 40&#125;); </span><br><span class=\"line\">// 返回 &#123;list: [ ...(共8条)] &#125;，没有nextkey属性，说明已是最后一页。</span><br></pre></td></tr></table></figure></p>\n<p>默认每次返回20条数据，可以通过_pagesz参数控制每次返回的数据条目数，如<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">callSvrSync(&quot;Ordr.query&quot;, &#123;_pagesz: 10&#125;);</span><br><span class=\"line\">// 返回 &#123;nextkey: 10, list: [ ...(共10条)] &#125;</span><br></pre></td></tr></table></figure></p>\n<p>我们使用这个模拟接口，新建页面orders2：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;div mui-initfn=&quot;initPageOrders2&quot; mui-script=&quot;orders2.js&quot;&gt;</span><br><span class=\"line\">    &lt;div class=&quot;hd&quot;&gt;</span><br><span class=\"line\">        &lt;a href=&quot;javascript:hd_back();&quot; class=&quot;icon icon-back&quot;&gt;&lt;/a&gt;</span><br><span class=\"line\">        &lt;h2&gt;分页列表练习&lt;/h2&gt;</span><br><span class=\"line\">    &lt;/div&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">    &lt;div class=&quot;bd&quot;&gt;</span><br><span class=\"line\">        &lt;div id=&quot;lst1&quot; data-ac=&quot;Ordr.query&quot;&gt;&lt;/div&gt;</span><br><span class=\"line\">    &lt;/div&gt;</span><br><span class=\"line\">&lt;/div&gt;</span><br></pre></td></tr></table></figure></p>\n<p>在bd部分中，用一个div(id=lst1)作为列表，用属性”data-ac”指定了后端接口。<br>在页面初始化函数initPageOrders2中，调用initPageList函数初始化一个分页列表：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">// JS: (page/orders2.js)</span><br><span class=\"line\"></span><br><span class=\"line\">function initPageOrders2()</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    var jpage = this;</span><br><span class=\"line\">    var listItf = initPageList(jpage, &#123;</span><br><span class=\"line\">        navRef: &quot;&quot;,</span><br><span class=\"line\">        listRef: &quot;#lst1&quot;,</span><br><span class=\"line\">        onAddItem: onAddItem,</span><br><span class=\"line\">        onNoItem: onNoItem,</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">    function onAddItem(jlst, itemData)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        var ji = $(&quot;&lt;div&gt;&lt;b&gt;&quot; + itemData.dscr + &quot;&lt;/b&gt;&lt;p&gt;订单号: &quot; + itemData.id + &quot;&lt;/p&gt;&lt;/div&gt;&quot;);</span><br><span class=\"line\">        ji.appendTo(jlst);</span><br><span class=\"line\"></span><br><span class=\"line\">        // 把itemData存储到事件中，可在事件回调中通过ev.data取到数据</span><br><span class=\"line\">        ji.on(&quot;click&quot;, null, itemData, li_click);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    function onNoItem(jlst)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        var ji = $(&quot;&lt;div&gt;没有订单&lt;/div&gt;&quot;);</span><br><span class=\"line\">        ji.appendTo(jlst);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    function li_click(ev)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        var id = ev.data.id;</span><br><span class=\"line\">        // 显示订单详情页</span><br><span class=\"line\">        PageOrder.id = id;</span><br><span class=\"line\">        MUI.showPage(&quot;#order&quot;);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>函数initPageList封装了接口交互的诸多细节，调用者只需要考虑如何展示列表项即可。 在参数中， listRef指定了列表组件的引用（只在当前逻辑页上查找，相当于jpage.find(listRef)），navRef指定导航栏，这里未用到，赋值空就行，后面章节再介绍。 回调函数onAddItem用于添加一个列表项，onNoItem在列表为空时调用，用于显示没有数据时的提示。<br>我们在首页(page/home.html)中增加一个链接到页面orders2:<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;li class=&quot;weui_cell&quot; style=&quot;display:block&quot;&gt;&lt;a href=&quot;#orders2&quot; class=&quot;weui_btn weui_btn_primary&quot;&gt;分页列表练习&lt;/a&gt;&lt;/li&gt;</span><br></pre></td></tr></table></figure></p>\n<p>进入页面，可以看到向下拉动可以刷新列表（重新取第一页数据），快到列表底部时可自动加载下一页数据。<br>还有个常用的参数是onGetQueryParam，允许编程指定调用后端接口的参数，如：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">var listItf = initPageList(jpage, &#123;</span><br><span class=\"line\">      ...</span><br><span class=\"line\">      // 设置查询参数，静态值一般通过在列表对象上设置属性 data-ac, data-cond以及data-queryParam等属性来指定更方便。</span><br><span class=\"line\">      onGetQueryParam: function (jlst, queryParam) &#123;</span><br><span class=\"line\">          // 指定调用名，参数为固定为&quot;ac&quot;</span><br><span class=\"line\">          queryParam.ac = &quot;Ordr.query&quot;;</span><br><span class=\"line\">          // 指定其它后端接口调用参数，比如页大小，查询条件，排序顺序等</span><br><span class=\"line\">          queryParam._pagesz = 10;</span><br><span class=\"line\">          queryParam.orderby = &quot;id desc&quot;;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>例子中，由于是固定值，也可以在列表上通过属性<code>data-ac=&quot;Ordr.query&quot; data-queryParam=&quot;orderby:&#39;id desc&#39;, _pagesz:10&quot;</code>来指定。<br>默认页大小是20，由<code>MUI.options.PAGE_SZ</code>定义。<br>这里有一点要注意：列表的容器（在本例中，#lst1所在容器是.bd）需要有确定的高度，且一般设置样式”overflow-y: auto”，这样列表才能滚动。 由于页面的bd部分刚好会由框架自动设置高度，示例中没有特别去设置，如果是自定义的容器，需要设置好高度。 （这个限制可能在未来被去掉）           </p>\n<blockquote>\n<p>外界对逻辑页的操作使用逻辑页接口</p>\n</blockquote>\n<p>上面在显示订单详情页时，用的方法是：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">PageOrder.id = id;</span><br><span class=\"line\">MUI.showPage(&quot;#order&quot;);</span><br></pre></td></tr></table></figure></p>\n<p>我们把PageOrder称为逻辑页order的接口(page interface)，在H5应用JS文件index.js中定义：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">var PageOrder = &#123;</span><br><span class=\"line\">    // PageOrder.id</span><br><span class=\"line\">    id: null, </span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure></p>\n<p>在页面order的JS逻辑中，会根据这里的PageOrder.id显示相应订单。<br>尽管也可以通过全局变量等方式实现该功能（例如使用全局变量g_data.orderId），但不够清晰，不建议使用。<br>外界对逻辑页的操作，都应封装到逻辑页接口中。尤其不要在逻辑页外直接设置该页内的组件。 这样，要查看哪些页面引用了订单页，只要全局查找”PageOrder”即可。<br>这里要显示订单，也可以这样封装：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">var PageOrder = &#123;</span><br><span class=\"line\">    // PageOrder.show(id)</span><br><span class=\"line\">    show: function (id) &#123;</span><br><span class=\"line\">        this.id_ = id;</span><br><span class=\"line\">        MUI.showPage(&quot;#order&quot;);</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\"></span><br><span class=\"line\">    id_: null</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure></p>\n<p>外面直接这样调用：PageOrder.show(id). 把属性”PageOrder.id”改名为”PageOrder.id_”，暗示这个属性由逻辑页内部用，外界不应使用。</p>\n<h3 id=\"使用DOM模板创建组件\"><a href=\"#使用DOM模板创建组件\" class=\"headerlink\" title=\"使用DOM模板创建组件\"></a>使用DOM模板创建组件</h3><blockquote>\n<p>上节练习中，函数onAddItem里，直接使用了拼接html的方式动态创建列表项，当组件复杂时可读性和可维护性很差。 我们将使用示例应用自带的weui样式库美化列表项，并用DOM模板的方法重写创建组件过程，让代码更清晰。</p>\n</blockquote>\n<p>一般情况下，不建议直接拼接html，而是通过模板及mvvm等技术来创建，这里给大家推荐开源的超轻量的jquery-dataview库，可在github中下载：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">https://github.com/skyshore2001/jquery-dataview</span><br></pre></td></tr></table></figure></p>\n<p>或用这个git仓库：<code>http://dacatec.com/git/jquery-dataview.git</code>。 下载后只需要jquery-dataview.min.js一个文件即可，把它复制到server/lib目录下，在H5应用index.html中引用：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;script src=&quot;lib/jquery-dataview.min.js&quot;&gt;&lt;/script&gt;</span><br></pre></td></tr></table></figure></p>\n<p>然后在页面中定义列表项的模板，我们使用示例应用自带的weui界面样式库：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">(page/orders2.html)</span><br><span class=\"line\">&lt;div mui-initfn=&quot;initPageOrders2&quot; mui-script=&quot;orders2.js&quot;&gt;</span><br><span class=\"line\">    ...</span><br><span class=\"line\"></span><br><span class=\"line\">    &lt;div class=&quot;bd&quot;&gt;</span><br><span class=\"line\">        &lt;div id=&quot;lst1&quot; class=&quot;weui_cells weui_cells_access&quot; data-ac=&quot;Ordr.query&quot;&gt;&lt;/div&gt;</span><br><span class=\"line\">    &lt;/div&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;script id=&quot;tplOrder&quot; type=&quot;text/template&quot;&gt;</span><br><span class=\"line\">&lt;div class=&quot;weui_cell&quot; dv-on=&quot;li_click&quot;&gt;</span><br><span class=\"line\">    &lt;div class=&quot;weui_cell_hd&quot;&gt;</span><br><span class=\"line\">        &lt;i class=&quot;icon icon-dscr&quot;&gt;&lt;/i&gt;</span><br><span class=\"line\">    &lt;/div&gt;</span><br><span class=\"line\">    &lt;div class=&quot;weui_cell_bd weui_cell_primary&quot;&gt;</span><br><span class=\"line\">        &lt;p&gt;&lt;b name=&quot;dscr&quot;&gt;&lt;/b&gt;&lt;/p&gt;</span><br><span class=\"line\">        &lt;p&gt;订单号: &lt;span name=&quot;id&quot;&gt;&lt;/span&gt;&lt;/p&gt;</span><br><span class=\"line\">    &lt;/div&gt;</span><br><span class=\"line\">    &lt;div class=&quot;weui_cell_ft&quot; name=&quot;status&quot;&gt;&lt;/div&gt;</span><br><span class=\"line\">&lt;/div&gt;</span><br><span class=\"line\">&lt;/script&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;/div&gt;</span><br></pre></td></tr></table></figure></p>\n<p>上例中：</p>\n<ul>\n<li>用script标签定义了id为tplOrder的html模板，要动态赋值的地方用<code>name=&quot;xxx&quot;</code>的方式标明，要处理事件的组件用dv-on属性指定。 注意：H5标签template在现阶段的兼容性还够好，谨慎使用。</li>\n<li>使用weui样式库美化列表。在列表”lst1”上添加了<code>&quot;weui_cells&quot;</code>等CSS类, 在列表每一项上用了<code>&quot;weui_cell&quot;</code>类，详细用法可查阅weui文档。</li>\n<li>列表每项前用<i class=\"icon icon-dscr\"></i>放置了一个名为icon-dscr的图标。</li>\n</ul>\n<p>在JS中(page/orders2.js)，我们重写onAddItem函数，使用这个模板clone出每一项：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">function initPageOrders2()</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    var jpage = this;</span><br><span class=\"line\">    ...</span><br><span class=\"line\"></span><br><span class=\"line\">    // 列表项模板</span><br><span class=\"line\">    var jtplOrder_ = $(jpage.find(&quot;#tplOrder&quot;).html());</span><br><span class=\"line\"></span><br><span class=\"line\">    function onAddItem(jlst, itemData)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        var ji = jtplOrder_.clone().dataview(itemData, &#123;</span><br><span class=\"line\">            events: &#123;</span><br><span class=\"line\">                li_click: li_click</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;).appendTo(jlst);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    ...</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>jquery-dataview在做事件绑定时，会自动将数据绑定到事件上。 例中，在<code>li_click(ev)</code>回调函数中，可以通过ev.data拿到绑定的数据，因而刚好<code>li_click</code>函数不用修改，取订单id可以用<code>var id = ev.data.id</code>。</p>\n<h3 id=\"刷新分页列表\"><a href=\"#刷新分页列表\" class=\"headerlink\" title=\"刷新分页列表\"></a>刷新分页列表</h3><blockquote>\n<p>控制刷新分页列表。</p>\n</blockquote>\n<p>列表一旦显示后，每次回到该逻辑页时，不会重新请求数据或刷新，除非用户自己下拉刷新列表，这样保证了应用有良好的性能。<br>但有时需要在程序内控制列表刷新，考虑这样的需求：当一个订单在其它页面被修改了（例如取消订单），再回到订单列表页时希望能刷新列表。<br><code>initPageList</code>可以很简单地实现这一需求。 先为逻辑页定义一个接口:<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">var PageOrders2 = &#123;</span><br><span class=\"line\">    refresh: null,</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>在初始化列表时，添加一个pageItf选项（page interface缩写）：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">var listItf = initPageList(jpage, &#123;</span><br><span class=\"line\">    pageItf: PageOrders2,</span><br><span class=\"line\">    ...</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure></p>\n<p>在取消订单操作时，只要赋值：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">PageOrders2.refresh = true;</span><br></pre></td></tr></table></figure></p>\n<p>这样下次进入orders2页时，就会刷新列表，并把PageOrders2.refresh置回false。可以在浏览器控制台上操作试试看。<br>如果想要立刻刷新列表，也可以用<code>listItf.refresh()</code>操作。 <code>listItf</code>是<code>initPageList</code>返回值，是一个操作列表的接口，类似的操作还有显示下一页<code>listItf.loadMore()</code>，详见参考文档。</p>\n<h3 id=\"列表用于选择\"><a href=\"#列表用于选择\" class=\"headerlink\" title=\"列表用于选择\"></a>列表用于选择</h3><blockquote>\n<p>(choose-from-list)在首页上加一个“选择订单”按钮，点击后进入订单列表页，选择一项后返回首页，并显示订单内容。</p>\n</blockquote>\n<p>还是用”orders2”页，我们在index.js中定义页面接口如下（主要是choose方法和onChoose回调）：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">var PageOrders2 = &#123;</span><br><span class=\"line\">    ...</span><br><span class=\"line\">    // PageOrders2.choose(onChoose)</span><br><span class=\"line\">    // onChoose(order=&#123;id,dscr,...&#125;)</span><br><span class=\"line\">    choose: function (onChoose) &#123;</span><br><span class=\"line\">        this.chooseOpt_ = &#123;</span><br><span class=\"line\">            onChoose: onChoose</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        MUI.showPage(&apos;orders2&apos;);</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\"></span><br><span class=\"line\">    chooseOpt_: null // &#123;onChoose&#125;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure></p>\n<p>在页面orders2中：</p>\n<ul>\n<li>点击一个列表项时，调用onChoose回调</li>\n<li>页面隐藏时，清空chooseOpt_参数。</li>\n</ul>\n<p>示例：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">function initPageOrders2()</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    ...</span><br><span class=\"line\">    var pageItf_ = PageOrders2;</span><br><span class=\"line\">    jpage.on(&quot;pagehide&quot;, onPageHide);</span><br><span class=\"line\"></span><br><span class=\"line\">    function li_click(ev)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        var order = ev.data;</span><br><span class=\"line\">        if (pageItf_.chooseOpt_) &#123;</span><br><span class=\"line\">            pageItf_.chooseOpt_.onChoose(order);</span><br><span class=\"line\">            return false;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        // 正常点击操作 </span><br><span class=\"line\">        ...</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    function onPageHide()</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        pageItf_.chooseOpt_ = null;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>我们回到首页，在浏览器控制台中模拟调用：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">PageOrders2.choose(function (order) &#123;</span><br><span class=\"line\">    // 处理order</span><br><span class=\"line\">    app_alert(&apos;选择了订单: id=&apos; + order.id);</span><br><span class=\"line\">    history.back(); // 由于进入列表选择时会离开当前页面，这时应返回</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure></p>\n<p>进入页面orders，选择一项后返回并继续操作。</p>\n<h3 id=\"显示多个列表\"><a href=\"#显示多个列表\" class=\"headerlink\" title=\"显示多个列表\"></a>显示多个列表</h3><p>本节学习导航栏加多个列表这一常见模式。</p>\n<blockquote>\n<p>在示例应用时，订单列表页便按照订单状态，分成“待服务”和“已完成”两栏，分别对应一个列表。 我们将练习页面orders2也改造成支持分栏的样式。</p>\n</blockquote>\n<p>首先，我们熟悉下后端列表查询的接口。 筋斗云后端接口支持业务查询协议，可以使用cond参数才指定查询条件：</p>\n<ul>\n<li>取待服务订单：callSvr(“Ordr.query”, {cond: “status=’CR’”});</li>\n<li>取已完成/已取消订单：callSvr(“Ordr.query”, {cond: “status=’RE’ or status=’CA’”});</li>\n</ul>\n<p>我们现在使用的是在mockdata.js中定义的模拟接口，已经模拟了上面两个调用。<br>我们在页面中增加导航栏及列表：(page/orders2.html)<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;div mui-initfn=&quot;initPageOrders2&quot; mui-script=&quot;orders2.js&quot;&gt;</span><br><span class=\"line\">    &lt;div class=&quot;hd&quot;&gt;</span><br><span class=\"line\">        ...</span><br><span class=\"line\">        &lt;div class=&quot;mui-navbar&quot;&gt;</span><br><span class=\"line\">            &lt;a href=&quot;javascript:;&quot; mui-linkto=&quot;#lst1&quot;&gt;待服务&lt;/a&gt;</span><br><span class=\"line\">            &lt;a href=&quot;javascript:;&quot; mui-linkto=&quot;#lst2&quot;&gt;已完成&lt;/a&gt;</span><br><span class=\"line\">        &lt;/div&gt;</span><br><span class=\"line\">    &lt;/div&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">    &lt;div class=&quot;bd&quot;&gt;</span><br><span class=\"line\">        &lt;div id=&quot;lst1&quot; class=&quot;weui_cells weui_cells_access&quot;&gt;&lt;/div&gt;</span><br><span class=\"line\">        &lt;div id=&quot;lst2&quot; class=&quot;weui_cells weui_cells_access&quot;&gt;&lt;/div&gt;</span><br><span class=\"line\">    &lt;/div&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">    ...</span><br><span class=\"line\">&lt;/div&gt;</span><br></pre></td></tr></table></figure></p>\n<p>框架提供导航栏组件，以CSS类”mui-navbar”标识，通过属性”mui-linkto”分别指向本页中的两个列表，点击时可自动切换。 我们把导航栏放在hd中，让整个bd作为列表容器。这是一种很方便的做法，如果把导航栏放在bd中，还要一个div作为列表容器，且要计算它的合适高度。<br>初始化列表做些修改，指定新的navRef, listRef，用onGetQueryParam来指定查询条件：(page/orders2.js)<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">var listItf = initPageList(jpage, &#123;</span><br><span class=\"line\">    ...</span><br><span class=\"line\">    navRef: &quot;.mui-navbar&quot;,</span><br><span class=\"line\">    listRef: &quot;#lst1,#lst2&quot;,</span><br><span class=\"line\">    onGetQueryParam: function (jlst, queryParam) &#123;</span><br><span class=\"line\">        queryParam.ac = &quot;Ordr.query&quot;;</span><br><span class=\"line\">        var id = jlst.attr(&quot;id&quot;);</span><br><span class=\"line\">        if (id == &quot;lst1&quot;) &#123;</span><br><span class=\"line\">            queryParam.cond = &quot;status=&apos;CR&apos;)&quot;;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        else if (id == &quot;lst2&quot;) &#123;</span><br><span class=\"line\">            queryParam.cond = &quot;status=&apos;RE&apos; OR status=&apos;CA&apos;&quot;;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\"></span><br><span class=\"line\">    ...</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure></p>\n<p>6.6 分页列表的接口适配<br>上面学习了易用强大的分页列表，支持分页的后端接口使用的是筋斗云的规范，返回列表像这样：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">    list: [</span><br><span class=\"line\">        &#123;field1: &quot;val1&quot;, field2: &quot;val2&quot;&#125;,</span><br><span class=\"line\">        &#123;field1: &quot;val3&quot;, field2: &quot;val4&quot;&#125;,</span><br><span class=\"line\">    ],</span><br><span class=\"line\">    nextkey: 2</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>上面用list字段返回列表。另外还支持一种等价的压缩表格式，使用h(表头)/d(数据)数组，如下：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">    h: [ &quot;field1&quot;,&quot;field2&quot; ],</span><br><span class=\"line\">    d: [ [&quot;val1&quot;,&quot;val2&quot;], [&quot;val3&quot;,&quot;val4&quot;], ... ]</span><br><span class=\"line\">    nextkey: 2</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>返回列表如果没到最后一页，需要返回nextkey字段，用于请求下一页时的”_pagekey”参数。 请求通过”_pagesz”参数指定页大小，通过”_pagekey”参数取下一页。<br>如果你遇到的后端分页列表接口设计不符合上述规则，则需要通过接口适配来使用分页列表框架，即让返回数据符合上面的规范，一般是设置好list/nextkey字段，或者是h/d/nextkey字段。             </p>\n<blockquote>\n<p>后端分页机制为(jquery-easyui datagrid分页机制):</p>\n<ul>\n<li>请求时通过参数page, rows分别表示页码，页大小，如 page=1&amp;rows=20</li>\n<li>返回数据通过字段total表示总数, rows表示列表数据，如 { total: 83, rows: [ {…}, … ] }</li>\n</ul>\n</blockquote>\n<p>要求通过接口适配，不变动前面列表页面orders2的代码，让该页面仍能正常工作。<br>我们先来制作一下模拟数据，在mockdata.js中，修改”Ordr.query”部分：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&quot;Ordr.query&quot;: function (param, postParam) &#123;</span><br><span class=\"line\">    var arr = orders;</span><br><span class=\"line\">    var ret = &#123;total: arr.length, rows: []&#125;;</span><br><span class=\"line\">    var pagesz = param.rows || 20;</span><br><span class=\"line\">    var pagekey = param.page || 1;</span><br><span class=\"line\"></span><br><span class=\"line\">    for (var n=0, i=(pagekey-1)*pagesz; n&lt;pagesz &amp;&amp; i&lt;arr.length; ++n, ++i) &#123;</span><br><span class=\"line\">        ret.rows.push(arr[arr.length-i-1]);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    return [0, ret];</span><br><span class=\"line\">&#125;,</span><br></pre></td></tr></table></figure></p>\n<p>这样就可以模拟了，试试<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">callSvrSync(&quot;Ordr.query&quot;);</span><br><span class=\"line\">callSvrSync(&quot;Ordr.query&quot;, &#123;page: 2, rows: 10&#125;);</span><br></pre></td></tr></table></figure></p>\n<p>注意：上面返回数据的基本格式仍然是筋斗云框架的格式，即成功返回[0, 数据]，失败返回[错误码，错误信息]。 如果不是这样的格式，请阅读前面介绍过的“接口适配”章节去配置<code>MUI.callSvrExt</code>。<br>在app.js中设置为initPageList设置缺省选项：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$.extend(initPageList.options, &#123;</span><br><span class=\"line\">    pageszName: &quot;rows&quot;,</span><br><span class=\"line\">    pagekeyName: &quot;page&quot;,</span><br><span class=\"line\">    // 设置 data.list, data.nextkey (如果是最后一页则不要设置); 注意pagekey可以为空</span><br><span class=\"line\">    onGetData: function (data, pagesz, pagekey) &#123;</span><br><span class=\"line\">        data.list = data.rows;</span><br><span class=\"line\">        if (pagekey == null)</span><br><span class=\"line\">            pagekey = 1;</span><br><span class=\"line\">        if (data.total &gt;  pagesz * pagekey)</span><br><span class=\"line\">            data.nextkey = pagekey + 1;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure></p>\n<p>在onGetData回调中，设置data.list及data.nextkey属性（如果是最后一页则不要设置）。<br>注意：app.js与index.js的区别是，前者适用于项目下的所有应用，而index.js只是index.html这个H5应用的主程序。<br>配置后，项目下所有列表都将应用这个适配规则。如果只是个别列表适配需要调整，可以在调用initPageList时指定这些选项，如：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">var listItf = initPageList(jpage, &#123;</span><br><span class=\"line\">    ...</span><br><span class=\"line\"></span><br><span class=\"line\">    pageszName: &apos;rows&apos;,</span><br><span class=\"line\">    pagekeyName: &apos;page&apos;,</span><br><span class=\"line\">    onGetData: ...</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure></p>\n<p>考虑这样一种情况，后端就返回一个列表如<code>[ {...}, {...} ]</code>，不支持分页，那么是否可以使用分页列表？</p>\n<p>答案是仍然可用，initPageList支持一个纯数组，它将被当成列表的最后一页处理，无法上拉加载，但仍支持下拉刷新。</p>\n<h2 id=\"创建多个H5应用\"><a href=\"#创建多个H5应用\" class=\"headerlink\" title=\"创建多个H5应用\"></a>创建多个H5应用</h2><blockquote>\n<p>在示例项目中，只有一个应用即index.html。 实际在一个H5项目中，常常需要多个应用，例如给用户使用的手机客户端应用、给员工使用的员工端应用等。 我们将在同一项目下再创建一个新的“员工端”应用。</p>\n</blockquote>\n<p>筋斗云要求每个H5应用有个内部名称(appName)， 在示例应用中，appName定义为user，表示用户端，假如定义员工端应用的内部名称为emp，我们创建这些文件：</p>\n<ul>\n<li>新建H5主文件，emp.html, emp.js, emp.css</li>\n<li>新建逻辑页目录，名为emp，在这个目录下创建逻辑页。</li>\n<li>项目下所有H5应用共用的逻辑放在文件app.js中，共用的样式放在文件app.css中。 第三方库文件，一般放在lib目录下，每个应用均可引用。</li>\n</ul>\n<p>在emp.js中正确配置：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$.extend(MUI.options, &#123;</span><br><span class=\"line\">    appName: &quot;emp&quot;,</span><br><span class=\"line\">    homePage: &quot;#home&quot;,</span><br><span class=\"line\">    pageFolder: &quot;emp&quot;,</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure></p>\n<p>应用内部名称appName将会在callSvr发起的调用中，自动通过URL参数_app传给后端。 后端可以根据应用不同，建议使用不同的cookie名来区分，这样即使浏览器同时打开这两个应用，也不会有冲突。<br>关于代码放到哪个文件中，原则如下：</p>\n<ul>\n<li>逻辑页专用的内容，放到逻辑页的html/js文件中。</li>\n<li>H5应用专用的内容，或多个逻辑页共享的内容，放到H5主文件html/js/css中。</li>\n<li>项目下所有H5应用共享的内容，放到app.js/app.css中。<h2 id=\"H5应用优化\"><a href=\"#H5应用优化\" class=\"headerlink\" title=\"H5应用优化\"></a>H5应用优化</h2>目前我们运行的H5应用直接是在项目下的server目录中，这称为开发版本，没有进行优化。 在生产环境下，一般会将开发版本进行优化，生成发布版本后上线，可提升H5应用性能。</li>\n</ul>\n<h3 id=\"用webcc编译H5应用\"><a href=\"#用webcc编译H5应用\" class=\"headerlink\" title=\"用webcc编译H5应用\"></a>用webcc编译H5应用</h3><blockquote>\n<p>使用webcc工具，编译项目下的server目录，生成发布版本目录”output_web”。</p>\n</blockquote>\n<p>作为一个WEB应用，发布时最常见的需求是JS/CSS/HTML文件合并和压缩(minify)。 H5应用自身用的index.js/index.css文件可以内嵌到主文件index.html中，常用的逻辑页面（包括html/css文件）也可以内嵌到index.html中来。<br>筋斗云通过名为webcc的工具进行应用优化，也称为编译。 本章详细介绍可参考官方文档”webcc”。<br>我们先看怎么运行它。 webcc是php工具，必须先安装php环境(版本5.4或更高)； 在Windows系统上，建议安装git，它自带的git-bash环境模拟了简单的linux/unix环境，如果已安装mingw或cygwin也可以。<br>webcc一般要求源代码使用git管理，通过git命令查询源文件列表及版本差异，实现增量编译、自动化发布等功能。 如果你已用git管理项目，则在项目目录中打开git-bash(或其它linux shell环境)，运行命令：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ php tool/webcc.php server</span><br></pre></td></tr></table></figure></p>\n<p>上面server是待编译的开发版本目录，里面有所有开发的内容。运行后生成发布版本目录”output_web”。<br>如果项目未使用git管理，则要求指定源文件列表，在运行webcc之前必须先设置环境变量WEBCC_LS_CMD，例如：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ export WEBCC_LS_CMD=&apos;find . -type f&apos;</span><br></pre></td></tr></table></figure></p>\n<p>注意：上面命令会将目录下所有文件都编译并发布，应确保清除目录下无用的文件。 如果你使用的是svn管理项目，则需要把”.svn”目录过滤掉以免生成到发布目录：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ export WEBCC_LS_CMD=&apos;find . -type f | grep -v .svn&apos;</span><br></pre></td></tr></table></figure></p>\n<p>或者使用svn命令精确列表哪些文件要发布：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ export WEBCC_LS_CMD=&apos;svn ls -R&apos;</span><br></pre></td></tr></table></figure></p>\n<p>至于编译生成的发布目录和源目录有哪些不同，下面将讲述。</p>\n<h3 id=\"webcc配置解读\"><a href=\"#webcc配置解读\" class=\"headerlink\" title=\"webcc配置解读\"></a>webcc配置解读</h3><p>在示例应用的server目录下，有一个webcc.conf.php的配置文件，里面定义了优化策略，一般无需修改：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$RULES = [</span><br><span class=\"line\">    &apos;*.html&apos; =&gt; &apos;HASH&apos;,</span><br><span class=\"line\">    ...</span><br><span class=\"line\">];</span><br></pre></td></tr></table></figure></p>\n<p>第一条规则是server目录下(不包括子目录)的所有html文件，即所有H5应用，执行HASH规则，对于html文件，会处理其中的webcc标记。<br>在示例应用中，我们在index.html中查找webcc，可以看到有这些标记：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;!-- WEBCC_BEGIN MERGE=lib 外部库 &#123;&#123;&#123;--&gt;</span><br><span class=\"line\">    &lt;link rel=&quot;stylesheet&quot; href=&quot;lib/weui.min.css&quot; /&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">    &lt;script src=&quot;lib/jquery-1.11.1.min.js&quot;&gt;&lt;/script&gt;</span><br><span class=\"line\">    &lt;script src=&quot;lib/jquery.touchSwipe.min.js&quot;&gt;&lt;/script&gt;</span><br><span class=\"line\">&lt;!-- WEBCC_END &#125;&#125;&#125;--&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;!-- WEBCC_BEGIN MERGE=lib-app 内部库 &#123;&#123;&#123;--&gt;</span><br><span class=\"line\">    mui.css, app.css等css文件...</span><br><span class=\"line\">    app_fw.js, app.js等js文件...</span><br><span class=\"line\">&lt;!-- WEBCC_END &#125;&#125;&#125;--&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;!-- WEBCC_BEGIN MERGE 应用专用 &#123;&#123;&#123;--&gt;</span><br><span class=\"line\">    &lt;link rel=&quot;stylesheet&quot; href=&quot;index.css&quot; /&gt;</span><br><span class=\"line\">    &lt;script src=&quot;index.js&quot;&gt;&lt;/script&gt;</span><br><span class=\"line\">&lt;!-- WEBCC_END &#125;&#125;&#125;--&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">...</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;!-- WEBCC_BEGIN &#123;&#123;&#123; embeded pages --&gt;</span><br><span class=\"line\">&lt;!-- WEBCC_USE_THIS</span><br><span class=\"line\">WEBCC_CMD mergePage -minify yes page/home.html page/login.html page/login1.html page/me.html</span><br><span class=\"line\">WEBCC_END &#125;&#125;&#125; --&gt;</span><br></pre></td></tr></table></figure></p>\n<p>先看外部库、内部库，它们分别被放置在标记WEBCC_BEGIN MERGE=xxx / WEBCC_END之中。 这意味着其中的css, js文件会被合并到一起，压缩后生成一个文件xxx.js或xxx.css。<br>外部库表示第三方库，如果应用中用到了其它库，且文件大小并不大，可以放置到这一块中，以便多个库合并成一个文件优化下载。 内部库是筋斗云框架自身及你的项目内所有H5应用的通用部分(app.js, app.css)。<br>应用专用就是当前H5应用用到的js/css。使用的webcc标记与前面比，没有指定”MERGE=xxx”，只指定了”MERGE”，这表示合并其中内容到当前文件，即把index.css/index.js内嵌到index.html文件中。<br>最后一块是内嵌逻辑页，用”WEBCC_USE_THIS”标记和”mergePage”命令指定了一些逻辑页，这些页面一般是最常用的页面，这个html及其引用的js文件将被直接内嵌到index.html中。 框架在加载逻辑页时，如果发现已内置于主html中则优先使用内置页，否则就触发缺页中断从而远程加载。          </p>\n<h2 id=\"H5应用发布上线\"><a href=\"#H5应用发布上线\" class=\"headerlink\" title=\"H5应用发布上线\"></a>H5应用发布上线</h2><p>上一章介绍了H5应用的编译优化，生成了发布目录，配置好WEB服务器后，将发布目录上传到服务器即可完成发布。<br>为了H5应用程序升级后客户能及时更新，建议将H5应用的主html文件及逻辑页面文件夹下html/js文件的缓存策略设置为”no-cache”。 （在开发环境下，一般建议所有文件都设置为不缓存。）<br>建议使用Apache或nginx作为筋斗云H5应用线上生产环境的WEB服务器。 项目下已有专为这两种服务器的配置，即为Apache用的.htaccess文件，以及为nginx准备的.ht.nginx文件。</p>\n<blockquote>\n<p>配置Web服务器，访问H5应用，在Chrome浏览器的网络监控中查看请求，要求：</p>\n<ul>\n<li>H5应用的index.html文件，以及逻辑页如page/home.html, page/home.js文件，HTTP响应中设置了”no-cache”策略。 当再次刷新应用时，HTTP响应为”304 Not Modified”（确保Chrome网络监控页面下的”Disable cache”选项未勾选）。</li>\n<li>其它js/css文件，HTTP响应中未设置”no-cache”策略，再次刷新H5应用时，不访问服务器。<br>示例如下：<img src=\"/img/7.png\" alt=\"img7\"><br>如果使用Apache服务器，应配置项目下允许.htaccess文件，比如<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;Directory /var/www/html/myproject&gt;</span><br><span class=\"line\">    AllowOverride All</span><br><span class=\"line\">&lt;/Directory&gt;</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n</blockquote>\n<p>如果使用nginx，可以把项目下的.ht.nginx文件包含到nginx的主配置文件中。注意一些路径可能需要修改。<br>如果使用其它WEB服务器（如IIS），应手工作相应的配置。<br>此外，对所有html/css/js这些文本文档都应设置gzip压缩，注意图片文件一般不设置gzip压缩，因为图片有自己的压缩算法。           </p>\n<h3 id=\"自动化差量发布\"><a href=\"#自动化差量发布\" class=\"headerlink\" title=\"自动化差量发布\"></a>自动化差量发布</h3><blockquote>\n<p>编写和运行项目下的build_web.sh文件做为上线工具，运行它实现自动编译和将新近修改的内容上线。</p>\n</blockquote>\n<p>如果希望每次修改一些内容后，可以快速将差异部分上线，不必每次都上传所有文件，可以使用筋斗云自带的上线工具。<br>筋斗云框架支持WEB应用自动化发布，并可差量更新。 目前差量更新依赖git工具，要求源目录及编译生成的发布目录均使用git管理，每次只上传与线上版本差异的部分。 本章详细介绍可参考官方文档”webcc”中的”jdcloud-build”模块。<br>自动化发布支持ftp/git两种方式，前者只需服务器提供ftp上传帐号，后者需要服务器提供git-push权限。 本章介绍git方式，安全可靠且版本可任意回溯。ftp方式只需修改若干参数，可参考官方文档。<br>我们的示例项目名为myproject，已使用git管理。 先创建发布版本库(又称online版本库), 使用git管理，定名称为myproject-online，习惯上与目录myproject放在同一父目录下:<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ git init myproject-online</span><br></pre></td></tr></table></figure></p>\n<p>在线上服务器上设置ftp帐号或git帐号。使用git发布时，一般配置好用ssh证书登录，避免每次上线时输入密码。<br>将tool/git_init.sh上传服务器，用它创建线上目录：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ git_init.sh myproject</span><br></pre></td></tr></table></figure></p>\n<p>编写项目根目录下的build_web.sh脚本：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#!/bin/sh</span><br><span class=\"line\"></span><br><span class=\"line\">export OUT_DIR=../myproject-online</span><br><span class=\"line\">export GIT_PATH=www@myserver:myproject</span><br><span class=\"line\">tool/jdcloud-build.sh</span><br></pre></td></tr></table></figure></p>\n<p>在Windows平台上，打开git shell运行build_web.sh即可上线。</p>\n<h2 id=\"制作原生APP\"><a href=\"#制作原生APP\" class=\"headerlink\" title=\"制作原生APP\"></a>制作原生APP</h2><p>H5应用可以打包生成苹果或安卓原生应用，一般也称为混合应用程序(Hybird App)。<br>并不是所有的H5应用都适合打包成原生应用，如果把一个普通的手机网站包装成原生应用，即使它制作的外观像是原生应用， 但切换页面时的网页刷新和加载导致速度慢、费流量、体验差，并不适合制作APP，而且像苹果应用市场等也容易拒绝此类APP上架。 为了接近原生应用的用户体验，可打包的H5应用应是支持多逻辑页的单网页应用，也就是变脸式应用。<br>我们制作的原生应用最大的特点是它与H5应用是分离的，从而在应用市场上架后仍可随时轻松升级应用。 这种应用我们也把它称为原生壳。</p>\n<h3 id=\"编译原生壳\"><a href=\"#编译原生壳\" class=\"headerlink\" title=\"编译原生壳\"></a>编译原生壳</h3><blockquote>\n<ul>\n<li>一次开发，多平台运行：将我们制作的H5应用打包生成原生APP安装到安卓及苹果手机上。</li>\n<li>一次上线，轻松升级：更新H5应用并上线，查看已安装的原生应用是否已自动及时更新。</li>\n</ul>\n</blockquote>\n<p>准备工作：</p>\n<ul>\n<li>云编译环境，安装Intel XDK，注册好用户帐号。</li>\n<li>安卓和苹果的应用证书。安卓证书可以自行制作，苹果证书须注册苹果开发者帐号后生成。</li>\n</ul>\n<p>使用Intel XDK的最大挑战是网络。在国内访问可能有问题，或者很慢，或者连不上。必要时可以使用VPN代理等手段连接。<br>打开Intel XDK，创建一个新的”Html5+Cordova”项目：<img src=\"/img/xdk1.png\" alt=\"xdk1\"><br>点左上角的”PROJECTS”，进入项目设置，里面有插件管理(Plugin Management)，编译设置(Build Settings)和图标及启动画面设置(Launch Icons and Splash Screens)。 插件是各种手机原生语言开发的库，比如相机、支付宝及微信支付等，本节不做重点介绍。图标和启动画面比较简单，准备好图片选上就行。<br>编译设置中要注意需要每个平台分别设置，请特别注意：</p>\n<ul>\n<li>在访问权限中，在”Navigation”栏中，设置为”*”，表示允许访问外网地址。</li>\n<li>安卓及苹果的开发证书在软件右上角用户帐号中先添加好，才能在编译设置中选择。</li>\n<li>安卓有个选项“Optimize with crosswalk”，用于把浏览器与应用一起打包以便在各种安卓手机上有良好的兼容性，缺点是生成的包要大20M。 练习时可不选，实际项目中建议选上。<br><img src=\"/img/xdk2.png\" alt=\"xdk2\"><br>xdk项目目录下的文件intelxdk.config.additions.xml中，设置上H5应用的地址，加上这句：<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;content src=&quot;http://myserver/myproject/index.html?cordova=1&quot; /&gt;</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<p>注意，H5应用后面加上参数cordova={壳版本}，框架将识别这个参数，进入原生应用模式，自动加载插件接口。<br>还有找到debuggable选项把它设置为true，以便可以之后在电脑上连接设备调试H5应用。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;preference name=&quot;debuggable&quot; value=&quot;true&quot; /&gt;</span><br></pre></td></tr></table></figure></p>\n<p>配置好后，进入编译页，开始编译。<br><img src=\"/img/xdk3.png\" alt=\"xdk3\"><br>编译好后，先不要立即安装到手机上，还有重要的一步，将插件接口更新到H5应用中去，这样在H5应用中可调用原生功能。</p>\n<h4 id=\"更新原生插件接口到H5应用。\"><a href=\"#更新原生插件接口到H5应用。\" class=\"headerlink\" title=\"更新原生插件接口到H5应用。\"></a>更新原生插件接口到H5应用。</h4><p>用winzip等工具解压生成的apk名或ipa包（可以先改名为.zip文件再点开），在安卓apk包的assets/www目录中（或苹果ipa包的Payload/{应用名}.app/www目录下），找到以下三个文件或目录：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cordova.js</span><br><span class=\"line\">cordova_plugins.js</span><br><span class=\"line\">plugins/ （整个目录）</span><br></pre></td></tr></table></figure></p>\n<p>把安卓APP中的这些文件复制到H5应用的目录server/cordova下面，把苹果APP中的这些文件复制到server/cordova-ios下面。这样就完成了H5应用中设置原生插件接口。<br>注意：当H5项目中有多个应用时，plugins目录直接取并集即可，而cordova_plugins.js文件需要小心合并。<br>这时将apk包或ipa包安装到手机上，打开应用程序，看看是否能正常运行。<br>我们在H5应用中书写代码时，可以检查全局变量g_cordova。 例如，想要仅在原生应用中显示某个页面，在微信或浏览器中访问时提示错误：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">if (! g_cordova) &#123;</span><br><span class=\"line\">    app_alert(&quot;本功能请在APP中点击进入&quot;);</span><br><span class=\"line\">    return;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">MUI.showPage(&quot;#xxx&quot;);</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"壳版本管理\"><a href=\"#壳版本管理\" class=\"headerlink\" title=\"壳版本管理\"></a>壳版本管理</h3><p>请牢牢记住，由于原生壳与H5应用的分离，用户安装的用户壳可能是旧版本的，而线上的H5应用永远是最新版本。<br>假如在原生壳中新增加了插件，应增加壳版本号。 操作上也可将壳版本等同于原生应用的版本代码（安卓叫App Version Code，苹果叫CF Bundle Version），那么要注意插件变动时，一定也要变动原生应用版本。         </p>\n<blockquote>\n<p>需求：新版本壳中增加了某插件，希望安装旧版本壳的用户在用到此插件时，提示更新APP。</p>\n</blockquote>\n<p>假定当前壳版本为1，注意在配置文件intelxdk.config.additions.xml中修改壳版本，假如为2：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;content src=&quot;http://myserver/myproject/index.html?cordova=2&quot; /&gt;</span><br></pre></td></tr></table></figure></p>\n<p>然后编译好新版本安装包。 由于插件变化了，仍然需要更新原生插件接口到H5应用，将新的插件合并到H5应用的cordova或cordova-ios目录中。<br>注意cordova_plugins.js文件定义H5应用可用哪些插件，需要手工合并和设置版本。<br>假设我们在用户端上新增加了一个微信分享插件，cordova_plugins.js文件如下：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">module.exports = [</span><br><span class=\"line\">    ...,</span><br><span class=\"line\">    // 以下为新增部分：</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        &quot;file&quot;: &quot;plugins/com.xxx.weixin/www/weixin.js&quot;,</span><br><span class=\"line\">        &quot;id&quot;: &quot;com.xxx.weixin&quot;,</span><br><span class=\"line\">        &quot;clobbers&quot;: [</span><br><span class=\"line\">            &quot;navigator.weixin&quot;</span><br><span class=\"line\">        ]</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">]</span><br></pre></td></tr></table></figure></p>\n<p>前面提到过，每个筋斗云H5应用都有一个惟一的应用名(MUI.options.appName)，例如用户端设置应用名为”user”。 我们为新的插件加上filter属性：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">module.exports = [</span><br><span class=\"line\">    ...,</span><br><span class=\"line\">    // 以下为新增部分：</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        &quot;file&quot;: &quot;plugins/com.xxx.weixin/www/weixin.js&quot;,</span><br><span class=\"line\">        &quot;id&quot;: &quot;com.xxx.weixin&quot;,</span><br><span class=\"line\">        &quot;clobbers&quot;: [</span><br><span class=\"line\">            &quot;navigator.weixin&quot;</span><br><span class=\"line\">        ]</span><br><span class=\"line\">        // 指定客户端应用(名为user)从壳版本2开始支持该插件</span><br><span class=\"line\">        &quot;filter&quot;: [ [&quot;user&quot;, 2] ]</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">]</span><br><span class=\"line\">// 新加上这一句处理版本</span><br><span class=\"line\">filterCordovaModule(module);</span><br></pre></td></tr></table></figure></p>\n<p>filter属性的格式为<code>[ [app1, minVer?=1, maxVer?=9999], ...]</code>, 仅当应用名匹配且版本在minVer/maxVer之间才使用。 如果未指定filter，则表示加载该插件。 假定还有个员工端应用名为emp，在壳版本300时增加了该插件，则可以设置：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&quot;filter&quot;: [ [&quot;user&quot;, 2], [&quot;emp&quot;, 300] ]</span><br></pre></td></tr></table></figure></p>\n<p>这样，不同的H5应用版本加载的插件是不一样的，要在浏览器中测试查看每个壳版本分别加载了哪些插件，可以直接访问带cordova参数的H5应用地址如：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">http://myserver/myproject/index.html?cordova=1</span><br></pre></td></tr></table></figure></p>\n<p>然后在Web控制台中执行：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cordova.require(&apos;cordova/plugin_list&apos;)</span><br></pre></td></tr></table></figure></p>\n<p>最后，我们在H5应用中检查插件是否可用，以及提示用户升级：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">if (navigator.weixin == null) &#123;</span><br><span class=\"line\">    app_alert(&quot;您的APP版本太旧，请升级后使用本功能。&quot;);</span><br><span class=\"line\">    return;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">// 调用新插件的功能。</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"调试原生应用\"><a href=\"#调试原生应用\" class=\"headerlink\" title=\"调试原生应用\"></a>调试原生应用</h3><p>由于原生应用调试复杂，只要不是原生插件本身的问题，尽量先在电脑浏览器上调试。<br>对于只能在手机上运行的功能，注意加些调试代码，让它也在网页中也能模拟运行。 比如微信分享后可以领取红包，为了在普通浏览器中可调试，可以这样做：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">if (! g_cordova) &#123;</span><br><span class=\"line\">    // 模拟代码</span><br><span class=\"line\">    if (g_args.mock) &#123;</span><br><span class=\"line\">        if (confirm(&quot;模拟分享?&quot;))</span><br><span class=\"line\">            onShareOk();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    app_alert(&quot;必须在App中运行&quot;);</span><br><span class=\"line\">    return;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">微信分享(成功后回调 onShareOk);</span><br><span class=\"line\"></span><br><span class=\"line\">function onShareOk()</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    // 领取红包</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>g_args.mock表示在URL参数中有”?mock=1”时走模拟分支。这样绝大多数问题都不用在手机上调试。<br>如果在电脑浏览器上运行正常，但在手机应用中运行出错，需要尝试在设备上调试H5应用。 对于安卓应用，可在Chrome中调试手机应用。注意在编译壳的选项中，我们曾设置过：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;preference name=&quot;debuggable&quot; value=&quot;true&quot; /&gt;</span><br></pre></td></tr></table></figure></p>\n<p>在安卓手机上，打开USB调试选项（请自行搜索如果进入开发者模式及打开USB调试），连上电脑， 然后在Chrome地址栏中输入chrome://inspect即可进入设备调试。<br>注意：由于google的站点国内很难访问，如果调试页面打不开，须通过代理访问。<br>调试苹果应用，得用苹果电脑上的Safari浏览器。 由于苹果要求只有使用开发证书的App才能调试，所以要么用开发证书重新编译个用于调试的App壳，要么更简单地直接在Safari浏览器中调试。 先开启iPhone/iPad上的Safari的远程调试功能：“设置 &gt; Safari &gt; 高级” &gt; Web检查器选中。 将iphone插入电脑，弹出是否允许调试，选择“是”。 打开Safari，在“开发”菜单下可见有一行是 该手机的名字，里面显示有可调试的页面。<br>如果是首次在mac上使用safari时，应先激活“开发工具”菜单项： (menu)preference(偏好设置)-&gt;高级-&gt;在菜单栏中显示“开发”菜单。<br>如果以上调试环境很难配置成功，那么只能通过在代码中加alert来一点点逼近问题。<br>如果确定问题出在原生插件上，或者需要修改原生插件，那么只有搭建cordova工程，调试原生java或object-c代码。</p>\n","site":{"data":{}},"excerpt":"","more":"<p>当需要制作一款手机应用，希望它既可以在手机浏览器或微信公众号之类的轻应用平台使用，也可以在安卓、苹果等手机上安装使用，由于各平台技术栈完全不同，光前端就需要至少三套人马在各平台各自为战，开发和维护成本极高。现在你多了一种用H5技术制作全平台手机应用的选择，不仅极大的降低开发成本，而且由于H5技术源于已经用了至少20多年的网页技术，门槛也远低于才兴起几年的手机平台开发技术。架构师在选型时会纠结，又想优雅的做全平台应用，又担心用网页技术制作的手机应用的体验到底行不行。<br>川剧中的变脸艺术，如行云流水般切换脸谱，令人惊叹。 如果把手机应用中的每个页面看成一张脸谱，在操作时我们也希望像变脸表演一样有着轻松流畅的体验。 而用传统的网页技术制作的仿手机应用和原生手机应用的体验尚有较大差距，主要原因是每个页面都是一张网页，在操作时有大量网页加载和刷新，不流畅且浪费大量流量。<br>对于网页刷新问题的解决方案是使用Ajax技术制作交互式无刷新网页。早在1998年前后，微软的Outlook Web Access成为第一个应用了Ajax技术的成功的商业应用程序，2005年以后，随着谷歌地图、Gmail等交互式网页应用的流行，Ajax技术也开始流行起来，也诞生了“单网页应用(SPA)”这个概念。<br>在手机应用领域，由于早期手机性能弱，做应用程序基本只能使用原生开发语言，学习门槛很高。随着手机性能的增强和H5技术的流行，已经可以把“单网页应用”技术应用到手机上，让整个应用就是一个网页，而原本一张张相互链接的网页变成了H5应用中的一个个可流畅切换的逻辑页面，消除了网页加载，操作体验接近手机原生应用。<br><strong>这种支持多逻辑页面的具有流畅的操作体验的H5单网页应用，我们将它称为变脸式应用。</strong><br>对手机单网页应用有以下常见误解：</p>\n<ul>\n<li>只能做做小工具，不适合做大型商业应用。这是因为没有使用好的模块化开发模型，去找个支持大型开发的好框架先。</li>\n<li>耗内存，耗流量，性能低下。某些单页应用简单地将所有逻辑页一次性全部加载，没有逻辑页优化，也没有做好缓存、图片等优化，而招此骂名。解决方法是找个支持动态加载逻辑页、支持H5应用优化的开发框架。</li>\n<li>没法做搜索引擎优化(SEO)。以前做网页的同时要兼顾做SEO，现在其实可以将做网页应用和做SEO分离了，对SEO可以单独设计，从而做的更好。这就像用户访问一个站点，如果是手机访问就跳转手机版，如果是电脑访问就跳转电脑版，而如果是爬虫机器人访问，也可以备好一套狗粮，不再和人吃的一样。   </li>\n</ul>\n<p><strong>筋斗云前端框架是一个变脸式单网页应用的开源开发框架，</strong> 它以页面路由和接口调用为核心，提供多逻辑页支持和远程接口调用封装，同时对制作安卓、苹果原生应用也提供良好的支持，因而也是一个全平台H5应用框架。</p>\n<h2 id=\"创建项目\"><a href=\"#创建项目\" class=\"headerlink\" title=\"创建项目\"></a>创建项目</h2><blockquote>\n<p>用筋斗云前端框架创建一个H5应用项目myproject，在浏览器运行起来。     </p>\n</blockquote>\n<p>先从github上下载开源的筋斗云前端框架及示例应用：<a href=\"https://github.com/skyshore2001/jdcloud-m\" target=\"_blank\" rel=\"noopener\">https://github.com/skyshore2001/jdcloud-m</a><br>建议安装git工具直接下载，便于以后更新，例如直接创建H5应用项目叫myproject<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git clone https://github.com/skyshore2001/jdcloud-m.git myproject</span><br></pre></td></tr></table></figure></p>\n<p>如果github访问困难，也可以用这个git仓库<br> <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">http://dacatec.com/git/jdcloud-m.git</span><br></pre></td></tr></table></figure></p>\n<p>下载后，myproject是我们的项目目录。</p>\n<ul>\n<li>子目录server是H5应用目录，开发主要集中在这里。<ul>\n<li>在server目录下，lib目录下的js/css文件都属于框架使用的文件，不宜随意修改，其中app_fw.js是筋斗云前端框架的核心部分。</li>\n<li>page目录是默认的逻辑页目录，比如首页、登录页、订单列表等逻辑页的html和js文件都放在这里。</li>\n<li>cordova目录是用于制作原生手机app时使用的。筋斗云框架支持全平台应用，即一套H5代码，可同时制作安卓应用、苹果应用、微信微站等。</li>\n</ul>\n</li>\n<li>tool是用于优化和发布的工具，之后在站点上线优化时介绍。  </li>\n</ul>\n<p>设置WEB服务器（如Apache/nginx/IIS等），添加虚拟目录myproject, 指向myproject/server目录，这时，就可以直接运行起前端应用<br> <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">http://localhost:8080/</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"页面\"><a href=\"#页面\" class=\"headerlink\" title=\"页面\"></a>页面</h2><h3 id=\"GetStart-HelloWorld\"><a href=\"#GetStart-HelloWorld\" class=\"headerlink\" title=\"GetStart - HelloWorld\"></a>GetStart - HelloWorld</h3><blockquote>\n<p>上一节我们创建了新的H5应用项目，本节我们制作一个仅显示”hello world”的逻辑页面，在首页中添加一个链接，点击可进入这个页面。</p>\n</blockquote>\n<p>制作一个逻辑页面，存到文件page/hello.html:<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;div&gt;</span><br><span class=\"line\">    &lt;div class=&quot;hd&quot;&gt;</span><br><span class=\"line\">        &lt;h2&gt;HelloWorld&lt;/h2&gt;</span><br><span class=\"line\">    &lt;/div&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">    &lt;div class=&quot;bd&quot;&gt;</span><br><span class=\"line\">        &lt;p&gt;Hello, world&lt;/p&gt;</span><br><span class=\"line\">    &lt;/div&gt;</span><br><span class=\"line\">&lt;/div&gt;</span><br></pre></td></tr></table></figure></p>\n<p>这是个html片段，其中<code>class=&quot;hd&quot;</code>与<code>class=&quot;bd&quot;</code>分别代表逻辑页的标题栏和主体部分。一般应保持这样的结构，即使不需要标题栏，也建议保留hd这个div，将其设置隐藏即可(<code>style=&quot;display:none&quot;</code>)。<br>在首页page/home.html中添加一个链接过来：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">...</span><br><span class=\"line\">&lt;div class=&quot;bd&quot;&gt;</span><br><span class=\"line\">    ...</span><br><span class=\"line\">    &lt;li&gt;&lt;a href=&quot;#hello&quot;&gt;Hello&lt;/a&gt;&lt;/li&gt;</span><br><span class=\"line\">&lt;/div&gt;</span><br></pre></td></tr></table></figure></p>\n<p>在浏览器时刷新H5应用进入首页，点击Hello链接，就可以看到新逻辑页Hello显示出来了。 筋斗云可以动态加载逻辑页，并为它指定id为”hello”(即页面文件名)。 除了使用链接，还可以通过JS代码<code>MUI.showPage(&quot;#hello&quot;)</code>来显示该页。<br>点击浏览器的返回按钮，可以回到首页。在返回时，没有网页刷新的过程，这也是变脸式应用的典型特点。<br>我们也可以在逻辑页的hd部分里为应用添加返回按钮，如：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;div class=&quot;hd&quot;&gt;</span><br><span class=\"line\">    &lt;!-- 加上返回按钮 --&gt;</span><br><span class=\"line\">    &lt;a href=&quot;javascript:history.back();&quot; class=&quot;icon icon-back&quot;&gt;&lt;/a&gt;</span><br><span class=\"line\">    &lt;h2&gt;Hello&lt;/h2&gt;</span><br><span class=\"line\">&lt;/div&gt;</span><br></pre></td></tr></table></figure></p>\n<p>改好后，不必刷新页面重新从首页进入，直接在浏览器控制台中输入<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">MUI.reloadPage();</span><br></pre></td></tr></table></figure></p>\n<p>就可以直接查看到更新后的逻辑页了。<br><strong>筋斗云支持逻辑页热更新技术，</strong> 可以实时热更新当前页面，并保留当前的应用状态。这一技巧在开发调试逻辑页时非常好用，尤其对于复杂的H5应用，不必从首页操作进来。类似的技巧还有卸载一个逻辑页，以便再进入时可重新初始化<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">MUI.unloadPage(); // 卸载当前页</span><br><span class=\"line\">MUI.unloadPage(&quot;hello&quot;); // 卸载指定页</span><br></pre></td></tr></table></figure></p>\n<p>如果你嫌首页上加的链接太难看，可以使用框架默认集成的weui样式库来润色它，如<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;div class=&quot;weui_cells&quot; style=&quot;margin-top:100px&quot;&gt;</span><br><span class=\"line\">    ...</span><br><span class=\"line\">    &lt;!-- 显示为一个button --&gt;</span><br><span class=\"line\">    &lt;li class=&quot;weui_cell&quot; style=&quot;display:block&quot;&gt;&lt;a href=&quot;#hello&quot; class=&quot;weui_btn weui_btn_default&quot;&gt;Hello&lt;/a&gt;&lt;/li&gt;</span><br><span class=\"line\">&lt;/div&gt;</span><br></pre></td></tr></table></figure></p>\n<p>同样地，在修改好后，直接在控制台输入<code>MUI.reloadPage()</code>看效果。<br>筋斗云的核心是页面路由(showPage)和接口调用(callSvr)。它自身不提供移动UI样式库，而是通过集成的weui样式库来提供移动UI样式。 weui是一套同微信原生视觉体验一致的基础样式库，由微信官方团队开发，关于weui的使用可以参考 <strong><a href=\"https://weui.io/\" target=\"_blank\" rel=\"noopener\">https://weui.io/</a></strong> 或自行搜索。 当然你也可以把它换成你自己喜欢的UI库。</p>\n<h3 id=\"为逻辑页添加样式和逻辑\"><a href=\"#为逻辑页添加样式和逻辑\" class=\"headerlink\" title=\"为逻辑页添加样式和逻辑\"></a>为逻辑页添加样式和逻辑</h3><blockquote>\n<p>上一节中，我们添加了一个逻辑页”hello”。现在我们通过CSS修改显示字体为红色，并在进入和退出页面时弹出提示框。</p>\n</blockquote>\n<p>为逻辑页设置样式，如果这个样式只在这个逻辑页使用，一般就在页面div中内嵌style标签。 页面的逻辑写在与页面同名的js文件中，在页面div上使用mui-script属性指定js文件，并通过mui-initfn标签指定页面初始化函数。<br>修改hello.html页面文件如下<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">    &lt;div mui-initfn=&quot;initPageHello&quot; mui-script=&quot;hello.js&quot;&gt;</span><br><span class=\"line\">    &lt;style&gt;</span><br><span class=\"line\">        p &#123;</span><br><span class=\"line\">            color: red;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &lt;/style&gt;</span><br><span class=\"line\">    &lt;div class=&quot;hd&quot;&gt;</span><br><span class=\"line\">        &lt;a href=&quot;javascript:history.back();&quot; class=&quot;icon icon-back&quot;&gt;&lt;/a&gt;</span><br><span class=\"line\">        &lt;h2&gt;HelloWorld&lt;/h2&gt;</span><br><span class=\"line\">    &lt;/div&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">    &lt;div class=&quot;bd&quot;&gt;</span><br><span class=\"line\">        &lt;p&gt;Hello, world&lt;/p&gt;</span><br><span class=\"line\">    &lt;/div&gt;</span><br><span class=\"line\">&lt;/div&gt;</span><br></pre></td></tr></table></figure></p>\n<p>在上例中，在内嵌的style标签中为”p”标签指定样式，让它显示红色。 你可能有疑问，这样写会不会影响其它页面中的p标签的样式呢？<br><strong>筋斗云支持自动限定逻辑页样式作用域。</strong> 即框架保证这个样式只会用于当前逻辑页，不会污染到其它页面。<br>上面逻辑页中通过mui-script=”hello.js”指定了js文件，创建page/hello.js文件如下：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">function initPageHello() &#123;</span><br><span class=\"line\">    var jpage = $(this);</span><br><span class=\"line\">    jpage.on(&quot;pagebeforeshow&quot;, onBeforeShow);</span><br><span class=\"line\">    jpage.on(&quot;pagehide&quot;, onHide);</span><br><span class=\"line\"></span><br><span class=\"line\">    function onBeforeShow() &#123;</span><br><span class=\"line\">        app_alert(&quot;before show&quot;);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    function onHide() &#123;</span><br><span class=\"line\">        app_alert(&quot;hide&quot;);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>上面演示了逻辑页进入和退出时常用的事件处理，很容易理解。 一般从后端取数据的操作都习惯放在pagebeforeshow事件中处理。另外还有pageshow, pagecreate等事件。<br>app_alert是框架提供的异步弹出框函数，可用于提示消息(类似alert)、确认消息(类似confirm)、问询消息(类似prompt)等，弹出框界面也可自由定制，后面还将介绍。                         </p>\n<h3 id=\"页面栈\"><a href=\"#页面栈\" class=\"headerlink\" title=\"页面栈\"></a>页面栈</h3><p>框架支持逻辑页面的前进和后退，甚至可以用手势左右划动页面来后退或前进。                 </p>\n<blockquote>\n<p>本节讲述一个常见需求：提交订单后进入下一页面，这时点返回按钮（不管是点浏览器的返回按钮还是页面左上方的返回按钮）， 应该跳过提交页面，返回再前一个页面。</p>\n</blockquote>\n<p>在示例应用首页上，点击”立即下单”，进入”创建订单”页，点击”创建订单”按钮，进入”订单列表”页。 这时点击返回按钮，我们看到，它跳过了”创建订单”页，直接返回了再前面一页即首页。<br>我们查看”创建订单”页的代码(createOrder.js)，其实只需在切换页面前，调用<code>MUI.popPageStack()</code><br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">function api_OrdrAdd(data) &#123;</span><br><span class=\"line\">    app_alert(&quot;订单创建成功!&quot;, &quot;i&quot;, function () &#123;</span><br><span class=\"line\">        // 到新页后，点返回不允许回到当前页</span><br><span class=\"line\">        MUI.popPageStack();</span><br><span class=\"line\">        PageOrders.refresh = true;</span><br><span class=\"line\">        MUI.showPage(&quot;#orders&quot;);</span><br><span class=\"line\">    &#125;, g_cfg.WAIT);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>如果想在回退时跳过两个页面（比如提交过程有两步分了两个页面），调用<code>MUI.popPageStack(2)</code>即可。</p>\n<h2 id=\"调用后端接口\"><a href=\"#调用后端接口\" class=\"headerlink\" title=\"调用后端接口\"></a>调用后端接口</h2><p>调用后端接口是筋斗云框架提供的两大核心功能之一。                </p>\n<blockquote>\n<p>继续hello页面的例子，要求每次进入页面时，不是固定的显示”hello, world”，而是需要根据服务端的返回内容来显示hello的内容，比如”hello, skys”或是”hello, jdcloud”。</p>\n</blockquote>\n<p>我们先定义一个叫做”hello”的交互接口，由前端发起一个HTTP GET请求，比如<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">http://myserver/myproject/api.php?ac=hello</span><br></pre></td></tr></table></figure></p>\n<p>如果调用成功，后端返回JSON格式的数据<code>[0, &quot;jdcloud&quot;]</code>, 其中0是返回码，表示调用成功。如果调用失败，返回<code>[99, &quot;对不起，服务器爆炸了&quot;]</code>。<br>有了清晰的接口定义，前后端就可以并行开发了。 在前端，我们把页面稍作修改以动态显示hello的内容：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;div class=&quot;bd&quot;&gt;</span><br><span class=\"line\">    &lt;p&gt;Hello, &lt;span id=&quot;what&quot;&gt;&lt;/span&gt;&lt;/p&gt;</span><br><span class=\"line\">&lt;/div&gt;</span><br></pre></td></tr></table></figure></p>\n<p>再写一段逻辑，每当进入页面时调用hello接口并显示内容，我们选择onBeforeShow回调来做这件事：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">function initPageHello() &#123;</span><br><span class=\"line\">    var jpage = $(this);</span><br><span class=\"line\">    jpage.on(&quot;pagebeforeshow&quot;, onBeforeShow);</span><br><span class=\"line\"></span><br><span class=\"line\">    function onBeforeShow() &#123;</span><br><span class=\"line\">        callSvr(&quot;hello&quot;, api_hello);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    function api_hello(data) &#123;</span><br><span class=\"line\">        jpage.find(&quot;#what&quot;).html(data);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p><code>callSvr</code>是框架提供的一个重要函数，它封装了ajax调用的细节，完整的函数原型为：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">callSvr(ac, param?, fn?, postParam?, options?);</span><br></pre></td></tr></table></figure></p>\n<p>其中，ac是调用接口名，fn是回调函数，param和postParam分别是URL参数和POST参数。除ac外，其它参数均可省略。例如<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">callSvr(&quot;hello&quot;);</span><br><span class=\"line\">callSvr(&quot;hello&quot;, &#123;id: 1&#125;); // URL: hello?id=1</span><br><span class=\"line\">callSvr(&quot;hello&quot;, &#123;id: 1&#125;, api_hello); // function api_hello(data) &#123;&#125;</span><br><span class=\"line\">callSvr(&quot;hello&quot;, api_hello, &#123;name: &quot;hello&quot;&#125;);</span><br></pre></td></tr></table></figure></p>\n<p>回调函数api_hello仅在成功时被调用，参数data是实际数据，即<code>[0, data]</code>中的data部分，不包括返回码0。 当调用失败时，框架会统一处理，显示错误信息，无须操心。</p>\n<h3 id=\"使用模拟接口\"><a href=\"#使用模拟接口\" class=\"headerlink\" title=\"使用模拟接口\"></a>使用模拟接口</h3><p><strong>筋斗云支持模拟接口返回数据。</strong> 在mockdata.js中，可以设置接口的模拟返回数据<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">MUI.mockData = &#123;</span><br><span class=\"line\">    ...</span><br><span class=\"line\">    &quot;hello&quot;: [0, &quot;jdcloud&quot;]</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"调用真实接口\"><a href=\"#调用真实接口\" class=\"headerlink\" title=\"调用真实接口\"></a>调用真实接口</h3><p>在后端接口开发好后，我们可去掉对这个接口的模拟，直接远程调用服务端接口。这需要配置好后端接口的地址。<br>我们用php写一个简单的符合筋斗云接口规范的后端实现，通过名为”ac”的URL参数表示接口名，在server目录中创建文件api.php如下<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;?php</span><br><span class=\"line\"></span><br><span class=\"line\">@$ac = $_GET[&apos;ac&apos;];</span><br><span class=\"line\">if ($ac == &apos;hello&apos;) &#123;</span><br><span class=\"line\">    $what = &quot;jdcloud @ &quot; . time();</span><br><span class=\"line\">    echo json_encode([0, $what]);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">else &#123;</span><br><span class=\"line\">    echo json_encode([1, &quot;bad ac&quot;]);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>配置好php的调用环境后，访问<code>http://localhost/myproject/api.php?ac=hello</code>，输出类似这样：<code>[0,&quot;jdcloud @ 1483526151&quot;]</code><br>回到前端，我们在app.js中设置服务端接口地址：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$.extend(MUI.options, &#123;</span><br><span class=\"line\">    serverUrl: &quot;api.php&quot;,</span><br><span class=\"line\">    serverUrlAc: &quot;ac&quot;</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure></p>\n<p>以上讲述的是符合筋斗云接口规范的接口调用设置，如果不符合该规范，请阅读下一节“接口适配”。</p>\n<h3 id=\"接口适配\"><a href=\"#接口适配\" class=\"headerlink\" title=\"接口适配\"></a>接口适配</h3><p>在上例中，假定了后端接口兼容筋斗云接口规范，例如返回格式为<code>[0, jsonData]</code>及<code>[非0, 错误信息]</code>。 如果接口协议不兼容，则需要做接口适配。<br>接口适配的目标是通过callSvr函数更加简练地调用后台接口，同时达到：</p>\n<ul>\n<li>调用出错统一处理，例如未认证错跳转到登录页，其它错误弹出错误提示框等。</li>\n<li>写代码时只需要处理调用成功后返回的数据，不用每次调用都处理各种错误。</li>\n</ul>\n<blockquote>\n<p>适配以下接口协议规范，约定接口返回格式为：{code, msg, data}， 例如上例中的hello接口，调用成功时返回：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">    &quot;code&quot;:&quot;0&quot;,</span><br><span class=\"line\">    &quot;msg&quot;:&quot;success&quot;,</span><br><span class=\"line\">    &quot;data&quot;:&quot;jdcloud&quot;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n</blockquote>\n<p>失败返回：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">    &quot;code&quot;:&quot;99&quot;,</span><br><span class=\"line\">    &quot;msg&quot;:&quot;对不起，服务器爆炸了&quot;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>这时需要对callSvr进行适配，可以在app.js中，设置 <code>MUI.callSvrExt</code>如下:<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">MUI.callSvrExt[&apos;default&apos;] = &#123;</span><br><span class=\"line\">       makeUrl: function(ac) &#123;</span><br><span class=\"line\">           return &apos;http://hostname/lcapi/&apos; + ac;</span><br><span class=\"line\">       &#125;,</span><br><span class=\"line\">       dataFilter: function (data) &#123;</span><br><span class=\"line\">           if ($.isPlainObject(data) &amp;&amp; data.code !== undefined) &#123;</span><br><span class=\"line\">               if (data.code == 0)</span><br><span class=\"line\">                   return data.data;</span><br><span class=\"line\">               if (this.noex)</span><br><span class=\"line\">                   return false;</span><br><span class=\"line\">               app_alert(&quot;操作失败：&quot; + data.msg, &quot;e&quot;);</span><br><span class=\"line\">           &#125;</span><br><span class=\"line\">           else &#123;</span><br><span class=\"line\">               app_alert(&quot;服务器通讯协议异常!&quot;, &quot;e&quot;); // 格式不对</span><br><span class=\"line\">           &#125;</span><br><span class=\"line\">       &#125;</span><br><span class=\"line\">   &#125;;</span><br></pre></td></tr></table></figure></p>\n<p>我们在mockdata.js中设置好模拟数据用于测试：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">MUI.mockData = &#123;</span><br><span class=\"line\">    &quot;User.get&quot;: &#123;code: 0, msg: &quot;success&quot;, data: user&#125;,</span><br><span class=\"line\">    &quot;hello&quot;: &#123;code: 0, msg: &quot;success&quot;, data:&quot;myworld&quot;&#125;</span><br><span class=\"line\">    ...</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>上例中，User.get接口在显示首页是会调用，所以和”hello”接口一并模拟下。<br>测试接口调用：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">callSvr(&quot;hello&quot;, console.log);</span><br></pre></td></tr></table></figure></p>\n<p>或<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">callSvrSync(&quot;hello&quot;);</span><br></pre></td></tr></table></figure></p>\n<p>callSvrSync是callSvr的同步调用版本，它直接等到调用完成才返回，且返回值就是调用成功返回的数据。<br>在接口适配完成后，应用层代码不用去做任何修改。 进入页面看看，是不是和上节的运行结果是一样的。</p>\n<h2 id=\"进入与退出应用\"><a href=\"#进入与退出应用\" class=\"headerlink\" title=\"进入与退出应用\"></a>进入与退出应用</h2><p>进入应用后，框架会自动设置一些全局变量，如g_args, g_data等。<br>问：如何在H5应用中获取URL参数？<br>全局变量g_args保存了H5应用的URL参数。 例如URL为<code>http://myserver/myproject/index.html?orderId=10&amp;dscr=上门洗车</code>，则该对象有以下值：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">g_args.orderId=10; // 注意：如果参数是个数值，则自动转为数值类型，不再是字符串。</span><br><span class=\"line\">g_args.dscr=&quot;上门洗车&quot;; // 对字符串会自动进行URL解码。</span><br></pre></td></tr></table></figure></p>\n<p>问：全局数据存放到哪里有规范吗？<br>全局数据建议都放在变量g_data中，而不是到处创建全局变量，这样查看这个变量就可以了解H5应用状态。 框架也会设置一些全局数据进去（例如userInfo保存登录后的返回数据等）。另外，如果是逻辑页之间传递信息，不要用全局变量，应使用逻辑页接口，后面章节将介绍。<br>对于全局配置信息，一般统一存到名为g_cfg的全局变量中。<br>查看H5应用JS文件index.js，有它们的声明，比如：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">var g_data = &#123;</span><br><span class=\"line\">       userInfo : null, // &#123;id, name, uname=phone&#125;</span><br><span class=\"line\">   &#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">   var g_cfg = &#123;</span><br><span class=\"line\">       WAIT: 3000, // 3s</span><br><span class=\"line\">   &#125;;</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"入口页\"><a href=\"#入口页\" class=\"headerlink\" title=\"入口页\"></a>入口页</h3><blockquote>\n<p>在地址栏直接输入<a href=\"http://server/app/#hello，会发现它会跳转到首页，我们希望可直接进入前面我们制作的hello页面。\" target=\"_blank\" rel=\"noopener\">http://server/app/#hello，会发现它会跳转到首页，我们希望可直接进入前面我们制作的hello页面。</a></p>\n</blockquote>\n<p>打开示例H5应用客户端index.html对应的逻辑文件即index.js，会发现一开始有如下设置：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$.extend(MUI.options, &#123;</span><br><span class=\"line\">    appName: &quot;user&quot;,</span><br><span class=\"line\">    homePage: &quot;#home&quot;,</span><br><span class=\"line\">    pageFolder: &quot;page&quot;,</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">MUI.validateEntry([</span><br><span class=\"line\">    &quot;#home&quot;,</span><br><span class=\"line\">    &quot;#me&quot;,</span><br><span class=\"line\">    &quot;#order&quot;</span><br><span class=\"line\">]);</span><br></pre></td></tr></table></figure></p>\n<p>第一句是设置一些框架的选项<code>MUI.options</code>，注意框架提供的功能多以MUI开头。 这里设置了H5应用内部名称为”uesr”（表示客户端，以后若有员工端等应用可区分开），首页名称是”#home”，逻辑页目录为”page”，也即首页实际文件为”page/home.html”.<br>第二句用<code>MUI.validateEntry</code>指定允许的入口逻辑页，如果不是从这些逻辑页进入应用，则自动跳转到首页。 如果注释掉这句，则是允许从任意逻辑页进入应用。<br>要想直接输入URL就能进入hello页，只要将它暴露成入口页即可，把它加到入口页列表中来：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">MUI.validateEntry([</span><br><span class=\"line\">    &quot;#home&quot;,</span><br><span class=\"line\">    &quot;#me&quot;,</span><br><span class=\"line\">    &quot;#order&quot;,</span><br><span class=\"line\">    &quot;#hello&quot;</span><br><span class=\"line\">]);</span><br></pre></td></tr></table></figure></p>\n<p>注意我们现在制作的是H5应用，不是单纯用于静态展示的网页，很多状态信息（比如已登录的信息）存储在全局变量之中。 如果允许任意逻辑页进入应用，很可能因状态错误而显示出错。 每个入口页都是个对外的接口，可通过URL直接访问，如无必要，尽量不要开放。</p>\n<h3 id=\"登录与退出\"><a href=\"#登录与退出\" class=\"headerlink\" title=\"登录与退出\"></a>登录与退出</h3><p>登录和退出是多数应用都需要的功能。<br>我们在筋斗云示例应用中，可以看到登录退出相关的代码：(index.js文件)<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">function handleLogin(data)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    MUI.handleLogin(data);</span><br><span class=\"line\">    // g_data.userInfo已赋值</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">function logoutUser()</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    // 这里可以删除当前用户相关的storage, cookie等。</span><br><span class=\"line\">    MUI.logout();</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p><code>handleLogin</code>将作为回调函数在所有登录成功时统一调用，退出登录则调用<code>logoutUser</code>函数。<br>筋斗云提供这些函数：</p>\n<ul>\n<li>MUI.showLogin: 显示登录页。登录页由选项MUI.options.loginPage指定, 缺省为”#login”.</li>\n<li>MUI.tryAutoLogin: 自动登录。下节介绍。</li>\n<li>MUI.handleLogin: 处理登录后页面跳转，同时给g_data.userInfo赋值，应用程序里一般通过判断 g_data.userInfo != null 判断是否已登录。</li>\n<li>MUI.logout: 退出登录。</li>\n</ul>\n<p>筋斗云示例应用提供了两个登录页面，分别是手机号/动态验证码登录(page/login.html)和用户名/密码登录(page/login1.html)。<br>以较简单的用户名/密码登录页面(login1)为例，简化后的代码如下：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">// HTML:(page/login1.html)</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;div mui-initfn=&quot;initPageLogin1&quot; mui-script=&quot;login1.js&quot;&gt;</span><br><span class=\"line\">    ...</span><br><span class=\"line\">    &lt;form action=&quot;login&quot; class=&quot;bd&quot;&gt;</span><br><span class=\"line\">        手机号 &lt;input name=&quot;uname&quot; required placeholder=&quot;11位手机号&quot;&gt;</span><br><span class=\"line\">        密码 &lt;input type=&quot;password&quot; name=&quot;pwd&quot; required placeholder=&quot;4位以上密码&quot; minlength=4&gt;</span><br><span class=\"line\">        &lt;button type=&quot;submit&quot; class=&quot;weui_btn weui_btn_primary&quot;&gt;登录&lt;/button&gt;</span><br><span class=\"line\">    &lt;/form&gt;</span><br><span class=\"line\">&lt;/div&gt;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">//JS: (page/login1.js)</span><br><span class=\"line\"></span><br><span class=\"line\">function initPageLogin1() &#123;</span><br><span class=\"line\">    var jpage = $(this);</span><br><span class=\"line\">    var jf = jpage.find(&quot;form&quot;);</span><br><span class=\"line\">    MUI.setFormSubmit(jf, handleLogin);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>这里使用了callSvr之外另一个常用的接口调用方式，即通过form提交调用后端接口的MUI.setFormSubmit，其用法是：</p>\n<ul>\n<li>在HTML的form标签中，用action属性定义接口名，这里是”login”</li>\n<li>接口参数通过form中带name属性的组件设置（这里有”uname”, “pwd”参数），注意默认情况下，form中的参数是通过POST方式发送到后端。</li>\n<li>在MUI.setFormSubmit中指定调用成功时的回调函数为”handleLogin”，它与callSvr的回调一样。</li>\n</ul>\n<p>关于MUI.setFormSubmit的更多选项如合法性验证、计算字段赋值等，可查询参考文档。<br>要退出登录，调用前面定义过的<code>logoutUser</code>函数即可：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">jpage.find(&quot;#btnLogout&quot;).click(logoutUser);</span><br></pre></td></tr></table></figure></p>\n<p>退出会导致页面重刷新后进入入口页。要刷新H5应用，也可以直接调用：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">reloadSite();</span><br></pre></td></tr></table></figure></p>\n<p>如果你的应用的退出接口不同，可自行在logoutUser函数中实现MUI.logout的功能：</p>\n<ul>\n<li>向后端调用<code>logout</code>接口；</li>\n<li>清除登录状态，如置空<code>g_data.userInfo</code>，删除本地存储中的token等信息；</li>\n<li>再调用<code>reloadSite</code>函数刷新应用回到入口。<h3 id=\"自动跳转登录页和会话重用\"><a href=\"#自动跳转登录页和会话重用\" class=\"headerlink\" title=\"自动跳转登录页和会话重用\"></a>自动跳转登录页和会话重用</h3>为了避免每次打开或刷新应用都要再登录，会话重用是实现短期免登录进入的常用方法。             <blockquote>\n<ul>\n<li>打开H5应用时（从任意入口页进入），如果刚刚登录过，则可以免登录直接打开入口页。 如果尚未登录过，则跳转至登录页面，待登录成功后跳转到入口页。</li>\n<li>点退出登录回到首页，如果首页必须登录，则到登录页。</li>\n<li>在操作过程中，一旦调用某个接口返回了未登录错误（实际中可能是客户端掉线、服务端重启等情况），应自动跳转到登录页。</li>\n</ul>\n</blockquote>\n</li>\n</ul>\n<p>要实现这样的需求，需要有以下接口设计：</p>\n<ul>\n<li>登录接口login，登录成功返回用户信息，例如<code>login(uname, pwd) -&gt; [0, {用户信息如id, name, ...}]</code>. 登录接口可以支持多种方式登录，如用户名/密码，手机号/动态验证码，以及下一节要讲述的自动登录token等。</li>\n<li>其它所有要求用户登录后才能调用的接口，在未登录时返回统一的错误码: <code>fn1() -&gt; [2, &quot;未登录&quot;]</code>（筋斗云中未登录错误码为2）<br>退出接口<code>ogout() -&gt; [0, &quot;OK&quot;]</code>.</li>\n<li>有一个特别的检测是否需要登录的接口，如果已登录，返回与login接口相同的信息，例如接口<code>User.get() -&gt; [0, {用户信息如id, name, ...}]</code>.</li>\n</ul>\n<p>这个特别的检测登录接口的主要用途是，通过会话重用（session），实现短时间内免登录。 会话重用一般由服务端设置cookie实现，由于浏览器会自动记住cookie，只要服务端会话未过期且用户未退出(logout)，就可以一直免登录进入。 即使不使用cookie而用URL参数（比如token）的，H5应用只要自行记住这个token到本地存储，下次打开时重用即可。<br>这样，前端进入H5应用时的逻辑就是：</p>\n<ul>\n<li>调用检测用户登录的接口User.get，调用成功后将返回信息存储到全局变量g_data.userInfo中，并显示入口页；</li>\n<li>如果调用失败，则显示登录页；</li>\n<li>在登录成功后，跳转回一开始要进入的入口页。</li>\n</ul>\n<p>这些逻辑由框架函数MUI.tryAutoLogin和MUI.handleLogin提供，应注意把这段逻辑放置到muiInit事件中，以便在显示任意页面之前调用。 我们在筋斗云示例应用中，可以看到这样的代码：(index.js中)<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$(document).on(&quot;muiInit&quot;, myInit);</span><br><span class=\"line\"></span><br><span class=\"line\">function myInit() &#123;</span><br><span class=\"line\">    MUI.tryAutoLogin(handleLogin, &quot;User.get&quot;);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">function handleLogin(data) &#123;</span><br><span class=\"line\">    MUI.handleLogin(data);</span><br><span class=\"line\">    // g_data.userInfo已赋值</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>在MUI.tryAutoLogin中指定了检查会话重用的接口名为”User.get”，于是H5应用便有了会话重用的功能。 在模拟接口中，我们看到”User.get”接口模拟如下：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&quot;User.get&quot;: [0, user],</span><br></pre></td></tr></table></figure></p>\n<p>这表明模拟的是已登录过的状态，因此打开应用时可直接免登录进入。 我们把它改成返回”未登录”错误：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&quot;User.get&quot;: [2, &quot;no auth&quot;],</span><br></pre></td></tr></table></figure></p>\n<p>这时刷新H5应用，是不是进入了登录页？ 任意输入手机号和验证码可登录进来。进入页面”我”，点退出，看看是不是回到了登录页？<br>注意框架定义了“未认证错误”缺省错误码为2，如果要修改，可以用：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">window.E_NOAUTH = 2;</span><br></pre></td></tr></table></figure></p>\n<p>再看会话中断时的行为，由于进入订单列表页会调用接口”Ordr.query”，我们在浏览器控制台上修改模拟接口让它返回未登录错：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">MUI.mockData[&quot;Ordr.query&quot;] = [2, &quot;no auth&quot;];</span><br></pre></td></tr></table></figure></p>\n<p>进入订单列表页（如果之前已经打开过，可以下拉刷新下），看看是不是自动跳转到登录页了？<br>如果后端接口格式不是使用筋斗云调用规范，则需要按上节介绍自行适配接口，在其中添加自动跳转登录页的的逻辑，如：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">MUI.callSvrExt[&apos;default&apos;] = &#123;</span><br><span class=\"line\">       ...</span><br><span class=\"line\">       dataFilter: function (data) &#123;</span><br><span class=\"line\">           ...</span><br><span class=\"line\">           if (data.code == E_NOAUTH) &#123;</span><br><span class=\"line\">               MUI.showLogin();</span><br><span class=\"line\">               return;</span><br><span class=\"line\">           &#125;</span><br><span class=\"line\">       &#125;</span><br><span class=\"line\">   &#125;;</span><br></pre></td></tr></table></figure></p>\n<p>这样，框架可以确保未登录时（或已掉线、服务端重启等情况时）调用了后端需要登录的接口，可以自动跳转到登录页。<br>注意：调用<code>MUI.showLogin()</code>来显示登录页，而不要用<code>MUI.showPage(&quot;#login&quot;)</code>来写死页面，而且<code>MUI.showLogin</code>可以在登录成功后跳回登录前想进入的页面。 类似的还有<code>MUI.showHome()</code>来显示首页。<br>上面示例中，用MUI.tryAutoLogin要求进入应用必须先登录。如果某些入口页可以免登录直接进入，则应这样调用：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">function myInit()</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    MUI.tryAutoLogin(handleLogin, &quot;User.get&quot;, true); // 参数true表示允许未登录进入</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>这时应特别小心，可用<code>g_data.userInfo == null</code>判断是否为未登录。 从未登录的入口页进入其它需要登录才能展示的页面，也常常在pagebeforeshow事件中添加判断：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">function onPageBeforeShow(ev, opt)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    // 可能从一个未登录的页面跳转过来</span><br><span class=\"line\">    if (g_data.userInfo == null) &#123;</span><br><span class=\"line\">        MUI.showLogin();</span><br><span class=\"line\">        return;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    // 设置页面内容</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>注意：在MUI.tryAutoLogin中调用接口时，都使用的是同步调用且忽略错误。</p>\n<h3 id=\"自动登录\"><a href=\"#自动登录\" class=\"headerlink\" title=\"自动登录\"></a>自动登录</h3><p>自动登录是一个常见需求，基本上现在的手机应用，登录过一次后，下次都是免登录进入。<br>前面已经讲过通过会话重用，可以实现短时间内免登录。 通过对cookie设置较长的超时时间，且在后端长期保存会话数据，可以延长免登录的时间。<br>如果会话重用机制的实现并不可靠，比如过期、后端过载或重启等导致会话丢失，最好再设计专门的自动登录机制。 要实现自动登录，客户端必须将登录信息保存在本地。由于用户名、密码这些信息很敏感，不适合直接存储在客户端，一般通过token来实现自动登录。<br>需要后端login接口支持token，注意token参数要求通过POST参数传递的<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">login(uname, pwd) -&gt; &#123;_token, ...&#125; // 普通登录，额外返回_token字段</span><br><span class=\"line\">login()(token) -&gt; &#123;_token?, ...&#125; // 可以不再返回token</span><br></pre></td></tr></table></figure></p>\n<p>与之前的<code>login</code>接口相比，普通的登录方式可返回一个<code>_token</code>字段，将这个字段保存在客户端本地，下次就可以通过<code>login(token)</code>方式自动登录。 服务器在实现时，一般在token中包含了用户信息，token过期时间等信息，当然进行了加密，所以比较安全。<br>H5应用要实现的逻辑如下：</p>\n<ul>\n<li>进入应用时，先尝试会话重用，在会话重用失败后，再尝试自动登录</li>\n<li>如果在操作过程中用户掉线（如客户端长时间未操作导致会话超时），也可通过自动登录，对用户透明地实现恢复登录后继续操作。</li>\n</ul>\n<p>框架已经在MUI.tryAutoLogin函数及默认的后端接口适配中完成以上逻辑，只要服务端接口符合上面约定，无需额外代码。<br>我们来模拟接口，让User.get接口返回未登录，让login接口支持返回_token，看看H5应用的行为：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&quot;login&quot;: function (param, postParam) &#123;</span><br><span class=\"line\">    if (postParam.token) &#123;</span><br><span class=\"line\">        console.log(&quot;用token自动登录&quot;);</span><br><span class=\"line\">        return [0, user];</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    return [0, $.extend(&#123;_token: &quot;abcdefg&quot;&#125;, user)];</span><br><span class=\"line\">&#125;,</span><br><span class=\"line\">...</span><br><span class=\"line\">&quot;User.get&quot;: [2, &quot;no auth&quot;],</span><br></pre></td></tr></table></figure></p>\n<ul>\n<li>刷新H5应用，因为未登录过，正确进入登录页，注意看浏览器控制台的日志，只调用了”User.get”接口，失败后转到登录页。</li>\n<li>在成功登录一次后，再次刷新H5应用，发现可以直接进入应用了，看日志，先调用了”User.get”失败，然后尝试自动登录调用了”login”接口成功。</li>\n<li>直到去页面“我”点击“退出”，刷新H5应用才不再自动登录。</li>\n</ul>\n<p>如果是自行适配接口，只需将前面示例中跳转登录页的操作换成尝试自动登录，示例如下：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">MUI.callSvrExt[&apos;default&apos;] = &#123;</span><br><span class=\"line\">    ...</span><br><span class=\"line\">    dataFilter: function (data) &#123;</span><br><span class=\"line\">        ...</span><br><span class=\"line\">        if (data.code == E_NOAUTH) &#123;</span><br><span class=\"line\">            // 尝试自动登录，如果登录成功则重新发起当前请求；登录失败会自动转向登录页</span><br><span class=\"line\">            if (MUI.tryAutoLogin()) &#123;</span><br><span class=\"line\">                $.ajax(this);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            // MUI.showLogin();</span><br><span class=\"line\">            return;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure></p>\n<p>注意：<br>上述对会话重用和自动登录的支持，核心是进入应用时及应用掉线时调用<code>MUI.tryAutoLogin</code>函数，而它是基于筋斗云后端的接口设计。 如果后端接口设计不同，可自行来写一个tryAutoLogin函数，在进入应用时及应用掉线时调用。                </p>\n<p>特别地，在tryAutoLogin中调用接口，一般使用同步调用(选项<code>{async: false}</code>)，且忽略出错(选项<code>{noex:1}</code>)：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">var opt = &#123;async: false, noex: 1&#125;;</span><br><span class=\"line\">callSvr(&quot;User.get&quot;, $.noop, null, opt);</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"常用组件\"><a href=\"#常用组件\" class=\"headerlink\" title=\"常用组件\"></a>常用组件</h2><p>筋斗云框架有一些使用mui前缀的CSS类，包括</p>\n<ul>\n<li>mui-container H5应用容器，一般在HTML的body对象上设置。</li>\n<li>mui-page 逻辑页，由框架自动设置</li>\n<li>mui-btn 按钮，如果再叠加primary类，则表示显示为缺省按钮。</li>\n<li>mui-dialog 对话框</li>\n<li>mui-menu 菜单</li>\n<li>mui-navbar 导航栏</li>\n</ul>\n<p>注意：筋斗云框架不是UI组件库，它只提供极为有限的一些组件，更丰富的UI组件请使用weui库或其它第三方组件库。<br>如果想调整框架中组件的显示样式，一般在app.css文件中设置。</p>\n<h3 id=\"导航栏及图标\"><a href=\"#导航栏及图标\" class=\"headerlink\" title=\"导航栏及图标\"></a>导航栏及图标</h3><blockquote>\n<ul>\n<li>为H5应用底部导航栏上每项加上图标，且点中与未点中显示的图标不一样。<ul>\n<li>将小图标拼合成大图优化图标资源加载。</li>\n</ul>\n</li>\n</ul>\n</blockquote>\n<p>导航栏用CSS类”mui-navbar”标识。<br><img src=\"/img/navbar.png\" alt=\"navbar\"><br>这是订单列表页中的例子，用导航栏和几个列表构建一个多栏页面， 当点击一项时，框架会自动为该项添加CSS类”active”，并只显示”mui-linkto”属性指向的组件。 被指向的组件仅限于当前逻辑页面：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;div class=&quot;mui-navbar&quot;&gt;</span><br><span class=\"line\">    &lt;a mui-linkto=&quot;#lst1&quot;&gt;待服务&lt;/a&gt;</span><br><span class=\"line\">    &lt;a mui-linkto=&quot;#lst2&quot;&gt;已完成&lt;/a&gt;</span><br><span class=\"line\">&lt;/div&gt;</span><br></pre></td></tr></table></figure></p>\n<p>整个H5应用有一个底部导航，用id=”footer”标识，放置在H5应用的主html文件中，如：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;div id=&quot;footer&quot;&gt;</span><br><span class=\"line\">    &lt;a href=&quot;#home&quot; mui-opt=&quot;ani:&apos;none&apos;&quot;&gt;</span><br><span class=\"line\">        &lt;span&gt;首页&lt;/span&gt;</span><br><span class=\"line\">    &lt;/a&gt;</span><br><span class=\"line\">    &lt;a href=&quot;#orders&quot; mui-opt=&quot;ani:&apos;none&apos;&quot;&gt;</span><br><span class=\"line\">        &lt;span&gt;订单&lt;/span&gt;</span><br><span class=\"line\">    &lt;/a&gt;</span><br><span class=\"line\">    &lt;a href=&quot;#me&quot; mui-opt=&quot;ani:&apos;none&apos;&quot;&gt;</span><br><span class=\"line\">        &lt;span&gt;我&lt;/span&gt;</span><br><span class=\"line\">    &lt;/a&gt;</span><br><span class=\"line\">&lt;/div&gt;</span><br></pre></td></tr></table></figure></p>\n<p>底部导航可自动显示或隐藏，如果当前页面是在导航项中的，导航栏就会自动显示。 上面<code>mui-opt</code>属性用来指定显示页面的参数（参考<code>MUI.showPage</code>的参数），”ani:’none’”表示不显示动画切页效果。<br>如果要给导航中的每项加图片，可以用CSS类icon:<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;a href=&quot;#home&quot; mui-opt=&quot;ani:&apos;none&apos;&quot;&gt;</span><br><span class=\"line\">    &lt;i class=&quot;icon icon-home&quot;&gt;&lt;/i&gt;</span><br><span class=\"line\">    &lt;span&gt;首页&lt;/span&gt;</span><br><span class=\"line\">&lt;/a&gt;</span><br></pre></td></tr></table></figure></p>\n<p>定义一个CSS类icon-home为它指定图标即可。 由于点击一项时会自动给该项加上active类，所以要想控制当前选中项或未选中项显示不同的图片，可以设置：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">.icon-home &#123;</span><br><span class=\"line\">    background-image: url(icon/24/home.png);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">.active .icon-home &#123;</span><br><span class=\"line\">    background-image: url(icon/24/home-active.png);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>这些图标一般建议放在server/icon目录下，并最终在发布时优化拼合成一张大图，称为制作“精灵图”（sprite）。<br>对图标的CSS设置一般写在icon.css中，然后使用jdcloud-sprite工具生成拼合后的大图以及icon.out.css在H5应用中使用。 查看index.html可知它实际引用的是优化后的icon.out.css文件，icon.css只是作为源文件，用于生成icon.out.css。<br>在开发时，建议先把图标的CSS定义分别在icon.css与icon.out.css中各写一份。 待准备做优化时，只需在一台可制作精灵图的电脑上一次性生成icon.out.css比较方便。         </p>\n<h4 id=\"图标优化方法（制作精灵图）\"><a href=\"#图标优化方法（制作精灵图）\" class=\"headerlink\" title=\"图标优化方法（制作精灵图）\"></a>图标优化方法（制作精灵图）</h4><p>先安装imagemagick软件，确认在命令行中可以运行convert等命令。 安装好php 5.4或更高版本，然后在项目的tool目录下，运行命令：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">php jdcloud-sprite.php ../server/icon.css -2x -group -sprite icon/icon@2x.png</span><br></pre></td></tr></table></figure></p>\n<p>查看server/icon.out.css文件是否已更新？在server/icon目录下是否生成了拼合后的大图？<br>命令中参数-2x表示源图标都是2x图标，即显示为24x24大小的图标，其实际尺寸是48x48。 在手机上一般使用2x图标，否则会看出有些模糊。 参数-group表示按图标宽度分组拼合图片，这样效率更高些，也可以去掉这个参数。<br>其实在文件tool/Makefile中已经包含了这个命令，确保开发环境有make工具， 就可以在git-bash中直接运行下面命令来优化图标：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">./make-sprite.sh</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"简单对话框\"><a href=\"#简单对话框\" class=\"headerlink\" title=\"简单对话框\"></a>简单对话框</h3><p>框架提供的app_alert用于显示简单的提示框，类似alert/confirm/prompt这些函数， 只不过app_alert是异步的（调用后立即返回，需要通过回调函数来执行之后的操作），且可以定制显示样式。<br>在浏览器控制台里输入以下示例试试:<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">// 信息框，3秒后自动关闭</span><br><span class=\"line\">app_alert(&quot;操作成功&quot;, function () &#123;</span><br><span class=\"line\">    MUI.showPage(&quot;#orderInfo&quot;);</span><br><span class=\"line\">&#125;, &#123;timeoutInterval: 3000&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">// 错误框，&quot;e&quot;表示&quot;error&quot;</span><br><span class=\"line\">app_alert(&quot;操作失败&quot;, &quot;e&quot;);</span><br><span class=\"line\"></span><br><span class=\"line\">// 确认框(确定/取消)，&quot;q&quot;表示&quot;question&quot;</span><br><span class=\"line\">app_alert(&quot;立即付款?&quot;, &quot;q&quot;, function () &#123;</span><br><span class=\"line\">    MUI.showPage(&quot;#pay&quot;);</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">// 输入框, &quot;p&quot;表示&quot;prompt&quot;</span><br><span class=\"line\">app_alert(&quot;输入要查询的名字:&quot;, &quot;p&quot;, function (text) &#123;</span><br><span class=\"line\">    callSvr(&quot;Book.query&quot;, &#123;cond: &quot;name like &apos;%&quot; + text + &quot;%&apos;&#125;);</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure></p>\n<p>由于app_alert对话框的id固定为”muiAlert”，所以要定制显示样式，可对#muiAlert及其子对象直接设置CSS样式； 或者自已重新定义一个id为”muiAlert”的div，详见参考文档。</p>\n<h3 id=\"对话框\"><a href=\"#对话框\" class=\"headerlink\" title=\"对话框\"></a>对话框</h3><p>对话框与页面类似，一般放在逻辑页面中。使用CSS类”mui-dialog”标识对话框。app_alert显示的就是最简单的一类对话框，</p>\n<blockquote>\n<p>把“创建订单”页面(createOrder页)改写成一个对话框，放在首页中。在首页增加一个“创建订单对话框”按钮，点击后显示对话框。 效果如下：<img src=\"/img/dialog.png\" alt=\"dialog\">          </p>\n</blockquote>\n<p>在首页home.html中增加一个id=”dlgCreateOrder”的div组件：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;div mui-initfn=&quot;initPageHome&quot; mui-script=&quot;home.js&quot;&gt;</span><br><span class=\"line\">    ... hd, bd ...</span><br><span class=\"line\">        &lt;!--a href=&quot;#createOrder&quot;&gt;立即下单&lt;/a--&gt;</span><br><span class=\"line\">        &lt;a href=&quot;#dlgCreateOrder&quot;&gt;立即下单&lt;/a&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">    &lt;div class=&quot;mui-dialog&quot; id=&quot;dlgCreateOrder&quot; style=&quot;width:80%&quot;&gt;</span><br><span class=\"line\">        &lt;div class=&quot;hd&quot;&gt;</span><br><span class=\"line\">            &lt;h2&gt;创建订单&lt;/h2&gt;</span><br><span class=\"line\">        &lt;/div&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">        &lt;form class=&quot;bd&quot; action=&quot;Ordr.add&quot; style=&quot;padding:10px&quot;&gt;</span><br><span class=\"line\">            选择套餐:</span><br><span class=\"line\">            &lt;select name=&quot;dscr&quot;&gt;</span><br><span class=\"line\">                &lt;option value=&quot;基础套餐&quot; data-amount=128&gt;基础套餐 128元&lt;/option&gt;</span><br><span class=\"line\">                &lt;option value=&quot;精英套餐&quot; data-amount=228&gt;精英套餐 228元&lt;/option&gt;</span><br><span class=\"line\">            &lt;/select&gt;</span><br><span class=\"line\">            &lt;button id=&quot;btnCreateOrder&quot; class=&quot;mui-btn primary&quot;&gt;创建订单&lt;/button&gt;</span><br><span class=\"line\">            &lt;input type=&quot;text&quot; name=&quot;amount&quot; value=&quot;0&quot; style=&quot;display:none&quot;&gt;</span><br><span class=\"line\">        &lt;/form&gt;</span><br><span class=\"line\">    &lt;/div&gt;</span><br><span class=\"line\">&lt;/div&gt;</span><br></pre></td></tr></table></figure></p>\n<p>增加了一个链接指向它：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;a href=&quot;#dlgCreateOrder&quot;&gt;立即下单&lt;/a&gt;</span><br></pre></td></tr></table></figure></p>\n<p>注意：对话框的id以”dlg”开头，框架自动打开对话框而不是页面，点上面链接相当于执行：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">MUI.showDialog(&quot;#dlgCreateOrder&quot;);</span><br></pre></td></tr></table></figure></p>\n<p>重新进入应用，点首页上的按钮，可以看到对话框已经显示出来了，点击对话框背景可关闭对话框。 按钮上使用了框架提供的CSS类”mui-btn”标识按钮，再加了”primary”类展现为缺省建议点击的按钮。<br>在home.js中用MUI.setupDialog为对话框增加逻辑： 当用户选择一个套餐并点击创建订单时，调用”Ordr.add”接口（定义在form.action属性上）。 调用成功后，显示订单列表页，并关闭对话框(MUI.closeDialog)。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">function initPageHome()</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    ...</span><br><span class=\"line\"></span><br><span class=\"line\">    // 设置对话框初始化函数，一般名为 initDlgXXX</span><br><span class=\"line\">    MUI.setupDialog(jpage.find(&quot;#dlgCreateOrder&quot;), initDlgCreateOrder);</span><br><span class=\"line\">    </span><br><span class=\"line\">    function initDlgCreateOrder()</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        var jdlg = this;</span><br><span class=\"line\">        var jf = jdlg.find(&quot;form&quot;);</span><br><span class=\"line\">        MUI.setFormSubmit(jf, api_OrdrAdd, &#123;validate: onValidate&#125;);</span><br><span class=\"line\">        // 可以返回一个函数，每次显示时回调，类型&quot;pagebeforeshow&quot;回调。</span><br><span class=\"line\">        // 也可以直接return，没有返回值。</span><br><span class=\"line\">        return beforeShow;</span><br><span class=\"line\"></span><br><span class=\"line\">        function onValidate(jf)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            // 提交前，自动填写form中隐藏的amount字段</span><br><span class=\"line\">            var f = jf[0];</span><br><span class=\"line\">            f.amount.value = $(f.dscr).find(&quot;option:selected&quot;).attr(&quot;data-amount&quot;);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        function api_OrdrAdd(data)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            MUI.closeDialog(jdlg);</span><br><span class=\"line\">            app_alert(&quot;订单创建成功!&quot;, &quot;i&quot;, function () &#123;</span><br><span class=\"line\">                // 显示订单列表页</span><br><span class=\"line\">                PageOrders.refresh = true;</span><br><span class=\"line\">                MUI.showPage(&quot;#orders&quot;);</span><br><span class=\"line\">            &#125;);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        function beforeShow() &#123;</span><br><span class=\"line\">            // 每次打开对话框时清除之前选择。</span><br><span class=\"line\">            jf[0].reset();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>注意：</p>\n<ul>\n<li>MUI.setupDialog接受一个回调函数用于对话框初始化，它与页面初始化函数类似，我们定义一个函数名为initDlgCreateOrder。 这个函数如果有返回值，必须是一个函数用于显示时回调，相当于页面的”pagebeforeshow”回调函数。</li>\n<li>用MUI.setFormSubmit来与后端交互.<h3 id=\"菜单\"><a href=\"#菜单\" class=\"headerlink\" title=\"菜单\"></a>菜单</h3>菜单其实是一种特殊的对话框，显示一个菜单项列表。在框架中用CSS类”mui-menu”来标识它。<br>我们以订单详情页的右上角菜单为例讲解，效果是这样: <img src=\"/img/menu.png\" alt=\"menu\">        <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;div mui-initfn=&quot;initPageOrder&quot; mui-script=&quot;order.js&quot;&gt;</span><br><span class=\"line\">    &lt;div class=&quot;hd&quot;&gt;</span><br><span class=\"line\">        &lt;a href=&quot;javascript:hd_back();&quot; class=&quot;icon icon-back&quot;&gt;&lt;/a&gt;</span><br><span class=\"line\">        &lt;a href=&quot;#dlgMenu&quot; class=&quot;icon icon-menu&quot;&gt;&lt;/a&gt;</span><br><span class=\"line\">        &lt;h1&gt;订单明细&lt;/h1&gt;</span><br><span class=\"line\">    &lt;/div&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">    ...</span><br><span class=\"line\">    &lt;ul id=&quot;dlgMenu&quot; class=&quot;mui-menu top&quot;&gt;</span><br><span class=\"line\">        &lt;li id=&quot;mnuRefreshOrder&quot;&gt;&lt;i class=&quot;icon icon-refresh&quot;&gt;&lt;/i&gt;刷新&lt;/li&gt;</span><br><span class=\"line\">        &lt;li id=&quot;mnuCancelOrder&quot;&gt;&lt;i class=&quot;icon icon-delete&quot;&gt;&lt;/i&gt;取消订单&lt;/li&gt;</span><br><span class=\"line\">    &lt;/ul&gt;</span><br><span class=\"line\">&lt;/div&gt;</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<p>这个是典型的手机页，标题栏左右各一个按钮，分别在”hd”中用两个a标签定义。 左上角显示后退按钮，执行操作hd_back()，这个函数是框架提供的，和history.back()类似，增强的功能是如果无法回退，则会显示首页，适合用在标题栏回退按钮上。 右上角显示菜单按钮，它的href属性设置为菜单div的id，注意要以”dlg”开头，框架就会自动以对话框方式打开它。<br>在页面最后定义了id=dlgMenu的菜单，指定了CSS类为mui-menu标识显示为菜单，另一个类top标识菜单在右上角，如果没有它则和对话框一样，默认显示在页面中央。<br>在页面js文件中，只要给每个菜单项绑定事件就可以了。</p>\n<h2 id=\"分页列表框架\"><a href=\"#分页列表框架\" class=\"headerlink\" title=\"分页列表框架\"></a>分页列表框架</h2><p>本章介绍很常用的分页列表，详情可查阅官方参考文档中的”initPageList”函数介绍。</p>\n<h3 id=\"显示单个列表\"><a href=\"#显示单个列表\" class=\"headerlink\" title=\"显示单个列表\"></a>显示单个列表</h3><p>当列表预期可能很长时，一般应支持分页。分页列表在手机上的典型展现方式是支持上拉加载和下拉刷新。</p>\n<blockquote>\n<ul>\n<li>创建页面orders2，仿照示例应用中订单列表页(orders)。本节先不按订单状态分栏，只显示一个列表，支持上拉加载和下拉刷新。<ul>\n<li>点击订单列表中的一项，可以进入订单详情页。</li>\n</ul>\n</li>\n</ul>\n</blockquote>\n<p>我们先熟悉一下支持分页的列表查询接口。 在示例应用自带的模拟数据中，获取订单列表操作是支持分页的，在浏览器控制台上试试调用这些：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">callSvrSync(&quot;Ordr.query&quot;);</span><br><span class=\"line\">// 返回 &#123;nextkey: 20, list: [ &#123;id: 147, dscr: &quot;基础套餐&quot;, status: &quot;CR&quot;, ...&#125;, ...(共20条)] &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">// 取下一页：上次返回的nextkey字段用于本次请求的_pagekey参数</span><br><span class=\"line\">callSvrSync(&quot;Ordr.query&quot;, &#123;_pagekey: 20&#125;); </span><br><span class=\"line\">// 返回 &#123;nextkey: 40, list: [ ...(共20条)] &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">// 再取下一页</span><br><span class=\"line\">callSvrSync(&quot;Ordr.query&quot;, &#123;_pagekey: 40&#125;); </span><br><span class=\"line\">// 返回 &#123;list: [ ...(共8条)] &#125;，没有nextkey属性，说明已是最后一页。</span><br></pre></td></tr></table></figure></p>\n<p>默认每次返回20条数据，可以通过_pagesz参数控制每次返回的数据条目数，如<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">callSvrSync(&quot;Ordr.query&quot;, &#123;_pagesz: 10&#125;);</span><br><span class=\"line\">// 返回 &#123;nextkey: 10, list: [ ...(共10条)] &#125;</span><br></pre></td></tr></table></figure></p>\n<p>我们使用这个模拟接口，新建页面orders2：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;div mui-initfn=&quot;initPageOrders2&quot; mui-script=&quot;orders2.js&quot;&gt;</span><br><span class=\"line\">    &lt;div class=&quot;hd&quot;&gt;</span><br><span class=\"line\">        &lt;a href=&quot;javascript:hd_back();&quot; class=&quot;icon icon-back&quot;&gt;&lt;/a&gt;</span><br><span class=\"line\">        &lt;h2&gt;分页列表练习&lt;/h2&gt;</span><br><span class=\"line\">    &lt;/div&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">    &lt;div class=&quot;bd&quot;&gt;</span><br><span class=\"line\">        &lt;div id=&quot;lst1&quot; data-ac=&quot;Ordr.query&quot;&gt;&lt;/div&gt;</span><br><span class=\"line\">    &lt;/div&gt;</span><br><span class=\"line\">&lt;/div&gt;</span><br></pre></td></tr></table></figure></p>\n<p>在bd部分中，用一个div(id=lst1)作为列表，用属性”data-ac”指定了后端接口。<br>在页面初始化函数initPageOrders2中，调用initPageList函数初始化一个分页列表：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">// JS: (page/orders2.js)</span><br><span class=\"line\"></span><br><span class=\"line\">function initPageOrders2()</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    var jpage = this;</span><br><span class=\"line\">    var listItf = initPageList(jpage, &#123;</span><br><span class=\"line\">        navRef: &quot;&quot;,</span><br><span class=\"line\">        listRef: &quot;#lst1&quot;,</span><br><span class=\"line\">        onAddItem: onAddItem,</span><br><span class=\"line\">        onNoItem: onNoItem,</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">    function onAddItem(jlst, itemData)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        var ji = $(&quot;&lt;div&gt;&lt;b&gt;&quot; + itemData.dscr + &quot;&lt;/b&gt;&lt;p&gt;订单号: &quot; + itemData.id + &quot;&lt;/p&gt;&lt;/div&gt;&quot;);</span><br><span class=\"line\">        ji.appendTo(jlst);</span><br><span class=\"line\"></span><br><span class=\"line\">        // 把itemData存储到事件中，可在事件回调中通过ev.data取到数据</span><br><span class=\"line\">        ji.on(&quot;click&quot;, null, itemData, li_click);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    function onNoItem(jlst)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        var ji = $(&quot;&lt;div&gt;没有订单&lt;/div&gt;&quot;);</span><br><span class=\"line\">        ji.appendTo(jlst);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    function li_click(ev)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        var id = ev.data.id;</span><br><span class=\"line\">        // 显示订单详情页</span><br><span class=\"line\">        PageOrder.id = id;</span><br><span class=\"line\">        MUI.showPage(&quot;#order&quot;);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>函数initPageList封装了接口交互的诸多细节，调用者只需要考虑如何展示列表项即可。 在参数中， listRef指定了列表组件的引用（只在当前逻辑页上查找，相当于jpage.find(listRef)），navRef指定导航栏，这里未用到，赋值空就行，后面章节再介绍。 回调函数onAddItem用于添加一个列表项，onNoItem在列表为空时调用，用于显示没有数据时的提示。<br>我们在首页(page/home.html)中增加一个链接到页面orders2:<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;li class=&quot;weui_cell&quot; style=&quot;display:block&quot;&gt;&lt;a href=&quot;#orders2&quot; class=&quot;weui_btn weui_btn_primary&quot;&gt;分页列表练习&lt;/a&gt;&lt;/li&gt;</span><br></pre></td></tr></table></figure></p>\n<p>进入页面，可以看到向下拉动可以刷新列表（重新取第一页数据），快到列表底部时可自动加载下一页数据。<br>还有个常用的参数是onGetQueryParam，允许编程指定调用后端接口的参数，如：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">var listItf = initPageList(jpage, &#123;</span><br><span class=\"line\">      ...</span><br><span class=\"line\">      // 设置查询参数，静态值一般通过在列表对象上设置属性 data-ac, data-cond以及data-queryParam等属性来指定更方便。</span><br><span class=\"line\">      onGetQueryParam: function (jlst, queryParam) &#123;</span><br><span class=\"line\">          // 指定调用名，参数为固定为&quot;ac&quot;</span><br><span class=\"line\">          queryParam.ac = &quot;Ordr.query&quot;;</span><br><span class=\"line\">          // 指定其它后端接口调用参数，比如页大小，查询条件，排序顺序等</span><br><span class=\"line\">          queryParam._pagesz = 10;</span><br><span class=\"line\">          queryParam.orderby = &quot;id desc&quot;;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>例子中，由于是固定值，也可以在列表上通过属性<code>data-ac=&quot;Ordr.query&quot; data-queryParam=&quot;orderby:&#39;id desc&#39;, _pagesz:10&quot;</code>来指定。<br>默认页大小是20，由<code>MUI.options.PAGE_SZ</code>定义。<br>这里有一点要注意：列表的容器（在本例中，#lst1所在容器是.bd）需要有确定的高度，且一般设置样式”overflow-y: auto”，这样列表才能滚动。 由于页面的bd部分刚好会由框架自动设置高度，示例中没有特别去设置，如果是自定义的容器，需要设置好高度。 （这个限制可能在未来被去掉）           </p>\n<blockquote>\n<p>外界对逻辑页的操作使用逻辑页接口</p>\n</blockquote>\n<p>上面在显示订单详情页时，用的方法是：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">PageOrder.id = id;</span><br><span class=\"line\">MUI.showPage(&quot;#order&quot;);</span><br></pre></td></tr></table></figure></p>\n<p>我们把PageOrder称为逻辑页order的接口(page interface)，在H5应用JS文件index.js中定义：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">var PageOrder = &#123;</span><br><span class=\"line\">    // PageOrder.id</span><br><span class=\"line\">    id: null, </span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure></p>\n<p>在页面order的JS逻辑中，会根据这里的PageOrder.id显示相应订单。<br>尽管也可以通过全局变量等方式实现该功能（例如使用全局变量g_data.orderId），但不够清晰，不建议使用。<br>外界对逻辑页的操作，都应封装到逻辑页接口中。尤其不要在逻辑页外直接设置该页内的组件。 这样，要查看哪些页面引用了订单页，只要全局查找”PageOrder”即可。<br>这里要显示订单，也可以这样封装：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">var PageOrder = &#123;</span><br><span class=\"line\">    // PageOrder.show(id)</span><br><span class=\"line\">    show: function (id) &#123;</span><br><span class=\"line\">        this.id_ = id;</span><br><span class=\"line\">        MUI.showPage(&quot;#order&quot;);</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\"></span><br><span class=\"line\">    id_: null</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure></p>\n<p>外面直接这样调用：PageOrder.show(id). 把属性”PageOrder.id”改名为”PageOrder.id_”，暗示这个属性由逻辑页内部用，外界不应使用。</p>\n<h3 id=\"使用DOM模板创建组件\"><a href=\"#使用DOM模板创建组件\" class=\"headerlink\" title=\"使用DOM模板创建组件\"></a>使用DOM模板创建组件</h3><blockquote>\n<p>上节练习中，函数onAddItem里，直接使用了拼接html的方式动态创建列表项，当组件复杂时可读性和可维护性很差。 我们将使用示例应用自带的weui样式库美化列表项，并用DOM模板的方法重写创建组件过程，让代码更清晰。</p>\n</blockquote>\n<p>一般情况下，不建议直接拼接html，而是通过模板及mvvm等技术来创建，这里给大家推荐开源的超轻量的jquery-dataview库，可在github中下载：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">https://github.com/skyshore2001/jquery-dataview</span><br></pre></td></tr></table></figure></p>\n<p>或用这个git仓库：<code>http://dacatec.com/git/jquery-dataview.git</code>。 下载后只需要jquery-dataview.min.js一个文件即可，把它复制到server/lib目录下，在H5应用index.html中引用：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;script src=&quot;lib/jquery-dataview.min.js&quot;&gt;&lt;/script&gt;</span><br></pre></td></tr></table></figure></p>\n<p>然后在页面中定义列表项的模板，我们使用示例应用自带的weui界面样式库：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">(page/orders2.html)</span><br><span class=\"line\">&lt;div mui-initfn=&quot;initPageOrders2&quot; mui-script=&quot;orders2.js&quot;&gt;</span><br><span class=\"line\">    ...</span><br><span class=\"line\"></span><br><span class=\"line\">    &lt;div class=&quot;bd&quot;&gt;</span><br><span class=\"line\">        &lt;div id=&quot;lst1&quot; class=&quot;weui_cells weui_cells_access&quot; data-ac=&quot;Ordr.query&quot;&gt;&lt;/div&gt;</span><br><span class=\"line\">    &lt;/div&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;script id=&quot;tplOrder&quot; type=&quot;text/template&quot;&gt;</span><br><span class=\"line\">&lt;div class=&quot;weui_cell&quot; dv-on=&quot;li_click&quot;&gt;</span><br><span class=\"line\">    &lt;div class=&quot;weui_cell_hd&quot;&gt;</span><br><span class=\"line\">        &lt;i class=&quot;icon icon-dscr&quot;&gt;&lt;/i&gt;</span><br><span class=\"line\">    &lt;/div&gt;</span><br><span class=\"line\">    &lt;div class=&quot;weui_cell_bd weui_cell_primary&quot;&gt;</span><br><span class=\"line\">        &lt;p&gt;&lt;b name=&quot;dscr&quot;&gt;&lt;/b&gt;&lt;/p&gt;</span><br><span class=\"line\">        &lt;p&gt;订单号: &lt;span name=&quot;id&quot;&gt;&lt;/span&gt;&lt;/p&gt;</span><br><span class=\"line\">    &lt;/div&gt;</span><br><span class=\"line\">    &lt;div class=&quot;weui_cell_ft&quot; name=&quot;status&quot;&gt;&lt;/div&gt;</span><br><span class=\"line\">&lt;/div&gt;</span><br><span class=\"line\">&lt;/script&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;/div&gt;</span><br></pre></td></tr></table></figure></p>\n<p>上例中：</p>\n<ul>\n<li>用script标签定义了id为tplOrder的html模板，要动态赋值的地方用<code>name=&quot;xxx&quot;</code>的方式标明，要处理事件的组件用dv-on属性指定。 注意：H5标签template在现阶段的兼容性还够好，谨慎使用。</li>\n<li>使用weui样式库美化列表。在列表”lst1”上添加了<code>&quot;weui_cells&quot;</code>等CSS类, 在列表每一项上用了<code>&quot;weui_cell&quot;</code>类，详细用法可查阅weui文档。</li>\n<li>列表每项前用<i class=\"icon icon-dscr\"></i>放置了一个名为icon-dscr的图标。</li>\n</ul>\n<p>在JS中(page/orders2.js)，我们重写onAddItem函数，使用这个模板clone出每一项：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">function initPageOrders2()</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    var jpage = this;</span><br><span class=\"line\">    ...</span><br><span class=\"line\"></span><br><span class=\"line\">    // 列表项模板</span><br><span class=\"line\">    var jtplOrder_ = $(jpage.find(&quot;#tplOrder&quot;).html());</span><br><span class=\"line\"></span><br><span class=\"line\">    function onAddItem(jlst, itemData)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        var ji = jtplOrder_.clone().dataview(itemData, &#123;</span><br><span class=\"line\">            events: &#123;</span><br><span class=\"line\">                li_click: li_click</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;).appendTo(jlst);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    ...</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>jquery-dataview在做事件绑定时，会自动将数据绑定到事件上。 例中，在<code>li_click(ev)</code>回调函数中，可以通过ev.data拿到绑定的数据，因而刚好<code>li_click</code>函数不用修改，取订单id可以用<code>var id = ev.data.id</code>。</p>\n<h3 id=\"刷新分页列表\"><a href=\"#刷新分页列表\" class=\"headerlink\" title=\"刷新分页列表\"></a>刷新分页列表</h3><blockquote>\n<p>控制刷新分页列表。</p>\n</blockquote>\n<p>列表一旦显示后，每次回到该逻辑页时，不会重新请求数据或刷新，除非用户自己下拉刷新列表，这样保证了应用有良好的性能。<br>但有时需要在程序内控制列表刷新，考虑这样的需求：当一个订单在其它页面被修改了（例如取消订单），再回到订单列表页时希望能刷新列表。<br><code>initPageList</code>可以很简单地实现这一需求。 先为逻辑页定义一个接口:<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">var PageOrders2 = &#123;</span><br><span class=\"line\">    refresh: null,</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>在初始化列表时，添加一个pageItf选项（page interface缩写）：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">var listItf = initPageList(jpage, &#123;</span><br><span class=\"line\">    pageItf: PageOrders2,</span><br><span class=\"line\">    ...</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure></p>\n<p>在取消订单操作时，只要赋值：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">PageOrders2.refresh = true;</span><br></pre></td></tr></table></figure></p>\n<p>这样下次进入orders2页时，就会刷新列表，并把PageOrders2.refresh置回false。可以在浏览器控制台上操作试试看。<br>如果想要立刻刷新列表，也可以用<code>listItf.refresh()</code>操作。 <code>listItf</code>是<code>initPageList</code>返回值，是一个操作列表的接口，类似的操作还有显示下一页<code>listItf.loadMore()</code>，详见参考文档。</p>\n<h3 id=\"列表用于选择\"><a href=\"#列表用于选择\" class=\"headerlink\" title=\"列表用于选择\"></a>列表用于选择</h3><blockquote>\n<p>(choose-from-list)在首页上加一个“选择订单”按钮，点击后进入订单列表页，选择一项后返回首页，并显示订单内容。</p>\n</blockquote>\n<p>还是用”orders2”页，我们在index.js中定义页面接口如下（主要是choose方法和onChoose回调）：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">var PageOrders2 = &#123;</span><br><span class=\"line\">    ...</span><br><span class=\"line\">    // PageOrders2.choose(onChoose)</span><br><span class=\"line\">    // onChoose(order=&#123;id,dscr,...&#125;)</span><br><span class=\"line\">    choose: function (onChoose) &#123;</span><br><span class=\"line\">        this.chooseOpt_ = &#123;</span><br><span class=\"line\">            onChoose: onChoose</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        MUI.showPage(&apos;orders2&apos;);</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\"></span><br><span class=\"line\">    chooseOpt_: null // &#123;onChoose&#125;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure></p>\n<p>在页面orders2中：</p>\n<ul>\n<li>点击一个列表项时，调用onChoose回调</li>\n<li>页面隐藏时，清空chooseOpt_参数。</li>\n</ul>\n<p>示例：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">function initPageOrders2()</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    ...</span><br><span class=\"line\">    var pageItf_ = PageOrders2;</span><br><span class=\"line\">    jpage.on(&quot;pagehide&quot;, onPageHide);</span><br><span class=\"line\"></span><br><span class=\"line\">    function li_click(ev)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        var order = ev.data;</span><br><span class=\"line\">        if (pageItf_.chooseOpt_) &#123;</span><br><span class=\"line\">            pageItf_.chooseOpt_.onChoose(order);</span><br><span class=\"line\">            return false;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        // 正常点击操作 </span><br><span class=\"line\">        ...</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    function onPageHide()</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        pageItf_.chooseOpt_ = null;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>我们回到首页，在浏览器控制台中模拟调用：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">PageOrders2.choose(function (order) &#123;</span><br><span class=\"line\">    // 处理order</span><br><span class=\"line\">    app_alert(&apos;选择了订单: id=&apos; + order.id);</span><br><span class=\"line\">    history.back(); // 由于进入列表选择时会离开当前页面，这时应返回</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure></p>\n<p>进入页面orders，选择一项后返回并继续操作。</p>\n<h3 id=\"显示多个列表\"><a href=\"#显示多个列表\" class=\"headerlink\" title=\"显示多个列表\"></a>显示多个列表</h3><p>本节学习导航栏加多个列表这一常见模式。</p>\n<blockquote>\n<p>在示例应用时，订单列表页便按照订单状态，分成“待服务”和“已完成”两栏，分别对应一个列表。 我们将练习页面orders2也改造成支持分栏的样式。</p>\n</blockquote>\n<p>首先，我们熟悉下后端列表查询的接口。 筋斗云后端接口支持业务查询协议，可以使用cond参数才指定查询条件：</p>\n<ul>\n<li>取待服务订单：callSvr(“Ordr.query”, {cond: “status=’CR’”});</li>\n<li>取已完成/已取消订单：callSvr(“Ordr.query”, {cond: “status=’RE’ or status=’CA’”});</li>\n</ul>\n<p>我们现在使用的是在mockdata.js中定义的模拟接口，已经模拟了上面两个调用。<br>我们在页面中增加导航栏及列表：(page/orders2.html)<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;div mui-initfn=&quot;initPageOrders2&quot; mui-script=&quot;orders2.js&quot;&gt;</span><br><span class=\"line\">    &lt;div class=&quot;hd&quot;&gt;</span><br><span class=\"line\">        ...</span><br><span class=\"line\">        &lt;div class=&quot;mui-navbar&quot;&gt;</span><br><span class=\"line\">            &lt;a href=&quot;javascript:;&quot; mui-linkto=&quot;#lst1&quot;&gt;待服务&lt;/a&gt;</span><br><span class=\"line\">            &lt;a href=&quot;javascript:;&quot; mui-linkto=&quot;#lst2&quot;&gt;已完成&lt;/a&gt;</span><br><span class=\"line\">        &lt;/div&gt;</span><br><span class=\"line\">    &lt;/div&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">    &lt;div class=&quot;bd&quot;&gt;</span><br><span class=\"line\">        &lt;div id=&quot;lst1&quot; class=&quot;weui_cells weui_cells_access&quot;&gt;&lt;/div&gt;</span><br><span class=\"line\">        &lt;div id=&quot;lst2&quot; class=&quot;weui_cells weui_cells_access&quot;&gt;&lt;/div&gt;</span><br><span class=\"line\">    &lt;/div&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">    ...</span><br><span class=\"line\">&lt;/div&gt;</span><br></pre></td></tr></table></figure></p>\n<p>框架提供导航栏组件，以CSS类”mui-navbar”标识，通过属性”mui-linkto”分别指向本页中的两个列表，点击时可自动切换。 我们把导航栏放在hd中，让整个bd作为列表容器。这是一种很方便的做法，如果把导航栏放在bd中，还要一个div作为列表容器，且要计算它的合适高度。<br>初始化列表做些修改，指定新的navRef, listRef，用onGetQueryParam来指定查询条件：(page/orders2.js)<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">var listItf = initPageList(jpage, &#123;</span><br><span class=\"line\">    ...</span><br><span class=\"line\">    navRef: &quot;.mui-navbar&quot;,</span><br><span class=\"line\">    listRef: &quot;#lst1,#lst2&quot;,</span><br><span class=\"line\">    onGetQueryParam: function (jlst, queryParam) &#123;</span><br><span class=\"line\">        queryParam.ac = &quot;Ordr.query&quot;;</span><br><span class=\"line\">        var id = jlst.attr(&quot;id&quot;);</span><br><span class=\"line\">        if (id == &quot;lst1&quot;) &#123;</span><br><span class=\"line\">            queryParam.cond = &quot;status=&apos;CR&apos;)&quot;;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        else if (id == &quot;lst2&quot;) &#123;</span><br><span class=\"line\">            queryParam.cond = &quot;status=&apos;RE&apos; OR status=&apos;CA&apos;&quot;;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\"></span><br><span class=\"line\">    ...</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure></p>\n<p>6.6 分页列表的接口适配<br>上面学习了易用强大的分页列表，支持分页的后端接口使用的是筋斗云的规范，返回列表像这样：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">    list: [</span><br><span class=\"line\">        &#123;field1: &quot;val1&quot;, field2: &quot;val2&quot;&#125;,</span><br><span class=\"line\">        &#123;field1: &quot;val3&quot;, field2: &quot;val4&quot;&#125;,</span><br><span class=\"line\">    ],</span><br><span class=\"line\">    nextkey: 2</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>上面用list字段返回列表。另外还支持一种等价的压缩表格式，使用h(表头)/d(数据)数组，如下：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">    h: [ &quot;field1&quot;,&quot;field2&quot; ],</span><br><span class=\"line\">    d: [ [&quot;val1&quot;,&quot;val2&quot;], [&quot;val3&quot;,&quot;val4&quot;], ... ]</span><br><span class=\"line\">    nextkey: 2</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>返回列表如果没到最后一页，需要返回nextkey字段，用于请求下一页时的”_pagekey”参数。 请求通过”_pagesz”参数指定页大小，通过”_pagekey”参数取下一页。<br>如果你遇到的后端分页列表接口设计不符合上述规则，则需要通过接口适配来使用分页列表框架，即让返回数据符合上面的规范，一般是设置好list/nextkey字段，或者是h/d/nextkey字段。             </p>\n<blockquote>\n<p>后端分页机制为(jquery-easyui datagrid分页机制):</p>\n<ul>\n<li>请求时通过参数page, rows分别表示页码，页大小，如 page=1&amp;rows=20</li>\n<li>返回数据通过字段total表示总数, rows表示列表数据，如 { total: 83, rows: [ {…}, … ] }</li>\n</ul>\n</blockquote>\n<p>要求通过接口适配，不变动前面列表页面orders2的代码，让该页面仍能正常工作。<br>我们先来制作一下模拟数据，在mockdata.js中，修改”Ordr.query”部分：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&quot;Ordr.query&quot;: function (param, postParam) &#123;</span><br><span class=\"line\">    var arr = orders;</span><br><span class=\"line\">    var ret = &#123;total: arr.length, rows: []&#125;;</span><br><span class=\"line\">    var pagesz = param.rows || 20;</span><br><span class=\"line\">    var pagekey = param.page || 1;</span><br><span class=\"line\"></span><br><span class=\"line\">    for (var n=0, i=(pagekey-1)*pagesz; n&lt;pagesz &amp;&amp; i&lt;arr.length; ++n, ++i) &#123;</span><br><span class=\"line\">        ret.rows.push(arr[arr.length-i-1]);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    return [0, ret];</span><br><span class=\"line\">&#125;,</span><br></pre></td></tr></table></figure></p>\n<p>这样就可以模拟了，试试<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">callSvrSync(&quot;Ordr.query&quot;);</span><br><span class=\"line\">callSvrSync(&quot;Ordr.query&quot;, &#123;page: 2, rows: 10&#125;);</span><br></pre></td></tr></table></figure></p>\n<p>注意：上面返回数据的基本格式仍然是筋斗云框架的格式，即成功返回[0, 数据]，失败返回[错误码，错误信息]。 如果不是这样的格式，请阅读前面介绍过的“接口适配”章节去配置<code>MUI.callSvrExt</code>。<br>在app.js中设置为initPageList设置缺省选项：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$.extend(initPageList.options, &#123;</span><br><span class=\"line\">    pageszName: &quot;rows&quot;,</span><br><span class=\"line\">    pagekeyName: &quot;page&quot;,</span><br><span class=\"line\">    // 设置 data.list, data.nextkey (如果是最后一页则不要设置); 注意pagekey可以为空</span><br><span class=\"line\">    onGetData: function (data, pagesz, pagekey) &#123;</span><br><span class=\"line\">        data.list = data.rows;</span><br><span class=\"line\">        if (pagekey == null)</span><br><span class=\"line\">            pagekey = 1;</span><br><span class=\"line\">        if (data.total &gt;  pagesz * pagekey)</span><br><span class=\"line\">            data.nextkey = pagekey + 1;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure></p>\n<p>在onGetData回调中，设置data.list及data.nextkey属性（如果是最后一页则不要设置）。<br>注意：app.js与index.js的区别是，前者适用于项目下的所有应用，而index.js只是index.html这个H5应用的主程序。<br>配置后，项目下所有列表都将应用这个适配规则。如果只是个别列表适配需要调整，可以在调用initPageList时指定这些选项，如：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">var listItf = initPageList(jpage, &#123;</span><br><span class=\"line\">    ...</span><br><span class=\"line\"></span><br><span class=\"line\">    pageszName: &apos;rows&apos;,</span><br><span class=\"line\">    pagekeyName: &apos;page&apos;,</span><br><span class=\"line\">    onGetData: ...</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure></p>\n<p>考虑这样一种情况，后端就返回一个列表如<code>[ {...}, {...} ]</code>，不支持分页，那么是否可以使用分页列表？</p>\n<p>答案是仍然可用，initPageList支持一个纯数组，它将被当成列表的最后一页处理，无法上拉加载，但仍支持下拉刷新。</p>\n<h2 id=\"创建多个H5应用\"><a href=\"#创建多个H5应用\" class=\"headerlink\" title=\"创建多个H5应用\"></a>创建多个H5应用</h2><blockquote>\n<p>在示例项目中，只有一个应用即index.html。 实际在一个H5项目中，常常需要多个应用，例如给用户使用的手机客户端应用、给员工使用的员工端应用等。 我们将在同一项目下再创建一个新的“员工端”应用。</p>\n</blockquote>\n<p>筋斗云要求每个H5应用有个内部名称(appName)， 在示例应用中，appName定义为user，表示用户端，假如定义员工端应用的内部名称为emp，我们创建这些文件：</p>\n<ul>\n<li>新建H5主文件，emp.html, emp.js, emp.css</li>\n<li>新建逻辑页目录，名为emp，在这个目录下创建逻辑页。</li>\n<li>项目下所有H5应用共用的逻辑放在文件app.js中，共用的样式放在文件app.css中。 第三方库文件，一般放在lib目录下，每个应用均可引用。</li>\n</ul>\n<p>在emp.js中正确配置：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$.extend(MUI.options, &#123;</span><br><span class=\"line\">    appName: &quot;emp&quot;,</span><br><span class=\"line\">    homePage: &quot;#home&quot;,</span><br><span class=\"line\">    pageFolder: &quot;emp&quot;,</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure></p>\n<p>应用内部名称appName将会在callSvr发起的调用中，自动通过URL参数_app传给后端。 后端可以根据应用不同，建议使用不同的cookie名来区分，这样即使浏览器同时打开这两个应用，也不会有冲突。<br>关于代码放到哪个文件中，原则如下：</p>\n<ul>\n<li>逻辑页专用的内容，放到逻辑页的html/js文件中。</li>\n<li>H5应用专用的内容，或多个逻辑页共享的内容，放到H5主文件html/js/css中。</li>\n<li>项目下所有H5应用共享的内容，放到app.js/app.css中。<h2 id=\"H5应用优化\"><a href=\"#H5应用优化\" class=\"headerlink\" title=\"H5应用优化\"></a>H5应用优化</h2>目前我们运行的H5应用直接是在项目下的server目录中，这称为开发版本，没有进行优化。 在生产环境下，一般会将开发版本进行优化，生成发布版本后上线，可提升H5应用性能。</li>\n</ul>\n<h3 id=\"用webcc编译H5应用\"><a href=\"#用webcc编译H5应用\" class=\"headerlink\" title=\"用webcc编译H5应用\"></a>用webcc编译H5应用</h3><blockquote>\n<p>使用webcc工具，编译项目下的server目录，生成发布版本目录”output_web”。</p>\n</blockquote>\n<p>作为一个WEB应用，发布时最常见的需求是JS/CSS/HTML文件合并和压缩(minify)。 H5应用自身用的index.js/index.css文件可以内嵌到主文件index.html中，常用的逻辑页面（包括html/css文件）也可以内嵌到index.html中来。<br>筋斗云通过名为webcc的工具进行应用优化，也称为编译。 本章详细介绍可参考官方文档”webcc”。<br>我们先看怎么运行它。 webcc是php工具，必须先安装php环境(版本5.4或更高)； 在Windows系统上，建议安装git，它自带的git-bash环境模拟了简单的linux/unix环境，如果已安装mingw或cygwin也可以。<br>webcc一般要求源代码使用git管理，通过git命令查询源文件列表及版本差异，实现增量编译、自动化发布等功能。 如果你已用git管理项目，则在项目目录中打开git-bash(或其它linux shell环境)，运行命令：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ php tool/webcc.php server</span><br></pre></td></tr></table></figure></p>\n<p>上面server是待编译的开发版本目录，里面有所有开发的内容。运行后生成发布版本目录”output_web”。<br>如果项目未使用git管理，则要求指定源文件列表，在运行webcc之前必须先设置环境变量WEBCC_LS_CMD，例如：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ export WEBCC_LS_CMD=&apos;find . -type f&apos;</span><br></pre></td></tr></table></figure></p>\n<p>注意：上面命令会将目录下所有文件都编译并发布，应确保清除目录下无用的文件。 如果你使用的是svn管理项目，则需要把”.svn”目录过滤掉以免生成到发布目录：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ export WEBCC_LS_CMD=&apos;find . -type f | grep -v .svn&apos;</span><br></pre></td></tr></table></figure></p>\n<p>或者使用svn命令精确列表哪些文件要发布：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ export WEBCC_LS_CMD=&apos;svn ls -R&apos;</span><br></pre></td></tr></table></figure></p>\n<p>至于编译生成的发布目录和源目录有哪些不同，下面将讲述。</p>\n<h3 id=\"webcc配置解读\"><a href=\"#webcc配置解读\" class=\"headerlink\" title=\"webcc配置解读\"></a>webcc配置解读</h3><p>在示例应用的server目录下，有一个webcc.conf.php的配置文件，里面定义了优化策略，一般无需修改：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$RULES = [</span><br><span class=\"line\">    &apos;*.html&apos; =&gt; &apos;HASH&apos;,</span><br><span class=\"line\">    ...</span><br><span class=\"line\">];</span><br></pre></td></tr></table></figure></p>\n<p>第一条规则是server目录下(不包括子目录)的所有html文件，即所有H5应用，执行HASH规则，对于html文件，会处理其中的webcc标记。<br>在示例应用中，我们在index.html中查找webcc，可以看到有这些标记：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;!-- WEBCC_BEGIN MERGE=lib 外部库 &#123;&#123;&#123;--&gt;</span><br><span class=\"line\">    &lt;link rel=&quot;stylesheet&quot; href=&quot;lib/weui.min.css&quot; /&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">    &lt;script src=&quot;lib/jquery-1.11.1.min.js&quot;&gt;&lt;/script&gt;</span><br><span class=\"line\">    &lt;script src=&quot;lib/jquery.touchSwipe.min.js&quot;&gt;&lt;/script&gt;</span><br><span class=\"line\">&lt;!-- WEBCC_END &#125;&#125;&#125;--&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;!-- WEBCC_BEGIN MERGE=lib-app 内部库 &#123;&#123;&#123;--&gt;</span><br><span class=\"line\">    mui.css, app.css等css文件...</span><br><span class=\"line\">    app_fw.js, app.js等js文件...</span><br><span class=\"line\">&lt;!-- WEBCC_END &#125;&#125;&#125;--&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;!-- WEBCC_BEGIN MERGE 应用专用 &#123;&#123;&#123;--&gt;</span><br><span class=\"line\">    &lt;link rel=&quot;stylesheet&quot; href=&quot;index.css&quot; /&gt;</span><br><span class=\"line\">    &lt;script src=&quot;index.js&quot;&gt;&lt;/script&gt;</span><br><span class=\"line\">&lt;!-- WEBCC_END &#125;&#125;&#125;--&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">...</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;!-- WEBCC_BEGIN &#123;&#123;&#123; embeded pages --&gt;</span><br><span class=\"line\">&lt;!-- WEBCC_USE_THIS</span><br><span class=\"line\">WEBCC_CMD mergePage -minify yes page/home.html page/login.html page/login1.html page/me.html</span><br><span class=\"line\">WEBCC_END &#125;&#125;&#125; --&gt;</span><br></pre></td></tr></table></figure></p>\n<p>先看外部库、内部库，它们分别被放置在标记WEBCC_BEGIN MERGE=xxx / WEBCC_END之中。 这意味着其中的css, js文件会被合并到一起，压缩后生成一个文件xxx.js或xxx.css。<br>外部库表示第三方库，如果应用中用到了其它库，且文件大小并不大，可以放置到这一块中，以便多个库合并成一个文件优化下载。 内部库是筋斗云框架自身及你的项目内所有H5应用的通用部分(app.js, app.css)。<br>应用专用就是当前H5应用用到的js/css。使用的webcc标记与前面比，没有指定”MERGE=xxx”，只指定了”MERGE”，这表示合并其中内容到当前文件，即把index.css/index.js内嵌到index.html文件中。<br>最后一块是内嵌逻辑页，用”WEBCC_USE_THIS”标记和”mergePage”命令指定了一些逻辑页，这些页面一般是最常用的页面，这个html及其引用的js文件将被直接内嵌到index.html中。 框架在加载逻辑页时，如果发现已内置于主html中则优先使用内置页，否则就触发缺页中断从而远程加载。          </p>\n<h2 id=\"H5应用发布上线\"><a href=\"#H5应用发布上线\" class=\"headerlink\" title=\"H5应用发布上线\"></a>H5应用发布上线</h2><p>上一章介绍了H5应用的编译优化，生成了发布目录，配置好WEB服务器后，将发布目录上传到服务器即可完成发布。<br>为了H5应用程序升级后客户能及时更新，建议将H5应用的主html文件及逻辑页面文件夹下html/js文件的缓存策略设置为”no-cache”。 （在开发环境下，一般建议所有文件都设置为不缓存。）<br>建议使用Apache或nginx作为筋斗云H5应用线上生产环境的WEB服务器。 项目下已有专为这两种服务器的配置，即为Apache用的.htaccess文件，以及为nginx准备的.ht.nginx文件。</p>\n<blockquote>\n<p>配置Web服务器，访问H5应用，在Chrome浏览器的网络监控中查看请求，要求：</p>\n<ul>\n<li>H5应用的index.html文件，以及逻辑页如page/home.html, page/home.js文件，HTTP响应中设置了”no-cache”策略。 当再次刷新应用时，HTTP响应为”304 Not Modified”（确保Chrome网络监控页面下的”Disable cache”选项未勾选）。</li>\n<li>其它js/css文件，HTTP响应中未设置”no-cache”策略，再次刷新H5应用时，不访问服务器。<br>示例如下：<img src=\"/img/7.png\" alt=\"img7\"><br>如果使用Apache服务器，应配置项目下允许.htaccess文件，比如<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;Directory /var/www/html/myproject&gt;</span><br><span class=\"line\">    AllowOverride All</span><br><span class=\"line\">&lt;/Directory&gt;</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n</blockquote>\n<p>如果使用nginx，可以把项目下的.ht.nginx文件包含到nginx的主配置文件中。注意一些路径可能需要修改。<br>如果使用其它WEB服务器（如IIS），应手工作相应的配置。<br>此外，对所有html/css/js这些文本文档都应设置gzip压缩，注意图片文件一般不设置gzip压缩，因为图片有自己的压缩算法。           </p>\n<h3 id=\"自动化差量发布\"><a href=\"#自动化差量发布\" class=\"headerlink\" title=\"自动化差量发布\"></a>自动化差量发布</h3><blockquote>\n<p>编写和运行项目下的build_web.sh文件做为上线工具，运行它实现自动编译和将新近修改的内容上线。</p>\n</blockquote>\n<p>如果希望每次修改一些内容后，可以快速将差异部分上线，不必每次都上传所有文件，可以使用筋斗云自带的上线工具。<br>筋斗云框架支持WEB应用自动化发布，并可差量更新。 目前差量更新依赖git工具，要求源目录及编译生成的发布目录均使用git管理，每次只上传与线上版本差异的部分。 本章详细介绍可参考官方文档”webcc”中的”jdcloud-build”模块。<br>自动化发布支持ftp/git两种方式，前者只需服务器提供ftp上传帐号，后者需要服务器提供git-push权限。 本章介绍git方式，安全可靠且版本可任意回溯。ftp方式只需修改若干参数，可参考官方文档。<br>我们的示例项目名为myproject，已使用git管理。 先创建发布版本库(又称online版本库), 使用git管理，定名称为myproject-online，习惯上与目录myproject放在同一父目录下:<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ git init myproject-online</span><br></pre></td></tr></table></figure></p>\n<p>在线上服务器上设置ftp帐号或git帐号。使用git发布时，一般配置好用ssh证书登录，避免每次上线时输入密码。<br>将tool/git_init.sh上传服务器，用它创建线上目录：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ git_init.sh myproject</span><br></pre></td></tr></table></figure></p>\n<p>编写项目根目录下的build_web.sh脚本：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#!/bin/sh</span><br><span class=\"line\"></span><br><span class=\"line\">export OUT_DIR=../myproject-online</span><br><span class=\"line\">export GIT_PATH=www@myserver:myproject</span><br><span class=\"line\">tool/jdcloud-build.sh</span><br></pre></td></tr></table></figure></p>\n<p>在Windows平台上，打开git shell运行build_web.sh即可上线。</p>\n<h2 id=\"制作原生APP\"><a href=\"#制作原生APP\" class=\"headerlink\" title=\"制作原生APP\"></a>制作原生APP</h2><p>H5应用可以打包生成苹果或安卓原生应用，一般也称为混合应用程序(Hybird App)。<br>并不是所有的H5应用都适合打包成原生应用，如果把一个普通的手机网站包装成原生应用，即使它制作的外观像是原生应用， 但切换页面时的网页刷新和加载导致速度慢、费流量、体验差，并不适合制作APP，而且像苹果应用市场等也容易拒绝此类APP上架。 为了接近原生应用的用户体验，可打包的H5应用应是支持多逻辑页的单网页应用，也就是变脸式应用。<br>我们制作的原生应用最大的特点是它与H5应用是分离的，从而在应用市场上架后仍可随时轻松升级应用。 这种应用我们也把它称为原生壳。</p>\n<h3 id=\"编译原生壳\"><a href=\"#编译原生壳\" class=\"headerlink\" title=\"编译原生壳\"></a>编译原生壳</h3><blockquote>\n<ul>\n<li>一次开发，多平台运行：将我们制作的H5应用打包生成原生APP安装到安卓及苹果手机上。</li>\n<li>一次上线，轻松升级：更新H5应用并上线，查看已安装的原生应用是否已自动及时更新。</li>\n</ul>\n</blockquote>\n<p>准备工作：</p>\n<ul>\n<li>云编译环境，安装Intel XDK，注册好用户帐号。</li>\n<li>安卓和苹果的应用证书。安卓证书可以自行制作，苹果证书须注册苹果开发者帐号后生成。</li>\n</ul>\n<p>使用Intel XDK的最大挑战是网络。在国内访问可能有问题，或者很慢，或者连不上。必要时可以使用VPN代理等手段连接。<br>打开Intel XDK，创建一个新的”Html5+Cordova”项目：<img src=\"/img/xdk1.png\" alt=\"xdk1\"><br>点左上角的”PROJECTS”，进入项目设置，里面有插件管理(Plugin Management)，编译设置(Build Settings)和图标及启动画面设置(Launch Icons and Splash Screens)。 插件是各种手机原生语言开发的库，比如相机、支付宝及微信支付等，本节不做重点介绍。图标和启动画面比较简单，准备好图片选上就行。<br>编译设置中要注意需要每个平台分别设置，请特别注意：</p>\n<ul>\n<li>在访问权限中，在”Navigation”栏中，设置为”*”，表示允许访问外网地址。</li>\n<li>安卓及苹果的开发证书在软件右上角用户帐号中先添加好，才能在编译设置中选择。</li>\n<li>安卓有个选项“Optimize with crosswalk”，用于把浏览器与应用一起打包以便在各种安卓手机上有良好的兼容性，缺点是生成的包要大20M。 练习时可不选，实际项目中建议选上。<br><img src=\"/img/xdk2.png\" alt=\"xdk2\"><br>xdk项目目录下的文件intelxdk.config.additions.xml中，设置上H5应用的地址，加上这句：<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;content src=&quot;http://myserver/myproject/index.html?cordova=1&quot; /&gt;</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<p>注意，H5应用后面加上参数cordova={壳版本}，框架将识别这个参数，进入原生应用模式，自动加载插件接口。<br>还有找到debuggable选项把它设置为true，以便可以之后在电脑上连接设备调试H5应用。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;preference name=&quot;debuggable&quot; value=&quot;true&quot; /&gt;</span><br></pre></td></tr></table></figure></p>\n<p>配置好后，进入编译页，开始编译。<br><img src=\"/img/xdk3.png\" alt=\"xdk3\"><br>编译好后，先不要立即安装到手机上，还有重要的一步，将插件接口更新到H5应用中去，这样在H5应用中可调用原生功能。</p>\n<h4 id=\"更新原生插件接口到H5应用。\"><a href=\"#更新原生插件接口到H5应用。\" class=\"headerlink\" title=\"更新原生插件接口到H5应用。\"></a>更新原生插件接口到H5应用。</h4><p>用winzip等工具解压生成的apk名或ipa包（可以先改名为.zip文件再点开），在安卓apk包的assets/www目录中（或苹果ipa包的Payload/{应用名}.app/www目录下），找到以下三个文件或目录：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cordova.js</span><br><span class=\"line\">cordova_plugins.js</span><br><span class=\"line\">plugins/ （整个目录）</span><br></pre></td></tr></table></figure></p>\n<p>把安卓APP中的这些文件复制到H5应用的目录server/cordova下面，把苹果APP中的这些文件复制到server/cordova-ios下面。这样就完成了H5应用中设置原生插件接口。<br>注意：当H5项目中有多个应用时，plugins目录直接取并集即可，而cordova_plugins.js文件需要小心合并。<br>这时将apk包或ipa包安装到手机上，打开应用程序，看看是否能正常运行。<br>我们在H5应用中书写代码时，可以检查全局变量g_cordova。 例如，想要仅在原生应用中显示某个页面，在微信或浏览器中访问时提示错误：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">if (! g_cordova) &#123;</span><br><span class=\"line\">    app_alert(&quot;本功能请在APP中点击进入&quot;);</span><br><span class=\"line\">    return;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">MUI.showPage(&quot;#xxx&quot;);</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"壳版本管理\"><a href=\"#壳版本管理\" class=\"headerlink\" title=\"壳版本管理\"></a>壳版本管理</h3><p>请牢牢记住，由于原生壳与H5应用的分离，用户安装的用户壳可能是旧版本的，而线上的H5应用永远是最新版本。<br>假如在原生壳中新增加了插件，应增加壳版本号。 操作上也可将壳版本等同于原生应用的版本代码（安卓叫App Version Code，苹果叫CF Bundle Version），那么要注意插件变动时，一定也要变动原生应用版本。         </p>\n<blockquote>\n<p>需求：新版本壳中增加了某插件，希望安装旧版本壳的用户在用到此插件时，提示更新APP。</p>\n</blockquote>\n<p>假定当前壳版本为1，注意在配置文件intelxdk.config.additions.xml中修改壳版本，假如为2：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;content src=&quot;http://myserver/myproject/index.html?cordova=2&quot; /&gt;</span><br></pre></td></tr></table></figure></p>\n<p>然后编译好新版本安装包。 由于插件变化了，仍然需要更新原生插件接口到H5应用，将新的插件合并到H5应用的cordova或cordova-ios目录中。<br>注意cordova_plugins.js文件定义H5应用可用哪些插件，需要手工合并和设置版本。<br>假设我们在用户端上新增加了一个微信分享插件，cordova_plugins.js文件如下：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">module.exports = [</span><br><span class=\"line\">    ...,</span><br><span class=\"line\">    // 以下为新增部分：</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        &quot;file&quot;: &quot;plugins/com.xxx.weixin/www/weixin.js&quot;,</span><br><span class=\"line\">        &quot;id&quot;: &quot;com.xxx.weixin&quot;,</span><br><span class=\"line\">        &quot;clobbers&quot;: [</span><br><span class=\"line\">            &quot;navigator.weixin&quot;</span><br><span class=\"line\">        ]</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">]</span><br></pre></td></tr></table></figure></p>\n<p>前面提到过，每个筋斗云H5应用都有一个惟一的应用名(MUI.options.appName)，例如用户端设置应用名为”user”。 我们为新的插件加上filter属性：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">module.exports = [</span><br><span class=\"line\">    ...,</span><br><span class=\"line\">    // 以下为新增部分：</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        &quot;file&quot;: &quot;plugins/com.xxx.weixin/www/weixin.js&quot;,</span><br><span class=\"line\">        &quot;id&quot;: &quot;com.xxx.weixin&quot;,</span><br><span class=\"line\">        &quot;clobbers&quot;: [</span><br><span class=\"line\">            &quot;navigator.weixin&quot;</span><br><span class=\"line\">        ]</span><br><span class=\"line\">        // 指定客户端应用(名为user)从壳版本2开始支持该插件</span><br><span class=\"line\">        &quot;filter&quot;: [ [&quot;user&quot;, 2] ]</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">]</span><br><span class=\"line\">// 新加上这一句处理版本</span><br><span class=\"line\">filterCordovaModule(module);</span><br></pre></td></tr></table></figure></p>\n<p>filter属性的格式为<code>[ [app1, minVer?=1, maxVer?=9999], ...]</code>, 仅当应用名匹配且版本在minVer/maxVer之间才使用。 如果未指定filter，则表示加载该插件。 假定还有个员工端应用名为emp，在壳版本300时增加了该插件，则可以设置：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&quot;filter&quot;: [ [&quot;user&quot;, 2], [&quot;emp&quot;, 300] ]</span><br></pre></td></tr></table></figure></p>\n<p>这样，不同的H5应用版本加载的插件是不一样的，要在浏览器中测试查看每个壳版本分别加载了哪些插件，可以直接访问带cordova参数的H5应用地址如：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">http://myserver/myproject/index.html?cordova=1</span><br></pre></td></tr></table></figure></p>\n<p>然后在Web控制台中执行：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cordova.require(&apos;cordova/plugin_list&apos;)</span><br></pre></td></tr></table></figure></p>\n<p>最后，我们在H5应用中检查插件是否可用，以及提示用户升级：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">if (navigator.weixin == null) &#123;</span><br><span class=\"line\">    app_alert(&quot;您的APP版本太旧，请升级后使用本功能。&quot;);</span><br><span class=\"line\">    return;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">// 调用新插件的功能。</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"调试原生应用\"><a href=\"#调试原生应用\" class=\"headerlink\" title=\"调试原生应用\"></a>调试原生应用</h3><p>由于原生应用调试复杂，只要不是原生插件本身的问题，尽量先在电脑浏览器上调试。<br>对于只能在手机上运行的功能，注意加些调试代码，让它也在网页中也能模拟运行。 比如微信分享后可以领取红包，为了在普通浏览器中可调试，可以这样做：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">if (! g_cordova) &#123;</span><br><span class=\"line\">    // 模拟代码</span><br><span class=\"line\">    if (g_args.mock) &#123;</span><br><span class=\"line\">        if (confirm(&quot;模拟分享?&quot;))</span><br><span class=\"line\">            onShareOk();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    app_alert(&quot;必须在App中运行&quot;);</span><br><span class=\"line\">    return;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">微信分享(成功后回调 onShareOk);</span><br><span class=\"line\"></span><br><span class=\"line\">function onShareOk()</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    // 领取红包</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>g_args.mock表示在URL参数中有”?mock=1”时走模拟分支。这样绝大多数问题都不用在手机上调试。<br>如果在电脑浏览器上运行正常，但在手机应用中运行出错，需要尝试在设备上调试H5应用。 对于安卓应用，可在Chrome中调试手机应用。注意在编译壳的选项中，我们曾设置过：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;preference name=&quot;debuggable&quot; value=&quot;true&quot; /&gt;</span><br></pre></td></tr></table></figure></p>\n<p>在安卓手机上，打开USB调试选项（请自行搜索如果进入开发者模式及打开USB调试），连上电脑， 然后在Chrome地址栏中输入chrome://inspect即可进入设备调试。<br>注意：由于google的站点国内很难访问，如果调试页面打不开，须通过代理访问。<br>调试苹果应用，得用苹果电脑上的Safari浏览器。 由于苹果要求只有使用开发证书的App才能调试，所以要么用开发证书重新编译个用于调试的App壳，要么更简单地直接在Safari浏览器中调试。 先开启iPhone/iPad上的Safari的远程调试功能：“设置 &gt; Safari &gt; 高级” &gt; Web检查器选中。 将iphone插入电脑，弹出是否允许调试，选择“是”。 打开Safari，在“开发”菜单下可见有一行是 该手机的名字，里面显示有可调试的页面。<br>如果是首次在mac上使用safari时，应先激活“开发工具”菜单项： (menu)preference(偏好设置)-&gt;高级-&gt;在菜单栏中显示“开发”菜单。<br>如果以上调试环境很难配置成功，那么只能通过在代码中加alert来一点点逼近问题。<br>如果确定问题出在原生插件上，或者需要修改原生插件，那么只有搭建cordova工程，调试原生java或object-c代码。</p>\n"}],"PostAsset":[],"PostCategory":[{"post_id":"ck3jm8gvd0000z0bt155jb5a2","category_id":"ck3jm8gvl0004z0btqygthfv2","_id":"ck3jm8gvt000fz0btftqeniqx"},{"post_id":"ck3jm8gvj0002z0bt18kllm6u","category_id":"ck3jm8gvq000az0bteusg1fzk","_id":"ck3jm8gvv000lz0btdbqaqh3n"},{"post_id":"ck3jm8gvn0006z0btj0b5hkd2","category_id":"ck3jm8gvt000gz0bton8h5bnl","_id":"ck3jm8gvy000qz0bt7vmqmcih"},{"post_id":"ck3jm8gvo0008z0btgk5eikjr","category_id":"ck3jm8gvv000mz0bttmgjjc12","_id":"ck3jm8gw2000wz0bt0zapyn5t"},{"post_id":"ck3jm8gvp0009z0btpg6847p3","category_id":"ck3jm8gvt000gz0bton8h5bnl","_id":"ck3jm8gw40011z0bta570pvcf"},{"post_id":"ck3jm8gvq000dz0bt5ql5nwuh","category_id":"ck3jm8gw2000vz0bto1q3n0v8","_id":"ck3jm8gw6001az0btcb3j2ezb"},{"post_id":"ck3jm8gw40013z0btqj9yvlcy","category_id":"ck3jm8gw2000vz0bto1q3n0v8","_id":"ck3jm8gw8001ez0bt96zngpvs"},{"post_id":"ck3jm8gvs000ez0bttgwb0nld","category_id":"ck3jm8gw40014z0btmiknzocw","_id":"ck3jm8gw9001hz0bt79yc5dov"},{"post_id":"ck3jm8gw60019z0btf31ifpkv","category_id":"ck3jm8gvq000az0bteusg1fzk","_id":"ck3jm8gwa001lz0bte422s07o"},{"post_id":"ck3jm8gvu000iz0btascwqzfh","category_id":"ck3jm8gw7001bz0btbtekk4c3","_id":"ck3jm8gwc001oz0btik3ea9el"},{"post_id":"ck3jm8gvv000kz0btjct5zz94","category_id":"ck3jm8gw9001iz0bttiwclhj7","_id":"ck3jm8gwe001tz0bti4745khf"},{"post_id":"ck3jm8gwc001rz0bttjekpx83","category_id":"ck3jm8gvq000az0bteusg1fzk","_id":"ck3jm8gwf001xz0btp1wfajdq"},{"post_id":"ck3jm8gwd001sz0btw8fs4nj0","category_id":"ck3jm8gvq000az0bteusg1fzk","_id":"ck3jm8gwg001zz0bt7ijq0mcm"},{"post_id":"ck3jm8gvx000oz0btw9w3w7zw","category_id":"ck3jm8gwc001pz0bthy8dxq9e","_id":"ck3jm8gwg0022z0bt15diiprd"},{"post_id":"ck3jm8gvx000pz0bt0r5i2xxy","category_id":"ck3jm8gwc001pz0bthy8dxq9e","_id":"ck3jm8gwg0023z0bt7x9koba4"},{"post_id":"ck3jm8gw0000uz0btzgs9ct8h","category_id":"ck3jm8gwg0020z0btm91x1dwd","_id":"ck3jm8gwi002az0btl7yonpe8"},{"post_id":"ck3jm8gw2000xz0btyajl8x4t","category_id":"ck3jm8gwh0027z0bt7fhrw12k","_id":"ck3jm8gwj002ez0btvqktyxbx"},{"post_id":"ck3jm8gw30010z0bt0pdjlohl","category_id":"ck3jm8gwi002bz0btfz74hlvk","_id":"ck3jm8gwk002jz0btzz64f4au"},{"post_id":"ck3jm8gw50017z0btqnbtadjs","category_id":"ck3jm8gwc001pz0bthy8dxq9e","_id":"ck3jm8gwl002nz0btuvm4815b"},{"post_id":"ck3jm8gw7001dz0btq1caszig","category_id":"ck3jm8gwg0020z0btm91x1dwd","_id":"ck3jm8gwl002rz0btq6ciecz8"},{"post_id":"ck3jm8gw8001gz0bttv7ev0r1","category_id":"ck3jm8gwk002mz0btj8vo60ey","_id":"ck3jm8gwm002wz0bty3fko17n"},{"post_id":"ck3jm8gw9001kz0bt14yi9ndd","category_id":"ck3jm8gwk002mz0btj8vo60ey","_id":"ck3jm8gwn002zz0btnpb8ijkm"},{"post_id":"ck3jm8gwa001nz0btzdjh8jyr","category_id":"ck3jm8gwm002vz0btvhfojcko","_id":"ck3jm8gwo0034z0btep79yvf3"},{"post_id":"ck3jm8gvy000tz0bt3v2274x2","category_id":"ck3jm8gwg0020z0btm91x1dwd","_id":"ck3jm8gwq003dz0bty8knnlkg"},{"post_id":"ck3jm8gvy000tz0bt3v2274x2","category_id":"ck3jm8gwn0030z0bty60tgviz","_id":"ck3jm8gwr003fz0bt8ajwaecq"},{"post_id":"ck3jm8gvy000tz0bt3v2274x2","category_id":"ck3jm8gwo0037z0btamxmq61y","_id":"ck3jm8gwr003hz0bt7bs9pgq3"},{"post_id":"ck3jm8gxi004az0btyrdjp0e4","category_id":"ck3jm8gw40014z0btmiknzocw","_id":"ck3jm8gxq004fz0btnlsof1m4"},{"post_id":"ck3jm8gxj004bz0btfs4tbz7l","category_id":"ck3jm8gw9001iz0bttiwclhj7","_id":"ck3jm8gxq004gz0btv5zaxyvz"},{"post_id":"ck3jm8gxk004dz0bty1yndomt","category_id":"ck3jm8gwi002bz0btfz74hlvk","_id":"ck3jm8gxr004jz0bt19p5np1l"},{"post_id":"ck3jm8gxp004ez0btyy4kkdo3","category_id":"ck3jm8gw2000vz0bto1q3n0v8","_id":"ck3jm8gxr004lz0btk0q1l2vc"},{"post_id":"ck3jm8h06004qz0bty9y6jrkb","category_id":"ck3jm8h07004rz0btioyipp1a","_id":"ck3jm8h07004uz0btxz5ccina"}],"PostTag":[{"post_id":"ck3jm8gvd0000z0bt155jb5a2","tag_id":"ck3jm8gvm0005z0btsdkm4fme","_id":"ck3jm8gvq000cz0btpwg8j01i"},{"post_id":"ck3jm8gvj0002z0bt18kllm6u","tag_id":"ck3jm8gvq000bz0btl4pyqzvr","_id":"ck3jm8gvu000jz0btx9rz4bwh"},{"post_id":"ck3jm8gvn0006z0btj0b5hkd2","tag_id":"ck3jm8gvt000hz0btxmlzo9cn","_id":"ck3jm8gw3000zz0btcspe3opw"},{"post_id":"ck3jm8gvn0006z0btj0b5hkd2","tag_id":"ck3jm8gvw000nz0btg0egr2mw","_id":"ck3jm8gw40012z0bt64kgj8v3"},{"post_id":"ck3jm8gvn0006z0btj0b5hkd2","tag_id":"ck3jm8gvy000sz0bt6uyq3lmb","_id":"ck3jm8gw50016z0btykr08wzn"},{"post_id":"ck3jm8gvo0008z0btgk5eikjr","tag_id":"ck3jm8gw2000yz0btrm49mj9z","_id":"ck3jm8gw60018z0bt9m1fwafd"},{"post_id":"ck3jm8gvp0009z0btpg6847p3","tag_id":"ck3jm8gvt000hz0btxmlzo9cn","_id":"ck3jm8gw8001fz0btbmmgu8ta"},{"post_id":"ck3jm8gvq000dz0bt5ql5nwuh","tag_id":"ck3jm8gw7001cz0bt7o9ukap1","_id":"ck3jm8gwa001mz0btewjeozcf"},{"post_id":"ck3jm8gvs000ez0bttgwb0nld","tag_id":"ck3jm8gw9001jz0btvw5r7rox","_id":"ck3jm8gwf001wz0btb2myx3zy"},{"post_id":"ck3jm8gvs000ez0bttgwb0nld","tag_id":"ck3jm8gwc001qz0btttz75fru","_id":"ck3jm8gwg001yz0bt4ovm68jl"},{"post_id":"ck3jm8gvu000iz0btascwqzfh","tag_id":"ck3jm8gwe001vz0btmlvjp1s4","_id":"ck3jm8gwh0026z0bt5naf1bo4"},{"post_id":"ck3jm8gvu000iz0btascwqzfh","tag_id":"ck3jm8gwg0021z0bt82plrm2r","_id":"ck3jm8gwi0028z0bt17o5jpqx"},{"post_id":"ck3jm8gvv000kz0btjct5zz94","tag_id":"ck3jm8gwh0025z0bt5p4o55hc","_id":"ck3jm8gwi002dz0btrwnukd6r"},{"post_id":"ck3jm8gvv000kz0btjct5zz94","tag_id":"ck3jm8gwi0029z0btin1xarjm","_id":"ck3jm8gwj002gz0btmmz2fy7q"},{"post_id":"ck3jm8gvx000oz0btw9w3w7zw","tag_id":"ck3jm8gwi002cz0btbpj7y89w","_id":"ck3jm8gwk002lz0bt45mfjsnj"},{"post_id":"ck3jm8gvx000oz0btw9w3w7zw","tag_id":"ck3jm8gwj002hz0btp5g5p16z","_id":"ck3jm8gwl002oz0btzyvwgls8"},{"post_id":"ck3jm8gvx000pz0bt0r5i2xxy","tag_id":"ck3jm8gvq000bz0btl4pyqzvr","_id":"ck3jm8gwl002qz0bttmtwaddl"},{"post_id":"ck3jm8gvx000pz0bt0r5i2xxy","tag_id":"ck3jm8gwi002cz0btbpj7y89w","_id":"ck3jm8gwm002tz0btg67m1ce7"},{"post_id":"ck3jm8gvy000tz0bt3v2274x2","tag_id":"ck3jm8gwl002pz0btbyezh6ti","_id":"ck3jm8gwn002yz0btkqhaysko"},{"post_id":"ck3jm8gvy000tz0bt3v2274x2","tag_id":"ck3jm8gvq000bz0btl4pyqzvr","_id":"ck3jm8gwn0031z0btkyvebjxc"},{"post_id":"ck3jm8gvy000tz0bt3v2274x2","tag_id":"ck3jm8gwm002uz0btuhbz5cpi","_id":"ck3jm8gwo0033z0bttt5xfm2s"},{"post_id":"ck3jm8gw0000uz0btzgs9ct8h","tag_id":"ck3jm8gvq000bz0btl4pyqzvr","_id":"ck3jm8gwo0035z0bteqr5bmew"},{"post_id":"ck3jm8gw0000uz0btzgs9ct8h","tag_id":"ck3jm8gwl002pz0btbyezh6ti","_id":"ck3jm8gwp0038z0bt5npq1jv3"},{"post_id":"ck3jm8gw2000xz0btyajl8x4t","tag_id":"ck3jm8gwn0032z0btkc4nmxkd","_id":"ck3jm8gwp0039z0btfmo8coqh"},{"post_id":"ck3jm8gw30010z0bt0pdjlohl","tag_id":"ck3jm8gwo0036z0btokp5oasg","_id":"ck3jm8gwq003bz0btupvhnlo9"},{"post_id":"ck3jm8gw40013z0btqj9yvlcy","tag_id":"ck3jm8gw7001cz0bt7o9ukap1","_id":"ck3jm8gwr003ez0btv6xhtjbj"},{"post_id":"ck3jm8gw50017z0btqnbtadjs","tag_id":"ck3jm8gvq000bz0btl4pyqzvr","_id":"ck3jm8gwr003iz0bts58dkkcx"},{"post_id":"ck3jm8gw50017z0btqnbtadjs","tag_id":"ck3jm8gwi002cz0btbpj7y89w","_id":"ck3jm8gws003jz0btjsv2oncj"},{"post_id":"ck3jm8gw60019z0btf31ifpkv","tag_id":"ck3jm8gvq000bz0btl4pyqzvr","_id":"ck3jm8gwu003oz0btatskzyxi"},{"post_id":"ck3jm8gw60019z0btf31ifpkv","tag_id":"ck3jm8gwr003gz0bt6xv6f95m","_id":"ck3jm8gwu003pz0bt5x9iwd4g"},{"post_id":"ck3jm8gw60019z0btf31ifpkv","tag_id":"ck3jm8gws003kz0bt0cwjngbl","_id":"ck3jm8gwu003rz0btohu0utd1"},{"post_id":"ck3jm8gw60019z0btf31ifpkv","tag_id":"ck3jm8gwl002pz0btbyezh6ti","_id":"ck3jm8gwv003sz0btonc1mfdo"},{"post_id":"ck3jm8gw60019z0btf31ifpkv","tag_id":"ck3jm8gwt003mz0bt83zx7568","_id":"ck3jm8gwv003uz0btg17w776z"},{"post_id":"ck3jm8gw7001dz0btq1caszig","tag_id":"ck3jm8gwl002pz0btbyezh6ti","_id":"ck3jm8gwv003vz0bte3yinljz"},{"post_id":"ck3jm8gw8001gz0bttv7ev0r1","tag_id":"ck3jm8gwu003qz0bt2n4pe2mh","_id":"ck3jm8gww003xz0btjj2p5j62"},{"post_id":"ck3jm8gw8001gz0bttv7ev0r1","tag_id":"ck3jm8gwv003tz0bttsfbpsaa","_id":"ck3jm8gww003yz0bte6nw5ywr"},{"post_id":"ck3jm8gw9001kz0bt14yi9ndd","tag_id":"ck3jm8gwu003qz0bt2n4pe2mh","_id":"ck3jm8gww0040z0btrahqk50z"},{"post_id":"ck3jm8gwa001nz0btzdjh8jyr","tag_id":"ck3jm8gww003zz0bts2slfek9","_id":"ck3jm8gwy0043z0bt1xguxyo3"},{"post_id":"ck3jm8gwa001nz0btzdjh8jyr","tag_id":"ck3jm8gwx0041z0bte9dhpdmi","_id":"ck3jm8gwy0044z0bto70rqro8"},{"post_id":"ck3jm8gwc001rz0bttjekpx83","tag_id":"ck3jm8gvq000bz0btl4pyqzvr","_id":"ck3jm8gwz0046z0bt6glfipt9"},{"post_id":"ck3jm8gwc001rz0bttjekpx83","tag_id":"ck3jm8gws003kz0bt0cwjngbl","_id":"ck3jm8gwz0047z0bt2llif6jq"},{"post_id":"ck3jm8gwd001sz0btw8fs4nj0","tag_id":"ck3jm8gvq000bz0btl4pyqzvr","_id":"ck3jm8gwz0048z0btqc987zs1"},{"post_id":"ck3jm8gwd001sz0btw8fs4nj0","tag_id":"ck3jm8gwz0045z0btwcqfuobq","_id":"ck3jm8gx00049z0btpoljdltn"},{"post_id":"ck3jm8gxp004ez0btyy4kkdo3","tag_id":"ck3jm8gw7001cz0bt7o9ukap1","_id":"ck3jm8gxr004iz0bt9v29ieml"},{"post_id":"ck3jm8gxi004az0btyrdjp0e4","tag_id":"ck3jm8gxk004cz0btufaks1gk","_id":"ck3jm8gxr004kz0btqv816c4x"},{"post_id":"ck3jm8gxi004az0btyrdjp0e4","tag_id":"ck3jm8gw9001jz0btvw5r7rox","_id":"ck3jm8gxr004nz0bthtch7naq"},{"post_id":"ck3jm8gxj004bz0btfs4tbz7l","tag_id":"ck3jm8gxq004hz0btv24mlwkg","_id":"ck3jm8gxr004oz0bt4c69qra5"},{"post_id":"ck3jm8gxk004dz0bty1yndomt","tag_id":"ck3jm8gxr004mz0btupfj3r8s","_id":"ck3jm8gxs004pz0bt59snm4x9"},{"post_id":"ck3jm8h06004qz0bty9y6jrkb","tag_id":"ck3jm8h07004sz0btsa0kgv7b","_id":"ck3jm8h07004tz0bt9ipzk1hs"}],"Tag":[{"name":"video","_id":"ck3jm8gvm0005z0btsdkm4fme"},{"name":"vue","_id":"ck3jm8gvq000bz0btl4pyqzvr"},{"name":"git","_id":"ck3jm8gvt000hz0btxmlzo9cn"},{"name":"GitHub","_id":"ck3jm8gvw000nz0btg0egr2mw"},{"name":"GitLab","_id":"ck3jm8gvy000sz0bt6uyq3lmb"},{"name":"css3","_id":"ck3jm8gw2000yz0btrm49mj9z"},{"name":"css","_id":"ck3jm8gw7001cz0bt7o9ukap1"},{"name":"html5","_id":"ck3jm8gw9001jz0btvw5r7rox"},{"name":"cache","_id":"ck3jm8gwc001qz0btttz75fru"},{"name":"markdown","_id":"ck3jm8gwe001vz0btmlvjp1s4"},{"name":"blog","_id":"ck3jm8gwg0021z0bt82plrm2r"},{"name":"canvas","_id":"ck3jm8gwh0025z0bt5p4o55hc"},{"name":"粒子动画","_id":"ck3jm8gwi0029z0btin1xarjm"},{"name":"carousel","_id":"ck3jm8gwi002cz0btbpj7y89w"},{"name":"animate","_id":"ck3jm8gwj002hz0btp5g5p16z"},{"name":"webpack","_id":"ck3jm8gwl002pz0btbyezh6ti"},{"name":"compress","_id":"ck3jm8gwm002uz0btuhbz5cpi"},{"name":"webstorm","_id":"ck3jm8gwn0032z0btkc4nmxkd"},{"name":"NodeJs","_id":"ck3jm8gwo0036z0btokp5oasg"},{"name":"vuex","_id":"ck3jm8gwr003gz0bt6xv6f95m"},{"name":"axios","_id":"ck3jm8gws003kz0bt0cwjngbl"},{"name":"es6+","_id":"ck3jm8gwt003mz0bt83zx7568"},{"name":"WeChat","_id":"ck3jm8gwu003qz0bt2n4pe2mh"},{"name":"audio","_id":"ck3jm8gwv003tz0bttsfbpsaa"},{"name":"Eslint","_id":"ck3jm8gww003zz0bts2slfek9"},{"name":"Prettier","_id":"ck3jm8gwx0041z0bte9dhpdmi"},{"name":"npm","_id":"ck3jm8gwz0045z0btwcqfuobq"},{"name":"draggable","_id":"ck3jm8gxk004cz0btufaks1gk"},{"name":"cropper","_id":"ck3jm8gxq004hz0btv24mlwkg"},{"name":"sass","_id":"ck3jm8gxr004mz0btupfj3r8s"},{"name":"JDCloud","_id":"ck3jm8h07004sz0btsa0kgv7b"}]}}